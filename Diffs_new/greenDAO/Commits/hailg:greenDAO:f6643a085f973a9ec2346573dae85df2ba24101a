diff --git a/DaoCore/.classpath b/DaoCore/.classpath
index 7bc01d9a..51769745 100644
--- a/DaoCore/.classpath
+++ b/DaoCore/.classpath
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="gen"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
 	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.DEPENDENCIES"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="gen"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/DaoCore/AndroidManifest.xml b/DaoCore/AndroidManifest.xml
index 5e02a364..b818c6a7 100644
--- a/DaoCore/AndroidManifest.xml
+++ b/DaoCore/AndroidManifest.xml
@@ -3,6 +3,6 @@
       package="de.greenrobot.dao"
       android:versionCode="1"
       android:versionName="1.0">
-    <uses-sdk android:minSdkVersion="4" />
+    <uses-sdk android:minSdkVersion="4" android:targetSdkVersion="18"/>
 
 </manifest>
\ No newline at end of file
diff --git a/DaoCore/libs/android-support-v4.jar b/DaoCore/libs/android-support-v4.jar
new file mode 100644
index 00000000..cf12d283
Binary files /dev/null and b/DaoCore/libs/android-support-v4.jar differ
diff --git a/DaoCore/project.properties b/DaoCore/project.properties
index 96db7421..6905bdf0 100644
--- a/DaoCore/project.properties
+++ b/DaoCore/project.properties
@@ -9,4 +9,4 @@
 
 android.library=true
 # Project target.
-target=android-4
+target=android-18
diff --git a/DaoCore/src/de/greenrobot/dao/loader/AbstractLazyListLoader.java b/DaoCore/src/de/greenrobot/dao/loader/LazyListLoader.java
similarity index 91%
rename from DaoCore/src/de/greenrobot/dao/loader/AbstractLazyListLoader.java
rename to DaoCore/src/de/greenrobot/dao/loader/LazyListLoader.java
index 76e8ae6e..5b906669 100644
--- a/DaoCore/src/de/greenrobot/dao/loader/AbstractLazyListLoader.java
+++ b/DaoCore/src/de/greenrobot/dao/loader/LazyListLoader.java
@@ -9,21 +9,23 @@
 import de.greenrobot.dao.query.Query;
 
 @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-public class AbstractLazyListLoader<T> extends AsyncTaskLoader<LazyList<T>> {
+public class LazyListLoader<T> extends AsyncTaskLoader<LazyList<T>> {
 	
 	private LazyList<T> list;
 	private boolean cache;
 	private AbstractDao<T, Long> dao;
 	private Query<T> query;
 	
-	public AbstractLazyListLoader(Context context, boolean cache, Query<T> query, AbstractDao<T, Long> dao) {
+	public LazyListLoader(Context context, boolean cache, Query<T> query, AbstractDao<T, Long> dao) {
 		super(context);
 		this.cache = cache;
 		this.dao = dao;
+		this.query = query;
 	}
 
 	@Override
 	public LazyList<T> loadInBackground() {
+		query = query.forCurrentThread();
 		if (cache) {
 			list = query.listLazy();
 		} else {
@@ -79,12 +81,10 @@ public void onCanceled(LazyList<T> data) {
 	protected void onReset() {
 		super.onReset();
 		onStopLoading();
-		
 		if (list != null && !list.isClosed()) {
 			list.close();
 			list = null;
 		}
-		
 	}
 
 	public void insert(T... entities) {
@@ -139,7 +139,7 @@ public void delete(DeleteTaskCallback<T> callback, T... entities) {
 		InsertTaskCallback<T> callback;
 		
 		InsertTask(InsertTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -155,6 +155,7 @@ public void delete(DeleteTaskCallback<T> callback, T... entities) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesInserted(param);
 			}
@@ -165,7 +166,7 @@ protected void onPostExecute(T[] param) {
 		private UpdateTaskCallback<T> callback;
 		
 		UpdateTask(UpdateTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -181,6 +182,7 @@ protected void onPostExecute(T[] param) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesUpdated(param);
 			}
@@ -191,7 +193,7 @@ protected void onPostExecute(T[] param) {
 		InsertOrUpdateTaskCallback<T> callback;
 		
 		InsertOrUpdateTask(InsertOrUpdateTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -207,6 +209,7 @@ protected void onPostExecute(T[] param) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesInsertedOrUpdated(param);
 			}
@@ -217,7 +220,7 @@ protected void onPostExecute(T[] param) {
 		private DeleteTaskCallback<T> callback;
 		
 		DeleteTask(DeleteTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -233,6 +236,7 @@ protected void onPostExecute(T[] param) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesDeleted(param);
 			}
diff --git a/DaoCore/src/de/greenrobot/dao/loader/acl/AbstractLazyListLoader.java b/DaoCore/src/de/greenrobot/dao/loader/acl/LazyListLoader.java
similarity index 91%
rename from DaoCore/src/de/greenrobot/dao/loader/acl/AbstractLazyListLoader.java
rename to DaoCore/src/de/greenrobot/dao/loader/acl/LazyListLoader.java
index 740f4785..1793b586 100644
--- a/DaoCore/src/de/greenrobot/dao/loader/acl/AbstractLazyListLoader.java
+++ b/DaoCore/src/de/greenrobot/dao/loader/acl/LazyListLoader.java
@@ -6,21 +6,23 @@
 import de.greenrobot.dao.query.LazyList;
 import de.greenrobot.dao.query.Query;
 
-public class AbstractLazyListLoader<T> extends AsyncTaskLoader<LazyList<T>> {
+public class LazyListLoader<T> extends AsyncTaskLoader<LazyList<T>> {
 	
 	private LazyList<T> list;
 	private boolean cache;
 	private AbstractDao<T, Long> dao;
 	private Query<T> query;
 	
-	public AbstractLazyListLoader(Context context, boolean cache, Query<T> query, AbstractDao<T, Long> dao) {
+	public LazyListLoader(Context context, boolean cache, Query<T> query, AbstractDao<T, Long> dao) {
 		super(context);
 		this.cache = cache;
 		this.dao = dao;
+		this.query = query;
 	}
 
 	@Override
 	public LazyList<T> loadInBackground() {
+		query = query.forCurrentThread();
 		if (cache) {
 			list = query.listLazy();
 		} else {
@@ -76,12 +78,10 @@ public void onCanceled(LazyList<T> data) {
 	protected void onReset() {
 		super.onReset();
 		onStopLoading();
-		
 		if (list != null && !list.isClosed()) {
 			list.close();
 			list = null;
 		}
-		
 	}
 
 	public void insert(T... entities) {
@@ -136,7 +136,7 @@ public void delete(DeleteTaskCallback<T> callback, T... entities) {
 		InsertTaskCallback<T> callback;
 		
 		InsertTask(InsertTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -152,6 +152,7 @@ public void delete(DeleteTaskCallback<T> callback, T... entities) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesInserted(param);
 			}
@@ -162,7 +163,7 @@ protected void onPostExecute(T[] param) {
 		private UpdateTaskCallback<T> callback;
 		
 		UpdateTask(UpdateTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -178,6 +179,7 @@ protected void onPostExecute(T[] param) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesUpdated(param);
 			}
@@ -188,7 +190,7 @@ protected void onPostExecute(T[] param) {
 		InsertOrUpdateTaskCallback<T> callback;
 		
 		InsertOrUpdateTask(InsertOrUpdateTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -204,6 +206,7 @@ protected void onPostExecute(T[] param) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesInsertedOrUpdated(param);
 			}
@@ -214,7 +217,7 @@ protected void onPostExecute(T[] param) {
 		private DeleteTaskCallback<T> callback;
 		
 		DeleteTask(DeleteTaskCallback<T> callback) {
-			super(AbstractLazyListLoader.this);
+			super(LazyListLoader.this);
 			this.callback = callback;
 		}
 
@@ -230,6 +233,7 @@ protected void onPostExecute(T[] param) {
 		
 		@Override
 		protected void onPostExecute(T[] param) {
+			super.onPostExecute(param);
 			if (callback != null) {
 				callback.entitiesDeleted(param);
 			}
