diff --git a/DaoCore/src/de/greenrobot/dao/AbstractDao.java b/DaoCore/src/de/greenrobot/dao/AbstractDao.java
index 03963441..51349dfb 100644
--- a/DaoCore/src/de/greenrobot/dao/AbstractDao.java
+++ b/DaoCore/src/de/greenrobot/dao/AbstractDao.java
@@ -480,7 +480,7 @@ final protected T loadCurrent(Cursor cursor, int offset, boolean lock) {
         return Query.internalCreate(this, statements.getSelectAll() + where, selectionArg.toArray());
     }
 
-    protected void deleteAll() {
+    public void deleteAll() {
         // String sql = SqlUtils.createSqlDelete(config.tablename, null);
         // db.execSQL(sql);
 
@@ -491,14 +491,14 @@ protected void deleteAll() {
     }
 
     /** Deletes the given entity from the database. Currently, only single value PK entities are supported. */
-    protected void delete(T entity) {
+    public void delete(T entity) {
         assertSinglePk();
         K key = getKeyVerified(entity);
         deleteByKey(key);
     }
 
     /** Deletes an entity with the given PK from the database. Currently, only single value PK entities are supported. */
-    protected void deleteByKey(K key) {
+    public void deleteByKey(K key) {
         assertSinglePk();
         SQLiteStatement stmt = statements.getDeleteStatement();
         if (db.isDbLockedByCurrentThread()) {
@@ -583,7 +583,7 @@ private void deleteInTxInternal(Iterable<T> entities, Iterable<K> keys) {
      * @param entities
      *            The entities to delete.
      */
-    protected void deleteInTx(Iterable<T> entities) {
+    public void deleteInTx(Iterable<T> entities) {
         deleteInTxInternal(entities, null);
     }
 
@@ -593,7 +593,7 @@ protected void deleteInTx(Iterable<T> entities) {
      * @param entities
      *            The entities to delete.
      */
-    protected void deleteInTx(T... entities) {
+    public void deleteInTx(T... entities) {
         deleteInTxInternal(Arrays.asList(entities), null);
     }
 
@@ -603,7 +603,7 @@ protected void deleteInTx(T... entities) {
      * @param keys
      *            Keys of the entities to delete.
      */
-    protected void deleteByKeyInTx(Iterable<K> keys) {
+    public void deleteByKeyInTx(Iterable<K> keys) {
         deleteInTxInternal(null, keys);
     }
 
@@ -613,12 +613,12 @@ protected void deleteByKeyInTx(Iterable<K> keys) {
      * @param keys
      *            Keys of the entities to delete.
      */
-    protected void deleteByKeyInTx(K... keys) {
+    public void deleteByKeyInTx(K... keys) {
         deleteInTxInternal(null, Arrays.asList(keys));
     }
 
     /** Resets all locally changed properties of the entity by reloading the values from the database. */
-    protected void refresh(T entity) {
+    public void refresh(T entity) {
         assertSinglePk();
         K key = getKeyVerified(entity);
         String sql = statements.getSelectByKey();
@@ -639,7 +639,7 @@ protected void refresh(T entity) {
         }
     }
 
-    protected void update(T entity) {
+    public void update(T entity) {
         assertSinglePk();
         SQLiteStatement stmt = statements.getUpdateStatement();
         if (db.isDbLockedByCurrentThread()) {
