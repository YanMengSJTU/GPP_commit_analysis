diff --git a/DaoCore/src/de/greenrobot/dao/IdentityScope.java b/DaoCore/src/de/greenrobot/dao/IdentityScope.java
index 6ea4b01c..38875c09 100644
--- a/DaoCore/src/de/greenrobot/dao/IdentityScope.java
+++ b/DaoCore/src/de/greenrobot/dao/IdentityScope.java
@@ -16,7 +16,8 @@
 package de.greenrobot.dao;
 
 /**
- * Common interface for a identity scopes needed internally by greenDAO. Identity scopes let greenDAO re-use Java objects.
+ * Common interface for a identity scopes needed internally by greenDAO. Identity scopes let greenDAO re-use Java
+ * objects.
  * 
  * @author Markus
  * 
diff --git a/DaoExample/docs/greenDAO-javadoc.jar b/DaoExample/docs/greenDAO-javadoc.jar
index 3a3b6622..51df4738 100644
Binary files a/DaoExample/docs/greenDAO-javadoc.jar and b/DaoExample/docs/greenDAO-javadoc.jar differ
diff --git a/DaoExample/libs/greenDAO.jar b/DaoExample/libs/greenDAO.jar
index 4f2e8db5..e1e6e462 100644
Binary files a/DaoExample/libs/greenDAO.jar and b/DaoExample/libs/greenDAO.jar differ
diff --git a/DaoExample/src-gen/de/greenrobot/daoexample/Customer.java b/DaoExample/src-gen/de/greenrobot/daoexample/Customer.java
index b14dabea..e493d0f9 100644
--- a/DaoExample/src-gen/de/greenrobot/daoexample/Customer.java
+++ b/DaoExample/src-gen/de/greenrobot/daoexample/Customer.java
@@ -15,10 +15,10 @@
     private String name;
 
     /** Used to resolve relations */
-    private DaoSession daoSession;
+    private transient DaoSession daoSession;
 
     /** Used for active entity operations. */
-    private CustomerDao myDao;
+    private transient CustomerDao myDao;
 
     private List<Order> orders;
 
diff --git a/DaoExample/src-gen/de/greenrobot/daoexample/CustomerDao.java b/DaoExample/src-gen/de/greenrobot/daoexample/CustomerDao.java
index 32ce19be..961aff1b 100644
--- a/DaoExample/src-gen/de/greenrobot/daoexample/CustomerDao.java
+++ b/DaoExample/src-gen/de/greenrobot/daoexample/CustomerDao.java
@@ -18,6 +18,10 @@
 
     public static final String TABLENAME = "CUSTOMER";
 
+    /**
+     * Properties of entity Customer.<br/>
+     * Can be used for QueryBuilder and for referencing column names.
+    */
     public static class Properties {
         public final static Property Id = new Property(0, Long.class, "id", true, "_id");
         public final static Property Name = new Property(1, String.class, "name", false, "NAME");
@@ -37,10 +41,10 @@ public CustomerDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'CUSTOMER' (" + //
+        String constraint = ifNotExists? "IF NOT EXISTS ": "";
+        db.execSQL("CREATE TABLE " + constraint + "'CUSTOMER' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'NAME' TEXT NOT NULL );"; // 1: name
-        db.execSQL(sql);
+                "'NAME' TEXT NOT NULL );"); // 1: name
     }
 
     /** Drops the underlying database table. */
@@ -90,6 +94,7 @@ public void readEntity(Cursor cursor, Customer entity, int offset) {
         entity.setName(cursor.getString(offset + 1));
      }
     
+    /** @inheritdoc */
     @Override
     protected Long updateKeyAfterInsert(Customer entity, long rowId) {
         entity.setId(rowId);
diff --git a/DaoExample/src-gen/de/greenrobot/daoexample/NoteDao.java b/DaoExample/src-gen/de/greenrobot/daoexample/NoteDao.java
index 9e63988f..40b5bbc1 100644
--- a/DaoExample/src-gen/de/greenrobot/daoexample/NoteDao.java
+++ b/DaoExample/src-gen/de/greenrobot/daoexample/NoteDao.java
@@ -18,6 +18,10 @@
 
     public static final String TABLENAME = "NOTE";
 
+    /**
+     * Properties of entity Note.<br/>
+     * Can be used for QueryBuilder and for referencing column names.
+    */
     public static class Properties {
         public final static Property Id = new Property(0, Long.class, "id", true, "_id");
         public final static Property Text = new Property(1, String.class, "text", false, "TEXT");
@@ -36,12 +40,12 @@ public NoteDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'NOTE' (" + //
+        String constraint = ifNotExists? "IF NOT EXISTS ": "";
+        db.execSQL("CREATE TABLE " + constraint + "'NOTE' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'TEXT' TEXT NOT NULL ," + // 1: text
                 "'COMMENT' TEXT," + // 2: comment
-                "'DATE' INTEGER);"; // 3: date
-        db.execSQL(sql);
+                "'DATE' INTEGER);"); // 3: date
     }
 
     /** Drops the underlying database table. */
@@ -99,6 +103,7 @@ public void readEntity(Cursor cursor, Note entity, int offset) {
         entity.setDate(cursor.isNull(offset + 3) ? null : new java.util.Date(cursor.getLong(offset + 3)));
      }
     
+    /** @inheritdoc */
     @Override
     protected Long updateKeyAfterInsert(Note entity, long rowId) {
         entity.setId(rowId);
diff --git a/DaoExample/src-gen/de/greenrobot/daoexample/Order.java b/DaoExample/src-gen/de/greenrobot/daoexample/Order.java
index f4518381..345eb7fc 100644
--- a/DaoExample/src-gen/de/greenrobot/daoexample/Order.java
+++ b/DaoExample/src-gen/de/greenrobot/daoexample/Order.java
@@ -14,10 +14,10 @@
     private long customerId;
 
     /** Used to resolve relations */
-    private DaoSession daoSession;
+    private transient DaoSession daoSession;
 
     /** Used for active entity operations. */
-    private OrderDao myDao;
+    private transient OrderDao myDao;
 
     private Customer customer;
     private Long customer__resolvedKey;
diff --git a/DaoExample/src-gen/de/greenrobot/daoexample/OrderDao.java b/DaoExample/src-gen/de/greenrobot/daoexample/OrderDao.java
index 1c5d1930..ce947bec 100644
--- a/DaoExample/src-gen/de/greenrobot/daoexample/OrderDao.java
+++ b/DaoExample/src-gen/de/greenrobot/daoexample/OrderDao.java
@@ -23,6 +23,10 @@
 
     public static final String TABLENAME = "ORDERS";
 
+    /**
+     * Properties of entity Order.<br/>
+     * Can be used for QueryBuilder and for referencing column names.
+    */
     public static class Properties {
         public final static Property Id = new Property(0, Long.class, "id", true, "_id");
         public final static Property Date = new Property(1, java.util.Date.class, "date", false, "DATE");
@@ -44,11 +48,11 @@ public OrderDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'ORDERS' (" + //
+        String constraint = ifNotExists? "IF NOT EXISTS ": "";
+        db.execSQL("CREATE TABLE " + constraint + "'ORDERS' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'DATE' INTEGER," + // 1: date
-                "'CUSTOMER_ID' INTEGER NOT NULL );"; // 2: customerId
-        db.execSQL(sql);
+                "'CUSTOMER_ID' INTEGER NOT NULL );"); // 2: customerId
     }
 
     /** Drops the underlying database table. */
@@ -105,6 +109,7 @@ public void readEntity(Cursor cursor, Order entity, int offset) {
         entity.setCustomerId(cursor.getLong(offset + 2));
      }
     
+    /** @inheritdoc */
     @Override
     protected Long updateKeyAfterInsert(Order entity, long rowId) {
         entity.setId(rowId);
diff --git a/DaoExampleGenerator/lib/greenDAO-generator-javadoc.jar b/DaoExampleGenerator/lib/greenDAO-generator-javadoc.jar
index 7209e9ca..a7faf51f 100644
Binary files a/DaoExampleGenerator/lib/greenDAO-generator-javadoc.jar and b/DaoExampleGenerator/lib/greenDAO-generator-javadoc.jar differ
diff --git a/DaoExampleGenerator/lib/greenDAO-generator.jar b/DaoExampleGenerator/lib/greenDAO-generator.jar
index 39b39bd9..c676a815 100644
Binary files a/DaoExampleGenerator/lib/greenDAO-generator.jar and b/DaoExampleGenerator/lib/greenDAO-generator.jar differ
diff --git a/README.md b/README.md
index 016c23f9..db8445cb 100644
--- a/README.md
+++ b/README.md
@@ -6,7 +6,7 @@ Home page, documentation, and support links: http://greendao-orm.com/
 
 Release History
 ---------------
-### V1.2.0 RC (to be released 2012-06-??): Feature release
+### V1.2.0 (2012-06-08): Feature release
 * Limited support of String PKs (no relations using String FKs yet)
 * Fixed index creation (please update your schema)
 * Added CountQuery for creating SELECT COUNT (*) queries with QueryBuilder
