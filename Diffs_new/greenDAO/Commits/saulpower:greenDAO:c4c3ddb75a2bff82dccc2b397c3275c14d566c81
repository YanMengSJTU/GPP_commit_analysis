diff --git a/DaoCore/src/de/greenrobot/dao/sync/SyncUri.java b/DaoCore/src/de/greenrobot/dao/sync/SyncUri.java
index c4306edc..79b2fedd 100644
--- a/DaoCore/src/de/greenrobot/dao/sync/SyncUri.java
+++ b/DaoCore/src/de/greenrobot/dao/sync/SyncUri.java
@@ -14,7 +14,7 @@
     private volatile String uriString;
     private Class clazz;
 
-    public SyncUri(LinkedList<PathPart> path, Part pagination, LinkedList<Part> include) {
+    private SyncUri(LinkedList<PathPart> path, Part pagination, LinkedList<Part> include) {
         this.path = path;
         this.pagination = pagination;
         this.include = include;
@@ -93,7 +93,11 @@ public Builder pluralizePathNames() {
         }
 
         public Builder appendClass(Class clazz) {
-            return part(path, PathPart.fromClass(clazz));
+            return part(path, PathPart.fromClass(clazz, pluralize));
+        }
+
+        public Builder appendClass(Class clazz, String endpointName) {
+            return part(path, PathPart.fromClass(clazz, endpointName));
         }
 
         public Builder appendId(String id) {
@@ -101,7 +105,11 @@ public Builder appendId(String id) {
         }
 
         public Builder appendObject(Class clazz, String id) {
-            return part(path, PathPart.fromClass(clazz)).part(path, PathPart.fromId(id));
+            return part(path, PathPart.fromClass(clazz, pluralize)).part(path, PathPart.fromId(id));
+        }
+
+        public Builder appendObject(Class clazz, String endpointName, String id) {
+            return part(path, PathPart.fromClass(clazz, endpointName)).part(path, PathPart.fromId(id));
         }
 
         public Builder appendInclude(String include) {
@@ -149,8 +157,12 @@ boolean isClass() {
             return clazz != null;
         }
 
-        static PathPart fromClass(Class clazz) {
-            return from(pluralize(clazz.getSimpleName()), clazz);
+        static PathPart fromClass(Class clazz, boolean pluralize) {
+            return from(pluralize(clazz.getSimpleName(), pluralize), clazz);
+        }
+
+        static PathPart fromClass(Class clazz, String value) {
+            return from(value, clazz);
         }
 
         static PathPart fromId(String id) {
@@ -166,7 +178,12 @@ static PathPart from(String value, Class clazz) {
             return new PathPart(value, clazz);
         }
 
-        static String pluralize(String name) {
+        static String pluralize(String name, boolean pluralize) {
+
+            if (!pluralize) {
+                return name;
+            }
+
             char last = name.charAt(name.length() - 1);
 
             if (last == 'y') {
diff --git a/settings.gradle b/settings.gradle
index a1b3f84e..870c25dc 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,2 +1,2 @@
 include 'DaoCore', 'DaoGenerator', 'DaoExampleGenerator', 'DaoExample'
-include 'DaoTest' // Travis needs some Android setup for this
\ No newline at end of file
+//include 'DaoTest' // Travis needs some Android setup for this
\ No newline at end of file
