diff --git a/DaoExampleGenerator/src/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java b/DaoExampleGenerator/src/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java
index bee2a683..67817e5a 100644
--- a/DaoExampleGenerator/src/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java
+++ b/DaoExampleGenerator/src/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java
@@ -89,4 +89,6 @@ private static void addCustomerOrder(Schema schema) {
         customerToOrders.orderAsc(orderDate);
     }
 
+    
+ 
 }
diff --git a/DaoGenerator/src-template/dao-cursor-helper.ftl b/DaoGenerator/src-template/dao-cursor-helper.ftl
new file mode 100644
index 00000000..f9a29a9c
--- /dev/null
+++ b/DaoGenerator/src-template/dao-cursor-helper.ftl
@@ -0,0 +1,81 @@
+ 
+
+<#--
+############################## readContentValue ############################## 
+-->
+    public ContentValues readContentValues(Cursor cursor, int offset) {
+        ContentValues values = new ContentValues();
+<#list entity.properties as property> 
+        values.put(Properties.${property.propertyName?cap_first}.columnName,cursor.isNull(offset + ${property_index})? null: cursor.get${toCursorType[property.propertyType]}(offset + ${property_index})  );
+</#list>  
+        return values;
+    }
+
+    public ContentValues readContentValues(${entity.className} entity) {
+        ContentValues values = new ContentValues();
+<#list entity.properties as property> 
+        values.put(Properties.${property.propertyName?cap_first}.columnName, <#if
+   property.propertyType == "Date">entity.get${property.propertyName?cap_first}()==null? null: entity.get${property.propertyName?cap_first}().getTime() <#elseif 
+   property.notNull>entity.get${property.propertyName?cap_first}() <#else
+   > entity.get${property.propertyName?cap_first}() </#if
+   >);
+</#list>  
+        return values;
+    }    
+
+     public ${entity.className} readEntity(ContentValues values) {
+        ${entity.className} entity = new ${entity.className}();
+<#list entity.properties as property>   
+        entity.set${property.propertyName?cap_first}(<#if
+   property.propertyType == "Date">values.getAs${toContentValueType[property.propertyType]}(Properties.${property.propertyName?cap_first}.columnName)==null? null: new ${property.javaType}(values.getAs${toContentValueType[property.propertyType]}(Properties.${property.propertyName?cap_first}.columnName)) <#else
+   >values.getAs${toContentValueType[property.propertyType]}(Properties.${property.propertyName?cap_first}.columnName)</#if
+   >); 
+</#list>        
+        //   attachEntity(entity)
+        return entity;
+     }
+ <#--
+############################## cursorHelper ############################## 
+--> 
+
+    public ${entity.className}CursorHelper get${entity.className}CursorHelper(Cursor cursor){
+        return new ${entity.className}CursorHelper().initWrapper(cursor);
+    }
+    
+    public static class ${entity.className}CursorHelper {
+        
+        boolean isNotInit = true;
+        
+<#list entity.properties as property>        
+        public int ${property.propertyName}Idx = -1;
+</#list>          
+
+        public ${entity.className}CursorHelper initWrapper(Cursor cursor) { 
+<#list entity.properties as property>        
+            ${property.propertyName}Idx = cursor.getColumnIndex(Properties.${property.propertyName?cap_first}.columnName);
+</#list>     
+            isNotInit = false;
+            return this;
+        }
+
+         
+        
+<#list entity.properties as property>    
+        public ${property.javaType} get${property.propertyName?cap_first}(Cursor cursor) {   
+            ${toCursorType[property.propertyType]} cursorVal = cursor.get${toCursorType[property.propertyType]}(${property.propertyName}Idx);
+         <#if  property.propertyType == "Date"
+>            return new ${property.javaType}(cursorVal);<#else
+>            return cursorVal;</#if>   
+        }          
+
+  <#if  property.propertyType == "Date">     
+        public ${toCursorType[property.propertyType]} get${property.propertyName?cap_first}Db(Cursor cursor) {   
+            return cursor.get${toCursorType[property.propertyType]}(${property.propertyName}Idx);
+        }          
+  </#if>       
+</#list>     
+         
+    }
+        
+
+    
diff --git a/DaoGenerator/src-template/dao.ftl b/DaoGenerator/src-template/dao.ftl
index 45499d80..83a382c3 100644
--- a/DaoGenerator/src-template/dao.ftl
+++ b/DaoGenerator/src-template/dao.ftl
@@ -183,40 +183,8 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
 </#if>  
     }    
 
-<#--
-############################## readContentValue ############################## 
--->
-    public ContentValues readContentValues(Cursor cursor, int offset) {
-        ContentValues values = new ContentValues();
-<#list entity.properties as property> 
-        values.put(Properties.${property.propertyName?cap_first}.columnName,cursor.isNull(offset + ${property_index})? null: cursor.get${toCursorType[property.propertyType]}(offset + ${property_index})  );
-</#list>  
-        return values;
-    }
 
-    public ContentValues readContentValues(${entity.className} entity) {
-        ContentValues values = new ContentValues();
-<#list entity.properties as property> 
-        values.put(Properties.${property.propertyName?cap_first}.columnName, <#if
-   property.propertyType == "Date">entity.get${property.propertyName?cap_first}()==null? null: entity.get${property.propertyName?cap_first}().getTime() <#elseif 
-   property.notNull>entity.get${property.propertyName?cap_first}() <#else
-   > entity.get${property.propertyName?cap_first}() </#if
-   >);
-</#list>  
-        return values;
-    }    
-
-     public ${entity.className} readEntity(ContentValues values) {
-        ${entity.className} entity = new ${entity.className}();
-<#list entity.properties as property>   
-        entity.set${property.propertyName?cap_first}(<#if
-   property.propertyType == "Date">values.getAs${toContentValueType[property.propertyType]}(Properties.${property.propertyName?cap_first}.columnName)==null? null: new ${property.javaType}(values.getAs${toContentValueType[property.propertyType]}(Properties.${property.propertyName?cap_first}.columnName)) <#else
-   >values.getAs${toContentValueType[property.propertyType]}(Properties.${property.propertyName?cap_first}.columnName)</#if
-   >); 
-</#list>        
-        //   attachEntity(entity)
-        return entity;
-     }
+   
  
     /** @inheritdoc */
     @Override
@@ -248,7 +216,9 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
         return entity;
 <#else>
 <#--
-############################## readEntity non-protobuff, setters ############################## 
+##########<#--
+############################## readContentValue ############################## 
+-->#################### readEntity non-protobuff, setters ############################## 
 -->
         ${entity.className} entity = new ${entity.className}();
         readEntity(cursor, entity, offset);
@@ -337,4 +307,10 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
 <#if entity.toOneRelations?has_content>
     <#include "dao-deep.ftl">
 </#if>
+
+<#--
+############################## readContentValue ############################## 
+-->
+<#include "dao-cursor-helper.ftl">
+
 }
