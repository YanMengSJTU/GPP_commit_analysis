diff --git a/DaoCore/src/de/greenrobot/dao/AbstractDao.java b/DaoCore/src/de/greenrobot/dao/AbstractDao.java
index 8a904680..bbf5c5c7 100644
--- a/DaoCore/src/de/greenrobot/dao/AbstractDao.java
+++ b/DaoCore/src/de/greenrobot/dao/AbstractDao.java
@@ -142,7 +142,7 @@ public T load(K key) throws SQLException {
     public T loadByRowId(long rowId) throws SQLException {
         String sql = statements.getSelectByRowId();
         PreparedStatement statement = connection.prepareStatement( sql );
-        statement.setString( 0, Long.toString(rowId) );
+        statement.setString( 1, Long.toString(rowId) );
         ResultSet resultSet = statement.executeQuery();
         return loadUniqueAndCloseCursor(resultSet);
     }
@@ -646,7 +646,7 @@ public void refresh(T entity) throws SQLException {
         K key = getKeyVerified(entity);
         String sql = statements.getSelectByKey();
         PreparedStatement statement = connection.prepareStatement( sql );
-        statement.setString( 0, key.toString() );
+        statement.setString( 1, key.toString() );
         ResultSet resultSet = statement.executeQuery();
         try {
             boolean available = resultSet.next();
diff --git a/DaoCore/src/de/greenrobot/dao/query/Query.java b/DaoCore/src/de/greenrobot/dao/query/Query.java
index c10025c2..fa030c45 100644
--- a/DaoCore/src/de/greenrobot/dao/query/Query.java
+++ b/DaoCore/src/de/greenrobot/dao/query/Query.java
@@ -146,7 +146,8 @@ public void setOffset(int offset) throws DaoException {
         PreparedStatement statement = connection.prepareStatement( sql );
         for ( int i = 0; i < parameters.length; i++ )
 		{
-			statement.setString( i, parameters[i] );
+        	int index = i + 1;
+			statement.setString( index, parameters[i] );
 		}
         ResultSet resultSet = statement.executeQuery();
         return new LazyList<T>(daoAccess, resultSet, true);
@@ -163,7 +164,8 @@ public void setOffset(int offset) throws DaoException {
         PreparedStatement statement = connection.prepareStatement( sql );
         for ( int i = 0; i < parameters.length; i++ )
 		{
-			statement.setString( i, parameters[i] );
+        	int index = i + 1;
+			statement.setString( index, parameters[i] );
 		}
         ResultSet resultSet = statement.executeQuery();
         return new LazyList<T>(daoAccess, resultSet, false);
@@ -192,7 +194,8 @@ public T unique() throws SQLException {
         PreparedStatement statement = connection.prepareStatement( sql );
         for ( int i = 0; i < parameters.length; i++ )
 		{
-			statement.setString( i, parameters[i] );
+        	int index = i + 1;
+			statement.setString( index, parameters[i] );
 		}
         ResultSet resultSet = statement.executeQuery();
         return daoAccess.loadUniqueAndCloseCursor(resultSet);
