diff --git a/DaoGenerator/build.gradle b/DaoGenerator/build.gradle
index a5b24969..714f38f5 100644
--- a/DaoGenerator/build.gradle
+++ b/DaoGenerator/build.gradle
@@ -1,24 +1,25 @@
 apply plugin: 'java'
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-group = 'de.greenrobot'
-archivesBaseName = 'greendao-generator'
-version = '3.1.1-SNAPSHOT'
-sourceCompatibility = 1.7
-
-ext {
-    sonatypeUsername = "admin"
-    sonatypePassword = "password"
-}
-
-def isSnapshot = version.endsWith('-SNAPSHOT')
-def sonatypeRepositoryUrl
-if(isSnapshot) {
-    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
-} else {
-    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
+//apply plugin: 'maven'
+//apply plugin: 'signing'
+
+//
+//group = 'de.greenrobot'
+//archivesBaseName = 'greendao-generator'
+//version = '3.1.1-SNAPSHOT'
+//sourceCompatibility = 1.7
+//
+//ext {
+//    sonatypeUsername = "admin"
+//    sonatypePassword = "password"
+//}
+//
+//def isSnapshot = version.endsWith('-SNAPSHOT')
+//def sonatypeRepositoryUrl
+//if(isSnapshot) {
+//    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
+//} else {
+//    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
+//}
 
 repositories {
     mavenCentral()
@@ -87,72 +88,141 @@ artifacts {
     archives sourcesJar
 }
 
-signing {
-    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
-    project.hasProperty('signing.secretKeyRingFile')) {
-        sign configurations.archives
-    } else {
-        println "Signing information missing/incomplete for ${project.name}"
-        sign configurations.archives
-    }
+//signing {
+//    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
+//    project.hasProperty('signing.secretKeyRingFile')) {
+//        sign configurations.archives
+//    } else {
+//        println "Signing information missing/incomplete for ${project.name}"
+//        sign configurations.archives
+//    }
+//}
+//
+//
+//
+//uploadArchives {
+//    repositories {
+//        mavenDeployer {
+//            if(project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername')
+//                && project.hasProperty('preferedPassword')) {
+//                configuration = configurations.deployerJars
+//                repository(url: preferedRepo) {
+//                    authentication(userName: preferedUsername, password: preferedPassword)
+//                }
+//            } else if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
+//                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
+//                repository(url: sonatypeRepositoryUrl) {
+//                    authentication(userName: sonatypeUsername, password: sonatypePassword)
+//                }
+//            } else {
+//                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
+//            }
+//
+//            pom.project {
+//               name 'greenDAO Generator'
+//               packaging 'jar'
+//               description 'Code generator for greenDAO, the light and fast ORM for Android'
+//               url 'http://greendao-orm.com'
+//
+//               scm {
+//                   url 'https://github.com/greenrobot/greenDAO'
+//                   connection 'scm:git@github.com:greenrobot/greenDAO.git'
+//                   developerConnection 'scm:git@github.com:greenrobot/greenDAO.git'
+//               }
+//
+//               licenses {
+//                   license {
+//                       name 'GNU General Public License, Version 3'
+//                       url 'http://www.gnu.org/licenses/gpl.txt'
+//                       distribution 'repo'
+//                   }
+//               }
+//
+//               developers {
+//                   developer {
+//                       id 'greenrobot'
+//                       name 'greenrobot'
+//                   }
+//               }
+//
+//               issueManagement {
+//                   system 'GitHub Issues'
+//                   url 'https://github.com/greenrobot/greenDAO/issues'
+//               }
+//
+//               organization {
+//                   name 'greenrobot'
+//                   url 'http://greenrobot.de'
+//               }
+//           }
+//        }
+//    }
+//}
+//
+
+
+ext {
+    bintrayRepo = 'maven'
+    bintrayName = 'DaoGenerator'
+
+    publishedGroupId = 'com.lijinchao'
+    libraryName = 'DaoGenerator'
+    artifact = 'DaoGenerator'
+
+    libraryDescription = 'just print hello'
+
+    siteUrl = 'https://github.com/jcenter/greenDAO'
+    gitUrl = 'https://github.com/jcenter/greenDAO.git'
+
+    libraryVersion = '3.1.2'
+
+
+    developerId = 'lijinchao2007'
+    developerName = 'lijinchao2007'
+    developerEmail = 'lijinchao2007@163.com'
+
+    licenseName = 'The Apache Software License, Version 2.0'
+    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
+    allLicenses = ["Apache-2.0"]
 }
 
+apply plugin: 'com.jfrog.bintray'
 
-uploadArchives {
-    repositories {
-        mavenDeployer {
-            if(project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername')
-                && project.hasProperty('preferedPassword')) {
-                configuration = configurations.deployerJars
-                repository(url: preferedRepo) {
-                    authentication(userName: preferedUsername, password: preferedPassword)
-                }
-            } else if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-                repository(url: sonatypeRepositoryUrl) {
-                    authentication(userName: sonatypeUsername, password: sonatypePassword)
-                }
-            } else {
-                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
-            }
+version = libraryVersion
+group = publishedGroupId
+archivesBaseName = artifact
+
+artifacts {
+    archives jar
+    archives javadocJar
+    archives sourcesJar
+}
 
-            pom.project {
-               name 'greenDAO Generator'
-               packaging 'jar'
-               description 'Code generator for greenDAO, the light and fast ORM for Android'
-               url 'http://greendao-orm.com'
-
-               scm {
-                   url 'https://github.com/greenrobot/greenDAO'
-                   connection 'scm:git@github.com:greenrobot/greenDAO.git'
-                   developerConnection 'scm:git@github.com:greenrobot/greenDAO.git'
-               }
-
-               licenses {
-                   license {
-                       name 'GNU General Public License, Version 3'
-                       url 'http://www.gnu.org/licenses/gpl.txt'
-                       distribution 'repo'
-                   }
-               }
-
-               developers {
-                   developer {
-                       id 'greenrobot'
-                       name 'greenrobot'
-                   }
-               }
-
-               issueManagement {
-                   system 'GitHub Issues'
-                   url 'https://github.com/greenrobot/greenDAO/issues'
-               }
-
-               organization {
-                   name 'greenrobot'
-                   url 'http://greenrobot.de'
-               }
-           }
+// Bintray
+Properties properties = new Properties()
+properties.load(project.rootProject.file('local.properties').newDataInputStream())
+
+bintray {
+    user = properties.getProperty("bintray.user")
+    key = properties.getProperty("bintray.apikey")
+
+    configurations = ['archives']
+    pkg {
+        repo = bintrayRepo
+        name = bintrayName
+        desc = libraryDescription
+        websiteUrl = siteUrl
+        vcsUrl = gitUrl
+        licenses = allLicenses
+        publish = true
+        publicDownloadNumbers = true
+        version {
+            desc = libraryDescription
+            gpg {
+                sign = true //Determines whether to GPG sign the files. The default is false
+                passphrase = properties.getProperty("bintray.gpg.password")
+                //Optional. The passphrase for GPG signing'
+            }
         }
     }
 }
diff --git a/DaoGenerator/mybuild.xml b/DaoGenerator/mybuild.xml
deleted file mode 100644
index 72ae38f0..00000000
--- a/DaoGenerator/mybuild.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<!--
-
-Copyright (C) 2011 Markus Junginger, greenrobot (http://greenrobot.de)     
-                                                                           
-This file is part of greenDAO Generator.                                   
-                                                                           
-greenDAO Generator is free software: you can redistribute it and/or modify 
-it under the terms of the GNU General Public License as published by       
-the Free Software Foundation, either version 3 of the License, or          
-(at your option) any later version.                                        
-greenDAO Generator is distributed in the hope that it will be useful,      
-but WITHOUT ANY WARRANTY; without even the implied warranty of             
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              
-GNU General Public License for more details.                               
-                                                                           
-You should have received a copy of the GNU General Public License          
-along with greenDAO Generator.  If not, see <http://www.gnu.org/licenses/>.
-
--->
-<project name="DaoGenerator" default="build-generator">
-
-    <property name="version" value="1.3.0-SNAPSHOT" />
-	
-	<target name="build-generator" depends="delete-release, build-jar, build-javadoc"></target>
-	
-	<target name="delete-release">
-		<delete dir="release" />
-	</target>
-	
-	<target name="build-jar" description="Depends on Eclipse to have everthing compiled into bin/">
-		<mkdir dir="release" />
-		<jar jarfile="release/greenDAO-generator-${version}.jar" basedir="bin"/>
-	</target>
-
-	<target name="build-javadoc" description="Creates javadoc for classes">
-	    <delete dir="release/docs/api" />
-		<mkdir dir="release/docs/api" />
-		<javadoc destdir="release/docs/api" author="false" version="false" use="true" windowtitle="greenDAO generator API">
-		    <packageset dir="src" defaultexcludes="yes">
-	              <include name="de/greenrobot/daogenerator/**"/>
-		    </packageset>
-			<doctitle><![CDATA[<h1>greenDAO generator API</h1>]]></doctitle>
-		    <bottom><![CDATA[<i>Copyright &#169; 2011-2013 greenrobot.de. All Rights Reserved.</i>]]></bottom>
-		</javadoc>
-        <jar jarfile="release/greenDAO-generator-${version}-javadoc.jar" basedir="release/docs/api"/>
-	</target>
-
-    <target name="refresh-example-jars" description="(Also builds DaoCore and DaoGenerator)">
-        <ant antfile="../DaoCore/mybuild.xml" dir="../DaoCore/"/>
-        <antcall target="build-generator"></antcall>
-        <copy file="../DaoCore/release/greenDAO-${version}.jar" todir="../DaoExample/libs" ></copy>
-        <copy file="../DaoCore/release/greenDAO-${version}-javadoc.jar" todir="../DaoExample/docs" ></copy>
-        <copy file="release/greenDAO-generator-${version}.jar" todir="../DaoExampleGenerator/lib" ></copy>
-        <copy file="release/greenDAO-generator-${version}-javadoc.jar" todir="../DaoExampleGenerator/lib" ></copy>
-    </target>
-	
-	<target name="build-starter-package" description="Builds everything">
-    	<delete dir="release/example"/>
-        <antcall target="refresh-example-jars" />
-
-        <copy todir="release/example/javadoc/greendao" >
-            <fileset dir="../DaoCore/release/docs/api/"/>
-        </copy>
-        <copy todir="release/example/javadoc/greendao-generator" >
-            <fileset dir="release/docs/api/"/>
-        </copy>
-        <copy todir="release/example/DaoExample" >
-            <fileset dir="../DaoExample"/>
-        </copy>
-        <copy todir="release/example/DaoExampleGenerator" >
-            <fileset dir="../DaoExampleGenerator"/>
-        </copy>
-        <copy file="../DaoCore/release/greenDAO-${version}.jar" todir="release/example/" ></copy>
-        <copy file="../DaoCore/release/greenDAO-${version}-javadoc.jar" todir="release/example/" ></copy>
-        <copy file="release/greenDAO-generator-${version}.jar" todir="release/example/" ></copy>
-        <copy file="release/greenDAO-generator-${version}-javadoc.jar" todir="release/example/" ></copy>
-    	<zip destfile="release/greenDAO-${version}.zip" basedir="release/example/"></zip>
-    </target>
-
-</project>
diff --git a/build.gradle b/build.gradle
index 6a01e479..f7120182 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,6 +5,22 @@ subprojects {
     }
 }
 
+buildscript {
+    repositories {
+        jcenter()
+        mavenCentral()
+        maven {
+            url "https://oss.sonatype.org/content/repositories/snapshots/"
+        }
+    }
+
+    dependencies {
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
+        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
+    }
+}
+
+
 task wrapper(type: Wrapper) {
     gradleVersion = '2.4'
 }
