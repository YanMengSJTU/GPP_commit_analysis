diff --git a/DaoGenerator/src/org/greenrobot/greendao/generator/DaoGenerator.java b/DaoGenerator/src/org/greenrobot/greendao/generator/DaoGenerator.java
index bc49738e..4bbb2bca 100644
--- a/DaoGenerator/src/org/greenrobot/greendao/generator/DaoGenerator.java
+++ b/DaoGenerator/src/org/greenrobot/greendao/generator/DaoGenerator.java
@@ -31,6 +31,7 @@
 import freemarker.template.Configuration;
 import freemarker.template.Template;
 import freemarker.template.TemplateNotFoundException;
+import freemarker.template.Version;
 
 /**
  * Once you have your model created, use this class to generate entities and DAOs.
@@ -39,6 +40,8 @@
  */
 public class DaoGenerator {
 
+    private static final Version CONFIG_VERSION = Configuration.VERSION_2_3_23;
+
     private Pattern patternKeepIncludes;
     private Pattern patternKeepFields;
     private Pattern patternKeepMethods;
@@ -51,6 +54,10 @@
     private Template templateContentProvider;
 
     public DaoGenerator() throws IOException {
+        this(null);
+    }
+
+    public DaoGenerator(File templatesDir) throws IOException {
         System.out.println("greenDAO Generator");
         System.out.println("Copyright 2011-2016 Markus Junginger, greenrobot.de. Licensed under GPL V3.");
         System.out.println("This program comes with ABSOLUTELY NO WARRANTY");
@@ -59,7 +66,9 @@ public DaoGenerator() throws IOException {
         patternKeepFields = compilePattern("FIELDS");
         patternKeepMethods = compilePattern("METHODS");
 
-        Configuration config = getConfiguration("dao.ftl");
+        Configuration config = templatesDir == null || !templatesDir.isDirectory()
+            ? getConfiguration("dao.ftl")
+            : getConfiguration(templatesDir, "dao.ftl");
         templateDao = config.getTemplate("dao.ftl");
         templateDaoMaster = config.getTemplate("dao-master.ftl");
         templateDaoSession = config.getTemplate("dao-session.ftl");
@@ -69,7 +78,7 @@ public DaoGenerator() throws IOException {
     }
 
     private Configuration getConfiguration(String probingTemplate) throws IOException {
-        Configuration config = new Configuration(Configuration.VERSION_2_3_23);
+        Configuration config = new Configuration(CONFIG_VERSION);
         config.setClassForTemplateLoading(getClass(), "/");
 
         try {
@@ -84,8 +93,7 @@ private Configuration getConfiguration(String probingTemplate) throws IOExceptio
                 dir = new File("DaoGenerator/src/main/resources/");
             }
             if (dir.exists() && new File(dir, probingTemplate).exists()) {
-                config.setDirectoryForTemplateLoading(dir);
-                config.getTemplate(probingTemplate);
+                return getConfiguration(dir, probingTemplate);
             } else {
                 throw e;
             }
@@ -93,6 +101,13 @@ private Configuration getConfiguration(String probingTemplate) throws IOExceptio
         return config;
     }
 
+    private Configuration getConfiguration(File templatesDir, String probingTemplate) throws IOException {
+        Configuration config = new Configuration(CONFIG_VERSION);
+        config.setDirectoryForTemplateLoading(templatesDir);
+        config.getTemplate(probingTemplate);
+        return config;
+    }
+
     private Pattern compilePattern(String sectionName) {
         int flags = Pattern.DOTALL | Pattern.MULTILINE;
         return Pattern.compile(".*^\\s*?//\\s*?KEEP " + sectionName + ".*?\n(.*?)^\\s*// KEEP " + sectionName
