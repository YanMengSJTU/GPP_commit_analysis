diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/Entity.java b/source-generator/src/main/java/de/greenrobot/daogenerator/Entity.java
index b3e25f0e..79327176 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/Entity.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/Entity.java
@@ -281,6 +281,16 @@ public String getClassName() {
         return properties;
     }
 
+    public List<Property> getVersionedProperties(int since) {
+        List<Property> res = new ArrayList<Property>();
+        for (Property property : properties) {
+            if (property.getSince() == since) {
+                res.add(property);
+            }
+        }
+        return res;
+    }
+
     public List<Property> getPropertiesColumns() {
         return propertiesColumns;
     }
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/Property.java b/source-generator/src/main/java/de/greenrobot/daogenerator/Property.java
index 90cde1b1..0bca9ab0 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/Property.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/Property.java
@@ -103,13 +103,14 @@ public PropertyBuilder indexDesc(String indexNameOrNull, boolean isUnique) {
         }
 
         public PropertyBuilder since(int version) {
-            property.since = version;
+            since(version, null);
             return this;
         }
 
         public PropertyBuilder since(int version, String _default) {
             property.since = version;
-            property._default = _default;
+            property._default = "".equals(_default) ? null : _default;
+            property.schema.checkVersion(version);
             return this;
         }
 
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java b/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java
index e24aba7f..3e6cc978 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java
@@ -193,4 +193,9 @@ void init3ndPass() {
         }
     }
 
+    public void checkVersion(int version) {
+        if (this.version < version) {
+            this.version = version;
+        }
+    }
 }
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java b/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java
index 6bb13faf..0392e0ab 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java
@@ -125,6 +125,10 @@ private void createEntity(Schema schema, JavaClass javaClass, Annotation entityA
     String since = (String) entityAnnotation.getNamedParameter("since");
 
     Entity entity = schema.addEntity(javaClass.getName(), since == null ? 0 : Integer.parseInt(since));
+    String active = (String) entityAnnotation.getNamedParameter("active");
+    if (active != null && Boolean.valueOf(active)) {
+        entity.setActive(true);
+    }
     typeToEntity.put(javaClass.asType(), entity);
 
     String tableName = unString((String) entityAnnotation.getNamedParameter("table"));
@@ -183,7 +187,9 @@ private void createEntity(Schema schema, JavaClass javaClass, Annotation entityA
       }
       if (sinceAnnotation != null) {
         String version = (String) sinceAnnotation.getNamedParameter("value");
-        propertyBuilder.since(Integer.parseInt(version));
+        String _default = unString((String) sinceAnnotation.getNamedParameter("_default"));
+        debug("since " + version +"; default " + _default);
+        propertyBuilder.since(Integer.parseInt(version), _default);
       }
     }
   }
@@ -226,7 +232,7 @@ private void linkEntity2(Schema schema, JavaClass javaClass) {
 
         debug("toManyAnnotation.getParameterValue() = " + toManyAnnotation.getParameterValue());
 
-        String relationName = unString((String) toManyAnnotation. getNamedParameter("relation"));
+        String relationName = unString((String) toManyAnnotation.getNamedParameter("relation"));
         debug("relationName = " + relationName);
 
         de.greenrobot.daogenerator.ToMany toMany = entity.addToMany(targetEntity,
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Entity.java b/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Entity.java
index a56402a2..2cf5b8c2 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Entity.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Entity.java
@@ -7,5 +7,6 @@
 public @interface Entity {
   String table() default "";
   int since() default 0;
+  boolean active() default false;
   Class<?> dao() default Object.class;
 }
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Since.java b/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Since.java
index bbfc561b..f58af342 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Since.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/annotation/Since.java
@@ -6,4 +6,5 @@
 @Target(ElementType.FIELD)
 public @interface Since {
     int value();
+    String _default() default "";
 }
diff --git a/source-generator/src/main/resources/dao-master.ftl b/source-generator/src/main/resources/dao-master.ftl
index 2b2bbfc1..a4ca71e8 100644
--- a/source-generator/src/main/resources/dao-master.ftl
+++ b/source-generator/src/main/resources/dao-master.ftl
@@ -119,12 +119,12 @@ public class DaoMaster extends AbstractDaoMaster {
 <#if entity.since = ver + 1>
             ${entity.classNameDao}.createTable(db, true);
 <#elseif entity.hasAutoUpdateProperty(ver + 1)>
-            if (<#list entity.properties as property><#if property.since = ver + 1>
+            if (<#list entity.getVersionedProperties(ver + 1) as property>
                 !SqlUtils.ensureColumnExists(db, "${entity.tableName}", "${property.columnName}", "${property.columnType}<#if property.constraints??> ${property.constraints}</#if><#if property.default??> DEFAULT ${property.default}</#if>")<#if property_has_next>||<#else>) {
 
                     ${entity.classNameDao}.dropTable(db, true);
                     ${entity.classNameDao}.createTable(db, false);
-            }</#if></#if></#list>
+            }</#if></#list>
 </#if>
 </#list>
 </#list>
