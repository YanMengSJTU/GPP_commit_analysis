diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
index ef47a89d..14b3d031 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
@@ -142,6 +142,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected AbcdefEntity newEmptyEntity() {
+        return new AbcdefEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public AbcdefEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
index 91fe814c..af98d7e7 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
@@ -81,6 +81,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected AnActiveEntity newEmptyEntity() {
+        return new AnActiveEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public AnActiveEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
index 95fe147e..6ca895b9 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
@@ -65,6 +65,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected AutoincrementEntity newEmptyEntity() {
+        return new AutoincrementEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public AutoincrementEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/CustomTypeEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/CustomTypeEntityDao.java
index 32cf4e6a..d89a9adb 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/CustomTypeEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/CustomTypeEntityDao.java
@@ -76,6 +76,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected CustomTypeEntity newEmptyEntity() {
+        return new CustomTypeEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public CustomTypeEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
index 7d5ab029..5a6de0c6 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
@@ -79,6 +79,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected DateEntity newEmptyEntity() {
+        return new DateEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public DateEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
index 243ea2b9..d568e050 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
@@ -72,6 +72,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected ExtendsImplementsEntity newEmptyEntity() {
+        return new ExtendsImplementsEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public ExtendsImplementsEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/IndexedStringEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/IndexedStringEntityDao.java
index 3724a9af..f5f14793 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/IndexedStringEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/IndexedStringEntityDao.java
@@ -75,6 +75,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected IndexedStringEntity newEmptyEntity() {
+        return new IndexedStringEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public IndexedStringEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/JoinManyToDateEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/JoinManyToDateEntityDao.java
index 5ba3944c..0d6ce930 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/JoinManyToDateEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/JoinManyToDateEntityDao.java
@@ -79,6 +79,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected JoinManyToDateEntity newEmptyEntity() {
+        return new JoinManyToDateEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public JoinManyToDateEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
index f4c5ab06..c8ec1dad 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
@@ -116,6 +116,12 @@ public RelationEntity readEntity(Cursor cursor, int offset) {
         return entity;
     }
      
+    /** @inheritdoc */
+    @Override
+    protected RelationEntity newEmptyEntity() {
+        return new RelationEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public void readEntity(Cursor cursor, RelationEntity entity, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
index 6afdd7c8..a1e4e94f 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
@@ -128,6 +128,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected SimpleEntity newEmptyEntity() {
+        return new SimpleEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public SimpleEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
index a90ccf3b..3dde8b6a 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
@@ -106,6 +106,12 @@ public SimpleEntityNotNull readEntity(Cursor cursor, int offset) {
         return entity;
     }
      
+    /** @inheritdoc */
+    @Override
+    protected SimpleEntityNotNull newEmptyEntity() {
+        return new SimpleEntityNotNull();
+    }
+
     /** @inheritdoc */
     @Override
     public void readEntity(Cursor cursor, SimpleEntityNotNull entity, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
index 7e9c2698..102d323a 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
@@ -128,6 +128,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected SpecialNamesEntity newEmptyEntity() {
+        return new SpecialNamesEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public SpecialNamesEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
index 8302d4d0..b470af9d 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
@@ -76,6 +76,12 @@ public Void readKey(Cursor cursor, int offset) {
         return null;
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected SqliteMaster newEmptyEntity() {
+        return new SqliteMaster();
+    }
+
     /** @inheritdoc */
     @Override
     public SqliteMaster readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
index 8efdfaef..2b97002b 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
@@ -72,6 +72,12 @@ public String readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected StringKeyValueEntity newEmptyEntity() {
+        return new StringKeyValueEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public StringKeyValueEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
index 5febaa8b..cd678672 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
@@ -142,6 +142,12 @@ public TestEntity readEntity(Cursor cursor, int offset) {
         );
         return entity;
     }
+
+    /** @inheritdoc */
+    @Override
+    protected TestEntity newEmptyEntity() {
+        return new TestEntity();
+    }
      
     /** @inheritdoc */
     @Override
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
index 410c448a..b43506c7 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
@@ -81,6 +81,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected ToManyEntity newEmptyEntity() {
+        return new ToManyEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public ToManyEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
index 61aafebe..45cbd41d 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
@@ -93,6 +93,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected ToManyTargetEntity newEmptyEntity() {
+        return new ToManyTargetEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public ToManyTargetEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
index 934b0b3a..7a74d362 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
@@ -87,6 +87,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected TreeEntity newEmptyEntity() {
+        return new TreeEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public TreeEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
index c3d748f0..5b25ae93 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
@@ -65,6 +65,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected KeepEntity newEmptyEntity() {
+        return new KeepEntity();
+    }
+
     /** @inheritdoc */
     @Override
     public KeepEntity readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
index 9370a884..5905d94f 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
@@ -76,6 +76,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected ToManyTarget2 newEmptyEntity() {
+        return new ToManyTarget2();
+    }
+
     /** @inheritdoc */
     @Override
     public ToManyTarget2 readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
index ea61e43a..37373ca2 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
@@ -88,6 +88,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected RelationSource2 newEmptyEntity() {
+        return new RelationSource2();
+    }
+
     /** @inheritdoc */
     @Override
     public RelationSource2 readEntity(Cursor cursor, int offset) {
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
index 9048acb9..8fb2f0cd 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
@@ -67,6 +67,12 @@ public Long readKey(Cursor cursor, int offset) {
         return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
     }    
 
+    /** @inheritdoc */
+    @Override
+    protected ToOneTarget2 newEmptyEntity() {
+        return new ToOneTarget2();
+    }
+
     /** @inheritdoc */
     @Override
     public ToOneTarget2 readEntity(Cursor cursor, int offset) {
