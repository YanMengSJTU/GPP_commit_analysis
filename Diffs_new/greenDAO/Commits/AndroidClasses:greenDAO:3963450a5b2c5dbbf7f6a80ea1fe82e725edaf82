diff --git a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxDaoTest.java b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxDaoTest.java
index f82653f9..947dbee1 100644
--- a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxDaoTest.java
+++ b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxDaoTest.java
@@ -20,6 +20,7 @@
 
 import org.greenrobot.greendao.daotest.TestEntity;
 import org.greenrobot.greendao.daotest.TestEntityDao;
+import org.greenrobot.greendao.rx.NullStub;
 import org.greenrobot.greendao.rx.RxDao;
 import org.greenrobot.greendao.test.AbstractDaoTest;
 
@@ -90,11 +91,14 @@ public void testLoad() {
         assertEquals(foo.getSimpleStringNotNull(), foo2.getSimpleStringNotNull());
     }
 
+    // todo: null is not allowed in rxjava2, then how to test such case that loads no result
+    // querying? The Observable returned by rxDao.laod(42) causes NullPointerException when being subscribing.
     public void testLoad_noResult() {
-        TestObserver<TestEntity> testSubscriber = RxTestHelper.awaitTestSubscriber(rxDao.load(42));
-        assertEquals(1, testSubscriber.valueCount());
+//        TestObserver<TestEntity> testSubscriber = RxTestHelper.awaitTestSubscriber(rxDao.load(42));
+        TestObserver<TestEntity> testSubscriber = RxTestHelper.awaitTestNullObserver(rxDao.load(42));
+        assertEquals(0, testSubscriber.valueCount());
         // Should we really propagate null through Rx?
-        assertNull(testSubscriber.values().get(0));
+//        assertNull(testSubscriber.values().get(0));
     }
 
     public void testRefresh() {
@@ -338,7 +342,8 @@ public void testDeleteByKeyInTxList() {
     private void assertDeleted(Observable<Void> observable) {
         TestObserver testSubscriber = RxTestHelper.awaitTestSubscriber(observable);
         assertEquals(1, testSubscriber.valueCount());
-        assertNull(testSubscriber.values().get(0));
+//        assertNull(testSubscriber.values().get(0));
+        assertEquals(NullStub.NULL, testSubscriber.values().get(0));
         assertEquals(0, dao.count());
     }
 
diff --git a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxQueryTest.java b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxQueryTest.java
index 794ced8f..abc9657f 100644
--- a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxQueryTest.java
+++ b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxQueryTest.java
@@ -89,6 +89,7 @@ public void testOneByOne() {
         }
     }
 
+    // todo: double check if the equivalence of the test case between rxjava2 and rxjava
     public void testOneByOneUnsubscribe() {
         insertEntities(1000);
         RxQuery<TestEntity> bigQuery = daoSession.getTestEntityDao().queryBuilder().rx();
@@ -97,6 +98,9 @@ public void testOneByOneUnsubscribe() {
         observable.subscribe(testSubscriber);
 //        subscription.unsubscribe();
 //        testSubscriber.assertUnsubscribed();
+        testSubscriber.dispose();
+        assertTrue(testSubscriber.isDisposed());
+
         int count = testSubscriber.valueCount();
         testSubscriber.awaitTerminalEvent(100, TimeUnit.MILLISECONDS);
         int count2 = testSubscriber.valueCount();
diff --git a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTestHelper.java b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTestHelper.java
index f7156082..9e6085cb 100644
--- a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTestHelper.java
+++ b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTestHelper.java
@@ -27,6 +27,17 @@
 import io.reactivex.observers.TestObserver;
 
 public class RxTestHelper {
+    static <T> TestObserver<T> awaitTestNullObserver(Observable<T> observable) {
+        TestObserver<T> testObserver = new TestObserver<>();
+        observable.subscribe(testObserver);
+        testObserver.awaitTerminalEvent(3, TimeUnit.SECONDS);
+        testObserver.assertError(NullPointerException.class);
+        testObserver.assertNotComplete();
+//        testObserver.assertNoErrors();
+//        testObserver.assertComplete();
+        return testObserver;
+    }
+
     static <T> TestObserver<T> awaitTestSubscriber(Observable<T> observable) {
         TestObserver<T> testSubscriber = new TestObserver<>();
         observable.subscribe(testSubscriber);
diff --git a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTransactionTest.java b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTransactionTest.java
index cae1f0e5..a16efd7c 100644
--- a/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTransactionTest.java
+++ b/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/rx/RxTransactionTest.java
@@ -55,7 +55,9 @@ public void run() {
             }
         });
         TestObserver<NullStub> testSubscriber = assertTxExecuted(observable);
-        assertNull(testSubscriber.values().get(0));
+//        assertNull(testSubscriber.values().get(0));
+        testSubscriber.assertValueCount(1);
+        assertEquals(NullStub.NULL, testSubscriber.values().get(0));
     }
 
     public void testCall() {
