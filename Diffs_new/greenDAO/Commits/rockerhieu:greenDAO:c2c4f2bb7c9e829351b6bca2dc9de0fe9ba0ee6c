diff --git a/DaoGenerator/src-template/entity.ftl b/DaoGenerator/src-template/entity.ftl
index e40c0a18..84505032 100644
--- a/DaoGenerator/src-template/entity.ftl
+++ b/DaoGenerator/src-template/entity.ftl
@@ -55,6 +55,10 @@ as ifc>${ifc}<#if ifc_has_next>, </#if></#list></#if> {
 <#list entity.properties as property>
 <#if property.notNull && complexTypes?seq_contains(property.propertyType)>
     /** Not-null value. */
+</#if>
+<#if entity.hasKeepSections>
+    // KEEP ${property.propertyName} ANNOTATIONS - put your custom annotations here
+${(keepAnnotations[property.propertyName])!}    // KEEP ANNOTATIONS END
 </#if>
     private ${property.javaType} ${property.propertyName};
 </#list>
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java b/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
index 0828ca40..0f3ddee5 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
@@ -41,6 +41,7 @@
     private Pattern patternKeepIncludes;
     private Pattern patternKeepFields;
     private Pattern patternKeepMethods;
+    private Pattern patternKeepAnnotations;
 
     private Template templateDao;
     private Template templateDaoMaster;
@@ -57,6 +58,7 @@ public DaoGenerator() throws IOException {
         patternKeepIncludes = compilePattern("INCLUDES");
         patternKeepFields = compilePattern("FIELDS");
         patternKeepMethods = compilePattern("METHODS");
+        patternKeepAnnotations = compileNamedPattern("ANNOTATIONS");
 
         Configuration config = new Configuration();
         config.setClassForTemplateLoading(this.getClass(), "/");
@@ -76,6 +78,11 @@ private Pattern compilePattern(String sectionName) {
                 + " END.*?\n", flags);
     }
 
+    private Pattern compileNamedPattern(String sectionName) {
+        int flags = Pattern.DOTALL | Pattern.MULTILINE;
+        return Pattern.compile("//\\s*?KEEP\\s+(\\S*)\\s*" + sectionName + ".*?\n(.*?)^\\s*// KEEP " + sectionName + " END.*?\n", flags);
+    }
+
     /** Generates all entities and DAOs for the given schema. */
     public void generateAll(Schema schema, String outDir) throws Exception {
         generateAll(schema, outDir, null, null);
@@ -191,6 +198,13 @@ private void checkKeepSections(File file, Map<String, Object> root) {
                 if (matcher.matches()) {
                     root.put("keepMethods", matcher.group(1));
                 }
+
+                matcher = patternKeepAnnotations.matcher(contents);
+                Map allMatches = new HashMap();
+                while (matcher.find()) {
+                    allMatches.put(matcher.group(1), matcher.group(2));
+                }
+                root.put("keepAnnotations", allMatches);
             } catch (IOException e) {
                 e.printStackTrace();
             }
