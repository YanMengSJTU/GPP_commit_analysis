diff --git a/example/src/main/orm/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java b/example/src/main/orm/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java
deleted file mode 100644
index 7810e866..00000000
--- a/example/src/main/orm/de/greenrobot/daogenerator/gentest/ExampleDaoGenerator.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Copyright (C) 2011 Markus Junginger, greenrobot (http://greenrobot.de)
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package de.greenrobot.daogenerator.gentest;
-
-import de.greenrobot.daogenerator.DaoGenerator;
-import de.greenrobot.daogenerator.Entity;
-import de.greenrobot.daogenerator.Property;
-import de.greenrobot.daogenerator.Schema;
-import de.greenrobot.daogenerator.ToMany;
-
-// This class is not used anymore, I keep it here for reference.
-public class ExampleDaoGenerator {
-
-    public static void main(String[] args) throws Exception {
-        Schema schema = new Schema(3, "de.greenrobot.daoexample");
-
-        addNote(schema);
-        addCustomerOrder(schema);
-        addContact(schema);
-
-        new DaoGenerator().generateAll(schema, "../DaoExample/src-gen");
-    }
-
-    private static void addNote(Schema schema) {
-        Entity note = schema.addEntity("Note");
-        note.addIdProperty();
-        note.addStringProperty("text").notNull();
-        note.addStringProperty("comment");
-        note.addDateProperty("date");
-    }
-
-    private static void addCustomerOrder(Schema schema) {
-        Entity customer = schema.addEntity("Customer");
-        customer.addIdProperty();
-        customer.addStringProperty("name").notNull();
-
-        Entity order = schema.addEntity("Order");
-        order.setTableName("ORDERS"); // "ORDER" is a reserved keyword
-        order.addIdProperty();
-        Property orderDate = order.addDateProperty("date").getProperty();
-        Property customerId = order.addLongProperty("customerId").notNull().getProperty();
-        order.addToOne(customer, customerId);
-
-        ToMany customerToOrders = customer.addToMany(order, customerId);
-        customerToOrders.setName("orders");
-        customerToOrders.orderAsc(orderDate);
-    }
-
-    private static void addContact(Schema schema) {
-        Entity contact = schema.addEntity("Contact");
-        contact.addIdProperty();
-        contact.addStringProperty("name");
-        contact.addSerializedProperty("java.security.PublicKey", "publicKey");
-    }
-    
-}
diff --git a/gradle-plugin/src/main/groovy/de/greenrobot/greendao/plugin/GreenDaoPlugin.groovy b/gradle-plugin/src/main/groovy/de/greenrobot/greendao/plugin/GreenDaoPlugin.groovy
index d7844d09..f775bcc2 100644
--- a/gradle-plugin/src/main/groovy/de/greenrobot/greendao/plugin/GreenDaoPlugin.groovy
+++ b/gradle-plugin/src/main/groovy/de/greenrobot/greendao/plugin/GreenDaoPlugin.groovy
@@ -1,10 +1,9 @@
-package de.greenrobot.greendao.plugin;
+package de.greenrobot.greendao.plugin
 
-import de.greenrobot.greendao.task.GenerateDaoSources;
-import org.gradle.api.Plugin;
-import org.gradle.api.Project;
-import org.gradle.api.tasks.compile.JavaCompile;
-import org.gradle.api.Task;
+import de.greenrobot.greendao.task.GenerateDaoSources
+import org.gradle.api.Plugin
+import org.gradle.api.Project
+import org.gradle.api.Task
 
 public class GreenDaoPlugin implements Plugin<Project> {
 
@@ -13,11 +12,10 @@ public class GreenDaoPlugin implements Plugin<Project> {
     Task generateDaoSources = project.tasks.create(name: 'generateDaoSources', type: GenerateDaoSources) {
       description = 'Generates the source files for the object-relation mapping.'
       ormSrcDir = project.file('src/main/orm');
-      schemaVersion = 1;
       genSrcPackage = "orm.gensrc";
       genSrcDir = new File(project.buildDir, 'gen-src');
     }
-    
+
     project.afterEvaluate {
       project.compileDebug.dependsOn(generateDaoSources);
       project.android.sourceSets.main.java.srcDirs += generateDaoSources.genSrcDir;
diff --git a/gradle-plugin/src/main/groovy/de/greenrobot/greendao/task/GenerateDaoSources.groovy b/gradle-plugin/src/main/groovy/de/greenrobot/greendao/task/GenerateDaoSources.groovy
index 52bef0bd..3ad04cc7 100644
--- a/gradle-plugin/src/main/groovy/de/greenrobot/greendao/task/GenerateDaoSources.groovy
+++ b/gradle-plugin/src/main/groovy/de/greenrobot/greendao/task/GenerateDaoSources.groovy
@@ -13,9 +13,6 @@ public class GenerateDaoSources extends DefaultTask {
   @InputDirectory
   def File ormSrcDir;
   
-  @Input
-  def int schemaVersion;
-  
   @Input
   def String genSrcPackage;
   
@@ -30,7 +27,7 @@ public class GenerateDaoSources extends DefaultTask {
             getLogger().debug(text);
         }
     };
-    Schema schema = schemaGenerator.createSchema(schemaVersion, genSrcPackage);
+    Schema schema = schemaGenerator.createSchema(genSrcPackage);
     new DaoGenerator(){
         @Override
         protected void info(String text) {
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java b/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java
index aebc7f3d..e24aba7f 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/Schema.java
@@ -28,7 +28,7 @@
  * @see <a href="http://greendao-orm.com/documentation/modelling-entities/">Modelling Entities (Documentation page)</a>
  */
 public class Schema {
-    private final int version;
+    private int version = 1;
     private final String defaultJavaPackage;
     private String defaultJavaPackageDao;
     private String defaultJavaPackageTest;
@@ -39,8 +39,7 @@
     private boolean hasKeepSectionsByDefault;
     private boolean useActiveEntitiesByDefault;
 
-    public Schema(int version, String defaultJavaPackage) {
-        this.version = version;
+    public Schema(String defaultJavaPackage) {
         this.defaultJavaPackage = defaultJavaPackage;
         this.entities = new ArrayList<Entity>();
         initTypeMappings();
@@ -102,6 +101,9 @@ public Entity addEntity(String className) {
     }
 
     public Entity addEntity(String className, int since) {
+        if (since >= version) {
+            version = since;
+        }
         Entity entity = new Entity(this, className, since);
         entities.add(entity);
         return entity;
diff --git a/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java b/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java
index b4779467..87cba24b 100644
--- a/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java
+++ b/source-generator/src/main/java/de/greenrobot/daogenerator/SchemaGenerator.java
@@ -52,8 +52,8 @@ public SchemaGenerator(File sourceDirectory) {
     javaTypeToPropertyType.put("java.util.Date", PropertyType.Date);
   }
 
-  public Schema createSchema(int version, String genSrcPackage) {
-    Schema schema = new Schema(version, genSrcPackage);
+  public Schema createSchema(String genSrcPackage) {
+    Schema schema = new Schema(genSrcPackage);
     
     // Look for the java files.
     JavaDocBuilder builder = new JavaDocBuilder();
