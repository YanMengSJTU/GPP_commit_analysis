diff --git a/DaoCore/src/de/greenrobot/dao/AbstractDao.java b/DaoCore/src/de/greenrobot/dao/AbstractDao.java
index 8c6b9fee..e10bfd57 100644
--- a/DaoCore/src/de/greenrobot/dao/AbstractDao.java
+++ b/DaoCore/src/de/greenrobot/dao/AbstractDao.java
@@ -22,6 +22,7 @@
 import android.database.DatabaseUtils;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
+import com.google.gson.Gson;
 import de.greenrobot.dao.identityscope.IdentityScope;
 import de.greenrobot.dao.identityscope.IdentityScopeLong;
 import de.greenrobot.dao.internal.DaoConfig;
@@ -66,6 +67,8 @@
     protected final AbstractDaoSession session;
     protected final int pkOrdinal;
 
+    private Gson gson = new Gson();
+
     public AbstractDao(DaoConfig config) {
         this(config, null);
     }
@@ -115,6 +118,20 @@ public Property getPkProperty() {
         return config.nonPkColumns;
     }
 
+    protected String arrayToString(String[] array) {
+        if (gson == null) {
+            gson = new Gson();
+        }
+        return gson.toJson(array);
+    }
+
+    protected String[] stringToArray(String string) {
+        if (gson == null) {
+            gson = new Gson();
+        }
+        return gson.fromJson(string, String[].class);
+    }
+
     /**
      * Loads and entity for the given PK.
      * 
diff --git a/DaoGenerator/src-template/dao.ftl b/DaoGenerator/src-template/dao.ftl
index 2d54d5f9..bfffeba4 100644
--- a/DaoGenerator/src-template/dao.ftl
+++ b/DaoGenerator/src-template/dao.ftl
@@ -146,14 +146,15 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
 <#list entity.properties as property>
 <#if property.notNull || entity.protobuf>
 <#if entity.protobuf>
-        if(entity.has${property.propertyName?cap_first}()) {
+        if (entity.has${property.propertyName?cap_first}()) {
     </#if>        stmt.bind${toBindType[property.propertyType]}(${property_index + 1}, entity.get${property.propertyName?cap_first}()<#if
      property.propertyType == "Boolean"> ? 1l: 0l</#if><#if property.propertyType == "Date">.getTime()</#if><#if property.propertyType == "Enum">.getValue()</#if>);
 <#if entity.protobuf>
         }
 </#if>
 <#else> <#-- nullable, non-protobuff -->
-        ${property.javaType} ${property.propertyName} = entity.get${property.propertyName?cap_first}();
+        ${property.javaType} ${property.propertyName} = <#if property
+        .listProperty>arrayToString(</#if>entity.get${property.propertyName?cap_first}()<#if property.listProperty>)</#if>;
         if (${property.propertyName} != null) {
             stmt.bind${toBindType[property.propertyType]}(${property_index + 1}, ${property.propertyName}<#if
  property.propertyType == "Boolean"> ? 1l: 0l</#if><#if property.propertyType == "Date">.getTime()</#if><#if property.propertyType == "Enum">.getValue()</#if>);
@@ -223,7 +224,7 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
             <#if !property.notNull>cursor.isNull(offset + ${property_index}) ? null : </#if><#if
             property.propertyType == "Byte">(byte) </#if><#if
             property.propertyType == "Enum">${property.javaType}.fromInt(</#if><#if
-            property.propertyType == "Date">new java.util.Date(</#if>cursor.get${toCursorType[property.propertyType]}(offset + ${property_index})<#if
+            property.propertyType == "Date">new java.util.Date(</#if><#if property.listProperty>stringToArray(</#if>cursor.get${toCursorType[property.propertyType]}(offset + ${property_index})<#if property.listProperty>)</#if><#if
             property.propertyType == "Boolean"> != 0</#if><#if
             property.propertyType == "Enum">)</#if><#if
             property.propertyType == "Date">)</#if><#if property_has_next>,</#if> // ${property.propertyName}
@@ -250,7 +251,7 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
         entity.set${property.propertyName?cap_first}(<#if !property.notNull>cursor.isNull(offset + ${property_index}) ? null : </#if><#if
             property.propertyType == "Byte">(byte) </#if><#if
             property.propertyType == "Enum">${property.javaType}.fromInt(</#if><#if
-            property.propertyType == "Date">new java.util.Date(</#if>cursor.get${toCursorType[property.propertyType]}(offset + ${property_index})<#if
+            property.propertyType == "Date">new java.util.Date(</#if><#if property.listProperty>stringToArray(</#if>cursor.get${toCursorType[property.propertyType]}(offset + ${property_index})<#if property.listProperty>)</#if><#if
             property.propertyType == "Boolean"> != 0</#if><#if
             property.propertyType == "Enum">)</#if><#if
             property.propertyType == "Date">)</#if>);
diff --git a/DaoGenerator/src-template/entity.ftl b/DaoGenerator/src-template/entity.ftl
index 098e8670..a00f754c 100644
--- a/DaoGenerator/src-template/entity.ftl
+++ b/DaoGenerator/src-template/entity.ftl
@@ -75,7 +75,8 @@ as ifc>${ifc}<#if ifc_has_next>, </#if></#list></#if> {
 <#if property.notNull && complexTypes?seq_contains(property.propertyType)>
     /** Not-null value. */
 </#if>
-    private <#if property.transientProperty>transient </#if>${property.javaType} ${property.propertyName};
+    private <#if property.transientProperty>transient </#if>${property.javaType}<#if property.listProperty>[]</#if> ${property
+    .propertyName};
 </#list>
 
 <#if entity.active>
@@ -108,7 +109,8 @@ ${keepFields!}    // KEEP FIELDS END
 
 <#if entity.propertiesPk?has_content && entity.propertiesPk?size != entity.properties?size>
     public ${entity.className}(<#list entity.propertiesPk as
-property><#if property_index != 0 && property.reference>, </#if>${property.javaType} ${property.propertyName}</#list>) {
+property><#if property_index != 0 && property.reference>, </#if>${property.javaType}<#if property
+.listProperty>[]</#if> ${property.propertyName}</#list>) {
 <#list entity.propertiesPk as property>
         this.${property.propertyName} = ${property.propertyName};
 </#list>
@@ -120,7 +122,8 @@ property><#if property_index != 0 && property.reference>, </#if>${property.javaT
 </#if>
 <#if entity.hasReferenceProperty>
     ${entity.className}(<#list entity.properties as
-property>${property.javaType} ${property.propertyName}<#if property_has_next>, </#if></#list>) {
+property>${property.javaType}<#if property.listProperty>[]</#if> ${property.propertyName}<#if
+property_has_next>, </#if></#list>) {
 <#list entity.properties as property>
         this.${property.propertyName} = ${property.propertyName};
 </#list>
@@ -129,7 +132,8 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
 </#if>
     <#assign x = 0>
     public ${entity.className}(<#list entity.properties as
-        property><#if !property.reference><#if x != 0>, </#if>${property.javaType} ${property.propertyName}<#assign x = x + 1></#if></#list>) {
+        property><#if !property.reference><#if x != 0>, </#if>${property.javaType}<#if property
+        .listProperty>[]</#if> ${property.propertyName}<#assign x = x + 1></#if></#list>) {
     <#list entity.properties as property>
         <#if !property.reference>
         this.${property.propertyName} = ${property.propertyName};
@@ -157,7 +161,8 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
 </#if>
 <#if entity.aBaseEntity>
     void loadBase(${entity.classNameDao} dao, <#list entity.propertiesPk as
-        property><#if property_index != 0>, </#if>${property.javaType} ${property.propertyName}</#list>) {
+        property><#if property_index != 0>, </#if>${property.javaType}<#if property
+        .listProperty>[]</#if> ${property.propertyName}</#list>) {
         myDao = dao;
     <#list entity.propertiesPk as property>
         this.${property.propertyName} = ${property.propertyName};
@@ -193,14 +198,16 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
 <#if property.notNull && complexTypes?seq_contains(property.propertyType)>
     /** Not-null value. */
 </#if>
-    public ${property.javaType} get${property.propertyName?cap_first}() {
+    public ${property.javaType}<#if property.listProperty>[]</#if> get${property
+    .propertyName?cap_first}() {
         return ${property.propertyName};
     }
 
 <#if property.notNull && complexTypes?seq_contains(property.propertyType)>
     /** Not-null value; ensure this value is available before it is saved to the database. */
 </#if>
-    public void set${property.propertyName?cap_first}(${property.javaType} ${property.propertyName}) {
+    public void set${property.propertyName?cap_first}(${property.javaType}<#if property
+    .listProperty>[]</#if> ${property.propertyName}) {
         this.${property.propertyName} = ${property.propertyName};
     }
 
@@ -405,6 +412,9 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
     @Override
     public void writeToParcel(Parcel dest, int flags) {
     <#list entity.properties as property>
+        <#if property.listProperty>
+        dest.write${toParcelType[property.javaType]}Array(${property.propertyName});
+        <#else>
         <#if property.anEnum>
         dest.writeLong(${property.propertyName}.getValue());
         <#elseif property.javaType == "boolean">
@@ -412,6 +422,7 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
         <#else>
         dest.write${toParcelType[property.javaType]}(${property.propertyName});
         </#if>
+        </#if>
     </#list>
     <#list entity.toOneRelations as toOne>
         dest.writeValue(${toOne.name});
@@ -428,6 +439,9 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
 
     private void readFromParcel(Parcel in) {
     <#list entity.properties as property>
+        <#if property.listProperty>
+        in.read${toParcelType[property.javaType]}Array(${property.propertyName});
+        <#else>
         <#if property.anEnum>
         ${property.propertyName} = ${property.javaType}.fromInt(in.readLong());
         <#elseif property.javaType == "boolean">
@@ -437,6 +451,7 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
         <#else>
         ${property.propertyName} = in.read${toParcelType[property.javaType]}();
         </#if>
+        </#if>
     </#list>
     <#list entity.toOneRelations as toOne>
         ${toOne.name} = (${toOne.targetEntity.className}) in.readValue(${toOne.targetEntity.className}.class.getClassLoader());
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
index 4675cc1f..9d9f1f2a 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
@@ -101,6 +101,11 @@ public PropertyBuilder markTransient() {
             return this;
         }
 
+        public PropertyBuilder asList() {
+            property.listProperty = true;
+            return this;
+        }
+
         public PropertyBuilder index() {
             Index index = new Index();
             index.addProperty(property);
@@ -156,6 +161,7 @@ public Property getProperty() {
     private boolean notNull;
 
     private boolean transientProperty = false;
+    private boolean listProperty = false;
 
     /** Initialized in 2nd pass */
     private String constraints;
@@ -221,6 +227,8 @@ public boolean isNotNull() {
 
     public boolean isTransientProperty() { return transientProperty; }
 
+    public boolean isListProperty() { return listProperty; }
+
     public String getJavaType() {
         return javaType;
     }
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 3c7abdf1..0087cd3b 100755
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index aacac335..7290640c 100755
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat May 24 08:38:11 CEST 2014
+#Tue Jul 22 11:17:04 PDT 2014
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=http\://services.gradle.org/distributions/gradle-1.12-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-1.12-bin.zip
diff --git a/gradlew.bat b/gradlew.bat
index 8a0b282a..aec99730 100755
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,90 +1,90 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
