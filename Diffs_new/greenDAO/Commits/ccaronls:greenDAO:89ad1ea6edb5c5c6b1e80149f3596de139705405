diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
index 7045a970..61c4f1aa 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
@@ -135,8 +135,8 @@ public Property getProperty() {
             return property;
         }
 
-		public void setVersion(int versionDontForgetToBump) {
-			property.version = versionDontForgetToBump;
+		public void setVersion(int rawVersionDontForgetToBump) {
+			property.version = rawVersionDontForgetToBump;
 		}
     }
 
@@ -399,15 +399,19 @@ void init3ndPass() {
     void initParcelableMethods() {
     	switch (propertyType) {
 		case Boolean:
+			parcelableReadStatement = propertyName + " = in.readByte() != 0;";
 			if (notNull) {
-				parcelableReadStatement = propertyName + " = in.readByte() != 0;";
 				parcelableWriteStatement = "out.writeByte((byte)(" + propertyName + " ? 1 : 0));";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeByte(0); else out.writeByte((byte)(" + propertyName + " ? 1 : 0));";
 			}
 			break;
 		case Byte:
 			if (notNull) {
 				parcelableReadStatement = propertyName + " = in.readByte();";
 				parcelableWriteStatement = "out.writeByte(" + propertyName + ");";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeByte(0); else out.writeByte(" + propertyName + ");";
 			}
 			break;
 		case ByteArray:
@@ -424,30 +428,40 @@ void initParcelableMethods() {
 			if (notNull) {
 				parcelableReadStatement = propertyName + " = in.readDouble();";
 				parcelableWriteStatement = "out.writeDouble(" + propertyName + ");";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeDouble(0); else out.writeDouble(" + propertyName + ");";
 			}
 			break;
 		case Float:
 			if (notNull) {
 				parcelableReadStatement = propertyName + " = in.readFloat();";
 				parcelableWriteStatement = "out.writeFloat(" + propertyName + ");";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeFloat(0); else out.writeFloat(" + propertyName + ");";
 			}
 			break;
 		case Int:
 			if (notNull) {
 				parcelableReadStatement = propertyName + " = in.readInt();";
 				parcelableWriteStatement = "out.writeInt(" + propertyName + ");";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeInt(0); else out.writeInt(" + propertyName + ");";
 			}
 			break;
 		case Long:
 			if (notNull) {
 				parcelableReadStatement = propertyName + " = in.readLong();";
 				parcelableWriteStatement = "out.writeLong(" + propertyName + ");";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeLong(0); else out.writeLong(" + propertyName + ");";
 			}
 			break;
 		case Short:
 			if (notNull) {
 				parcelableReadStatement = propertyName + " = in.readInt();";
 				parcelableWriteStatement = "out.writeInt(" + propertyName + ");";
+			} else {
+				parcelableWriteStatement = "if (" + propertyName + " == null) out.writeInt(0); else out.writeInt(" + propertyName + ");";
 			}
 			break;
 		case String:
