diff --git a/library/src/com/orm/SugarDb.java b/library/src/com/orm/SugarDb.java
index 2d4dbfd3..ce28a325 100644
--- a/library/src/com/orm/SugarDb.java
+++ b/library/src/com/orm/SugarDb.java
@@ -3,18 +3,20 @@
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+
+import com.orm.util.ManifestHelper;
 import com.orm.util.SugarConfig;
 import com.orm.util.SugarCursorFactory;
 
-import static com.orm.util.SugarConfig.getDatabaseVersion;
-import static com.orm.util.SugarConfig.getDebugEnabled;
+import static com.orm.util.ManifestHelper.getDatabaseVersion;
+import static com.orm.util.ManifestHelper.getDebugEnabled;
 
 public class SugarDb extends SQLiteOpenHelper {
     private final SchemaGenerator schemaGenerator;
     private SQLiteDatabase sqLiteDatabase;
 
     public SugarDb(Context context) {
-        super(context, SugarConfig.getDatabaseName(context), new SugarCursorFactory(getDebugEnabled(context)), getDatabaseVersion(context));
+        super(context, ManifestHelper.getDatabaseName(context), new SugarCursorFactory(getDebugEnabled(context)), getDatabaseVersion(context));
         schemaGenerator = new SchemaGenerator(context);
     }
 
diff --git a/library/src/com/orm/util/ManifestHelper.java b/library/src/com/orm/util/ManifestHelper.java
new file mode 100644
index 00000000..0e9c0e63
--- /dev/null
+++ b/library/src/com/orm/util/ManifestHelper.java
@@ -0,0 +1,140 @@
+package com.orm.util;
+
+import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.util.Log;
+
+/**
+ * Helper class for accessing properties in the AndroidManifest
+ */
+public class ManifestHelper {
+
+    /**
+     * TODO document the meaning of this 128 flag.
+     */
+    private final static int FLAG = 128;
+
+    /**
+     * Key for the database name meta data
+     */
+    public final static String METADATA_DATABASE = "DATABASE";
+    /**
+     * Key for the database verison meta data
+     */
+    public final static String METADATA_VERSION = "VERSION";
+    public final static String METADATA_DOMAIN_PACKAGE_NAME = "DOMAIN_PACKAGE_NAME";
+    public final static String METADATA_QUERY_LOG = "QUERY_LOG";
+
+    /**
+     * The default name for the database unless specified in the AndroidManifest
+     */
+    public final static String DATABASE_DEFAULT_NAME = "Sugar.db";
+
+    /**
+     * @return the database version as specified by the {@link #METADATA_DATABASE} version or 1 of
+     *         not present.
+     */
+    public static int getDatabaseVersion(Context context) {
+        Integer databaseVersion = getMetaDataInteger(context, METADATA_VERSION);
+
+        if ((databaseVersion == null) || (databaseVersion == 0)) {
+            databaseVersion = 1;
+        }
+
+        return databaseVersion;
+    }
+
+    /**
+     *
+     * @param context
+     * @return
+     */
+    public static String getDomainPackageName(Context context){
+        String domainPackageName = getMetaDataString(context, METADATA_DOMAIN_PACKAGE_NAME);
+
+        if (domainPackageName == null) {
+            domainPackageName = "";
+        }
+
+        return domainPackageName;
+    }
+
+    /**
+     * @param context a reference to the context
+     * @return the value for the {@value #METADATA_DATABASE } meta data in the AndroidManifest or
+     *         {@link #DATABASE_DEFAULT_NAME} if not present.
+     */
+    public static String getDatabaseName(Context context) {
+        String databaseName = getMetaDataString(context, METADATA_DATABASE);
+
+        if (databaseName == null) {
+            databaseName = DATABASE_DEFAULT_NAME;
+        }
+
+        return databaseName;
+    }
+
+    /**
+     * @return true if the debug flag is enabled
+     */
+    public static boolean getDebugEnabled(Context context) {
+        return getMetaDataBoolean(context, METADATA_QUERY_LOG);
+    }
+
+    public static String getMetaDataString(Context context, String name) {
+        String value = null;
+
+        PackageManager pm = context.getPackageManager();
+        try {
+            ApplicationInfo ai = pm.getApplicationInfo(context.getPackageName(), FLAG);
+            value = ai.metaData.getString(name);
+        } catch (Exception e) {
+            Log.d("sugar", "Couldn't find config value: " + name);
+        }
+
+        return value;
+    }
+
+    /**
+     * Returns the value associated with the given name, or 0 if
+     * no mapping of the desired type exists for the given key.
+     *
+     * @param name a String
+     * @return an int value
+     */
+    public static Integer getMetaDataInteger(Context context, String name) {
+        Integer value = null;
+
+        PackageManager pm = context.getPackageManager();
+        try {
+            ApplicationInfo ai = pm.getApplicationInfo(context.getPackageName(), FLAG);
+            value = ai.metaData.getInt(name);
+        } catch (Exception e) {
+            Log.d("sugar", "Couldn't find config value: " + name);
+        }
+
+        return value;
+    }
+
+    /**
+     * Returns the value associated with the given name, or false if
+     * no mapping of the desired type exists for the given key.
+     *
+     * @param name the name as present in the AndroidManifest
+     * @return a boolean value
+     */
+    public static Boolean getMetaDataBoolean(Context context, String name) {
+        Boolean value = false;
+
+        PackageManager pm = context.getPackageManager();
+        try {
+            ApplicationInfo ai = pm.getApplicationInfo(context.getPackageName(), FLAG);
+            value = ai.metaData.getBoolean(name);
+        } catch (Exception e) {
+            Log.d("sugar", "Couldn't find config value: " + name);
+        }
+
+        return value;
+    }
+}
diff --git a/library/src/com/orm/util/ReflectionUtil.java b/library/src/com/orm/util/ReflectionUtil.java
index 7a213cae..b676d183 100644
--- a/library/src/com/orm/util/ReflectionUtil.java
+++ b/library/src/com/orm/util/ReflectionUtil.java
@@ -188,7 +188,7 @@ public static void setFieldValueForId(Object object, Long value) {
         List<Class> domainClasses = new ArrayList<Class>();
         try {
             for (String className : getAllClasses(context)) {
-                if (className.startsWith(SugarConfig.getDomainPackageName(context))) {
+                if (className.startsWith(ManifestHelper.getDomainPackageName(context))) {
                     Class domainClass = getDomainClass(className, context);
                     if (domainClass != null) domainClasses.add(domainClass);
                 }
diff --git a/library/src/com/orm/util/SugarConfig.java b/library/src/com/orm/util/SugarConfig.java
index 524adf29..dd1cc336 100644
--- a/library/src/com/orm/util/SugarConfig.java
+++ b/library/src/com/orm/util/SugarConfig.java
@@ -11,20 +11,11 @@
 import java.util.List;
 import java.util.Map;
 
+
 public class SugarConfig {
 
     static Map<Class<?>, List<Field>> fields = new HashMap<Class<?>, List<Field>>();
 
-    public static String getDatabaseName(Context context) {
-        String databaseName = getMetaDataString(context, "DATABASE");
-
-        if (databaseName == null) {
-            databaseName = "Sugar.db";
-        }
-
-        return databaseName;
-    }
-
     public static void setFields(Class<?> clazz, List<Field> fieldz){
          fields.put(clazz, fieldz);
     }
@@ -44,69 +35,5 @@ public static void clearCache(){
         fields = new HashMap<Class<?>, List<Field>>();
     }
 
-    public static int getDatabaseVersion(Context context) {
-        Integer databaseVersion = getMetaDataInteger(context, "VERSION");
-
-        if ((databaseVersion == null) || (databaseVersion == 0)) {
-            databaseVersion = 1;
-        }
-
-        return databaseVersion;
-    }
-
-    public static String getDomainPackageName(Context context){
-        String domainPackageName = getMetaDataString(context, "DOMAIN_PACKAGE_NAME");
-
-        if (domainPackageName == null) {
-            domainPackageName = "";
-        }
-
-        return domainPackageName;
-    }
 
-    public static boolean getDebugEnabled(Context context) {
-        return getMetaDataBoolean(context, "QUERY_LOG");
-    }
-
-    public static String getMetaDataString(Context context, String name) {
-        String value = null;
-
-        PackageManager pm = context.getPackageManager();
-        try {
-            ApplicationInfo ai = pm.getApplicationInfo(context.getPackageName(), 128);
-            value = ai.metaData.getString(name);
-        } catch (Exception e) {
-            Log.d("sugar", "Couldn't find config value: " + name);
-        }
-
-        return value;
-    }
-
-    public static Integer getMetaDataInteger(Context context, String name) {
-        Integer value = null;
-
-        PackageManager pm = context.getPackageManager();
-        try {
-            ApplicationInfo ai = pm.getApplicationInfo(context.getPackageName(), 128);
-            value = ai.metaData.getInt(name);
-        } catch (Exception e) {
-            Log.d("sugar", "Couldn't find config value: " + name);
-        }
-
-        return value;
-    }
-
-    public static Boolean getMetaDataBoolean(Context context, String name) {
-        Boolean value = false;
-
-        PackageManager pm = context.getPackageManager();
-        try {
-            ApplicationInfo ai = pm.getApplicationInfo(context.getPackageName(), 128);
-            value = ai.metaData.getBoolean(name);
-        } catch (Exception e) {
-            Log.d("sugar", "Couldn't find config value: " + name);
-        }
-
-        return value;
-    }
 }
