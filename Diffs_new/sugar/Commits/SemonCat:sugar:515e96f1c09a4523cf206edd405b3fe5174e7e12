diff --git a/library/src/main/java/com/orm/DatabaseContext.java b/library/src/main/java/com/orm/DatabaseContext.java
new file mode 100644
index 00000000..20b4d1df
--- /dev/null
+++ b/library/src/main/java/com/orm/DatabaseContext.java
@@ -0,0 +1,68 @@
+package com.orm;
+
+import android.content.Context;
+import android.content.ContextWrapper;
+import android.database.DatabaseErrorHandler;
+import android.database.sqlite.SQLiteDatabase;
+import android.os.Environment;
+import android.util.Log;
+
+import java.io.File;
+
+/**
+ * Created by SemonCat on 15/8/3.
+ */
+public class DatabaseContext extends ContextWrapper {
+
+    private static final String DEBUG_CONTEXT = "DatabaseContext";
+    private String mDatabasePath;
+
+    public DatabaseContext(Context base,String databasePath) {
+        super(base);
+        this.mDatabasePath = databasePath;
+    }
+
+    private File getDatabaseCacheDir(){
+        return new File(mDatabasePath);
+    }
+
+    @Override
+    public File getDatabasePath(String name) {
+        File sdcard = getDatabaseCacheDir();
+        String dbfile = sdcard.getAbsolutePath() + File.separator + "databases" + File.separator + name;
+        if (!dbfile.endsWith(".db")) {
+            dbfile += ".db";
+        }
+
+        File result = new File(dbfile);
+
+        if (!result.getParentFile().exists()) {
+            result.getParentFile().mkdirs();
+        }
+
+        if (Log.isLoggable(DEBUG_CONTEXT, Log.WARN)) {
+            Log.w(DEBUG_CONTEXT,
+                    "getDatabasePath(" + name + ") = " + result.getAbsolutePath());
+        }
+
+        return result;
+    }
+
+    /* this version is called for android devices >= api-11. thank to @damccull for fixing this. */
+    @Override
+    public SQLiteDatabase openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) {
+        return openOrCreateDatabase(name, mode, factory);
+    }
+
+    /* this version is called for android devices < api-11 */
+    @Override
+    public SQLiteDatabase openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory) {
+        SQLiteDatabase result = SQLiteDatabase.openOrCreateDatabase(getDatabasePath(name), null);
+        // SQLiteDatabase result = super.openOrCreateDatabase(name, mode, factory);
+        if (Log.isLoggable(DEBUG_CONTEXT, Log.WARN)) {
+            Log.w(DEBUG_CONTEXT,
+                    "openOrCreateDatabase(" + name + ",,) = " + result.getPath());
+        }
+        return result;
+    }
+}
\ No newline at end of file
diff --git a/library/src/main/java/com/orm/SugarApp.java b/library/src/main/java/com/orm/SugarApp.java
index d15c411f..5670d6dc 100644
--- a/library/src/main/java/com/orm/SugarApp.java
+++ b/library/src/main/java/com/orm/SugarApp.java
@@ -1,6 +1,8 @@
 package com.orm;
 
-public class SugarApp extends android.app.Application{
+import android.text.TextUtils;
+
+public abstract class SugarApp extends android.app.Application{
 
     private Database database;
     private static SugarApp sugarContext;
@@ -8,7 +10,11 @@
     public void onCreate(){
         super.onCreate();
         SugarApp.sugarContext = this;
-        this.database = new Database(this);
+        if (TextUtils.isEmpty(customDatabaseParentPath())){
+            this.database = new Database(this);
+        }else{
+            this.database = new Database(new DatabaseContext(this,customDatabaseParentPath()));
+        }
     }
 
     public void onTerminate(){
@@ -25,4 +31,8 @@ public static SugarApp getSugarContext(){
     protected Database getDatabase() {
         return database;
     }
+
+    public String customDatabaseParentPath(){
+        return null;
+    }
 }
