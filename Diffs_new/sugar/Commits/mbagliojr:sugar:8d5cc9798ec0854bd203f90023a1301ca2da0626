diff --git a/library/src/main/java/com/orm/SugarRecord.java b/library/src/main/java/com/orm/SugarRecord.java
index 30a2d8ed..b4b63e06 100644
--- a/library/src/main/java/com/orm/SugarRecord.java
+++ b/library/src/main/java/com/orm/SugarRecord.java
@@ -17,6 +17,7 @@
 import com.orm.util.ReflectionUtil;
 import com.orm.util.QueryBuilder;
 
+import java.lang.IllegalStateException;
 import java.lang.Object;
 import java.lang.Override;
 import java.lang.String;
@@ -218,8 +219,6 @@ public static void executeQuery(String query, String... arguments) {
 
         Cursor c = sqLiteDatabase.rawQuery(sb.toString(), new String[0]);
 
-//        Cursor c = sqLiteDatabase.query(NamingHelper.toSQLName(type), null, whereClause, whereArgs,
-//                groupBy, null, orderBy, limit);
         try {
             while (c.moveToNext()) {
                 entity = type.getDeclaredConstructor().newInstance();
@@ -241,6 +240,19 @@ private static void appendClause(StringBuilder s, String name, String clause) {
         }
     }
 
+    public static <T> T findUnique(Class<T> type, String whereClause, String[] whereArgs) {
+        List<T> list = find(type, whereClause, whereArgs, null, null, null);
+        if(list == null || list.isEmpty()) {
+            return null;
+        }
+
+        if(list.size() > 1) {
+            throw new IllegalStateException("Find unique was called but database contained more than one matching result.");
+        }
+
+        return list.get(0);
+    }
+
     public static <T> List<T> find(Class<T> type, String whereClause, String[] whereArgs, String groupBy, String orderBy, String limit) {
         SugarDb db = getSugarContext().getSugarDb();
         SQLiteDatabase sqLiteDatabase = db.getDB();
diff --git a/library/src/main/java/com/orm/query/Select.java b/library/src/main/java/com/orm/query/Select.java
index 9c52a9b4..7491826c 100644
--- a/library/src/main/java/com/orm/query/Select.java
+++ b/library/src/main/java/com/orm/query/Select.java
@@ -135,7 +135,7 @@ public T first() {
         return list.size() > 0 ? list.get(0) : null;
     }
     
-    String toSql() {
+    public String toSql() {
         StringBuilder sql = new StringBuilder();
         sql.append("SELECT * FROM ").append(NamingHelper.toSQLName(this.record)).append(" ");
 
@@ -158,11 +158,11 @@ String toSql() {
         return sql.toString();
     }
 
-    String getWhereCond() {
+    public String getWhereCond() {
         return whereClause;
     }
 
-    String[] getArgs() {
+    public String[] getArgs() {
         return convertArgs(args);
     }
 
