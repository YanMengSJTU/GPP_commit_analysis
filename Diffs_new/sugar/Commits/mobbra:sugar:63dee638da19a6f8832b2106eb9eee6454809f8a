diff --git a/library/src/com/orm/SugarApp.java b/library/src/com/orm/SugarApp.java
index ac7da99d..881c23df 100644
--- a/library/src/com/orm/SugarApp.java
+++ b/library/src/com/orm/SugarApp.java
@@ -1,14 +1,15 @@
 package com.orm;
 
-public class SugarApp extends android.app.Application{
+import android.content.Context;
+
+public class SugarApp {
 
     private Database database;
     private static SugarApp sugarContext;
-
-    public void onCreate(){
-        super.onCreate();
+    
+    public SugarApp(Context context){
         SugarApp.sugarContext = this;
-        this.database = new Database(this);
+        this.database = new Database(context);
     }
 
     /*
@@ -21,7 +22,6 @@ public void onTerminate(){
         if (this.database != null) {
             this.database.getDB().close();
         }
-        super.onTerminate();
     }
 
     public static SugarApp getSugarContext(){
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index f6ea0fd8..6c57e744 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -48,7 +48,6 @@ public long save() {
         return save(getSugarContext().getDatabase().getDB());
     }
 
-    @SuppressWarnings("deprecation")
     public static <T extends SugarRecord<?>> void saveInTx(T... objects ) {
         saveInTx(Arrays.asList(objects));
     }
@@ -86,7 +85,7 @@ long save(SQLiteDatabase db) {
                 if (SugarRecord.class.isAssignableFrom(columnType)) {
                     values.put(columnName,
                             (columnValue != null)
-                                    ? String.valueOf(((SugarRecord) columnValue).id)
+                                    ? String.valueOf(((SugarRecord<?>) columnValue).id)
                                     : "0");
                 } else {
                     if (columnType.equals(Short.class) || columnType.equals(short.class)) {
@@ -272,7 +271,7 @@ void inflate(Cursor cursor) {
         for (Field field : columns) {
             field.setAccessible(true);
             try {
-                Class fieldType = field.getType();
+                Class<?> fieldType = field.getType();
                 String colName = StringUtil.toSQLName(field);
 
                 int columnIndex = cursor.getColumnIndex(colName);
diff --git a/library/src/com/orm/query/Select.java b/library/src/com/orm/query/Select.java
index 95688297..94ccbaa0 100644
--- a/library/src/com/orm/query/Select.java
+++ b/library/src/com/orm/query/Select.java
@@ -6,7 +6,7 @@
 import java.util.Iterator;
 import java.util.List;
 
-public class Select<T extends SugarRecord<?>> implements Iterable {
+public class Select<T extends SugarRecord<?>> implements Iterable<T> {
 
     private Class<T> record;
     private String[] arguments;
