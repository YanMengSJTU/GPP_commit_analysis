diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index d3a5e8fc..f6b749d1 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -9,7 +9,9 @@
 import com.orm.dsl.Table;
 import com.orm.util.NamingHelper;
 import com.orm.util.ReflectionUtil;
+import com.orm.util.QueryBuilder;
 
+import java.lang.String;
 import java.lang.reflect.Field;
 import java.util.*;
 
@@ -68,6 +70,11 @@
         return findById(type, Long.valueOf(id));
     }
 
+    public static <T> List<T> findById(Class<T> type, String[] ids) {
+        String whereClause = "id IN (" + QueryBuilder.generateParameterizedPlaceholders(ids.length) + ")";
+        return find(type, whereClause, ids);
+    }
+
     public static <T> Iterator<T> findAll(Class<T> type) {
         return findAsIterator(type, null, null, null, null, null);
     }
diff --git a/library/src/com/orm/util/QueryBuilder.java b/library/src/com/orm/util/QueryBuilder.java
index 6de9e8ca..dc359b1f 100644
--- a/library/src/com/orm/util/QueryBuilder.java
+++ b/library/src/com/orm/util/QueryBuilder.java
@@ -2,6 +2,9 @@
 
 import com.orm.SugarRecord;
 
+import java.lang.RuntimeException;
+import java.lang.StringBuilder;
+
 public class QueryBuilder {
 
     public static String getColumnType(Class<?> type) {
@@ -38,4 +41,16 @@ public static String getColumnType(Class<?> type) {
         return "";
     }
 
+    public static String generateParameterizedPlaceholders(int numberOfArgs) {
+        if (numberOfArgs < 1) {
+            throw new RuntimeException("The number of arguments must be greater than or equal to 1.");
+        }
+
+        StringBuilder stringBuilder = new StringBuilder(numberOfArgs * 2 - 1);
+        stringBuilder.append("?");
+        for (int i = 1; i < numberOfArgs; i++) {
+            stringBuilder.append(",?");
+        }
+        return stringBuilder.toString();
+    }
 }
