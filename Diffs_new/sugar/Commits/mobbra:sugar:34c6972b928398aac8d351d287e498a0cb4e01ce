diff --git a/library/project.properties b/library/project.properties
index 05d02d38..31981fa9 100644
--- a/library/project.properties
+++ b/library/project.properties
@@ -1,3 +1,3 @@
 android.library=true
 # Project target.
-target=android-15
+target=Google Inc.:Glass Development Kit Preview:19
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 30eba6ee..f6ea0fd8 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -15,6 +15,9 @@
 import java.sql.Timestamp;
 import java.util.*;
 
+import org.json.JSONArray;
+import org.json.JSONObject;
+
 import static com.orm.SugarApp.getSugarContext;
 
 public class SugarRecord<T>{
@@ -316,6 +319,24 @@ void inflate(Cursor cursor) {
                     Calendar c = Calendar.getInstance();
                     c.setTimeInMillis(l);
                     field.set(this, c);
+                } else if (fieldType.equals(JSONObject.class)) {
+                	String val = cursor.getString(columnIndex);
+                	try {
+                		JSONObject j = new JSONObject( val );
+                		field.set( this, j );
+                	}
+                	catch (Exception e) {
+                        Log.e("Sugar", "JSONObject cannot be read from Sqlite3 database. Please check the type of field " + field.getName());
+                    }
+                } else if (fieldType.equals(JSONArray.class)) {
+                	String val = cursor.getString(columnIndex);
+                	try {
+                		JSONArray j = new JSONArray( val );
+                		field.set( this, j );
+                	}
+                	catch (Exception e) {
+                        Log.e("Sugar", "JSONObject cannot be read from Sqlite3 database. Please check the type of field " + field.getName());
+                    }
                 } else if (Enum.class.isAssignableFrom(fieldType)) {
                     try {
                         Method valueOf = field.getType().getMethod("valueOf", String.class);
