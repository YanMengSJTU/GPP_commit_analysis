diff --git a/example/src/com/example/Note.java b/example/src/com/example/Note.java
index 440f142e..1ede3bfb 100755
--- a/example/src/com/example/Note.java
+++ b/example/src/com/example/Note.java
@@ -1,20 +1,30 @@
 package com.example;
 
+import java.util.Calendar;
 import com.orm.SugarRecord;
 
-@SuppressWarnings("unused")
 public class Note extends SugarRecord<Note> {
 	private int noteId;
 	private String title;
 	private String description;
-	private String name;
-	private Integer noteNumber = 2;
-	private Float tagNumber = 4.0f;
-	private float tagNo = 5.0f;
-	private Boolean isTag = true;
-	private boolean isTagged = false;
-	private Double noteTagNo = 40.5;
-	private double noteTagNumber = 24.4;
+
+	private Integer testIntegerObj;
+	private Integer testIntegerObjNull;
+	private int testInteger;
+	private Float testFloatObj;
+	private float testFloat;
+	private Boolean testBooleanObj;
+	private boolean testBoolean;
+	private Double testDoubleObj;
+	private double testDouble;
+	private Byte testByteObj;
+	private byte testByte;
+	private Long testLongObj;
+	private long testLong;
+	private byte[] testBytes;
+	private Calendar testDate;
+	private Calendar testDateNull;
+
 	private Tag tag;
 
 	public Note() {
@@ -25,6 +35,60 @@ public Note(int noteId, String title, String description, Tag tag) {
 		this.title = title;
 		this.description = description;
 		this.tag = tag;
+
+		testIntegerObj = 2;
+		testIntegerObjNull = null;
+		testInteger = 3;
+		testFloatObj = 4.0f;
+		testFloat = 5.0f;
+		testBooleanObj = false;
+		testBoolean = true;
+		testDoubleObj = 40.5;
+		testDouble = 24.4;
+		testByteObj = 124;
+		testByte = 125;
+		testLongObj = 13545L;
+		testLong = 13546L;
+		testBytes = new byte[] { 1, 2, 3, 4 };
+		testDate = Calendar.getInstance();
+		testDateNull = null;
+	}
+
+	public boolean Validate() {
+		if (testIntegerObj != 2)
+			return false;
+		if (testIntegerObjNull != null)
+			return false;
+		if (testInteger != 3)
+			return false;
+		if (testFloatObj != 4.0f)
+			return false;
+		if (testFloat != 5.0f)
+			return false;
+		if (testBooleanObj != false)
+			return false;
+		if (testBoolean != true)
+			return false;
+		if (testDoubleObj != 40.5)
+			return false;
+		if (testDouble != 24.4)
+			return false;
+		if (testByteObj != 124)
+			return false;
+		if (testByte != 125)
+			return false;
+		if (testLongObj != 13545L)
+			return false;
+		if (testLong != 13546L)
+			return false;
+		if (testBytes == null)
+			return false;
+		if (testDate == null)
+			return false;
+		if (testDateNull != null)
+			return false;
+
+		return true;
 	}
 
 	public int getNoteId() {
diff --git a/example/src/com/example/SugarActivity.java b/example/src/com/example/SugarActivity.java
index 1ecaff96..60ca3b65 100755
--- a/example/src/com/example/SugarActivity.java
+++ b/example/src/com/example/SugarActivity.java
@@ -1,10 +1,13 @@
 package com.example;
 
+import com.orm.query.Select;
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 
 public class SugarActivity extends Activity {
+	
 	/** Called when the activity is first created. */
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
@@ -30,6 +33,8 @@ private void initDb() {
 		Note n3 = new Note(10, "note3", "description3", t2);
 		Note n4 = new Note(10, "note4", "description4", t2);
 
+		if (!n1.Validate()) Log.e("TEST", "Validation before saving failed!");
+		
 		TextNote textNote = new TextNote();
 		textNote.desc = "Test";
 
@@ -49,5 +54,7 @@ private void initDb() {
 		n3.setTitle("batrix");
 		n3.save();
 
+        Note existingNote = Select.from(Note.class).where("TITLE = ?", new String[] { "atrix" }).first();
+        if (!existingNote.Validate()) Log.e("TEST", "Validation after loading failed!");
 	}
 }
diff --git a/library/src/com/orm/QueryBuilder.java b/library/src/com/orm/QueryBuilder.java
index 8b1ca32e..e0f98222 100644
--- a/library/src/com/orm/QueryBuilder.java
+++ b/library/src/com/orm/QueryBuilder.java
@@ -8,6 +8,10 @@ public static String getColumnType(Class<?> type) {
                 (type.equals(java.util.Date.class)) ||
                 (type.equals(java.util.Calendar.class)) ||
                 (type.equals(java.sql.Date.class)) ||
+                (type.equals(Byte.class)) ||
+                (type.equals(Byte.TYPE)) ||
+                (type.equals(Short.class)) ||
+                (type.equals(Short.TYPE)) ||
                 (type.equals(Integer.class)) ||
                 (type.equals(Integer.TYPE)) ||
                 (type.equals(Long.class)) ||
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 02c611bc..32009b1e 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -101,6 +101,9 @@ protected void save(SQLiteDatabase db) {
                         if (columnValue == null) {
                             values.putNull(columnName);
                         }
+                        else if (columnType.equals(Byte.class) || columnType.equals(byte.class)) {
+                            values.put(columnName, (Byte) columnValue);
+                        } 
                         else if (columnType.equals(Short.class) || columnType.equals(short.class)) {
                             values.put(columnName, (Short) columnValue);
                         } 
@@ -348,6 +351,12 @@ else if (fieldType.equals(short.class)) {
                 else if (fieldType.equals(Short.class)) {
                     field.set(this, (Short) cursor.getShort(index));
                 } 
+                else if (fieldType.equals(byte.class)) {
+                    field.set(this, (byte) cursor.getShort(index));
+                } 
+                else if (fieldType.equals(Byte.class)) {
+                    field.set(this, (Byte) (byte) cursor.getShort(index));
+                } 
                 else if (fieldType.equals(Uri.class)) {
                     String uri = cursor.getString(index);
                     field.set(this, Uri.parse(uri));
