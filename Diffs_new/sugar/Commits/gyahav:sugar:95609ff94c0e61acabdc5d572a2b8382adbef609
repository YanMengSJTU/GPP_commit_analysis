diff --git a/build.gradle b/build.gradle
index 030e1cb3..a7c9b69d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,9 +5,10 @@ apply plugin: 'java'
 buildscript {
     repositories {
         mavenCentral()
+        google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0'
+        classpath 'com.android.tools.build:gradle:3.4.1'
         classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
     }
 }
@@ -28,6 +29,7 @@ allprojects {
         mavenLocal()
         mavenCentral()
         jcenter()
+        google()
     }
 }
 
diff --git a/example/build.gradle b/example/build.gradle
index a8b90f05..5860bf43 100644
--- a/example/build.gradle
+++ b/example/build.gradle
@@ -1,13 +1,12 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 23
-    buildToolsVersion "23.0.3"
+    compileSdkVersion 29
 
     defaultConfig {
         applicationId "com.example"
-        minSdkVersion 9
-        targetSdkVersion 23
+        minSdkVersion 14
+        targetSdkVersion 29
     }
     buildTypes {
         release {
@@ -20,6 +19,17 @@ android {
 }
 
 dependencies {
-    compile project (':library')
-    compile 'com.android.support:appcompat-v7:23.3.0'
+    implementation project (':library')
+    implementation 'androidx.appcompat:appcompat:1.0.2'
 }
+configurations.all {
+    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
+        def requested = details.requested
+        if (requested.group == 'com.android.support') {
+            if (!requested.name.startsWith("multidex")) {
+                details.useVersion '27.1.1'
+            }
+        }
+    }
+}
+
diff --git a/example/src/main/AndroidManifest.xml b/example/src/main/AndroidManifest.xml
index eb802533..f1ad6f69 100644
--- a/example/src/main/AndroidManifest.xml
+++ b/example/src/main/AndroidManifest.xml
@@ -3,7 +3,7 @@
       package="com.example"
       android:versionCode="1"
       android:versionName="1.0">
-    <application android:label="@string/app_name" android:icon="@drawable/icon" android:name="ClientApp">
+    <application android:label="@string/app_name" android:icon="@drawable/icon" android:name=".activities.MyApp">
         <activity android:name=".activities.SugarActivity" android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
diff --git a/example/src/main/java/com/example/activities/Model.java b/example/src/main/java/com/example/activities/Model.java
new file mode 100644
index 00000000..ce6a1e62
--- /dev/null
+++ b/example/src/main/java/com/example/activities/Model.java
@@ -0,0 +1,18 @@
+package com.example.activities;
+
+import com.orm.SugarRecord;
+import com.orm.annotation.NotNull;
+
+public class Model extends SugarRecord {
+
+    @NotNull(value = "666")
+    public Long defaultInt;
+    @NotNull(value = "Def")
+    public String defaultString;
+
+    public Model() {}
+    public Model(Long val1, String val2) {
+        defaultInt = val1;
+        defaultString = val2;
+    }
+}
diff --git a/example/src/main/java/com/example/activities/MyApp.java b/example/src/main/java/com/example/activities/MyApp.java
new file mode 100644
index 00000000..c5eb0d2d
--- /dev/null
+++ b/example/src/main/java/com/example/activities/MyApp.java
@@ -0,0 +1,23 @@
+package com.example.activities;
+
+import android.app.Application;
+
+import com.orm.SchemaGenerator;
+import com.orm.SugarContext;
+import com.orm.SugarDb;
+
+public class MyApp extends Application {
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+
+//        Utils.handleSSLHandshake();
+
+        SugarContext.init(this);
+
+        // create table if not exists
+        SchemaGenerator schemaGenerator = SchemaGenerator.getInstance();
+        schemaGenerator.createDatabase(SugarDb.getInstance().getDB());
+    }
+}
diff --git a/example/src/main/java/com/example/activities/SugarActivity.java b/example/src/main/java/com/example/activities/SugarActivity.java
index 81044546..7b0184ad 100644
--- a/example/src/main/java/com/example/activities/SugarActivity.java
+++ b/example/src/main/java/com/example/activities/SugarActivity.java
@@ -14,5 +14,9 @@ public void onCreate(Bundle savedInstanceState)
     {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.main);
+
+        new Model().save();
+        new Model(1111L, "2222").save();
+
     }
 }
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index b0bb3ffb..8c34cb6a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat Apr 09 17:51:14 ART 2016
+#Mon Jul 08 10:59:35 IDT 2019
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.1.1-all.zip
diff --git a/library/build.gradle b/library/build.gradle
index 907162ee..b3f49f61 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -2,12 +2,11 @@ apply plugin: 'com.android.library'
 apply from: '../maven_push.gradle'
 
 android {
-    compileSdkVersion 23
-    buildToolsVersion "23.0.3"
+    compileSdkVersion 29
 
     defaultConfig {
-        minSdkVersion 9
-        targetSdkVersion 23
+        minSdkVersion 14
+        targetSdkVersion 29
     }
     buildTypes {
         release {
@@ -23,14 +22,17 @@ android {
 }
 
 dependencies {
-    testCompile 'junit:junit:4.12'
-    testCompile 'org.robolectric:robolectric:3.0'
+    testImplementation 'junit:junit:4.12'
+    testImplementation 'org.robolectric:robolectric:3.0'
 }
-
-task libraryJar(type: Jar) {
-    dependsOn assembleRelease
-    from android.sourceSets.main.java.srcDirs,
-         ['build/intermediates/classes/release/'] // Add the release classes into the jar
-    baseName 'sugar'
+configurations.all {
+    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
+        def requested = details.requested
+        if (requested.group == 'com.android.support') {
+            if (!requested.name.startsWith("multidex")) {
+                details.useVersion '27.1.1'
+            }
+        }
+    }
 }
 
diff --git a/library/src/main/java/com/orm/SchemaGenerator.java b/library/src/main/java/com/orm/SchemaGenerator.java
index c25407fc..e7794103 100644
--- a/library/src/main/java/com/orm/SchemaGenerator.java
+++ b/library/src/main/java/com/orm/SchemaGenerator.java
@@ -34,6 +34,7 @@
 public class SchemaGenerator {
     public static final String NULL = " NULL";
     public static final String NOT_NULL = " NOT NULL";
+    public static final String DEFAULT = " DEFAULT";
     public static final String UNIQUE = " UNIQUE";
     public static final String SUGAR = "Sugar";
 
@@ -236,6 +237,11 @@ protected String createTableSQL(Class<?> table) {
                             sb.delete(sb.length() - 5, sb.length());
                         }
                         sb.append(NOT_NULL);
+                        String constraint = column.getAnnotation(NotNull.class).value();
+
+                        if(!constraint.isEmpty()) {
+                            sb.append(DEFAULT).append(" ").append(constraint);
+                        }
                     }
 
                     if (columnAnnotation.unique()) {
@@ -250,6 +256,11 @@ protected String createTableSQL(Class<?> table) {
                             sb.delete(sb.length() - 5, sb.length());
                         }
                         sb.append(NOT_NULL);
+                        String constraint = column.getAnnotation(NotNull.class).value();
+
+                        if(!constraint.isEmpty()) {
+                            sb.append(DEFAULT).append(" ").append(constraint);
+                        }
                     }
 
                     if (column.isAnnotationPresent(Unique.class)) {
diff --git a/library/src/main/java/com/orm/annotation/NotNull.java b/library/src/main/java/com/orm/annotation/NotNull.java
index f3a6f585..3d395d59 100644
--- a/library/src/main/java/com/orm/annotation/NotNull.java
+++ b/library/src/main/java/com/orm/annotation/NotNull.java
@@ -8,4 +8,5 @@
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.FIELD)
 public @interface NotNull {
+    String value() default "";
 }
