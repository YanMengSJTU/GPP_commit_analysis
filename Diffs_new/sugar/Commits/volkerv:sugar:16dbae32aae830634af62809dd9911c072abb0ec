diff --git a/library/build.gradle b/library/build.gradle
index 6f28502d..bee4f1ec 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -2,12 +2,12 @@ apply plugin: 'com.android.library'
 //apply from: '../maven_push.gradle'
 
 android {
-    compileSdkVersion 23
-    buildToolsVersion '27.0.3'
+    compileSdkVersion 28
+    buildToolsVersion '28.0.3'
 
     defaultConfig {
-        minSdkVersion 9
-        targetSdkVersion 23
+        minSdkVersion 16
+        targetSdkVersion 28
     }
     buildTypes {
         release {
diff --git a/library/src/main/java/com/orm/SugarRecord.java b/library/src/main/java/com/orm/SugarRecord.java
index ca5ee257..f9d6f252 100644
--- a/library/src/main/java/com/orm/SugarRecord.java
+++ b/library/src/main/java/com/orm/SugarRecord.java
@@ -184,6 +184,29 @@ private static SQLiteDatabase getSugarDataBase() {
         return new CursorIterator<>(type, cursor);
     }
 
+    public static <T> List<Long>  findIds(Class<T> type, String whereClause, String... whereArgs) {
+        return findIds(type, whereClause, whereArgs, null, null, null);
+    }
+
+    public static <T> List<Long> findIds(Class<T> type, String whereClause, String[] whereArgs, String groupBy, String orderBy, String limit) {
+        List<Long> result = new ArrayList<>( );
+
+        Cursor cursor = getSugarDataBase().query(NamingHelper.toTableName(type), new String[]{"id"}, whereClause, whereArgs,
+                groupBy, null, orderBy, limit);
+        if ( cursor.moveToFirst() )
+        {
+            do
+            {
+                result.add( cursor.getLong(0) );
+            }
+            while (cursor.moveToNext());
+        }
+
+        cursor.close( );
+
+        return result;
+    }
+
     public static <T> List<T> find(Class<T> type, String whereClause, String... whereArgs) {
         return find(type, whereClause, whereArgs, null, null, null);
     }
@@ -229,8 +252,7 @@ public static void executeQuery(String query, String... arguments) {
         try {
             while (cursor.moveToNext()) {
                 entity = type.getDeclaredConstructor().newInstance();
-                new EntityInflater()
-                        .withCursor(cursor)
+                new EntityInflater().withCursor(cursor)
                         .withObject(entity)
                         .withEntitiesMap(getSugarContext().getEntitiesMap())
                         .withRelationFieldName(relationFieldName)
