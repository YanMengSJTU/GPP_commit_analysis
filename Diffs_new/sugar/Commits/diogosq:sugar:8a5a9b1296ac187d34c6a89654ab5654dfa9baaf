diff --git a/library/src/main/java/com/orm/SugarRecord.java b/library/src/main/java/com/orm/SugarRecord.java
index 3ce0756b..20f7754b 100644
--- a/library/src/main/java/com/orm/SugarRecord.java
+++ b/library/src/main/java/com/orm/SugarRecord.java
@@ -23,12 +23,12 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.NoSuchElementException;
 
+
 import static com.orm.SugarContext.getSugarContext;
 
 public class SugarRecord {
@@ -307,11 +307,10 @@ static long save(SQLiteDatabase db, Object object) {
         Map<Object, Long> entitiesMap = getSugarContext().getEntitiesMap();
         List<Field> columns = ReflectionUtil.getTableFields(object.getClass());
         ContentValues values = new ContentValues(columns.size());
-        Field idField = null;
-
         boolean isSugarEntity = isSugarEntity(object.getClass());
 
-        if(object.getClass().isAnnotationPresent(PrimaryKey.class)){
+        Field idField = findPrimaryKeyNotationField(object.getClass());
+        if(idField != null){
             for(Field column : columns){
                 ReflectionUtil.addFieldValueToColumn(values, column, object, entitiesMap);
 
@@ -474,7 +473,13 @@ public static boolean delete(Object object) {
                 field.setAccessible(true);
                 Long id = (Long) field.get(object);
                 if (id != null && id > 0L) {
-                    boolean deleted = getSugarDataBase().delete(NamingHelper.toSQLName(type), "Id=?", new String[]{id.toString()}) == 1;
+                    boolean deleted;
+                    if(idField != null){
+                        deleted = getSugarDataBase().delete(NamingHelper.toSQLName(type), NamingHelper.toSQLName(idField) + "=?",
+                                                            new String[] {id.toString()}) == 1;
+                    }else{
+                        deleted = getSugarDataBase().delete(NamingHelper.toSQLName(type), "Id=?", new String[] {id.toString()}) == 1;
+                    }
                     Log.i(SUGAR, type.getSimpleName() + " deleted : " + id);
                     return deleted;
                 } else {
@@ -482,10 +487,10 @@ public static boolean delete(Object object) {
                     return false;
                 }
             } catch (NoSuchFieldException e) {
-                Log.i(SUGAR, "Cannot delete object: " + object.getClass().getSimpleName() + " - annotated object has no id");
+                Log.i(SUGAR, "Cannot delete object: " + object.getClass().getSimpleName() + " - annotated object has no pk");
                 return false;
             } catch (IllegalAccessException e) {
-                Log.i(SUGAR, "Cannot delete object: " + object.getClass().getSimpleName() + " - can't access id");
+                Log.i(SUGAR, "Cannot delete object: " + object.getClass().getSimpleName() + " - can't access pk");
                 return false;
             }
         } else if (SugarRecord.class.isAssignableFrom(type)) {
