diff --git a/.gitignore b/.gitignore
index b2d2fc5b..d0868fcb 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,6 +1,7 @@
-library/bin
-library/gen
-library/.project
-library/.classpath
+bin
+gen
+.project
+.classpath
 *.class
 .DS_Store
+
diff --git a/example/default.properties b/example/default.properties
deleted file mode 100755
index e2e8061f..00000000
--- a/example/default.properties
+++ /dev/null
@@ -1,11 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-#
-# This file must be checked in Version Control Systems.
-#
-# To customize properties used by the Ant build system use,
-# "build.properties", and override values to adapt the script to your
-# project structure.
-
-# Project target.
-target=android-8
diff --git a/example/libs/sugar-1.1.jar b/example/libs/sugar-1.1.jar
deleted file mode 100755
index 96a6b77e..00000000
Binary files a/example/libs/sugar-1.1.jar and /dev/null differ
diff --git a/example/project.properties b/example/project.properties
new file mode 100644
index 00000000..debfe960
--- /dev/null
+++ b/example/project.properties
@@ -0,0 +1,15 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Project target.
+target=android-3
+android.library.reference.1=../library
diff --git a/example/src/com/example/NoteListActivity.java b/example/src/com/example/NoteListActivity.java
index bdb09993..8bb3d3a5 100755
--- a/example/src/com/example/NoteListActivity.java
+++ b/example/src/com/example/NoteListActivity.java
@@ -5,6 +5,8 @@
 import android.os.Bundle;
 import android.view.View;
 import android.widget.ArrayAdapter;
+
+import com.orm.query.Condition;
 import com.orm.query.Select;
 
 import java.util.List;
@@ -15,7 +17,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.notelist);
 
-        List<Note> notes = Select.from(Note.class).orderBy("title").list();//Note.listAll(Note.class);
+        List<Note> notes = (List<Note>) Select.from(Note.class).orderBy("title").list();//Note.listAll(Note.class);
 
         setListAdapter(new ArrayAdapter<Note>(this,android.R.layout.simple_list_item_1, notes));
 
@@ -25,6 +27,9 @@ public void onClick(View view) {
                 startActivity(intent);
             }
         });
+        
+        // TEST COUNT
+        android.util.Log.d("COUNT", "Count: " + Select.from(Note.class).where("title like '%ba%'").count() +"/"+notes.size());
     }
 
 }
\ No newline at end of file
diff --git a/example/src/com/example/SugarActivity.java b/example/src/com/example/SugarActivity.java
index a719c2f8..f691a92a 100755
--- a/example/src/com/example/SugarActivity.java
+++ b/example/src/com/example/SugarActivity.java
@@ -31,12 +31,9 @@ private void initDb() {
         t1.save();
         t2.save();
 
-
-
-
         Note n1 = new Note(this, 10, "note1", "description1", t1);
-        Note n2 = new Note(this, 10, "note2", "description2", t1);
-        Note n3 = new Note(this, 10, "note3", "description3", t2);
+        Note n2 = new Note(this, 10, "note12", "description2", t1);
+        Note n3 = new Note(this, 10, "note13", "description3", t2);
         Note n4 = new Note(this, 10, "note4", "description4", t2);
 
          TextNote textNote = new TextNote(this);
@@ -57,6 +54,8 @@ private void initDb() {
          n3.setDescription("matrix");
          n3.setTitle("batrix");
          n3.save();
+         
+        
 
     }
 }
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 4af222c9..478d2855 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -259,6 +259,33 @@ public static void executeQuery(String query, String... arguments){
         }
         return toRet;
     }
+    
+    public static <T extends SugarRecord<?>> int count(Class<?> type,
+            String whereClause, String[] whereArgs) {
+    	return count(type, whereClause, whereArgs, null, null, null);
+    }
+    
+    public static <T extends SugarRecord<?>> int count(Class<?> type,
+            String whereClause, String[] whereArgs,
+            String groupBy, String orderBy, String limit) {
+    	
+    	Database db = getSugarContext().getDatabase();
+        SQLiteDatabase sqLiteDatabase = db.getDB();
+        
+        int toRet = -1;
+        Cursor c = sqLiteDatabase.query(getTableName(type), null,
+                whereClause, whereArgs, groupBy, null, orderBy, limit);
+                
+        try {
+        	toRet = c.getCount();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            c.close();
+        }
+        
+    	return toRet;
+    }
 
     @SuppressWarnings("unchecked")
     void inflate(Cursor cursor) {
diff --git a/library/src/com/orm/query/Select.java b/library/src/com/orm/query/Select.java
index 9e99c2f2..b277aa76 100644
--- a/library/src/com/orm/query/Select.java
+++ b/library/src/com/orm/query/Select.java
@@ -102,6 +102,13 @@ private void mergeConditions(Condition[] conditions, Condition.Type type) {
         return T.find(record, whereClause, arguments, groupBy, orderBy, limit);
 
     }
+    
+    public int count() {
+    	
+    	if(arguments == null) arguments = convertArgs(args);
+    	
+    	return SugarRecord.count(record, whereClause, arguments, groupBy, orderBy, limit);
+    }
 
     public T first() {
 
