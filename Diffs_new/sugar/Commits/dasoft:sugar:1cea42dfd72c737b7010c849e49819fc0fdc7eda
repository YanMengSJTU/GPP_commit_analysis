diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 30eba6ee..b66e45af 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -8,6 +8,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 import com.orm.dsl.Ignore;
+import com.orm.dsl.Table;
 
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
@@ -343,7 +344,7 @@ void inflate(Cursor cursor) {
 
         for (Field f : entities.keySet()) {
             try {
-                f.set(this, findById((Class<? extends SugarRecord<?>>) f.getType(), 
+                f.set(this, findById((Class<? extends SugarRecord<?>>) f.getType(),
                         entities.get(f)));
             } catch (SQLiteException e) {
             } catch (IllegalArgumentException e) {
@@ -388,7 +389,11 @@ public String getSqlName() {
 
 
     public static String getTableName(Class<?> type) {
-        return StringUtil.toSQLNameDefault(type.getSimpleName());
+        if(type.isAnnotationPresent(Table.class)) {
+            return type.getAnnotation(Table.class).name();
+        } else {
+            return StringUtil.toSQLNameDefault(type.getSimpleName());
+        }
     }
 
     public Long getId() {
diff --git a/library/src/com/orm/dsl/Table.java b/library/src/com/orm/dsl/Table.java
new file mode 100644
index 00000000..abeea600
--- /dev/null
+++ b/library/src/com/orm/dsl/Table.java
@@ -0,0 +1,10 @@
+package com.orm.dsl;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+@Retention(RetentionPolicy.RUNTIME)
+public @interface Table
+{
+    String name();
+}
