diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
index 7098ae47..197e0fdb 100644
--- a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
@@ -226,4 +226,42 @@ public void persistingRelationshipsExtending() {
 
         assertNotNull(subCategoryList.iterator().next().getCategory());
     }
+
+    // Issue #250
+    @Test
+    public void deleteAllAndSave() {
+        String name = "Name";
+        Category category = new Category(name);
+        SugarRecord.save(category);
+
+        List<Category> categoryList = Select.from(Category.class).list();
+        assertNotNull(categoryList);
+        assertEquals(1, categoryList.size());
+
+        SugarRecord.deleteAll(Category.class);
+        SugarRecord.save(category);
+
+        List<Category> categoryListAfterDelete = Select.from(Category.class).list();
+        assertNotNull(categoryListAfterDelete);
+        assertEquals(1, categoryListAfterDelete.size());
+    }
+
+    // Issue #250
+    @Test
+    public void deleteAllAndSaveExtending() {
+        String name = "Name";
+        CategoryExtending category = new CategoryExtending(name);
+        SugarRecord.save(category);
+
+        List<CategoryExtending> categoryList = Select.from(CategoryExtending.class).list();
+        assertNotNull(categoryList);
+        assertEquals(1, categoryList.size());
+
+        SugarRecord.deleteAll(CategoryExtending.class);
+        SugarRecord.save(category);
+
+        List<CategoryExtending> categoryListAfterDelete = Select.from(CategoryExtending.class).list();
+        assertNotNull(categoryListAfterDelete);
+        assertEquals(1, categoryListAfterDelete.size());
+    }
 }
