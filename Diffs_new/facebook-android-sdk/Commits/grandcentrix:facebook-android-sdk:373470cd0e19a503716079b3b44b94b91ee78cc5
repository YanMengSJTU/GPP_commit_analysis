diff --git a/README.md b/README.md
index 4746490d1..fcfc937a5 100644
--- a/README.md
+++ b/README.md
@@ -19,4 +19,6 @@ This library includes three sample applications to guide you in development.
 
 Report Issues/Bugs
 ===============
-[Facebook Stackoverflow](http://facebook.stackoverflow.com/questions/tagged/android)
+[Bugs](https://developers.facebook.com/bugs)
+
+[Questions](http://facebook.stackoverflow.com/questions/tagged/android)
diff --git a/examples/Hackbook/AndroidManifest.xml b/examples/Hackbook/AndroidManifest.xml
index 68f80f362..afd4c5307 100644
--- a/examples/Hackbook/AndroidManifest.xml
+++ b/examples/Hackbook/AndroidManifest.xml
@@ -1,49 +1,49 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-	package="com.facebook.android" 
-	android:versionCode="1"
-	android:versionName="1.0">
-	<supports-screens
-            android:smallScreens="true"
-            android:normalScreens="true"
-            android:largeScreens="true"
-            android:anyDensity="true" />
-	<application android:icon="@drawable/icon" 
-	    android:label="@string/app_name"
-		android:debuggable="true">
-		<activity android:name=".SplashActivity" 
-		    android:label="@string/app_name"
-		    android:screenOrientation="portrait">
-			<intent-filter>
-				<action android:name="android.intent.action.MAIN" />
-				<category android:name="android.intent.category.LAUNCHER" />
-			</intent-filter>
-		</activity>
-		<activity android:name=".Hackbook" 
-		    android:label="@string/app_name"
-		    android:configChanges="keyboardHidden"
-		    android:screenOrientation="portrait">
-		</activity>
-		<activity 
-			android:name=".GraphExplorer"
-			android:windowSoftInputMode="stateHidden"
-		    android:screenOrientation="portrait" />
-	    <activity android:name=".IntentUriHandler">
-	    	<intent-filter>
-		        <action android:name="android.intent.action.VIEW" />
-		        <category android:name="android.intent.category.DEFAULT" />
-		        <data android:scheme="fbgraphex" />
-	      	</intent-filter>
-	    </activity>
-		<activity 
-			android:name=".FriendsList"
-			android:screenOrientation="portrait" />
-		<activity 
-			android:name=".Places"
-			android:screenOrientation="portrait" />
-	</application>
-	<uses-permission android:name="android.permission.INTERNET" />
-	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-	<uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
-	<uses-sdk android:minSdkVersion="3" />
-</manifest>
\ No newline at end of file
+    package="com.facebook.android"
+    android:versionCode="1"
+    android:versionName="1.0">
+    <supports-screens
+        android:smallScreens="true"
+        android:normalScreens="true"
+        android:largeScreens="true"
+        android:anyDensity="true" />
+    <application android:icon="@drawable/icon"
+        android:label="@string/app_name"
+        android:debuggable="true">
+        <activity android:name=".SplashActivity"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".Hackbook"
+            android:label="@string/app_name"
+            android:configChanges="keyboardHidden"
+            android:screenOrientation="portrait">
+        </activity>
+        <activity
+            android:name=".GraphExplorer"
+            android:windowSoftInputMode="stateHidden"
+            android:screenOrientation="portrait" />
+        <activity android:name=".IntentUriHandler">
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <data android:scheme="fbgraphex" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".FriendsList"
+            android:screenOrientation="portrait" />
+        <activity
+            android:name=".Places"
+            android:screenOrientation="portrait" />
+    </application>
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
+    <uses-sdk android:minSdkVersion="3" />
+</manifest>
diff --git a/examples/Hackbook/res/layout/connection_item.xml b/examples/Hackbook/res/layout/connection_item.xml
index 4c77b283f..e556c0685 100644
--- a/examples/Hackbook/res/layout/connection_item.xml
+++ b/examples/Hackbook/res/layout/connection_item.xml
@@ -1,11 +1,11 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="fill_parent"
     android:layout_height="?android:attr/listPreferredItemHeight">
-    <TextView  
+    <TextView
         android:id="@+id/connection_name"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:textSize="26sp"
         android:textColor="@color/lite_blue"
         android:paddingLeft="5dp" />
-</RelativeLayout>
\ No newline at end of file
+</RelativeLayout>
diff --git a/examples/Hackbook/res/layout/fields_connections_list.xml b/examples/Hackbook/res/layout/fields_connections_list.xml
index e5e676fcd..06b48f89e 100644
--- a/examples/Hackbook/res/layout/fields_connections_list.xml
+++ b/examples/Hackbook/res/layout/fields_connections_list.xml
@@ -1,45 +1,45 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">
-	<TabHost 
-		android:layout_width="wrap_content" 
-		android:layout_height="fill_parent"
-		android:id="@+id/tabHost">
-		<RelativeLayout
-	        android:layout_height="wrap_content"
-	        android:layout_width="fill_parent">
-			<TabWidget
-				android:layout_width="fill_parent"
-				android:layout_height="wrap_content"
-				android:id="@android:id/tabs" />
-			<FrameLayout
-				android:layout_width="fill_parent"
-				android:layout_height="wrap_content"
-				android:id="@android:id/tabcontent"
-				android:layout_below="@android:id/tabs">
-				<LinearLayout 
-					android:orientation="vertical" 
-					android:layout_width="fill_parent"
-					android:layout_height="fill_parent"
-					android:id="@+id/fields_layout">
-					<Button android:id="@+id/get_fields_button"
-						android:text="@string/get_fields"
-				        android:layout_width="wrap_content"
-				        android:layout_height="wrap_content" 
-				        android:padding="10dp" />
-					<ListView
-				        android:id="@+id/fields_list"
-				        android:layout_width="fill_parent"
-				        android:layout_height="fill_parent" />
-			    </LinearLayout>
-			    <ListView
-			        android:id="@+id/connections_list"
-			        android:layout_width="fill_parent"
-			        android:layout_height="fill_parent" />
-	   		</FrameLayout>
-	   	</RelativeLayout>
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <TabHost
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:id="@+id/tabHost">
+        <RelativeLayout
+            android:layout_height="wrap_content"
+            android:layout_width="fill_parent">
+            <TabWidget
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:id="@android:id/tabs" />
+            <FrameLayout
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:id="@android:id/tabcontent"
+                android:layout_below="@android:id/tabs">
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:layout_width="fill_parent"
+                    android:layout_height="fill_parent"
+                    android:id="@+id/fields_layout">
+                    <Button android:id="@+id/get_fields_button"
+                        android:text="@string/get_fields"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:padding="10dp" />
+                    <ListView
+                        android:id="@+id/fields_list"
+                        android:layout_width="fill_parent"
+                        android:layout_height="fill_parent" />
+                </LinearLayout>
+                <ListView
+                    android:id="@+id/connections_list"
+                    android:layout_width="fill_parent"
+                    android:layout_height="fill_parent" />
+            </FrameLayout>
+        </RelativeLayout>
     </TabHost>
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/examples/Hackbook/res/layout/fields_item.xml b/examples/Hackbook/res/layout/fields_item.xml
index f1569c6a7..c072d7bd2 100644
--- a/examples/Hackbook/res/layout/fields_item.xml
+++ b/examples/Hackbook/res/layout/fields_item.xml
@@ -1,14 +1,14 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">
-    <CheckBox 
-    	android:id="@+id/fields_checkbox"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <CheckBox
+        android:id="@+id/fields_checkbox"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content" />
-    <TextView  
+    <TextView
         android:id="@+id/fields_info"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content" />
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/examples/Hackbook/res/layout/fql_query.xml b/examples/Hackbook/res/layout/fql_query.xml
index ea0f242f4..ddda019b2 100644
--- a/examples/Hackbook/res/layout/fql_query.xml
+++ b/examples/Hackbook/res/layout/fql_query.xml
@@ -1,41 +1,41 @@
 <LinearLayout
-	android:layout_width="fill_parent" 
-	android:layout_height="fill_parent" 
-	android:orientation="vertical"
-	xmlns:android="http://schemas.android.com/apk/res/android">
-	<LinearLayout
-    	android:layout_width="fill_parent"
-		android:layout_height="wrap_content">
-	    <EditText 
-	        android:layout_height="wrap_content"
-	        android:layout_width="240dp"
-	        android:layout_weight="1"
-	        android:textSize="25px"
-	        android:gravity="left|center"
-	    	android:id="@+id/fqlquery" />
-	    <Button android:id="@+id/submit_button"
-			android:text="@string/submit"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:gravity="center"
-	        android:padding="10dp" />
-	</LinearLayout>
-	<View
-		android:layout_width="fill_parent"
-		android:layout_height="3dip"
-		android:background="@color/grey" />
-	<ScrollView   
-        android:id="@+id/ScrollView01"  
-      	android:layout_height="fill_parent"   
-      	android:layout_width="fill_parent">
-	    <TextView 
-	    	android:id="@+id/fqlOutput"
-	        android:textColor="@color/white"
-	        android:layout_width="fill_parent"
-	        android:layout_height="wrap_content"
-	        android:paddingTop="3dp" 
-	        android:paddingLeft="3dp"
-	        android:visibility="invisible"
-	        android:background="@color/grey" />
-	</ScrollView>
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+        <EditText
+            android:layout_height="wrap_content"
+            android:layout_width="240dp"
+            android:layout_weight="1"
+            android:textSize="25px"
+            android:gravity="left|center"
+            android:id="@+id/fqlquery" />
+        <Button android:id="@+id/submit_button"
+            android:text="@string/submit"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:padding="10dp" />
+    </LinearLayout>
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="3dip"
+        android:background="@color/grey" />
+    <ScrollView
+        android:id="@+id/ScrollView01"
+        android:layout_height="fill_parent"
+        android:layout_width="fill_parent">
+        <TextView
+            android:id="@+id/fqlOutput"
+            android:textColor="@color/white"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:paddingTop="3dp"
+            android:paddingLeft="3dp"
+            android:visibility="invisible"
+            android:background="@color/grey" />
+    </ScrollView>
 </LinearLayout>
diff --git a/examples/Hackbook/res/layout/friend_item.xml b/examples/Hackbook/res/layout/friend_item.xml
index 08f53627a..c1c6728ed 100644
--- a/examples/Hackbook/res/layout/friend_item.xml
+++ b/examples/Hackbook/res/layout/friend_item.xml
@@ -1,10 +1,10 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="fill_parent"
-    android:padding="6dip" 
+    android:padding="6dip"
     android:layout_height="?android:attr/listPreferredItemHeight"
     android:id="@+id/friend_item">
     <ImageView
-        android:id="@+id/profile_pic"        
+        android:id="@+id/profile_pic"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_alignParentTop="true"
@@ -13,21 +13,21 @@
     <TextView
         android:id="@+id/name"
         android:layout_width="fill_parent"
-        android:layout_height="wrap_content"        
+        android:layout_height="wrap_content"
         android:layout_toRightOf="@id/profile_pic"
         android:layout_alignParentRight="true"
-        android:layout_alignParentTop="true"        
-        android:layout_alignWithParentIfMissing="true"                
+        android:layout_alignParentTop="true"
+        android:layout_alignWithParentIfMissing="true"
         android:gravity="center_vertical" />
-    <TextView  
+    <TextView
         android:id="@+id/info"
         android:layout_width="fill_parent"
-        android:layout_height="wrap_content"      
+        android:layout_height="wrap_content"
         android:layout_toRightOf="@id/profile_pic"
         android:layout_below="@id/name"
         android:layout_alignParentBottom="true"
-        android:layout_alignParentRight="true"       
-        android:layout_alignWithParentIfMissing="true"         
+        android:layout_alignParentRight="true"
+        android:layout_alignWithParentIfMissing="true"
         android:singleLine="true"
         android:ellipsize="marquee" />
-</RelativeLayout>
\ No newline at end of file
+</RelativeLayout>
diff --git a/examples/Hackbook/res/layout/friends_list.xml b/examples/Hackbook/res/layout/friends_list.xml
index 5cb8e19f1..82e565181 100644
--- a/examples/Hackbook/res/layout/friends_list.xml
+++ b/examples/Hackbook/res/layout/friends_list.xml
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">  
-	<ListView
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <ListView
         android:id="@+id/friends_list"
         android:layout_width="fill_parent"
-        android:layout_height="fill_parent" /> 
- </LinearLayout>
\ No newline at end of file
+        android:layout_height="fill_parent" />
+ </LinearLayout>
diff --git a/examples/Hackbook/res/layout/graph_explorer.xml b/examples/Hackbook/res/layout/graph_explorer.xml
index edf4c71a2..a7ebee4fa 100644
--- a/examples/Hackbook/res/layout/graph_explorer.xml
+++ b/examples/Hackbook/res/layout/graph_explorer.xml
@@ -1,103 +1,103 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" >
-	<LinearLayout
-		android:layout_width="wrap_content"
-		android:layout_height="wrap_content">
-		<Button 
-			android:id="@+id/accessTokenButton" 
-			android:text="@string/get_permissions"
-			android:layout_width="wrap_content"
-			android:layout_height="wrap_content" 
-			android:padding="10dp" />
-	</LinearLayout>
-	<View
-		android:layout_width="fill_parent"
-		android:layout_height="2dip"
-		android:background="@color/grey" />    
-	<TextView
-		android:id="@+id/graphDomain" 
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent" >
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content">
+        <Button
+            android:id="@+id/accessTokenButton"
+            android:text="@string/get_permissions"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp" />
+    </LinearLayout>
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="2dip"
+        android:background="@color/grey" />
+    <TextView
+        android:id="@+id/graphDomain"
         android:text="@string/graph_domain"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:paddingRight="5dp" 
+        android:paddingRight="5dp"
         android:paddingLeft="5dp" />
     <LinearLayout
-    	android:layout_width="fill_parent"
-    	android:layout_height="wrap_content">
-    	<FrameLayout
-    		android:layout_width="wrap_content"
-	     	android:layout_height="wrap_content">
-	     	<EditText android:id="@+id/inputId"
-		        android:layout_height="wrap_content"
-		        android:layout_width="240dp"
-		        android:layout_weight="1"
-		        android:textSize="25px"
-		        android:gravity="left"
-		        android:hint="Enter Object ID" />
-		    <Button
-	            android:id="@+id/meButton"      
-	            android:layout_width="wrap_content"
-	            android:layout_height="wrap_content"
-	            android:layout_marginRight="30dip"
-	            android:layout_gravity="right|center_vertical"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content">
+            <EditText android:id="@+id/inputId"
+                android:layout_height="wrap_content"
+                android:layout_width="240dp"
+                android:layout_weight="1"
+                android:textSize="25px"
+                android:gravity="left"
+                android:hint="Enter Object ID" />
+            <Button
+                android:id="@+id/meButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="30dip"
+                android:layout_gravity="right|center_vertical"
                 android:background="@drawable/me"
                 android:visibility="invisible" />
-		    <Button
-	            android:id="@+id/textDeleteButton"      
-	            android:layout_width="wrap_content"
-	            android:layout_height="wrap_content"
-	            android:layout_marginRight="5dip"
-	            android:layout_gravity="right|center_vertical"
+            <Button
+                android:id="@+id/textDeleteButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="5dip"
+                android:layout_gravity="right|center_vertical"
                 android:background="@drawable/x" />
         </FrameLayout>
-        <Button 
-        	android:id="@+id/submitButton" 
-	        android:text="@string/submit"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:padding="10dp" />
-	</LinearLayout>
-	<View
-		android:layout_width="fill_parent"
-		android:layout_height="2dip"
-		android:background="@color/grey" />
-	<LinearLayout
-		android:layout_width="fill_parent"
-		android:layout_height="wrap_content"> 
-		<Button android:id="@+id/fieldsAndConnectionsButton" 
-	   		android:text="@string/fields_and_connections"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:padding="10dp"
-	        android:visibility="invisible" />
-	    <Button android:id="@+id/viewURLButton" 
-	    	android:text="@string/view_url"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:padding="10dp"
-	        android:visibility="invisible" />
-	    <Button android:id="@+id/backParentButton" 
-	        android:text="@string/back_parent"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:padding="10dp"
-	        android:visibility="invisible" />
-	</LinearLayout>
-	<ScrollView   
-		android:id="@+id/ScrollView01"  
-      	android:layout_height="fill_parent"   
-      	android:layout_width="fill_parent">
-      	<TextView android:id="@+id/output"
-      		android:textColor="@color/white"
-	        android:layout_width="fill_parent"
-	        android:layout_height="wrap_content"
-	        android:paddingTop="3dp" 
-	        android:paddingLeft="3dp"
-	        android:textSize="16sp"
-	        android:visibility="invisible"
-	        android:background="@color/grey" />
-	</ScrollView>
-</LinearLayout>
\ No newline at end of file
+        <Button
+            android:id="@+id/submitButton"
+            android:text="@string/submit"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp" />
+    </LinearLayout>
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="2dip"
+        android:background="@color/grey" />
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+        <Button android:id="@+id/fieldsAndConnectionsButton"
+            android:text="@string/fields_and_connections"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp"
+            android:visibility="invisible" />
+        <Button android:id="@+id/viewURLButton"
+            android:text="@string/view_url"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp"
+            android:visibility="invisible" />
+        <Button android:id="@+id/backParentButton"
+            android:text="@string/back_parent"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp"
+            android:visibility="invisible" />
+    </LinearLayout>
+    <ScrollView
+        android:id="@+id/ScrollView01"
+        android:layout_height="fill_parent"
+        android:layout_width="fill_parent">
+        <TextView android:id="@+id/output"
+            android:textColor="@color/white"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:paddingTop="3dp"
+            android:paddingLeft="3dp"
+            android:textSize="16sp"
+            android:visibility="invisible"
+            android:background="@color/grey" />
+    </ScrollView>
+</LinearLayout>
diff --git a/examples/Hackbook/res/layout/main.xml b/examples/Hackbook/res/layout/main.xml
index d0cb3abd8..2dc8e244a 100644
--- a/examples/Hackbook/res/layout/main.xml
+++ b/examples/Hackbook/res/layout/main.xml
@@ -1,43 +1,43 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent"
-	android:gravity="center_horizontal">
-	<RelativeLayout
-	    android:layout_width="fill_parent"
-	    android:padding="6dip" 
-	    android:layout_height="?android:attr/listPreferredItemHeight">
-	    <ImageView
-	        android:id="@+id/user_pic"        
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:layout_alignParentTop="true"
-	        android:layout_alignParentBottom="true"
-	        android:layout_marginRight="6dip" />
-	    <TextView
-	        android:id="@+id/txt"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"        
-	        android:layout_toRightOf="@id/user_pic" />
-	    <com.facebook.android.LoginButton
-	        android:id="@+id/login"
-	        android:src="@drawable/login_button"      
-	        android:layout_toRightOf="@id/user_pic"
-	        android:layout_below="@id/txt"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" />
-	</RelativeLayout>
-	<View
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:gravity="center_horizontal">
+    <RelativeLayout
+        android:layout_width="fill_parent"
+        android:padding="6dip"
+        android:layout_height="?android:attr/listPreferredItemHeight">
+        <ImageView
+            android:id="@+id/user_pic"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentTop="true"
+            android:layout_alignParentBottom="true"
+            android:layout_marginRight="6dip" />
+        <TextView
+            android:id="@+id/txt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_toRightOf="@id/user_pic" />
+        <com.facebook.android.LoginButton
+            android:id="@+id/login"
+            android:src="@drawable/login_button"
+            android:layout_toRightOf="@id/user_pic"
+            android:layout_below="@id/txt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+    </RelativeLayout>
+    <View
          android:layout_width="fill_parent"
          android:layout_height="1dip"
-         android:background="@color/grey" />   
-	<ListView
+         android:background="@color/grey" />
+    <ListView
         android:id="@+id/main_list"
         android:layout_width="fill_parent"
         android:layout_height="wrap_content" />
     <View
-    	android:layout_width="fill_parent"
-    	android:layout_height="1dip"
-    	android:background="@color/grey" />   
-</LinearLayout>
\ No newline at end of file
+        android:layout_width="fill_parent"
+        android:layout_height="1dip"
+        android:background="@color/grey" />
+</LinearLayout>
diff --git a/examples/Hackbook/res/layout/main_list_item.xml b/examples/Hackbook/res/layout/main_list_item.xml
index 2bccb4a0f..2ac0fac97 100644
--- a/examples/Hackbook/res/layout/main_list_item.xml
+++ b/examples/Hackbook/res/layout/main_list_item.xml
@@ -4,6 +4,6 @@
     android:layout_width="fill_parent"
     android:layout_height="wrap_content"
     android:layout_alignParentRight="true"
-    android:layout_alignParentTop="true"              
+    android:layout_alignParentTop="true"
     android:gravity="center_vertical"
-    android:textSize="20sp" />
\ No newline at end of file
+    android:textSize="20sp" />
diff --git a/examples/Hackbook/res/layout/permission_item.xml b/examples/Hackbook/res/layout/permission_item.xml
index e3ae10541..57eb43a8b 100644
--- a/examples/Hackbook/res/layout/permission_item.xml
+++ b/examples/Hackbook/res/layout/permission_item.xml
@@ -1,8 +1,8 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="fill_parent"
     android:layout_height="?android:attr/listPreferredItemHeight">
-    <CheckBox 
-    	android:id="@+id/permission_checkbox"
-    	android:layout_width="wrap_content"
-    	android:layout_height="wrap_content" />
-</RelativeLayout>
\ No newline at end of file
+    <CheckBox
+        android:id="@+id/permission_checkbox"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+</RelativeLayout>
diff --git a/examples/Hackbook/res/layout/permissions_list.xml b/examples/Hackbook/res/layout/permissions_list.xml
index c782f8baf..f5592c5ae 100644
--- a/examples/Hackbook/res/layout/permissions_list.xml
+++ b/examples/Hackbook/res/layout/permissions_list.xml
@@ -1,59 +1,59 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">
-	<TextView
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <TextView
         android:id="@+id/permission_detail"
         android:text="@string/permission_detail"
         android:layout_width="fill_parent"
-        android:layout_height="wrap_content"            
+        android:layout_height="wrap_content"
         android:gravity="center_vertical"
         android:textSize="16sp" />
    <View
-   		android:layout_width="fill_parent"
-   		android:layout_height="2dip"
-   		android:background="@color/grey" />    
-   <Button 
-		android:id="@+id/get_permissions_button"
-		android:text="@string/get_permissions"
+        android:layout_width="fill_parent"
+        android:layout_height="2dip"
+        android:background="@color/grey" />
+   <Button
+        android:id="@+id/get_permissions_button"
+        android:text="@string/get_permissions"
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content" 
+        android:layout_height="wrap_content"
         android:padding="10dp" />
-	<View
-		android:layout_width="fill_parent"
-		android:layout_height="2dip"
-		android:background="@color/grey" />
-	<TabHost 
-		android:layout_width="wrap_content" 
-		android:layout_height="fill_parent"
-		android:id="@+id/tabHost">
-		<RelativeLayout
-	        android:layout_height="wrap_content"
-	        android:layout_width="fill_parent">
-			<TabWidget
-				android:layout_width="fill_parent"
-				android:layout_height="wrap_content"
-				android:id="@android:id/tabs" />
-			<FrameLayout
-				android:layout_width="fill_parent"
-				android:layout_height="wrap_content"
-				android:id="@android:id/tabcontent"
-				android:layout_below="@android:id/tabs">
-				<ListView
-					android:id="@+id/user_permissions_list"
-					android:layout_width="fill_parent"
-					android:layout_height="wrap_content" />
-			    <ListView
-			        android:id="@+id/friend_permissions_list"
-			        android:layout_width="fill_parent"
-			        android:layout_height="wrap_content" />
-			    <ListView
-			        android:id="@+id/extended_permissions_list"
-			        android:layout_width="fill_parent"
-			        android:layout_height="wrap_content" />
-	   		</FrameLayout>
-	   	</RelativeLayout>
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="2dip"
+        android:background="@color/grey" />
+    <TabHost
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:id="@+id/tabHost">
+        <RelativeLayout
+            android:layout_height="wrap_content"
+            android:layout_width="fill_parent">
+            <TabWidget
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:id="@android:id/tabs" />
+            <FrameLayout
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:id="@android:id/tabcontent"
+                android:layout_below="@android:id/tabs">
+                <ListView
+                    android:id="@+id/user_permissions_list"
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content" />
+                <ListView
+                    android:id="@+id/friend_permissions_list"
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content" />
+                <ListView
+                    android:id="@+id/extended_permissions_list"
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content" />
+            </FrameLayout>
+        </RelativeLayout>
     </TabHost>
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/examples/Hackbook/res/layout/place_item.xml b/examples/Hackbook/res/layout/place_item.xml
index a1593e601..cbc139e42 100644
--- a/examples/Hackbook/res/layout/place_item.xml
+++ b/examples/Hackbook/res/layout/place_item.xml
@@ -1,6 +1,6 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="fill_parent"
-    android:padding="6dip" 
+    android:padding="6dip"
     android:layout_height="?android:attr/listPreferredItemHeight"
     android:id="@+id/friend_item">
     <TextView
@@ -8,17 +8,17 @@
         android:layout_width="fill_parent"
         android:layout_height="wrap_content"
         android:layout_alignParentRight="true"
-        android:layout_alignParentTop="true"        
-        android:layout_alignWithParentIfMissing="true"                
+        android:layout_alignParentTop="true"
+        android:layout_alignWithParentIfMissing="true"
         android:gravity="center_vertical" />
-    <TextView  
+    <TextView
         android:id="@+id/place_location"
         android:layout_width="fill_parent"
         android:layout_height="wrap_content"
         android:layout_below="@+id/place_name"
         android:layout_alignParentBottom="true"
-        android:layout_alignParentRight="true"       
-        android:layout_alignWithParentIfMissing="true"         
+        android:layout_alignParentRight="true"
+        android:layout_alignWithParentIfMissing="true"
         android:singleLine="true"
         android:ellipsize="marquee" />
-</RelativeLayout>
\ No newline at end of file
+</RelativeLayout>
diff --git a/examples/Hackbook/res/layout/places_list.xml b/examples/Hackbook/res/layout/places_list.xml
index 8de1f660d..f63bb2884 100644
--- a/examples/Hackbook/res/layout/places_list.xml
+++ b/examples/Hackbook/res/layout/places_list.xml
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">  
-	<ListView
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <ListView
         android:id="@+id/places_list"
         android:layout_width="fill_parent"
-        android:layout_height="fill_parent" /> 
- </LinearLayout>
\ No newline at end of file
+        android:layout_height="fill_parent" />
+ </LinearLayout>
diff --git a/examples/Hackbook/res/layout/splash.xml b/examples/Hackbook/res/layout/splash.xml
index fa18f9561..211860639 100644
--- a/examples/Hackbook/res/layout/splash.xml
+++ b/examples/Hackbook/res/layout/splash.xml
@@ -1,5 +1,5 @@
 <ImageView android:id="@+id/imageView1" xmlns:android="http://schemas.android.com/apk/res/android"
-	android:src="@drawable/splash"
-	android:scaleType="fitXY"
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" />
+    android:src="@drawable/splash"
+    android:scaleType="fitXY"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent" />
diff --git a/examples/Hackbook/res/layout/update_post_response.xml b/examples/Hackbook/res/layout/update_post_response.xml
index bee656af1..2a0bd90a6 100644
--- a/examples/Hackbook/res/layout/update_post_response.xml
+++ b/examples/Hackbook/res/layout/update_post_response.xml
@@ -1,67 +1,67 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">
-	<TextView 
-		android:id="@+id/apiOutputLabel"
-		android:text="@string/api_response"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <TextView
+        android:id="@+id/apiOutputLabel"
+        android:text="@string/api_response"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:paddingTop="3dp"
         android:paddingLeft="3dp" />
-	<ScrollView   
-        android:id="@+id/ScrollView01"  
-      	android:layout_height="140dp"   
-      	android:layout_width="fill_parent">
-	    <TextView android:id="@+id/apiOutput"
-	        android:textColor="@color/white"
-	        android:layout_width="fill_parent"
-	        android:layout_height="wrap_content"
-	        android:paddingTop="3dp" 
-	        android:paddingLeft="3dp"
-	        android:background="@color/grey" />
-	</ScrollView>
-	<View
+    <ScrollView
+        android:id="@+id/ScrollView01"
+        android:layout_height="140dp"
+        android:layout_width="fill_parent">
+        <TextView android:id="@+id/apiOutput"
+            android:textColor="@color/white"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:paddingTop="3dp"
+            android:paddingLeft="3dp"
+            android:background="@color/grey" />
+    </ScrollView>
+    <View
          android:layout_width="fill_parent"
          android:layout_height="2dip"
          android:background="@color/grey" />
-	<LinearLayout
-    	android:layout_width="wrap_content"
-		android:layout_height="wrap_content"> 
-		<Button 
-			android:id="@+id/view_post_button"
-			android:text="@string/view_post"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:padding="10dp" />
-        <Button 
-        	android:id="@+id/delete_post_button" 
-        	android:text="@string/delete_post"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:padding="10dp" />
-	</LinearLayout>
-	<View
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content">
+        <Button
+            android:id="@+id/view_post_button"
+            android:text="@string/view_post"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp" />
+        <Button
+            android:id="@+id/delete_post_button"
+            android:text="@string/delete_post"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp" />
+    </LinearLayout>
+    <View
          android:layout_width="fill_parent"
          android:layout_height="2dip"
          android:background="@color/grey" />
-   	<TextView 
-   		android:id="@+id/tip_label"
-   		android:text="@string/tip_label"
+    <TextView
+        android:id="@+id/tip_label"
+        android:text="@string/tip_label"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:paddingTop="3dp"
         android:paddingLeft="3dp" />
-	<TextView 
-		android:id="@+id/usefulTip"
+    <TextView
+        android:id="@+id/usefulTip"
         android:text="@string/post_tip"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:paddingTop="5dp"
         android:paddingLeft="3dp" />
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/examples/Hackbook/res/layout/upload_photo_response.xml b/examples/Hackbook/res/layout/upload_photo_response.xml
index 472666bd8..3b8bd7743 100644
--- a/examples/Hackbook/res/layout/upload_photo_response.xml
+++ b/examples/Hackbook/res/layout/upload_photo_response.xml
@@ -1,71 +1,71 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:orientation="vertical" 
-	android:layout_width="fill_parent"
-	android:layout_height="fill_parent" 
-	android:background="@color/black">
-	<TextView 
-		android:id="@+id/apiOutputLabel"
-		android:text="@string/api_response"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@color/black">
+    <TextView
+        android:id="@+id/apiOutputLabel"
+        android:text="@string/api_response"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:paddingTop="3dp"
         android:paddingLeft="3dp" />
-	<ScrollView   
-        android:id="@+id/ScrollView01"  
-      	android:layout_height="wrap_content"   
-      	android:layout_width="fill_parent"
-      	android:paddingBottom="3dp">
-	    <TextView android:id="@+id/apiOutput"
-	        android:textColor="@color/white"
-	        android:layout_width="fill_parent"
-	        android:layout_height="wrap_content"
-	        android:paddingTop="3dp" 
-	        android:paddingLeft="3dp"
-	        android:background="@color/grey" />
-	</ScrollView>
-	<View
-		 android:paddingTop="3dp"
+    <ScrollView
+        android:id="@+id/ScrollView01"
+        android:layout_height="wrap_content"
+        android:layout_width="fill_parent"
+        android:paddingBottom="3dp">
+        <TextView android:id="@+id/apiOutput"
+            android:textColor="@color/white"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:paddingTop="3dp"
+            android:paddingLeft="3dp"
+            android:background="@color/grey" />
+    </ScrollView>
+    <View
+         android:paddingTop="3dp"
          android:layout_width="fill_parent"
          android:layout_height="2dip"
          android:background="@color/grey" />
-	<LinearLayout
-    	android:layout_width="wrap_content"
-		android:layout_height="wrap_content"> 
-		<Button 
-			android:id="@+id/view_photo_button"
-			android:text="@string/view_photo"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:padding="10dp" />
-        <Button 
-        	android:id="@+id/tag_photo_button" 
-        	android:text="@string/tag_photo"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content" 
-	        android:padding="10dp" />
-	</LinearLayout>
-    <ImageView 
-	   		android:id="@+id/uploadedPhoto"
-	   		android:layout_width="wrap_content"
-	   		android:layout_height="wrap_content"
-	   		android:paddingTop="3dp"
-	   		android:paddingBottom="3dp" />
-   	<TextView 
-   		android:id="@+id/tip_label"
-   		android:text="@string/tip_label"
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content">
+        <Button
+            android:id="@+id/view_photo_button"
+            android:text="@string/view_photo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp" />
+        <Button
+            android:id="@+id/tag_photo_button"
+            android:text="@string/tag_photo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="10dp" />
+    </LinearLayout>
+    <ImageView
+            android:id="@+id/uploadedPhoto"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingTop="3dp"
+            android:paddingBottom="3dp" />
+    <TextView
+        android:id="@+id/tip_label"
+        android:text="@string/tip_label"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:paddingTop="3dp"
         android:paddingLeft="3dp" />
-	
-	<TextView 
-		android:id="@+id/usefulTip"
+
+    <TextView
+        android:id="@+id/usefulTip"
         android:textColor="@color/white"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:paddingTop="5dp"
         android:paddingLeft="3dp" />
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/examples/Hackbook/res/values/strings.xml b/examples/Hackbook/res/values/strings.xml
index 3f1436f38..81a2138ad 100644
--- a/examples/Hackbook/res/values/strings.xml
+++ b/examples/Hackbook/res/values/strings.xml
@@ -7,74 +7,74 @@
     <string name="request">Request!</string>
     <string name="upload">Upload Photo</string><string name="post">Wall Post!</string>
     <string name="delete">Delete Post</string>
-	<string name="no_login">Graph API Explorer</string>
-	<string name="get_permissions">Get Permissions</string>
-	<string name="access_token">Access Token:</string>
-	<string name="graph_domain">https://graph.facebook.com/</string>
-	<string name="submit">Submit</string>
-	<string name="label_output">Output:</string>
-	<string name="show_metadata">Show metadata</string>
-	<string name="show_picture">Show picture</string>
-	<string name="view_url">URL</string>
-	<string name="target_url">Target URL:</string>
-	<string name="exception">Exception: </string>
-	<string name="tip_label">Tip:</string>
-	<string name="facebook_error">Facebook Error: </string>
-	<string name="api_response">Api Response:</string>
-	<string name="view_source">View Source</string>
-	<string name="view_post">View Post</string>
-	<string name="delete_post">Delete Post</string>
-	<string name="source_code">Source Code:</string>
-	<string name="please_wait">Please wait...</string>
-	<string name="view_photo">View Photo</string>
-	<string name="hide_photo">Hide Photo</string>
-	<string name="tag_photo">Tag Photo</string>
-	<string name="graph_button">Graph API</string>
-	<string name="fql_button">FQL Query</string>
-	<string name="source_tag">Source tag:</string>
-	<string name="permission_source_tag">Source tag: \"perms_tag\"</string>
-	<string name="Graph_FQL_title">Graph API or FQL Query?</string>
-	<string name="Graph_FQL_msg">Get friends using Graph or FQL Query?\n\nWith FQL query you can sort the list by names, whereas with Graph list will be ordered by UID and can\'t be changed.</string>
-	<string name="can_post_on_wall_title">Post on friend\'s wall</string>
-	<string name="can_post_on_wall">Friends list fetched. You can post on friend\'s wall by clicking on the item.</string>
-	<string name="ok">OK</string>
-	<string name="post_on_wall_title">Post on Wall?</string>
-	<string name="post_on_wall">Would you like to post on %1$s\'s wall</string>
-	<string name="yes">Yes</string>
-	<string name="no">No</string>
-	<string name="save">Save</string>
-	<string name="reset">Reset</string>
-	<string  name="get_fields">Get Fields</string>
-	<string name="fields">Fields</string>
-	<string name="connections">Connections</string>
-	<string  name="checkin">Check-in</string>
-	<string name="cancel">Cancel</string>
-	<string name="user">User Data</string>
-	<string name="friend">Friends Data</string>
-	<string name="extended">Extended</string>
-	<string name="gallery_remote_title">Upload from gallery or remote?</string>
-	<string name="gallery_remote_msg">Upload picture from phone\' gallery or remote server?</string>
-	<string name="gallery_button">Gallery</string>
-	<string name="remote_button">Remote</string>
-	<string name="get_location">Get Location?</string>
-	<string name="get_default_or_new_location">Get current location or use Times Square as the location?</string>
-	<string name="current_location_button">Current Location</string>
-	<string name="fetching_current_permissions">Fetching current permissions...</string>
-	<string name="explorer_message">Also, checkout the web-version of the <a href="http://developers.facebook.com/tools/explorer">Graph API Explorer tool</a></string>
-	<string name="nearby_places">Fetching nearby places...</string>
-	<string name="times_square_button">Times Square</string>
-	<string name="check_in_title">Check-in?</string>
-	<string name="permissions">Permissions</string>
-	<string name="back_parent">Back to parent</string>
-	<string name="fields_and_connections">Fields \u0026 Connections</string>
-	<string name="permissions_request">Select Permissions:</string>
-	<string name="permission_detail">Checkout <a href="https://developers.facebook.com/docs/authentication/permissions/">permissions reference doc</a></string>
-	<string name="fetching_location">Fetching Location...</string>
-	<string name="check_in_at">Would you like to check-in at %1$s?</string>
-	<string name="post_tip">\'read_stream\' permission is required to view and delete the post.\n\nUse SDK dialogs to publish stories or post on friends wall. <a href="https://developers.facebook.com/docs/reference/dialogs">More info</a>\n\n<a href="https://developers.facebook.com/docs/reference/api/Comment">Like and Comment on a post</a></string>
-	<string name="photo_tip">Photos are by default uploaded to the app\'s album. Specify album_id to upload to specific album. E.g. https://graph.facebook.com/{album_id}/photos.\n\nMore Info: https://developers.facebook.com/docs/reference/api/photo</string>
-	<string name="fqlquery">Enter FQL Query:</string>
-	<string name="enable_gps_title">Enable GPS</string>
-	<string name="enable_gps">Please enable GPS to get nearby places and check-in</string>
-	<string name="gps_settings">GPS Settings</string>
+    <string name="no_login">Graph API Explorer</string>
+    <string name="get_permissions">Get Permissions</string>
+    <string name="access_token">Access Token:</string>
+    <string name="graph_domain">https://graph.facebook.com/</string>
+    <string name="submit">Submit</string>
+    <string name="label_output">Output:</string>
+    <string name="show_metadata">Show metadata</string>
+    <string name="show_picture">Show picture</string>
+    <string name="view_url">URL</string>
+    <string name="target_url">Target URL:</string>
+    <string name="exception">Exception: </string>
+    <string name="tip_label">Tip:</string>
+    <string name="facebook_error">Facebook Error: </string>
+    <string name="api_response">Api Response:</string>
+    <string name="view_source">View Source</string>
+    <string name="view_post">View Post</string>
+    <string name="delete_post">Delete Post</string>
+    <string name="source_code">Source Code:</string>
+    <string name="please_wait">Please wait...</string>
+    <string name="view_photo">View Photo</string>
+    <string name="hide_photo">Hide Photo</string>
+    <string name="tag_photo">Tag Photo</string>
+    <string name="graph_button">Graph API</string>
+    <string name="fql_button">FQL Query</string>
+    <string name="source_tag">Source tag:</string>
+    <string name="permission_source_tag">Source tag: \"perms_tag\"</string>
+    <string name="Graph_FQL_title">Graph API or FQL Query?</string>
+    <string name="Graph_FQL_msg">Get friends using Graph or FQL Query?\n\nWith FQL query you can sort the list by names, whereas with Graph list will be ordered by UID and can\'t be changed.</string>
+    <string name="can_post_on_wall_title">Post on friend\'s wall</string>
+    <string name="can_post_on_wall">Friends list fetched. You can post on friend\'s wall by clicking on the item.</string>
+    <string name="ok">OK</string>
+    <string name="post_on_wall_title">Post on Wall?</string>
+    <string name="post_on_wall">Would you like to post on %1$s\'s wall</string>
+    <string name="yes">Yes</string>
+    <string name="no">No</string>
+    <string name="save">Save</string>
+    <string name="reset">Reset</string>
+    <string  name="get_fields">Get Fields</string>
+    <string name="fields">Fields</string>
+    <string name="connections">Connections</string>
+    <string  name="checkin">Check-in</string>
+    <string name="cancel">Cancel</string>
+    <string name="user">User Data</string>
+    <string name="friend">Friends Data</string>
+    <string name="extended">Extended</string>
+    <string name="gallery_remote_title">Upload from gallery or remote?</string>
+    <string name="gallery_remote_msg">Upload picture from phone\' gallery or remote server?</string>
+    <string name="gallery_button">Gallery</string>
+    <string name="remote_button">Remote</string>
+    <string name="get_location">Get Location?</string>
+    <string name="get_default_or_new_location">Get current location or use Times Square as the location?</string>
+    <string name="current_location_button">Current Location</string>
+    <string name="fetching_current_permissions">Fetching current permissions...</string>
+    <string name="explorer_message">Also, checkout the web-version of the <a href="http://developers.facebook.com/tools/explorer">Graph API Explorer tool</a></string>
+    <string name="nearby_places">Fetching nearby places...</string>
+    <string name="times_square_button">Times Square</string>
+    <string name="check_in_title">Check-in?</string>
+    <string name="permissions">Permissions</string>
+    <string name="back_parent">Back to parent</string>
+    <string name="fields_and_connections">Fields \u0026 Connections</string>
+    <string name="permissions_request">Select Permissions:</string>
+    <string name="permission_detail">Checkout <a href="https://developers.facebook.com/docs/authentication/permissions/">permissions reference doc</a></string>
+    <string name="fetching_location">Fetching Location...</string>
+    <string name="check_in_at">Would you like to check-in at %1$s?</string>
+    <string name="post_tip">\'read_stream\' permission is required to view and delete the post.\n\nUse SDK dialogs to publish stories or post on friends wall. <a href="https://developers.facebook.com/docs/reference/dialogs">More info</a>\n\n<a href="https://developers.facebook.com/docs/reference/api/Comment">Like and Comment on a post</a></string>
+    <string name="photo_tip">Photos are by default uploaded to the app\'s album. Specify album_id to upload to specific album. E.g. https://graph.facebook.com/{album_id}/photos.\n\nMore Info: https://developers.facebook.com/docs/reference/api/photo</string>
+    <string name="fqlquery">Enter FQL Query:</string>
+    <string name="enable_gps_title">Enable GPS</string>
+    <string name="enable_gps">Please enable GPS to get nearby places and check-in</string>
+    <string name="gps_settings">GPS Settings</string>
 </resources>
diff --git a/examples/Hackbook/src/com/facebook/android/BaseDialogListener.java b/examples/Hackbook/src/com/facebook/android/BaseDialogListener.java
index 6b4b9453d..dbd5b3360 100644
--- a/examples/Hackbook/src/com/facebook/android/BaseDialogListener.java
+++ b/examples/Hackbook/src/com/facebook/android/BaseDialogListener.java
@@ -3,21 +3,23 @@
 import com.facebook.android.Facebook.DialogListener;
 
 /**
- * Skeleton base class for RequestListeners, providing default error 
- * handling. Applications should handle these error conditions.
- *
+ * Skeleton base class for RequestListeners, providing default error handling.
+ * Applications should handle these error conditions.
  */
 public abstract class BaseDialogListener implements DialogListener {
 
+    @Override
     public void onFacebookError(FacebookError e) {
         e.printStackTrace();
     }
 
+    @Override
     public void onError(DialogError e) {
-        e.printStackTrace();        
+        e.printStackTrace();
     }
 
-    public void onCancel() {        
+    @Override
+    public void onCancel() {
     }
-    
-}
+
+}
\ No newline at end of file
diff --git a/examples/Hackbook/src/com/facebook/android/BaseRequestListener.java b/examples/Hackbook/src/com/facebook/android/BaseRequestListener.java
index bd0f80f99..0e7809f07 100644
--- a/examples/Hackbook/src/com/facebook/android/BaseRequestListener.java
+++ b/examples/Hackbook/src/com/facebook/android/BaseRequestListener.java
@@ -9,32 +9,33 @@
 import com.facebook.android.AsyncFacebookRunner.RequestListener;
 
 /**
- * Skeleton base class for RequestListeners, providing default error 
- * handling. Applications should handle these error conditions.
- *
+ * Skeleton base class for RequestListeners, providing default error handling.
+ * Applications should handle these error conditions.
  */
 public abstract class BaseRequestListener implements RequestListener {
 
+    @Override
     public void onFacebookError(FacebookError e, final Object state) {
         Log.e("Facebook", e.getMessage());
         e.printStackTrace();
     }
 
-    public void onFileNotFoundException(FileNotFoundException e,
-                                        final Object state) {
+    @Override
+    public void onFileNotFoundException(FileNotFoundException e, final Object state) {
         Log.e("Facebook", e.getMessage());
         e.printStackTrace();
     }
 
+    @Override
     public void onIOException(IOException e, final Object state) {
         Log.e("Facebook", e.getMessage());
         e.printStackTrace();
     }
 
-    public void onMalformedURLException(MalformedURLException e,
-                                        final Object state) {
+    @Override
+    public void onMalformedURLException(MalformedURLException e, final Object state) {
         Log.e("Facebook", e.getMessage());
         e.printStackTrace();
     }
-    
+
 }
diff --git a/examples/Hackbook/src/com/facebook/android/FQLQuery.java b/examples/Hackbook/src/com/facebook/android/FQLQuery.java
index 7594b7f42..1c2e92b3c 100644
--- a/examples/Hackbook/src/com/facebook/android/FQLQuery.java
+++ b/examples/Hackbook/src/com/facebook/android/FQLQuery.java
@@ -4,7 +4,6 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-
 import android.app.Activity;
 import android.app.Dialog;
 import android.app.ProgressDialog;
@@ -18,92 +17,96 @@
 import android.widget.EditText;
 import android.widget.TextView;
 
-
 public class FQLQuery extends Dialog {
 
-	private EditText mFQLQuery;
-	private TextView mFQLOutput;
-	private Button mSubmitButton;
-	private Activity activity;
-	private Handler mHandler;
-	private ProgressDialog dialog;
-	
+    private EditText mFQLQuery;
+    private TextView mFQLOutput;
+    private Button mSubmitButton;
+    private Activity activity;
+    private Handler mHandler;
+    private ProgressDialog dialog;
+
     public FQLQuery(Activity activity) {
         super(activity);
-    	this.activity = activity;
+        this.activity = activity;
         setTitle(R.string.fqlquery);
     }
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        
+
         mHandler = new Handler();
-        
+
         setContentView(R.layout.fql_query);
-        LayoutParams params = getWindow().getAttributes(); 
-        params.width = LayoutParams.FILL_PARENT; 
-        params.height = LayoutParams.FILL_PARENT; 
+        LayoutParams params = getWindow().getAttributes();
+        params.width = LayoutParams.FILL_PARENT;
+        params.height = LayoutParams.FILL_PARENT;
         getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
-        
+
         mFQLQuery = (EditText) findViewById(R.id.fqlquery);
         mFQLOutput = (TextView) findViewById(R.id.fqlOutput);
         mSubmitButton = (Button) findViewById(R.id.submit_button);
-		
+
         mSubmitButton.setOnClickListener(new View.OnClickListener() {
-        	public void onClick(View v) {
-        		((InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(mFQLQuery.getWindowToken(), 0);
-        		dialog = ProgressDialog.show(FQLQuery.this.activity, "", FQLQuery.this.activity.getString(R.string.please_wait), true, true);
-        		/*
-            	 * Source tag: fql_query_tag
-            	 */
-        		String query = mFQLQuery.getText().toString();
-        		Bundle params = new Bundle();
-            	params.putString("method", "fql.query");
-            	params.putString("query", query);
-            	Utility.mAsyncRunner.request(null, params, new FQLRequestListener());
-        	}
+            @Override
+            public void onClick(View v) {
+                ((InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE))
+                        .hideSoftInputFromWindow(mFQLQuery.getWindowToken(), 0);
+                dialog = ProgressDialog.show(FQLQuery.this.activity, "",
+                        FQLQuery.this.activity.getString(R.string.please_wait), true, true);
+                /*
+                 * Source tag: fql_query_tag
+                 */
+                String query = mFQLQuery.getText().toString();
+                Bundle params = new Bundle();
+                params.putString("method", "fql.query");
+                params.putString("query", query);
+                Utility.mAsyncRunner.request(null, params, new FQLRequestListener());
+            }
         });
     }
-    
+
     public class FQLRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
-        	dialog.dismiss();
-        	/*
-        	 * Output can be JSONArray or JSONObject
-        	 * try JSONArray and if there JSONException, parse to JSONObject
-        	 */
-        	try {
-				JSONArray json = new JSONArray(response);
-				setText(json.toString(2));
-			} catch (JSONException e) {
-				try {
-					/*
-					 * JSONObject probably indicates there was some error
-					 * Display that error, but for end user you should parse the error
-					 * and show appropriate message
-					 */
-					JSONObject json = new JSONObject(response);
-					setText(json.toString(2));
-				} catch (JSONException e1) {
-					setText(activity.getString(R.string.exception) + e1.getMessage());
-				}
-			}
+            dialog.dismiss();
+            /*
+             * Output can be a JSONArray or a JSONObject.
+             * Try JSONArray and if there's a JSONException, parse to JSONObject
+             */
+            try {
+                JSONArray json = new JSONArray(response);
+                setText(json.toString(2));
+            } catch (JSONException e) {
+                try {
+                    /*
+                     * JSONObject probably indicates there was some error
+                     * Display that error, but for end user you should parse the
+                     * error and show appropriate message
+                     */
+                    JSONObject json = new JSONObject(response);
+                    setText(json.toString(2));
+                } catch (JSONException e1) {
+                    setText(activity.getString(R.string.exception) + e1.getMessage());
+                }
+            }
         }
-        
+
         public void onFacebookError(FacebookError error) {
-        	dialog.dismiss();
-        	setText(activity.getString(R.string.facebook_error) + error.getMessage());
-	    }
+            dialog.dismiss();
+            setText(activity.getString(R.string.facebook_error) + error.getMessage());
+        }
     }
-    
+
     public void setText(final String txt) {
-    	mHandler.post(new Runnable() {
+        mHandler.post(new Runnable() {
+            @Override
             public void run() {
-            	mFQLOutput.setText(txt);
-            	mFQLOutput.setVisibility(View.VISIBLE);
+                mFQLOutput.setText(txt);
+                mFQLOutput.setVisibility(View.VISIBLE);
             }
         });
     }
-}
\ No newline at end of file
+}
diff --git a/examples/Hackbook/src/com/facebook/android/FieldsConnectionsDialog.java b/examples/Hackbook/src/com/facebook/android/FieldsConnectionsDialog.java
index 530d340b5..9308301d4 100644
--- a/examples/Hackbook/src/com/facebook/android/FieldsConnectionsDialog.java
+++ b/examples/Hackbook/src/com/facebook/android/FieldsConnectionsDialog.java
@@ -9,7 +9,6 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-
 import android.app.Dialog;
 import android.os.Bundle;
 import android.text.SpannableString;
@@ -25,285 +24,282 @@
 import android.widget.Button;
 import android.widget.CheckBox;
 import android.widget.CompoundButton;
-import android.widget.TextView;
 import android.widget.CompoundButton.OnCheckedChangeListener;
 import android.widget.ListView;
 import android.widget.TabHost;
 import android.widget.TabHost.TabSpec;
+import android.widget.TextView;
 import android.widget.Toast;
 
-
 public class FieldsConnectionsDialog extends Dialog {
-    
-    private final int TAB_HEIGHT = 50;
-    
+
+    private final static int TAB_HEIGHT = 50;
+
     private Button mGetFieldsButton;
     private ListView fieldsList, connectionsList;
     private BaseAdapter fieldsAdapter, connectionsAdapter;
-	
-	private GraphExplorer explorerActivity;
-	
-	protected Vector<String> fieldsVector;
-	private ArrayList<JSONObject> fieldsArray;
-	private ArrayList<String> connectionsArray;
-	
-	public FieldsConnectionsDialog(GraphExplorer explorerActivity, JSONObject metadata) {
+
+    private GraphExplorer explorerActivity;
+
+    protected Vector<String> fieldsVector;
+    private ArrayList<JSONObject> fieldsArray;
+    private ArrayList<String> connectionsArray;
+
+    public FieldsConnectionsDialog(GraphExplorer explorerActivity, JSONObject metadata) {
         super(explorerActivity);
-    	this.explorerActivity = explorerActivity;
-    	
-    	/*
-    	 * Sort the fields and connections
-    	 */
-    	try {
-    		sortFields(metadata.getJSONArray("fields"));
-    	    sortConnections(metadata.getJSONObject("connections").names());
-		} catch (JSONException e) {
-			Toast.makeText(explorerActivity.getBaseContext(), "Fields/Connections could not be fetched.", Toast.LENGTH_SHORT).show();
-			
-		}
-		
+        this.explorerActivity = explorerActivity;
+
+        /*
+         * Sort the fields and connections
+         */
+        try {
+            sortFields(metadata.getJSONArray("fields"));
+            sortConnections(metadata.getJSONObject("connections").names());
+        } catch (JSONException e) {
+            Toast.makeText(explorerActivity.getBaseContext(),
+                    "Fields/Connections could not be fetched.", Toast.LENGTH_SHORT).show();
+        }
+
         setTitle(explorerActivity.getString(R.string.fields_and_connections));
         fieldsVector = new Vector<String>();
     }
 
-	/*
-	 * Sort fields which are returned as JSONObject in the JSONArray
-	 */
-	
-	public void sortFields(JSONArray jsonFieldsArray) {
-		this.fieldsArray = new ArrayList<JSONObject>(jsonFieldsArray.length());
-		for (int i=0; i<jsonFieldsArray.length(); i++){ 
-			try {
-				this.fieldsArray.add(jsonFieldsArray.getJSONObject(i));
-			} catch (JSONException e) {
-				e.printStackTrace();
-			} 
-		}
-		
-		Collections.sort(this.fieldsArray, new Comparator<JSONObject>() {
-	        @Override
-	        public int compare(JSONObject object1, JSONObject object2) {
-	            try {
-					return object1.getString("name").compareToIgnoreCase(object2.getString("name"));
-				} catch (JSONException e) {
-					e.printStackTrace();
-				}
-				return 0;
-	        }
-	    });;
-	}
-	
-	/*
-	 * Sort the Connections returned in the JSONArray
-	 */
-	
-	public void sortConnections(JSONArray jsonConnectionsArray) {
-		this.connectionsArray = new ArrayList<String>(jsonConnectionsArray.length());
-		for (int i=0; i<jsonConnectionsArray.length(); i++){ 
-			try {
-				this.connectionsArray.add(jsonConnectionsArray.get(i).toString());
-			} catch (JSONException e) {
-				e.printStackTrace();
-			} 
-		}
-		Collections.sort(this.connectionsArray);
-	}
-	
-	/*
-	 * Layout the dialog
-	 */
+    /*
+     * Sort fields which are returned as JSONObject in the JSONArray
+     */
+    public void sortFields(JSONArray jsonFieldsArray) {
+        this.fieldsArray = new ArrayList<JSONObject>(jsonFieldsArray.length());
+        for (int i = 0; i < jsonFieldsArray.length(); i++) {
+            try {
+                this.fieldsArray.add(jsonFieldsArray.getJSONObject(i));
+            } catch (JSONException e) {
+                e.printStackTrace();
+            }
+        }
+
+        Collections.sort(this.fieldsArray, new Comparator<JSONObject>() {
+            @Override
+            public int compare(JSONObject object1, JSONObject object2) {
+                try {
+                    return object1.getString("name").compareToIgnoreCase(object2.getString("name"));
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+                return 0;
+            }
+        });
+    }
+
+    /*
+     * Sort the Connections returned in the JSONArray
+     */
+    public void sortConnections(JSONArray jsonConnectionsArray) {
+        this.connectionsArray = new ArrayList<String>(jsonConnectionsArray.length());
+        for (int i = 0; i < jsonConnectionsArray.length(); i++) {
+            try {
+                this.connectionsArray.add(jsonConnectionsArray.get(i).toString());
+            } catch (JSONException e) {
+                e.printStackTrace();
+            }
+        }
+        Collections.sort(this.connectionsArray);
+    }
+
+    /*
+     * Layout the dialog
+     */
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        
+
         setContentView(R.layout.fields_connections_list);
-        LayoutParams params = getWindow().getAttributes(); 
-        params.width = LayoutParams.FILL_PARENT; 
-        params.height = LayoutParams.FILL_PARENT; 
+        LayoutParams params = getWindow().getAttributes();
+        params.width = LayoutParams.FILL_PARENT;
+        params.height = LayoutParams.FILL_PARENT;
         getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
-        
-        
-        fieldsList = (ListView)findViewById(R.id.fields_list);
-        connectionsList = (ListView)findViewById(R.id.connections_list);
-        
+
+        fieldsList = (ListView) findViewById(R.id.fields_list);
+        connectionsList = (ListView) findViewById(R.id.connections_list);
+
         fieldsAdapter = new FieldsListAdapter();
-        if(this.fieldsArray == null) {
-        	fieldsList.setAdapter(new ArrayAdapter<String>(explorerActivity,
-    				android.R.layout.simple_list_item_1, new String[]{"No fields available"}));
+        if (this.fieldsArray == null) {
+            fieldsList.setAdapter(new ArrayAdapter<String>(explorerActivity,
+                    android.R.layout.simple_list_item_1, new String[] { "No fields available" }));
         } else {
-        	fieldsList.setAdapter(fieldsAdapter);
+            fieldsList.setAdapter(fieldsAdapter);
         }
-        
+
         connectionsAdapter = new ConnectionsListAdapter();
-        if(this.connectionsArray == null) {
-        	connectionsList.setAdapter(new ArrayAdapter<String>(explorerActivity,
-    				android.R.layout.simple_list_item_1, new String[]{"No connections available"}));
+        if (this.connectionsArray == null) {
+            connectionsList.setAdapter(new ArrayAdapter<String>(explorerActivity,
+                    android.R.layout.simple_list_item_1,
+                    new String[] { "No connections available" }));
         } else {
-        	connectionsList.setAdapter(connectionsAdapter);
+            connectionsList.setAdapter(connectionsAdapter);
         }
-        
-        TabHost tabHost=(TabHost)findViewById(R.id.tabHost);
+
+        TabHost tabHost = (TabHost) findViewById(R.id.tabHost);
         tabHost.setup();
-        
-        TabSpec spec1=tabHost.newTabSpec("Tab 1");
+
+        TabSpec spec1 = tabHost.newTabSpec("Tab 1");
         spec1.setIndicator(explorerActivity.getString(R.string.fields));
         spec1.setContent(R.id.fields_layout);
-        
-        TabSpec spec2=tabHost.newTabSpec("Tab 2");
+
+        TabSpec spec2 = tabHost.newTabSpec("Tab 2");
         spec2.setIndicator(explorerActivity.getString(R.string.connections));
         spec2.setContent(R.id.connections_list);
-        
+
         tabHost.addTab(spec1);
         tabHost.addTab(spec2);
         tabHost.setCurrentTab(0);
         tabHost.getTabWidget().getChildAt(0).getLayoutParams().height = TAB_HEIGHT;
         tabHost.getTabWidget().getChildAt(1).getLayoutParams().height = TAB_HEIGHT;
-        
+
         mGetFieldsButton = (Button) findViewById(R.id.get_fields_button);
-		
         mGetFieldsButton.setOnClickListener(new View.OnClickListener() {
-        	public void onClick(View v) {
-        		/*
-        		 * Source Tag:
-        		 */
-        		FieldsConnectionsDialog.this.dismiss();
-        		if(!fieldsVector.isEmpty()) {
-        			explorerActivity.getFields(fieldsVector);
-        		} else {
-        			Toast.makeText(explorerActivity.getBaseContext(), "No Fields selected.", Toast.LENGTH_SHORT).show();
-        		}
-        	}
+            @Override
+            public void onClick(View v) {
+                /*
+                 * Source Tag:
+                 */
+                FieldsConnectionsDialog.this.dismiss();
+                if (!fieldsVector.isEmpty()) {
+                    explorerActivity.getFields(fieldsVector);
+                } else {
+                    Toast.makeText(explorerActivity.getBaseContext(), "No Fields selected.",
+                            Toast.LENGTH_SHORT).show();
+                }
+            }
         });
-        
+
         connectionsList.setOnItemClickListener(new OnItemClickListener() {
-			public void onItemClick(AdapterView<?> arg0, View v, int position, long arg3) {
-    			FieldsConnectionsDialog.this.dismiss();
-    			explorerActivity.getConnection(connectionsArray.get(position));
+            @Override
+            public void onItemClick(AdapterView<?> arg0, View v, int position, long arg3) {
+                FieldsConnectionsDialog.this.dismiss();
+                explorerActivity.getConnection(connectionsArray.get(position));
             }
         });
     }
-    
+
     /**
      * Definition of the list adapter
      */
-	public class FieldsListAdapter extends BaseAdapter {
-		private LayoutInflater mInflater;
-		boolean []isChecked;
-		
-		public FieldsListAdapter() {
-			mInflater = LayoutInflater.from(explorerActivity.getBaseContext());
-			isChecked = new boolean[fieldsArray.size()];
-		}
-		
-		@Override
-		public int getCount() {
-			return fieldsArray.size();
-		}
-		
-		@Override
-		public Object getItem(int position) {
-			return null;
-		}
-
-		@Override
-		public long getItemId(int position) {
-			return 0;
-		}
-		
-		@Override
-		public View getView(final int position, View convertView, ViewGroup parent) {
-			
-			View hView = convertView;
-			ViewHolder holder;
-			JSONObject fieldObject = null;
-			fieldObject = (JSONObject)fieldsArray.get(position);
-			
-			if(hView == null) {
-				hView = mInflater.inflate(R.layout.fields_item, null);
-				holder = new ViewHolder();
-				holder.checkbox = (CheckBox) hView.findViewById(R.id.fields_checkbox);
-				holder.fieldsInfo = (TextView) hView.findViewById(R.id.fields_info);
-				hView.setTag(holder);
-			} else {
-				holder = (ViewHolder) hView.getTag();
-			}
-			try {
-				holder.checkbox.setText(fieldObject.getString("name"));
-			} catch (JSONException e) {
-				holder.checkbox.setText("");
-			}
-			try {
-				holder.fieldsInfo.setText(fieldObject.getString("description"));
-			} catch (JSONException e) {
-				holder.fieldsInfo.setText("");
-			}
-			holder.checkbox.setId(position);
-			holder.checkbox.setChecked(isChecked[position]);
-			holder.checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
-				@Override
-				public void onCheckedChanged(CompoundButton button, boolean checked) {
-					isChecked[button.getId()] = checked;
-					String field = button.getText().toString();
-					if(checked) {
-						fieldsVector.add(field);
-					} else if (fieldsVector.contains(field)) {
-						fieldsVector.remove(field);
-					}
-				}
-			});
-			
-			return hView;
-		}
-	}
-	
-	class ViewHolder {
-		CheckBox checkbox;
-		TextView fieldsInfo;
-	}
-	
+    public class FieldsListAdapter extends BaseAdapter {
+        private LayoutInflater mInflater;
+        boolean[] isChecked;
+
+        public FieldsListAdapter() {
+            mInflater = LayoutInflater.from(explorerActivity.getBaseContext());
+            isChecked = new boolean[fieldsArray.size()];
+        }
+
+        @Override
+        public int getCount() {
+            return fieldsArray.size();
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(final int position, View convertView, ViewGroup parent) {
+
+            View hView = convertView;
+            ViewHolder holder;
+            JSONObject fieldObject = null;
+            fieldObject = fieldsArray.get(position);
+
+            if (hView == null) {
+                hView = mInflater.inflate(R.layout.fields_item, null);
+                holder = new ViewHolder();
+                holder.checkbox = (CheckBox) hView.findViewById(R.id.fields_checkbox);
+                holder.fieldsInfo = (TextView) hView.findViewById(R.id.fields_info);
+                hView.setTag(holder);
+            } else {
+                holder = (ViewHolder) hView.getTag();
+            }
+            try {
+                holder.checkbox.setText(fieldObject.getString("name"));
+            } catch (JSONException e) {
+                holder.checkbox.setText("");
+            }
+            try {
+                holder.fieldsInfo.setText(fieldObject.getString("description"));
+            } catch (JSONException e) {
+                holder.fieldsInfo.setText("");
+            }
+            holder.checkbox.setId(position);
+            holder.checkbox.setChecked(isChecked[position]);
+            holder.checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
+                @Override
+                public void onCheckedChanged(CompoundButton button, boolean checked) {
+                    isChecked[button.getId()] = checked;
+                    String field = button.getText().toString();
+                    if (checked) {
+                        fieldsVector.add(field);
+                    } else if (fieldsVector.contains(field)) {
+                        fieldsVector.remove(field);
+                    }
+                }
+            });
+
+            return hView;
+        }
+    }
+
+    class ViewHolder {
+        CheckBox checkbox;
+        TextView fieldsInfo;
+    }
+
     /**
      * Definition of the list adapter
      */
-	public class ConnectionsListAdapter extends BaseAdapter {
-		private LayoutInflater mInflater;
-		
-		public ConnectionsListAdapter() {
-			mInflater = LayoutInflater.from(explorerActivity.getBaseContext());
-		}
-		
-		@Override
-		public int getCount() {
-			return connectionsArray.size();
-		}
-		
-		@Override
-		public Object getItem(int position) {
-			return null;
-		}
-
-		@Override
-		public long getItemId(int position) {
-			return 0;
-		}
-		
-		@Override
-		public View getView(int position, View convertView, ViewGroup parent) {
-			
-			View hView = convertView;
-			TextView connection;
-			if(hView == null) {
-				hView = mInflater.inflate(R.layout.connection_item, null);
-				connection = (TextView) hView.findViewById(R.id.connection_name);
-				hView.setTag(connection);
-			} else {
-				connection = (TextView) hView.getTag();
-			}
-			SpannableString name;
-			name = new SpannableString(connectionsArray.get(position));
-			name.setSpan(new UnderlineSpan(), 0, name.length(), 0);
-			connection.setText(name);
-			return hView;
-		}
-	}
-}
+    public class ConnectionsListAdapter extends BaseAdapter {
+        private LayoutInflater mInflater;
+
+        public ConnectionsListAdapter() {
+            mInflater = LayoutInflater.from(explorerActivity.getBaseContext());
+        }
+
+        @Override
+        public int getCount() {
+            return connectionsArray.size();
+        }
 
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            View hView = convertView;
+            TextView connection;
+            if (hView == null) {
+                hView = mInflater.inflate(R.layout.connection_item, null);
+                connection = (TextView) hView.findViewById(R.id.connection_name);
+                hView.setTag(connection);
+            } else {
+                connection = (TextView) hView.getTag();
+            }
+            SpannableString name;
+            name = new SpannableString(connectionsArray.get(position));
+            name.setSpan(new UnderlineSpan(), 0, name.length(), 0);
+            connection.setText(name);
+            return hView;
+        }
+    }
+}
diff --git a/examples/Hackbook/src/com/facebook/android/FriendsGetProfilePics.java b/examples/Hackbook/src/com/facebook/android/FriendsGetProfilePics.java
index e2f251baa..b2bbd046c 100644
--- a/examples/Hackbook/src/com/facebook/android/FriendsGetProfilePics.java
+++ b/examples/Hackbook/src/com/facebook/android/FriendsGetProfilePics.java
@@ -10,99 +10,101 @@
 /*
  * Fetch friends profile pictures request via AsyncTask
  */
+public class FriendsGetProfilePics {
 
-public class FriendsGetProfilePics
-{
-	Hashtable<String, Bitmap> friendsImages;
-	Hashtable<String, String> positionRequested;
-	BaseAdapter listener;
-	int runningCount = 0;
-	Stack<ItemPair> queue;
-	
-	/*
-	 * 15 max async tasks at any given time.
-	 */
-	final int MAX_ALLOWED_TASKS = 15;
-	
-	public FriendsGetProfilePics() {
-		friendsImages = new Hashtable<String, Bitmap>();
-		positionRequested = new Hashtable<String, String>();
-		queue = new Stack<ItemPair>();
-	}
-	
-	/*
-	 * Inform the listener when the image has been downloaded. 
-	 * listener is FriendsList here.
-	 */
-	public void setListener(BaseAdapter listener) {
-		this.listener = listener;
-		reset();
-	}
-	
-	public void reset() {
-		positionRequested.clear();
-		runningCount = 0;
-		queue.clear();
-	}
-	
-	/*
-	 * If the profile pictore has already been downloaded and cached, return it
-	 * else excecute a new async task to fetch it - 
-	 * if total async tasks >15, queue the request.
-	 */
-	public Bitmap getImage(String uid, String url) {
-		Bitmap image = (Bitmap)friendsImages.get(uid);
-		if(image != null) {
-			return image;
-		}
-		if(!positionRequested.containsKey(uid)) {
-			positionRequested.put(uid, "");
-			if (runningCount >= MAX_ALLOWED_TASKS) {
-				queue.push(new ItemPair(uid, url));
-			} else {
-				runningCount++;
-				new GetProfilePicAsyncTask().execute(uid, url);
-			}
-		}
-		return null;
-	}
-	
-	public void getNextImage() {
-		if(!queue.isEmpty()) {
-			ItemPair item = (ItemPair)queue.pop();
-			new GetProfilePicAsyncTask().execute(item.uid, item.url);
-		}
-	}
-	
-	/*
-	 * Start a AsyncTask to fetch the request
-	 */
-	private class GetProfilePicAsyncTask extends AsyncTask<Object, Void, Bitmap> {
-		 String uid;
-	     protected Bitmap doInBackground(Object... params) {
-	    	 this.uid = (String)params[0];
-	    	 String url = (String)params[1];
-	         return Utility.getBitmap(url);
-	     }
-
-	     protected void onPostExecute(Bitmap result) {
-	    	 runningCount--;
-	    	 if(result != null) {
-		    	 friendsImages.put(uid, result);
-		    	 listener.notifyDataSetChanged();
-		    	 getNextImage();
-	    	 }
-	     }
-	}
-	
-	class ItemPair {
-		String uid;
-		String url;
-		
-		public ItemPair(String uid, String url) {
-			this.uid = uid;
-			this.url = url;
-		}
-	}
-	
-}
\ No newline at end of file
+    Hashtable<String, Bitmap> friendsImages;
+    Hashtable<String, String> positionRequested;
+    BaseAdapter listener;
+    int runningCount = 0;
+    Stack<ItemPair> queue;
+
+    /*
+     * 15 max async tasks at any given time.
+     */
+    final static int MAX_ALLOWED_TASKS = 15;
+
+    public FriendsGetProfilePics() {
+        friendsImages = new Hashtable<String, Bitmap>();
+        positionRequested = new Hashtable<String, String>();
+        queue = new Stack<ItemPair>();
+    }
+
+    /*
+     * Inform the listener when the image has been downloaded. listener is
+     * FriendsList here.
+     */
+    public void setListener(BaseAdapter listener) {
+        this.listener = listener;
+        reset();
+    }
+
+    public void reset() {
+        positionRequested.clear();
+        runningCount = 0;
+        queue.clear();
+    }
+
+    /*
+     * If the profile picture has already been downloaded and cached, return it
+     * else execute a new async task to fetch it - if total async tasks >15,
+     * queue the request.
+     */
+    public Bitmap getImage(String uid, String url) {
+        Bitmap image = friendsImages.get(uid);
+        if (image != null) {
+            return image;
+        }
+        if (!positionRequested.containsKey(uid)) {
+            positionRequested.put(uid, "");
+            if (runningCount >= MAX_ALLOWED_TASKS) {
+                queue.push(new ItemPair(uid, url));
+            } else {
+                runningCount++;
+                new GetProfilePicAsyncTask().execute(uid, url);
+            }
+        }
+        return null;
+    }
+
+    public void getNextImage() {
+        if (!queue.isEmpty()) {
+            ItemPair item = queue.pop();
+            new GetProfilePicAsyncTask().execute(item.uid, item.url);
+        }
+    }
+
+    /*
+     * Start a AsyncTask to fetch the request
+     */
+    private class GetProfilePicAsyncTask extends AsyncTask<Object, Void, Bitmap> {
+        String uid;
+
+        @Override
+        protected Bitmap doInBackground(Object... params) {
+            this.uid = (String) params[0];
+            String url = (String) params[1];
+            return Utility.getBitmap(url);
+        }
+
+        @Override
+        protected void onPostExecute(Bitmap result) {
+            runningCount--;
+            if (result != null) {
+                friendsImages.put(uid, result);
+                listener.notifyDataSetChanged();
+                getNextImage();
+            }
+        }
+    }
+
+    class ItemPair {
+        String uid;
+        String url;
+
+        public ItemPair(String uid, String url) {
+            this.uid = uid;
+            this.url = url;
+        }
+    }
+
+}
diff --git a/examples/Hackbook/src/com/facebook/android/FriendsList.java b/examples/Hackbook/src/com/facebook/android/FriendsList.java
index 5f484793d..3c8d871eb 100644
--- a/examples/Hackbook/src/com/facebook/android/FriendsList.java
+++ b/examples/Hackbook/src/com/facebook/android/FriendsList.java
@@ -4,7 +4,6 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -14,203 +13,204 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemClickListener;
 import android.widget.BaseAdapter;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
 import android.widget.Toast;
-import android.widget.AdapterView.OnItemClickListener;
 
-public class FriendsList extends Activity implements OnItemClickListener 
-{
-	private Handler mHandler;
-	
-	protected ListView friendsList;
-	protected static JSONArray jsonArray;
-	protected String graph_or_fql;
-	
-	/*
-	 * Layout the friends' list
-	 */
+public class FriendsList extends Activity implements OnItemClickListener {
+    private Handler mHandler;
+
+    protected ListView friendsList;
+    protected static JSONArray jsonArray;
+    protected String graph_or_fql;
+
+    /*
+     * Layout the friends' list
+     */
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        
+
         mHandler = new Handler();
         setContentView(R.layout.friends_list);
-        
+
         Bundle extras = getIntent().getExtras();
         String apiResponse = extras.getString("API_RESPONSE");
         graph_or_fql = extras.getString("METHOD");
-		try {
-			if(graph_or_fql.equals("graph")) {
-				jsonArray = new JSONObject(apiResponse).getJSONArray("data");
-			} else {
-				jsonArray = new JSONArray(apiResponse);
-			}
-		} catch (JSONException e) {
-			showToast("Error: " + e.getMessage());
-			return;
-		}
-        friendsList = (ListView)findViewById(R.id.friends_list);
+        try {
+            if (graph_or_fql.equals("graph")) {
+                jsonArray = new JSONObject(apiResponse).getJSONArray("data");
+            } else {
+                jsonArray = new JSONArray(apiResponse);
+            }
+        } catch (JSONException e) {
+            showToast("Error: " + e.getMessage());
+            return;
+        }
+        friendsList = (ListView) findViewById(R.id.friends_list);
         friendsList.setOnItemClickListener(this);
         friendsList.setAdapter(new FriendListAdapter(this));
-        
+
         showToast(getString(R.string.can_post_on_wall));
     }
-    
+
     /*
-     * Clicking on a friend should popup a dialog for user to post on friend's wall.
+     * Clicking on a friend should popup a dialog for user to post on friend's
+     * wall.
      */
-    
     @Override
     public void onItemClick(AdapterView<?> arg0, View v, int position, long arg3) {
-    	try {	
-			final long friendId;
-			if(graph_or_fql.equals("graph")) {
-				friendId = jsonArray.getJSONObject(position).getLong("id");
-			} else {
-				friendId = jsonArray.getJSONObject(position).getLong("uid");
-			}
-			String name = jsonArray.getJSONObject(position).getString("name");
-	
-			
-			new AlertDialog.Builder(this)
-	        .setTitle(R.string.post_on_wall_title)
-	        .setMessage(String.format(getString(R.string.post_on_wall), name))
-	        .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
-	            @Override
-	            public void onClick(DialogInterface dialog, int which) {
-	            	Bundle params = new Bundle();
-	            	/*
-	            	 * Source Tag: friend_wall_tag
-	            	 * To write on a friend's wall, provide friend's UID in the 'to' parameter.
-	            	 * More info on feed dialog - https://developers.facebook.com/docs/reference/dialogs/feed/
-	            	 */
-	            	params.putString("to", String.valueOf(friendId));
-	                params.putString("caption", getString(R.string.app_name));
-	                params.putString("description", getString(R.string.app_desc));
-	                params.putString("picture", Utility.HACK_ICON_URL);
-	                params.putString("name", getString(R.string.app_action));
-	            	Utility.mFacebook.dialog(FriendsList.this, "feed", params, new PostDialogListener());
-	            }
-	
-	        })
-	        .setNegativeButton(R.string.no, null)
-	        .show();
-		} catch (JSONException e) {
-			showToast("Error: " + e.getMessage());
-		}
+        try {
+            final long friendId;
+            if (graph_or_fql.equals("graph")) {
+                friendId = jsonArray.getJSONObject(position).getLong("id");
+            } else {
+                friendId = jsonArray.getJSONObject(position).getLong("uid");
+            }
+            String name = jsonArray.getJSONObject(position).getString("name");
+
+            new AlertDialog.Builder(this).setTitle(R.string.post_on_wall_title)
+                    .setMessage(String.format(getString(R.string.post_on_wall), name))
+                    .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            Bundle params = new Bundle();
+                            /*
+                             * Source Tag: friend_wall_tag To write on a friend's wall, 
+                             * provide friend's UID in the 'to' parameter.
+                             * More info on feed dialog:
+                             * https://developers.facebook.com/docs/reference/dialogs/feed/
+                             */
+                            params.putString("to", String.valueOf(friendId));
+                            params.putString("caption", getString(R.string.app_name));
+                            params.putString("description", getString(R.string.app_desc));
+                            params.putString("picture", Utility.HACK_ICON_URL);
+                            params.putString("name", getString(R.string.app_action));
+                            Utility.mFacebook.dialog(FriendsList.this, "feed", params,
+                                    new PostDialogListener());
+                        }
+
+                    }).setNegativeButton(R.string.no, null).show();
+        } catch (JSONException e) {
+            showToast("Error: " + e.getMessage());
+        }
     }
-    
+
     /*
      * Callback after the message has been posted on friend's wall.
      */
     public class PostDialogListener extends BaseDialogListener {
+        @Override
         public void onComplete(Bundle values) {
-        	final String postId = values.getString("post_id");     
-        	if (postId != null) {                                                                                   
-        		showToast("Message posted on the wall.");            
-        	} else {                                                                                                
-        		showToast("No message posted on the wall.");                                                                       
-        	}   
+            final String postId = values.getString("post_id");
+            if (postId != null) {
+                showToast("Message posted on the wall.");
+            } else {
+                showToast("No message posted on the wall.");
+            }
         }
     }
-    
+
     public void showToast(final String msg) {
-    	mHandler.post(new Runnable() {
+        mHandler.post(new Runnable() {
+            @Override
             public void run() {
-	            Toast toast = Toast.makeText(FriendsList.this, msg, Toast.LENGTH_LONG);
-				toast.show();
+                Toast toast = Toast.makeText(FriendsList.this, msg, Toast.LENGTH_LONG);
+                toast.show();
             }
-    	});
+        });
     }
 
     /**
      * Definition of the list adapter
      */
-	public class FriendListAdapter extends BaseAdapter {
-		private LayoutInflater mInflater;
-		FriendsList friendsList;
-		
-		public FriendListAdapter(FriendsList friendsList) {
-			this.friendsList = friendsList;
-			if(Utility.model == null) {
-				Utility.model = new FriendsGetProfilePics();
-			}
-			Utility.model.setListener(this);
-			mInflater = LayoutInflater.from(friendsList.getBaseContext());
-		}
-		
-		@Override
-		public int getCount() {
-			return jsonArray.length();
-		}
-		
-		@Override
-		public Object getItem(int position) {
-			return null;
-		}
-
-		@Override
-		public long getItemId(int position) {
-			return 0;
-		}
-		
-		@Override
-		public View getView(int position, View convertView, ViewGroup parent) {
-			JSONObject jsonObject = null;
-			try {
-				jsonObject = jsonArray.getJSONObject(position);
-			} catch (JSONException e1) {
-				// TODO Auto-generated catch block
-				e1.printStackTrace();
-			}
-			View hView = convertView;
-			if(convertView == null) {
-				hView = mInflater.inflate(R.layout.friend_item, null);
-				ViewHolder holder = new ViewHolder();
-				holder.profile_pic = (ImageView)hView.findViewById(R.id.profile_pic);
-				holder.name = (TextView) hView.findViewById(R.id.name);
-				holder.info = (TextView) hView.findViewById(R.id.info);
-				hView.setTag(holder);
-			}
-
-			ViewHolder holder = (ViewHolder) hView.getTag();
-			try {
-				if(graph_or_fql.equals("graph")) {
-					holder.profile_pic.setImageBitmap(Utility.model.getImage(jsonObject.getString("id"), jsonObject.getString("picture")));
-				} else {
-					holder.profile_pic.setImageBitmap(Utility.model.getImage(jsonObject.getString("uid"), jsonObject.getString("pic_square")));
-				}
-			} catch (JSONException e) {
-				holder.name.setText("");
-			}
-			try {
-				holder.name.setText(jsonObject.getString("name"));
-			} catch (JSONException e) {
-				holder.name.setText("");
-			}
-			try {
-				if(graph_or_fql.equals("graph")) {
-					holder.info.setText(jsonObject.getJSONObject("location").getString("name"));
-				} else {
-					JSONObject location = jsonObject.getJSONObject("current_location");
-					holder.info.setText(location.getString("city") + ", " + location.getString("state"));
-				}
-				
-			} catch (JSONException e) {
-				holder.info.setText("");
-			}
-			return hView;
-		}	
-		
-	}
-	
-	
-	class ViewHolder {
-		ImageView profile_pic;
-		TextView name;
-		TextView info;
-	}
-}
\ No newline at end of file
+    public class FriendListAdapter extends BaseAdapter {
+        private LayoutInflater mInflater;
+        FriendsList friendsList;
+
+        public FriendListAdapter(FriendsList friendsList) {
+            this.friendsList = friendsList;
+            if (Utility.model == null) {
+                Utility.model = new FriendsGetProfilePics();
+            }
+            Utility.model.setListener(this);
+            mInflater = LayoutInflater.from(friendsList.getBaseContext());
+        }
+
+        @Override
+        public int getCount() {
+            return jsonArray.length();
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            JSONObject jsonObject = null;
+            try {
+                jsonObject = jsonArray.getJSONObject(position);
+            } catch (JSONException e1) {
+                // TODO Auto-generated catch block
+                e1.printStackTrace();
+            }
+            View hView = convertView;
+            if (convertView == null) {
+                hView = mInflater.inflate(R.layout.friend_item, null);
+                ViewHolder holder = new ViewHolder();
+                holder.profile_pic = (ImageView) hView.findViewById(R.id.profile_pic);
+                holder.name = (TextView) hView.findViewById(R.id.name);
+                holder.info = (TextView) hView.findViewById(R.id.info);
+                hView.setTag(holder);
+            }
+
+            ViewHolder holder = (ViewHolder) hView.getTag();
+            try {
+                if (graph_or_fql.equals("graph")) {
+                    holder.profile_pic.setImageBitmap(Utility.model.getImage(
+                            jsonObject.getString("id"), jsonObject.getString("picture")));
+                } else {
+                    holder.profile_pic.setImageBitmap(Utility.model.getImage(
+                            jsonObject.getString("uid"), jsonObject.getString("pic_square")));
+                }
+            } catch (JSONException e) {
+                holder.name.setText("");
+            }
+            try {
+                holder.name.setText(jsonObject.getString("name"));
+            } catch (JSONException e) {
+                holder.name.setText("");
+            }
+            try {
+                if (graph_or_fql.equals("graph")) {
+                    holder.info.setText(jsonObject.getJSONObject("location").getString("name"));
+                } else {
+                    JSONObject location = jsonObject.getJSONObject("current_location");
+                    holder.info.setText(location.getString("city") + ", "
+                            + location.getString("state"));
+                }
+
+            } catch (JSONException e) {
+                holder.info.setText("");
+            }
+            return hView;
+        }
+
+    }
+
+    class ViewHolder {
+        ImageView profile_pic;
+        TextView name;
+        TextView info;
+    }
+}
diff --git a/examples/Hackbook/src/com/facebook/android/GraphExplorer.java b/examples/Hackbook/src/com/facebook/android/GraphExplorer.java
index 8f5166f7b..094ab738d 100644
--- a/examples/Hackbook/src/com/facebook/android/GraphExplorer.java
+++ b/examples/Hackbook/src/com/facebook/android/GraphExplorer.java
@@ -26,151 +26,163 @@
 import android.view.View.OnClickListener;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.Button;
+import android.widget.EditText;
 import android.widget.ScrollView;
 import android.widget.TextView;
-import android.widget.EditText;
 import android.widget.Toast;
 
 public class GraphExplorer extends Activity {
-	private Button mSubmitButton, mViewURLButton;
-	private Button mGetPermissionsButton;
-	private Button mTextDeleteButton, mMeButton;
-	private Button mFieldsConnectionsButton, mBackParentButton;
-	private TextView mOutput;
-	private EditText mInputId;
-	private Bundle params;
-	private String url, mParentObjectId;
-	private ProgressDialog dialog;
-	private String rootString;
-	private ScrollView mScrollView;
-	private Handler mHandler;
-	private final String BASE_GRAPH_URL = "https://graph.facebook.com";
-	
-	private JSONObject metadataObject;
-	
-	/*
-	 * Layout the Graph Explorer
-	 */
-	public void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		
-		mHandler = new Handler();
-		
-		setContentView(R.layout.graph_explorer);
-		
-		url = BASE_GRAPH_URL; //Base URL
-		
-		mInputId = (EditText) findViewById(R.id.inputId);
-		mOutput = (TextView) findViewById(R.id.output);
-		mSubmitButton = (Button) findViewById(R.id.submitButton);
-		mViewURLButton = (Button) findViewById(R.id.viewURLButton);
-		mGetPermissionsButton = (Button) findViewById(R.id.accessTokenButton);
-		mFieldsConnectionsButton = (Button) findViewById(R.id.fieldsAndConnectionsButton);
-		mBackParentButton = (Button) findViewById(R.id.backParentButton);
-		
-		mScrollView = (ScrollView) findViewById(R.id.ScrollView01);
-		
-		mTextDeleteButton = (Button) findViewById(R.id.textDeleteButton);
-		mMeButton = (Button) findViewById(R.id.meButton);
-		if(Utility.mFacebook.isSessionValid()) {
-			mMeButton.setVisibility(View.VISIBLE);
-		}
-		
-		params = new Bundle();
-		mSubmitButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				
-				
-				((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(mInputId.getWindowToken(), 0);
-				
-				//prepare the URL to be shown on 'View URL' click action. This is not used by the SDK 
-				url = BASE_GRAPH_URL; //Base URL
-				
-				/*
-				 * Source Tag: graph_explorer
-				 */
-				rootString = mInputId.getText().toString();
-				if(!TextUtils.isEmpty(rootString)) {
-					dialog = ProgressDialog.show(GraphExplorer.this, "", getString(R.string.please_wait), true, true);
-					params.putString("metadata", "1");
-					Utility.mAsyncRunner.request(rootString, params, new graphApiRequestListener());
-					url += "/" + rootString; //Relative Path provided by you
-				}
-				
-				
-	        }
-	    });
-		
-		mViewURLButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				setText(url);
-				Linkify.addLinks(mOutput, Linkify.WEB_URLS);
-			}
-		});
-		
-		mGetPermissionsButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				if(Utility.mFacebook.isSessionValid()) {
-					dialog = ProgressDialog.show(GraphExplorer.this, "", getString(R.string.fetching_current_permissions), true, true);
-					Bundle params = new Bundle();
-					params.putString("access_token", Utility.mFacebook.getAccessToken());
-					Utility.mAsyncRunner.request("me/permissions", params, new permissionsRequestListener());
-				} else {
-					new PermissionsDialog(GraphExplorer.this).show();
-				}
-			}
-		});
-		
-		mFieldsConnectionsButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				if(metadataObject == null) {
-					makeToast("No fields, connections availalbe for this object.");
-				} else {
-					new FieldsConnectionsDialog(GraphExplorer.this, metadataObject).show();
-				}
-			}
-		});
-		
-		mTextDeleteButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				url = BASE_GRAPH_URL; //Base URL
-				mParentObjectId="";
-				mInputId.setText("");
-				params.clear();
-				metadataObject=null;
-				setText("");
-				mBackParentButton.setVisibility(View.INVISIBLE);
-			}
-		});
-		
-		mMeButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				mInputId.setText("me");
-				mSubmitButton.performClick();
-			}
-		});
-		
-		mBackParentButton.setOnClickListener(new OnClickListener() {
-			public void onClick(View v) {
-				mInputId.setText(mParentObjectId);
-				mParentObjectId = "";
-				mSubmitButton.performClick();
-			}
-		});
-	}
-	
-	public void onResume() {
-		super.onResume();
-		if(Utility.mFacebook.isSessionValid()) {
-			mMeButton.setVisibility(View.VISIBLE);
-		}
-		if(Utility.objectID != null) {
-			mInputId.setText(Utility.objectID);
-			Utility.objectID = null;
-			mSubmitButton.performClick();
-		}
-	}
-	
+    private Button mSubmitButton, mViewURLButton;
+    private Button mGetPermissionsButton;
+    private Button mTextDeleteButton, mMeButton;
+    private Button mFieldsConnectionsButton, mBackParentButton;
+    private TextView mOutput;
+    private EditText mInputId;
+    private Bundle params;
+    private String url, mParentObjectId;
+    private ProgressDialog dialog;
+    private String rootString;
+    private ScrollView mScrollView;
+    private Handler mHandler;
+    private final static String BASE_GRAPH_URL = "https://graph.facebook.com";
+
+    private JSONObject metadataObject;
+
+    /*
+     * Layout the Graph Explorer
+     */
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        mHandler = new Handler();
+
+        setContentView(R.layout.graph_explorer);
+
+        url = BASE_GRAPH_URL; // Base URL
+
+        mInputId = (EditText) findViewById(R.id.inputId);
+        mOutput = (TextView) findViewById(R.id.output);
+        mSubmitButton = (Button) findViewById(R.id.submitButton);
+        mViewURLButton = (Button) findViewById(R.id.viewURLButton);
+        mGetPermissionsButton = (Button) findViewById(R.id.accessTokenButton);
+        mFieldsConnectionsButton = (Button) findViewById(R.id.fieldsAndConnectionsButton);
+        mBackParentButton = (Button) findViewById(R.id.backParentButton);
+
+        mScrollView = (ScrollView) findViewById(R.id.ScrollView01);
+
+        mTextDeleteButton = (Button) findViewById(R.id.textDeleteButton);
+        mMeButton = (Button) findViewById(R.id.meButton);
+        if (Utility.mFacebook.isSessionValid()) {
+            mMeButton.setVisibility(View.VISIBLE);
+        }
+
+        params = new Bundle();
+        mSubmitButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+                ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE))
+                        .hideSoftInputFromWindow(mInputId.getWindowToken(), 0);
+
+                // Prepare the URL to be shown on 'View URL' click action. This
+                // is not used by the SDK
+                url = BASE_GRAPH_URL; // Base URL
+
+                /*
+                 * Source Tag: graph_explorer
+                 */
+                rootString = mInputId.getText().toString();
+                if (!TextUtils.isEmpty(rootString)) {
+                    dialog = ProgressDialog.show(GraphExplorer.this, "",
+                            getString(R.string.please_wait), true, true);
+                    params.putString("metadata", "1");
+                    Utility.mAsyncRunner.request(rootString, params, new graphApiRequestListener());
+                    url += "/" + rootString; // Relative Path provided by you
+                }
+
+            }
+        });
+
+        mViewURLButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                setText(url);
+                Linkify.addLinks(mOutput, Linkify.WEB_URLS);
+            }
+        });
+
+        mGetPermissionsButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (Utility.mFacebook.isSessionValid()) {
+                    dialog = ProgressDialog.show(GraphExplorer.this, "",
+                            getString(R.string.fetching_current_permissions), true, true);
+                    Bundle params = new Bundle();
+                    params.putString("access_token", Utility.mFacebook.getAccessToken());
+                    Utility.mAsyncRunner.request("me/permissions", params,
+                            new permissionsRequestListener());
+                } else {
+                    new PermissionsDialog(GraphExplorer.this).show();
+                }
+            }
+        });
+
+        mFieldsConnectionsButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (metadataObject == null) {
+                    makeToast("No fields, connections availalbe for this object.");
+                } else {
+                    new FieldsConnectionsDialog(GraphExplorer.this, metadataObject).show();
+                }
+            }
+        });
+
+        mTextDeleteButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                url = BASE_GRAPH_URL; // Base URL
+                mParentObjectId = "";
+                mInputId.setText("");
+                params.clear();
+                metadataObject = null;
+                setText("");
+                mBackParentButton.setVisibility(View.INVISIBLE);
+            }
+        });
+
+        mMeButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mInputId.setText("me");
+                mSubmitButton.performClick();
+            }
+        });
+
+        mBackParentButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mInputId.setText(mParentObjectId);
+                mParentObjectId = "";
+                mSubmitButton.performClick();
+            }
+        });
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        if (Utility.mFacebook.isSessionValid()) {
+            mMeButton.setVisibility(View.VISIBLE);
+        }
+        if (Utility.objectID != null) {
+            mInputId.setText(Utility.objectID);
+            Utility.objectID = null;
+            mSubmitButton.performClick();
+        }
+    }
+
     protected void processIntent(Intent incomingIntent) {
         Uri intentUri = incomingIntent.getData();
         if (intentUri == null) {
@@ -178,160 +190,170 @@ protected void processIntent(Intent incomingIntent) {
         }
         String objectID = intentUri.getHost();
         mInputId.setText(objectID);
-		mSubmitButton.performClick();
+        mSubmitButton.performClick();
+    }
+
+    public void getConnection(String connection) {
+        mInputId.setText(rootString + "/" + connection);
+        mParentObjectId = rootString;
+        mSubmitButton.performClick();
+    }
+
+    public void getFields(Vector<String> fieldsVector) {
+        String fields = "";
+        int count = 0;
+        for (String field : fieldsVector) {
+            fields += field;
+            if (++count < fieldsVector.size()) {
+                fields += ",";
+            }
+        }
+        params.putString("fields", fields);
+        mSubmitButton.performClick();
+    }
+
+    /*
+     * Callback for the permission OAuth Dialog
+     */
+    public class permissionsRequestListener extends BaseRequestListener {
+
+        @Override
+        public void onComplete(final String response, final Object state) {
+            dialog.dismiss();
+            /*
+             * Clear the current permission list and repopulate with new
+             * permissions. This is used to mark assigned permission green and
+             * unclickable.
+             */
+            Utility.currentPermissions.clear();
+            try {
+                JSONObject jsonObject = new JSONObject(response).getJSONArray("data")
+                        .getJSONObject(0);
+                Iterator<?> iterator = jsonObject.keys();
+                String permission;
+                while (iterator.hasNext()) {
+                    permission = (String) iterator.next();
+                    Utility.currentPermissions.put(permission,
+                            String.valueOf(jsonObject.getInt(permission)));
+                }
+            } catch (JSONException e) {
+                makeToast("Permissions could not be fetched, none will be selected by default.");
+            }
+            mHandler.post(new Runnable() {
+                @Override
+                public void run() {
+                    new PermissionsDialog(GraphExplorer.this).show();
+                }
+            });
+        }
+
+        public void onFacebookError(FacebookError error) {
+            dialog.dismiss();
+            makeToast("Permissions could not be fetched, none will be selected by default.");
+            mHandler.post(new Runnable() {
+                @Override
+                public void run() {
+                    new PermissionsDialog(GraphExplorer.this).show();
+                }
+            });
+        }
+
     }
 
-	public void getConnection(String connection) {
-		mInputId.setText(rootString + "/" + connection);
-		mParentObjectId = rootString;
-		mSubmitButton.performClick();
-	}
-	
-	public void getFields(Vector<String> fieldsVector) {
-		String fields = "";
-		int count = 0;
-		 for (String field : fieldsVector) {
-			 fields += field;
-			 if(++count < fieldsVector.size()) {
-				 fields += ",";
-			 }
-		 }
-		 params.putString("fields", fields);
-		 mSubmitButton.performClick();
-	}
-	
-	/*
-	 * Callback for the permission OAuth Dialog
-	 */
-	public class permissionsRequestListener extends BaseRequestListener {
-
-	    public void onComplete(final String response, final Object state) {
-	    	dialog.dismiss();
-	    	/*
-	    	 * clear the current permission list and repopulate with new permissions
-	    	 * This is used to mark assigned permission green and unclickable.
-	    	 */
-	    	Utility.currentPermissions.clear();
-			try {
-				JSONObject jsonObject = new JSONObject(response).getJSONArray("data").getJSONObject(0);
-				Iterator<?> iterator = jsonObject.keys();
-				String permission;
-				while(iterator.hasNext()) {
-					permission = (String)iterator.next();
-					Utility.currentPermissions.put(permission, String.valueOf(jsonObject.getInt(permission)));
-				}
-			} catch (JSONException e) {
-				makeToast("Permissions could not be fetched, none will be selected by default.");
-			}
-			mHandler.post(new Runnable() {
-	            public void run() {
-	            	new PermissionsDialog(GraphExplorer.this).show();
-	            }
-			});
-	    }
-	    
-	    public void onFacebookError(FacebookError error) {
-	    	dialog.dismiss();
-	    	makeToast("Permissions could not be fetched, none will be selected by default.");
-	    	mHandler.post(new Runnable() {
-	            public void run() {
-	            	new PermissionsDialog(GraphExplorer.this).show();
-	            }
-			});
-	    }
-	    
-	}
-	
-	@Override
-    protected void onActivityResult(int requestCode, int resultCode,
-                                    Intent data) {
-    	Utility.mFacebook.authorizeCallback(requestCode, resultCode, data);
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        Utility.mFacebook.authorizeCallback(requestCode, resultCode, data);
     }
-	
-	/*
-	 * Callback after a given Graph API request is executed
-	 * Get the response and show it.
-	 */
-	public class graphApiRequestListener extends BaseRequestListener {
-
-	    public void onComplete(final String response, final Object state) {
-	    	dialog.dismiss();
-	    	//access token is appended by Facebook object, hence params are added here after request is complete
-			if(!params.isEmpty()) {
-				url += "?" + Util.encodeUrl(params); //Params
-			}
-			metadataObject = null;
-			params.clear();
-			try {
-	            JSONObject json = Util.parseJson(response);
-	            if(json.has("metadata")) {
-	            	metadataObject =  json.getJSONObject("metadata");
-	            	json.remove("metadata");
-	            } else {
-	            	metadataObject = null;
-	            }
-	            setText(json.toString(2));
-			} catch (JSONException e) {
-				setText(e.getMessage());
-				e.printStackTrace();
-			} catch (FacebookError e) {
-				setText(e.getMessage());
-				e.printStackTrace();
-			}
-	    }
-	    
-	    public void onFacebookError(FacebookError error) {
-	    	dialog.dismiss();
-	    	setText(error.getMessage());
-			params.clear();
-			metadataObject = null;
-	    }
-	    
-	}
-	
-	public void setText(final String txt) {
-		mHandler.post(new Runnable() {
-    		
-    		/*
-    		 * A transform filter that simply returns just the text captured by the
-    		 * first regular expression group.
-    		 */
-    	    TransformFilter idFilter = new TransformFilter() {
-    	        public final String transformUrl(final Matcher match, String url) {
-    	            return match.group(1);
-    	        }
-    	    };
-    	    
+
+    /*
+     * Callback after a given Graph API request is executed Get the response and
+     * show it.
+     */
+    public class graphApiRequestListener extends BaseRequestListener {
+
+        @Override
+        public void onComplete(final String response, final Object state) {
+            dialog.dismiss();
+            // access token is appended by Facebook object, hence params are
+            // added here after request is complete
+            if (!params.isEmpty()) {
+                url += "?" + Util.encodeUrl(params); // Params
+            }
+            metadataObject = null;
+            params.clear();
+            try {
+                JSONObject json = Util.parseJson(response);
+                if (json.has("metadata")) {
+                    metadataObject = json.getJSONObject("metadata");
+                    json.remove("metadata");
+                } else {
+                    metadataObject = null;
+                }
+                setText(json.toString(2));
+            } catch (JSONException e) {
+                setText(e.getMessage());
+                e.printStackTrace();
+            } catch (FacebookError e) {
+                setText(e.getMessage());
+                e.printStackTrace();
+            }
+        }
+
+        public void onFacebookError(FacebookError error) {
+            dialog.dismiss();
+            setText(error.getMessage());
+            params.clear();
+            metadataObject = null;
+        }
+
+    }
+
+    public void setText(final String txt) {
+        mHandler.post(new Runnable() {
+
+            /*
+             * A transform filter that simply returns just the text captured by
+             * the first regular expression group.
+             */
+            TransformFilter idFilter = new TransformFilter() {
+                @Override
+                public final String transformUrl(final Matcher match, String url) {
+                    return match.group(1);
+                }
+            };
+
+            @Override
             public void run() {
-            	mViewURLButton.setVisibility(TextUtils.isEmpty(txt)? View.INVISIBLE : View.VISIBLE);
-            	mFieldsConnectionsButton.setVisibility(TextUtils.isEmpty(txt)? View.INVISIBLE : View.VISIBLE);
-            	mOutput.setVisibility(TextUtils.isEmpty(txt)? View.INVISIBLE : View.VISIBLE);
-				mBackParentButton.setVisibility(TextUtils.isEmpty(mParentObjectId)? View.INVISIBLE : View.VISIBLE);
-            	
-            	String convertedTxt = txt.replace("\\/", "/");
-            	mOutput.setText(convertedTxt);
-            	mScrollView.scrollTo(0, 0);
-            	
-                
-            	Linkify.addLinks(mOutput, Linkify.WEB_URLS);
-            	/*
-            	 * Linkify the object ids so they can be clicked.
-            	 * match pattern: "id" : "objectid" (objectid can be int or int_int)
-            	 */
-            	Pattern pattern = Pattern.compile("\"id\": \"(\\d*_?\\d*)\"");
+                mViewURLButton.setVisibility(
+                        TextUtils.isEmpty(txt) ? View.INVISIBLE : View.VISIBLE);
+                mFieldsConnectionsButton.setVisibility(TextUtils.isEmpty(txt) ? View.INVISIBLE
+                        : View.VISIBLE);
+                mOutput.setVisibility(TextUtils.isEmpty(txt) ? View.INVISIBLE : View.VISIBLE);
+                mBackParentButton.setVisibility(
+                        TextUtils.isEmpty(mParentObjectId) ? View.INVISIBLE : View.VISIBLE);
+
+                String convertedTxt = txt.replace("\\/", "/");
+                mOutput.setText(convertedTxt);
+                mScrollView.scrollTo(0, 0);
+
+                Linkify.addLinks(mOutput, Linkify.WEB_URLS);
+                /*
+                 * Linkify the object ids so they can be clicked. match pattern:
+                 * "id" : "objectid" (objectid can be int or int_int)
+                 */
+                Pattern pattern = Pattern.compile("\"id\": \"(\\d*_?\\d*)\"");
                 String scheme = "fbGraphEx://";
                 Linkify.addLinks(mOutput, pattern, scheme, null, idFilter);
             }
         });
     }
-	
-	
-	private void makeToast(final String msg) {
-		mHandler.post(new Runnable() {
+
+    private void makeToast(final String msg) {
+        mHandler.post(new Runnable() {
+            @Override
             public void run() {
-            	Toast.makeText(GraphExplorer.this, msg, Toast.LENGTH_SHORT).show();
+                Toast.makeText(GraphExplorer.this, msg, Toast.LENGTH_SHORT).show();
             }
-		});
-	}
+        });
+    }
 }
-
diff --git a/examples/Hackbook/src/com/facebook/android/Hackbook.java b/examples/Hackbook/src/com/facebook/android/Hackbook.java
index 31d73817d..8e08e0477 100644
--- a/examples/Hackbook/src/com/facebook/android/Hackbook.java
+++ b/examples/Hackbook/src/com/facebook/android/Hackbook.java
@@ -16,7 +16,6 @@
 
 package com.facebook.android;
 
-
 import java.io.IOException;
 
 import org.json.JSONException;
@@ -34,23 +33,23 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemClickListener;
 import android.widget.ArrayAdapter;
 import android.widget.BaseAdapter;
 import android.widget.ImageView;
-import android.widget.TextView;
 import android.widget.ListView;
-import android.widget.AdapterView;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import com.facebook.android.SessionEvents.AuthListener;
 import com.facebook.android.SessionEvents.LogoutListener;
-import android.widget.AdapterView.OnItemClickListener;
 
+public class Hackbook extends Activity implements OnItemClickListener {
 
-public class Hackbook extends Activity  implements OnItemClickListener {
-
-    /* Your Facebook Application ID must be set before running this example
-     * See http://www.facebook.com/developers/createapp.php
+    /*
+     * Your Facebook Application ID must be set before running this example See
+     * http://www.facebook.com/developers/createapp.php
      */
     public static final String APP_ID = "157111564357680";
 
@@ -58,343 +57,378 @@
     private TextView mText;
     private ImageView mUserPic;
     private Handler mHandler;
-	ProgressDialog dialog;
+    ProgressDialog dialog;
 
-	final int AUTHORIZE_ACTIVITY_RESULT_CODE = 0;
-	final int PICK_EXISTING_PHOTO_RESULT_CODE = 1;
+    final static int AUTHORIZE_ACTIVITY_RESULT_CODE = 0;
+    final static int PICK_EXISTING_PHOTO_RESULT_CODE = 1;
 
     private String graph_or_fql;
-    
+
     private ListView list;
-    String[] main_items = {"Update Status", "App Requests", "Get Friends", "Upload Photo", "Place Check-in", "Run FQL Query", "Graph API Explorer"};
-    String[] permissions = {"offline_access", "publish_stream", "user_photos", "publish_checkins", "photo_upload"};
-    
+    String[] main_items = { "Update Status", "App Requests", "Get Friends", "Upload Photo",
+            "Place Check-in", "Run FQL Query", "Graph API Explorer" };
+    String[] permissions = { "offline_access", "publish_stream", "user_photos", "publish_checkins",
+            "photo_upload" };
+
     /** Called when the activity is first created. */
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         if (APP_ID == null) {
-            Util.showAlert(this, "Warning", "Facebook Applicaton ID must be " +
-                    "specified before running this example: see FbAPIs.java");
+            Util.showAlert(this, "Warning", "Facebook Applicaton ID must be "
+                    + "specified before running this example: see FbAPIs.java");
             return;
         }
 
         setContentView(R.layout.main);
         mHandler = new Handler();
-        
+
         mText = (TextView) Hackbook.this.findViewById(R.id.txt);
-        mUserPic = (ImageView)Hackbook.this.findViewById(R.id.user_pic);
-        
-        //Create the Facebook Object using the app id.
-       	Utility.mFacebook = new Facebook(APP_ID);
-       	//Instantiate the asynrunner object for asynchronous api calls.
-       	Utility.mAsyncRunner = new AsyncFacebookRunner(Utility.mFacebook);
-
-       	mLoginButton = (LoginButton) findViewById(R.id.login);
-        
-       	//restore session if one exists
+        mUserPic = (ImageView) Hackbook.this.findViewById(R.id.user_pic);
+
+        // Create the Facebook Object using the app id.
+        Utility.mFacebook = new Facebook(APP_ID);
+        // Instantiate the asynrunner object for asynchronous api calls.
+        Utility.mAsyncRunner = new AsyncFacebookRunner(Utility.mFacebook);
+
+        mLoginButton = (LoginButton) findViewById(R.id.login);
+
+        // restore session if one exists
         SessionStore.restore(Utility.mFacebook, this);
         SessionEvents.addAuthListener(new FbAPIsAuthListener());
         SessionEvents.addLogoutListener(new FbAPIsLogoutListener());
-        
+
         /*
-		 * Source Tag: login_tag
-		 */
+         * Source Tag: login_tag
+         */
         mLoginButton.init(this, AUTHORIZE_ACTIVITY_RESULT_CODE, Utility.mFacebook, permissions);
-        
-       	if(Utility.mFacebook.isSessionValid()) {
-       		requestUserData();
-       	}
-        
-        list = (ListView)findViewById(R.id.main_list);
-        
+
+        if (Utility.mFacebook.isSessionValid()) {
+            requestUserData();
+        }
+
+        list = (ListView) findViewById(R.id.main_list);
+
         list.setOnItemClickListener(this);
         list.setAdapter(new ArrayAdapter<String>(this, R.layout.main_list_item, main_items));
     }
-    
+
     @Override
     public void onResume() {
-    	super.onResume();
-    	if(Utility.mFacebook != null && !Utility.mFacebook.isSessionValid()) {
-	    	mText.setText("You are logged out! ");
-	        mUserPic.setImageBitmap(null);
-    	}
+        super.onResume();
+        if (Utility.mFacebook != null && !Utility.mFacebook.isSessionValid()) {
+            mText.setText("You are logged out! ");
+            mUserPic.setImageBitmap(null);
+        }
     }
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-    	switch(requestCode) {
-    		/*
-    		 * if this is the activity result from authorization flow, do a call back to authorizeCallback
-    		 * Source Tag: login_tag
-    		 */
-	    	case AUTHORIZE_ACTIVITY_RESULT_CODE: {
-	    		Utility.mFacebook.authorizeCallback(requestCode, resultCode, data);
-	    		break;
-	    	}
-	    	/*
-	    	 * if this is the result for a photo picker from the gallery, upload the image after scaling it.
-	    	 * You can use the Utility.scaleImage() function for scaling
-	    	 */
-	    	case PICK_EXISTING_PHOTO_RESULT_CODE: { 
-	    		if (resultCode == Activity.RESULT_OK) {
-	    			Uri photoUri = data.getData();
-		        	if(photoUri != null) {
-		        		Bundle params = new Bundle();
-		        		try {
-		        			params.putByteArray("photo", Utility.scaleImage(getApplicationContext(), photoUri));
-		        		} catch  (IOException e) {
-		        			e.printStackTrace();
-		        		}
-		        		params.putString("caption", "FbAPIs Sample App photo upload");
-		        		Utility.mAsyncRunner.request("me/photos", params, "POST", new PhotoUploadListener(), null);
-		        	} else {
-		        		Toast.makeText(getApplicationContext(), "Error selecting image from the gallery.", Toast.LENGTH_SHORT).show();
-		        	}
-		        } else {
-		        	Toast.makeText(getApplicationContext(), "No image selected for upload.", Toast.LENGTH_SHORT).show();
-		          }
-	    		break;
-		    }
-    	}
+        switch (requestCode) {
+        /*
+         * if this is the activity result from authorization flow, do a call
+         * back to authorizeCallback Source Tag: login_tag
+         */
+            case AUTHORIZE_ACTIVITY_RESULT_CODE: {
+                Utility.mFacebook.authorizeCallback(requestCode, resultCode, data);
+                break;
+            }
+            /*
+             * if this is the result for a photo picker from the gallery, upload
+             * the image after scaling it. You can use the Utility.scaleImage()
+             * function for scaling
+             */
+            case PICK_EXISTING_PHOTO_RESULT_CODE: {
+                if (resultCode == Activity.RESULT_OK) {
+                    Uri photoUri = data.getData();
+                    if (photoUri != null) {
+                        Bundle params = new Bundle();
+                        try {
+                            params.putByteArray("photo",
+                                    Utility.scaleImage(getApplicationContext(), photoUri));
+                        } catch (IOException e) {
+                            e.printStackTrace();
+                        }
+                        params.putString("caption", "FbAPIs Sample App photo upload");
+                        Utility.mAsyncRunner.request("me/photos", params, "POST",
+                                new PhotoUploadListener(), null);
+                    } else {
+                        Toast.makeText(getApplicationContext(),
+                                "Error selecting image from the gallery.", Toast.LENGTH_SHORT)
+                                .show();
+                    }
+                } else {
+                    Toast.makeText(getApplicationContext(), "No image selected for upload.",
+                            Toast.LENGTH_SHORT).show();
+                }
+                break;
+            }
+        }
     }
 
     @Override
     public void onItemClick(AdapterView<?> arg0, View v, int position, long arg3) {
-    	switch(position) {
-	    	/*
-			 * Source Tag: update_status_tag
-			 * Update user's status by invoking the feed dialog
-			 * To post to a friend's wall, provide his uid in the 'to' parameter
-			 * Refer to https://developers.facebook.com/docs/reference/dialogs/feed/ for more info.
-			 */
-    	    case 0: {
-	    	    Bundle params = new Bundle();
-	    	    params.putString("caption", getString(R.string.app_name));
-	    	    params.putString("description", getString(R.string.app_desc));
-	    	    params.putString("picture", Utility.HACK_ICON_URL);
-	    	    params.putString("name", getString(R.string.app_action));
-	    	    
-	    	    Utility.mFacebook.dialog(Hackbook.this, "feed", params, new UpdateStatusListener());
-	    	    String access_token = Utility.mFacebook.getAccessToken();
-	    	    System.out.println(access_token);
-	    	    break;
-			}
-	    	
-			/*
-			 * Source Tag: app_requests
-			 * Send an app request to friends. If no friend is specified, the user will see a friend selector and will be able to select a maximum of 50 recipients.
-			 * To send request to specific friend, provide the uid in the 'to' parameter
-			 * Refer to https://developers.facebook.com/docs/reference/dialogs/requests/ for more info.
-			 */
-	    	case 1: {
-			    Bundle params = new Bundle();
-			    params.putString("message", getString(R.string.request_message));
-			    Utility.mFacebook.dialog(Hackbook.this, "apprequests", params, new AppRequestsListener());
-			    break;
-			}
-
-			/*
-			 * Source Tag: friends_tag
-			 * You can get friends using graph.facebook.com/me/friends, this returns the list sorted by UID
-			 * OR
-			 * using the friend table. With this you can sort the way you want it.
-			 * friend table - https://developers.facebook.com/docs/reference/fql/friend/
-			 * user table - https://developers.facebook.com/docs/reference/fql/user/ 
-			 */
-			case 2: {
-				if(!Utility.mFacebook.isSessionValid()) {
-					Util.showAlert(this, "Warning", "You must first log in.");
-				}
-				else {
-					dialog = ProgressDialog.show(Hackbook.this, "", getString(R.string.please_wait), true, true);
-	    			new AlertDialog.Builder(this)
-    	    	        .setTitle(R.string.Graph_FQL_title)
-    	    	        .setMessage(R.string.Graph_FQL_msg)
-    	    	        .setPositiveButton(R.string.graph_button, new DialogInterface.OnClickListener() {
-    	    	            @Override
-    	    	            public void onClick(DialogInterface dialog, int which) {
-    	    	            	graph_or_fql = "graph";
-    	    	            	Bundle params = new Bundle();
-    	    					params.putString("fields", "name, picture, location");
-    	    					Utility.mAsyncRunner.request("me/friends", params, new FriendsRequestListener());
-    	    	            }
-    	    	
-    	    	        })
-    	    	        .setNegativeButton(R.string.fql_button, new DialogInterface.OnClickListener() {
-    	    	            @Override
-    	    	            public void onClick(DialogInterface dialog, int which) {
-    	    	            	graph_or_fql = "fql";
-    	    	            	String query = "select name, current_location, uid, pic_square from user where uid in (select uid2 from friend where uid1=me()) order by name";
-    	    	            	Bundle params = new Bundle();
-    	    	            	params.putString("method", "fql.query");
-    	    	            	params.putString("query", query);
-    	    	            	Utility.mAsyncRunner.request(null, params, new FriendsRequestListener());
-    	    	            }
-    	    	
-    	    	        })
-    	    	        .setOnCancelListener(new DialogInterface.OnCancelListener() {
-    	    	            @Override
-    	    	            public void onCancel(DialogInterface d) {
-    	    	            	dialog.dismiss();
-    	    	            }
-    	    	        })
-	    	        .show();
-				}
-    			break;
-    		}
-			
-			/*
-			 * Source Tag: upload_photo
-			 * You can upload a photo from the media gallery or from a remote server
-			 * How to upload photo: https://developers.facebook.com/blog/post/498/
-			 */
-    		case 3: {
-    			if(!Utility.mFacebook.isSessionValid()) {
-					Util.showAlert(this, "Warning", "You must first log in.");
-				}
-				else {
-	    			dialog = ProgressDialog.show(Hackbook.this, "", getString(R.string.please_wait), true, true);
-	    			new AlertDialog.Builder(this)
-    	    	        .setTitle(R.string.gallery_remote_title)
-    	    	        .setMessage(R.string.gallery_remote_msg)
-    	    	        .setPositiveButton(R.string.gallery_button, new DialogInterface.OnClickListener() {
-    	    	            @Override
-    	    	            public void onClick(DialogInterface dialog, int which) {
-    	    	            	Intent intent = new Intent(Intent.ACTION_PICK, (MediaStore.Images.Media.EXTERNAL_CONTENT_URI));
-    	                        startActivityForResult(intent, PICK_EXISTING_PHOTO_RESULT_CODE);
-    	    	            }
-    	    	
-    	    	        })
-    	    	        .setNegativeButton(R.string.remote_button, new DialogInterface.OnClickListener() {
-    	    	            @Override
-    	    	            public void onClick(DialogInterface dialog, int which) {
-    	    	            	/*
-    	    	            	 * Source tag: upload_photo_tag
-    	    	            	 */
-    	    	            	Bundle params = new Bundle();
-    	    	            	params.putString("url", "http://www.facebook.com/images/devsite/iphone_connect_btn.jpg");
-    	    	                params.putString("caption", "FbAPIs Sample App photo upload");
-    	    	                Utility.mAsyncRunner.request("me/photos", params, "POST",
-    	    	                        new PhotoUploadListener(), null);
-    	    	            }
-    	    	
-    	    	        })
-    	    	        .setOnCancelListener(new DialogInterface.OnCancelListener() {
-    	    	            @Override
-    	    	            public void onCancel(DialogInterface d) {
-    	    	            	dialog.dismiss();
-    	    	            }
-    	    	        })
-    	    	        .show();
-				}
+        switch (position) {
+        /*
+         * Source Tag: update_status_tag Update user's status by invoking the
+         * feed dialog To post to a friend's wall, provide his uid in the 'to'
+         * parameter Refer to
+         * https://developers.facebook.com/docs/reference/dialogs/feed/ for more
+         * info.
+         */
+            case 0: {
+                Bundle params = new Bundle();
+                params.putString("caption", getString(R.string.app_name));
+                params.putString("description", getString(R.string.app_desc));
+                params.putString("picture", Utility.HACK_ICON_URL);
+                params.putString("name", getString(R.string.app_action));
+
+                Utility.mFacebook.dialog(Hackbook.this, "feed", params, new UpdateStatusListener());
+                String access_token = Utility.mFacebook.getAccessToken();
+                System.out.println(access_token);
+                break;
+            }
+
+            /*
+             * Source Tag: app_requests Send an app request to friends. If no
+             * friend is specified, the user will see a friend selector and will
+             * be able to select a maximum of 50 recipients. To send request to
+             * specific friend, provide the uid in the 'to' parameter Refer to
+             * https://developers.facebook.com/docs/reference/dialogs/requests/
+             * for more info.
+             */
+            case 1: {
+                Bundle params = new Bundle();
+                params.putString("message", getString(R.string.request_message));
+                Utility.mFacebook.dialog(Hackbook.this, "apprequests", params,
+                        new AppRequestsListener());
+                break;
+            }
+
+            /*
+             * Source Tag: friends_tag You can get friends using
+             * graph.facebook.com/me/friends, this returns the list sorted by
+             * UID OR using the friend table. With this you can sort the way you
+             * want it. 
+             * Friend table - https://developers.facebook.com/docs/reference/fql/friend/
+             * User table - https://developers.facebook.com/docs/reference/fql/user/
+             */
+            case 2: {
+                if (!Utility.mFacebook.isSessionValid()) {
+                    Util.showAlert(this, "Warning", "You must first log in.");
+                } else {
+                    dialog = ProgressDialog.show(Hackbook.this, "",
+                            getString(R.string.please_wait), true, true);
+                    new AlertDialog.Builder(this)
+                            .setTitle(R.string.Graph_FQL_title)
+                            .setMessage(R.string.Graph_FQL_msg)
+                            .setPositiveButton(R.string.graph_button,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            graph_or_fql = "graph";
+                                            Bundle params = new Bundle();
+                                            params.putString("fields", "name, picture, location");
+                                            Utility.mAsyncRunner.request("me/friends", params,
+                                                    new FriendsRequestListener());
+                                        }
+
+                                    })
+                            .setNegativeButton(R.string.fql_button,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            graph_or_fql = "fql";
+                                            String query = "select name, current_location, uid, pic_square from user where uid in (select uid2 from friend where uid1=me()) order by name";
+                                            Bundle params = new Bundle();
+                                            params.putString("method", "fql.query");
+                                            params.putString("query", query);
+                                            Utility.mAsyncRunner.request(null, params,
+                                                    new FriendsRequestListener());
+                                        }
+
+                                    }).setOnCancelListener(new DialogInterface.OnCancelListener() {
+                                @Override
+                                public void onCancel(DialogInterface d) {
+                                    dialog.dismiss();
+                                }
+                            }).show();
+                }
+                break;
+            }
+
+            /*
+             * Source Tag: upload_photo You can upload a photo from the media
+             * gallery or from a remote server How to upload photo:
+             * https://developers.facebook.com/blog/post/498/
+             */
+            case 3: {
+                if (!Utility.mFacebook.isSessionValid()) {
+                    Util.showAlert(this, "Warning", "You must first log in.");
+                } else {
+                    dialog = ProgressDialog.show(Hackbook.this, "",
+                            getString(R.string.please_wait), true, true);
+                    new AlertDialog.Builder(this)
+                            .setTitle(R.string.gallery_remote_title)
+                            .setMessage(R.string.gallery_remote_msg)
+                            .setPositiveButton(R.string.gallery_button,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            Intent intent = new Intent(Intent.ACTION_PICK,
+                                                    (MediaStore.Images.Media.EXTERNAL_CONTENT_URI));
+                                            startActivityForResult(intent,
+                                                    PICK_EXISTING_PHOTO_RESULT_CODE);
+                                        }
+
+                                    })
+                            .setNegativeButton(R.string.remote_button,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            /*
+                                             * Source tag: upload_photo_tag
+                                             */
+                                            Bundle params = new Bundle();
+                                            params.putString("url",
+                                                    "http://www.facebook.com/images/devsite/iphone_connect_btn.jpg");
+                                            params.putString("caption",
+                                                    "FbAPIs Sample App photo upload");
+                                            Utility.mAsyncRunner.request("me/photos", params,
+                                                    "POST", new PhotoUploadListener(), null);
+                                        }
+
+                                    }).setOnCancelListener(new DialogInterface.OnCancelListener() {
+                                @Override
+                                public void onCancel(DialogInterface d) {
+                                    dialog.dismiss();
+                                }
+                            }).show();
+                }
+                break;
+            }
+
+            /*
+             * User can check-in to a place, you require publish_checkins
+             * permission for that. You can use the default Times Square
+             * location or fetch user's current location. Get user's checkins:
+             * https://developers.facebook.com/docs/reference/api/checkin/
+             */
+            case 4: {
+                final Intent myIntent = new Intent(getApplicationContext(), Places.class);
+
+                new AlertDialog.Builder(this)
+                        .setTitle(R.string.get_location)
+                        .setMessage(R.string.get_default_or_new_location)
+                        .setPositiveButton(R.string.current_location_button,
+                                new DialogInterface.OnClickListener() {
+                                    @Override
+                                    public void onClick(DialogInterface dialog, int which) {
+                                        myIntent.putExtra("LOCATION", "current");
+                                        startActivity(myIntent);
+                                    }
+                                })
+                        .setNegativeButton(R.string.times_square_button,
+                                new DialogInterface.OnClickListener() {
+                                    @Override
+                                    public void onClick(DialogInterface dialog, int which) {
+                                        myIntent.putExtra("LOCATION", "times_square");
+                                        startActivity(myIntent);
+                                    }
+
+                                }).show();
+                break;
+            }
+
+            case 5: {
+                if (!Utility.mFacebook.isSessionValid()) {
+                    Util.showAlert(this, "Warning", "You must first log in.");
+                } else {
+                    new FQLQuery(Hackbook.this).show();
+                }
+                break;
+            }
+            /*
+             * This is advanced feature where you can request new permissions
+             * Browser user's graph, his fields and connections. This is similar
+             * to the www version:
+             * http://developers.facebook.com/tools/explorer/
+             */
+            case 6: {
+                Intent myIntent = new Intent(getApplicationContext(), GraphExplorer.class);
+                if (Utility.mFacebook.isSessionValid()) {
+                    Utility.objectID = "me";
+                }
+                startActivity(myIntent);
                 break;
-    		}
-    		
-    		/*
-			 * User can check-in to a place, you require publish_checkins permission for that.
-			 * You can use the default Times Square location or fetch user's current location
-			 * Get user's checkins - https://developers.facebook.com/docs/reference/api/checkin/
-			 */
-    		case 4: {
-    			final Intent myIntent = new Intent(getApplicationContext(), Places.class);
-                
-    			new AlertDialog.Builder(this)
-    	        .setTitle(R.string.get_location)
-    	        .setMessage(R.string.get_default_or_new_location)
-    	        .setPositiveButton(R.string.current_location_button, new DialogInterface.OnClickListener() {
-    	            @Override
-    	            public void onClick(DialogInterface dialog, int which) {
-    	            	myIntent.putExtra("LOCATION", "current");
-    	            	startActivity(myIntent);
-    	            }
-    	        })
-    	        .setNegativeButton(R.string.times_square_button, new DialogInterface.OnClickListener() {
-    	            @Override
-    	            public void onClick(DialogInterface dialog, int which) {
-    	            	myIntent.putExtra("LOCATION", "times_square");
-    	            	startActivity(myIntent);
-    	            }
-    	
-    	        })
-    	        .show();
-    			break;
-    		}
-    		
-    		case 5: {
-    			if(!Utility.mFacebook.isSessionValid()) {
-					Util.showAlert(this, "Warning", "You must first log in.");
-				}
-				else {
-	            	new FQLQuery(Hackbook.this).show();
-				}
-	            break;
-    		}
-    		/*
-			 * This is advanced feature where you can request new permissions
-			 * Browser user's graph, his fields and connections.
-			 * This is similar to the www version - http://developers.facebook.com/tools/explorer/
-			 */
-    		case 6: {
-    			Intent myIntent = new Intent(getApplicationContext(), GraphExplorer.class);
-    			if(Utility.mFacebook.isSessionValid()) {
-    				Utility.objectID = "me";
-    			}
-    			startActivity(myIntent);
-    			break;
-    		}
-    	}
+            }
+        }
     }
-    
+
     /*
      * callback for the feed dialog which updates the profile status
      */
     public class UpdateStatusListener extends BaseDialogListener {
+        @Override
         public void onComplete(Bundle values) {
             final String postId = values.getString("post_id");
             if (postId != null) {
-            	new UpdateStatusResultDialog(Hackbook.this, "Update Status executed", values).show();
+                new UpdateStatusResultDialog(Hackbook.this, "Update Status executed", values)
+                        .show();
             } else {
-                Toast toast = Toast.makeText(getApplicationContext(), "No wall post made", Toast.LENGTH_SHORT);
+                Toast toast = Toast.makeText(getApplicationContext(), "No wall post made",
+                        Toast.LENGTH_SHORT);
                 toast.show();
             }
         }
-        
+
+        @Override
         public void onFacebookError(FacebookError error) {
-            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(), Toast.LENGTH_SHORT).show();
-	    }
-        
+            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(),
+                    Toast.LENGTH_SHORT).show();
+        }
+
+        @Override
         public void onCancel() {
-            Toast toast = Toast.makeText(getApplicationContext(), "Update status cancelled", Toast.LENGTH_SHORT);
-	        toast.show();
+            Toast toast = Toast.makeText(getApplicationContext(), "Update status cancelled",
+                    Toast.LENGTH_SHORT);
+            toast.show();
         }
     }
-    
+
     /*
-     * callback for the apprequests dialog which sends an app request to user's friends.
+     * callback for the apprequests dialog which sends an app request to user's
+     * friends.
      */
     public class AppRequestsListener extends BaseDialogListener {
+        @Override
         public void onComplete(Bundle values) {
-            Toast toast = Toast.makeText(getApplicationContext(), "App request sent", Toast.LENGTH_SHORT);
+            Toast toast = Toast.makeText(getApplicationContext(), "App request sent",
+                    Toast.LENGTH_SHORT);
             toast.show();
         }
-        
+
+        @Override
         public void onFacebookError(FacebookError error) {
-            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(), Toast.LENGTH_SHORT).show();
-	    }
-        
+            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(),
+                    Toast.LENGTH_SHORT).show();
+        }
+
+        @Override
         public void onCancel() {
-            Toast toast = Toast.makeText(getApplicationContext(), "App request cancelled", Toast.LENGTH_SHORT);
+            Toast toast = Toast.makeText(getApplicationContext(), "App request cancelled",
+                    Toast.LENGTH_SHORT);
             toast.show();
         }
     }
-    
+
     /*
      * callback after friends are fetched via me/friends or fql query.
      */
-	public class FriendsRequestListener extends BaseRequestListener {
+    public class FriendsRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
             dialog.dismiss();
             Intent myIntent = new Intent(getApplicationContext(), FriendsList.class);
@@ -402,167 +436,180 @@ public void onComplete(final String response, final Object state) {
             myIntent.putExtra("METHOD", graph_or_fql);
             startActivity(myIntent);
         }
-        
-	    public void onFacebookError(FacebookError error) {
-	        dialog.dismiss();
-	        Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(), Toast.LENGTH_SHORT).show();
-	    }
+
+        public void onFacebookError(FacebookError error) {
+            dialog.dismiss();
+            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(),
+                    Toast.LENGTH_SHORT).show();
+        }
     }
-    
+
     /*
      * callback for the photo upload
      */
     public class PhotoUploadListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
             dialog.dismiss();
             mHandler.post(new Runnable() {
+                @Override
                 public void run() {
-                    new UploadPhotoResultDialog(Hackbook.this, "Upload Photo executed", response).show();
+                    new UploadPhotoResultDialog(Hackbook.this, "Upload Photo executed", response)
+                            .show();
                 }
             });
         }
-        
+
         public void onFacebookError(FacebookError error) {
             dialog.dismiss();
-            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(), Toast.LENGTH_LONG).show();
-	    }
+            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(),
+                    Toast.LENGTH_LONG).show();
+        }
     }
-    
+
     public class FQLRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
-        	mHandler.post(new Runnable() {
+            mHandler.post(new Runnable() {
+                @Override
                 public void run() {
-                	Toast.makeText(getApplicationContext(), "Response: " + response, Toast.LENGTH_LONG).show();
+                    Toast.makeText(getApplicationContext(), "Response: " + response,
+                            Toast.LENGTH_LONG).show();
                 }
-        	});
+            });
         }
-        
+
         public void onFacebookError(FacebookError error) {
-        	Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(), Toast.LENGTH_LONG).show();
-	    }
+            Toast.makeText(getApplicationContext(), "Facebook Error: " + error.getMessage(),
+                    Toast.LENGTH_LONG).show();
+        }
     }
-    
+
     /*
      * Callback for fetching current user's name, picture, uid.
      */
     public class UserRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
-        	JSONObject jsonObject;
-			try {
-				jsonObject = new JSONObject(response);
-				
-	        	final String picURL = jsonObject.getString("picture");
-	        	final String name = jsonObject.getString("name");
-	        	Utility.userUID = jsonObject.getString("id");
-	        	
-	        	mHandler.post(new Runnable() {
-	                public void run() {
-	                	mText.setText("Welcome " + name + "!");
-	    	        	mUserPic.setImageBitmap(Utility.getBitmap(picURL));
-	                }
-	            });
-	        	
-			} catch (JSONException e) {
-				// TODO Auto-generated catch block
-				e.printStackTrace();
-			}
+            JSONObject jsonObject;
+            try {
+                jsonObject = new JSONObject(response);
+
+                final String picURL = jsonObject.getString("picture");
+                final String name = jsonObject.getString("name");
+                Utility.userUID = jsonObject.getString("id");
+
+                mHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        mText.setText("Welcome " + name + "!");
+                        mUserPic.setImageBitmap(Utility.getBitmap(picURL));
+                    }
+                });
+
+            } catch (JSONException e) {
+                // TODO Auto-generated catch block
+                e.printStackTrace();
+            }
         }
 
     }
-    
+
     /*
-     * The Callback for notifying the application when authorization
-     *  succeeds or fails.
+     * The Callback for notifying the application when authorization succeeds or
+     * fails.
      */
-    
+
     public class FbAPIsAuthListener implements AuthListener {
 
+        @Override
         public void onAuthSucceed() {
-        	requestUserData();
+            requestUserData();
         }
 
+        @Override
         public void onAuthFail(String error) {
             mText.setText("Login Failed: " + error);
         }
     }
 
     /*
-     * The Callback for notifying the application when log out
-     *  starts and finishes.
+     * The Callback for notifying the application when log out starts and
+     * finishes.
      */
     public class FbAPIsLogoutListener implements LogoutListener {
+        @Override
         public void onLogoutBegin() {
             mText.setText("Logging out...");
         }
 
+        @Override
         public void onLogoutFinish() {
             mText.setText("You have logged out! ");
             mUserPic.setImageBitmap(null);
         }
     }
-    
+
     /*
      * Request user name, and picture to show on the main screen.
      */
     public void requestUserData() {
-    	mText.setText("Fetching user name, profile pic...");
-    	Bundle params = new Bundle();
-   		params.putString("fields", "name, picture");
-		Utility.mAsyncRunner.request("me", params, new UserRequestListener());
+        mText.setText("Fetching user name, profile pic...");
+        Bundle params = new Bundle();
+        params.putString("fields", "name, picture");
+        Utility.mAsyncRunner.request("me", params, new UserRequestListener());
     }
 
-    
     /**
      * Definition of the list adapter
      */
-	public class MainListAdapter extends BaseAdapter {
-		private LayoutInflater mInflater;
-		
-		public MainListAdapter() {
-			mInflater = LayoutInflater.from(Hackbook.this.getBaseContext());
-		}
-		
-		@Override
-		public int getCount() {
-			return main_items.length;
-		}
-		
-		@Override
-		public Object getItem(int position) {
-			return null;
-		}
-
-		@Override
-		public long getItemId(int position) {
-			return 0;
-		}
-		
-		@Override
-		public View getView(int position, View convertView, ViewGroup parent) {
-			
-			View hView = convertView;
-			if(convertView == null) {
-				hView = mInflater.inflate(R.layout.main_list_item, null);
-				ViewHolder holder = new ViewHolder();
-				holder.main_list_item = (TextView) hView.findViewById(R.id.main_api_item);
-				hView.setTag(holder);
-			}
-
-			ViewHolder holder = (ViewHolder) hView.getTag();
-	
-			holder.main_list_item.setText(main_items[position]);
-			
-			return hView;
-		}	
-		
-	}
-	
-	
-	class ViewHolder {
-		TextView main_list_item;
-	}
+    public class MainListAdapter extends BaseAdapter {
+        private LayoutInflater mInflater;
+
+        public MainListAdapter() {
+            mInflater = LayoutInflater.from(Hackbook.this.getBaseContext());
+        }
+
+        @Override
+        public int getCount() {
+            return main_items.length;
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+
+            View hView = convertView;
+            if (convertView == null) {
+                hView = mInflater.inflate(R.layout.main_list_item, null);
+                ViewHolder holder = new ViewHolder();
+                holder.main_list_item = (TextView) hView.findViewById(R.id.main_api_item);
+                hView.setTag(holder);
+            }
+
+            ViewHolder holder = (ViewHolder) hView.getTag();
+
+            holder.main_list_item.setText(main_items[position]);
+
+            return hView;
+        }
+
+    }
+
+    class ViewHolder {
+        TextView main_list_item;
+    }
 
 }
diff --git a/examples/Hackbook/src/com/facebook/android/IntentUriHandler.java b/examples/Hackbook/src/com/facebook/android/IntentUriHandler.java
index 6fd89cf36..ac55c2136 100644
--- a/examples/Hackbook/src/com/facebook/android/IntentUriHandler.java
+++ b/examples/Hackbook/src/com/facebook/android/IntentUriHandler.java
@@ -1,23 +1,22 @@
 package com.facebook.android;
 
-
 import android.app.Activity;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
 
 /**
- * A transient activity which handles fbgraphex: URIs and 
- * passes those to the GraphExplorer class
- * This is used to linkify the Object IDs in the graph api response
+ * A transient activity which handles fbgraphex: URIs and passes those to the
+ * GraphExplorer class This is used to linkify the Object IDs in the graph api
+ * response
  */
 public class IntentUriHandler extends Activity {
-	
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Intent incomingIntent = getIntent();
-        if(incomingIntent != null) {
+        if (incomingIntent != null) {
             Uri intentUri = incomingIntent.getData();
             if (intentUri != null) {
                 Utility.objectID = intentUri.getHost();
@@ -28,4 +27,4 @@ public void onCreate(Bundle savedInstanceState) {
             finish();
         }
     }
-}
\ No newline at end of file
+}
diff --git a/examples/Hackbook/src/com/facebook/android/LoginButton.java b/examples/Hackbook/src/com/facebook/android/LoginButton.java
index fdebe7af1..ae9b6bedb 100644
--- a/examples/Hackbook/src/com/facebook/android/LoginButton.java
+++ b/examples/Hackbook/src/com/facebook/android/LoginButton.java
@@ -4,7 +4,7 @@
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
- * 
+ *
  *    http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
@@ -16,11 +16,6 @@
 
 package com.facebook.android;
 
-import com.facebook.android.BaseRequestListener;
-import com.facebook.android.SessionEvents.AuthListener;
-import com.facebook.android.SessionEvents.LogoutListener;
-import com.facebook.android.Facebook.DialogListener;
-
 import android.app.Activity;
 import android.content.Context;
 import android.graphics.Color;
@@ -30,115 +25,127 @@
 import android.view.View;
 import android.widget.ImageButton;
 
+import com.facebook.android.Facebook.DialogListener;
+import com.facebook.android.SessionEvents.AuthListener;
+import com.facebook.android.SessionEvents.LogoutListener;
+
 public class LoginButton extends ImageButton {
-    
+
     private Facebook mFb;
     private Handler mHandler;
     private SessionListener mSessionListener = new SessionListener();
     private String[] mPermissions;
     private Activity mActivity;
     private int mActivityCode;
-    
+
     public LoginButton(Context context) {
         super(context);
     }
-    
+
     public LoginButton(Context context, AttributeSet attrs) {
         super(context, attrs);
     }
-    
+
     public LoginButton(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
     }
-    
+
     public void init(final Activity activity, final int activityCode, final Facebook fb) {
-    	init(activity, activityCode, fb, new String[] {});
+        init(activity, activityCode, fb, new String[] {});
     }
-    
-    public void init(final Activity activity, final int activityCode, 
-    					final Facebook fb, final String[] permissions) {
+
+    public void init(final Activity activity, final int activityCode, final Facebook fb,
+            final String[] permissions) {
         mActivity = activity;
         mActivityCode = activityCode;
         mFb = fb;
         mPermissions = permissions;
         mHandler = new Handler();
-        
+
         setBackgroundColor(Color.TRANSPARENT);
-        setImageResource(fb.isSessionValid() ?
-                         R.drawable.logout_button : 
-                         R.drawable.login_button);
+        setImageResource(fb.isSessionValid() ? R.drawable.logout_button : R.drawable.login_button);
         drawableStateChanged();
-        
+
         SessionEvents.addAuthListener(mSessionListener);
         SessionEvents.addLogoutListener(mSessionListener);
         setOnClickListener(new ButtonOnClickListener());
     }
-    
+
     private final class ButtonOnClickListener implements OnClickListener {
-    	/*
-		 * Source Tag: login_tag
-		 */
+        /*
+         * Source Tag: login_tag
+         */
+        @Override
         public void onClick(View arg0) {
             if (mFb.isSessionValid()) {
                 SessionEvents.onLogoutBegin();
                 AsyncFacebookRunner asyncRunner = new AsyncFacebookRunner(mFb);
                 asyncRunner.logout(getContext(), new LogoutRequestListener());
             } else {
-                mFb.authorize(mActivity, mPermissions, mActivityCode,
-                              new LoginDialogListener());
+                mFb.authorize(mActivity, mPermissions, mActivityCode, new LoginDialogListener());
             }
         }
     }
 
     private final class LoginDialogListener implements DialogListener {
+        @Override
         public void onComplete(Bundle values) {
             SessionEvents.onLoginSuccess();
         }
 
+        @Override
         public void onFacebookError(FacebookError error) {
             SessionEvents.onLoginError(error.getMessage());
         }
-        
+
+        @Override
         public void onError(DialogError error) {
             SessionEvents.onLoginError(error.getMessage());
         }
 
+        @Override
         public void onCancel() {
             SessionEvents.onLoginError("Action Canceled");
         }
     }
-    
+
     private class LogoutRequestListener extends BaseRequestListener {
+        @Override
         public void onComplete(String response, final Object state) {
             /*
-             * callback should be run in the original thread, 
-             * not the background thread
+             * callback should be run in the original thread, not the background
+             * thread
              */
             mHandler.post(new Runnable() {
+                @Override
                 public void run() {
                     SessionEvents.onLogoutFinish();
                 }
             });
         }
     }
-    
+
     private class SessionListener implements AuthListener, LogoutListener {
-        
+
+        @Override
         public void onAuthSucceed() {
             setImageResource(R.drawable.logout_button);
             SessionStore.save(mFb, getContext());
         }
 
+        @Override
         public void onAuthFail(String error) {
         }
-        
-        public void onLogoutBegin() {           
+
+        @Override
+        public void onLogoutBegin() {
         }
-        
+
+        @Override
         public void onLogoutFinish() {
             SessionStore.clear(getContext());
             setImageResource(R.drawable.login_button);
         }
     }
-    
+
 }
diff --git a/examples/Hackbook/src/com/facebook/android/PermissionsDialog.java b/examples/Hackbook/src/com/facebook/android/PermissionsDialog.java
index f9bc1cced..fa4edbbd8 100644
--- a/examples/Hackbook/src/com/facebook/android/PermissionsDialog.java
+++ b/examples/Hackbook/src/com/facebook/android/PermissionsDialog.java
@@ -2,8 +2,6 @@
 
 import java.util.Vector;
 
-import com.facebook.android.Facebook.DialogListener;
-
 import android.app.Activity;
 import android.app.Dialog;
 import android.graphics.Color;
@@ -17,45 +15,56 @@
 import android.widget.Button;
 import android.widget.CheckBox;
 import android.widget.CompoundButton;
-import android.widget.TextView;
 import android.widget.CompoundButton.OnCheckedChangeListener;
 import android.widget.ListView;
 import android.widget.TabHost;
 import android.widget.TabHost.TabSpec;
+import android.widget.TextView;
 import android.widget.Toast;
 
+import com.facebook.android.Facebook.DialogListener;
 
 public class PermissionsDialog extends Dialog {
 
-    private final int TAB_HEIGHT = 50;
-    
-	private Button mGetPermissions;
-	private TextView mPermissionDetails;
-	
-	private Activity activity;
-	
-	private ListView userPermissionsList, friendPermissionsList, extendedPermissionsList;
-	
-	private BaseAdapter userPermissionsAdapter, friendPermissionsAdapter, extendedPermissionAdapter;
-	
-	protected Vector<String> reqPermVector;
-	
-	String[] user_permissions= {"user_about_me", "user_activities", "user_birthday", "user_checkins", "user_education_history", "user_events", "user_groups", "user_hometown", "user_interests", "user_likes", 
-			"user_location", "user_notes", "user_online_presence", "user_photos", "user_photo_video_tags", "user_relationships", "user_relationship_details", "user_religion_politics", 
-			"user_status", "user_videos", "user_website", "user_work_history"};
-	
-	String[] friend_permissions={"friends_about_me", "friends_activities", "friends_birthday", "friends_checkins", "friends_education_history", "friends_events", 
-			"friends_groups", "friends_hometown", "friends_interests", "friends_likes",  "friends_location", "friends_notes",  "friends_online_presence", "friends_photos", 
-			"friends_photo_video_tags", "friends_relationships", "friends_relationship_details", "friends_religion_politics",
-			"friends_status", "friends_videos", "friends_website", "friends_work_history"};
-	
-	String[] extended_permissions={"ads_management", "create_event", "create_note", "email", "export_stream", "manage_friendlists", "manage_groups", "manage_pages", "offline_access", "publish_actions", "photo_upload", 
-			"publish_checkins", "publish_stream", "read_friendlists", "read_insights", "read_mailbox", "read_requests", "read_stream", "rsvp_event", "share_item",  "status_update", 
-			"sms", "video_upload", "xmpp_login"};
-	
+    private final static int TAB_HEIGHT = 50;
+
+    private Button mGetPermissions;
+    private TextView mPermissionDetails;
+
+    private Activity activity;
+
+    private ListView userPermissionsList, friendPermissionsList, extendedPermissionsList;
+
+    private BaseAdapter userPermissionsAdapter, friendPermissionsAdapter,
+            extendedPermissionAdapter;
+
+    protected Vector<String> reqPermVector;
+
+    String[] user_permissions = { "user_about_me", "user_activities", "user_birthday",
+            "user_checkins", "user_education_history", "user_events", "user_groups",
+            "user_hometown", "user_interests", "user_likes", "user_location", "user_notes",
+            "user_online_presence", "user_photos", "user_photo_video_tags", "user_relationships",
+            "user_relationship_details", "user_religion_politics", "user_status", "user_videos",
+            "user_website", "user_work_history" };
+
+    String[] friend_permissions = { "friends_about_me", "friends_activities", "friends_birthday",
+            "friends_checkins", "friends_education_history", "friends_events", "friends_groups",
+            "friends_hometown", "friends_interests", "friends_likes", "friends_location",
+            "friends_notes", "friends_online_presence", "friends_photos",
+            "friends_photo_video_tags", "friends_relationships", "friends_relationship_details",
+            "friends_religion_politics", "friends_status", "friends_videos", "friends_website",
+            "friends_work_history" };
+
+    String[] extended_permissions = { "ads_management", "create_event", "create_note", "email",
+            "export_stream", "manage_friendlists", "manage_groups", "manage_pages",
+            "offline_access", "publish_actions", "photo_upload", "publish_checkins",
+            "publish_stream", "read_friendlists", "read_insights", "read_mailbox", "read_requests",
+            "read_stream", "rsvp_event", "share_item", "status_update", "sms", "video_upload",
+            "xmpp_login" };
+
     public PermissionsDialog(Activity activity) {
         super(activity);
-    	this.activity = activity;
+        this.activity = activity;
         setTitle(activity.getString(R.string.permissions_request));
         reqPermVector = new Vector<String>();
     }
@@ -66,45 +75,44 @@ public PermissionsDialog(Activity activity) {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        
+
         setContentView(R.layout.permissions_list);
-        LayoutParams params = getWindow().getAttributes(); 
-        params.width = LayoutParams.FILL_PARENT; 
-        params.height = LayoutParams.FILL_PARENT; 
+        LayoutParams params = getWindow().getAttributes();
+        params.width = LayoutParams.FILL_PARENT;
+        params.height = LayoutParams.FILL_PARENT;
         getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
-        
+
         mPermissionDetails = (TextView) findViewById(R.id.permission_detail);
         mPermissionDetails.setMovementMethod(LinkMovementMethod.getInstance());
-        
-        userPermissionsList = (ListView)findViewById(R.id.user_permissions_list);
-        friendPermissionsList = (ListView)findViewById(R.id.friend_permissions_list);
-        extendedPermissionsList = (ListView)findViewById(R.id.extended_permissions_list);
 
-        
+        userPermissionsList = (ListView) findViewById(R.id.user_permissions_list);
+        friendPermissionsList = (ListView) findViewById(R.id.friend_permissions_list);
+        extendedPermissionsList = (ListView) findViewById(R.id.extended_permissions_list);
+
         userPermissionsAdapter = new PermissionsListAdapter(user_permissions);
         userPermissionsList.setAdapter(userPermissionsAdapter);
-        
+
         friendPermissionsAdapter = new PermissionsListAdapter(friend_permissions);
         friendPermissionsList.setAdapter(friendPermissionsAdapter);
-        
+
         extendedPermissionAdapter = new PermissionsListAdapter(extended_permissions);
         extendedPermissionsList.setAdapter(extendedPermissionAdapter);
-        
-        TabHost tabHost=(TabHost)findViewById(R.id.tabHost);
+
+        TabHost tabHost = (TabHost) findViewById(R.id.tabHost);
         tabHost.setup();
-        
-        TabSpec spec1=tabHost.newTabSpec("Tab 1");
+
+        TabSpec spec1 = tabHost.newTabSpec("Tab 1");
         spec1.setIndicator(activity.getString(R.string.user));
         spec1.setContent(R.id.user_permissions_list);
-        
-        TabSpec spec2=tabHost.newTabSpec("Tab 2");
+
+        TabSpec spec2 = tabHost.newTabSpec("Tab 2");
         spec2.setIndicator(activity.getString(R.string.friend));
         spec2.setContent(R.id.friend_permissions_list);
-        
-        TabSpec spec3=tabHost.newTabSpec("Tab 3");
+
+        TabSpec spec3 = tabHost.newTabSpec("Tab 3");
         spec3.setIndicator(activity.getString(R.string.extended));
         spec3.setContent(R.id.extended_permissions_list);
-        
+
         tabHost.addTab(spec1);
         tabHost.addTab(spec2);
         tabHost.addTab(spec3);
@@ -112,121 +120,132 @@ protected void onCreate(Bundle savedInstanceState) {
         tabHost.getTabWidget().getChildAt(0).getLayoutParams().height = TAB_HEIGHT;
         tabHost.getTabWidget().getChildAt(1).getLayoutParams().height = TAB_HEIGHT;
         tabHost.getTabWidget().getChildAt(2).getLayoutParams().height = TAB_HEIGHT;
-        
+
         mGetPermissions = (Button) findViewById(R.id.get_permissions_button);
-		
-		mGetPermissions.setOnClickListener(new View.OnClickListener() {
-        	public void onClick(View v) {
-        		/*
-        		 * Source Tag: perms_tag
-        		 * Call authorize to get the new permissions
-        		 */
-        		if(reqPermVector.isEmpty() && Utility.mFacebook.isSessionValid()) {
-        			Toast.makeText(activity.getBaseContext(), "No Permissions selected.", Toast.LENGTH_SHORT).show();
-        			PermissionsDialog.this.dismiss();
-        		} else {
-        			String[] permissions = (String [])reqPermVector.toArray(new String[0]);
-        			Utility.mFacebook.authorize(activity, permissions, new LoginDialogListener());
-        		}
-        	}
+
+        mGetPermissions.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                /*
+                 * Source Tag: perms_tag Call authorize to get the new
+                 * permissions
+                 */
+                if (reqPermVector.isEmpty() && Utility.mFacebook.isSessionValid()) {
+                    Toast.makeText(activity.getBaseContext(), "No Permissions selected.",
+                            Toast.LENGTH_SHORT).show();
+                    PermissionsDialog.this.dismiss();
+                } else {
+                    String[] permissions = reqPermVector.toArray(new String[0]);
+                    Utility.mFacebook.authorize(activity, permissions, new LoginDialogListener());
+                }
+            }
         });
     }
-    
+
     /*
      * Callback when user has authorized the app with the new permissions
      */
     private final class LoginDialogListener implements DialogListener {
+        @Override
         public void onComplete(Bundle values) {
-        	//Inform the parent loginlistener so it can update the user's profile pic and name on the home screen.
-        	SessionEvents.onLoginSuccess();
-        	
-            Toast.makeText(activity.getBaseContext(), "New Permissions granted.", Toast.LENGTH_SHORT).show();
+            // Inform the parent loginlistener so it can update the user's
+            // profile pic and name on the home screen.
+            SessionEvents.onLoginSuccess();
+
+            Toast.makeText(activity.getBaseContext(), "New Permissions granted.",
+                    Toast.LENGTH_SHORT).show();
             PermissionsDialog.this.dismiss();
         }
 
+        @Override
         public void onFacebookError(FacebookError error) {
-        	Toast.makeText(activity.getBaseContext(), "Facebook Error! No new permissions granted.", Toast.LENGTH_SHORT).show();
-        	PermissionsDialog.this.dismiss();
+            Toast.makeText(activity.getBaseContext(),
+                    "Facebook Error! No new permissions granted.", Toast.LENGTH_SHORT).show();
+            PermissionsDialog.this.dismiss();
         }
-        
+
+        @Override
         public void onError(DialogError error) {
-        	Toast.makeText(activity.getBaseContext(), "Error! No new permissions granted.", Toast.LENGTH_SHORT).show();
-        	PermissionsDialog.this.dismiss();
+            Toast.makeText(activity.getBaseContext(), "Error! No new permissions granted.",
+                    Toast.LENGTH_SHORT).show();
+            PermissionsDialog.this.dismiss();
         }
 
+        @Override
         public void onCancel() {
-        	Toast.makeText(activity.getBaseContext(), "Action cancelled, No new permissions granted.", Toast.LENGTH_SHORT).show();
-        	PermissionsDialog.this.dismiss();
+            Toast.makeText(activity.getBaseContext(),
+                    "Action cancelled, No new permissions granted.", Toast.LENGTH_SHORT).show();
+            PermissionsDialog.this.dismiss();
         }
     }
-    
+
     /**
      * Definition of the list adapter
      */
-	public class PermissionsListAdapter extends BaseAdapter {
-		private LayoutInflater mInflater;
-		String []permissions;
-		boolean []isChecked;
-		
-		public PermissionsListAdapter(String []permissions) {
-			this.permissions = permissions;
-			this.isChecked = new boolean[permissions.length];
-			mInflater = LayoutInflater.from(activity.getBaseContext());
-		}
-		
-		@Override
-		public int getCount() {
-			return permissions.length;
-		}
-		
-		@Override
-		public Object getItem(int position) {
-			return null;
-		}
-
-		@Override
-		public long getItemId(int position) {
-			return 0;
-		}
-		
-		@Override
-		public View getView(final int position, View convertView, ViewGroup parent) {
-			
-			View hView = convertView;
-			CheckBox checkbox;
-			
-			if(hView == null) {
-				hView = mInflater.inflate(R.layout.permission_item, null);
-				checkbox = (CheckBox) hView.findViewById(R.id.permission_checkbox);
-				hView.setTag(checkbox);
-			} else {
-				checkbox = (CheckBox) hView.getTag();
-			}
-			checkbox.setText(this.permissions[position]);
-			checkbox.setId(position);
-			if (Utility.currentPermissions.containsKey(this.permissions[position]) && 
-					Utility.currentPermissions.get(this.permissions[position]).equals("1")) {
-				checkbox.setTextColor(Color.GREEN);
-				checkbox.setChecked(true);
-				checkbox.setEnabled(false);
-				checkbox.setOnCheckedChangeListener(null);
-			} else {
-				checkbox.setTextColor(Color.WHITE);
-				checkbox.setChecked(this.isChecked[position]);
-				checkbox.setEnabled(true);
-				checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
-					@Override
-					public void onCheckedChanged(CompoundButton button, boolean checked) {
-						isChecked[button.getId()] = checked;
-						if(checked) {
-							reqPermVector.add(button.getText().toString());
-						} else if (reqPermVector.contains(button.getText())) {
-							reqPermVector.remove(button.getText());
-						}
-					}
-				});
-			}
-			return hView;
-		}
-	}
-}
\ No newline at end of file
+    public class PermissionsListAdapter extends BaseAdapter {
+        private LayoutInflater mInflater;
+        String[] permissions;
+        boolean[] isChecked;
+
+        public PermissionsListAdapter(String[] permissions) {
+            this.permissions = permissions;
+            this.isChecked = new boolean[permissions.length];
+            mInflater = LayoutInflater.from(activity.getBaseContext());
+        }
+
+        @Override
+        public int getCount() {
+            return permissions.length;
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(final int position, View convertView, ViewGroup parent) {
+
+            View hView = convertView;
+            CheckBox checkbox;
+
+            if (hView == null) {
+                hView = mInflater.inflate(R.layout.permission_item, null);
+                checkbox = (CheckBox) hView.findViewById(R.id.permission_checkbox);
+                hView.setTag(checkbox);
+            } else {
+                checkbox = (CheckBox) hView.getTag();
+            }
+            checkbox.setText(this.permissions[position]);
+            checkbox.setId(position);
+            if (Utility.currentPermissions.containsKey(this.permissions[position])
+                    && Utility.currentPermissions.get(this.permissions[position]).equals("1")) {
+                checkbox.setTextColor(Color.GREEN);
+                checkbox.setChecked(true);
+                checkbox.setEnabled(false);
+                checkbox.setOnCheckedChangeListener(null);
+            } else {
+                checkbox.setTextColor(Color.WHITE);
+                checkbox.setChecked(this.isChecked[position]);
+                checkbox.setEnabled(true);
+                checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
+                    @Override
+                    public void onCheckedChanged(CompoundButton button, boolean checked) {
+                        isChecked[button.getId()] = checked;
+                        if (checked) {
+                            reqPermVector.add(button.getText().toString());
+                        } else if (reqPermVector.contains(button.getText())) {
+                            reqPermVector.remove(button.getText());
+                        }
+                    }
+                });
+            }
+            return hView;
+        }
+    }
+}
diff --git a/examples/Hackbook/src/com/facebook/android/Places.java b/examples/Hackbook/src/com/facebook/android/Places.java
index 9e8f6adb9..4d5e42a4c 100644
--- a/examples/Hackbook/src/com/facebook/android/Places.java
+++ b/examples/Hackbook/src/com/facebook/android/Places.java
@@ -1,4 +1,6 @@
-package com.facebook.android;import org.json.JSONArray;
+package com.facebook.android;
+
+import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -20,325 +22,342 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemClickListener;
 import android.widget.BaseAdapter;
 import android.widget.ListView;
 import android.widget.TextView;
 import android.widget.Toast;
-import android.widget.AdapterView.OnItemClickListener;
 
-public class Places extends Activity implements OnItemClickListener 
-{
-	private Handler mHandler;
-	private JSONObject location;
-	
-	protected ListView placesList;
-	protected LocationManager lm;
-	protected MyLocationListener locationListener;
-	
-	protected static JSONArray jsonArray;
-	final double TIMES_SQUARE_LAT = 40.756;
-	final double TIMES_SQUARE_LON =  -73.987;
-	
-	protected ProgressDialog dialog;
-	
+public class Places extends Activity implements OnItemClickListener {
+    private Handler mHandler;
+    private JSONObject location;
+
+    protected ListView placesList;
+    protected LocationManager lm;
+    protected MyLocationListener locationListener;
+
+    protected static JSONArray jsonArray;
+    final static double TIMES_SQUARE_LAT = 40.756;
+    final static double TIMES_SQUARE_LON = -73.987;
+
+    protected ProgressDialog dialog;
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        
+
         mHandler = new Handler();
         location = new JSONObject();
-        
+
         setContentView(R.layout.places_list);
-        
+
         Bundle extras = getIntent().getExtras();
         String default_or_new = extras.getString("LOCATION");
-        if(default_or_new.equals("times_square")) {
-          try {
-            location.put("latitude", new Double(TIMES_SQUARE_LAT));
-	        	location.put("longitude", new Double(TIMES_SQUARE_LON));
-        	} catch (JSONException e) {}
-        	fetchPlaces();
+        if (default_or_new.equals("times_square")) {
+            try {
+                location.put("latitude", new Double(TIMES_SQUARE_LAT));
+                location.put("longitude", new Double(TIMES_SQUARE_LON));
+            } catch (JSONException e) {
+            }
+            fetchPlaces();
         } else {
-        	getLocation();
+            getLocation();
         }
     }
-    
+
     public void getLocation() {
         /*
-         * launch a new Thread to get new location 
+         * launch a new Thread to get new location
          */
         new Thread() {
+            @Override
             public void run() {
                 Looper.prepare();
-                dialog = ProgressDialog.show(Places.this, "", getString(R.string.fetching_location), false, true, new DialogInterface.OnCancelListener() {
-                    @Override
-                    public void onCancel(DialogInterface dialog) {
-                        showToast("No location fetched.");
-                    }
-                });
-                
+                dialog = ProgressDialog.show(Places.this, "",
+                        getString(R.string.fetching_location), false, true,
+                        new DialogInterface.OnCancelListener() {
+                            @Override
+                            public void onCancel(DialogInterface dialog) {
+                                showToast("No location fetched.");
+                            }
+                        });
+
                 if (lm == null) {
                     lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
                 }
-                
+
                 if (locationListener == null) {
                     locationListener = new MyLocationListener();
                 }
-                
+
                 Criteria criteria = new Criteria();
                 criteria.setAccuracy(Criteria.ACCURACY_COARSE);
                 String provider = lm.getBestProvider(criteria, true);
                 if (provider != null && lm.isProviderEnabled(provider)) {
-                    lm.requestLocationUpdates(provider, 1, 0, locationListener, Looper.getMainLooper());
+                    lm.requestLocationUpdates(provider, 1, 0, locationListener,
+                            Looper.getMainLooper());
                 } else {
                     /*
-                     * GPS not enabled, prompt user to enable GPS in the Location menu
+                     * GPS not enabled, prompt user to enable GPS in the
+                     * Location menu
                      */
                     new AlertDialog.Builder(Places.this)
-                      .setTitle(R.string.enable_gps_title)
-                      .setMessage(getString(R.string.enable_gps))
-                      .setPositiveButton(R.string.gps_settings, new DialogInterface.OnClickListener() {
-                          @Override
-                          public void onClick(DialogInterface dialog, int which) {
-                              startActivityForResult(new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS), 0);
-                          }
-                      })
-                      .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                dialog.dismiss();
-                                Places.this.finish();
-                            }
-                        })
-                      .show();
+                            .setTitle(R.string.enable_gps_title)
+                            .setMessage(getString(R.string.enable_gps))
+                            .setPositiveButton(R.string.gps_settings,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            startActivityForResult(
+                                                    new Intent(
+                                                            android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS),
+                                                    0);
+                                        }
+                                    })
+                            .setNegativeButton(R.string.cancel,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog, int which) {
+                                            dialog.dismiss();
+                                            Places.this.finish();
+                                        }
+                                    }).show();
                 }
                 Looper.loop();
-          }
+            }
         }.start();
     }
-    
+
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         /*
-         * User returning from the Location settings menu. try to fetch location again.
+         * User returning from the Location settings menu. try to fetch location
+         * again.
          */
         dialog.dismiss();
         getLocation();
     }
-    
+
     /*
-     * Fetch nearby places by providing the search type as 'place'
-     * within 1000 mtrs of the provided lat & lon
+     * Fetch nearby places by providing the search type as 'place' within 1000
+     * mtrs of the provided lat & lon
      */
     private void fetchPlaces() {
-    	if (!isFinishing()) {
-    		dialog = ProgressDialog.show(Places.this, "", getString(R.string.nearby_places), true, true, new DialogInterface.OnCancelListener() {
-				@Override
-				public void onCancel(DialogInterface dialog) {
-					showToast("No places fetched.");
-				}
-	        });
-    	}
-    	/*
-    	 * Source tag: fetch_places_tag
-    	 */
-		Bundle params = new Bundle();
-		params.putString("type", "place");
-		try {
-			params.putString("center", location.getString("latitude") + "," + location.getString("longitude") );
-		} catch (JSONException e) {
-			showToast("No places fetched.");
-			return;
-		}
-		params.putString("distance", "1000");
-		Utility.mAsyncRunner.request("search", params, new placesRequestListener());
+        if (!isFinishing()) {
+            dialog = ProgressDialog.show(Places.this, "", getString(R.string.nearby_places), true,
+                    true, new DialogInterface.OnCancelListener() {
+                        @Override
+                        public void onCancel(DialogInterface dialog) {
+                            showToast("No places fetched.");
+                        }
+                    });
+        }
+        /*
+         * Source tag: fetch_places_tag
+         */
+        Bundle params = new Bundle();
+        params.putString("type", "place");
+        try {
+            params.putString("center",
+                    location.getString("latitude") + "," + location.getString("longitude"));
+        } catch (JSONException e) {
+            showToast("No places fetched.");
+            return;
+        }
+        params.putString("distance", "1000");
+        Utility.mAsyncRunner.request("search", params, new placesRequestListener());
     }
-    
-	/*
-	 * Callback after places are fetched.
-	 */
-	public class placesRequestListener extends BaseRequestListener {
 
+    /*
+     * Callback after places are fetched.
+     */
+    public class placesRequestListener extends BaseRequestListener {
+
+        @Override
         public void onComplete(final String response, final Object state) {
             Log.d("Facebook-FbAPIs", "Got response: " + response);
             dialog.dismiss();
-            
+
             try {
-    			jsonArray = new JSONObject(response).getJSONArray("data");
-    			if(jsonArray == null) {
-    				showToast("Error: nearby places could not be fetched");
-    				return;
-    			}
-    		} catch (JSONException e) {
-    			showToast("Error: " + e.getMessage());
-    			return;
-    		}
-    		mHandler.post(new Runnable() {
+                jsonArray = new JSONObject(response).getJSONArray("data");
+                if (jsonArray == null) {
+                    showToast("Error: nearby places could not be fetched");
+                    return;
+                }
+            } catch (JSONException e) {
+                showToast("Error: " + e.getMessage());
+                return;
+            }
+            mHandler.post(new Runnable() {
+                @Override
                 public void run() {
-		            placesList = (ListView)findViewById(R.id.places_list);
-		            placesList.setOnItemClickListener(Places.this);
-		            placesList.setAdapter(new PlacesListAdapter(Places.this));
+                    placesList = (ListView) findViewById(R.id.places_list);
+                    placesList.setOnItemClickListener(Places.this);
+                    placesList.setAdapter(new PlacesListAdapter(Places.this));
                 }
-    		});
-            
+            });
+
+        }
+
+        public void onFacebookError(FacebookError error) {
+            dialog.dismiss();
+            showToast("Fetch Places Error: " + error.getMessage());
         }
-        
-	    public void onFacebookError(FacebookError error) {
-	    	dialog.dismiss();
-	    	showToast("Fetch Places Error: " + error.getMessage());
-	    }
     }
-    
+
     @Override
     public void onItemClick(AdapterView<?> arg0, View v, int position, long arg3) {
-    	if(!Utility.mFacebook.isSessionValid()) {
-			Util.showAlert(this, "Warning", "You must first log in.");
-		} else {
-	    	try {	
-  				final String message = "Check-in from the " + getString(R.string.app_name);
-  				final String name = jsonArray.getJSONObject(position).getString("name");
-  				final String placeID = jsonArray.getJSONObject(position).getString("id");
-  				new AlertDialog.Builder(this)
-    		        .setTitle(R.string.check_in_title)
-    		        .setMessage(String.format(getString(R.string.check_in_at), name))
-    		        .setPositiveButton(R.string.checkin, new DialogInterface.OnClickListener() {
-    		        	/*
-    	            	 * Source tag: check_in_tag
-    	            	 * Check-in user at the selected location posting to the me/checkins endpoint.
-    	            	 * More info here: https://developers.facebook.com/docs/reference/api/user/ - checkins
-    	            	 */
-    		            @Override
-    		            public void onClick(DialogInterface dialog, int which) {
-    		            	Bundle params = new Bundle();
-    		            	params.putString("place", placeID);
-    		            	params.putString("message", message);
-    		            	params.putString("coordinates", location.toString());
-    		            	Utility.mAsyncRunner.request("me/checkins", params, "POST", new placesCheckInListener(), null);
-    		            }
-    		        })
-    		        .setNegativeButton(R.string.cancel, null)
-    		        .show();
-			} catch (JSONException e) {
-				showToast("Error: " + e.getMessage());
-			}
-		}
+        if (!Utility.mFacebook.isSessionValid()) {
+            Util.showAlert(this, "Warning", "You must first log in.");
+        } else {
+            try {
+                final String message = "Check-in from the " + getString(R.string.app_name);
+                final String name = jsonArray.getJSONObject(position).getString("name");
+                final String placeID = jsonArray.getJSONObject(position).getString("id");
+                new AlertDialog.Builder(this).setTitle(R.string.check_in_title)
+                        .setMessage(String.format(getString(R.string.check_in_at), name))
+                        .setPositiveButton(R.string.checkin, new DialogInterface.OnClickListener() {
+                            /*
+                             * Source tag: check_in_tag Check-in user at the
+                             * selected location posting to the me/checkins
+                             * endpoint. More info here:
+                             * https://developers.facebook
+                             * .com/docs/reference/api/user/ - checkins
+                             */
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                Bundle params = new Bundle();
+                                params.putString("place", placeID);
+                                params.putString("message", message);
+                                params.putString("coordinates", location.toString());
+                                Utility.mAsyncRunner.request("me/checkins", params, "POST",
+                                        new placesCheckInListener(), null);
+                            }
+                        }).setNegativeButton(R.string.cancel, null).show();
+            } catch (JSONException e) {
+                showToast("Error: " + e.getMessage());
+            }
+        }
     }
-    
+
     public class placesCheckInListener extends BaseRequestListener {
+        @Override
         public void onComplete(final String response, final Object state) {
-        	showToast("API Response: " + response);
+            showToast("API Response: " + response);
         }
-        
+
         public void onFacebookError(FacebookError error) {
-	    	dialog.dismiss();
-	    	showToast("Check-in Error: " + error.getMessage());
-	    }
+            dialog.dismiss();
+            showToast("Check-in Error: " + error.getMessage());
+        }
     }
-    
+
     public void showToast(final String msg) {
-    	mHandler.post(new Runnable() {
+        mHandler.post(new Runnable() {
+            @Override
             public void run() {
-	            Toast toast = Toast.makeText(Places.this, msg, Toast.LENGTH_LONG);
-				toast.show();
+                Toast toast = Toast.makeText(Places.this, msg, Toast.LENGTH_LONG);
+                toast.show();
             }
-    	});
+        });
     }
 
     /**
      * Definition of the list adapter
      */
-	public class PlacesListAdapter extends BaseAdapter {
-		private LayoutInflater mInflater;
-		Places placesList;
-		
-		public PlacesListAdapter(Context context) {
-			mInflater = LayoutInflater.from(context);
-		}
-		
-		@Override
-		public int getCount() {
-			return jsonArray.length();
-		}
-		
-		@Override
-		public Object getItem(int position) {
-			return null;
-		}
-
-		@Override
-		public long getItemId(int position) {
-			return 0;
-		}
-		
-		@Override
-		public View getView(int position, View convertView, ViewGroup parent) {
-			JSONObject jsonObject = null;
-			try {
-				jsonObject = jsonArray.getJSONObject(position);
-			} catch (JSONException e1) {
-				// TODO Auto-generated catch block
-				e1.printStackTrace();
-			}
-			View hView = convertView;
-			if(convertView == null) {
-				hView = mInflater.inflate(R.layout.place_item, null);
-				ViewHolder holder = new ViewHolder();
-				holder.name = (TextView) hView.findViewById(R.id.place_name);
-				holder.location = (TextView) hView.findViewById(R.id.place_location);
-				hView.setTag(holder);
-			}
-
-			ViewHolder holder = (ViewHolder) hView.getTag();
-			try {
-				holder.name.setText(jsonObject.getString("name"));
-			} catch (JSONException e) {
-				holder.name.setText("");
-			}
-			try {
-				String location = jsonObject.getJSONObject("location").getString("street") +
-									", " + jsonObject.getJSONObject("location").getString("city") +
-									", " + jsonObject.getJSONObject("location").getString("state");
-				holder.location.setText(location);
-			} catch (JSONException e) {
-				holder.location.setText("");
-			}
-			return hView;
-		}	
-		
-	}
-	
-	
-	class ViewHolder {
-		TextView name;
-		TextView location;
-	}
-	
+    public class PlacesListAdapter extends BaseAdapter {
+        private LayoutInflater mInflater;
+        Places placesList;
+
+        public PlacesListAdapter(Context context) {
+            mInflater = LayoutInflater.from(context);
+        }
+
+        @Override
+        public int getCount() {
+            return jsonArray.length();
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            JSONObject jsonObject = null;
+            try {
+                jsonObject = jsonArray.getJSONObject(position);
+            } catch (JSONException e1) {
+                // TODO Auto-generated catch block
+                e1.printStackTrace();
+            }
+            View hView = convertView;
+            if (convertView == null) {
+                hView = mInflater.inflate(R.layout.place_item, null);
+                ViewHolder holder = new ViewHolder();
+                holder.name = (TextView) hView.findViewById(R.id.place_name);
+                holder.location = (TextView) hView.findViewById(R.id.place_location);
+                hView.setTag(holder);
+            }
+
+            ViewHolder holder = (ViewHolder) hView.getTag();
+            try {
+                holder.name.setText(jsonObject.getString("name"));
+            } catch (JSONException e) {
+                holder.name.setText("");
+            }
+            try {
+                String location = jsonObject.getJSONObject("location").getString("street") + ", "
+                        + jsonObject.getJSONObject("location").getString("city") + ", "
+                        + jsonObject.getJSONObject("location").getString("state");
+                holder.location.setText(location);
+            } catch (JSONException e) {
+                holder.location.setText("");
+            }
+            return hView;
+        }
+
+    }
+
+    class ViewHolder {
+        TextView name;
+        TextView location;
+    }
+
     class MyLocationListener implements LocationListener {
-    	
-    	@Override
-    	public void onLocationChanged(Location loc) {
-    		dialog.dismiss();
-    		if (loc != null) {
-    			try {
-    				location.put("latitude", new Double(loc.getLatitude()));
-    	        	location.put("longitude", new Double(loc.getLongitude()));
-    			} catch (JSONException e) {}
-    			showToast("Location acquired: " + String.valueOf(loc.getLatitude()) + " " + String.valueOf(loc.getLongitude()));
-    			lm.removeUpdates(this);
-    			fetchPlaces();
-    		}
-    	}
-
-		@Override
-		public void onProviderDisabled(String provider) {			
-		}
-
-		@Override
-		public void onProviderEnabled(String provider) {
-		}
-
-		@Override
-		public void onStatusChanged(String provider, int status, Bundle extras) {
-		}
+
+        @Override
+        public void onLocationChanged(Location loc) {
+            dialog.dismiss();
+            if (loc != null) {
+                try {
+                    location.put("latitude", new Double(loc.getLatitude()));
+                    location.put("longitude", new Double(loc.getLongitude()));
+                } catch (JSONException e) {
+                }
+                showToast("Location acquired: " + String.valueOf(loc.getLatitude()) + " "
+                        + String.valueOf(loc.getLongitude()));
+                lm.removeUpdates(this);
+                fetchPlaces();
+            }
+        }
+
+        @Override
+        public void onProviderDisabled(String provider) {
+        }
+
+        @Override
+        public void onProviderEnabled(String provider) {
+        }
+
+        @Override
+        public void onStatusChanged(String provider, int status, Bundle extras) {
+        }
     }
-}
\ No newline at end of file
+}
diff --git a/examples/Hackbook/src/com/facebook/android/SessionEvents.java b/examples/Hackbook/src/com/facebook/android/SessionEvents.java
index 1351f88e1..f32a11e07 100644
--- a/examples/Hackbook/src/com/facebook/android/SessionEvents.java
+++ b/examples/Hackbook/src/com/facebook/android/SessionEvents.java
@@ -4,7 +4,7 @@
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
- * 
+ *
  *    http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
@@ -20,10 +20,8 @@
 
 public class SessionEvents {
 
-    private static LinkedList<AuthListener> mAuthListeners = 
-        new LinkedList<AuthListener>();
-    private static LinkedList<LogoutListener> mLogoutListeners = 
-        new LinkedList<LogoutListener>();
+    private static LinkedList<AuthListener> mAuthListeners = new LinkedList<AuthListener>();
+    private static LinkedList<LogoutListener> mLogoutListeners = new LinkedList<LogoutListener>();
 
     /**
      * Associate the given listener with this Facebook object. The listener's
@@ -72,75 +70,69 @@ public static void addLogoutListener(LogoutListener listener) {
     public static void removeLogoutListener(LogoutListener listener) {
         mLogoutListeners.remove(listener);
     }
-    
+
     public static void onLoginSuccess() {
         for (AuthListener listener : mAuthListeners) {
             listener.onAuthSucceed();
         }
     }
-    
+
     public static void onLoginError(String error) {
         for (AuthListener listener : mAuthListeners) {
             listener.onAuthFail(error);
         }
     }
-    
+
     public static void onLogoutBegin() {
         for (LogoutListener l : mLogoutListeners) {
             l.onLogoutBegin();
         }
     }
-    
+
     public static void onLogoutFinish() {
         for (LogoutListener l : mLogoutListeners) {
             l.onLogoutFinish();
-        }   
+        }
     }
-    
+
     /**
      * Callback interface for authorization events.
-     *
      */
     public static interface AuthListener {
 
         /**
-         * Called when a auth flow completes successfully and a valid OAuth 
-         * Token was received.
-         * 
-         * Executed by the thread that initiated the authentication.
-         * 
-         * API requests can now be made.
+         * Called when a auth flow completes successfully and a valid OAuth
+         * Token was received. Executed by the thread that initiated the
+         * authentication. API requests can now be made.
          */
         public void onAuthSucceed();
 
         /**
-         * Called when a login completes unsuccessfully with an error. 
-         *  
+         * Called when a login completes unsuccessfully with an error.
+         * 
          * Executed by the thread that initiated the authentication.
          */
         public void onAuthFail(String error);
     }
-    
+
     /**
      * Callback interface for logout events.
-     *
-     */ 
+     */
     public static interface LogoutListener {
         /**
-         * Called when logout begins, before session is invalidated.  
-         * Last chance to make an API call.  
-         * 
-         * Executed by the thread that initiated the logout.
+         * Called when logout begins, before session is invalidated. Last chance
+         * to make an API call. Executed by the thread that initiated the
+         * logout.
          */
         public void onLogoutBegin();
 
         /**
-         * Called when the session information has been cleared.
-         * UI should be updated to reflect logged-out state.
+         * Called when the session information has been cleared. UI should be
+         * updated to reflect logged-out state.
          * 
          * Executed by the thread that initiated the logout.
          */
         public void onLogoutFinish();
     }
-    
+
 }
diff --git a/examples/Hackbook/src/com/facebook/android/SessionStore.java b/examples/Hackbook/src/com/facebook/android/SessionStore.java
index 6f3fb0489..1b97a53a6 100644
--- a/examples/Hackbook/src/com/facebook/android/SessionStore.java
+++ b/examples/Hackbook/src/com/facebook/android/SessionStore.java
@@ -16,21 +16,21 @@
 
 package com.facebook.android;
 
-import com.facebook.android.Facebook;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;
 
 public class SessionStore {
-    
+
     private static final String TOKEN = "access_token";
     private static final String EXPIRES = "expires_in";
     private static final String KEY = "facebook-session";
-    
+
     /*
-     * Save the access token and expiry date so you don't have to fetch it each time
-	 */
-    
+     * Save the access token and expiry date so you don't have to fetch it each
+     * time
+     */
+
     public static boolean save(Facebook session, Context context) {
         Editor editor = context.getSharedPreferences(KEY, Context.MODE_PRIVATE).edit();
         editor.putString(TOKEN, session.getAccessToken());
@@ -42,8 +42,7 @@ public static boolean save(Facebook session, Context context) {
      * Restore the access token and the expiry date from the shared preferences.
      */
     public static boolean restore(Facebook session, Context context) {
-        SharedPreferences savedSession =
-            context.getSharedPreferences(KEY, Context.MODE_PRIVATE);
+        SharedPreferences savedSession = context.getSharedPreferences(KEY, Context.MODE_PRIVATE);
         session.setAccessToken(savedSession.getString(TOKEN, null));
         session.setAccessExpires(savedSession.getLong(EXPIRES, 0));
         return session.isSessionValid();
@@ -54,5 +53,5 @@ public static void clear(Context context) {
         editor.clear();
         editor.commit();
     }
-    
+
 }
diff --git a/examples/Hackbook/src/com/facebook/android/SplashActivity.java b/examples/Hackbook/src/com/facebook/android/SplashActivity.java
index 640d27f68..d288acba7 100644
--- a/examples/Hackbook/src/com/facebook/android/SplashActivity.java
+++ b/examples/Hackbook/src/com/facebook/android/SplashActivity.java
@@ -3,29 +3,27 @@
 import java.util.Timer;
 import java.util.TimerTask;
 
-
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 
-public class SplashActivity extends Activity 
-{
-	private long splashDelay = 1500;
-	
-	@Override
-	public void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		setContentView(R.layout.splash);
-		TimerTask task = new TimerTask() {
-			@Override
-			public void run() {
-				finish();
-				Intent hackbookIntent = new Intent().setClass(SplashActivity.this, Hackbook.class);
-				startActivity(hackbookIntent);
-			}
-		};
-		
-		Timer timer = new Timer();
-		timer.schedule(task, splashDelay);
-	}
-}
\ No newline at end of file
+public class SplashActivity extends Activity {
+    private long splashDelay = 1500;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.splash);
+        TimerTask task = new TimerTask() {
+            @Override
+            public void run() {
+                finish();
+                Intent hackbookIntent = new Intent().setClass(SplashActivity.this, Hackbook.class);
+                startActivity(hackbookIntent);
+            }
+        };
+
+        Timer timer = new Timer();
+        timer.schedule(task, splashDelay);
+    }
+}
diff --git a/examples/Hackbook/src/com/facebook/android/UpdateStatusResultDialog.java b/examples/Hackbook/src/com/facebook/android/UpdateStatusResultDialog.java
index 7c3869f0b..463b42535 100644
--- a/examples/Hackbook/src/com/facebook/android/UpdateStatusResultDialog.java
+++ b/examples/Hackbook/src/com/facebook/android/UpdateStatusResultDialog.java
@@ -13,15 +13,14 @@
 import android.widget.Button;
 import android.widget.TextView;
 
-
 public class UpdateStatusResultDialog extends Dialog {
 
-	private Bundle values;
-	private TextView mOutput, mUsefulTip;
-	private Button mViewPostButton, mDeletePostButton;
-	private Activity activity;
-	private Handler mHandler;
-	
+    private Bundle values;
+    private TextView mOutput, mUsefulTip;
+    private Button mViewPostButton, mDeletePostButton;
+    private Activity activity;
+    private Handler mHandler;
+
     public UpdateStatusResultDialog(Activity activity, String title, Bundle values) {
         super(activity);
         this.activity = activity;
@@ -32,81 +31,86 @@ public UpdateStatusResultDialog(Activity activity, String title, Bundle values)
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        
+
         mHandler = new Handler();
-        
+
         setContentView(R.layout.update_post_response);
-        LayoutParams params = getWindow().getAttributes(); 
-        params.width = LayoutParams.FILL_PARENT; 
-        params.height = LayoutParams.FILL_PARENT; 
+        LayoutParams params = getWindow().getAttributes();
+        params.width = LayoutParams.FILL_PARENT;
+        params.height = LayoutParams.FILL_PARENT;
         getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
-        
+
         mOutput = (TextView) findViewById(R.id.apiOutput);
         mOutput.setText(values.toString());
-		
 
         mUsefulTip = (TextView) findViewById(R.id.usefulTip);
         mUsefulTip.setMovementMethod(LinkMovementMethod.getInstance());
         mViewPostButton = (Button) findViewById(R.id.view_post_button);
         mDeletePostButton = (Button) findViewById(R.id.delete_post_button);
         final String postId = values.getString("post_id");
-        
+
         mViewPostButton.setOnClickListener(new View.OnClickListener() {
-        	public void onClick(View v) {
-        		/*
-            	 * Source tag: view_post_tag
-            	 */
-        		Utility.mAsyncRunner.request(postId, new WallPostRequestListener());
-        	}
+            @Override
+            public void onClick(View v) {
+                /*
+                 * Source tag: view_post_tag
+                 */
+                Utility.mAsyncRunner.request(postId, new WallPostRequestListener());
+            }
         });
-		mDeletePostButton.setOnClickListener(new View.OnClickListener() {
+        mDeletePostButton.setOnClickListener(new View.OnClickListener() {
+            @Override
             public void onClick(View v) {
-            	/*
-            	 * Source tag: delete_post_tag
-            	 */
-                Utility.mAsyncRunner.request(postId, new Bundle(), "DELETE", new WallPostDeleteListener(), null);
+                /*
+                 * Source tag: delete_post_tag
+                 */
+                Utility.mAsyncRunner.request(postId, new Bundle(), "DELETE",
+                        new WallPostDeleteListener(), null);
             }
         });
     }
-    
+
     public class WallPostRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
-        	try {
-				JSONObject json = new JSONObject(response);
-				setText(json.toString(2));
-			} catch (JSONException e) {
-				setText(activity.getString(R.string.exception) + e.getMessage());
-			}
+            try {
+                JSONObject json = new JSONObject(response);
+                setText(json.toString(2));
+            } catch (JSONException e) {
+                setText(activity.getString(R.string.exception) + e.getMessage());
+            }
         }
-        
+
         public void onFacebookError(FacebookError error) {
-        	setText(activity.getString(R.string.facebook_error) + error.getMessage());
-	    }
+            setText(activity.getString(R.string.facebook_error) + error.getMessage());
+        }
     }
-    
+
     public class WallPostDeleteListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
             if (response.equals("true")) {
                 String message = "Wall Post deleted" + "\n";
                 message += "Api Response: " + response;
                 setText(message);
             } else {
-            	setText("wall post could not be deleted");
+                setText("wall post could not be deleted");
             }
         }
-        
+
         public void onFacebookError(FacebookError error) {
-        	setText(activity.getString(R.string.facebook_error) + error.getMessage());
-	    }
+            setText(activity.getString(R.string.facebook_error) + error.getMessage());
+        }
     }
-    
+
     public void setText(final String txt) {
-    	mHandler.post(new Runnable() {
+        mHandler.post(new Runnable() {
+            @Override
             public void run() {
-            	mOutput.setText(txt);
+                mOutput.setText(txt);
             }
         });
     }
-}
\ No newline at end of file
+}
diff --git a/examples/Hackbook/src/com/facebook/android/UploadPhotoResultDialog.java b/examples/Hackbook/src/com/facebook/android/UploadPhotoResultDialog.java
index cf9c9a9c2..173aae343 100644
--- a/examples/Hackbook/src/com/facebook/android/UploadPhotoResultDialog.java
+++ b/examples/Hackbook/src/com/facebook/android/UploadPhotoResultDialog.java
@@ -18,21 +18,20 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 
-
 public class UploadPhotoResultDialog extends Dialog {
 
-	private String response, photo_id;
-	private TextView mOutput, mUsefulTip;
-	private Button mViewPhotoButton, mTagPhotoButton;
-	private ImageView mUploadedPhoto;
-	private Activity activity;
-	private ProgressDialog dialog;
-	private boolean hidePhoto = false;
-	private Handler mHandler;
-	
+    private String response, photo_id;
+    private TextView mOutput, mUsefulTip;
+    private Button mViewPhotoButton, mTagPhotoButton;
+    private ImageView mUploadedPhoto;
+    private Activity activity;
+    private ProgressDialog dialog;
+    private boolean hidePhoto = false;
+    private Handler mHandler;
+
     public UploadPhotoResultDialog(Activity activity, String title, String response) {
         super(activity);
-    	this.activity = activity;
+        this.activity = activity;
         this.response = response;
         setTitle(title);
     }
@@ -41,135 +40,146 @@ public UploadPhotoResultDialog(Activity activity, String title, String response)
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mHandler = new Handler();
-        
+
         setContentView(R.layout.upload_photo_response);
-        LayoutParams params = getWindow().getAttributes(); 
-        params.width = LayoutParams.FILL_PARENT; 
-        params.height = LayoutParams.FILL_PARENT; 
+        LayoutParams params = getWindow().getAttributes();
+        params.width = LayoutParams.FILL_PARENT;
+        params.height = LayoutParams.FILL_PARENT;
         getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
-        
+
         mOutput = (TextView) findViewById(R.id.apiOutput);
         mUsefulTip = (TextView) findViewById(R.id.usefulTip);
         mViewPhotoButton = (Button) findViewById(R.id.view_photo_button);
         mTagPhotoButton = (Button) findViewById(R.id.tag_photo_button);
         mUploadedPhoto = (ImageView) findViewById(R.id.uploadedPhoto);
-		
+
         JSONObject json;
         try {
             json = Util.parseJson(response);
             final String photo_id = json.getString("id");
             this.photo_id = photo_id;
-            
+
             mOutput.setText(json.toString(2));
             mUsefulTip.setText(activity.getString(R.string.photo_tip));
             Linkify.addLinks(mUsefulTip, Linkify.WEB_URLS);
-            
+
             mViewPhotoButton.setOnClickListener(new View.OnClickListener() {
+                @Override
                 public void onClick(View v) {
-                    if(hidePhoto) {
+                    if (hidePhoto) {
                         mViewPhotoButton.setText(R.string.view_photo);
                         hidePhoto = false;
                         mUploadedPhoto.setImageBitmap(null);
-	        		} else {
-	        			hidePhoto = true;
-	        			mViewPhotoButton.setText(R.string.hide_photo);
-	        			/*
-		            	 * Source tag: view_photo_tag
-		            	 */
-		        		Bundle params = new Bundle();
-		        		params.putString("fields", "picture");
-		        		dialog = ProgressDialog.show(activity, "", activity.getString(R.string.please_wait), true, true);
-		        		dialog.show();
-		        		Utility.mAsyncRunner.request(photo_id, params, new ViewPhotoRequestListener());
-	        		}
-	        	}
-	        });
-			mTagPhotoButton.setOnClickListener(new View.OnClickListener() {
-	            public void onClick(View v) {
-	            	/*
-	            	 * Source tag: tag_photo_tag
-	            	 */
-	            	setTag();
-	            }
-	        });
-		} catch (JSONException e) {
-			setText(activity.getString(R.string.exception) + e.getMessage());
-		} catch (FacebookError e) {
-			setText(activity.getString(R.string.facebook_error) + e.getMessage());
-		}
+                    } else {
+                        hidePhoto = true;
+                        mViewPhotoButton.setText(R.string.hide_photo);
+                        /*
+                         * Source tag: view_photo_tag
+                         */
+                        Bundle params = new Bundle();
+                        params.putString("fields", "picture");
+                        dialog = ProgressDialog.show(activity, "",
+                                activity.getString(R.string.please_wait), true, true);
+                        dialog.show();
+                        Utility.mAsyncRunner.request(photo_id, params,
+                                new ViewPhotoRequestListener());
+                    }
+                }
+            });
+            mTagPhotoButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    /*
+                     * Source tag: tag_photo_tag
+                     */
+                    setTag();
+                }
+            });
+        } catch (JSONException e) {
+            setText(activity.getString(R.string.exception) + e.getMessage());
+        } catch (FacebookError e) {
+            setText(activity.getString(R.string.facebook_error) + e.getMessage());
+        }
     }
-    
+
     public void setTag() {
-    	String relativePath = photo_id +"/tags/" + Utility.userUID;
-    	Bundle params = new Bundle();
-    	params.putString("x", "5");
-    	params.putString("y", "5");
-        Utility.mAsyncRunner.request(relativePath, params, "POST", new TagPhotoRequestListener(), null);
+        String relativePath = photo_id + "/tags/" + Utility.userUID;
+        Bundle params = new Bundle();
+        params.putString("x", "5");
+        params.putString("y", "5");
+        Utility.mAsyncRunner.request(relativePath, params, "POST", new TagPhotoRequestListener(),
+                null);
     }
-    
+
     public class ViewPhotoRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
-        	try {
-        		JSONObject json = Util.parseJson(response);
- 				final String pictureURL = json.getString("picture");
- 				if(TextUtils.isEmpty(pictureURL)) {
- 					setText("Error getting \'picture\' field of the photo");
- 				} else {
- 					mHandler.post(new Runnable() {
- 			            public void run() {
- 			            	new FetchImage().execute(pictureURL);
- 			            }
- 			        });
- 				}
-             } catch (JSONException e) {
-            	 dialog.dismiss();
-            	 setText(activity.getString(R.string.exception) + e.getMessage());
-             } catch (FacebookError e) {
-            	 dialog.dismiss();
-            	 setText(activity.getString(R.string.facebook_error) + e.getMessage());
-             }
+            try {
+                JSONObject json = Util.parseJson(response);
+                final String pictureURL = json.getString("picture");
+                if (TextUtils.isEmpty(pictureURL)) {
+                    setText("Error getting \'picture\' field of the photo");
+                } else {
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            new FetchImage().execute(pictureURL);
+                        }
+                    });
+                }
+            } catch (JSONException e) {
+                dialog.dismiss();
+                setText(activity.getString(R.string.exception) + e.getMessage());
+            } catch (FacebookError e) {
+                dialog.dismiss();
+                setText(activity.getString(R.string.facebook_error) + e.getMessage());
+            }
         }
-        
+
         public void onFacebookError(FacebookError error) {
-        	dialog.dismiss();
-        	setText(activity.getString(R.string.facebook_error) + error.getMessage());
-	    }
+            dialog.dismiss();
+            setText(activity.getString(R.string.facebook_error) + error.getMessage());
+        }
     }
-    
+
     public class TagPhotoRequestListener extends BaseRequestListener {
 
+        @Override
         public void onComplete(final String response, final Object state) {
             if (response.equals("true")) {
                 String message = "User tagged in photo at (5, 5)" + "\n";
                 message += "Api Response: " + response;
                 setText(message);
             } else {
-            	setText("User could not be tagged.");
+                setText("User could not be tagged.");
             }
         }
-        
+
         public void onFacebookError(FacebookError error) {
-        	setText(activity.getString(R.string.facebook_error) + error.getMessage());
-	    }
+            setText(activity.getString(R.string.facebook_error) + error.getMessage());
+        }
     }
-    
+
     public void setText(final String txt) {
         mHandler.post(new Runnable() {
+            @Override
             public void run() {
                 mOutput.setText(txt);
             }
         });
     }
-    
+
     private class FetchImage extends AsyncTask<String, Void, Bitmap> {
-	     protected Bitmap doInBackground(String... urls) {
-	         return Utility.getBitmap(urls[0]);
-	     }
-
-	     protected void onPostExecute(Bitmap result) {
-	    	 dialog.dismiss();
-	    	 mUploadedPhoto.setImageBitmap(result);
-	     }
-	}
-}
\ No newline at end of file
+        @Override
+        protected Bitmap doInBackground(String... urls) {
+            return Utility.getBitmap(urls[0]);
+        }
+
+        @Override
+        protected void onPostExecute(Bitmap result) {
+            dialog.dismiss();
+            mUploadedPhoto.setImageBitmap(result);
+        }
+    }
+}
diff --git a/examples/Hackbook/src/com/facebook/android/Utility.java b/examples/Hackbook/src/com/facebook/android/Utility.java
index 0c974caaf..8f13d2379 100644
--- a/examples/Hackbook/src/com/facebook/android/Utility.java
+++ b/examples/Hackbook/src/com/facebook/android/Utility.java
@@ -11,7 +11,6 @@
 
 import org.json.JSONObject;
 
-
 import android.app.Application;
 import android.content.Context;
 import android.database.Cursor;
@@ -24,7 +23,7 @@
 
 public class Utility extends Application {
 
-	public static Facebook mFacebook;
+    public static Facebook mFacebook;
     public static AsyncFacebookRunner mAsyncRunner;
     public static JSONObject mFriendsList;
     public static String userUID = null;
@@ -32,31 +31,31 @@
     public static FriendsGetProfilePics model;
     public static AndroidHttpClient httpclient = null;
     public static Hashtable<String, String> currentPermissions = new Hashtable<String, String>();
-    
+
     private static int MAX_IMAGE_DIMENSION = 720;
     public static final String HACK_ICON_URL = "http://www.facebookmobileweb.com/hackbook/img/facebook_icon_large.png";
-    
+
     public static Bitmap getBitmap(String url) {
         Bitmap bm = null;
-        try { 			
-            URL aURL = new URL(url); 
-	        URLConnection conn = aURL.openConnection(); 
-	        conn.connect(); 
-	        InputStream is = conn.getInputStream(); 
-	        BufferedInputStream bis = new BufferedInputStream(is); 
-	        bm = BitmapFactory.decodeStream(new FlushedInputStream(is));
-	        bis.close(); 
-	        is.close();
-	     } catch (Exception e) {
-	    	e.printStackTrace();
-	     } finally {
-	         if (httpclient != null) {
-	    	   httpclient.close();
-	    	 }
-	     }
-	     return bm;
-	}
-    
+        try {
+            URL aURL = new URL(url);
+            URLConnection conn = aURL.openConnection();
+            conn.connect();
+            InputStream is = conn.getInputStream();
+            BufferedInputStream bis = new BufferedInputStream(is);
+            bm = BitmapFactory.decodeStream(new FlushedInputStream(is));
+            bis.close();
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (httpclient != null) {
+                httpclient.close();
+            }
+        }
+        return bm;
+    }
+
     static class FlushedInputStream extends FilterInputStream {
         public FlushedInputStream(InputStream inputStream) {
             super(inputStream);
@@ -68,19 +67,19 @@ public long skip(long n) throws IOException {
             while (totalBytesSkipped < n) {
                 long bytesSkipped = in.skip(n - totalBytesSkipped);
                 if (bytesSkipped == 0L) {
-                      int b = read();
-                      if (b < 0) {
-                          break;  // we reached EOF
-                      } else {
-                          bytesSkipped = 1; // we read one byte
-                      }
-               }
+                    int b = read();
+                    if (b < 0) {
+                        break; // we reached EOF
+                    } else {
+                        bytesSkipped = 1; // we read one byte
+                    }
+                }
                 totalBytesSkipped += bytesSkipped;
             }
             return totalBytesSkipped;
         }
     }
-    
+
     public static byte[] scaleImage(Context context, Uri photoUri) throws IOException {
         InputStream is = context.getContentResolver().openInputStream(photoUri);
         BitmapFactory.Options dbo = new BitmapFactory.Options();
@@ -102,8 +101,8 @@ public long skip(long n) throws IOException {
         Bitmap srcBitmap;
         is = context.getContentResolver().openInputStream(photoUri);
         if (rotatedWidth > MAX_IMAGE_DIMENSION || rotatedHeight > MAX_IMAGE_DIMENSION) {
-            float widthRatio = ((float)rotatedWidth) / ((float)MAX_IMAGE_DIMENSION);
-            float heightRatio = ((float)rotatedHeight) / ((float)MAX_IMAGE_DIMENSION);
+            float widthRatio = ((float) rotatedWidth) / ((float) MAX_IMAGE_DIMENSION);
+            float heightRatio = ((float) rotatedHeight) / ((float) MAX_IMAGE_DIMENSION);
             float maxRatio = Math.max(widthRatio, heightRatio);
 
             // Create the bitmap from file
@@ -115,39 +114,40 @@ public long skip(long n) throws IOException {
         }
         is.close();
 
-        /* if the orientation is not 0 (or -1, which means we don't know), we
-         * have to do a rotation. */
+        /*
+         * if the orientation is not 0 (or -1, which means we don't know), we
+         * have to do a rotation.
+         */
         if (orientation > 0) {
             Matrix matrix = new Matrix();
             matrix.postRotate(orientation);
 
-            srcBitmap = Bitmap.createBitmap(srcBitmap, 0, 0,
-                    srcBitmap.getWidth(), srcBitmap.getHeight(), matrix, true);
+            srcBitmap = Bitmap.createBitmap(srcBitmap, 0, 0, srcBitmap.getWidth(),
+                    srcBitmap.getHeight(), matrix, true);
         }
-        
+
         String type = context.getContentResolver().getType(photoUri);
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
-        if(type.equals("image/png")) {
-        	srcBitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);
-        } else if(type.equals("image/jpg") || type.equals("image/jpeg")) {
-        	srcBitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);
+        if (type.equals("image/png")) {
+            srcBitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);
+        } else if (type.equals("image/jpg") || type.equals("image/jpeg")) {
+            srcBitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);
         }
         byte[] bMapArray = baos.toByteArray();
         baos.close();
         return bMapArray;
     }
-    
+
     public static int getOrientation(Context context, Uri photoUri) {
-            /* it's on the external media. */
-            Cursor cursor = context.getContentResolver().query(photoUri,
-                    new String[]{MediaStore.Images.ImageColumns.ORIENTATION},
-                    null, null, null);
+        /* it's on the external media. */
+        Cursor cursor = context.getContentResolver().query(photoUri,
+                new String[] { MediaStore.Images.ImageColumns.ORIENTATION }, null, null, null);
 
-            if (cursor.getCount() != 1) {
-                return -1;
-            }
+        if (cursor.getCount() != 1) {
+            return -1;
+        }
 
-            cursor.moveToFirst();
-            return cursor.getInt(0);
+        cursor.moveToFirst();
+        return cursor.getInt(0);
     }
-}
\ No newline at end of file
+}
diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index cbba479dc..71ec60654 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -187,8 +187,8 @@ public void authorize(Activity activity, String[] permissions,
 
         // Prefer single sign-on, where available.
         if (activityCode >= 0) {
-            singleSignOnStarted = startSingleSignOn(activity, mAppId,
-                    permissions, activityCode);
+			// singleSignOnStarted = startSingleSignOn(activity, mAppId,
+			// permissions, activityCode);
         }
         // Otherwise fall back to traditional dialog.
         if (!singleSignOnStarted) {
@@ -659,8 +659,7 @@ public long getAccessExpires() {
     /**
      * Set the OAuth 2.0 access token for API access.
      *
-     * @param token
-     *            - access token
+     * @param token - access token
      */
     public void setAccessToken(String token) {
         mAccessToken = token;
@@ -670,23 +669,25 @@ public void setAccessToken(String token) {
      * Set the current session's expiration time (in milliseconds since Unix
      * epoch), or 0 if the session doesn't expire.
      *
-     * @param time
-     *            - timestamp in milliseconds
+     * @param time - timestamp in milliseconds
      */
     public void setAccessExpires(long time) {
         mAccessExpires = time;
     }
 
     /**
-     * Set the current session's duration (in seconds since Unix epoch).
+     * Set the current session's duration (in seconds since Unix epoch), or "0"
+     * if session doesn't expire.
      *
      * @param expiresIn
-     *            - duration in seconds
+     *            - duration in seconds (or 0 if the session doesn't expire)
      */
     public void setAccessExpiresIn(String expiresIn) {
-        if (expiresIn != null && !expiresIn.equals("0")) {
-            setAccessExpires(System.currentTimeMillis()
-                    + Integer.parseInt(expiresIn) * 1000);
+        if (expiresIn != null) {
+            long expires = expiresIn.equals("0")
+                    ? 0
+                    : System.currentTimeMillis() + Long.parseLong(expiresIn) * 1000L;
+            setAccessExpires(expires);
         }
     }
 
