diff --git a/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java b/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java
index c60845786..b4960065d 100644
--- a/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java
+++ b/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java
@@ -14,8 +14,8 @@
 import org.json.JSONObject;
 import org.json.JSONArray;
 
-import java.util.Map;
-import java.util.TreeMap;
+import java.util.List;
+import java.util.ArrayList;
 
 import com.google.android.vending.expansion.downloader.*;
 
@@ -27,21 +27,29 @@
     
 	private WebView FullScreenWebView;
 	
-	class BadgeView
+	class TabView
 	{
-		public RelativeLayout Layout = null;
-		public ImageView Image = null;
-		public TextView Text = null;
+		public String Url = null;
+		public String Image = null;
+		public String ImageSelected = null;
+		public ImageButton TabImage = null;
+		public int BadgeId = -1;
+		public RelativeLayout BadgeLayout = null;
+		public TextView BadgeText = null;
 		
-		public BadgeView( RelativeLayout layout, ImageView image, TextView text )
+		public TabView( String url, String image, String imageSelected, ImageButton tabImage, int badgeId, RelativeLayout badgeLayout, TextView badgeText )
 		{
-			this.Layout = layout;
+			this.Url = url;
 			this.Image = image;
-			this.Text = text;
+			this.ImageSelected = imageSelected;
+			this.TabImage = tabImage;
+			this.BadgeId = badgeId;
+			this.BadgeLayout = badgeLayout;
+			this.BadgeText = badgeText;
 		}
 	}
 	
-	private Map<Integer, BadgeView> Badges = new TreeMap<Integer, BadgeView>();
+	private List<TabView> Tabs = new ArrayList<TabView>();
 	
 	
 	private class InternalWebViewClient extends WebViewClient {
@@ -88,30 +96,52 @@ public void close()
 	private void updateBadge( int id, final String value )
 	{
 		Log.d( TAG, "FullScreenWebViewActivity updateBadge : id = " + id + " value = " + value );
-    	if( this.Badges.containsKey( id ) == true )
-    	{
-    		final BadgeView badge = this.Badges.get( id );
-    		badge.Layout.post( new Runnable()
-    		{
-    			public void run()
-    			{
-    	    		if( ( value != null ) && ( value.length() > 0 ) )
-    	    		{
-    	    			badge.Text.setText( value );
-    	    			badge.Layout.setVisibility(View.VISIBLE);
-    	    		}
-    	    		else
-    	    		{
-    	    			badge.Text.setText( "" );
-    	    			badge.Layout.setVisibility(View.INVISIBLE);
-    	    		}
-    			}
-    		});
-    		
-    	}
+		for( final TabView tab: this.Tabs) 
+		{
+			if( tab.BadgeId == id )
+			{
+				tab.BadgeLayout.post( new Runnable()
+	    		{
+	    			public void run()
+	    			{
+	    	    		if( ( value != null ) && ( value.length() > 0 ) )
+	    	    		{
+	    	    			tab.BadgeText.setText( value );
+	    	    			tab.BadgeLayout.setVisibility(View.VISIBLE);
+	    	    		}
+	    	    		else
+	    	    		{
+	    	    			tab.BadgeText.setText( "" );
+	    	    			tab.BadgeLayout.setVisibility(View.INVISIBLE);
+	    	    		}
+	    			}
+	    		});
+				break;
+			}
+		}
 	}
 	
-	private RelativeLayout CreateURLTab( final String url, String image, int backgroundColour, int badgeId, String badgeImage, int badgeLeftMargin, int badgeTopMargin )
+	private void loadPage( String url )
+	{
+		Log.d( TAG, "FullScreenWebViewActivity Switching to '" + url + "' : Success" );
+		this.FullScreenWebView.loadUrl( url );
+		
+		//Update the correct selected items
+		for( TabView tab: this.Tabs) 
+		{
+			String resourceName = tab.Image;
+			boolean hasSelected = ( tab.ImageSelected != null ) && ( tab.ImageSelected.length() > 0 );
+			if( ( tab.Url.equals( url ) == true ) && ( hasSelected == true ) )
+			{
+				resourceName = tab.ImageSelected;
+			}
+			
+			Log.d( TAG, "FullScreenWebViewActivity setting '" + tab.Url + "' to " + resourceName );
+			tab.TabImage.setImageResource( Helpers.getIdResource(this, resourceName) );
+		}
+	}
+	
+	private RelativeLayout CreateURLTab( final String url, String image, String imageSelected, int backgroundColour, int badgeId, String badgeImage, int badgeLeftMargin, int badgeTopMargin )
 	{
 		RelativeLayout tabLayout = new RelativeLayout( this );
 		
@@ -127,15 +157,18 @@ private RelativeLayout CreateURLTab( final String url, String image, int backgro
 				public void onClick(View arg0)
 				{
 					Log.d( TAG, "FullScreenWebViewActivity Switching to '" + url + "' : Success" );
-					WebViewFullScreenActivity.this.FullScreenWebView.loadUrl( url );
+					WebViewFullScreenActivity.this.loadPage( url );
 				}
 		});
 		
 		tabLayout.addView( button );
 		
+		RelativeLayout badgeFrame = null;
+		TextView badgeTextView = null;
+		
 		if( ( badgeImage != null ) && ( badgeImage.length() > 0 ) )
 		{
-			RelativeLayout badgeFrame = new RelativeLayout( this );
+			badgeFrame = new RelativeLayout( this );
 			RelativeLayout.LayoutParams badgeFrameLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
 			if( badgeLeftMargin < 0 )
 			{
@@ -160,7 +193,7 @@ public void onClick(View arg0)
 					badgeImageView.setLayoutParams( badgeImageLayout );
 					badge.addView( badgeImageView );
 					
-					TextView badgeTextView = new TextView( this );
+					badgeTextView = new TextView( this );
 					badgeTextView.setText( "0" );
 					badgeTextView.setTextColor( 0xffffffff );
 					RelativeLayout.LayoutParams badgeTextLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
@@ -171,10 +204,10 @@ public void onClick(View arg0)
 				badgeFrame.addView( badge );
 				
 			tabLayout.addView( badgeFrame );
-			
-			this.Badges.put( badgeId, new BadgeView( badgeFrame, badgeImageView, badgeTextView ) );
 		}
 		
+		this.Tabs.add( new TabView( url, image, imageSelected, button, badgeId, badgeFrame, badgeTextView ) );
+		
 		return tabLayout;
 	}
 	
@@ -191,6 +224,8 @@ public void onCreate(Bundle savedInstanceState)
 		String titleBarCloseImage = "";
 		String titleBarCloseText = "";
 		String titleBarBadgeImage = "";
+		String titleBarHighlightedPostFix = "";
+		String titleBarHiResPostFix = "";
 		int titleBarBackgroundColour = 0xff000000;
 		int titleBarTextColour = 0xffffffff;
 		boolean titleBarOnTop = true;
@@ -212,12 +247,15 @@ public void onCreate(Bundle savedInstanceState)
     			titleBarOnTop = titleBar.getBoolean( "OnTop" );
     			titleBarBadgeImage = titleBar.getString( "BadgeImage" );
     			titleBarExpandToFit = titleBar.getBoolean( "ExpandToFit" );
+    			titleBarHighlightedPostFix = titleBar.getString( "HighlightedImagePostFix" );
+    			titleBarHiResPostFix = titleBar.getString( "HiResImagePostFix" );
     		}
     		
     		targetWidth = config.getInt( "targetWidth" );
         }
         catch (org.json.JSONException ex)
         {
+        	Log.d( TAG, "FullScreenWebViewActivity JSON Error in config : " + ex.getMessage() );
         }
         
         float weight = 0.0f;
@@ -268,6 +306,11 @@ public void onClick(View arg0)
 	    				
 	    				String tabUrl = tab.getString( "Url" );
 	    				String tabImage = tab.getString( "Image" );
+	    				String tabImageSelected = null;
+	    				if( ( titleBarHighlightedPostFix != null ) && ( titleBarHighlightedPostFix.length() > 0 ) )
+	    				{
+	    					tabImageSelected = tabImage + titleBarHighlightedPostFix;
+	    				}
 	    				
 	    				int tabBadgeId = -1;
 	    				int tabBadgeLeftMargin = 0;
@@ -287,10 +330,11 @@ public void onClick(View arg0)
 	    					badgeImage = titleBarBadgeImage;
 	    				}
 	    				
-	    				Log.d( TAG, "FullScreenWebViewActivity Adding Tab : url = " + tabUrl + " image = " + tabImage + " tabBadgeId = " + tabBadgeId + " badge = " + badgeImage + " offset = (" + tabBadgeLeftMargin + "," + tabBadgeTopMargin + ")");
+	    				Log.d( TAG, "FullScreenWebViewActivity Adding Tab : url = " + tabUrl + " image = " + tabImage + " tabImageSelected = " + tabImageSelected + " tabBadgeId = " + tabBadgeId + " badge = " + badgeImage + " offset = (" + tabBadgeLeftMargin + "," + tabBadgeTopMargin + ")");
 	    				
 	    				RelativeLayout tabButton = CreateURLTab( tabUrl,
 	    															tabImage,
+	    															tabImageSelected,
 	    															titleBarBackgroundColour,
 	    															tabBadgeId, 
 	    															badgeImage,
@@ -329,8 +373,7 @@ public void onClick(View arg0)
 	    float scale = ((float)targetWidth) / metrics.widthPixels;
 	    this.FullScreenWebView.setInitialScale( (int)( scale * 100.0f ) );
 	    
-		//String url = generateURL( page );
-		this.FullScreenWebView.loadUrl( url );
+	    loadPage( url );
 		
 		if( titleBarOnTop == true )
 		{
