diff --git a/facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
index 4de6dfa9b..1cb053706 100644
--- a/facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
@@ -50,7 +50,8 @@ boolean tryAuthorize(LoginClient.Request request) {
                 request.isRerequest(),
                 request.hasPublishPermission(),
                 request.getDefaultAudience(),
-                getClientState(request.getAuthId()));
+                getClientState(request.getAuthId()),
+                request.getAuthType());
 
         addLoggingExtra(ServerProtocol.DIALOG_PARAM_E2E, e2e);
 
diff --git a/facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
index fee9eac8f..be96b5b02 100644
--- a/facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
@@ -49,7 +49,8 @@ boolean tryAuthorize(LoginClient.Request request) {
                 request.isRerequest(),
                 request.hasPublishPermission(),
                 request.getDefaultAudience(),
-                getClientState(request.getAuthId()));
+                getClientState(request.getAuthId()),
+                request.getAuthType());
 
         addLoggingExtra(ServerProtocol.DIALOG_PARAM_E2E, e2e);
 
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginClient.java b/facebook-common/src/main/java/com/facebook/login/LoginClient.java
index 7d81f39ee..9efb89e53 100644
--- a/facebook-common/src/main/java/com/facebook/login/LoginClient.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginClient.java
@@ -37,7 +37,6 @@
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
-import com.facebook.login.DefaultAudience;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -444,6 +443,9 @@ static String getE2E() {
         private final String authId;
         private boolean isRerequest = false;
         private String deviceRedirectUriString;
+        private String authType;
+
+
 
         Request(
                 LoginBehavior loginBehavior,
@@ -499,6 +501,14 @@ void setDeviceRedirectUriString(String deviceRedirectUriString) {
             this.deviceRedirectUriString = deviceRedirectUriString;
         }
 
+        String getAuthType() {
+            return authType;
+        }
+
+        void setAuthType(String authType) {
+            this.authType = authType;
+        }
+
         boolean hasPublishPermission() {
             for (String permission : permissions) {
                 if (LoginManager.isPublishPermission(permission)) {
@@ -520,6 +530,7 @@ private Request(Parcel parcel) {
             this.authId = parcel.readString();
             this.isRerequest = parcel.readByte() != 0;
             this.deviceRedirectUriString = parcel.readString();
+            this.authType = parcel.readString();
         }
 
         @Override
@@ -536,6 +547,7 @@ public void writeToParcel(Parcel dest, int flags) {
             dest.writeString(authId);
             dest.writeByte((byte)(isRerequest ? 1 : 0));
             dest.writeString(deviceRedirectUriString);
+            dest.writeString(authType);
         }
 
         public static final Parcelable.Creator<Request> CREATOR = new Parcelable.Creator() {
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginManager.java b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
index 54e9003b4..d894c641f 100644
--- a/facebook-common/src/main/java/com/facebook/login/LoginManager.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
@@ -44,10 +44,10 @@
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.FragmentWrapper;
 import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 import com.facebook.appevents.AppEventsConstants;
-import com.facebook.login.DefaultAudience;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -73,6 +73,8 @@
 
     private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
     private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
+
+    private String authType = ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE;   // default value "rerequest".
     private final SharedPreferences sharedPreferences;
 
     LoginManager() {
@@ -282,6 +284,13 @@ public LoginManager setDefaultAudience(DefaultAudience defaultAudience) {
         return this;
     }
 
+    public String getAuthType() { return authType; }
+
+    public LoginManager setAuthType(String authType) {
+        this.authType = authType;
+        return this;
+    }
+
     /**
      * Logs out the user.
      */
@@ -356,6 +365,7 @@ private void logInWithReadPermissions(
         validateReadPermissions(permissions);
 
         LoginClient.Request loginRequest = createLoginRequest(permissions);
+        loginRequest.setAuthType(authType);
         startLogin(new FragmentStartActivityDelegate(fragment), loginRequest);
     }
 
@@ -368,6 +378,7 @@ public void logInWithReadPermissions(Activity activity, Collection<String> permi
         validateReadPermissions(permissions);
 
         LoginClient.Request loginRequest = createLoginRequest(permissions);
+        loginRequest.setAuthType(authType);
         startLogin(new ActivityStartActivityDelegate(activity), loginRequest);
     }
 
diff --git a/facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java
index 00567aa15..3fd8e6074 100644
--- a/facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java
@@ -115,7 +115,9 @@ protected Bundle addExtraParameters(Bundle parameters, final LoginClient.Request
                 ServerProtocol.DIALOG_RETURN_SCOPES_TRUE);
         parameters.putString(
                 ServerProtocol.DIALOG_PARAM_AUTH_TYPE,
-                ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE);
+                request.getAuthId()
+                //ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE
+                );
         if (getSSODevice() != null) {
             parameters.putString(ServerProtocol.DIALOG_PARAM_SSO_DEVICE, getSSODevice());
         }
diff --git a/facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
index 869f89ca3..8cc93ab15 100644
--- a/facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
@@ -85,7 +85,9 @@ public void onComplete(Bundle values, FacebookException error) {
                 parameters)
                 .setE2E(e2e)
                 .setIsRerequest(request.isRerequest())
-                .setOnCompleteListener(listener);
+                .setAuthType(request.getAuthType())
+                .setOnCompleteListener(listener)
+                ;
         loginDialog = builder.build();
 
         FacebookDialogFragment dialogFragment = new FacebookDialogFragment();
@@ -107,7 +109,7 @@ void onWebDialogComplete(LoginClient.Request request, Bundle values,
         static final String REDIRECT_URI = "fbconnect://success";
         private String e2e;
         private boolean isRerequest;
-
+        private String authType;
         public AuthDialogBuilder(Context context, String applicationId, Bundle parameters) {
             super(context, applicationId, OAUTH_DIALOG, parameters);
         }
@@ -122,6 +124,11 @@ public AuthDialogBuilder setIsRerequest(boolean isRerequest) {
             return this;
         }
 
+        public AuthDialogBuilder setAuthType(String authType) {
+            this.authType = authType;
+            return this;
+        }
+
         @Override
         public WebDialog build() {
             Bundle parameters = getParameters();
@@ -136,7 +143,9 @@ public WebDialog build() {
                     ServerProtocol.DIALOG_RETURN_SCOPES_TRUE);
             parameters.putString(
                         ServerProtocol.DIALOG_PARAM_AUTH_TYPE,
-                        ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE);
+                        authType
+//                        ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE
+            );
 
             return WebDialog.newInstance(
                     getContext(),
diff --git a/facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java b/facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java
index edf1daad8..09a97f3be 100644
--- a/facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java
+++ b/facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java
@@ -447,7 +447,8 @@ public static Intent createFacebookLiteIntent(
             boolean isRerequest,
             boolean isForPublish,
             DefaultAudience defaultAudience,
-            String clientState
+            String clientState,
+            String authType
     ) {
         NativeAppInfo appInfo = new FBLiteAppInfo();
         Intent intent = createNativeAppIntent(
@@ -458,7 +459,8 @@ public static Intent createFacebookLiteIntent(
                 isRerequest,
                 isForPublish,
                 defaultAudience,
-                clientState);
+                clientState,
+                authType);
         intent = validateActivityIntent(context, intent, appInfo);
 
         return intent;
@@ -472,7 +474,9 @@ private static Intent createNativeAppIntent(
             boolean isRerequest,
             boolean isForPublish,
             DefaultAudience defaultAudience,
-            String clientState
+            String clientState,
+            String authType
+
     ) {
         String activityName = appInfo.getLoginActivity();
         // the NativeApp doesn't have a login activity
@@ -514,7 +518,7 @@ private static Intent createNativeAppIntent(
 
         intent.putExtra(
                 ServerProtocol.DIALOG_PARAM_AUTH_TYPE,
-                ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE);
+                authType);
         return intent;
     }
 
@@ -526,7 +530,8 @@ public static Intent createProxyAuthIntent(
             boolean isRerequest,
             boolean isForPublish,
             DefaultAudience defaultAudience,
-            String clientState) {
+            String clientState,
+            String authType) {
         for (NativeAppInfo appInfo : facebookAppInfoList) {
             Intent intent = createNativeAppIntent(
                     appInfo,
@@ -536,7 +541,8 @@ public static Intent createProxyAuthIntent(
                     isRerequest,
                     isForPublish,
                     defaultAudience,
-                    clientState);
+                    clientState,
+                    authType);
             intent = validateActivityIntent(context, intent, appInfo);
 
             if (intent != null) {
diff --git a/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
index efa4a8021..e0c81cb74 100644
--- a/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
+++ b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
@@ -45,6 +45,7 @@
 import com.facebook.internal.FetchedAppSettings;
 import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.LoginAuthorizationType;
+import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.login.DefaultAudience;
 import com.facebook.login.LoginBehavior;
@@ -135,6 +136,7 @@ public int getValue() {
         private List<String> permissions = Collections.emptyList();
         private LoginAuthorizationType authorizationType = null;
         private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
+        private String authType = ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE;
 
         public void setDefaultAudience(DefaultAudience defaultAudience) {
             this.defaultAudience = defaultAudience;
@@ -184,6 +186,14 @@ public void setLoginBehavior(LoginBehavior loginBehavior) {
         public LoginBehavior getLoginBehavior() {
             return loginBehavior;
         }
+
+        public String getAuthType() {
+            return authType;
+        }
+
+        public void setAuthType(String authType) {
+            this.authType = authType;
+        }
     }
 
     /**
@@ -382,6 +392,16 @@ public LoginBehavior getLoginBehavior() {
         return properties.getLoginBehavior();
     }
 
+
+    public String getAuthType() {
+        return properties.getAuthType();
+    }
+
+    public void setAuthType(String authType) {
+        properties.setAuthType(authType);
+    }
+
+
     /**
      * Sets the style (background) of the Tool Tip popup. Currently a blue style and a black
      * style are supported. Blue is default
@@ -809,6 +829,7 @@ protected LoginManager getLoginManager() {
             LoginManager manager = LoginManager.getInstance();
             manager.setDefaultAudience(getDefaultAudience());
             manager.setLoginBehavior(getLoginBehavior());
+            manager.setAuthType(getAuthType());
             return manager;
         }
     }
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
index c4eec198d..b8a877523 100644
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
@@ -27,6 +27,7 @@
 import com.facebook.CallbackManager;
 import com.facebook.FacebookCallback;
 import com.facebook.FacebookException;
+import com.facebook.login.LoginBehavior;
 import com.facebook.login.LoginResult;
 import com.facebook.login.widget.LoginButton;
 
@@ -55,6 +56,7 @@ public void onCreate(Bundle savedInstanceState) {
         // Set the initial permissions to request from the user while logging in
         mLoginButton.setReadPermissions(Arrays.asList(EMAIL, USER_POSTS));
 
+        mLoginButton.setAuthType("rerequest");  // auth type example : "rerequest", "reauthorize"
         // Register a callback to respond to the user
         mLoginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {
             @Override
