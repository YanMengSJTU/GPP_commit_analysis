diff --git a/funtown/src/tw/com/funtown/AuthorizationClient.java b/funtown/src/tw/com/funtown/AuthorizationClient.java
index 4b28137f0..75debd341 100644
--- a/funtown/src/tw/com/funtown/AuthorizationClient.java
+++ b/funtown/src/tw/com/funtown/AuthorizationClient.java
@@ -473,10 +473,18 @@ public void onComplete(Bundle values, FuntownException error) {
                     onWebDialogComplete(request, values, error);
                 }
             };
-
-            WebDialog.Builder builder =
-                    new AuthDialogBuilder(getStartActivityDelegate().getActivityContext(), applicationId, parameters)
-                            .setOnCompleteListener(listener);
+            WebDialog.Builder builder;
+			if(request.getauthenticationBehavior() == AuthenticationBehavior.UUID) {
+
+				builder = new UUIDAuthDialogBuilder(getStartActivityDelegate()
+						.getActivityContext(), applicationId, parameters)
+						.setOnCompleteListener(listener);
+			}
+			else{
+				builder = new AuthDialogBuilder(getStartActivityDelegate()
+						.getActivityContext(), applicationId, parameters)
+						.setOnCompleteListener(listener);
+			}
             loginDialog = builder.build();
             loginDialog.show();
 
@@ -729,7 +737,30 @@ private Result handleResultOk(Intent data) {
             }
         }
     }
+    static class UUIDAuthDialogBuilder extends WebDialog.Builder {
+        private static final String UUID_AUTHROITY = "newpartner.funtown.com.tw";    
+        private static final String UUID_PATH = "gameview/";         
+        private static final String UUID_DIALOG = "index.php";
+        private static final String UUID_PARAMETER = "uuid";
+        static final String RESPONSE_TYPE = "code";
+        private String uuid;
+        
+        public UUIDAuthDialogBuilder(Context context, String applicationId, Bundle parameters) {
+            super(context, applicationId, UUID_AUTHROITY,UUID_PATH,UUID_DIALOG, parameters);            
+            uuid=Utility.getCurDeviceUUID(context);      
+        }
 
+        @Override
+        public WebDialog build() {
+            Bundle parameters = getParameters();
+            //parameters.putString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI, REDIRECT_URI);
+            parameters.putString(ServerProtocol.DIALOG_PARAM_CLIENT_ID, getApplicationId());
+            parameters.putString(ServerProtocol.DIALOG_PARAM_RESPONSE_TYPE, RESPONSE_TYPE);
+            parameters.putString(UUID_PARAMETER, uuid);
+            return new WebDialog(getContext(), UUID_AUTHROITY,UUID_PATH,UUID_DIALOG, parameters, getTheme(), getListener());
+        }
+    }
+    
     static class AuthDialogBuilder extends WebDialog.Builder {
         private static final String OAUTH_DIALOG = "oauth_mobile.php";
         //static final String REDIRECT_URI = "fbconnect://success";
@@ -754,6 +785,7 @@ public WebDialog build() {
         private static final long serialVersionUID = 1L;
 
         private transient final StartActivityDelegate startActivityDelegate;
+        private AuthenticationBehavior authenticationBehavior;        
         private SessionLoginBehavior loginBehavior;
         private int requestCode;
         private boolean isLegacy = false;
@@ -763,10 +795,11 @@ public WebDialog build() {
         private String previousAccessToken;
         private String redirectUri;
         
-        AuthorizationRequest(SessionLoginBehavior loginBehavior, int requestCode, boolean isLegacy,
+        AuthorizationRequest(AuthenticationBehavior authenticationBehavior, SessionLoginBehavior loginBehavior, int requestCode, boolean isLegacy,
                 List<String> permissions, SessionDefaultAudience defaultAudience, String applicationId,String redirectUri,
                 String validateSameFbidAsToken, StartActivityDelegate startActivityDelegate) {
-            this.loginBehavior = loginBehavior;
+            this.authenticationBehavior = authenticationBehavior;
+        	this.loginBehavior = loginBehavior;
             this.requestCode = requestCode;
             this.isLegacy = isLegacy;
             this.permissions = permissions;
@@ -789,7 +822,11 @@ StartActivityDelegate getStartActivityDelegate() {
         void setPermissions(List<String> permissions) {
             this.permissions = permissions;
         }
-
+        
+        AuthenticationBehavior getauthenticationBehavior(){
+        	return authenticationBehavior;
+        }
+        
         SessionLoginBehavior getLoginBehavior() {
             return loginBehavior;
         }
diff --git a/funtown/src/tw/com/funtown/UUID.java b/funtown/src/tw/com/funtown/UUID.java
new file mode 100644
index 000000000..500afd383
--- /dev/null
+++ b/funtown/src/tw/com/funtown/UUID.java
@@ -0,0 +1,31 @@
+package tw.com.funtown;
+
+import android.content.Context;
+import tw.com.funtown.internal.Utility;
+
+public class UUID {
+	Context __ctx;
+    private static final Object __staticLock = new Object();	
+    private static UUID __uuid;	
+	UUID(Context ctx) {
+		__ctx=ctx;
+	}
+    public static final UUID getInstance(Context ctx) {
+        synchronized (UUID.__staticLock) {
+        	if(UUID.__uuid !=null) {
+        		return UUID.__uuid;
+        	}
+        	else {
+        		__uuid = new UUID(ctx);
+        		return __uuid;
+        	}
+        }
+    }
+	public void GenerateUUID(OnUUIDGeneratedListener listener) {
+        String uuid=Utility.getCurDeviceUUID(__ctx); 
+        listener.onUUIDGenerated(uuid);
+	}
+	public interface OnUUIDGeneratedListener  {
+	       public void onUUIDGenerated(String UUID);		 
+	}
+}
diff --git a/funtown/src/tw/com/funtown/internal/Utility.java b/funtown/src/tw/com/funtown/internal/Utility.java
index 20e0abf9c..a9773c0cf 100644
--- a/funtown/src/tw/com/funtown/internal/Utility.java
+++ b/funtown/src/tw/com/funtown/internal/Utility.java
@@ -364,22 +364,23 @@ public static boolean queryAppAttributionSupportAndWait(final String application
         }
     }
     public static String getCurDeviceUUID(Context context) {
-    	UUID uuid;      
+    	UUID uuid;   
+    	String uuidString;
         final String androidId = Secure.getString(context.getContentResolver(), Secure.ANDROID_ID);
 
         try {
             if (!"9774d56d682e549c".equals(androidId) && androidId != null) {
                 uuid = UUID.nameUUIDFromBytes(androidId.getBytes("utf8"));
+                uuidString = "ANDROID_ID-"+uuid.toString();
             } else {
-                final String deviceId = 
-                        ((TelephonyManager) context.getSystemService( Context.TELEPHONY_SERVICE )).getDeviceId();
-                uuid = deviceId != null ? 
-                                UUID.nameUUIDFromBytes(deviceId.getBytes("utf8")) : UUID.randomUUID();
+                final String deviceId =  ((TelephonyManager) context.getSystemService( Context.TELEPHONY_SERVICE )).getDeviceId();
+                uuid = deviceId != null ?  UUID.nameUUIDFromBytes(deviceId.getBytes("utf8")) : UUID.randomUUID();
+                uuidString = "DEVICE_ID-"+uuid.toString();
             }
         } catch (UnsupportedEncodingException e) {
             throw new RuntimeException(e);
         }
         
-        return uuid.toString();
+        return uuidString;
     }
 }
diff --git a/samples/SessionLoginSample/res/layout/funtown_activity.xml b/samples/SessionLoginSample/res/layout/funtown_activity.xml
index f4560bd12..289ba9076 100644
--- a/samples/SessionLoginSample/res/layout/funtown_activity.xml
+++ b/samples/SessionLoginSample/res/layout/funtown_activity.xml
@@ -35,7 +35,7 @@
         android:layout_height="wrap_content"
         android:text="@string/funtownLogin" />
     <Button
-        android:id="@+id/buttonFuntownUUIDLoginLogout"
+        android:id="@+id/buttonFuntownUUIDGenerator"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:text="@string/funtownLogin" />
diff --git a/samples/SessionLoginSample/res/values/strings.xml b/samples/SessionLoginSample/res/values/strings.xml
index 05b7b3842..eea40beba 100644
--- a/samples/SessionLoginSample/res/values/strings.xml
+++ b/samples/SessionLoginSample/res/values/strings.xml
@@ -29,7 +29,7 @@
     <!-- <string name="applicationId">380615018626574</string>  -->     
     <string name="login_using_funtown_activity">Login using Funtown Activity</string>
     <string name="funtownLogin">Login Funtown</string>
-    <string name="funtownUUIDLogin">Login Funtown Using UUID</string>    
+    <string name="funtownUUIDGenerator">Generator Device UUID</string>    
      <string name="funtownLogout">Log out Funtown</string>  
     <string name="client_id">105</string>
     <string name="funtown_redirect_uri">https://weblogin.funtown.com.tw/oauth/login_success.html</string>           
diff --git a/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingFuntownActivityActivity.java b/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingFuntownActivityActivity.java
index b73bec92c..9d7095856 100644
--- a/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingFuntownActivityActivity.java
+++ b/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingFuntownActivityActivity.java
@@ -23,18 +23,18 @@
 import android.view.View.OnClickListener;
 import android.widget.Button;
 import android.widget.TextView;
-import tw.com.funtown.AuthenticationBehavior;
 import tw.com.funtown.LoggingBehavior;
 import tw.com.funtown.Session;
 import tw.com.funtown.SessionState;
 import tw.com.funtown.Settings;
+import tw.com.funtown.UUID;
 
 public class LoginUsingFuntownActivityActivity extends Activity {
     private static final String URL_PREFIX_PROFILE = "https://weblogin.funtown.com.tw/oauth/profile.php?access_token=";
 
     private TextView textInstructionsOrLink;
     private Button buttonLoginLogout;
-    private Button buttonUUIDLoginLogout;    
+    private Button buttonUUIDGenerator;    
     private Session.StatusCallback statusCallback = new SessionStatusCallback();
 
     @Override
@@ -42,7 +42,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.funtown_activity);
         buttonLoginLogout = (Button)findViewById(R.id.buttonFuntownLoginLogout);
-        buttonUUIDLoginLogout  = (Button)findViewById(R.id.buttonFuntownUUIDLoginLogout);
+        buttonUUIDGenerator  = (Button)findViewById(R.id.buttonFuntownUUIDGenerator);
         textInstructionsOrLink = (TextView)findViewById(R.id.instructionsOrLink);
 
         Settings.addLoggingBehavior(LoggingBehavior.INCLUDE_ACCESS_TOKENS);
@@ -92,30 +92,20 @@ protected void onSaveInstanceState(Bundle outState) {
     private void updateView() {
         Session session = Session.getActiveSession();
         if (session.isOpened()) {
-        	if(session.getAuthCode() != null){
-        		textInstructionsOrLink.setText("code="+session.getAuthCode());        		
-        	}
-        	else {
-        		textInstructionsOrLink.setText(URL_PREFIX_PROFILE + session.getAccessToken() + "&session_key=" + session.getSessionKey());
-        	}
+        	textInstructionsOrLink.setText(URL_PREFIX_PROFILE + session.getAccessToken() + "&session_key=" + session.getSessionKey());
             buttonLoginLogout.setText(R.string.logout);
             buttonLoginLogout.setOnClickListener(new OnClickListener() {
                 public void onClick(View view) { onClickLogout(); }
-            });
-            buttonUUIDLoginLogout.setText(R.string.logout);
-            buttonUUIDLoginLogout.setOnClickListener(new OnClickListener() {
-                public void onClick(View view) { onClickLogout(); }
-            });            
-            
+            });              
         } else {
             textInstructionsOrLink.setText(R.string.instructions);
             buttonLoginLogout.setText(R.string.funtownLogin);
             buttonLoginLogout.setOnClickListener(new OnClickListener() {
                 public void onClick(View view) { onClickLogin(); }
             });
-            buttonUUIDLoginLogout.setText(R.string.funtownUUIDLogin);
-            buttonUUIDLoginLogout.setOnClickListener(new OnClickListener() {
-                public void onClick(View view) { onClickUUIDLogin(); }
+            buttonUUIDGenerator.setText(R.string.funtownUUIDGenerator);
+            buttonUUIDGenerator.setOnClickListener(new OnClickListener() {
+                public void onClick(View view) { onClickUUIDGenerator(); }
             });                  
             
         }
@@ -129,15 +119,14 @@ private void onClickLogin() {
             Session.openActiveSession(this, true, statusCallback);
         }
     }
-    private void onClickUUIDLogin() {
-        Session session = Session.getActiveSession();
-        if (!session.isOpened() && !session.isClosed()) {
-        	Session.OpenRequest or= new Session.OpenRequest(this);
-        	or.setAuthenticationBehavior(AuthenticationBehavior.UUID);
-            session.openForRead(or.setCallback(statusCallback));
-        } else {
-            Session.openActiveSession(this, true, statusCallback);
-        }
+    private void onClickUUIDGenerator() {
+    	UUID uuid= UUID.getInstance(this);
+    	uuid.GenerateUUID(new UUID.OnUUIDGeneratedListener() {			
+			@Override
+			public void onUUIDGenerated(String UUID) {
+	            textInstructionsOrLink.setText("UUID : "+UUID);				
+			}     		
+    	});
     }
     private void onClickLogout() {
         Session session = Session.getActiveSession();
