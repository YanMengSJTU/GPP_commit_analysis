diff --git a/samples/RPSSample/src/com/example/rps/MainActivity.java b/samples/RPSSample/src/com/example/rps/MainActivity.java
index 4e303dc3d..755e3c245 100644
--- a/samples/RPSSample/src/com/example/rps/MainActivity.java
+++ b/samples/RPSSample/src/com/example/rps/MainActivity.java
@@ -56,7 +56,6 @@
     private Fragment[] fragments = new Fragment[FRAGMENT_COUNT];
     private MenuItem settings;
     private MenuItem challenge;
-    private MenuItem share;
     private MenuItem message;
     private boolean isResumed = false;
     private boolean hasNativeLink = false;
@@ -181,7 +180,6 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         // only add the menu when the selection fragment is showing
         if (fragments[RPS].isVisible()) {
             if (menu.size() == 0) {
-                share = menu.add(R.string.share_on_facebook);
                 message = menu.add(R.string.send_with_messenger);
                 challenge = menu.add(R.string.challenge_friends);
                 settings = menu.add(R.string.check_settings);
@@ -207,10 +205,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
             gameRequestDialog.show(this, newGameRequestContent);
 
-            return true;
-        } else if (item.equals(share)) {
-            RpsFragment fragment = (RpsFragment) fragments[RPS];
-            fragment.shareUsingAutomaticDialog();
             return true;
         } else if (item.equals(message)) {
             RpsFragment fragment = (RpsFragment) fragments[RPS];
diff --git a/samples/RPSSample/src/com/example/rps/RpsFragment.java b/samples/RPSSample/src/com/example/rps/RpsFragment.java
index 3ac7c5f28..f95dacc2f 100644
--- a/samples/RPSSample/src/com/example/rps/RpsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/RpsFragment.java
@@ -23,6 +23,7 @@
 import android.app.AlertDialog;
 import android.app.PendingIntent;
 import android.content.ComponentName;
+import com.facebook.share.model.SharePhotoContent;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -78,8 +79,6 @@
 
     private static final String SHARE_GAME_LINK = "https://developers.facebook.com/docs/android";
     private static final String SHARE_GAME_NAME = "Rock, Papers, Scissors Sample Application";
-    private static final String DEFAULT_GAME_OBJECT_TITLE =
-            "an awesome game of Rock, Paper, Scissors";
     private static final String WIN_KEY = "wins";
     private static final String LOSS_KEY = "losses";
     private static final String TIE_KEY = "ties";
@@ -348,11 +347,8 @@ private void publishResult() {
             sharePhotoBuilder.setUserGenerated(false);
             final SharePhoto gesturePhoto = sharePhotoBuilder.build();
 
-            ShareOpenGraphObject gameObject = createGameObject(gesturePhoto);
-            ShareOpenGraphAction playAction = createPlayActionWithGame(gameObject);
-            ShareOpenGraphContent content = new ShareOpenGraphContent.Builder()
-                    .setAction(playAction)
-                    .setPreviewPropertyName("game")
+            SharePhotoContent content = new SharePhotoContent.Builder()
+                    .addPhoto(gesturePhoto)
                     .build();
 
             ShareApi.share(content, new FacebookCallback<Sharer.Result>() {
@@ -375,27 +371,6 @@ public void onError(FacebookException error) {
         }
     }
 
-    private ShareOpenGraphObject createGameObject(final SharePhoto gesturePhoto) {
-        return new ShareOpenGraphObject.Builder()
-                .putString("og:title", DEFAULT_GAME_OBJECT_TITLE)
-                .putString("og:type", "fb_sample_rps:game")
-                .putString("fb_sample_rps:player_gesture",
-                        CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS[playerChoice])
-                .putString("fb_sample_rps:opponent_gesture",
-                        CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS[computerChoice])
-                .putString("fb_sample_rps:result", getString(result.getResultStringId()))
-                .putPhotoArrayList("og:image", new ArrayList<SharePhoto>() {{
-                    add(gesturePhoto);
-                }})
-                .build();
-    }
-
-    private ShareOpenGraphAction createPlayActionWithGame(ShareOpenGraphObject game) {
-        return new ShareOpenGraphAction.Builder()
-                .setActionType(OpenGraphConsts.PLAY_ACTION_TYPE)
-                .putObject("game", game).build();
-    }
-
     private String getBuiltInGesture(int choice) {
         if (choice < 0 || choice >= CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS.length) {
             throw new IllegalArgumentException("Invalid choice");
@@ -511,27 +486,6 @@ private void consumePurchase(String packageName, String token) {
         }
     }
 
-    public void shareUsingAutomaticDialog() {
-        if (playerChoice == INVALID_CHOICE || computerChoice == INVALID_CHOICE) {
-            ShareContent content = getLinkContent();
-
-            // share the app
-            if (shareDialog.canShow(content, ShareDialog.Mode.AUTOMATIC)) {
-                shareDialog.show(content, ShareDialog.Mode.AUTOMATIC);
-            } else {
-                showError(R.string.share_dialog_error);
-            }
-        } else {
-            ShareContent content = getThrowActionContent();
-
-            if (shareDialog.canShow(content, ShareDialog.Mode.AUTOMATIC)) {
-                shareDialog.show(content, ShareDialog.Mode.AUTOMATIC);
-            } else {
-                showError(R.string.share_dialog_error);
-            }
-        }
-    }
-
     public void shareUsingMessengerDialog() {
         if (playerChoice == INVALID_CHOICE || computerChoice == INVALID_CHOICE) {
             ShareContent content = getLinkContent();
