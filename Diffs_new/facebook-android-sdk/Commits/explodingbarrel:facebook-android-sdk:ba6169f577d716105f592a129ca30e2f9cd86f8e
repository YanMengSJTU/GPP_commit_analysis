diff --git a/facebook/build.sh b/facebook/build.sh
index dbeb238a0..8fa1e876e 100755
--- a/facebook/build.sh
+++ b/facebook/build.sh
@@ -9,6 +9,10 @@ if [ $? == 0 ]; then
 	cp -f bin/classes.jar ~/Fast/Assets/Plugins/Android/android_facebook_sdk.jar
 	cp -rf res/ ~/Fast/Assets/Plugins/Android/res/
 	cp -f libs/android-support-v4.jar ~/Fast/Assets/Plugins/Android/android-support-v4.jar
+		
+	cp -f bin/classes.jar ~/Fast_Samsung/Assets/Plugins/Android/android_facebook_sdk.jar
+	cp -rf res/ ~/Fast_Samsung/Assets/Plugins/Android/res/
+	cp -f libs/android-support-v4.jar ~/Fast_Samsung/Assets/Plugins/Android/android-support-v4.jar
 
 
 	cp -f AndroidManifest.rivets.xml AndroidManifest.xml
diff --git a/facebook/src/com/explodingbarrel/android/JarExtraction.java b/facebook/src/com/explodingbarrel/android/JarExtraction.java
new file mode 100644
index 000000000..b1e739773
--- /dev/null
+++ b/facebook/src/com/explodingbarrel/android/JarExtraction.java
@@ -0,0 +1,72 @@
+package com.explodingbarrel.android;
+
+import android.app.Activity;
+import android.util.Log;
+
+import java.io.BufferedInputStream;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.File;
+import java.util.jar.JarInputStream;
+import java.util.jar.JarEntry;
+
+class JarExtraction 
+{
+	// Debug tag, for logging
+    private static final String TAG = "JarExtraction";
+	
+	public static boolean ExtractFromJar( String jarPath, String filePath, String outputPath )
+	{
+		boolean valid = false;
+		Log.d(TAG, "JarExtraction ExtractFromJar jarPath = " + jarPath + " filePath = " + filePath + " outputPath = " + outputPath);
+		
+		JarInputStream jis = null;
+		FileInputStream fis = null;
+		try
+		{
+			fis = new FileInputStream( jarPath );
+			jis = new JarInputStream( new BufferedInputStream( fis ) );
+		
+			JarEntry je;
+			while( ( je = jis.getNextJarEntry() ) != null )
+			{
+				String candidate = je.getName();	
+				if( candidate.equals( filePath ) == true )
+				{
+					Log.d(TAG, "JarExtraction Extracting " + filePath + " from " + jarPath + " to " + outputPath );
+					FileOutputStream writer = new FileOutputStream( outputPath );
+					
+					int kBufferSize = 1024;
+					byte[] buffer = new byte[kBufferSize];
+			        int count;
+					while( ( count = jis.read( buffer, 0, kBufferSize ) ) != -1 )
+					{
+						writer.write( buffer, 0, count );
+					}
+					
+					writer.close();
+					valid = true;
+					break;
+				}
+			}
+		}
+		catch( Exception ex )
+		{
+		}
+		finally
+		{
+			if( jis != null )
+			{
+				try
+				{
+					jis.close();
+				}
+				catch( Exception ex )
+				{
+				}
+			}
+		}
+		
+		return valid;
+	}
+}
\ No newline at end of file
