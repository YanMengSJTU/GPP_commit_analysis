diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index f1f4348f9..3b3c5d433 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -38,9 +38,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
-class AuthorizationClient implements Serializable {
+public class AuthorizationClient implements Serializable {
     private static final long serialVersionUID = 1L;
-
+    private static boolean shouldForceLogin = false;
     List<AuthHandler> handlersToTry;
     AuthHandler currentHandler;
     transient Context context;
@@ -148,13 +148,16 @@ boolean onActivityResult(int requestCode, int resultCode, Intent data) {
         ArrayList<AuthHandler> handlers = new ArrayList<AuthHandler>();
 
         final SessionLoginBehavior behavior = request.getLoginBehavior();
-        if (behavior.allowsKatanaAuth()) {
-            if (!request.isLegacy()) {
-                handlers.add(new GetTokenAuthHandler());
-                handlers.add(new KatanaLoginDialogAuthHandler());
+        if(!shouldForceLogin){
+        	if (behavior.allowsKatanaAuth()) {
+                if (!request.isLegacy()) {
+                    handlers.add(new GetTokenAuthHandler());
+                    handlers.add(new KatanaLoginDialogAuthHandler());
+                }
+                handlers.add(new KatanaProxyAuthHandler());
             }
-            handlers.add(new KatanaProxyAuthHandler());
         }
+        
 
         if (behavior.allowsWebViewAuth()) {
             handlers.add(new WebViewAuthHandler());
@@ -162,6 +165,10 @@ boolean onActivityResult(int requestCode, int resultCode, Intent data) {
 
         return handlers;
     }
+    
+    public static void setForceLoginWebview(boolean bool){
+    	shouldForceLogin = bool;
+    }
 
     boolean checkInternetPermission() {
         if (checkedInternetPermission) {
