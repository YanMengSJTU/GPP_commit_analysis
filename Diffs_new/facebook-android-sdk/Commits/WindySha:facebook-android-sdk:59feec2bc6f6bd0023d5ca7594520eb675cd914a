diff --git a/facebook-core/src/main/java/com/facebook/FacebookSdk.java b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
index d2a3c5bad..10802189e 100644
--- a/facebook-core/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
@@ -128,6 +128,12 @@ public Thread newThread(Runnable runnable) {
      */
     public static final String WEB_DIALOG_THEME = "com.facebook.sdk.WebDialogTheme";
 
+    /**
+     * The key for the auto init SDK in the Android manifest.
+     */
+    public static final String AUTO_INIT_ENABLED_PROPERTY =
+            "com.facebook.sdk.AutoInitEnabled";
+
     /**
      * The key for the auto logging app events in the Android manifest.
      */
@@ -826,6 +832,23 @@ public static void setClientToken(String clientToken) {
         appClientToken = clientToken;
     }
 
+    /**
+     * @return the auto init SDK flag for the application
+     */
+    public static boolean getAutoInitEnabled() {
+        return UserSettingsManager.getAutoInitEnabled();
+    }
+
+    /**
+     * Sets the auto init SDK flag for the application
+     * @param flag true or false
+     *
+     * When flag is false, SDK is not fully initialized.
+     */
+    public static void setAutoInitEnabled(boolean flag) {
+        UserSettingsManager.setAutoInitEnabled(flag);
+    }
+
     /**
      * Gets the flag used by {@link com.facebook.appevents.AppEventsLogger}
      * @return the auto logging events flag for the application
diff --git a/facebook-core/src/main/java/com/facebook/UserSettingsManager.java b/facebook-core/src/main/java/com/facebook/UserSettingsManager.java
index 584829003..f9d58b585 100644
--- a/facebook-core/src/main/java/com/facebook/UserSettingsManager.java
+++ b/facebook-core/src/main/java/com/facebook/UserSettingsManager.java
@@ -38,6 +38,7 @@
 import java.util.concurrent.atomic.AtomicBoolean;
 
 import static com.facebook.FacebookSdk.ADVERTISER_ID_COLLECTION_ENABLED_PROPERTY;
+import static com.facebook.FacebookSdk.AUTO_INIT_ENABLED_PROPERTY;
 import static com.facebook.FacebookSdk.AUTO_LOG_APP_EVENTS_ENABLED_PROPERTY;
 
 final class UserSettingsManager {
@@ -51,6 +52,10 @@
     private static final String ADVERTISER_ID_KEY = "advertiser_id";
     private static final String APPLICATION_FIELDS = "fields";
 
+    private static UserSetting autoInitEnabled = new UserSetting(
+            true,
+            AUTO_INIT_ENABLED_PROPERTY,
+            AUTO_INIT_ENABLED_PROPERTY);
     private static UserSetting autoLogAppEventsEnabled = new UserSetting(
             true,
             AUTO_LOG_APP_EVENTS_ENABLED_PROPERTY,
@@ -106,6 +111,7 @@ public static void initializeIfNotInitialized() {
 
         initializeUserSetting(autoLogAppEventsEnabled);
         initializeUserSetting(advertiserIDCollectionEnabled);
+        initializeUserSetting(autoInitEnabled);
         initializeCodelessSepupEnabledAsync();
         logWarnings();
     }
@@ -254,6 +260,21 @@ private static void validateInitialized() {
         }
     }
 
+    public static void setAutoInitEnabled(boolean flag) {
+        autoInitEnabled.value = flag;
+        autoInitEnabled.lastTS = System.currentTimeMillis();
+        if (isInitialized.get()) {
+            writeSettingToCache(autoInitEnabled);
+        } else {
+            initializeIfNotInitialized();
+        }
+    }
+
+    public static boolean getAutoInitEnabled() {
+        initializeIfNotInitialized();
+        return autoInitEnabled.getValue();
+    }
+
     public static void setAutoLogAppEventsEnabled(boolean flag) {
         autoLogAppEventsEnabled.value = flag;
         autoLogAppEventsEnabled.lastTS = System.currentTimeMillis();
diff --git a/facebook/src/test/java/com/facebook/UserSettingsManagerTest.java b/facebook/src/test/java/com/facebook/UserSettingsManagerTest.java
new file mode 100644
index 000000000..606ac3418
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/UserSettingsManagerTest.java
@@ -0,0 +1,44 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook;
+
+import org.junit.Test;
+import org.powermock.api.mockito.PowerMockito;
+import org.powermock.core.classloader.annotations.PrepareForTest;
+
+@PrepareForTest( {
+        UserSettingsManager.class,
+        FacebookSdk.class})
+
+public class UserSettingsManagerTest extends FacebookPowerMockTestCase {
+    @Test
+    public void testAutoInitEnabled() {
+        PowerMockito.mockStatic(UserSettingsManager.class);
+
+        FacebookSdk.getAutoInitEnabled();
+        PowerMockito.verifyStatic();
+        UserSettingsManager.getAutoInitEnabled();
+
+        FacebookSdk.setAutoInitEnabled(false);
+        PowerMockito.verifyStatic();
+        UserSettingsManager.setAutoInitEnabled(false);
+    }
+}
