diff --git a/facebook/res/values-es/strings.xml b/facebook/res/values-es/facebook_strings.xml
similarity index 100%
rename from facebook/res/values-es/strings.xml
rename to facebook/res/values-es/facebook_strings.xml
diff --git a/facebook/res/values-he/strings.xml b/facebook/res/values-he/facebook_strings.xml
similarity index 100%
rename from facebook/res/values-he/strings.xml
rename to facebook/res/values-he/facebook_strings.xml
diff --git a/facebook/res/values-iw/strings.xml b/facebook/res/values-iw/facebook_strings.xml
similarity index 100%
rename from facebook/res/values-iw/strings.xml
rename to facebook/res/values-iw/facebook_strings.xml
diff --git a/facebook/res/values/attrs.xml b/facebook/res/values/facebook_facebook_attrs.xml
similarity index 100%
rename from facebook/res/values/attrs.xml
rename to facebook/res/values/facebook_facebook_attrs.xml
diff --git a/facebook/res/values/strings.xml b/facebook/res/values/facebook_facebook_strings.xml
similarity index 100%
rename from facebook/res/values/strings.xml
rename to facebook/res/values/facebook_facebook_strings.xml
diff --git a/facebook/res/values/styles.xml b/facebook/res/values/facebook_facebook_styles.xml
similarity index 100%
rename from facebook/res/values/styles.xml
rename to facebook/res/values/facebook_facebook_styles.xml
diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index 13c8e5c9a..556d9e8fd 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -26,7 +28,7 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.webkit.CookieSyncManager;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.model.GraphMultiResult;
@@ -175,8 +177,8 @@ boolean checkInternetPermission() {
 
         int permissionCheck = checkPermission(Manifest.permission.INTERNET);
         if (permissionCheck != PackageManager.PERMISSION_GRANTED) {
-            String errorType = context.getString(R.string.com_facebook_internet_permission_error_title);
-            String errorDescription = context.getString(R.string.com_facebook_internet_permission_error_message);
+            String errorType = context.getString(MobageFacebookResources.string("com_facebook_internet_permission_error_title"));
+            String errorDescription = context.getString(MobageFacebookResources.string("com_facebook_internet_permission_error_message"));
             complete(Result.createErrorResult(errorType, errorDescription));
 
             return false;
diff --git a/facebook/src/com/facebook/FacebookRequestError.java b/facebook/src/com/facebook/FacebookRequestError.java
index 5e9187904..d51c4c6ab 100644
--- a/facebook/src/com/facebook/FacebookRequestError.java
+++ b/facebook/src/com/facebook/FacebookRequestError.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -16,7 +18,7 @@
 
 package com.facebook;
 
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.internal.Utility;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -141,21 +143,21 @@ private FacebookRequestError(int requestStatusCode, int errorCode,
                 errorCategory = Category.THROTTLING;
             } else if (errorCode == EC_PERMISSION_DENIED || EC_RANGE_PERMISSION.contains(errorCode)) {
                 errorCategory = Category.PERMISSION;
-                messageId = R.string.com_facebook_requesterror_permissions;
+                messageId = MobageFacebookResources.string("com_facebook_requesterror_permissions");
             } else if (errorCode == EC_INVALID_SESSION || errorCode == EC_INVALID_TOKEN) {
                 if (subErrorCode == EC_USER_CHECKPOINTED || subErrorCode == EC_UNCONFIRMED_USER) {
                     errorCategory = Category.AUTHENTICATION_RETRY;
-                    messageId = R.string.com_facebook_requesterror_web_login;
+                    messageId = MobageFacebookResources.string("com_facebook_requesterror_web_login");
                     shouldNotify = true;
                 } else {
                     errorCategory = Category.AUTHENTICATION_REOPEN_SESSION;
 
                     if ((subErrorCode == EC_APP_NOT_INSTALLED) || (subErrorCode == EC_EXPIRED)) {
-                        messageId = R.string.com_facebook_requesterror_relogin;
+                        messageId = MobageFacebookResources.string("com_facebook_requesterror_relogin");
                     } else if (subErrorCode == EC_PASSWORD_CHANGED) {
-                        messageId = R.string.com_facebook_requesterror_password_changed;
+                        messageId = MobageFacebookResources.string("com_facebook_requesterror_password_changed");
                     } else {
-                        messageId = R.string.com_facebook_requesterror_reconnect;
+                        messageId = MobageFacebookResources.string("com_facebook_requesterror_reconnect");
                         shouldNotify = true;
                     }
                 }
diff --git a/facebook/src/com/facebook/LoginActivity.java b/facebook/src/com/facebook/LoginActivity.java
index 26e769a88..fbbd4dafb 100644
--- a/facebook/src/com/facebook/LoginActivity.java
+++ b/facebook/src/com/facebook/LoginActivity.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -20,7 +22,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.View;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 
 /**
  * This Activity is a necessary part of the overall Facebook login process
@@ -52,7 +54,7 @@
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.com_facebook_login_activity_layout);
+        setContentView(MobageFacebookResources.layout("com_facebook_login_activity_layout"));
 
         if (savedInstanceState != null) {
             callingPackage = savedInstanceState.getString(SAVED_CALLING_PKG_KEY);
@@ -73,12 +75,12 @@ public void onCompleted(AuthorizationClient.Result outcome) {
         authorizationClient.setBackgroundProcessingListener(new AuthorizationClient.BackgroundProcessingListener() {
             @Override
             public void onBackgroundProcessingStarted() {
-                findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.VISIBLE);
+                findViewById(MobageFacebookResources.id("com_facebook_login_activity_progress_bar")).setVisibility(View.VISIBLE);
             }
 
             @Override
             public void onBackgroundProcessingStopped() {
-                findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.GONE);
+                findViewById(MobageFacebookResources.id("com_facebook_login_activity_progress_bar")).setVisibility(View.GONE);
             }
         });
     }
@@ -118,7 +120,7 @@ public void onPause() {
         super.onPause();
 
         authorizationClient.cancelCurrentHandler();
-        findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.GONE);
+        findViewById(MobageFacebookResources.id("com_facebook_login_activity_progress_bar")).setVisibility(View.GONE);
     }
 
     @Override
diff --git a/facebook/src/com/facebook/MobageFacebookResources.java b/facebook/src/com/facebook/MobageFacebookResources.java
new file mode 100644
index 000000000..2f421bb01
--- /dev/null
+++ b/facebook/src/com/facebook/MobageFacebookResources.java
@@ -0,0 +1,137 @@
+/**
+ * Copyright 2013-present DeNA Co., Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * This file has been added by DeNA Co., Ltd.
+ */
+
+package com.facebook;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.util.Log;
+
+public final class MobageFacebookResources {
+
+	private static Resources _resources = null;
+	private static Context context = null;
+	private static String sClassName = "com.mobage.global.android.Mobage";
+	private static String TAG = "MobageFacebookResources";
+	
+	public static final void setContext(Context setContext) {
+		context = setContext;
+	}
+			
+	public static final Context getContext() {
+		if (context == null)
+		{
+			try {
+				Class<?> mobageClass = Class.forName(sClassName);
+				String applicationContextMethod = "getApplicationContext";
+				Method method = mobageClass.getMethod(applicationContextMethod, (Class<?>[]) null);
+				Log.e(TAG, "getApplicationContext: " + method.getName());
+				context = (Context) method.invoke(null, (Object[])null);
+				if (context != null) {
+					Log.e(TAG, context.toString());
+				} else {
+					Log.e(TAG, "Context null");
+				}
+			} catch (Exception e) {
+				Log.e(TAG,"EXCEPTION getContext", e);
+			}
+		}
+		return context;
+	}
+	
+	private static final Resources resources() {
+		getContext();
+		if (_resources == null) {
+			_resources = context.getResources();
+		}
+		return _resources;
+	}
+
+	private static String _packageName = null;
+	private static final String packageName() {
+		getContext();
+		if (_packageName == null) {
+			_packageName = context.getPackageName();
+		}
+		return _packageName;
+	}
+
+	private static final int identifier(String name, String type) {
+		getContext();
+		return resources().getIdentifier(name, type, packageName());
+	}
+
+	public static final int string(String name) {
+		getContext();
+		return identifier(name, "string");
+	}
+
+	public static final int bool(String name) {
+		getContext();
+		return identifier(name, "bool");
+	}
+
+	public static final int drawable(String name) {
+		getContext();
+		return identifier(name, "drawable");
+	}
+
+	public static final int id(String name) {
+		getContext();
+		return identifier(name, "id");
+	}
+
+	public static final int layout(String name) {
+		getContext();
+		return identifier(name, "layout");
+	}
+	
+	public static final int[] convertToArray(int value) {
+		return new int [] {value};
+	}
+	
+	public static final int styleable(String name) {
+		getContext();
+		return identifier(name, "attr");
+	}
+	
+	public static final int dimen(String name) {
+		getContext();
+		return identifier(name, "styles");
+	}
+
+	public static final int color(String name) {
+		getContext();
+		return identifier(name, "styles");
+	}
+
+
+	public static final int menu(String name) {
+		getContext();
+		return identifier(name, "menu");
+	}
+
+	public static final int style(String name) {
+		getContext();
+		return identifier(name, "style");
+	}
+}
diff --git a/facebook/src/com/facebook/widget/FriendPickerFragment.java b/facebook/src/com/facebook/widget/FriendPickerFragment.java
index 7867a5ea8..7a523ec3e 100644
--- a/facebook/src/com/facebook/widget/FriendPickerFragment.java
+++ b/facebook/src/com/facebook/widget/FriendPickerFragment.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -23,7 +25,7 @@
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import com.facebook.*;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.model.GraphUser;
 
 import java.util.Arrays;
@@ -68,7 +70,7 @@ public FriendPickerFragment() {
      */
     @SuppressLint("ValidFragment")
     public FriendPickerFragment(Bundle args) {
-        super(GraphUser.class, R.layout.com_facebook_friendpickerfragment, args);
+        super(GraphUser.class, MobageFacebookResources.layout("com_facebook_friendpickerfragment"), args);
         setFriendPickerSettingsFromBundle(args);
     }
 
@@ -120,9 +122,9 @@ public void setMultiSelect(boolean multiSelect) {
     @Override
     public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState) {
         super.onInflate(activity, attrs, savedInstanceState);
-        TypedArray a = activity.obtainStyledAttributes(attrs, R.styleable.com_facebook_friend_picker_fragment);
+        TypedArray a = activity.obtainStyledAttributes(attrs, MobageFacebookResources.convertToArray(MobageFacebookResources.styleable("com_facebook_friend_picker_fragment")));
 
-        setMultiSelect(a.getBoolean(R.styleable.com_facebook_friend_picker_fragment_multi_select, multiSelect));
+        setMultiSelect(a.getBoolean(MobageFacebookResources.styleable("com_facebook_friend_picker_fragment_multi_select"), multiSelect));
 
         a.recycle();
     }
@@ -146,12 +148,12 @@ void saveSettingsToBundle(Bundle outState) {
 
             @Override
             protected int getGraphObjectRowLayoutId(GraphUser graphObject) {
-                return R.layout.com_facebook_picker_list_row;
+                return MobageFacebookResources.layout("com_facebook_picker_list_row");
             }
 
             @Override
             protected int getDefaultPicture() {
-                return R.drawable.com_facebook_profile_default_icon;
+                return MobageFacebookResources.drawable("com_facebook_profile_default_icon");
             }
 
         };
@@ -185,7 +187,7 @@ Request getRequestForLoadData(Session session) {
 
     @Override
     String getDefaultTitleText() {
-        return getString(R.string.com_facebook_choose_friends);
+        return getString(MobageFacebookResources.string("com_facebook_choose_friends"));
     }
 
     private Request createRequest(String userID, Set<String> extraFields, Session session) {
diff --git a/facebook/src/com/facebook/widget/GraphObjectAdapter.java b/facebook/src/com/facebook/widget/GraphObjectAdapter.java
index 42643d6a0..2dce85238 100644
--- a/facebook/src/com/facebook/widget/GraphObjectAdapter.java
+++ b/facebook/src/com/facebook/widget/GraphObjectAdapter.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -24,7 +26,7 @@
 import android.view.ViewStub;
 import android.widget.*;
 import com.facebook.*;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.model.GraphObject;
 import org.json.JSONObject;
 
@@ -282,7 +284,7 @@ protected View getSectionHeaderView(String sectionHeader, View convertView, View
         TextView result = (TextView) convertView;
 
         if (result == null) {
-            result = (TextView) inflater.inflate(R.layout.com_facebook_picker_list_section_header, null);
+            result = (TextView) inflater.inflate(MobageFacebookResources.layout("com_facebook_picker_list_section_header"), null);
         }
 
         result.setText(sectionHeader);
@@ -305,26 +307,26 @@ private View getActivityCircleView(View convertView, ViewGroup parent) {
         View result = convertView;
 
         if (result == null) {
-            result = inflater.inflate(R.layout.com_facebook_picker_activity_circle_row, null);
+            result = inflater.inflate(MobageFacebookResources.layout("com_facebook_picker_activity_circle_row"), null);
         }
-        ProgressBar activityCircle = (ProgressBar) result.findViewById(R.id.com_facebook_picker_row_activity_circle);
+        ProgressBar activityCircle = (ProgressBar) result.findViewById(MobageFacebookResources.id("com_facebook_picker_row_activity_circle"));
         activityCircle.setVisibility(View.VISIBLE);
 
         return result;
     }
 
     protected int getGraphObjectRowLayoutId(T graphObject) {
-        return R.layout.com_facebook_picker_list_row;
+        return MobageFacebookResources.layout("com_facebook_picker_list_row");
     }
 
     protected int getDefaultPicture() {
-        return R.drawable.com_facebook_profile_default_icon;
+        return MobageFacebookResources.drawable("com_facebook_profile_default_icon");
     }
 
     protected View createGraphObjectView(T graphObject, View convertView) {
         View result = inflater.inflate(getGraphObjectRowLayoutId(graphObject), null);
 
-        ViewStub checkboxStub = (ViewStub) result.findViewById(R.id.com_facebook_picker_checkbox_stub);
+        ViewStub checkboxStub = (ViewStub) result.findViewById(MobageFacebookResources.id("com_facebook_picker_checkbox_stub"));
         if (checkboxStub != null) {
             if (!getShowCheckbox()) {
                 checkboxStub.setVisibility(View.GONE);
@@ -334,7 +336,7 @@ protected View createGraphObjectView(T graphObject, View convertView) {
             }
         }
 
-        ViewStub profilePicStub = (ViewStub) result.findViewById(R.id.com_facebook_picker_profile_pic_stub);
+        ViewStub profilePicStub = (ViewStub) result.findViewById(MobageFacebookResources.id("com_facebook_picker_profile_pic_stub"));
         if (!getShowPicture()) {
             profilePicStub.setVisibility(View.GONE);
         } else {
@@ -350,13 +352,13 @@ protected void populateGraphObjectView(View view, T graphObject) {
         view.setTag(id);
 
         CharSequence title = getTitleOfGraphObject(graphObject);
-        TextView titleView = (TextView) view.findViewById(R.id.com_facebook_picker_title);
+        TextView titleView = (TextView) view.findViewById(MobageFacebookResources.id("com_facebook_picker_title"));
         if (titleView != null) {
             titleView.setText(title, TextView.BufferType.SPANNABLE);
         }
 
         CharSequence subtitle = getSubTitleOfGraphObject(graphObject);
-        TextView subtitleView = (TextView) view.findViewById(R.id.picker_subtitle);
+        TextView subtitleView = (TextView) view.findViewById(MobageFacebookResources.id("picker_subtitle"));
         if (subtitleView != null) {
             if (subtitle != null) {
                 subtitleView.setText(subtitle, TextView.BufferType.SPANNABLE);
@@ -367,7 +369,7 @@ protected void populateGraphObjectView(View view, T graphObject) {
         }
 
         if (getShowCheckbox()) {
-            CheckBox checkBox = (CheckBox) view.findViewById(R.id.com_facebook_picker_checkbox);
+            CheckBox checkBox = (CheckBox) view.findViewById(MobageFacebookResources.id("com_facebook_picker_checkbox"));
             updateCheckboxState(checkBox, isGraphObjectSelected(id));
         }
 
@@ -375,7 +377,7 @@ protected void populateGraphObjectView(View view, T graphObject) {
             URL pictureURL = getPictureUrlOfGraphObject(graphObject);
 
             if (pictureURL != null) {
-                ImageView profilePic = (ImageView) view.findViewById(R.id.com_facebook_picker_image);
+                ImageView profilePic = (ImageView) view.findViewById(MobageFacebookResources.id("com_facebook_picker_image"));
 
                 // See if we have already pre-fetched this; if not, download it.
                 if (prefetchedPictureCache.containsKey(id)) {
@@ -425,7 +427,7 @@ void updateCheckboxState(CheckBox checkBox, boolean graphObjectSelected) {
     String getPictureFieldSpecifier() {
         // How big is our image?
         View view = createGraphObjectView(null, null);
-        ImageView picture = (ImageView) view.findViewById(R.id.com_facebook_picker_image);
+        ImageView picture = (ImageView) view.findViewById(MobageFacebookResources.id("com_facebook_picker_image"));
         if (picture == null) {
             return null;
         }
diff --git a/facebook/src/com/facebook/widget/LoginButton.java b/facebook/src/com/facebook/widget/LoginButton.java
index 818f6f9b7..08f35b5e6 100644
--- a/facebook/src/com/facebook/widget/LoginButton.java
+++ b/facebook/src/com/facebook/widget/LoginButton.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -30,7 +32,7 @@
 import android.view.View;
 import android.widget.Button;
 import com.facebook.*;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.model.GraphUser;
 import com.facebook.internal.SessionAuthorizationType;
 import com.facebook.internal.SessionTracker;
@@ -201,24 +203,24 @@ public LoginButton(Context context, AttributeSet attrs) {
             // apparently there's no method of setting a default style in xml,
             // so in case the users do not explicitly specify a style, we need
             // to use sensible defaults.
-            this.setTextColor(getResources().getColor(R.color.com_facebook_loginview_text_color));
+            this.setTextColor(getResources().getColor(MobageFacebookResources.color("com_facebook_loginview_text_color")));
             this.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                    getResources().getDimension(R.dimen.com_facebook_loginview_text_size));
-            this.setPadding(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_left),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_top),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_right),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_bottom));
-            this.setWidth(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_width));
-            this.setHeight(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_height));
+                    getResources().getDimension(MobageFacebookResources.dimen("com_facebook_loginview_text_size")));
+            this.setPadding(getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_loginview_padding_left")),
+                    getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_loginview_padding_top")),
+                    getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_loginview_padding_right")),
+                    getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_loginview_padding_bottom")));
+            this.setWidth(getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_loginview_width")));
+            this.setHeight(getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_loginview_height")));
             this.setGravity(Gravity.CENTER);
             if (isInEditMode()) {
                 // cannot use a drawable in edit mode, so setting the background color instead
                 // of a background resource.
-                this.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
+                this.setBackgroundColor(getResources().getColor(MobageFacebookResources.color("com_facebook_blue")));
                 // hardcoding in edit mode as getResources().getString() doesn't seem to work in IntelliJ
                 loginText = "Log in";
             } else {
-                this.setBackgroundResource(R.drawable.com_facebook_loginbutton_blue);
+                this.setBackgroundResource(MobageFacebookResources.drawable("com_facebook_loginbutton_blue"));
             }
         }
         parseAttributes(attrs);
@@ -516,21 +518,21 @@ void setProperties(LoginButtonProperties properties) {
     }
 
     private void parseAttributes(AttributeSet attrs) {
-        TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.com_facebook_login_view);
-        confirmLogout = a.getBoolean(R.styleable.com_facebook_login_view_confirm_logout, true);
-        fetchUserInfo = a.getBoolean(R.styleable.com_facebook_login_view_fetch_user_info, true);
-        loginText = a.getString(R.styleable.com_facebook_login_view_login_text);
-        logoutText = a.getString(R.styleable.com_facebook_login_view_logout_text);
+        TypedArray a = getContext().obtainStyledAttributes(attrs, MobageFacebookResources.convertToArray(MobageFacebookResources.styleable("com_facebook_login_view")));
+        confirmLogout = a.getBoolean(MobageFacebookResources.styleable("com_facebook_login_view_confirm_logout"), true);
+        fetchUserInfo = a.getBoolean(MobageFacebookResources.styleable("com_facebook_login_view_fetch_user_info"), true);
+        loginText = a.getString(MobageFacebookResources.styleable("com_facebook_login_view_login_text"));
+        logoutText = a.getString(MobageFacebookResources.styleable("com_facebook_login_view_logout_text"));
         a.recycle();
     }
 
     private void setButtonText() {
         if (sessionTracker != null && sessionTracker.getOpenSession() != null) {
             setText((logoutText != null) ? logoutText :
-                    getResources().getString(R.string.com_facebook_loginview_log_out_button));
+                    getResources().getString(MobageFacebookResources.string("com_facebook_loginview_log_out_button")));
         } else {
             setText((loginText != null) ? loginText :
-                    getResources().getString(R.string.com_facebook_loginview_log_in_button));
+                    getResources().getString(MobageFacebookResources.string("com_facebook_loginview_log_in_button")));
         }
     }
 
@@ -593,13 +595,13 @@ public void onClick(View v) {
                 // If the Session is currently open, it must mean we need to log out
                 if (confirmLogout) {
                     // Create a confirmation dialog
-                    String logout = getResources().getString(R.string.com_facebook_loginview_log_out_action);
-                    String cancel = getResources().getString(R.string.com_facebook_loginview_cancel_action);
+                    String logout = getResources().getString(MobageFacebookResources.string("com_facebook_loginview_log_out_action"));
+                    String cancel = getResources().getString(MobageFacebookResources.string("com_facebook_loginview_cancel_action"));
                     String message;
                     if (user != null && user.getName() != null) {
-                        message = String.format(getResources().getString(R.string.com_facebook_loginview_logged_in_as), user.getName());
+                        message = String.format(getResources().getString(MobageFacebookResources.string("com_facebook_loginview_logged_in_as")), user.getName());
                     } else {
-                        message = getResources().getString(R.string.com_facebook_loginview_logged_in_using_facebook);
+                        message = getResources().getString(MobageFacebookResources.string("com_facebook_loginview_logged_in_using_facebook"));
                     }
                     AlertDialog.Builder builder = new AlertDialog.Builder(context);
                     builder.setMessage(message)
diff --git a/facebook/src/com/facebook/widget/PickerFragment.java b/facebook/src/com/facebook/widget/PickerFragment.java
index c084cc0ad..3cffd39c7 100644
--- a/facebook/src/com/facebook/widget/PickerFragment.java
+++ b/facebook/src/com/facebook/widget/PickerFragment.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -33,7 +35,7 @@
 import android.view.animation.AlphaAnimation;
 import android.widget.*;
 import com.facebook.*;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.model.GraphObject;
 import com.facebook.internal.SessionTracker;
 
@@ -126,20 +128,20 @@ public boolean includeItem(T graphObject) {
     @Override
     public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState) {
         super.onInflate(activity, attrs, savedInstanceState);
-        TypedArray a = activity.obtainStyledAttributes(attrs, R.styleable.com_facebook_picker_fragment);
+        TypedArray a = activity.obtainStyledAttributes(attrs, MobageFacebookResources.convertToArray(MobageFacebookResources.styleable("com_facebook_picker_fragment")));
 
-        setShowPictures(a.getBoolean(R.styleable.com_facebook_picker_fragment_show_pictures, showPictures));
-        String extraFieldsString = a.getString(R.styleable.com_facebook_picker_fragment_extra_fields);
+        setShowPictures(a.getBoolean(MobageFacebookResources.styleable("com_facebook_picker_fragment_show_pictures"), showPictures));
+        String extraFieldsString = a.getString(MobageFacebookResources.styleable("com_facebook_picker_fragment_extra_fields"));
         if (extraFieldsString != null) {
             String[] strings = extraFieldsString.split(",");
             setExtraFields(Arrays.asList(strings));
         }
 
-        showTitleBar = a.getBoolean(R.styleable.com_facebook_picker_fragment_show_title_bar, showTitleBar);
-        titleText = a.getString(R.styleable.com_facebook_picker_fragment_title_text);
-        doneButtonText = a.getString(R.styleable.com_facebook_picker_fragment_done_button_text);
-        titleBarBackground = a.getDrawable(R.styleable.com_facebook_picker_fragment_title_bar_background);
-        doneButtonBackground = a.getDrawable(R.styleable.com_facebook_picker_fragment_done_button_background);
+        showTitleBar = a.getBoolean(MobageFacebookResources.styleable("com_facebook_picker_fragment_show_title_bar"), showTitleBar);
+        titleText = a.getString(MobageFacebookResources.styleable("com_facebook_picker_fragment_title_text"));
+        doneButtonText = a.getString(MobageFacebookResources.styleable("com_facebook_picker_fragment_done_button_text"));
+        titleBarBackground = a.getDrawable(MobageFacebookResources.styleable("com_facebook_picker_fragment_title_bar_background"));
+        doneButtonBackground = a.getDrawable(MobageFacebookResources.styleable("com_facebook_picker_fragment_done_button_background"));
 
         a.recycle();
     }
@@ -148,7 +150,7 @@ public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanc
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         ViewGroup view = (ViewGroup) inflater.inflate(layout, container, false);
 
-        listView = (ListView) view.findViewById(R.id.com_facebook_picker_list_view);
+        listView = (ListView) view.findViewById(MobageFacebookResources.id("com_facebook_picker_list_view"));
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
@@ -167,7 +169,7 @@ public boolean onLongClick(View v) {
         listView.setOnScrollListener(onScrollListener);
         listView.setAdapter(adapter);
 
-        activityCircle = (ProgressBar) view.findViewById(R.id.com_facebook_picker_activity_circle);
+        activityCircle = (ProgressBar) view.findViewById(MobageFacebookResources.id("com_facebook_picker_activity_circle"));
 
         return view;
     }
@@ -526,7 +528,7 @@ String getDefaultTitleText() {
     }
 
     String getDefaultDoneButtonText() {
-        return getString(R.string.com_facebook_picker_done_button_text);
+        return getString(MobageFacebookResources.string("com_facebook_picker_done_button_text"));
     }
 
     void displayActivityCircle() {
@@ -598,21 +600,21 @@ private void setPickerFragmentSettingsFromBundle(Bundle inState) {
     }
 
     private void inflateTitleBar(ViewGroup view) {
-        ViewStub stub = (ViewStub) view.findViewById(R.id.com_facebook_picker_title_bar_stub);
+        ViewStub stub = (ViewStub) view.findViewById(MobageFacebookResources.id("com_facebook_picker_title_bar_stub"));
         if (stub != null) {
             View titleBar = stub.inflate();
 
             final RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(
                     RelativeLayout.LayoutParams.FILL_PARENT,
                     RelativeLayout.LayoutParams.FILL_PARENT);
-            layoutParams.addRule(RelativeLayout.BELOW, R.id.com_facebook_picker_title_bar);
+            layoutParams.addRule(RelativeLayout.BELOW, MobageFacebookResources.id("com_facebook_picker_title_bar"));
             listView.setLayoutParams(layoutParams);
 
             if (titleBarBackground != null) {
                 titleBar.setBackgroundDrawable(titleBarBackground);
             }
 
-            doneButton = (Button) view.findViewById(R.id.com_facebook_picker_done_button);
+            doneButton = (Button) view.findViewById(MobageFacebookResources.id("com_facebook_picker_done_button"));
             if (doneButton != null) {
                 doneButton.setOnClickListener(new View.OnClickListener() {
                     @Override
@@ -632,7 +634,7 @@ public void onClick(View v) {
                 }
             }
 
-            titleTextView = (TextView) view.findViewById(R.id.com_facebook_picker_title);
+            titleTextView = (TextView) view.findViewById(MobageFacebookResources.id("com_facebook_picker_title"));
             if (titleTextView != null) {
                 if (getTitleText() != null) {
                     titleTextView.setText(getTitleText());
diff --git a/facebook/src/com/facebook/widget/PlacePickerFragment.java b/facebook/src/com/facebook/widget/PlacePickerFragment.java
index 0ae78c0fa..50d547dc4 100644
--- a/facebook/src/com/facebook/widget/PlacePickerFragment.java
+++ b/facebook/src/com/facebook/widget/PlacePickerFragment.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -34,7 +36,7 @@
 import android.widget.ListView;
 import android.widget.RelativeLayout;
 import com.facebook.*;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.model.GraphPlace;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
@@ -109,7 +111,7 @@ public PlacePickerFragment() {
      *             configuration information for the Fragment.
      */
     public PlacePickerFragment(Bundle args) {
-        super(GraphPlace.class, R.layout.com_facebook_placepickerfragment, args);
+        super(GraphPlace.class, MobageFacebookResources.layout("com_facebook_placepickerfragment"), args);
         setPlacePickerSettingsFromBundle(args);
     }
 
@@ -244,14 +246,14 @@ public void setSettingsFromBundle(Bundle inState) {
     @Override
     public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState) {
         super.onInflate(activity, attrs, savedInstanceState);
-        TypedArray a = activity.obtainStyledAttributes(attrs, R.styleable.com_facebook_place_picker_fragment);
+        TypedArray a = activity.obtainStyledAttributes(attrs, MobageFacebookResources.convertToArray(MobageFacebookResources.styleable("com_facebook_place_picker_fragment")));
 
-        setRadiusInMeters(a.getInt(R.styleable.com_facebook_place_picker_fragment_radius_in_meters, radiusInMeters));
-        setResultsLimit(a.getInt(R.styleable.com_facebook_place_picker_fragment_results_limit, resultsLimit));
-        if (a.hasValue(R.styleable.com_facebook_place_picker_fragment_results_limit)) {
-            setSearchText(a.getString(R.styleable.com_facebook_place_picker_fragment_search_text));
+        setRadiusInMeters(a.getInt(MobageFacebookResources.styleable("com_facebook_place_picker_fragment_radius_in_meters"), radiusInMeters));
+        setResultsLimit(a.getInt(MobageFacebookResources.styleable("com_facebook_place_picker_fragment_results_limit"), resultsLimit));
+        if (a.hasValue(MobageFacebookResources.styleable("com_facebook_place_picker_fragment_results_limit"))) {
+            setSearchText(a.getString(MobageFacebookResources.styleable("com_facebook_place_picker_fragment_search_text")));
         }
-        showSearchBox = a.getBoolean(R.styleable.com_facebook_place_picker_fragment_show_search_box, showSearchBox);
+        showSearchBox = a.getBoolean(MobageFacebookResources.styleable("com_facebook_place_picker_fragment_show_search_box"), showSearchBox);
 
         a.recycle();
     }
@@ -262,7 +264,7 @@ public void onActivityCreated(final Bundle savedInstanceState) {
 
         ViewGroup view = (ViewGroup) getView();
         if (showSearchBox) {
-            ViewStub stub = (ViewStub) view.findViewById(R.id.com_facebook_placepickerfragment_search_box_stub);
+            ViewStub stub = (ViewStub) view.findViewById(MobageFacebookResources.id("com_facebook_placepickerfragment_search_box_stub"));
             if (stub != null) {
                 searchBox = (EditText) stub.inflate();
 
@@ -270,17 +272,17 @@ public void onActivityCreated(final Bundle savedInstanceState) {
                 RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(
                         RelativeLayout.LayoutParams.FILL_PARENT,
                         RelativeLayout.LayoutParams.FILL_PARENT);
-                layoutParams.addRule(RelativeLayout.BELOW, R.id.search_box);
+                layoutParams.addRule(RelativeLayout.BELOW, MobageFacebookResources.id("search_box"));
 
-                ListView listView = (ListView) view.findViewById(R.id.com_facebook_picker_list_view);
+                ListView listView = (ListView) view.findViewById(MobageFacebookResources.id("com_facebook_picker_list_view"));
                 listView.setLayoutParams(layoutParams);
 
                 // If we need to, put the search box under the title bar.
-                if (view.findViewById(R.id.com_facebook_picker_title_bar) != null) {
+                if (view.findViewById(MobageFacebookResources.id("com_facebook_picker_title_bar")) != null) {
                     layoutParams = new RelativeLayout.LayoutParams(
                             RelativeLayout.LayoutParams.FILL_PARENT,
                             RelativeLayout.LayoutParams.WRAP_CONTENT);
-                    layoutParams.addRule(RelativeLayout.BELOW, R.id.com_facebook_picker_title_bar);
+                    layoutParams.addRule(RelativeLayout.BELOW, MobageFacebookResources.id("com_facebook_picker_title_bar"));
 
                     searchBox.setLayoutParams(layoutParams);
                 }
@@ -335,7 +337,7 @@ Request getRequestForLoadData(Session session) {
 
     @Override
     String getDefaultTitleText() {
-        return getString(R.string.com_facebook_nearby);
+        return getString(MobageFacebookResources.string("com_facebook_nearby"));
     }
 
     @Override
@@ -349,23 +351,23 @@ protected CharSequence getSubTitleOfGraphObject(GraphPlace graphObject) {
 
                 String result = null;
                 if (category != null && wereHereCount != null) {
-                    result = getString(R.string.com_facebook_placepicker_subtitle_format, category, wereHereCount);
+                    result = getString(MobageFacebookResources.string("com_facebook_placepicker_subtitle_format"), category, wereHereCount);
                 } else if (category == null && wereHereCount != null) {
-                    result = getString(R.string.com_facebook_placepicker_subtitle_were_here_only_format, wereHereCount);
+                    result = getString(MobageFacebookResources.string("com_facebook_placepicker_subtitle_were_here_only_format"), wereHereCount);
                 } else if (category != null && wereHereCount == null) {
-                    result = getString(R.string.com_facebook_placepicker_subtitle_catetory_only_format, category);
+                    result = getString(MobageFacebookResources.string("com_facebook_placepicker_subtitle_catetory_only_format"), category);
                 }
                 return result;
             }
 
             @Override
             protected int getGraphObjectRowLayoutId(GraphPlace graphObject) {
-                return R.layout.com_facebook_placepickerfragment_list_row;
+                return MobageFacebookResources.layout("com_facebook_placepickerfragment_list_row");
             }
 
             @Override
             protected int getDefaultPicture() {
-                return R.drawable.com_facebook_place_default_icon;
+                return MobageFacebookResources.drawable("com_facebook_place_default_icon");
             }
 
         };
diff --git a/facebook/src/com/facebook/widget/ProfilePictureView.java b/facebook/src/com/facebook/widget/ProfilePictureView.java
index b6878588b..79e682539 100644
--- a/facebook/src/com/facebook/widget/ProfilePictureView.java
+++ b/facebook/src/com/facebook/widget/ProfilePictureView.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -29,7 +31,7 @@
 import android.widget.ImageView;
 import com.facebook.FacebookException;
 import com.facebook.LoggingBehavior;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 
@@ -372,9 +374,9 @@ private void initialize(Context context) {
     }
 
     private void parseAttributes(AttributeSet attrs) {
-        TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.com_facebook_profile_picture_view);
-        setPresetSize(a.getInt(R.styleable.com_facebook_profile_picture_view_preset_size, CUSTOM));
-        isCropped = a.getBoolean(R.styleable.com_facebook_profile_picture_view_is_cropped, IS_CROPPED_DEFAULT_VALUE);
+        TypedArray a = getContext().obtainStyledAttributes(attrs, MobageFacebookResources.convertToArray(MobageFacebookResources.styleable("com_facebook_profile_picture_view")));
+        setPresetSize(a.getInt(MobageFacebookResources.styleable("com_facebook_profile_picture_view_preset_size"), CUSTOM));
+        isCropped = a.getBoolean(MobageFacebookResources.styleable("com_facebook_profile_picture_view_is_cropped"), IS_CROPPED_DEFAULT_VALUE);
         a.recycle();
     }
 
@@ -393,8 +395,8 @@ private void refreshImage(boolean force) {
 
     private void setBlankProfilePicture() {
         int blankImageResource = isCropped() ?
-                R.drawable.com_facebook_profile_picture_blank_square :
-                R.drawable.com_facebook_profile_picture_blank_portrait;
+                MobageFacebookResources.drawable("com_facebook_profile_picture_blank_square") :
+                MobageFacebookResources.drawable("com_facebook_profile_picture_blank_portrait");
         setImageBitmap( BitmapFactory.decodeResource(getResources(), blankImageResource));
     }
 
@@ -496,19 +498,19 @@ private int getPresetSizeInPixels(boolean forcePreset) {
         int dimensionId;
         switch (presetSizeType) {
             case SMALL:
-                dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_small;
+                dimensionId = MobageFacebookResources.dimen("com_facebook_profilepictureview_preset_size_small");
                 break;
             case NORMAL:
-                dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_normal;
+                dimensionId = MobageFacebookResources.dimen("com_facebook_profilepictureview_preset_size_normal");
                 break;
             case LARGE:
-                dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_large;
+                dimensionId = MobageFacebookResources.dimen("com_facebook_profilepictureview_preset_size_large");
                 break;
             case CUSTOM:
                 if (!forcePreset) {
                     return ImageRequest.UNSPECIFIED_DIMENSION;
                 } else {
-                    dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_normal;
+                    dimensionId = MobageFacebookResources.dimen("com_facebook_profilepictureview_preset_size_normal");
                     break;
                 }
             default:
diff --git a/facebook/src/com/facebook/widget/UserSettingsFragment.java b/facebook/src/com/facebook/widget/UserSettingsFragment.java
index 3ba4359d9..4786350dc 100644
--- a/facebook/src/com/facebook/widget/UserSettingsFragment.java
+++ b/facebook/src/com/facebook/widget/UserSettingsFragment.java
@@ -1,3 +1,5 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -26,7 +28,7 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 import com.facebook.*;
-import com.facebook.android.R;
+import com.facebook.MobageFacebookResources;
 import com.facebook.model.GraphUser;
 
 import java.net.MalformedURLException;
@@ -64,19 +66,19 @@
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.com_facebook_usersettingsfragment, container, false);
-        loginButton = (LoginButton) view.findViewById(R.id.com_facebook_usersettingsfragment_login_button);
+        View view = inflater.inflate(MobageFacebookResources.layout("com_facebook_usersettingsfragment"), container, false);
+        loginButton = (LoginButton) view.findViewById(MobageFacebookResources.id("com_facebook_usersettingsfragment_login_button"));
         loginButton.setProperties(loginButtonProperties);
         loginButton.setFragment(this);
         Session session = getSession();
         if (session != null && !session.equals(Session.getActiveSession())) {
             loginButton.setSession(session);
         }
-        connectedStateLabel = (TextView) view.findViewById(R.id.com_facebook_usersettingsfragment_profile_name);
+        connectedStateLabel = (TextView) view.findViewById(MobageFacebookResources.id("com_facebook_usersettingsfragment_profile_name"));
         
         // if no background is set for some reason, then default to Facebook blue
         if (view.getBackground() == null) {
-            view.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
+            view.setBackgroundColor(getResources().getColor(MobageFacebookResources.color("com_facebook_blue")));
         } else {
             view.getBackground().setDither(true);
         }
@@ -313,9 +315,9 @@ private void updateUI() {
             return;
         }
         if (isSessionOpen()) {
-            connectedStateLabel.setTextColor(getResources().getColor(R.color.com_facebook_usersettingsfragment_connected_text_color));
+            connectedStateLabel.setTextColor(getResources().getColor(MobageFacebookResources.color("com_facebook_usersettingsfragment_connected_text_color")));
             connectedStateLabel.setShadowLayer(1f, 0f, -1f,
-                    getResources().getColor(R.color.com_facebook_usersettingsfragment_connected_shadow_color));
+                    getResources().getColor(MobageFacebookResources.color("com_facebook_usersettingsfragment_connected_shadow_color")));
             
             if (user != null) {
                 ImageRequest request = getImageRequest();
@@ -334,19 +336,19 @@ private void updateUI() {
                 connectedStateLabel.setText(user.getName());
             } else {
                 connectedStateLabel.setText(getResources().getString(
-                        R.string.com_facebook_usersettingsfragment_logged_in));
-                Drawable noProfilePic = getResources().getDrawable(R.drawable.com_facebook_profile_default_icon);
+                        MobageFacebookResources.string("com_facebook_usersettingsfragment_logged_in")));
+                Drawable noProfilePic = getResources().getDrawable(MobageFacebookResources.drawable("com_facebook_profile_default_icon"));
                 noProfilePic.setBounds(0, 0,
-                        getResources().getDimensionPixelSize(R.dimen.com_facebook_usersettingsfragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(R.dimen.com_facebook_usersettingsfragment_profile_picture_height));
+                        getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_usersettingsfragment_profile_picture_width")),
+                        getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_usersettingsfragment_profile_picture_height")));
                 connectedStateLabel.setCompoundDrawables(null, noProfilePic, null, null);
             }
         } else {
-            int textColor = getResources().getColor(R.color.com_facebook_usersettingsfragment_not_connected_text_color);
+            int textColor = getResources().getColor(MobageFacebookResources.color("com_facebook_usersettingsfragment_not_connected_text_color"));
             connectedStateLabel.setTextColor(textColor);
             connectedStateLabel.setShadowLayer(0f, 0f, 0f, textColor);
             connectedStateLabel.setText(getResources().getString(
-                    R.string.com_facebook_usersettingsfragment_not_logged_in));
+                    MobageFacebookResources.string("com_facebook_usersettingsfragment_not_logged_in")));
             connectedStateLabel.setCompoundDrawables(null, null, null, null);
             connectedStateLabel.setTag(null);
         }
@@ -359,8 +361,8 @@ private ImageRequest getImageRequest() {
                     getActivity(),
                     ImageRequest.getProfilePictureUrl(
                             user.getId(),
-                            getResources().getDimensionPixelSize(R.dimen.com_facebook_usersettingsfragment_profile_picture_width),
-                            getResources().getDimensionPixelSize(R.dimen.com_facebook_usersettingsfragment_profile_picture_height)));
+                            getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_usersettingsfragment_profile_picture_width")),
+                            getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_usersettingsfragment_profile_picture_height"))));
 
             request = requestBuilder.setCallerTag(this)
                     .setCallback(
@@ -382,8 +384,8 @@ private void processImageResponse(String id, ImageResponse response) {
             if (bitmap != null) {
                 BitmapDrawable drawable = new BitmapDrawable(UserSettingsFragment.this.getResources(), bitmap);
                 drawable.setBounds(0, 0,
-                        getResources().getDimensionPixelSize(R.dimen.com_facebook_usersettingsfragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(R.dimen.com_facebook_usersettingsfragment_profile_picture_height));
+                        getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_usersettingsfragment_profile_picture_width")),
+                        getResources().getDimensionPixelSize(MobageFacebookResources.dimen("com_facebook_usersettingsfragment_profile_picture_height")));
                 userProfilePic = drawable;
                 userProfilePicID = id;
                 connectedStateLabel.setCompoundDrawables(null, drawable, null, null);
diff --git a/facebook/src/com/facebook/widget/WebDialog.java b/facebook/src/com/facebook/widget/WebDialog.java
index d14f0568b..ad845df48 100644
--- a/facebook/src/com/facebook/widget/WebDialog.java
+++ b/facebook/src/com/facebook/widget/WebDialog.java
@@ -1,3 +1,7 @@
+/** This file has been modified by DeNA Co., Ltd. */
+
+/** This file has been modified by DeNA Co., Ltd. */
+
 /**
  * Copyright 2010-present Facebook.
  *
@@ -186,7 +190,7 @@ public void onCancel(DialogInterface dialogInterface) {
 
         spinner = new ProgressDialog(getContext());
         spinner.requestWindowFeature(Window.FEATURE_NO_TITLE);
-        spinner.setMessage(getContext().getString(R.string.com_facebook_loading));
+        spinner.setMessage(getContext().getString(MobageFacebookResources.string("com_facebook_loading")")));
         spinner.setOnCancelListener(new OnCancelListener() {
             @Override
             public void onCancel(DialogInterface dialogInterface) {
@@ -253,7 +257,7 @@ public void onClick(View v) {
                 WebDialog.this.dismiss();
             }
         });
-        Drawable crossDrawable = getContext().getResources().getDrawable(R.drawable.com_facebook_close);
+        Drawable crossDrawable = getContext().getResources().getDrawable(MobageFacebookResources.drawable("com_facebook_close")"));
         crossImageView.setImageDrawable(crossDrawable);
         /* 'x' should not be visible while webview is loading
          * make it visible only after webview has fully loaded
