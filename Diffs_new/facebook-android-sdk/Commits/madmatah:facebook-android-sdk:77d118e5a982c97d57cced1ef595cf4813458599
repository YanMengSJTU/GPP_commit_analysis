diff --git a/examples/simple/src/com/facebook/android/BaseRequestListener.java b/examples/simple/src/com/facebook/android/BaseRequestListener.java
index f200bb34e..7aa7a3677 100644
--- a/examples/simple/src/com/facebook/android/BaseRequestListener.java
+++ b/examples/simple/src/com/facebook/android/BaseRequestListener.java
@@ -2,7 +2,7 @@
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 
 import android.util.Log;
 
@@ -30,7 +30,7 @@ public void onIOException(IOException e) {
         e.printStackTrace();
     }
 
-    public void onMalformedURLException(MalformedURLException e) {
+    public void onURISyntaxException(URISyntaxException e) {
         Log.e("Facebook", e.getMessage());
         e.printStackTrace();
     }
diff --git a/facebook/src/com/facebook/android/AsyncFacebookRunner.java b/facebook/src/com/facebook/android/AsyncFacebookRunner.java
index d5d07efa8..46af13a3a 100644
--- a/facebook/src/com/facebook/android/AsyncFacebookRunner.java
+++ b/facebook/src/com/facebook/android/AsyncFacebookRunner.java
@@ -18,7 +18,7 @@
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 
 import android.content.Context;
 import android.os.Bundle;
@@ -82,8 +82,8 @@ public void logout(final Context context, final RequestListener listener) {
                     listener.onComplete(response);
                 } catch (FileNotFoundException e) {
                     listener.onFileNotFoundException(e);
-                } catch (MalformedURLException e) {
-                    listener.onMalformedURLException(e);
+                } catch (URISyntaxException e) {
+                    listener.onURISyntaxException(e);
                 } catch (IOException e) {
                     listener.onIOException(e);
                 }
@@ -210,8 +210,8 @@ public void request(final String graphPath,
                     listener.onComplete(resp);
                 } catch (FileNotFoundException e) {
                     listener.onFileNotFoundException(e);
-                } catch (MalformedURLException e) {
-                    listener.onMalformedURLException(e);
+                } catch (URISyntaxException e) {
+                    listener.onURISyntaxException(e);
                 } catch (IOException e) {
                     listener.onIOException(e);
                 }
@@ -254,7 +254,7 @@ public void request(final String graphPath,
          * 
          * Executed by a background thread: do not update the UI in this method.
          */
-        public void onMalformedURLException(MalformedURLException e);
+        public void onURISyntaxException(URISyntaxException e);
         
         /**
          * Called when the server-side Facebook method fails.
diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index f3bd4435a..f6bc197db 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -18,7 +18,7 @@
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 
 import android.Manifest;
 import android.content.Context;
@@ -155,12 +155,12 @@ public void onCancel() {
      *            should be the same context in which the login occurred in
      *            order to clear any stored cookies
      * @throws IOException 
-     * @throws MalformedURLException 
+     * @throws URISyntaxException
      * @return JSON string representation of the auth.expireSession response 
      *            ("true" if successful)
      */
     public String logout(Context context) 
-          throws MalformedURLException, IOException {
+          throws IOException, URISyntaxException {
         Util.clearCookies(context);
         Bundle b = new Bundle();
         b.putString("method", "auth.expireSession");
@@ -192,14 +192,14 @@ public String logout(Context context)
      *            documentation: one of the parameters must be "method".
      * @throws IOException 
      *            if a network error occurs
-     * @throws MalformedURLException 
+     * @throws URISyntaxException 
      *            if accessing an invalid endpoint
      * @throws IllegalArgumentException
      *            if one of the parameters is not "method"
      * @return JSON string representation of the response
      */
     public String request(Bundle parameters) 
-          throws MalformedURLException, IOException {
+          throws IOException, URISyntaxException {
         if (!parameters.containsKey("method")) {
             throw new IllegalArgumentException("API method must be specified. "
                     + "(parameters must contain key \"method\" and value). See"
@@ -221,11 +221,11 @@ public String request(Bundle parameters)
      *            about the currently logged authenticated user, provide "me",
      *            which will fetch http://graph.facebook.com/me
      * @throws IOException 
-     * @throws MalformedURLException
+     * @throws URISyntaxException 
      * @return JSON string representation of the response
      */
     public String request(String graphPath) 
-          throws MalformedURLException, IOException {
+          throws IOException, URISyntaxException {
         return request(graphPath, new Bundle(), "GET");
     }
     
@@ -248,11 +248,11 @@ public String request(String graphPath)
      *            following graph resource:
      *            https://graph.facebook.com/search?q=facebook
      * @throws IOException 
-     * @throws MalformedURLException 
+     * @throws URISyntaxException 
      * @return JSON string representation of the response
      */
     public String request(String graphPath, Bundle parameters) 
-          throws MalformedURLException, IOException {
+          throws IOException, URISyntaxException {
         return request(graphPath, parameters, "GET");
     }
     
@@ -278,13 +278,13 @@ public String request(String graphPath, Bundle parameters)
      * @param httpMethod
      *            http verb, e.g. "GET", "POST", "DELETE"
      * @throws IOException 
-     * @throws MalformedURLException 
+     * @throws URISyntaxException 
      * @return JSON string representation of the response
      */
     public String request(String graphPath,
                           Bundle parameters, 
                           String httpMethod) 
-          throws FileNotFoundException, MalformedURLException, IOException {
+          throws FileNotFoundException, IOException, URISyntaxException {
         parameters.putString("format", "json");
         if (isSessionValid()) {
             parameters.putString(TOKEN, getAccessToken());
diff --git a/facebook/src/com/facebook/android/Util.java b/facebook/src/com/facebook/android/Util.java
index 7c36d9ebe..06731af9c 100644
--- a/facebook/src/com/facebook/android/Util.java
+++ b/facebook/src/com/facebook/android/Util.java
@@ -16,18 +16,23 @@
 
 package com.facebook.android;
 
-import java.io.BufferedOutputStream;
 import java.io.BufferedReader;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.OutputStream;
-import java.net.HttpURLConnection;
 import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 import java.net.URL;
 import java.net.URLDecoder;
 
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.client.methods.HttpUriRequest;
+import org.apache.http.entity.ByteArrayEntity;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.util.ByteArrayBuffer;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -117,7 +122,6 @@ public static Bundle parseUrl(String url) {
         }
     }
 
-    
     /**
      * Connect to an HTTP URL and return the response as a string.
      * 
@@ -128,76 +132,80 @@ public static Bundle parseUrl(String url) {
      * @param method - the HTTP method to use ("GET", "POST", etc.)
      * @param params - the query parameter for the URL (e.g. access_token=foo)
      * @return the URL contents as a String
-     * @throws MalformedURLException - if the URL format is invalid
      * @throws IOException - if a network problem occurs
+     * @throws URISyntaxException - if the URL format is invalid
      */
     public static String openUrl(String url, String method, Bundle params) 
-          throws MalformedURLException, IOException {
-    	// random string as boundary for multi-part http post
-    	String strBoundary = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
-    	String endLine = "\r\n";
-   
-    	OutputStream os;
+          throws MalformedURLException, IOException, URISyntaxException {
+     // random string as boundary for multi-part http post
+        String strBoundary = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
+        String endLine = "\r\n";
 
         if (method.equals("GET")) {
             url = url + "?" + encodeUrl(params);
         }
         Log.d("Facebook-Util", method + " URL: " + url);
-        HttpURLConnection conn = 
-            (HttpURLConnection) new URL(url).openConnection();
-        conn.setRequestProperty("User-Agent", System.getProperties().
+        DefaultHttpClient httpClient = new DefaultHttpClient();
+        httpClient.getParams().setBooleanParameter("http.protocol.expect-continue", false);
+        httpClient.getParams().setParameter("http.useragent", System.getProperties().
                 getProperty("http.agent") + " FacebookAndroidSDK");
-        if (!method.equals("GET")) {
+        HttpUriRequest request;
+        if (method.equals("GET")) {
+            request = new HttpGet(url);
+        }
+        else {
+            HttpPost postRequest = new HttpPost(url);
+            ByteArrayBuffer data = new ByteArrayBuffer(10);
+
             Bundle dataparams = new Bundle();
             for (String key : params.keySet()) {
                 if (params.getByteArray(key) != null) {
                         dataparams.putByteArray(key, params.getByteArray(key));
                 }
             }
-        	
+
             // use method override
             if (!params.containsKey("method")) {
-            	params.putString("method", method);           	
+                params.putString("method", method);
             }
             
             if (params.containsKey("access_token")) {
-            	String decoded_token = URLDecoder.decode(params.getString("access_token"));
-            	params.putString("access_token", decoded_token);
+                String decoded_token = URLDecoder.decode(params.getString("access_token"));
+                params.putString("access_token", decoded_token);
             }
-                     
-            conn.setRequestMethod("POST");
-            conn.setRequestProperty("Content-Type", "multipart/form-data;boundary="+strBoundary);
-            conn.setDoOutput(true);
-            conn.setDoInput(true);
-            conn.setRequestProperty("Connection", "Keep-Alive");
-            conn.connect();
-            os = new BufferedOutputStream(conn.getOutputStream());
             
-            os.write(("--" + strBoundary +endLine).getBytes());
-            os.write((encodePostBody(params, strBoundary)).getBytes());
-            os.write((endLine + "--" + strBoundary + endLine).getBytes());
+            appendStringToByteArrayBuffer("--" + strBoundary +endLine, data);
+            appendStringToByteArrayBuffer(encodePostBody(params, strBoundary), data);
+            appendStringToByteArrayBuffer(endLine + "--" + strBoundary + endLine, data);
             
             if (!dataparams.isEmpty()) {
-            	
-                for (String key: dataparams.keySet()){
-                    os.write(("Content-Disposition: form-data; filename=\"" + key + "\"" + endLine).getBytes());
-                    os.write(("Content-Type: content/unknown" + endLine + endLine).getBytes());
-                    os.write(dataparams.getByteArray(key));
-                    os.write((endLine + "--" + strBoundary + endLine).getBytes());
 
-                }          	
+                for (String key: dataparams.keySet()){
+                    appendStringToByteArrayBuffer("Content-Disposition: form-data; filename=\"" + key + "\"" + endLine, data);
+                    appendStringToByteArrayBuffer("Content-Type: content/unknown" + endLine + endLine, data);
+                    final byte[] dataparam = dataparams.getByteArray(key);
+                    data.append(dataparam, 0, dataparam.length);
+                    appendStringToByteArrayBuffer(endLine + "--" + strBoundary + endLine, data);
+                }
             }
-            os.flush();
-        }
-        
-        String response = "";
-        try {
-        	response = read(conn.getInputStream());
-        } catch (FileNotFoundException e) {
-            // Error Stream contains JSON that we can parse to a FB error
-            response = read(conn.getErrorStream());
+
+            ByteArrayEntity entity = new ByteArrayEntity(data.buffer());
+            postRequest.removeHeaders("Content-Length");
+            postRequest.setHeader("Content-Type", "multipart/form-data;boundary="+strBoundary);
+            postRequest.setEntity(entity);
+            request = postRequest;
         }
-        return response;
+
+        HttpResponse httpResponse  = httpClient.execute(request);
+        HttpEntity entity = httpResponse.getEntity();
+        String response = read(entity.getContent());
+        entity.consumeContent();
+        return (response);
+    }
+
+    private static void appendStringToByteArrayBuffer(String s, ByteArrayBuffer baf)
+    {
+        baf.append(s.getBytes(), 0, s.length());
     }
 
     private static String read(InputStream in) throws IOException {
diff --git a/tests/src/com/facebook/android/tests/Tests.java b/tests/src/com/facebook/android/tests/Tests.java
index 7cf762b3c..ef8f2a45d 100644
--- a/tests/src/com/facebook/android/tests/Tests.java
+++ b/tests/src/com/facebook/android/tests/Tests.java
@@ -2,7 +2,7 @@
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 import java.net.URLEncoder;
 
 import org.json.JSONObject;
@@ -501,7 +501,8 @@ public void onIOException(IOException e) {
             e.printStackTrace();
         }
 
-        public void onMalformedURLException(MalformedURLException e) {
+        public void onURISyntaxException(URISyntaxException e)
+        {
             e.printStackTrace();
         }
     }
