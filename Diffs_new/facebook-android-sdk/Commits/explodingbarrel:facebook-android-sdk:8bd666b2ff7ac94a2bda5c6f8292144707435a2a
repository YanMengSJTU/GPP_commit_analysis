diff --git a/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java b/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java
index e7041dc85..c60845786 100644
--- a/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java
+++ b/facebook/src/com/explodingbarrel/webview/WebViewFullScreenActivity.java
@@ -14,6 +14,9 @@
 import org.json.JSONObject;
 import org.json.JSONArray;
 
+import java.util.Map;
+import java.util.TreeMap;
+
 import com.google.android.vending.expansion.downloader.*;
 
  
@@ -24,6 +27,23 @@
     
 	private WebView FullScreenWebView;
 	
+	class BadgeView
+	{
+		public RelativeLayout Layout = null;
+		public ImageView Image = null;
+		public TextView Text = null;
+		
+		public BadgeView( RelativeLayout layout, ImageView image, TextView text )
+		{
+			this.Layout = layout;
+			this.Image = image;
+			this.Text = text;
+		}
+	}
+	
+	private Map<Integer, BadgeView> Badges = new TreeMap<Integer, BadgeView>();
+	
+	
 	private class InternalWebViewClient extends WebViewClient {
 	    @Override
 	    public boolean shouldOverrideUrlLoading(WebView view, String url) {
@@ -35,7 +55,63 @@ public void onScaleChanged(WebView view, float oldScale, float newScale) {
 	    }
 	}
 	
-	private RelativeLayout CreateURLTab( final String url, String image, int backgroundColour, String badgeImage )
+	public class BadgeJavaScriptInterface
+	{
+		WebViewFullScreenActivity WebView;
+
+		BadgeJavaScriptInterface(WebViewFullScreenActivity webView)
+		{
+	        this.WebView = webView;
+	    }
+
+	    public void setBadge(int id, String value)
+	    {
+	    	this.WebView.updateBadge( id, value );
+	    }
+	}
+	
+	public class WebViewScriptInterface
+	{
+		WebViewFullScreenActivity WebView;
+
+		WebViewScriptInterface(WebViewFullScreenActivity webView)
+		{
+	        this.WebView = webView;
+	    }
+
+	    public void close()
+	    {
+	    	this.WebView.finish();
+	    }
+	}
+	
+	private void updateBadge( int id, final String value )
+	{
+		Log.d( TAG, "FullScreenWebViewActivity updateBadge : id = " + id + " value = " + value );
+    	if( this.Badges.containsKey( id ) == true )
+    	{
+    		final BadgeView badge = this.Badges.get( id );
+    		badge.Layout.post( new Runnable()
+    		{
+    			public void run()
+    			{
+    	    		if( ( value != null ) && ( value.length() > 0 ) )
+    	    		{
+    	    			badge.Text.setText( value );
+    	    			badge.Layout.setVisibility(View.VISIBLE);
+    	    		}
+    	    		else
+    	    		{
+    	    			badge.Text.setText( "" );
+    	    			badge.Layout.setVisibility(View.INVISIBLE);
+    	    		}
+    			}
+    		});
+    		
+    	}
+	}
+	
+	private RelativeLayout CreateURLTab( final String url, String image, int backgroundColour, int badgeId, String badgeImage, int badgeLeftMargin, int badgeTopMargin )
 	{
 		RelativeLayout tabLayout = new RelativeLayout( this );
 		
@@ -43,7 +119,7 @@ private RelativeLayout CreateURLTab( final String url, String image, int backgro
 		button.setBackgroundColor(backgroundColour);
 		button.setImageResource( Helpers.getIdResource(this, image) );
 		RelativeLayout.LayoutParams buttonLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-		buttonLayout.addRule(RelativeLayout.CENTER_IN_PARENT, 1);
+		buttonLayout.addRule(RelativeLayout.CENTER_IN_PARENT);
 		button.setLayoutParams(buttonLayout);
 		button.setOnClickListener( new OnClickListener()
 		{
@@ -59,12 +135,44 @@ public void onClick(View arg0)
 		
 		if( ( badgeImage != null ) && ( badgeImage.length() > 0 ) )
 		{
-			ImageView badge = new ImageView( this );
-			badge.setImageResource( Helpers.getIdResource(this, badgeImage) );
-			RelativeLayout.LayoutParams badgeLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-			//badgeLayout.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
-			badge.setLayoutParams( badgeLayout );
-			tabLayout.addView( badge );
+			RelativeLayout badgeFrame = new RelativeLayout( this );
+			RelativeLayout.LayoutParams badgeFrameLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
+			if( badgeLeftMargin < 0 )
+			{
+				badgeLeftMargin = 0;
+			}
+			if( badgeTopMargin < 0 )
+			{
+				badgeTopMargin = 0;
+			}
+			badgeFrameLayout.leftMargin = badgeLeftMargin;
+			badgeFrameLayout.topMargin = badgeTopMargin;
+			badgeFrame.setLayoutParams( badgeFrameLayout );
+			
+			RelativeLayout badge = new RelativeLayout( this );
+				RelativeLayout.LayoutParams badgeLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
+				badge.setLayoutParams( badgeLayout );
+				
+					ImageView badgeImageView = new ImageView( this );
+					badgeImageView.setImageResource( Helpers.getIdResource(this, badgeImage) );
+					RelativeLayout.LayoutParams badgeImageLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
+					badgeImageLayout.addRule(RelativeLayout.CENTER_IN_PARENT);
+					badgeImageView.setLayoutParams( badgeImageLayout );
+					badge.addView( badgeImageView );
+					
+					TextView badgeTextView = new TextView( this );
+					badgeTextView.setText( "0" );
+					badgeTextView.setTextColor( 0xffffffff );
+					RelativeLayout.LayoutParams badgeTextLayout = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
+					badgeTextLayout.addRule(RelativeLayout.CENTER_IN_PARENT);
+					badgeTextView.setLayoutParams( badgeTextLayout );
+					badge.addView( badgeTextView );
+				
+				badgeFrame.addView( badge );
+				
+			tabLayout.addView( badgeFrame );
+			
+			this.Badges.put( badgeId, new BadgeView( badgeFrame, badgeImageView, badgeTextView ) );
 		}
 		
 		return tabLayout;
@@ -86,6 +194,7 @@ public void onCreate(Bundle savedInstanceState)
 		int titleBarBackgroundColour = 0xff000000;
 		int titleBarTextColour = 0xffffffff;
 		boolean titleBarOnTop = true;
+		boolean titleBarExpandToFit = true;
 		
 		int targetWidth = 1024;
 		
@@ -102,6 +211,7 @@ public void onCreate(Bundle savedInstanceState)
     			titleBarTextColour = titleBar.getInt( "TextColour" );
     			titleBarOnTop = titleBar.getBoolean( "OnTop" );
     			titleBarBadgeImage = titleBar.getString( "BadgeImage" );
+    			titleBarExpandToFit = titleBar.getBoolean( "ExpandToFit" );
     		}
     		
     		targetWidth = config.getInt( "targetWidth" );
@@ -110,6 +220,11 @@ public void onCreate(Bundle savedInstanceState)
         {
         }
         
+        float weight = 0.0f;
+        if( titleBarExpandToFit == true )
+        {
+        	weight = 1.0f;
+        }
 
 		RelativeLayout fullFrame = new RelativeLayout( this );
         RelativeLayout.LayoutParams fullFrameLayout = new RelativeLayout.LayoutParams( LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
@@ -127,7 +242,7 @@ public void onCreate(Bundle savedInstanceState)
         ImageButton closeButton = new ImageButton(this);
         closeButton.setBackgroundColor(titleBarBackgroundColour);
         closeButton.setImageResource( Helpers.getIdResource(this, titleBarCloseImage) );
-        closeButton.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, 1.0f));
+        closeButton.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, weight));
         closeButton.setOnClickListener( new OnClickListener()
 		{
 			@Override
@@ -146,30 +261,54 @@ public void onClick(View arg0)
 	    		JSONArray tabs = config.getJSONArray( "tabs" );
 	    		if( tabs != null )
 	    		{
+	    			Log.d( TAG, "FullScreenWebViewActivity Total Tabs : " + tabs.length() );
 	    			for( int i = 0; i< tabs.length(); i++ )
 	    			{
 	    				JSONObject tab = tabs.getJSONObject( i );
 	    				
-	    				final String tabUrl = tab.getString( "Url" );
-	    				final String tabImage = tab.getString( "Image" );
-	    				final String tabBadgeId = tab.getString( "BadgeId" );
+	    				String tabUrl = tab.getString( "Url" );
+	    				String tabImage = tab.getString( "Image" );
+	    				
+	    				int tabBadgeId = -1;
+	    				int tabBadgeLeftMargin = 0;
+	    				int tabBadgeTopMargin = 0;
+
+	    				JSONObject badge = tab.getJSONObject( "Badge" );
+	    				if( badge != null )
+	    				{
+	    					tabBadgeId = badge.getInt( "Id" );
+	    					tabBadgeLeftMargin = badge.getInt( "LeftMargin" );
+	    					tabBadgeTopMargin = badge.getInt( "TopMargin" );
+	    				}
 	    				
-	    				String badge = "";
-	    				if( ( tabBadgeId != null ) && ( tabBadgeId.length() > 0 ) )
+	    				String badgeImage = "";
+	    				if( tabBadgeId != -1 )
 	    				{
-	    					badge = titleBarBadgeImage;
+	    					badgeImage = titleBarBadgeImage;
 	    				}
 	    				
-	    				Log.d( TAG, "FullScreenWebViewActivity Adding Tab : url = " + tabUrl + " image = " + tabImage + " badge = " + badge );
+	    				Log.d( TAG, "FullScreenWebViewActivity Adding Tab : url = " + tabUrl + " image = " + tabImage + " tabBadgeId = " + tabBadgeId + " badge = " + badgeImage + " offset = (" + tabBadgeLeftMargin + "," + tabBadgeTopMargin + ")");
 	    				
-	    				RelativeLayout tabButton = CreateURLTab( tabUrl, tabImage, titleBarBackgroundColour, badge );
-	    				tabButton.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, 1.0f));
+	    				RelativeLayout tabButton = CreateURLTab( tabUrl,
+	    															tabImage,
+	    															titleBarBackgroundColour,
+	    															tabBadgeId, 
+	    															badgeImage,
+	    															tabBadgeLeftMargin,
+	    															tabBadgeTopMargin );
+	    				tabButton.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, weight));
 	    				titleBarFrame.addView( tabButton );
+	    				if( tabBadgeId != -1 )
+	    				{
+	    					updateBadge( tabBadgeId, null );
+	    				}
+	    				 
 	    			}
 	    		}
 	        }
 	        catch (org.json.JSONException ex)
 	        {
+	        	Log.d( TAG, "FullScreenWebViewActivity JSON Error in Tabs : " + ex.getMessage() );
 	        }
         }
         
@@ -181,6 +320,9 @@ public void onClick(View arg0)
 		webSettings.setLoadWithOverviewMode(true);
 		webSettings.setUseWideViewPort(true);
 		
+		this.FullScreenWebView.addJavascriptInterface(new BadgeJavaScriptInterface(this), "Badges");
+		this.FullScreenWebView.addJavascriptInterface(new WebViewScriptInterface(this), "WebView");
+		
 		//Support for diff screens
 		DisplayMetrics metrics = new DisplayMetrics();
 	    getWindowManager().getDefaultDisplay().getMetrics(metrics);
