diff --git a/facebook/src/com/facebook/widget/OnlyLoginButton.java b/facebook/src/com/facebook/widget/OnlyLoginButton.java
index 65a615de2..540ab1d9b 100644
--- a/facebook/src/com/facebook/widget/OnlyLoginButton.java
+++ b/facebook/src/com/facebook/widget/OnlyLoginButton.java
@@ -16,9 +16,6 @@
 
 package com.facebook.widget;
 
-import java.util.Collections;
-import java.util.List;
-
 import android.app.Activity;
 import android.app.Fragment;
 import android.content.Context;
@@ -44,6 +41,9 @@
 import com.facebook.internal.Utility;
 import com.facebook.model.GraphUser;
 
+import java.util.Collections;
+import java.util.List;
+
 /**
  * A Log In/Log Out button that maintains session state and logs
  * in/out for the app.
@@ -63,6 +63,8 @@
     private GraphUser user = null;
     private Session userInfoSession = null; // the Session used to fetch the current user info
     private boolean fetchUserInfo;
+    private String loginText;
+    private String logoutText;
     private UserInfoChangedCallback userInfoChangedCallback;
     private Fragment parentFragment;
     private LoginButtonProperties properties = new LoginButtonProperties();
@@ -199,28 +201,28 @@ public OnlyLoginButton(Context context) {
     public OnlyLoginButton(Context context, AttributeSet attrs) {
         super(context, attrs);
 
-        if (attrs.getStyleAttribute() == 0) {
+        if (attrs.getStyleAttribute() == 0 && !isInEditMode()) {
             // apparently there's no method of setting a default style in xml,
             // so in case the users do not explicitly specify a style, we need
             // to use sensible defaults.
             this.setTextColor(getResources().getColor(R.color.com_facebook_loginview_text_color));
             this.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                     getResources().getDimension(R.dimen.com_facebook_loginview_text_size));
-            this.setPadding(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_left),
+           /* this.setPadding(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_left),
                     getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_top),
                     getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_right),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_bottom));
-            this.setWidth(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_width));
-            this.setHeight(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_height));
+                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_bottom));*/
+            //this.setWidth(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_width));
+            //this.setHeight(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_height));
             this.setGravity(Gravity.CENTER);
-            if (isInEditMode()) {
+           // if (isInEditMode()) {
                 // cannot use a drawable in edit mode, so setting the background color instead
                 // of a background resource.
-                this.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
-            } else {
+             //   this.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
+            //} else {
                 //this.setBackgroundResource(R.drawable.com_facebook_loginbutton_blue);
-                this.setBackgroundResource(R.drawable.com_facebook_button_only_login);
-            }
+                //this.setBackgroundColor(Color.argb(0xFF, 0x46, 0x7a, 0xb7));
+            //}
         }
         parseAttributes(attrs);
         if (!isInEditMode()) {
@@ -518,12 +520,20 @@ void setProperties(LoginButtonProperties properties) {
 
     private void parseAttributes(AttributeSet attrs) {
         TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.com_facebook_login_view);
+        loginText = a.getString(R.styleable.com_facebook_login_view_login_text);
+        logoutText = a.getString(R.styleable.com_facebook_login_view_logout_text);
         a.recycle();
     }
 
     private void setButtonText()
     {
-        setText("");
+        if (sessionTracker != null && sessionTracker.getOpenSession() != null) {
+            setText((logoutText != null) ? logoutText :
+                            getResources().getString(R.string.com_facebook_loginview_log_out_button));
+        } else {
+            setText((loginText != null) ? loginText :
+                            getResources().getString(R.string.com_facebook_loginview_log_in_button));
+        }
     }
 
     private boolean initializeActiveSessionWithCachedToken(Context context) {
