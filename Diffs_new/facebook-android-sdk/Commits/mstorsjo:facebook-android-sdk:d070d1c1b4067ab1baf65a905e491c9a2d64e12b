diff --git a/facebook/res/layout/com_facebook_picker_title_bar.xml b/facebook/res/layout/com_facebook_picker_title_bar.xml
index ecadecac9..09515b942 100644
--- a/facebook/res/layout/com_facebook_picker_title_bar.xml
+++ b/facebook/res/layout/com_facebook_picker_title_bar.xml
@@ -43,6 +43,28 @@
             android:layout_height="fill_parent"
             android:background="#40000000"
             android:layout_alignLeft="@id/com_facebook_picker_done_button"/>
+    <Button
+            android:id="@+id/com_facebook_picker_clear_button"
+            android:layout_width="wrap_content"
+            android:minWidth="55dp"
+            android:layout_height="48dp"
+            android:background="@drawable/com_facebook_top_button"
+            android:paddingLeft="5dip"
+            android:paddingRight="5dip"
+            android:textColor="#ffffff"
+            android:textSize="14sp"
+            android:shadowColor="#66000000"
+            android:shadowDx="1"
+            android:shadowDy="1"
+            android:shadowRadius="1"
+            android:layout_toLeftOf="@id/com_facebook_picker_divider"
+            />
+    <LinearLayout
+            android:id="@+id/com_facebook_picker_divider2"
+            android:layout_width="1dp"
+            android:layout_height="fill_parent"
+            android:background="#40000000"
+            android:layout_alignLeft="@id/com_facebook_picker_clear_button"/>
     <TextView
             android:id="@+id/com_facebook_picker_title"
             android:layout_width="fill_parent"
@@ -59,5 +81,5 @@
             android:shadowRadius="1"
             android:layout_marginLeft="10dip"
             android:layout_marginRight="10dip"
-            android:layout_toLeftOf="@id/com_facebook_picker_divider"/>
+            android:layout_toLeftOf="@id/com_facebook_picker_divider2"/>
 </RelativeLayout>
diff --git a/facebook/res/values/attrs.xml b/facebook/res/values/attrs.xml
index 21c3bacef..358b97529 100644
--- a/facebook/res/values/attrs.xml
+++ b/facebook/res/values/attrs.xml
@@ -20,10 +20,13 @@
         <attr name="show_pictures" format="boolean"/>
         <attr name="extra_fields" format="string"/>
         <attr name="show_title_bar" format="boolean" />
+        <attr name="show_clear_button" format="boolean" />
         <attr name="title_text" format="string" />
         <attr name="done_button_text" format="string" />
+        <attr name="clear_button_text" format="string" />
         <attr name="title_bar_background" format="reference" />
         <attr name="done_button_background" format="reference" />
+        <attr name="clear_button_background" format="reference" />
     </declare-styleable>
     <declare-styleable name="com_facebook_friend_picker_fragment">
         <attr name="multi_select" format="boolean"/>
diff --git a/facebook/res/values/strings.xml b/facebook/res/values/strings.xml
index 8b09d84c1..98172ee17 100644
--- a/facebook/res/values/strings.xml
+++ b/facebook/res/values/strings.xml
@@ -31,6 +31,7 @@
     <string name="com_facebook_placepicker_subtitle_catetory_only_format">%1$s</string>
     <string name="com_facebook_placepicker_subtitle_were_here_only_format">%1$,d were here</string>
     <string name="com_facebook_picker_done_button_text">Done</string>
+    <string name="com_facebook_picker_clear_button_text">Clear</string>
     <string name="com_facebook_choose_friends">Choose Friends</string>
     <string name="com_facebook_nearby">Nearby</string>
     <string name="com_facebook_loading">Loading...</string>
diff --git a/facebook/src/com/facebook/widget/PickerFragment.java b/facebook/src/com/facebook/widget/PickerFragment.java
index c084cc0ad..180638689 100644
--- a/facebook/src/com/facebook/widget/PickerFragment.java
+++ b/facebook/src/com/facebook/widget/PickerFragment.java
@@ -65,6 +65,11 @@
      * picker should display a title bar with a Done button.
      */
     public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.facebook.widget.PickerFragment.ShowTitleBar";
+    /**
+     * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
+     * picker should display a Clear Button in the title bar.
+     */
+    public static final String SHOW_CLEAR_BUTTON_BUNDLE_KEY = "com.facebook.widget.PickerFragment.ShowClearButton";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the title bar.
@@ -75,6 +80,11 @@
      * display in the Done btuton.
      */
     public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.facebook.widget.PickerFragment.DoneButtonText";
+    /**
+     * The key for a String parameter in the fragment's Intent bundle to indicate the text to
+     * display in the Clear button.
+     */
+    public static final String CLEAR_BUTTON_TEXT_BUNDLE_KEY = "com.facebook.widget.PickerFragment.ClearButtonText";
 
     private static final String SELECTION_BUNDLE_KEY = "com.facebook.android.PickerFragment.Selection";
     private static final String ACTIVITY_CIRCLE_SHOW_KEY = "com.facebook.android.PickerFragment.ActivityCircleShown";
@@ -88,6 +98,7 @@
     private GraphObjectFilter<T> filter;
     private boolean showPictures = true;
     private boolean showTitleBar = true;
+    private boolean showClearButton = false;
     private ListView listView;
     HashSet<String> extraFields = new HashSet<String>();
     GraphObjectAdapter<T> adapter;
@@ -98,10 +109,13 @@
     private SessionTracker sessionTracker;
     private String titleText;
     private String doneButtonText;
+    private String clearButtonText;
     private TextView titleTextView;
     private Button doneButton;
+    private Button clearButton;
     private Drawable titleBarBackground;
     private Drawable doneButtonBackground;
+    private Drawable clearButtonBackground;
 
     PickerFragment(Class<T> graphObjectClass, int layout, Bundle args) {
         this.graphObjectClass = graphObjectClass;
@@ -136,10 +150,13 @@ public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanc
         }
 
         showTitleBar = a.getBoolean(R.styleable.com_facebook_picker_fragment_show_title_bar, showTitleBar);
+        showClearButton = a.getBoolean(R.styleable.com_facebook_picker_fragment_show_clear_button, showClearButton);
         titleText = a.getString(R.styleable.com_facebook_picker_fragment_title_text);
         doneButtonText = a.getString(R.styleable.com_facebook_picker_fragment_done_button_text);
+        clearButtonText = a.getString(R.styleable.com_facebook_picker_fragment_clear_button_text);
         titleBarBackground = a.getDrawable(R.styleable.com_facebook_picker_fragment_title_bar_background);
         doneButtonBackground = a.getDrawable(R.styleable.com_facebook_picker_fragment_done_button_background);
+        clearButtonBackground = a.getDrawable(R.styleable.com_facebook_picker_fragment_clear_button_background);
 
         a.recycle();
     }
@@ -410,6 +427,16 @@ public void setShowTitleBar(boolean showTitleBar) {
         this.showTitleBar = showTitleBar;
     }
 
+    /**
+     * Sets whether to show a Clear button in the title bar. This must be
+     * called prior to the Fragment going through its creation lifecycle to have an effect.
+     *
+     * @param showClearButton true if a clear button should be displayed, false if not
+     */
+    public void setShowClearButton(boolean showClearButton) {
+        this.showClearButton = showClearButton;
+    }
+
     /**
      * Gets whether to show a title bar with a Done button. The default is true.
      *
@@ -419,6 +446,15 @@ public boolean getShowTitleBar() {
         return showTitleBar;
     }
 
+    /**
+     * Gets whether to show a Clear button in the title bar. The default is false.
+     *
+     * @return true if a Clear button will be shown, false if not.
+     */
+    public boolean getShowClearButton() {
+        return showClearButton;
+    }
+
     /**
      * Sets the text to show in the title bar, if a title bar is to be shown. This must be
      * called prior to the Fragment going through its creation lifecycle to have an effect, or
@@ -453,6 +489,17 @@ public void setDoneButtonText(String doneButtonText) {
         this.doneButtonText = doneButtonText;
     }
 
+    /**
+     * Sets the text to show in the Clear button, if a title bar is to be shown. This must be
+     * called prior to the Fragment going through its creation lifecycle to have an effect, or
+     * the default will be used.
+     *
+     * @param clearButtonText the text to show in the Clear button
+     */
+    public void setClearButtonText(String clearButtonText) {
+        this.clearButtonText = clearButtonText;
+    }
+
     /**
      * Gets the text to show in the Done button, if a title bar is to be shown.
      *
@@ -465,6 +512,18 @@ public String getDoneButtonText() {
         return doneButtonText;
     }
 
+    /**
+     * Gets the text to show in the Clear button, if a title bar is to be shown.
+     *
+     * @return the text to show in the Clear button
+     */
+    public String getClearButtonText() {
+        if (clearButtonText == null) {
+            clearButtonText = getDefaultClearButtonText();
+        }
+        return clearButtonText;
+    }
+
     /**
      * Causes the picker to load data from the service and display it to the user.
      *
@@ -506,8 +565,10 @@ void saveSettingsToBundle(Bundle outState) {
             outState.putString(EXTRA_FIELDS_BUNDLE_KEY, TextUtils.join(",", extraFields));
         }
         outState.putBoolean(SHOW_TITLE_BAR_BUNDLE_KEY, showTitleBar);
+        outState.putBoolean(SHOW_CLEAR_BUTTON_BUNDLE_KEY, showClearButton);
         outState.putString(TITLE_TEXT_BUNDLE_KEY, titleText);
         outState.putString(DONE_BUTTON_TEXT_BUNDLE_KEY, doneButtonText);
+        outState.putString(CLEAR_BUTTON_TEXT_BUNDLE_KEY, clearButtonText);
     }
 
     abstract Request getRequestForLoadData(Session session);
@@ -529,6 +590,10 @@ String getDefaultDoneButtonText() {
         return getString(R.string.com_facebook_picker_done_button_text);
     }
 
+    String getDefaultClearButtonText() {
+        return getString(R.string.com_facebook_picker_clear_button_text);
+    }
+
     void displayActivityCircle() {
         if (activityCircle != null) {
             layoutActivityCircle();
@@ -580,6 +645,7 @@ private void setPickerFragmentSettingsFromBundle(Bundle inState) {
                 setExtraFields(Arrays.asList(strings));
             }
             showTitleBar = inState.getBoolean(SHOW_TITLE_BAR_BUNDLE_KEY, showTitleBar);
+            showClearButton = inState.getBoolean(SHOW_CLEAR_BUTTON_BUNDLE_KEY, showClearButton);
             String titleTextString = inState.getString(TITLE_TEXT_BUNDLE_KEY);
             if (titleTextString != null) {
                 titleText = titleTextString;
@@ -594,6 +660,13 @@ private void setPickerFragmentSettingsFromBundle(Bundle inState) {
                     doneButton.setText(doneButtonText);
                 }
             }
+            String clearButtonTextString = inState.getString(CLEAR_BUTTON_TEXT_BUNDLE_KEY);
+            if (clearButtonTextString != null) {
+                clearButtonText = clearButtonTextString;
+                if (clearButton != null) {
+                    clearButton.setText(clearButtonText);
+                }
+            }
         }
     }
 
@@ -632,6 +705,31 @@ public void onClick(View v) {
                 }
             }
 
+            clearButton = (Button) view.findViewById(R.id.com_facebook_picker_clear_button);
+            if (clearButton != null) {
+                clearButton.setVisibility(showClearButton ? View.VISIBLE : View.INVISIBLE);
+                view.findViewById(R.id.com_facebook_picker_divider2).setVisibility(clearButton.getVisibility());
+                clearButton.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        boolean wasSelection = !selectionStrategy.isEmpty();
+                        selectionStrategy.clear();
+                        if (wasSelection && onSelectionChangedListener != null) {
+                            onSelectionChangedListener.onSelectionChanged(PickerFragment.this);
+                        }
+                        adapter.notifyDataSetChanged();
+                    }
+                });
+
+                if (getClearButtonText() != null) {
+                    clearButton.setText(getClearButtonText());
+                }
+
+                if (clearButtonBackground != null) {
+                    clearButton.setBackgroundDrawable(clearButtonBackground);
+                }
+            }
+
             titleTextView = (TextView) view.findViewById(R.id.com_facebook_picker_title);
             if (titleTextView != null) {
                 if (getTitleText() != null) {
