diff --git a/facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java b/facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java
index bd855fba7..be131f0d2 100644
--- a/facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java
+++ b/facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java
@@ -347,7 +347,7 @@ public void onCompleted(GraphResponse response) {
     }
 
     private void presentConfirmation(final String userId,
-                                     final Utility.PermissionsPair permissions,
+                                     final Utility.PermissionsLists permissions,
                                      final String accessToken,
                                      final String name,
                                      final Date expirationTime,
@@ -403,6 +403,7 @@ private void onSuccess(
                 null,
                 null,
                 null,
+                null,
                 expirationTime,
                 null,
                 dataAccessExpirationTimeDate);
@@ -425,7 +426,7 @@ public void onCompleted(GraphResponse response) {
                         }
 
                         String userId;
-                        Utility.PermissionsPair permissions;
+                        Utility.PermissionsLists permissions;
                         String name;
                         try {
                             JSONObject jsonObject = response.getJSONObject();
@@ -467,7 +468,7 @@ public void onCompleted(GraphResponse response) {
     }
 
     private void completeLogin(String userId,
-                               Utility.PermissionsPair permissions,
+                               Utility.PermissionsLists permissions,
                                String accessToken,
                                Date expirationTime,
                                Date dataAccessExpirationTime) {
@@ -477,6 +478,7 @@ private void completeLogin(String userId,
                 userId,
                 permissions.getGrantedPermissions(),
                 permissions.getDeclinedPermissions(),
+                permissions.getExpiredPermissions(),
                 AccessTokenSource.DEVICE_AUTH,
                 expirationTime,
                 null,
diff --git a/facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
index 1c53b9ac1..a8f2de675 100644
--- a/facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
@@ -81,6 +81,7 @@ public void onSuccess(
             String userId,
             Collection<String> permissions,
             Collection<String> declinedPermissions,
+            Collection<String> expiredPermissions,
             AccessTokenSource accessTokenSource,
             Date expirationTime,
             Date lastRefreshTime,
@@ -91,6 +92,7 @@ public void onSuccess(
                 userId,
                 permissions,
                 declinedPermissions,
+                expiredPermissions,
                 accessTokenSource,
                 expirationTime,
                 lastRefreshTime,
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginManager.java b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
index ff114d189..dab4184d9 100644
--- a/facebook-common/src/main/java/com/facebook/login/LoginManager.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
@@ -781,6 +781,7 @@ public void completed(Bundle result) {
                                         permissions,
                                         null,
                                         null,
+                                        null,
                                         expires,
                                         null,
                                         dataAccessExpirationTime);
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java
index 72df9f8f6..322be1097 100644
--- a/facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java
@@ -140,6 +140,7 @@ static AccessToken createAccessTokenFromNativeLogin(
                 userId,
                 permissions,
                 null,
+                null,
                 source,
                 expires,
                 new Date(),
@@ -170,6 +171,12 @@ public static AccessToken createAccessTokenFromWebBundle(
             declinedPermissions = new ArrayList<String>(
                     Arrays.asList(deniedPermissions.split(",")));
         }
+        String expiredScopes = bundle.getString("expired_scopes");
+        List<String> expiredPermissions = null;
+        if (!Utility.isNullOrEmpty(expiredScopes)) {
+            expiredPermissions = new ArrayList<String>(
+                    Arrays.asList(expiredScopes.split(",")));
+        }
 
         if (Utility.isNullOrEmpty(token)) {
             return null;
@@ -184,6 +191,7 @@ public static AccessToken createAccessTokenFromWebBundle(
                 userId,
                 requestedPermissions,
                 declinedPermissions,
+                expiredPermissions,
                 source,
                 expires,
                 new Date(),
diff --git a/facebook-core/src/main/java/com/facebook/AccessToken.java b/facebook-core/src/main/java/com/facebook/AccessToken.java
index 81832db78..7c40e94f0 100644
--- a/facebook-core/src/main/java/com/facebook/AccessToken.java
+++ b/facebook-core/src/main/java/com/facebook/AccessToken.java
@@ -68,6 +68,7 @@
     private static final String EXPIRES_AT_KEY = "expires_at";
     private static final String PERMISSIONS_KEY = "permissions";
     private static final String DECLINED_PERMISSIONS_KEY = "declined_permissions";
+    private static final String EXPIRED_PERMISSIONS_KEY = "expired_permissions";
     private static final String TOKEN_KEY = "token";
     private static final String SOURCE_KEY = "source";
     private static final String LAST_REFRESH_KEY = "last_refresh";
@@ -76,6 +77,7 @@
     private final Date expires;
     private final Set<String> permissions;
     private final Set<String> declinedPermissions;
+    private final Set<String> expiredPermissions;
     private final String token;
     private final AccessTokenSource source;
     private final Date lastRefresh;
@@ -98,6 +100,8 @@
      *                            is unknown
      * @param declinedPermissions the permissions that were declined when the token was obtained;
      *                            may be null if permission set is unknown
+     * @param expiredPermissions  the permissions that were expired when the token was obtained;
+     *                            may be null if permission set is unknown
      * @param accessTokenSource   an enum indicating how the token was originally obtained (in most
      *                            cases, this will be either AccessTokenSource.FACEBOOK_APPLICATION
      *                            or AccessTokenSource.WEB_VIEW); if null, FACEBOOK_APPLICATION is
@@ -120,6 +124,8 @@ public AccessToken(
             @Nullable
             final Collection<String> declinedPermissions,
             @Nullable
+            final Collection<String> expiredPermissions,
+            @Nullable
             final AccessTokenSource accessTokenSource,
             @Nullable
             final Date expirationTime,
@@ -139,6 +145,10 @@ public AccessToken(
                 declinedPermissions != null
                         ? new HashSet<String>(declinedPermissions)
                         : new HashSet<String>());
+        this.expiredPermissions = Collections.unmodifiableSet(
+                expiredPermissions != null
+                        ? new HashSet<String>(expiredPermissions)
+                        : new HashSet<String>());
         this.token = accessToken;
         this.source = accessTokenSource != null ? accessTokenSource : DEFAULT_ACCESS_TOKEN_SOURCE;
         this.lastRefresh = lastRefreshTime != null ? lastRefreshTime : DEFAULT_LAST_REFRESH_TIME;
@@ -270,6 +280,15 @@ public Date getDataAccessExpirationTime() {
         return this.declinedPermissions;
     }
 
+    /**
+     * Gets the list of permissions that were expired with this access token.
+     *
+     * @return a read-only list of strings representing the expired permissions
+     */
+    public Set<String> getExpiredPermissions() {
+        return this.expiredPermissions;
+    }
+
     /**
      * Gets the {@link AccessTokenSource} indicating how this access token was obtained.
      *
@@ -413,6 +432,7 @@ public boolean equals(Object other) {
         return expires.equals(o.expires) &&
                 permissions.equals(o.permissions) &&
                 declinedPermissions.equals(o.declinedPermissions) &&
+                expiredPermissions.equals(o.expiredPermissions) &&
                 token.equals(o.token) &&
                 source == o.source &&
                 lastRefresh.equals(o.lastRefresh) &&
@@ -430,6 +450,7 @@ public int hashCode() {
         result = result * 31 + expires.hashCode();
         result = result * 31 + permissions.hashCode();
         result = result * 31 + declinedPermissions.hashCode();
+        result = result * 31 + expiredPermissions.hashCode();
         result = result * 31 + token.hashCode();
         result = result * 31 + source.hashCode();
         result = result * 31 + lastRefresh.hashCode();
@@ -464,6 +485,7 @@ static AccessToken createFromRefresh(AccessToken current, Bundle bundle) {
                 current.getUserId(),
                 current.getPermissions(),
                 current.getDeclinedPermissions(),
+                current.getExpiredPermissions(),
                 current.source,
                 expires,
                 new Date(),
@@ -477,6 +499,7 @@ static AccessToken createExpired(AccessToken current) {
                 current.getUserId(),
                 current.getPermissions(),
                 current.getDeclinedPermissions(),
+                current.getExpiredPermissions(),
                 current.source,
                 new Date(),
                 new Date(),
@@ -490,6 +513,9 @@ static AccessToken createFromLegacyCache(Bundle bundle) {
         List<String> declinedPermissions = getPermissionsFromBundle(
                 bundle,
                 LegacyTokenHelper.DECLINED_PERMISSIONS_KEY);
+        List<String> expiredPermissions = getPermissionsFromBundle(
+                bundle,
+                LegacyTokenHelper.EXPIRED_PERMISSIONS_KEY);
 
         String applicationId = LegacyTokenHelper.getApplicationId(bundle);
         if (Utility.isNullOrEmpty(applicationId)) {
@@ -513,6 +539,7 @@ static AccessToken createFromLegacyCache(Bundle bundle) {
                 userId,
                 permissions,
                 declinedPermissions,
+                expiredPermissions,
                 LegacyTokenHelper.getSource(bundle),
                 LegacyTokenHelper.getDate(
                         bundle,
@@ -564,6 +591,8 @@ JSONObject toJSONObject() throws JSONException {
         jsonObject.put(PERMISSIONS_KEY, permissionsArray);
         JSONArray declinedPermissionsArray = new JSONArray(declinedPermissions);
         jsonObject.put(DECLINED_PERMISSIONS_KEY, declinedPermissionsArray);
+        JSONArray expiredPermissionsArray = new JSONArray(expiredPermissions);
+        jsonObject.put(EXPIRED_PERMISSIONS_KEY, expiredPermissionsArray);
         jsonObject.put(LAST_REFRESH_KEY, lastRefresh.getTime());
         jsonObject.put(SOURCE_KEY, source.name());
         jsonObject.put(APPLICATION_ID_KEY, applicationId);
@@ -583,6 +612,7 @@ static AccessToken createFromJSONObject(JSONObject jsonObject) throws JSONExcept
         Date expiresAt = new Date(jsonObject.getLong(EXPIRES_AT_KEY));
         JSONArray permissionsArray = jsonObject.getJSONArray(PERMISSIONS_KEY);
         JSONArray declinedPermissionsArray = jsonObject.getJSONArray(DECLINED_PERMISSIONS_KEY);
+        JSONArray expiredPermissionsArray = jsonObject.getJSONArray(EXPIRED_PERMISSIONS_KEY);
         Date lastRefresh = new Date(jsonObject.getLong(LAST_REFRESH_KEY));
         AccessTokenSource source = AccessTokenSource.valueOf(jsonObject.getString(SOURCE_KEY));
         String applicationId = jsonObject.getString(APPLICATION_ID_KEY);
@@ -596,6 +626,7 @@ static AccessToken createFromJSONObject(JSONObject jsonObject) throws JSONExcept
                 userId,
                 Utility.jsonArrayToStringList(permissionsArray),
                 Utility.jsonArrayToStringList(declinedPermissionsArray),
+                Utility.jsonArrayToStringList(expiredPermissionsArray),
                 source,
                 expiresAt,
                 lastRefresh,
@@ -623,6 +654,7 @@ private static AccessToken createFromBundle(
                 userId,
                 requestedPermissions,
                 null,
+                null,
                 source,
                 expires,
                 new Date(),
@@ -659,6 +691,10 @@ private void appendPermissions(StringBuilder builder) {
         parcel.readStringList(permissionsList);
         this.declinedPermissions = Collections.unmodifiableSet(
                 new HashSet<String>(permissionsList));
+        permissionsList.clear();
+        parcel.readStringList(permissionsList);
+        this.expiredPermissions = Collections.unmodifiableSet(
+                new HashSet<String>(permissionsList));
         this.token = parcel.readString();
         this.source = AccessTokenSource.valueOf(parcel.readString());
         this.lastRefresh = new Date(parcel.readLong());
@@ -677,6 +713,7 @@ public void writeToParcel(Parcel dest, int flags) {
         dest.writeLong(expires.getTime());
         dest.writeStringList(new ArrayList<String>(permissions));
         dest.writeStringList(new ArrayList<String>(declinedPermissions));
+        dest.writeStringList(new ArrayList<String>(expiredPermissions));
         dest.writeString(token);
         dest.writeString(source.name());
         dest.writeLong(lastRefresh.getTime());
diff --git a/facebook-core/src/main/java/com/facebook/AccessTokenManager.java b/facebook-core/src/main/java/com/facebook/AccessTokenManager.java
index c226dd7e0..d6ce1538b 100644
--- a/facebook-core/src/main/java/com/facebook/AccessTokenManager.java
+++ b/facebook-core/src/main/java/com/facebook/AccessTokenManager.java
@@ -263,6 +263,7 @@ private void refreshCurrentAccessTokenImpl(
 
         final Set<String> permissions = new HashSet<>();
         final Set<String> declinedPermissions = new HashSet<>();
+        final Set<String> expiredPermissions = new HashSet<>();
         final AtomicBoolean permissionsCallSucceeded = new AtomicBoolean(false);
         final RefreshResult refreshResult = new RefreshResult();
 
@@ -293,6 +294,8 @@ public void onCompleted(GraphResponse response) {
                                     permissions.add(permission);
                                 } else if (status.equals("declined")) {
                                     declinedPermissions.add(permission);
+                                } else if (status.equals("expired")) {
+                                    expiredPermissions.add(permission);
                                 } else {
                                     Log.w(TAG, "Unexpected status: " + status);
                                 }
@@ -347,6 +350,8 @@ public void onBatchCompleted(GraphRequestBatch batch) {
                                     ? permissions : accessToken.getPermissions(),
                             permissionsCallSucceeded.get()
                                     ? declinedPermissions : accessToken.getDeclinedPermissions(),
+                            permissionsCallSucceeded.get()
+                                    ? expiredPermissions : accessToken.getExpiredPermissions(),
                             accessToken.getSource(),
                             refreshResult.expiresAt != 0
                                     ? new Date(refreshResult.expiresAt * 1000l)
diff --git a/facebook-core/src/main/java/com/facebook/LegacyTokenHelper.java b/facebook-core/src/main/java/com/facebook/LegacyTokenHelper.java
index 723955891..78d40671b 100644
--- a/facebook-core/src/main/java/com/facebook/LegacyTokenHelper.java
+++ b/facebook-core/src/main/java/com/facebook/LegacyTokenHelper.java
@@ -80,6 +80,9 @@
     public static final String DECLINED_PERMISSIONS_KEY =
             "com.facebook.TokenCachingStrategy.DeclinedPermissions";
 
+    public static final String EXPIRED_PERMISSIONS_KEY =
+            "com.facebook.TokenCachingStrategy.ExpiredPermissions";
+
     public static final String APPLICATION_ID_KEY =
             "com.facebook.TokenCachingStrategy.ApplicationId";
 
@@ -259,6 +262,13 @@ public static void putDeclinedPermissions(Bundle bundle, Collection<String> valu
         bundle.putStringArrayList(DECLINED_PERMISSIONS_KEY, new ArrayList<String>(value));
     }
 
+    public static void putExpiredPermissions(Bundle bundle, Collection<String> value) {
+        Validate.notNull(bundle, "bundle");
+        Validate.notNull(value, "value");
+
+        bundle.putStringArrayList(EXPIRED_PERMISSIONS_KEY, new ArrayList<String>(value));
+    }
+
     public static AccessTokenSource getSource(Bundle bundle) {
         Validate.notNull(bundle, "bundle");
         if (bundle.containsKey(TOKEN_SOURCE_KEY)) {
diff --git a/facebook-core/src/main/java/com/facebook/internal/Utility.java b/facebook-core/src/main/java/com/facebook/internal/Utility.java
index 46192f480..f2b8eb405 100644
--- a/facebook-core/src/main/java/com/facebook/internal/Utility.java
+++ b/facebook-core/src/main/java/com/facebook/internal/Utility.java
@@ -1136,16 +1136,19 @@ private static long convertBytesToGB(double bytes) {
     }
 
     /**
-     * Internal helper class that is used to hold two different permission lists (granted and
-     * declined)
+     * Internal helper class that is used to hold three different permission lists (granted,
+     * declined and expired)
      */
-    public static class PermissionsPair {
+    public static class PermissionsLists {
         List<String> grantedPermissions;
         List<String> declinedPermissions;
+        List<String> expiredPermissions;
 
-        public PermissionsPair(List<String> grantedPermissions, List<String> declinedPermissions) {
+        public PermissionsLists(List<String> grantedPermissions, List<String> declinedPermissions,
+                               List<String> expiredPermissions) {
             this.grantedPermissions = grantedPermissions;
             this.declinedPermissions = declinedPermissions;
+            this.expiredPermissions = expiredPermissions;
         }
 
         public List<String> getGrantedPermissions() {
@@ -1155,9 +1158,13 @@ public PermissionsPair(List<String> grantedPermissions, List<String> declinedPer
         public List<String> getDeclinedPermissions() {
             return declinedPermissions;
         }
+
+        public List<String> getExpiredPermissions() {
+            return expiredPermissions;
+        }
     }
 
-    public static PermissionsPair handlePermissionResponse(JSONObject result)
+    public static PermissionsLists handlePermissionResponse(JSONObject result)
         throws JSONException {
 
         JSONObject permissions = result.getJSONObject("permissions");
@@ -1165,6 +1172,7 @@ public static PermissionsPair handlePermissionResponse(JSONObject result)
         JSONArray data = permissions.getJSONArray("data");
         List<String> grantedPermissions = new ArrayList<>(data.length());
         List<String> declinedPermissions = new ArrayList<>(data.length());
+        List<String> expiredPermissions = new ArrayList<>(data.length());
 
         for (int i = 0; i < data.length(); ++i) {
             JSONObject object = data.optJSONObject(i);
@@ -1181,10 +1189,12 @@ public static PermissionsPair handlePermissionResponse(JSONObject result)
                 grantedPermissions.add(permission);
             } else if (status.equals("declined")) {
                 declinedPermissions.add(permission);
+            } else if (status.equals("expired")) {
+                expiredPermissions.add(permission);
             }
         }
 
-        return new PermissionsPair(grantedPermissions, declinedPermissions);
+        return new PermissionsLists(grantedPermissions, declinedPermissions, expiredPermissions);
     }
 
     public static String generateRandomString(int length) {
diff --git a/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java b/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java
index 416606f9f..a474afce9 100644
--- a/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java
+++ b/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java
@@ -121,6 +121,7 @@ private AccessToken getFakeAccessToken() {
                 "567",
                 null,
                 null,
+                null,
                 AccessTokenSource.TEST_USER,
                 null,
                 null,
diff --git a/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java b/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
index 5c7863268..c3a970837 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
@@ -267,6 +267,7 @@ private AccessToken createAccessToken(String tokenString, String userId) {
                 userId,
                 PERMISSIONS,
                 null,
+                null,
                 AccessTokenSource.WEB_VIEW,
                 EXPIRES,
                 LAST_REFRESH,
diff --git a/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java b/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
index a6b6552e3..23baa17fd 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
@@ -233,6 +233,7 @@ private AccessToken createAccessToken(String tokenString, String userId) {
                 userId,
                 PERMISSIONS,
                 null,
+                null,
                 AccessTokenSource.WEB_VIEW,
                 EXPIRES,
                 LAST_REFRESH,
diff --git a/facebook/src/test/java/com/facebook/AccessTokenTest.java b/facebook/src/test/java/com/facebook/AccessTokenTest.java
index 31b8ff45f..6fd8a54e8 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenTest.java
@@ -64,6 +64,7 @@ public void testNullTokenThrows() {
                     "1000",
                     Utility.arrayList("something"),
                     Utility.arrayList("something_else"),
+                    Utility.arrayList("something_else_e"),
                     AccessTokenSource.CLIENT_TOKEN,
                     new Date(),
                     new Date(),
@@ -82,6 +83,7 @@ public void testEmptyTokenThrows() {
                     "1000",
                     Utility.arrayList("something"),
                     Utility.arrayList("something_else"),
+                    Utility.arrayList("something_else_e"),
                     AccessTokenSource.CLIENT_TOKEN,
                     new Date(),
                     new Date(),
@@ -100,6 +102,7 @@ public void testNullUserIdThrows() {
                     null,
                     Utility.arrayList("something"),
                     Utility.arrayList("something_else"),
+                    Utility.arrayList("something_else_e"),
                     AccessTokenSource.CLIENT_TOKEN,
                     new Date(),
                     new Date(),
@@ -118,6 +121,7 @@ public void testEmptyUserIdThrows() {
                     "",
                     Utility.arrayList("something"),
                     Utility.arrayList("something_else"),
+                    Utility.arrayList("something_else_e"),
                     AccessTokenSource.CLIENT_TOKEN,
                     new Date(),
                     new Date(),
@@ -135,6 +139,7 @@ public void testCreateFromRefreshFailure() {
                 "1000",
                 Utility.arrayList("stream_publish"),
                 null,
+                null,
                 AccessTokenSource.WEB_VIEW,
                 null,
                 null,
@@ -158,6 +163,7 @@ public void testCreateFromRefreshFailure() {
     public void testCacheRoundtrip() {
         Set<String> permissions = Utility.hashSet("stream_publish", "go_outside_and_play");
         Set<String> declinedPermissions = Utility.hashSet("no you may not", "no soup for you");
+        Set<String> expiredPermissions = Utility.hashSet("expired", "oh no");
         String token = "AnImaginaryTokenValue";
         Date later = TestUtils.nowPlusSeconds(60);
         Date earlier = TestUtils.nowPlusSeconds(-60);
@@ -172,6 +178,7 @@ public void testCacheRoundtrip() {
         LegacyTokenHelper.putLastRefreshDate(bundle, earlier);
         LegacyTokenHelper.putPermissions(bundle, permissions);
         LegacyTokenHelper.putDeclinedPermissions(bundle, declinedPermissions);
+        LegacyTokenHelper.putExpiredPermissions(bundle, expiredPermissions);
         LegacyTokenHelper.putApplicationId(bundle, applicationId);
 
         AccessToken accessToken = AccessToken.createFromLegacyCache(bundle);
@@ -262,6 +269,7 @@ public void testRoundtripJSONObject() throws JSONException {
                 "1000",
                 Arrays.asList("permission_1", "permission_2"),
                 Arrays.asList("declined permission_1", "declined permission_2"),
+                Arrays.asList("expired permission_1", "expired permission_2"),
                 AccessTokenSource.WEB_VIEW,
                 new Date(2015, 3, 3),
                 new Date(2015, 1, 1),
@@ -282,6 +290,7 @@ public void testJSONObjectWithoutDataAccess() throws JSONException {
                 "1000",
                 Arrays.asList("permission_1", "permission_2"),
                 Arrays.asList("declined permission_1", "declined permission_2"),
+                Arrays.asList("expired permission_1", "expired permission_2"),
                 AccessTokenSource.WEB_VIEW,
                 new Date(2015, 3, 3),
                 new Date(2015, 1, 1),
@@ -304,6 +313,8 @@ public void testParceling() throws IOException {
                 Arrays.asList("permission_1", "permission_2"));
         Set<String> declinedPermissions = new HashSet<String>(
                 Collections.singletonList("permission_3"));
+        Set<String> expiredPermissions = new HashSet<String>(
+                Collections.singletonList("permission_4"));
         AccessTokenSource source = AccessTokenSource.WEB_VIEW;
         AccessToken accessToken1 = new AccessToken(
                 token,
@@ -311,6 +322,7 @@ public void testParceling() throws IOException {
                 userId,
                 permissions,
                 declinedPermissions,
+                expiredPermissions,
                 source,
                 null,
                 null,
@@ -322,6 +334,7 @@ public void testParceling() throws IOException {
         assertEquals(appId, accessToken2.getApplicationId());
         assertEquals(permissions, accessToken2.getPermissions());
         assertEquals(declinedPermissions, accessToken2.getDeclinedPermissions());
+        assertEquals(expiredPermissions, accessToken2.getExpiredPermissions());
         assertEquals(accessToken1.getExpires(), accessToken2.getExpires());
         assertEquals(accessToken1.getLastRefresh(), accessToken2.getLastRefresh());
         assertEquals(accessToken1.getUserId(), accessToken2.getUserId());
@@ -340,6 +353,7 @@ public void testPermissionsAreImmutable() {
                 "1000",
                 permissions,
                 null,
+                null,
                 AccessTokenSource.FACEBOOK_APPLICATION_WEB,
                 new Date(),
                 new Date(),
@@ -369,6 +383,7 @@ public void testCreateFromExistingTokenDefaults() {
                 null,
                 null,
                 null,
+                null,
                 null);
 
         assertEquals(token, accessToken.getToken());
@@ -387,6 +402,7 @@ public void testAccessTokenConstructor() {
         final String token = "A token of my esteem";
         final Set<String> permissions = Utility.hashSet("walk", "chew gum");
         final Set<String> declinedPermissions = Utility.hashSet("jump");
+        final Set<String> expiredPermissions = Utility.hashSet("smile");
         final Date expires = new Date(2025, 5, 3);
         final Date lastRefresh = new Date(2023, 8, 15);
         final Date dataAccessExpirationTime = new Date(2025, 5, 3);
@@ -400,6 +416,7 @@ public void testAccessTokenConstructor() {
                 userId,
                 permissions,
                 declinedPermissions,
+                expiredPermissions,
                 source,
                 expires,
                 lastRefresh,
@@ -411,6 +428,7 @@ public void testAccessTokenConstructor() {
         assertEquals(source, accessToken.getSource());
         assertEquals(permissions, accessToken.getPermissions());
         assertEquals(declinedPermissions, accessToken.getDeclinedPermissions());
+        assertEquals(expiredPermissions, accessToken.getExpiredPermissions());
         assertEquals(applicationId, accessToken.getApplicationId());
         assertEquals(userId, accessToken.getUserId());
         assertEquals(dataAccessExpirationTime, accessToken.getDataAccessExpirationTime());
diff --git a/facebook/src/test/java/com/facebook/AccessTokenTestHelper.java b/facebook/src/test/java/com/facebook/AccessTokenTestHelper.java
index 49bda1adf..4dbc1ae8b 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenTestHelper.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenTestHelper.java
@@ -35,6 +35,8 @@ public static Bundle toLegacyCacheBundle(AccessToken accessToken) {
         LegacyTokenHelper.putPermissions(bundle, accessToken.getPermissions());
         LegacyTokenHelper.putDeclinedPermissions(
                 bundle, accessToken.getDeclinedPermissions());
+        LegacyTokenHelper.putExpiredPermissions(
+                bundle, accessToken.getExpiredPermissions());
         LegacyTokenHelper.putSource(bundle, accessToken.getSource());
         LegacyTokenHelper.putDate(
                 bundle,
diff --git a/facebook/src/test/java/com/facebook/AccessTokenTrackerTest.java b/facebook/src/test/java/com/facebook/AccessTokenTrackerTest.java
index e1431441d..831f874fb 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenTrackerTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenTrackerTest.java
@@ -127,6 +127,7 @@ private AccessToken createAccessToken(String tokenString) {
                 USER_ID,
                 PERMISSIONS,
                 null,
+                null,
                 AccessTokenSource.WEB_VIEW,
                 EXPIRES,
                 LAST_REFRESH,
diff --git a/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java b/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
index 0a9cc6f53..5cf522e32 100644
--- a/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
+++ b/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
@@ -191,6 +191,9 @@ public void testCacheRoundtrip() {
         LegacyTokenHelper.putDeclinedPermissions(
                 bundle,
                 Utility.arrayList("whatever"));
+        LegacyTokenHelper.putExpiredPermissions(
+                bundle,
+                Utility.arrayList("anyway"));
         LegacyTokenHelper.putApplicationId(bundle, applicationId);
 
         cache.save(bundle);
diff --git a/facebook/src/test/java/com/facebook/login/LoginClientTest.java b/facebook/src/test/java/com/facebook/login/LoginClientTest.java
index 51c07ddef..df120579b 100644
--- a/facebook/src/test/java/com/facebook/login/LoginClientTest.java
+++ b/facebook/src/test/java/com/facebook/login/LoginClientTest.java
@@ -80,6 +80,7 @@ public void testReauthorizationWithSameFbidSucceeds() throws Exception {
                 null,
                 null,
                 null,
+                null,
                 null);
         LoginClient.Result result = LoginClient.Result.createTokenResult(request, token);
 
@@ -141,6 +142,7 @@ public void testResultParceling() {
                 null,
                 null,
                 null,
+                null,
                 null);
         LoginClient.Result result = new LoginClient.Result(
                 request,
diff --git a/facebook/src/test/java/com/facebook/login/LoginManagerTest.java b/facebook/src/test/java/com/facebook/login/LoginManagerTest.java
index 32015a518..9dae30d59 100644
--- a/facebook/src/test/java/com/facebook/login/LoginManagerTest.java
+++ b/facebook/src/test/java/com/facebook/login/LoginManagerTest.java
@@ -575,6 +575,7 @@ private AccessToken createAccessToken() {
                 USER_ID,
                 PERMISSIONS,
                 null,
+                null,
                 AccessTokenSource.WEB_VIEW,
                 EXPIRES,
                 LAST_REFRESH,
diff --git a/facebook/src/test/java/com/facebook/login/LoginResultTest.java b/facebook/src/test/java/com/facebook/login/LoginResultTest.java
index 8cd3a6673..95e8636af 100644
--- a/facebook/src/test/java/com/facebook/login/LoginResultTest.java
+++ b/facebook/src/test/java/com/facebook/login/LoginResultTest.java
@@ -54,7 +54,8 @@ public void before() throws Exception {
     @Test
     public void testInitialLogin() {
         LoginClient.Request request = createRequest(EMAIL_SET, false);
-        AccessToken accessToken = createAccessToken(PROFILE_EMAIL_SET, new HashSet<String>());
+        AccessToken accessToken = createAccessToken(PROFILE_EMAIL_SET, new HashSet<String>(),
+                new HashSet<String>());
         LoginResult result = LoginManager.computeLoginResult(request, accessToken);
         assertEquals(accessToken, result.getAccessToken());
         assertEquals(PROFILE_EMAIL_SET, result.getRecentlyGrantedPermissions());
@@ -64,7 +65,8 @@ public void testInitialLogin() {
     @Test
     public void testReAuth() {
         LoginClient.Request request = createRequest(EMAIL_SET, true);
-        AccessToken accessToken = createAccessToken(PROFILE_EMAIL_SET, new HashSet<String>());
+        AccessToken accessToken = createAccessToken(PROFILE_EMAIL_SET, new HashSet<String>(),
+                new HashSet<String>());
         LoginResult result = LoginManager.computeLoginResult(request, accessToken);
         assertEquals(accessToken, result.getAccessToken());
         assertEquals(EMAIL_SET, result.getRecentlyGrantedPermissions());
@@ -74,7 +76,8 @@ public void testReAuth() {
     @Test
     public void testDeniedPermissions() {
         LoginClient.Request request = createRequest(LIKES_EMAIL_SET, true);
-        AccessToken accessToken = createAccessToken(EMAIL_SET, new HashSet<String>());
+        AccessToken accessToken = createAccessToken(EMAIL_SET, new HashSet<String>(),
+                new HashSet<String>());
         LoginResult result = LoginManager.computeLoginResult(request, accessToken);
         assertEquals(accessToken, result.getAccessToken());
         assertEquals(EMAIL_SET, result.getRecentlyGrantedPermissions());
@@ -85,13 +88,15 @@ public void testDeniedPermissions() {
 
 
     private AccessToken createAccessToken(Set<String> permissions,
-                                          Set<String> declinedPermissions) {
+                                          Set<String> declinedPermissions,
+                                          Set<String> expiredPermissions) {
         return new AccessToken(
             "token",
             "123",
             "234",
             permissions,
             declinedPermissions,
+            expiredPermissions,
             null,
             null,
             null,
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
index 8b69463ca..124cdd247 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
@@ -218,6 +218,8 @@ public void onSwitchLoginType() {
     public Fragment getHeaderFragment(final LoginFlowState state) {
         if (state == LoginFlowState.ERROR) {
             return null;
+        } else if (state == LoginFlowState.CONFIRM_ACCOUNT_VERIFIED) {
+            return super.getHeaderFragment(state);
         } else {
             return SpaceFragment.create(
                     R.styleable.Theme_AccountKitSample_Style_reverb_content_margin_top);
