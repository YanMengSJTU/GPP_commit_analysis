diff --git a/samples/FBLoginSample/CONTRIBUTING.mdown b/samples/FBLoginSample/CONTRIBUTING.mdown
deleted file mode 100644
index bcdc79bd6..000000000
--- a/samples/FBLoginSample/CONTRIBUTING.mdown
+++ /dev/null
@@ -1,11 +0,0 @@
-Facebook welcomes contributions to our SDKs and sample apps.
-
-All contributors must sign a CLA (contributor license agreement) here:
-
-  https://developers.facebook.com/opensource/cla
-
-To contribute on behalf of your employer, sign the company CLA
-To contribute on behalf of yourself, sign the individual CLA
-
-By contributing to, you agree that your contributions will be licensed
-under the LICENSE file in the root directory of this source tree.
diff --git a/samples/FBLoginSample/LICENSE b/samples/FBLoginSample/LICENSE
deleted file mode 100644
index fb5bed214..000000000
--- a/samples/FBLoginSample/LICENSE
+++ /dev/null
@@ -1,17 +0,0 @@
-Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-copy, modify, and distribute this software in source code or binary form for use
-in connection with the web services and APIs provided by Facebook.
-
-As with any software that integrates with the Facebook platform, your use of
-this software is subject to the Facebook Developer Principles and Policies
-[http://developers.facebook.com/policy/]. This copyright notice shall be
-included in all copies or substantial portions of the software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
diff --git a/samples/FBLoginSample/README.mdown b/samples/FBLoginSample/README.mdown
deleted file mode 100644
index a4116cdd6..000000000
--- a/samples/FBLoginSample/README.mdown
+++ /dev/null
@@ -1,44 +0,0 @@
-Facebook Login Android Sample
-========================
-
-This repository contains a sample app demonstrating how to integrate with Facebook Login.
-
-Learn more about the provided sample, documentation, integrating the SDK into your app, accessing source code, and more at [https://developers.facebook.com/docs/facebook-login](https://developers.facebook.com/docs/facebook-login)
-
-Concepts Covered
--------------
-- Implementing a "Login with Facebook" Button
-- Making Graph API calls to Facebook using GraphRequest
-- Getting information regarding the logged-in persion
-- Granting permissions on login
-- Prompting for additional permissions after logging in
-- Revoking permissions
-- Basic posting to Facebook Timeline
-
-Pre-Requisites
--------------
-- Android SDK
-- Android Studio or other Gradle enabled build system
-
-Getting Started
--------------
-- Download or clone this project to your machine
-- Run the app from Andrdoid Studio. You may have to download the correct version of Gradle and Android build tools from the Android SDK Manager.
-
-Give Feedback
--------------
-Please report bugs or issues related to Facebook Login to https://developers.facebook.com/bugs/
-
-You can also join the Facebook Developers Group on Facebook (https://www.facebook.com/groups/fbdevelopers/) or ask questions on Stack Overflow (http://facebook.stackoverflow.com)
-
-Contributing
--------------
-We are able to accept contributions to the Facebook Login Sample App for Android. To contribute please do the following.
-- Follow the instructions in the [CONTRIBUTING.md](https://github.com/facebook/facebook-android-sdk/tree/master/samples/FBLoginSample/CONTRIBUTING.md).
-- Submit your pull request to the [dev](https://github.com/facebook/facebook-android-sdk/tree/dev) branch. This allows us to merge your change into our internal master and then push out the change in the next release.
-
-License
--------
-Except as otherwise noted, the Facebook Login Sample for Android is licensed under the Facebook Platform License (https://github.com/facebook/facebook-android-sdk/tree/master/samples/FBLoginSample/LICENSE).
-
-Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
diff --git a/samples/FBLoginSample/build.gradle b/samples/FBLoginSample/build.gradle
deleted file mode 100755
index 17a195c93..000000000
--- a/samples/FBLoginSample/build.gradle
+++ /dev/null
@@ -1,46 +0,0 @@
-apply plugin: 'com.android.application'
-
-android {
-    compileSdkVersion 26
-    buildToolsVersion "26.0.2"
-    defaultConfig {
-        applicationId "com.facebook.fbloginsample"
-        minSdkVersion 15
-        targetSdkVersion 26
-        versionCode 1
-        versionName "0.1"
-        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
-
-dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
-    implementation 'com.facebook.fresco:fresco:0.14.0'
-    implementation 'com.android.support:appcompat-v7:26.0.2'
-    implementation 'com.android.support:support-annotations:26.0.2'
-
-    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
-        exclude group: 'com.android.support', module: 'support-annotations'
-    })
-    testImplementation 'junit:junit:4.12'
-}
diff --git a/samples/FBLoginSample/proguard-rules.pro b/samples/FBLoginSample/proguard-rules.pro
deleted file mode 100644
index 5fd7f4073..000000000
--- a/samples/FBLoginSample/proguard-rules.pro
+++ /dev/null
@@ -1,25 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/inathan/Library/Android/sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-# Uncomment this to preserve the line number information for
-# debugging stack traces.
-#-keepattributes SourceFile,LineNumberTable
-
-# If you keep the line number information, uncomment this to
-# hide the original source file name.
-#-renamesourcefileattribute SourceFile
diff --git a/samples/FBLoginSample/src/androidTest/java/com/facebook/fbloginsample/ExampleInstrumentedTest.java b/samples/FBLoginSample/src/androidTest/java/com/facebook/fbloginsample/ExampleInstrumentedTest.java
deleted file mode 100644
index ff89ee558..000000000
--- a/samples/FBLoginSample/src/androidTest/java/com/facebook/fbloginsample/ExampleInstrumentedTest.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.content.Context;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.runner.AndroidJUnit4;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-
-import static junit.framework.Assert.assertEquals;
-
-
-/**
- * Instrumentation test, which will execute on an Android device.
- *
- * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
- */
-@RunWith(AndroidJUnit4.class)
-public class ExampleInstrumentedTest {
-    @Test
-    public void useAppContext() throws Exception {
-        // Context of the app under test.
-        Context appContext = InstrumentationRegistry.getTargetContext();
-
-        assertEquals("com.facebook.fbloginsample", appContext.getPackageName());
-    }
-}
diff --git a/samples/FBLoginSample/src/main/AndroidManifest.xml b/samples/FBLoginSample/src/main/AndroidManifest.xml
deleted file mode 100644
index e0232b0e0..000000000
--- a/samples/FBLoginSample/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-
-    package="com.facebook.fbloginsample">
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-
-    <application
-        android:name=".FBLoginSampleApp"
-        android:allowBackup="true"
-        android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_name"
-        android:roundIcon="@mipmap/ic_launcher_round"
-        android:supportsRtl="true"
-        android:theme="@style/AppTheme">
-
-        <activity android:name=".MainActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-        </activity>
-        <activity
-            android:name=".FacebookLoginActivity"
-            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation">
-        </activity>
-        <activity android:name=".PostFeedActivity"/>
-        <activity android:name=".ProfileActivity"/>
-        <activity android:name=".PermissionsActivity"/>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/facebook_app_id"/>
-    </application>
-</manifest>
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FBLoginSampleApp.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FBLoginSampleApp.java
deleted file mode 100644
index 4d3b36090..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FBLoginSampleApp.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.app.Application;
-
-import com.facebook.FacebookSdk;
-import com.facebook.drawee.backends.pipeline.Fresco;
-
-public class FBLoginSampleApp extends Application {
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-
-        Fresco.initialize(this);
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
deleted file mode 100644
index c4eec198d..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.login.LoginResult;
-import com.facebook.login.widget.LoginButton;
-
-import java.util.Arrays;
-
-public class FacebookLoginActivity extends Activity {
-    private static final String EMAIL = "email";
-    private static final String USER_POSTS = "user_posts";
-
-    private CallbackManager mCallbackManager;
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        mCallbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_facebook_login);
-        mCallbackManager = CallbackManager.Factory.create();
-
-        LoginButton mLoginButton = findViewById(R.id.login_button);
-
-        // Set the initial permissions to request from the user while logging in
-        mLoginButton.setReadPermissions(Arrays.asList(EMAIL, USER_POSTS));
-
-        // Register a callback to respond to the user
-        mLoginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {
-            @Override
-            public void onSuccess(LoginResult loginResult) {
-                setResult(RESULT_OK);
-                finish();
-            }
-
-            @Override
-            public void onCancel() {
-                setResult(RESULT_CANCELED);
-                finish();
-            }
-
-            @Override
-            public void onError(FacebookException e) {
-                // Handle exception
-            }
-        });
-    }
-
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/MainActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/MainActivity.java
deleted file mode 100644
index 18e41b8de..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/MainActivity.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-
-import com.facebook.AccessToken;
-import com.facebook.login.LoginManager;
-
-public class MainActivity extends Activity {
-
-    private static final int RESULT_PROFILE_ACTIVITY = 1;
-    private static final int RESULT_POSTS_ACTIVITY = 2;
-    private static final int RESULT_PERMISSIONS_ACTIVITY = 3;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-
-        // If MainActivity is reached without the user being logged in, redirect to the Login
-        // Activity
-        if (AccessToken.getCurrentAccessToken() == null) {
-            Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
-            startActivity(loginIntent);
-        }
-
-        // Make a button which leads to profile information of the user
-        Button gotoProfileButton = findViewById(R.id.btn_profile);
-        gotoProfileButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (AccessToken.getCurrentAccessToken() == null) {
-                    Intent profileIntent = new Intent(MainActivity.this, FacebookLoginActivity
-                            .class);
-                    startActivityForResult(profileIntent, RESULT_PROFILE_ACTIVITY);
-                } else {
-                    Intent profilentent = new Intent(MainActivity.this, ProfileActivity.class);
-                    startActivity(profilentent);
-                }
-            }
-        });
-
-        // Make a button which leads to posts made by the user
-        Button gotoPostsFeedButton = findViewById(R.id.btn_posts);
-        gotoPostsFeedButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (AccessToken.getCurrentAccessToken() == null) {
-                    Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
-                    startActivityForResult(loginIntent, RESULT_POSTS_ACTIVITY);
-                } else {
-                    Intent postsFeedIntent = new Intent(MainActivity.this, PostFeedActivity.class);
-                    startActivity(postsFeedIntent);
-                }
-            }
-        });
-
-        // Make a button which leads to request or revoke permissions
-        Button gotoPermissionsButton = findViewById(R.id.btn_permissions);
-        gotoPermissionsButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (AccessToken.getCurrentAccessToken() == null) {
-                    Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
-                    startActivityForResult(loginIntent, RESULT_PERMISSIONS_ACTIVITY);
-                } else {
-                    Intent permissionsIntent = new Intent(MainActivity.this, PermissionsActivity
-                            .class);
-                    startActivity(permissionsIntent);
-                }
-            }
-        });
-
-        // Make a logout button
-        Button fbLogoutButton = findViewById(R.id.btn_fb_logout);
-        fbLogoutButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                LoginManager.getInstance().logOut();
-                Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
-                startActivity(loginIntent);
-            }
-        });
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        switch (requestCode) {
-            case RESULT_PROFILE_ACTIVITY:
-                if (resultCode == RESULT_OK) {
-                    Intent profileIntent = new Intent(MainActivity.this, ProfileActivity.class);
-                    startActivity(profileIntent);
-                }
-                break;
-            case RESULT_POSTS_ACTIVITY:
-                if (resultCode == RESULT_OK) {
-                    Intent postFeedIntent = new Intent(MainActivity.this, PostFeedActivity.class);
-                    startActivity(postFeedIntent);
-                }
-                break;
-            case RESULT_PERMISSIONS_ACTIVITY:
-                if (resultCode == RESULT_OK) {
-                    Intent permissionsIntent = new Intent(MainActivity.this, PermissionsActivity
-                            .class);
-                    startActivity(permissionsIntent);
-                }
-                break;
-            default:
-                super.onActivityResult(requestCode,resultCode, data);
-        }
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PermissionsActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PermissionsActivity.java
deleted file mode 100644
index b1e469791..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PermissionsActivity.java
+++ /dev/null
@@ -1,224 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.widget.CompoundButton;
-import android.widget.Switch;
-import android.widget.Toast;
-
-import com.facebook.AccessToken;
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.GraphResponse;
-import com.facebook.fbloginsample.callbacks.PermissionCallback;
-import com.facebook.fbloginsample.requests.PermissionRequest;
-import com.facebook.login.LoginManager;
-import com.facebook.login.LoginResult;
-
-import java.util.Arrays;
-import java.util.Set;
-
-public class PermissionsActivity extends Activity implements PermissionCallback
-        .IPermissionResponse, AccessToken.AccessTokenRefreshCallback,
-        FacebookCallback<LoginResult> {
-    private static final String EMAIL = "email";
-    private static final String USER_POSTS = "user_posts";
-    private static final String PUBLISH_ACTIONS = "publish_actions";
-    private static final String PUBLIC_PROFILE = "public_profile";
-    private static final String APP = "app";
-
-
-    private Switch mEmailPermSwitch;
-    private Switch mUserPostsPermSwitch;
-    private Switch mPublishPostPermSwitch;
-    private Switch mAppPermSwitch;
-    private CallbackManager mCallbackManager;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_permissions);
-        mCallbackManager = CallbackManager.Factory.create();
-        LoginManager.getInstance().registerCallback(mCallbackManager, this);
-
-        // Make a switch for the email permission
-        mEmailPermSwitch = findViewById(R.id.switch_email_permission);
-        mEmailPermSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
-                Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
-                if (isChecked && !permissions.contains(EMAIL)) {
-                    // Make request to user to grant email permission
-                    LoginManager.getInstance().logInWithReadPermissions(PermissionsActivity.this,
-                            Arrays.asList(EMAIL));
-                } else if (!isChecked && permissions.contains(EMAIL)) {
-                    // Make revoke email permission request
-                    PermissionRequest.makeRevokePermRequest(EMAIL, new PermissionCallback
-                            (PermissionsActivity.this).getCallback());
-                }
-            }
-        });
-
-        // Make a switch for the user posts permission
-        mUserPostsPermSwitch = findViewById(R.id.switch_user_posts_permission);
-        mUserPostsPermSwitch.setOnCheckedChangeListener(new CompoundButton
-                .OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
-                Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
-                if (isChecked && !permissions.contains(USER_POSTS)) {
-                    // Make request to user to grant user_posts permission
-                    LoginManager.getInstance().logInWithReadPermissions(PermissionsActivity.this,
-                            Arrays.asList(USER_POSTS));
-                } else if (!isChecked && permissions.contains(USER_POSTS)) {
-                    // Make revoke user_posts permission request
-                    PermissionRequest.makeRevokePermRequest(USER_POSTS, new PermissionCallback
-                            (PermissionsActivity.this).getCallback());
-                }
-            }
-        });
-
-        // Make a switch for the publish posts permission
-        mPublishPostPermSwitch = findViewById(R.id.switch_publish_post_permission);
-        mPublishPostPermSwitch.setOnCheckedChangeListener(new CompoundButton
-                .OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
-                Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
-                if (isChecked && !permissions.contains(PUBLISH_ACTIONS)) {
-                    // Make request to user to grant publish_actions permission
-                    LoginManager.getInstance().logInWithPublishPermissions(PermissionsActivity
-                            .this, Arrays.asList(PUBLISH_ACTIONS));
-                } else if (!isChecked && permissions.contains(PUBLISH_ACTIONS)) {
-                    // Make revoke publish_actions permission request
-                    PermissionRequest.makeRevokePermRequest(PUBLISH_ACTIONS, new
-                            PermissionCallback(PermissionsActivity.this).getCallback());
-                }
-            }
-        });
-
-        // Make a switch for the app login permission
-        mAppPermSwitch = findViewById(R.id.switch_app_permission);
-        mAppPermSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
-                if (isChecked && AccessToken.getCurrentAccessToken() == null) {
-                    // Make request to user to login
-                    LoginManager.getInstance().logInWithReadPermissions(PermissionsActivity.this,
-                            Arrays.asList(PUBLIC_PROFILE));
-                } else if (!isChecked && AccessToken.getCurrentAccessToken() != null) {
-                    PermissionRequest.makeRevokePermRequest(APP, new PermissionCallback
-                            (PermissionsActivity.this).getCallback());
-                }
-            }
-        });
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        mCallbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        setPermissionsSwitches();
-    }
-
-    // PermissionCallback.IPermissionResponse Callbacks
-    @Override
-    public void onCompleted(GraphResponse response) {
-        if (response.getError() != null) {
-            Toast.makeText(this, "Error with permissions request: " + response.getError()
-                    .getErrorMessage(), Toast.LENGTH_LONG).show();
-        }
-        AccessToken.refreshCurrentAccessTokenAsync(PermissionsActivity.this);
-    }
-
-    // Facebook Login Callbacks
-    @Override
-    public void onSuccess(LoginResult loginResult) {
-        // Refresh token cached on device after login succeeds
-        AccessToken.refreshCurrentAccessTokenAsync(this);
-    }
-
-    @Override
-    public void onCancel() {
-        // Handle user cancel ...
-    }
-
-    @Override
-    public void onError(FacebookException error) {
-        // Handle exception ...
-    }
-
-
-    // Access Token Refresh Callbacks
-    @Override
-    public void OnTokenRefreshed(AccessToken accessToken) {
-        if (accessToken == null) {
-            LoginManager.getInstance().logOut();
-            Intent loginIntent = new Intent(PermissionsActivity.this, FacebookLoginActivity.class);
-            startActivity(loginIntent);
-        } else {
-            setPermissionsSwitches();
-        }
-    }
-
-    @Override
-    public void OnTokenRefreshFailed(FacebookException exception) {
-        // Handle exception ...
-    }
-
-     // Set switch on/off according to current user-granted permissions
-    private void setPermissionsSwitches() {
-        Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
-
-        if (permissions.contains(EMAIL)) {
-            mEmailPermSwitch.setChecked(true);
-        } else {
-            mEmailPermSwitch.setChecked(false);
-        }
-
-        if (permissions.contains(USER_POSTS)) {
-            mUserPostsPermSwitch.setChecked(true);
-        } else {
-            mUserPostsPermSwitch.setChecked(false);
-        }
-
-        if (permissions.contains(PUBLISH_ACTIONS)) {
-            mPublishPostPermSwitch.setChecked(true);
-        } else {
-            mPublishPostPermSwitch.setChecked(false);
-        }
-
-        if (AccessToken.getCurrentAccessToken() != null) {
-            mAppPermSwitch.setChecked(true);
-        } else {
-            mAppPermSwitch.setChecked(false);
-        }
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PostFeedActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PostFeedActivity.java
deleted file mode 100644
index 2f89dda01..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PostFeedActivity.java
+++ /dev/null
@@ -1,182 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.ImageButton;
-import android.widget.ListView;
-import android.widget.TextView;
-
-import com.facebook.AccessToken;
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.fbloginsample.adapters.PostAdapter;
-import com.facebook.fbloginsample.callbacks.GetPostsCallback;
-import com.facebook.fbloginsample.callbacks.PublishPostCallback;
-import com.facebook.fbloginsample.entities.Post;
-import com.facebook.fbloginsample.requests.PostsRequest;
-import com.facebook.login.LoginManager;
-import com.facebook.login.LoginResult;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-public class PostFeedActivity extends Activity implements
-        GetPostsCallback.IGetPostsResponse,
-        PublishPostCallback.IPublishPostResponse,
-        AccessToken.AccessTokenRefreshCallback,
-        FacebookCallback<LoginResult> {
-
-    private static final int PICK_IMAGE = 1;
-    private static final String PUBLISH_ACTIONS = "publish_actions";
-    private static final String SELECT_PICTURE = "Select Picture";
-    private static final String TYPE_IMAGE = "image/*";
-
-    private ListView mPostsListView;
-    private TextView mComposeText;
-    private Uri mAttachmentUri;
-    private CallbackManager mCallbackManager;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_post_feed);
-        mCallbackManager = CallbackManager.Factory.create();
-        LoginManager.getInstance().registerCallback(mCallbackManager, this);
-
-        PostAdapter postApapter = new PostAdapter(this, new ArrayList<Post>());
-        mPostsListView = findViewById(R.id.post_list_view);
-        mPostsListView.setAdapter(postApapter);
-
-        // Attach image
-        ImageButton attachImgBtn = findViewById(R.id.btn_attach);
-        attachImgBtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent();
-                intent.setType(TYPE_IMAGE);
-                intent.setAction(Intent.ACTION_GET_CONTENT);
-                startActivityForResult(Intent.createChooser(intent, SELECT_PICTURE), PICK_IMAGE);
-            }
-        });
-
-        // Compose post
-        mComposeText = findViewById(R.id.compose_text);
-        Button composePostBtn = findViewById(R.id.btn_send);
-        composePostBtn.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (AccessToken.getCurrentAccessToken().getPermissions().contains
-                        (PUBLISH_ACTIONS)) {
-                    makePost();
-                } else {
-                    // Get Publish Permissions
-                    LoginManager.getInstance().logInWithPublishPermissions(
-                            PostFeedActivity.this, Arrays.asList(PUBLISH_ACTIONS));
-                }
-            }
-        });
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        getPosts();
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        mCallbackManager.onActivityResult(requestCode, resultCode, data);
-        if (requestCode == PICK_IMAGE && data != null) {
-            mAttachmentUri = data.getData();
-        }
-    }
-
-
-    // From GetPostsCallback
-    @Override
-    public void onGetPostsCompleted(List<Post> posts) {
-        if (posts != null && !posts.isEmpty()) {
-            mPostsListView.setAdapter(new PostAdapter(PostFeedActivity.this, posts));
-        }
-    }
-
-    // From PublishPostCallback
-    @Override
-    public void onPublishCompleted() {
-        getPosts();
-    }
-
-    // From AccessTokenRefreshCallback
-    @Override
-    public void OnTokenRefreshed(AccessToken accessToken) {
-        makePost();
-    }
-
-    @Override
-    public void OnTokenRefreshFailed(FacebookException e) {
-        // Handle exception ...
-    }
-
-    // From FacebookLogin
-    @Override
-    public void onSuccess(LoginResult loginResult) {
-        // Refresh token cached on device after login succeeds
-        AccessToken.refreshCurrentAccessTokenAsync(this);
-    }
-
-    @Override
-    public void onCancel() {
-        // Handle user cancel ...
-    }
-
-    @Override
-    public void onError(FacebookException e) {
-        // Handle exception ...
-    }
-
-    // Private methods
-    private void getPosts() {
-        PostsRequest.makeGetPostsRequest(new GetPostsCallback(this).getCallback());
-    }
-
-    private void makePost() {
-        if (mAttachmentUri == null) {
-            PostsRequest.makePublishPostRequest(
-                    mComposeText.getText().toString(),
-                    new PublishPostCallback(this).getGraphRequestCallback());
-        } else {
-            PostsRequest.makePublishPostRequest(
-                    mAttachmentUri,
-                    new PublishPostCallback(this).getShareCallback());
-        }
-        mComposeText.setText("");
-        mAttachmentUri = null;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/ProfileActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/ProfileActivity.java
deleted file mode 100644
index d9259d470..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/ProfileActivity.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import android.app.Activity;
-import android.graphics.Color;
-import android.os.Bundle;
-import android.widget.TextView;
-
-import com.facebook.drawee.view.SimpleDraweeView;
-import com.facebook.fbloginsample.callbacks.GetUserCallback;
-import com.facebook.fbloginsample.entities.User;
-import com.facebook.fbloginsample.requests.UserRequest;
-
-public class ProfileActivity extends Activity implements GetUserCallback.IGetUserResponse {
-    private SimpleDraweeView mProfilePhotoView;
-    private TextView mName;
-    private TextView mId;
-    private TextView mEmail;
-    private TextView mPermissions;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_profile);
-
-        mProfilePhotoView = findViewById(R.id.profile_photo);
-        mName = findViewById(R.id.name);
-        mId = findViewById(R.id.id);
-        mEmail = findViewById(R.id.email);
-        mPermissions = findViewById(R.id.permissions);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        UserRequest.makeUserRequest(new GetUserCallback(ProfileActivity.this).getCallback());
-    }
-
-    @Override
-    public void onCompleted(User user) {
-        mProfilePhotoView.setImageURI(user.getPicture());
-        mName.setText(user.getName());
-        mId.setText(user.getId());
-        if (user.getEmail() == null) {
-            mEmail.setText(R.string.no_email_perm);
-            mEmail.setTextColor(Color.RED);
-        } else {
-            mEmail.setText(user.getEmail());
-            mEmail.setTextColor(Color.BLACK);
-        }
-        mPermissions.setText(user.getPermissions());
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/Util.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/Util.java
deleted file mode 100644
index 2861d4248..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/Util.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import java.text.ParsePosition;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.Locale;
-
-public class Util {
-
-    public static String MakePrettyDate(String getCreatedTime) {
-        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ssZ", Locale.US);
-        ParsePosition pos = new ParsePosition(0);
-        long then = formatter.parse(getCreatedTime, pos).getTime();
-        long now = new Date().getTime();
-
-        long seconds = (now - then) / 1000;
-        long minutes = seconds / 60;
-        long hours = minutes / 60;
-        long days = hours / 24;
-
-        String friendly = null;
-        long num = 0;
-        if (days > 0) {
-            num = days;
-            friendly = days + " day";
-        } else if (hours > 0) {
-            num = hours;
-            friendly = hours + " hour";
-        } else if (minutes > 0) {
-            num = minutes;
-            friendly = minutes + " minute";
-        } else {
-            num = seconds;
-            friendly = seconds + " second";
-        }
-        if (num > 1) {
-            friendly += "s";
-        }
-        String postTimeStamp = friendly + " ago";
-        return postTimeStamp;
-    }
-
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/adapters/PostAdapter.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/adapters/PostAdapter.java
deleted file mode 100644
index ca62f00c4..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/adapters/PostAdapter.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.adapters;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ArrayAdapter;
-import android.widget.TextView;
-
-import com.facebook.drawee.view.SimpleDraweeView;
-import com.facebook.fbloginsample.R;
-import com.facebook.fbloginsample.Util;
-import com.facebook.fbloginsample.entities.Post;
-import com.facebook.login.widget.ProfilePictureView;
-
-import java.util.List;
-
-public class PostAdapter extends ArrayAdapter<Post> {
-    private Context mContext;
-    private List<Post> mPosts;
-
-    public PostAdapter(Context context, List<Post> posts) {
-        super(context, R.layout.news_feed_item, posts);
-        mContext = context;
-        mPosts = posts;
-    }
-
-    @Override
-    public View getView(int position, View convertView, ViewGroup parent) {
-        Post post = mPosts.get(position);
-        View rowView = convertView;
-
-        if (rowView == null) {
-            LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context
-                    .LAYOUT_INFLATER_SERVICE);
-            rowView = inflater.inflate(R.layout.news_feed_item, null);
-            ViewHolder viewHolder = new ViewHolder();
-            viewHolder.profilePhoto = rowView.findViewById(R.id.profile_photo);
-            viewHolder.postDate = rowView.findViewById(R.id.post_date);
-            viewHolder.username = rowView.findViewById(R.id.username);
-            viewHolder.message = rowView.findViewById(R.id.message);
-            viewHolder.postPicture = rowView.findViewById(R.id.post_picture);
-            rowView.setTag(viewHolder);
-
-        }
-
-        ViewHolder holder = (ViewHolder) rowView.getTag();
-        holder.profilePhoto.setProfileId(post.getFromId());
-        holder.postDate.setText(Util.MakePrettyDate(post.getCreatedTime()));
-        holder.username.setText(post.getFromName());
-        holder.message.setText(post.getMessage());
-        holder.postPicture.setImageURI(post.getPicture());
-
-        return rowView;
-    }
-
-    private static class ViewHolder {
-        ProfilePictureView profilePhoto;
-        TextView postDate;
-        TextView username;
-        TextView message;
-        SimpleDraweeView postPicture;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetPostsCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetPostsCallback.java
deleted file mode 100644
index a91f08133..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetPostsCallback.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.callbacks;
-
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.fbloginsample.entities.Post;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class GetPostsCallback {
-
-    public interface IGetPostsResponse {
-        void onGetPostsCompleted(List<Post> posts);
-    }
-
-    private IGetPostsResponse mGetPostsResponse;
-    private GraphRequest.Callback mCallback;
-    private ArrayList<Post> mPosts = new ArrayList<>();
-
-    public GetPostsCallback(final IGetPostsResponse getPostsResponse) {
-
-        mGetPostsResponse = getPostsResponse;
-        mCallback = new GraphRequest.Callback() {
-            @Override
-            public void onCompleted(GraphResponse response) {
-                try {
-                    JSONObject postsObj = response.getJSONObject();
-                    if (postsObj == null) {
-                        return;
-                    }
-                    JSONArray posts = postsObj.getJSONArray("data");
-                    for (int i = 0; i < posts.length(); i++) {
-                        JSONObject jPost = posts.getJSONObject(i);
-                        Post post = jsonToPost(jPost);
-                        if (post != null) {
-                            mPosts.add(post);
-                        }
-                    }
-
-                } catch (JSONException e) {
-                    // Handle exception ...
-                }
-
-                // Handled by PostFeedActivity
-                mGetPostsResponse.onGetPostsCompleted(mPosts);
-            }
-        };
-    }
-
-    private Post jsonToPost(JSONObject post) throws JSONException {
-        String message = null;
-        if (post.has("message")) {
-            message = post.getString("message");
-        }
-        String picture = null;
-        if (post.has("picture")) {
-            picture = post.getString("picture");
-        }
-        String created_time = post.getString("created_time");
-        String id = post.getString("id");
-
-        JSONObject from = post.getJSONObject("from");
-        String from_name = from.getString("name");
-        String from_id = from.getString("id");
-
-        return new Post(message, created_time, id, picture, from_name, from_id);
-    }
-
-    public GraphRequest.Callback getCallback() {
-        return mCallback;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetUserCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetUserCallback.java
deleted file mode 100644
index 8feca2137..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetUserCallback.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.callbacks;
-
-import android.net.Uri;
-
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.fbloginsample.entities.User;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-public class GetUserCallback {
-
-    public interface IGetUserResponse {
-        void onCompleted(User user);
-    }
-
-    private IGetUserResponse mGetUserResponse;
-    private GraphRequest.Callback mCallback;
-
-    public GetUserCallback(final IGetUserResponse getUserResponse) {
-
-        mGetUserResponse = getUserResponse;
-        mCallback = new GraphRequest.Callback() {
-            @Override
-            public void onCompleted(GraphResponse response) {
-                User user = null;
-                try {
-                    JSONObject userObj = response.getJSONObject();
-                    if (userObj == null) {
-                        return;
-                    }
-                    user = jsonToUser(userObj);
-
-                } catch (JSONException e) {
-                    // Handle exception ...
-                }
-
-                // Handled by ProfileActivity
-                mGetUserResponse.onCompleted(user);
-            }
-        };
-    }
-
-    private User jsonToUser(JSONObject user) throws JSONException {
-        Uri picture = Uri.parse(user.getJSONObject("picture").getJSONObject("data").getString
-                ("url"));
-        String name = user.getString("name");
-        String id = user.getString("id");
-        String email = null;
-        if (user.has("email")) {
-            email = user.getString("email");
-        }
-
-        // Build permissions display string
-        StringBuilder builder = new StringBuilder();
-        JSONArray perms = user.getJSONObject("permissions").getJSONArray("data");
-        builder.append("Permissions:\n");
-        for (int i = 0; i < perms.length(); i++) {
-            builder.append(perms.getJSONObject(i).get("permission")).append(": ").append(perms
-                    .getJSONObject(i).get("status")).append("\n");
-        }
-        String permissions = builder.toString();
-
-        return new User(picture, name, id, email, permissions);
-    }
-
-    public GraphRequest.Callback getCallback() {
-        return mCallback;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PermissionCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PermissionCallback.java
deleted file mode 100644
index 963e2b2f4..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PermissionCallback.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.callbacks;
-
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-
-public class PermissionCallback {
-
-    public interface IPermissionResponse {
-        void onCompleted(GraphResponse response);
-    }
-
-    private GraphRequest.Callback mCallback;
-
-    public PermissionCallback(final IPermissionResponse caller) {
-
-        mCallback = new GraphRequest.Callback() {
-
-            // Handled by PermissionsActivity
-            @Override
-            public void onCompleted(GraphResponse response) {
-                caller.onCompleted(response);
-            }
-        };
-    }
-
-    public GraphRequest.Callback getCallback() {
-        return mCallback;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PublishPostCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PublishPostCallback.java
deleted file mode 100644
index a68c5a1a7..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PublishPostCallback.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.callbacks;
-
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.share.Sharer;
-
-public class PublishPostCallback {
-
-    public interface IPublishPostResponse {
-        void onPublishCompleted();
-    }
-
-    private GraphRequest.Callback mCallback;
-
-    private FacebookCallback<Sharer.Result> mShareCallback;
-
-    public PublishPostCallback(final IPublishPostResponse caller) {
-
-        mCallback = new GraphRequest.Callback() {
-            @Override
-            public void onCompleted(GraphResponse response) {
-                // Handled by PostFeedActivity
-                caller.onPublishCompleted();
-            }
-        };
-
-        mShareCallback = new FacebookCallback<Sharer.Result>() {
-            @Override
-            public void onSuccess(Sharer.Result result) {
-                // Handled by PostFeedActivity
-                caller.onPublishCompleted();
-            }
-
-            @Override
-            public void onCancel() {
-                // Handle user cancel ...
-            }
-
-            @Override
-            public void onError(FacebookException error) {
-                // Handle exception ...
-            }
-        };
-    }
-
-    public GraphRequest.Callback getGraphRequestCallback() {
-        return mCallback;
-    }
-
-    public FacebookCallback<Sharer.Result> getShareCallback() {
-        return mShareCallback;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/Post.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/Post.java
deleted file mode 100644
index 678dd50cd..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/Post.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.entities;
-
-public class Post {
-    private final String message;
-    private final String created_time;
-    private final String id;
-    private final String picture;
-    private final String from_name;
-    private final String from_id;
-
-    public Post(String message, String created_time,
-                String id, String picture, String from_name, String from_id) {
-        this.message = message;
-        this.created_time = created_time;
-        this.id = id;
-        this.picture = picture;
-        this.from_name = from_name;
-        this.from_id = from_id;
-    }
-
-    public String getMessage() {
-        return message;
-    }
-
-    public String getCreatedTime() {
-        return created_time;
-    }
-
-    public String getId() {
-        return id;
-    }
-
-    public String getPicture() {
-        return picture;
-    }
-
-    public String getFromName() {
-        return from_name;
-    }
-
-    public String getFromId() {
-        return from_id;
-    }
-
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/User.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/User.java
deleted file mode 100644
index aec599215..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/User.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.entities;
-
-import android.net.Uri;
-
-public class User {
-    private final Uri picture;
-    private final String name;
-    private final String id;
-    private final String email;
-    private final String permissions;
-
-    public User(Uri picture, String name,
-                String id, String email, String permissions) {
-        this.picture = picture;
-        this.name = name;
-        this.id = id;
-        this.email = email;
-        this.permissions = permissions;
-    }
-
-    public Uri getPicture() {
-        return picture;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public String getId() {
-        return id;
-    }
-
-    public String getEmail() {
-        return email;
-    }
-
-    public String getPermissions() {
-        return permissions;
-    }
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PermissionRequest.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PermissionRequest.java
deleted file mode 100644
index 3e45ea480..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PermissionRequest.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.requests;
-
-import com.facebook.AccessToken;
-import com.facebook.GraphRequest;
-import com.facebook.HttpMethod;
-
-public class PermissionRequest {
-    private static final String PERMISSIONS_ENDPOINT = "/me/permissions";
-    private static final String APP = "app";
-
-    public static void makeRevokePermRequest(String permission, GraphRequest.Callback callback) {
-        String graphPath;
-        if (permission.equals(APP)) {
-            graphPath = PERMISSIONS_ENDPOINT;
-        } else {
-            graphPath = PERMISSIONS_ENDPOINT + "/" + permission;
-        }
-
-        GraphRequest request = GraphRequest.newGraphPathRequest(
-                AccessToken.getCurrentAccessToken(),
-                graphPath,
-                callback
-        );
-        request.setHttpMethod(HttpMethod.DELETE);
-        request.executeAsync();
-    }
-
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PostsRequest.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PostsRequest.java
deleted file mode 100644
index 25c2f924b..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PostsRequest.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.requests;
-
-import android.net.Uri;
-import android.os.Bundle;
-
-import com.facebook.AccessToken;
-import com.facebook.FacebookCallback;
-import com.facebook.GraphRequest;
-import com.facebook.HttpMethod;
-import com.facebook.share.ShareApi;
-import com.facebook.share.Sharer;
-import com.facebook.share.model.SharePhoto;
-import com.facebook.share.model.SharePhotoContent;
-
-public class PostsRequest {
-    private static final String FEED_ENDPOINT = "/me/feed";
-
-    public static void makeGetPostsRequest(GraphRequest.Callback callback) {
-
-        Bundle params = new Bundle();
-        params.putString("fields", "message,created_time,id,picture,story,from");
-
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                FEED_ENDPOINT,
-                params,
-                HttpMethod.GET,
-                callback
-        );
-        request.executeAsync();
-    }
-
-    public static void makePublishPostRequest(String message, GraphRequest.Callback callback) {
-        Bundle params = new Bundle();
-        params.putString("message", message);
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                FEED_ENDPOINT,
-                params,
-                HttpMethod.POST,
-                callback
-        );
-        request.executeAsync();
-    }
-
-    public static void makePublishPostRequest(Uri attachmentUri, FacebookCallback<Sharer.Result>
-            callback) {
-        SharePhoto photo = new SharePhoto.Builder()
-                .setImageUrl(attachmentUri)
-                .build();
-        SharePhotoContent content = new SharePhotoContent.Builder()
-                .addPhoto(photo)
-                .build();
-
-        ShareApi.share(content, callback);
-    }
-
-}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/UserRequest.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/UserRequest.java
deleted file mode 100644
index 941e31d98..000000000
--- a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/UserRequest.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample.requests;
-
-import android.os.Bundle;
-
-import com.facebook.AccessToken;
-import com.facebook.GraphRequest;
-import com.facebook.HttpMethod;
-
-public class UserRequest {
-    private static final String ME_ENDPOINT = "/me";
-
-    public static void makeUserRequest(GraphRequest.Callback callback) {
-        Bundle params = new Bundle();
-        params.putString("fields", "picture,name,id,email,permissions");
-
-
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                ME_ENDPOINT,
-                params,
-                HttpMethod.GET,
-                callback
-        );
-        request.executeAsync();
-    }
-}
diff --git a/samples/FBLoginSample/src/main/res/drawable/placeholder.jpg b/samples/FBLoginSample/src/main/res/drawable/placeholder.jpg
deleted file mode 100644
index 6f61d19b7..000000000
Binary files a/samples/FBLoginSample/src/main/res/drawable/placeholder.jpg and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_facebook_login.xml b/samples/FBLoginSample/src/main/res/layout/activity_facebook_login.xml
deleted file mode 100644
index 2720458c2..000000000
--- a/samples/FBLoginSample/src/main/res/layout/activity_facebook_login.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:id="@+id/info"
-        android:layout_alignParentLeft="true"
-        android:layout_alignParentTop="true"
-        android:textSize="18sp"
-        />
-
-    <com.facebook.login.widget.LoginButton
-        android:id="@+id/login_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center_horizontal"
-        android:layout_marginTop="30dp"
-        android:layout_marginBottom="30dp" />
-
-</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_main.xml b/samples/FBLoginSample/src/main/res/layout/activity_main.xml
deleted file mode 100644
index 4983ba863..000000000
--- a/samples/FBLoginSample/src/main/res/layout/activity_main.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.facebook.fbloginsample.MainActivity" >
-
-    <Button
-        android:id="@+id/btn_profile"
-        android:text="@string/profile"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerHorizontal="true"/>
-    <Button
-        android:id="@+id/btn_posts"
-        android:text="@string/posts_feed"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/btn_profile"
-        android:layout_centerHorizontal="true"/>
-    <Button
-        android:id="@+id/btn_permissions"
-        android:text="@string/permissions"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/btn_posts"
-        android:layout_centerHorizontal="true"/>
-    <Button
-        android:id="@+id/btn_fb_logout"
-        android:text="@string/logout"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/btn_permissions"
-        android:layout_centerHorizontal="true"/>
-
-
-</RelativeLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_permissions.xml b/samples/FBLoginSample/src/main/res/layout/activity_permissions.xml
deleted file mode 100644
index fe7a3cab4..000000000
--- a/samples/FBLoginSample/src/main/res/layout/activity_permissions.xml
+++ /dev/null
@@ -1,66 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:paddingLeft="@dimen/activity_horizontal_margin"
-        android:paddingRight="@dimen/activity_horizontal_margin"
-        android:paddingTop="@dimen/activity_vertical_margin"
-        android:paddingBottom="@dimen/activity_vertical_margin"
-        tools:context=".ProfileActivity">
-
-    <TextView
-        android:id="@+id/no_fb_review"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/no_fb_review" />
-    <Switch
-        android:id="@+id/switch_email_permission"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/email_permission" />
-    <Switch
-        android:id="@+id/switch_app_permission"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/app_permission" />
-
-    <TextView
-        android:id="@+id/fb_review"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="20dp"
-        android:text="@string/fb_review" />
-    <Switch
-        android:id="@+id/switch_user_posts_permission"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/user_posts_permission" />
-    <Switch
-        android:id="@+id/switch_publish_post_permission"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/make_post_permission" />
-</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_post_feed.xml b/samples/FBLoginSample/src/main/res/layout/activity_post_feed.xml
deleted file mode 100644
index 91de4bd0d..000000000
--- a/samples/FBLoginSample/src/main/res/layout/activity_post_feed.xml
+++ /dev/null
@@ -1,66 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:tools="http://schemas.android.com/tools"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:paddingLeft="@dimen/activity_horizontal_margin"
-        android:paddingRight="@dimen/activity_horizontal_margin"
-        android:paddingTop="@dimen/activity_vertical_margin"
-        android:paddingBottom="@dimen/activity_vertical_margin"
-        tools:context=".PostFeedActivity">
-
-    <ListView
-        android:id="@+id/post_list_view"
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        />
-
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom">
-
-        <EditText
-            android:id="@+id/compose_text"
-            android:layout_width="0dp"
-            android:layout_height="match_parent"
-            android:layout_weight="1"
-            android:hint="@string/enter_text"
-            android:inputType="textMultiLine" />
-
-        <ImageButton
-            android:id="@+id/btn_attach"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:src="@android:drawable/ic_menu_camera" />
-        <Button
-            android:id="@+id/btn_send"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/messenger_send_button_text"/>
-    </LinearLayout>
-</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_profile.xml b/samples/FBLoginSample/src/main/res/layout/activity_profile.xml
deleted file mode 100644
index 30709e9e9..000000000
--- a/samples/FBLoginSample/src/main/res/layout/activity_profile.xml
+++ /dev/null
@@ -1,66 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:fresco="http://schemas.android.com/tools"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:paddingLeft="@dimen/activity_horizontal_margin"
-        android:paddingRight="@dimen/activity_horizontal_margin"
-        android:paddingTop="@dimen/activity_vertical_margin"
-        android:paddingBottom="@dimen/activity_vertical_margin"
-        tools:context=".ProfileActivity">
-
-    <com.facebook.drawee.view.SimpleDraweeView
-        android:id="@+id/profile_photo"
-        android:layout_width="128dp"
-        android:layout_height="128dp"
-        fresco:placeholderiImage="@drawable/com_facebook_profile_picture_blank_square"
-        android:layout_margin="@dimen/margin_small" />
-
-    <TextView
-        android:id="@+id/name"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        tools:text="Name" />
-
-    <TextView
-        android:id="@+id/id"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        tools:text="ID" />
-
-    <TextView
-        android:id="@+id/email"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        tools:text="Email" />
-
-    <TextView
-        android:id="@+id/permissions"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        tools:text="Permissions" />
-</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/news_feed_item.xml b/samples/FBLoginSample/src/main/res/layout/news_feed_item.xml
deleted file mode 100644
index aed656a18..000000000
--- a/samples/FBLoginSample/src/main/res/layout/news_feed_item.xml
+++ /dev/null
@@ -1,84 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:fresco="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    >
-
-    <com.facebook.login.widget.ProfilePictureView
-        android:id="@+id/profile_photo"
-        android:layout_width="64dp"
-        android:layout_height="64dp"
-        android:layout_alignParentTop="true"
-        android:layout_margin="@dimen/margin_small">
-    </com.facebook.login.widget.ProfilePictureView>
-
-    <TextView
-        android:id="@+id/post_date"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentTop="true"
-        android:layout_alignParentRight="true"
-        android:layout_margin="@dimen/margin_small"
-        tools:text="HH:MM"
-        android:textSize="@dimen/text_size_normal">
-    </TextView>
-
-    <TextView
-        android:id="@+id/username"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_toRightOf="@id/profile_photo"
-        android:layout_toLeftOf="@id/post_date"
-        android:layout_margin="@dimen/margin_small"
-        tools:text="User Name goes here"
-        android:textSize="@dimen/text_size_big">
-    </TextView>
-
-    <TextView
-        android:id="@+id/message"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:minHeight="44dp"
-        android:maxHeight="64dp"
-        android:layout_below="@id/username"
-        android:layout_toRightOf="@id/profile_photo"
-        android:layout_margin="@dimen/margin_small"
-        tools:text="User content goes here"
-        android:textSize="@dimen/text_size_normal"
-        android:autoLink="web">
-    </TextView>
-
-    <com.facebook.drawee.view.SimpleDraweeView
-        android:id="@+id/post_picture"
-        android:layout_width="match_parent"
-        android:layout_height="128dp"
-        android:layout_below="@id/message"
-        android:layout_margin="@dimen/margin_small"
-        fresco:placeholderImage="@drawable/placeholder"
-        fresco:viewAspectRatio="1">
-    </com.facebook.drawee.view.SimpleDraweeView>
-
-</RelativeLayout>
diff --git a/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher.png
deleted file mode 100755
index b63bd2f93..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher_round.png
deleted file mode 100755
index 3250e16c6..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher_round.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher.png
deleted file mode 100755
index d47edc626..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher_round.png
deleted file mode 100755
index 4f1a75404..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher_round.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png
deleted file mode 100755
index d820e45f5..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher_round.png
deleted file mode 100755
index 8ecb1431b..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher_round.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png
deleted file mode 100755
index 621e658b5..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
deleted file mode 100755
index 87062b8e8..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png
deleted file mode 100755
index 4f866aa5e..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
deleted file mode 100755
index 00f4ce48f..000000000
Binary files a/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png and /dev/null differ
diff --git a/samples/FBLoginSample/src/main/res/values/colors.xml b/samples/FBLoginSample/src/main/res/values/colors.xml
deleted file mode 100644
index eb77a2e45..000000000
--- a/samples/FBLoginSample/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <color name="colorPrimary">#3F51B5</color>
-    <color name="colorPrimaryDark">#303F9F</color>
-    <color name="colorAccent">#FF4081</color>
-</resources>
diff --git a/samples/FBLoginSample/src/main/res/values/dimens.xml b/samples/FBLoginSample/src/main/res/values/dimens.xml
deleted file mode 100644
index 97bd5e1f0..000000000
--- a/samples/FBLoginSample/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<resources>
-    <dimen name="activity_horizontal_margin">4dp</dimen>
-    <dimen name="activity_vertical_margin">4dp</dimen>
-    <dimen name="margin_small">2dp</dimen>
-    <dimen name="margin_medium">4dp</dimen>
-
-    <dimen name="text_size_big">18sp</dimen>
-    <dimen name="text_size_normal">14sp</dimen>
-
-</resources>
diff --git a/samples/FBLoginSample/src/main/res/values/strings.xml b/samples/FBLoginSample/src/main/res/values/strings.xml
deleted file mode 100644
index 505d55124..000000000
--- a/samples/FBLoginSample/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<resources>
-    <string name="app_name">FB Login Sample</string>
-    <string name="facebook_app_id">117498238887011</string>
-    <string name="fb_login_protocol_scheme">fb117498238887011</string>
-    <string name="posts_feed">Posts</string>
-    <string name="logout">Logout</string>
-    <string name="enter_text">Compose a post</string>
-    <string name="profile">Profile</string>
-    <string name="permissions">Permissions</string>
-    <string name="email_permission">Email Permission</string>
-    <string name="user_posts_permission">User Posts Permission</string>
-    <string name="make_post_permission">Make Post Permission</string>
-    <string name="app_permission">Entire App Permission</string>
-    <string name="no_fb_review">Permissions Granted without FB Review</string>
-    <string name="fb_review">Permissions Requiring FB Review</string>
-    <string name="no_email_perm">Email permission not granted</string>
-
-</resources>
diff --git a/samples/FBLoginSample/src/main/res/values/styles.xml b/samples/FBLoginSample/src/main/res/values/styles.xml
deleted file mode 100644
index 5885930df..000000000
--- a/samples/FBLoginSample/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-        <item name="colorPrimary">@color/colorPrimary</item>
-        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
-    </style>
-
-</resources>
diff --git a/samples/FBLoginSample/src/test/java/com/facebook/fbloginsample/ExampleUnitTest.java b/samples/FBLoginSample/src/test/java/com/facebook/fbloginsample/ExampleUnitTest.java
deleted file mode 100644
index d5f0fafc5..000000000
--- a/samples/FBLoginSample/src/test/java/com/facebook/fbloginsample/ExampleUnitTest.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/**
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- * <p>
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- * <p>
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- * <p>
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.fbloginsample;
-
-import org.junit.Test;
-
-import static junit.framework.Assert.assertEquals;
-
-/**
- * Example local unit test, which will execute on the development machine (host).
- *
- * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
- */
-public class ExampleUnitTest {
-    @Test
-    public void addition_isCorrect() throws Exception {
-        assertEquals(4, 2 + 2);
-    }
-}
diff --git a/samples/HelloFacebookSample/AndroidManifest.xml b/samples/HelloFacebookSample/AndroidManifest.xml
deleted file mode 100644
index cb9bd5e9d..000000000
--- a/samples/HelloFacebookSample/AndroidManifest.xml
+++ /dev/null
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.hellofacebook"
-    android:versionCode="1"
-    android:versionName="1.0">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-
-    <application
-        android:icon="@drawable/icon"
-        android:label="@string/app_name"
-        android:theme="@android:style/Theme.NoTitleBar">
-        <activity
-            android:name=".HelloFacebookSampleActivity"
-            android:label="@string/app_name"
-            android:windowSoftInputMode="adjustResize">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/app_id" />
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationName"
-            android:value="@string/facebook_app_name" />
-
-        <provider
-            android:name="com.facebook.FacebookContentProvider"
-            android:authorities="com.facebook.app.FacebookContentProvider355198514515820"
-            android:exported="true" />
-        <receiver android:name="com.example.hellofacebook.HelloFacebookBroadcastReceiver">
-            <intent-filter>
-                <action android:name="com.facebook.platform.AppCallResultBroadcast" />
-            </intent-filter>
-        </receiver>
-    </application>
-</manifest>
diff --git a/samples/HelloFacebookSample/build.gradle b/samples/HelloFacebookSample/build.gradle
deleted file mode 100644
index bce00cc5e..000000000
--- a/samples/HelloFacebookSample/build.gradle
+++ /dev/null
@@ -1,46 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    // Facebook Dependencies
-    implementation project(':facebook-login')
-    implementation project(':facebook-share')
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId 'com.example.hellofacebook'
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
-
-repositories {
-    maven {
-        url 'https://maven.google.com/'
-        name 'Google'
-    }
-}
\ No newline at end of file
diff --git a/samples/HelloFacebookSample/proguard-project.txt b/samples/HelloFacebookSample/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/HelloFacebookSample/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/HelloFacebookSample/res/drawable-hdpi/icon.png b/samples/HelloFacebookSample/res/drawable-hdpi/icon.png
deleted file mode 100644
index c9d6b7c29..000000000
Binary files a/samples/HelloFacebookSample/res/drawable-hdpi/icon.png and /dev/null differ
diff --git a/samples/HelloFacebookSample/res/drawable-mdpi/icon.png b/samples/HelloFacebookSample/res/drawable-mdpi/icon.png
deleted file mode 100644
index 1b1ebfac0..000000000
Binary files a/samples/HelloFacebookSample/res/drawable-mdpi/icon.png and /dev/null differ
diff --git a/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png b/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png
deleted file mode 100644
index 6dfcfd003..000000000
Binary files a/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png and /dev/null differ
diff --git a/samples/HelloFacebookSample/res/drawable/icon.png b/samples/HelloFacebookSample/res/drawable/icon.png
deleted file mode 100644
index 1b1ebfac0..000000000
Binary files a/samples/HelloFacebookSample/res/drawable/icon.png and /dev/null differ
diff --git a/samples/HelloFacebookSample/res/layout/main.xml b/samples/HelloFacebookSample/res/layout/main.xml
deleted file mode 100644
index eadcdc7f0..000000000
--- a/samples/HelloFacebookSample/res/layout/main.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:facebook="http://schemas.android.com/apk/res-auto"
-              android:orientation="vertical"
-              android:layout_width="fill_parent"
-              android:layout_height="fill_parent"
-              android:background="#FFF"
-        >
-    <LinearLayout android:orientation="vertical"
-                  android:layout_width="fill_parent"
-                  android:layout_height="fill_parent"
-                  android:background="#FFF"
-                  android:id="@+id/main_ui_container">
-        <com.facebook.login.widget.LoginButton
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_gravity="center_horizontal"
-            facebook:com_facebook_confirm_logout="false"
-            facebook:com_facebook_tooltip_mode="never_display"
-            />
-        <LinearLayout
-                android:layout_width="150dp"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_horizontal"
-                android:gravity="center_horizontal"
-                android:orientation="vertical"
-            >
-            <TextView
-                    android:id="@+id/greeting"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dp"
-                    android:layout_gravity="center"
-                    android:textColor="#333"
-                    android:textSize="18sp"/>
-            <com.facebook.login.widget.ProfilePictureView
-                    android:id="@+id/profilePicture"
-                    android:layout_height="wrap_content"
-                    android:layout_width="wrap_content"
-                    android:gravity="center_horizontal"
-                    android:layout_marginBottom="10dp"
-                    facebook:com_facebook_preset_size="normal"/>
-            <Button
-                    android:id="@+id/postStatusUpdateButton"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="Post Status Update"
-                    />
-            <Button
-                    android:id="@+id/postPhotoButton"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="Post Photo"
-                    />
-
-        </LinearLayout>
-    </LinearLayout>
-
-</LinearLayout>
-
diff --git a/samples/HelloFacebookSample/res/values/strings.xml b/samples/HelloFacebookSample/res/values/strings.xml
deleted file mode 100644
index 78b945b31..000000000
--- a/samples/HelloFacebookSample/res/values/strings.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="app_name">HelloFacebookSample</string>
-    <string name="facebook_app_name">HelloFBSample</string>
-    <string name="cancelled">Cancelled</string>
-    <string name="permission_not_granted">Unable to perform selected action because permissions were not granted.</string>
-    <string name="ok">OK</string>
-    <string name="hello_user">Hello %1$s!</string>
-    <string name="success">Success</string>
-    <string name="successfully_posted_post">Post ID: %1$s</string>
-    <string name="error">Error</string>
-    <string name="status_update">Updating status for %1$s at %2$s</string>
-    <string name="photo_post">Photo Post</string>
-    <string name="you_picked">You picked:</string>
-    <string name="no_friends_selected">&lt;No friends selected&gt;</string>
-    <string name="no_place_selected">&lt;No place selected&gt;</string>
-    <string name="pick_seattle_place">Pick a Seattle Place</string>
-    <string name="app_id">355198514515820</string>
-    <string name="fb_login_protocol_scheme">fb355198514515820</string>
-    <string name="exception">Exception: %1$s</string>
-</resources>
diff --git a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
deleted file mode 100644
index a8278bc92..000000000
--- a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.hellofacebook;
-
-import android.os.Bundle;
-import android.util.Log;
-import com.facebook.FacebookBroadcastReceiver;
-
-/**
- * This is a simple example to demonstrate how an app could extend FacebookBroadcastReceiver to handle
- * notifications that long-running operations such as photo uploads have finished.
- */
-public class HelloFacebookBroadcastReceiver extends FacebookBroadcastReceiver {
-
-    @Override
-    protected void onSuccessfulAppCall(String appCallId, String action, Bundle extras) {
-        // A real app could update UI or notify the user that their photo was uploaded.
-        Log.d("HelloFacebook", String.format("Photo uploaded by call " + appCallId + " succeeded."));
-    }
-
-    @Override
-    protected void onFailedAppCall(String appCallId, String action, Bundle extras) {
-        // A real app could update UI or notify the user that their photo was not uploaded.
-        Log.d("HelloFacebook", String.format("Photo uploaded by call " + appCallId + " failed."));
-    }
-}
diff --git a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
deleted file mode 100644
index 6dce0c7d0..000000000
--- a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
+++ /dev/null
@@ -1,324 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.hellofacebook;
-
-import android.app.AlertDialog;
-import android.content.Intent;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.location.Location;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v4.app.FragmentActivity;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-
-import com.facebook.*;
-import com.facebook.AccessToken;
-import com.facebook.FacebookException;
-import com.facebook.Profile;
-import com.facebook.login.LoginManager;
-import com.facebook.login.LoginResult;
-import com.facebook.login.widget.ProfilePictureView;
-import com.facebook.share.ShareApi;
-import com.facebook.share.Sharer;
-import com.facebook.share.model.SharePhoto;
-import com.facebook.share.model.SharePhotoContent;
-import com.facebook.share.model.ShareLinkContent;
-import com.facebook.share.widget.ShareDialog;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-
-public class HelloFacebookSampleActivity extends FragmentActivity {
-
-    private static final String PERMISSION = "publish_actions";
-    private static final Location SEATTLE_LOCATION = new Location("") {
-        {
-            setLatitude(47.6097);
-            setLongitude(-122.3331);
-        }
-    };
-
-    private final String PENDING_ACTION_BUNDLE_KEY =
-            "com.example.hellofacebook:PendingAction";
-
-    private Button postStatusUpdateButton;
-    private Button postPhotoButton;
-    private ProfilePictureView profilePictureView;
-    private TextView greeting;
-    private PendingAction pendingAction = PendingAction.NONE;
-    private boolean canPresentShareDialog;
-    private boolean canPresentShareDialogWithPhotos;
-    private CallbackManager callbackManager;
-    private ProfileTracker profileTracker;
-    private ShareDialog shareDialog;
-    private FacebookCallback<Sharer.Result> shareCallback = new FacebookCallback<Sharer.Result>() {
-        @Override
-        public void onCancel() {
-            Log.d("HelloFacebook", "Canceled");
-        }
-
-        @Override
-        public void onError(FacebookException error) {
-            Log.d("HelloFacebook", String.format("Error: %s", error.toString()));
-            String title = getString(R.string.error);
-            String alertMessage = error.getMessage();
-            showResult(title, alertMessage);
-        }
-
-        @Override
-        public void onSuccess(Sharer.Result result) {
-            Log.d("HelloFacebook", "Success!");
-            if (result.getPostId() != null) {
-                String title = getString(R.string.success);
-                String id = result.getPostId();
-                String alertMessage = getString(R.string.successfully_posted_post, id);
-                showResult(title, alertMessage);
-            }
-        }
-
-        private void showResult(String title, String alertMessage) {
-            new AlertDialog.Builder(HelloFacebookSampleActivity.this)
-                    .setTitle(title)
-                    .setMessage(alertMessage)
-                    .setPositiveButton(R.string.ok, null)
-                    .show();
-        }
-    };
-
-    private enum PendingAction {
-        NONE,
-        POST_PHOTO,
-        POST_STATUS_UPDATE
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        callbackManager = CallbackManager.Factory.create();
-
-        LoginManager.getInstance().registerCallback(callbackManager,
-                new FacebookCallback<LoginResult>() {
-                    @Override
-                    public void onSuccess(LoginResult loginResult) {
-                        handlePendingAction();
-                        updateUI();
-                    }
-
-                    @Override
-                    public void onCancel() {
-                        if (pendingAction != PendingAction.NONE) {
-                            showAlert();
-                            pendingAction = PendingAction.NONE;
-                        }
-                        updateUI();
-                    }
-
-                    @Override
-                    public void onError(FacebookException exception) {
-                        if (pendingAction != PendingAction.NONE
-                                && exception instanceof FacebookAuthorizationException) {
-                            showAlert();
-                            pendingAction = PendingAction.NONE;
-                        }
-                        updateUI();
-                    }
-
-                    private void showAlert() {
-                        new AlertDialog.Builder(HelloFacebookSampleActivity.this)
-                                .setTitle(R.string.cancelled)
-                                .setMessage(R.string.permission_not_granted)
-                                .setPositiveButton(R.string.ok, null)
-                                .show();
-                    }
-                });
-
-        shareDialog = new ShareDialog(this);
-        shareDialog.registerCallback(
-                callbackManager,
-                shareCallback);
-
-        if (savedInstanceState != null) {
-            String name = savedInstanceState.getString(PENDING_ACTION_BUNDLE_KEY);
-            pendingAction = PendingAction.valueOf(name);
-        }
-
-        setContentView(R.layout.main);
-
-        profileTracker = new ProfileTracker() {
-            @Override
-            protected void onCurrentProfileChanged(Profile oldProfile, Profile currentProfile) {
-                updateUI();
-                // It's possible that we were waiting for Profile to be populated in order to
-                // post a status update.
-                handlePendingAction();
-            }
-        };
-
-        profilePictureView = (ProfilePictureView) findViewById(R.id.profilePicture);
-        greeting = (TextView) findViewById(R.id.greeting);
-
-        postStatusUpdateButton = (Button) findViewById(R.id.postStatusUpdateButton);
-        postStatusUpdateButton.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View view) {
-                onClickPostStatusUpdate();
-            }
-        });
-
-        postPhotoButton = (Button) findViewById(R.id.postPhotoButton);
-        postPhotoButton.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View view) {
-                onClickPostPhoto();
-            }
-        });
-
-        // Can we present the share dialog for regular links?
-        canPresentShareDialog = ShareDialog.canShow(
-                ShareLinkContent.class);
-
-        // Can we present the share dialog for photos?
-        canPresentShareDialogWithPhotos = ShareDialog.canShow(
-                SharePhotoContent.class);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        updateUI();
-    }
-
-    @Override
-    protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-
-        outState.putString(PENDING_ACTION_BUNDLE_KEY, pendingAction.name());
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        profileTracker.stopTracking();
-        LoginManager.getInstance().unregisterCallback(callbackManager);
-    }
-
-    private void updateUI() {
-        boolean enableButtons = AccessToken.getCurrentAccessToken() != null;
-
-        postStatusUpdateButton.setEnabled(enableButtons || canPresentShareDialog);
-        postPhotoButton.setEnabled(enableButtons || canPresentShareDialogWithPhotos);
-
-        Profile profile = Profile.getCurrentProfile();
-        if (enableButtons && profile != null) {
-            profilePictureView.setProfileId(profile.getId());
-            greeting.setText(getString(R.string.hello_user, profile.getFirstName()));
-        } else {
-            profilePictureView.setProfileId(null);
-            greeting.setText(null);
-        }
-    }
-
-    private void handlePendingAction() {
-        PendingAction previouslyPendingAction = pendingAction;
-        // These actions may re-set pendingAction if they are still pending, but we assume they
-        // will succeed.
-        pendingAction = PendingAction.NONE;
-
-        switch (previouslyPendingAction) {
-            case NONE:
-                break;
-            case POST_PHOTO:
-                postPhoto();
-                break;
-            case POST_STATUS_UPDATE:
-                postStatusUpdate();
-                break;
-        }
-    }
-
-    private void onClickPostStatusUpdate() {
-        performPublish(PendingAction.POST_STATUS_UPDATE, canPresentShareDialog);
-    }
-
-    private void postStatusUpdate() {
-        Profile profile = Profile.getCurrentProfile();
-        ShareLinkContent linkContent = new ShareLinkContent.Builder()
-                .setContentTitle("Hello Facebook")
-                .setContentDescription(
-                        "The 'Hello Facebook' sample  showcases simple Facebook integration")
-                .setContentUrl(Uri.parse("http://developers.facebook.com/docs/android"))
-                .build();
-        if (canPresentShareDialog) {
-            shareDialog.show(linkContent);
-        } else if (profile != null && hasPublishPermission()) {
-            ShareApi.share(linkContent, shareCallback);
-        } else {
-            pendingAction = PendingAction.POST_STATUS_UPDATE;
-        }
-    }
-
-    private void onClickPostPhoto() {
-        performPublish(PendingAction.POST_PHOTO, canPresentShareDialogWithPhotos);
-    }
-
-    private void postPhoto() {
-        Bitmap image = BitmapFactory.decodeResource(this.getResources(), R.drawable.icon);
-        SharePhoto sharePhoto = new SharePhoto.Builder().setBitmap(image).build();
-        ArrayList<SharePhoto> photos = new ArrayList<>();
-        photos.add(sharePhoto);
-
-        SharePhotoContent sharePhotoContent =
-                new SharePhotoContent.Builder().setPhotos(photos).build();
-        if (canPresentShareDialogWithPhotos) {
-            shareDialog.show(sharePhotoContent);
-        } else if (hasPublishPermission()) {
-            ShareApi.share(sharePhotoContent, shareCallback);
-        } else {
-            pendingAction = PendingAction.POST_PHOTO;
-            // We need to get new permissions, then complete the action when we get called back.
-            LoginManager.getInstance().logInWithPublishPermissions(
-                    this,
-                    Arrays.asList(PERMISSION));
-        }
-    }
-
-    private boolean hasPublishPermission() {
-        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        return accessToken != null && accessToken.getPermissions().contains("publish_actions");
-    }
-
-    private void performPublish(PendingAction action, boolean allowNoToken) {
-        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null || allowNoToken) {
-            pendingAction = action;
-            handlePendingAction();
-        }
-    }
-}
diff --git a/samples/Iconicus/AndroidManifest.xml b/samples/Iconicus/AndroidManifest.xml
deleted file mode 100644
index f82f3e846..000000000
--- a/samples/Iconicus/AndroidManifest.xml
+++ /dev/null
@@ -1,74 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.iconicus">
-    <uses-permission android:name="android.permission.INTERNET" />
-    <application
-        android:allowBackup="true"
-        android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name"
-        android:theme="@style/AppBaseTheme">
-        <activity
-            android:name=".MainActivity"
-            android:label="@string/app_name"
-            android:screenOrientation="portrait">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-            <intent-filter>
-                <data
-                    android:host="fb.me"
-                    android:path="/1570399853210604"
-                    android:scheme="https" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <action android:name="android.intent.action.VIEW" />
-            </intent-filter>
-            <intent-filter>
-                <data
-                    android:host="game"
-                    android:scheme="iconicus" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <action android:name="android.intent.action.VIEW" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/facebook_app_id" />
-    </application>
-</manifest>
diff --git a/samples/Iconicus/build.gradle b/samples/Iconicus/build.gradle
deleted file mode 100644
index 43078c19a..000000000
--- a/samples/Iconicus/build.gradle
+++ /dev/null
@@ -1,49 +0,0 @@
-apply plugin: 'com.android.application'
-
-repositories {
-    mavenCentral()
-}
-
-dependencies {
-    implementation project(':facebook-share')
-    implementation 'com.parse.bolts:bolts-android:1.2.1'
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId "com.example.iconicus"
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    buildTypes {
-        debug {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
-        }
-        release {
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
-        }
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
diff --git a/samples/Iconicus/proguard-project.txt b/samples/Iconicus/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/Iconicus/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/Iconicus/res/drawable-hdpi/ic_launcher.png b/samples/Iconicus/res/drawable-hdpi/ic_launcher.png
deleted file mode 100644
index 6cb2639fc..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile1.png b/samples/Iconicus/res/drawable-hdpi/tile1.png
deleted file mode 100644
index 1cdf68bc1..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile1.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile2.png b/samples/Iconicus/res/drawable-hdpi/tile2.png
deleted file mode 100644
index 4c6c24e78..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile2.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile3.png b/samples/Iconicus/res/drawable-hdpi/tile3.png
deleted file mode 100644
index 883ea2883..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile3.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile4.png b/samples/Iconicus/res/drawable-hdpi/tile4.png
deleted file mode 100644
index a94449150..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile4.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile5.png b/samples/Iconicus/res/drawable-hdpi/tile5.png
deleted file mode 100644
index d3e742968..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile5.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile6.png b/samples/Iconicus/res/drawable-hdpi/tile6.png
deleted file mode 100644
index 972db9bb8..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile6.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile7.png b/samples/Iconicus/res/drawable-hdpi/tile7.png
deleted file mode 100644
index d551400a9..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile7.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile8.png b/samples/Iconicus/res/drawable-hdpi/tile8.png
deleted file mode 100644
index 957e8d95e..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile8.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile9.png b/samples/Iconicus/res/drawable-hdpi/tile9.png
deleted file mode 100644
index 4e34adbc1..000000000
Binary files a/samples/Iconicus/res/drawable-hdpi/tile9.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/ic_launcher.png b/samples/Iconicus/res/drawable-mdpi/ic_launcher.png
deleted file mode 100644
index c1b5f3679..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile1.png b/samples/Iconicus/res/drawable-mdpi/tile1.png
deleted file mode 100644
index 80328c034..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile1.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile2.png b/samples/Iconicus/res/drawable-mdpi/tile2.png
deleted file mode 100644
index 23573f2ec..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile2.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile3.png b/samples/Iconicus/res/drawable-mdpi/tile3.png
deleted file mode 100644
index 5c5581c7b..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile3.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile4.png b/samples/Iconicus/res/drawable-mdpi/tile4.png
deleted file mode 100644
index 081d4b3f2..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile4.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile5.png b/samples/Iconicus/res/drawable-mdpi/tile5.png
deleted file mode 100644
index c007b1a2b..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile5.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile6.png b/samples/Iconicus/res/drawable-mdpi/tile6.png
deleted file mode 100644
index 288703f75..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile6.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile7.png b/samples/Iconicus/res/drawable-mdpi/tile7.png
deleted file mode 100644
index d54767ebf..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile7.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile8.png b/samples/Iconicus/res/drawable-mdpi/tile8.png
deleted file mode 100644
index 72186a8fb..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile8.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile9.png b/samples/Iconicus/res/drawable-mdpi/tile9.png
deleted file mode 100644
index 1adba18ee..000000000
Binary files a/samples/Iconicus/res/drawable-mdpi/tile9.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/ic_launcher.png b/samples/Iconicus/res/drawable-xhdpi/ic_launcher.png
deleted file mode 100644
index 70919b956..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile1.png b/samples/Iconicus/res/drawable-xhdpi/tile1.png
deleted file mode 100644
index 4cff27b08..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile1.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile2.png b/samples/Iconicus/res/drawable-xhdpi/tile2.png
deleted file mode 100644
index 67e490127..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile2.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile3.png b/samples/Iconicus/res/drawable-xhdpi/tile3.png
deleted file mode 100644
index b152f59e6..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile3.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile4.png b/samples/Iconicus/res/drawable-xhdpi/tile4.png
deleted file mode 100644
index c10dc0c93..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile4.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile5.png b/samples/Iconicus/res/drawable-xhdpi/tile5.png
deleted file mode 100644
index 65bf3751d..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile5.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile6.png b/samples/Iconicus/res/drawable-xhdpi/tile6.png
deleted file mode 100644
index 7fb246d3c..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile6.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile7.png b/samples/Iconicus/res/drawable-xhdpi/tile7.png
deleted file mode 100644
index a09fdd566..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile7.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile8.png b/samples/Iconicus/res/drawable-xhdpi/tile8.png
deleted file mode 100644
index 59598f819..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile8.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile9.png b/samples/Iconicus/res/drawable-xhdpi/tile9.png
deleted file mode 100644
index f8d6a8dc8..000000000
Binary files a/samples/Iconicus/res/drawable-xhdpi/tile9.png and /dev/null differ
diff --git a/samples/Iconicus/res/drawable/board_background.xml b/samples/Iconicus/res/drawable/board_background.xml
deleted file mode 100644
index 88f424608..000000000
--- a/samples/Iconicus/res/drawable/board_background.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
-    <item>
-        <shape>
-            <solid android:color="@color/iconicus_divider" />
-            <size
-                android:height="@dimen/board_size"
-                android:width="@dimen/board_size" />
-        </shape>
-    </item>
-    <item android:right="194dp" android:bottom="194dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:right="98dp" android:left="98dp" android:bottom="194dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:left="194dp" android:bottom="194dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-
-    <item android:right="194dp" android:top="98dp" android:bottom="98dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:right="98dp" android:left="98dp" android:top="98dp" android:bottom="98dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:left="194dp"  android:top="98dp" android:bottom="98dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-
-    <item android:right="194dp" android:top="194dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:right="98dp" android:left="98dp" android:top="194dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:left="194dp"  android:top="194dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-
-    <item android:bottom="280dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:top="280dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:left="280dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-    <item android:right="280dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_board_background" />
-        </shape>
-    </item>
-
-
-
-
-</layer-list>
diff --git a/samples/Iconicus/res/drawable/button_background.xml b/samples/Iconicus/res/drawable/button_background.xml
deleted file mode 100644
index 52c37c3e0..000000000
--- a/samples/Iconicus/res/drawable/button_background.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_enabled="false">
-        <shape android:shape="rectangle">
-            <corners android:radius="@dimen/button_radius" />
-            <solid android:color="@color/iconicus_button_background_disabled" />
-            <stroke android:color="@color/iconicus_button_border" android:width="1dp" />
-        </shape>
-    </item>
-    <item android:state_pressed="true">
-        <shape android:shape="rectangle">
-            <corners android:radius="@dimen/button_radius" />
-            <solid android:color="@color/iconicus_button_background_pressed" />
-            <stroke android:color="@color/iconicus_button_border" android:width="1dp" />
-        </shape>
-    </item>
-    <item>
-        <shape android:shape="rectangle">
-            <corners android:radius="@dimen/button_radius" />
-            <solid android:color="@color/iconicus_button_background" />
-            <stroke android:color="@color/iconicus_button_border" android:width="1dp" />
-        </shape>
-    </item>
-</selector>
diff --git a/samples/Iconicus/res/drawable/choice_icon_background.xml b/samples/Iconicus/res/drawable/choice_icon_background.xml
deleted file mode 100644
index f0d2e4349..000000000
--- a/samples/Iconicus/res/drawable/choice_icon_background.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<shape
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-
-    <corners android:radius="@dimen/background_radius" />
-    <solid android:color="@color/iconicus_choice_icon_background" />
-    <stroke android:width="1dp" android:color="@color/iconicus_icon_default_border" />
-</shape>
diff --git a/samples/Iconicus/res/drawable/default_icon_background.xml b/samples/Iconicus/res/drawable/default_icon_background.xml
deleted file mode 100644
index 2c82fab54..000000000
--- a/samples/Iconicus/res/drawable/default_icon_background.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item>
-        <shape>
-            <gradient
-                android:type="linear"
-                android:angle="315"
-                android:endColor="@color/iconicus_icon_background"
-                android:startColor="@color/iconicus_icon_shadow" />
-            <size android:width="@dimen/grid_cell_width" android:height="@dimen/grid_cell_height"/>
-            <corners android:radius="@dimen/background_radius" />
-        </shape>
-    </item>
-    <item android:top="2dp" android:left="2dp">
-        <shape>
-            <corners android:radius="@dimen/background_radius" />
-            <solid android:color="@color/iconicus_icon_background" />
-        </shape>
-    </item>
-</layer-list>
-
diff --git a/samples/Iconicus/res/drawable/invalid_icon_background.xml b/samples/Iconicus/res/drawable/invalid_icon_background.xml
deleted file mode 100644
index 656ab8326..000000000
--- a/samples/Iconicus/res/drawable/invalid_icon_background.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
-    <item>
-        <shape>
-            <solid android:color="@color/iconicus_icon_outside" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-    <item android:top="2dp" android:bottom="2dp" android:right="2dp" android:left="2dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_icon_invalid_border" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-    <item android:top="4dp" android:bottom="4dp" android:right="4dp" android:left="4dp">
-        <shape>
-            <solid android:color="@color/iconicus_icon_inside" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-</layer-list>
diff --git a/samples/Iconicus/res/drawable/locked_icon_background.xml b/samples/Iconicus/res/drawable/locked_icon_background.xml
deleted file mode 100644
index 601aa2c71..000000000
--- a/samples/Iconicus/res/drawable/locked_icon_background.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
-    <item>
-        <shape>
-            <solid android:color="@color/iconicus_icon_outside" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-    <item android:top="2dp" android:bottom="2dp" android:right="2dp" android:left="2dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_icon_locked_border" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-    <item android:top="4dp" android:bottom="4dp" android:right="4dp" android:left="4dp">
-        <shape>
-            <solid android:color="@color/iconicus_icon_inside" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-</layer-list>
diff --git a/samples/Iconicus/res/drawable/selected_icon_background.xml b/samples/Iconicus/res/drawable/selected_icon_background.xml
deleted file mode 100644
index 08f985cf0..000000000
--- a/samples/Iconicus/res/drawable/selected_icon_background.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<shape
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-
-    <corners android:radius="@dimen/background_radius" />
-    <solid android:color="@color/iconicus_choice_icon_background" />
-    <stroke android:width="2dp" android:color="@color/iconicus_icon_selected_border" />
-</shape>
diff --git a/samples/Iconicus/res/drawable/valid_icon_background.xml b/samples/Iconicus/res/drawable/valid_icon_background.xml
deleted file mode 100644
index a2fc0d85f..000000000
--- a/samples/Iconicus/res/drawable/valid_icon_background.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
-    <item>
-        <shape>
-            <solid android:color="@color/iconicus_icon_outside" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-    <item android:top="2dp" android:bottom="2dp" android:right="2dp" android:left="2dp">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/iconicus_icon_valid_border" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-    <item android:top="4dp" android:bottom="4dp" android:right="4dp" android:left="4dp">
-        <shape>
-            <solid android:color="@color/iconicus_icon_inside" />
-            <corners android:radius="@dimen/icon_radius" />
-        </shape>
-    </item>
-</layer-list>
diff --git a/samples/Iconicus/res/layout/activity_main.xml b/samples/Iconicus/res/layout/activity_main.xml
deleted file mode 100644
index 04565eed2..000000000
--- a/samples/Iconicus/res/layout/activity_main.xml
+++ /dev/null
@@ -1,134 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical">
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:background="@color/iconicus_board_background"
-        android:padding="10dp">
-        <LinearLayout
-            android:layout_weight="1"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content">
-        </LinearLayout>
-        <GridView
-            android:id="@+id/board"
-            android:background="@drawable/board_background"
-            android:numColumns="9"
-            android:layout_gravity="center_horizontal"
-            android:columnWidth="@dimen/grid_cell_width"
-            android:stretchMode="none"
-            android:horizontalSpacing="2dp"
-            android:verticalSpacing="2dp"
-            android:padding="2dp"
-            android:listSelector="@null"
-            android:layout_width="@dimen/board_size"
-            android:layout_height="wrap_content" >
-        </GridView>
-        <LinearLayout
-            android:layout_weight="1"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content">
-        </LinearLayout>
-    </LinearLayout>
-
-    <TextView
-        android:layout_width="fill_parent"
-        android:text="@string/instructions"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp">
-    </TextView>
-
-    <GridView
-        android:id="@+id/valid_numbers"
-        android:numColumns="10"
-        android:layout_gravity="center_horizontal"
-        android:columnWidth="@dimen/grid_cell_width"
-        android:stretchMode="spacingWidthUniform"
-        android:padding="10dp"
-        android:background="#dddddd"
-        android:listSelector="@null"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </GridView>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_margin="5dp"
-        android:layout_gravity="center_horizontal">
-
-        <Button
-            android:id="@+id/new_board"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            style="@style/iconicus_button"
-            android:layout_marginRight="2dp"
-            android:text="@string/button_new_game"/>
-
-        <Button
-            android:id="@+id/clear_board"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            style="@style/iconicus_button"
-            android:layout_marginLeft="2dp"
-            android:text="@string/button_clear_board" />
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_marginLeft="5dp"
-        android:layout_marginRight="5dp"
-        android:layout_gravity="center_horizontal">
-
-        <com.facebook.share.widget.ShareButton
-            android:id="@+id/share_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1" />
-
-        <com.facebook.share.widget.SendButton
-            android:id="@+id/send_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="4dp"
-            android:layout_marginRight="4dp"
-            android:layout_weight="1" />
-
-        <Button
-            android:id="@+id/copy_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            style="@style/iconicus_button"
-            android:text="@string/copy_url" />
-    </LinearLayout>
-</LinearLayout>
diff --git a/samples/Iconicus/res/layout/choice_cell.xml b/samples/Iconicus/res/layout/choice_cell.xml
deleted file mode 100644
index 67cf5a5e6..000000000
--- a/samples/Iconicus/res/layout/choice_cell.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<ImageView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/selection_cell"
-    android:layout_width="@dimen/grid_cell_width"
-    android:layout_height="@dimen/grid_cell_height"
-    android:background="@drawable/choice_icon_background"
-    android:minHeight="@dimen/grid_cell_height"
-    android:maxHeight="@dimen/grid_cell_height"
-    android:padding="4dp"
-    android:scaleType="fitCenter"
-    android:adjustViewBounds="true"
-    android:gravity="center"/>
diff --git a/samples/Iconicus/res/layout/grid_cell.xml b/samples/Iconicus/res/layout/grid_cell.xml
deleted file mode 100644
index 88e57cf67..000000000
--- a/samples/Iconicus/res/layout/grid_cell.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<ImageView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/selection_cell"
-    android:layout_width="@dimen/grid_cell_width"
-    android:layout_height="@dimen/grid_cell_height"
-    android:background="@drawable/default_icon_background"
-    android:minHeight="@dimen/grid_cell_height"
-    android:maxHeight="@dimen/grid_cell_height"
-    android:padding="4dp"
-    android:scaleType="fitCenter"
-    android:adjustViewBounds="true"
-    android:gravity="center"/>
diff --git a/samples/Iconicus/res/values-w820dp/dimens.xml b/samples/Iconicus/res/values-w820dp/dimens.xml
deleted file mode 100644
index 72bb51545..000000000
--- a/samples/Iconicus/res/values-w820dp/dimens.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
-         (such as screen margins) for screens with more than 820dp of available width. This
-         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
-    <dimen name="activity_horizontal_margin">64dp</dimen>
-</resources>
diff --git a/samples/Iconicus/res/values/dimens.xml b/samples/Iconicus/res/values/dimens.xml
deleted file mode 100644
index 8ab017967..000000000
--- a/samples/Iconicus/res/values/dimens.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <!-- Default screen margins, per the Android Design guidelines. -->
-    <dimen name="activity_horizontal_margin">16dp</dimen>
-    <dimen name="activity_vertical_margin">16dp</dimen>
-    <dimen name="grid_cell_width">30dp</dimen>
-    <dimen name="grid_cell_height">30dp</dimen>
-    <dimen name="background_radius">3dp</dimen>
-    <dimen name="icon_radius">3dp</dimen>
-    <dimen name="button_radius">2dp</dimen>
-    <dimen name="board_size">290dp</dimen>
-</resources>
diff --git a/samples/Iconicus/res/values/strings.xml b/samples/Iconicus/res/values/strings.xml
deleted file mode 100644
index d61290e2c..000000000
--- a/samples/Iconicus/res/values/strings.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="app_name">Iconicus</string>
-    <string name="instructions">Select an icon from below and put it into the board above. Make sure that no two of the same icons occur in the same row, column, or 3x3 grid. Need help? Share with your friends and see if they can give you any hints.</string>
-    <string name="button_new_game">New Game</string>
-    <string name="button_clear_board">Clear Board</string>
-    <string name="copy_url">Copy URL</string>
-    <string name="facebook_app_id">1567030756880847</string>
-    <string name="fb_login_protocol_scheme">fb1567030756880847</string>
-    <string name="share_title">Play this game!</string>
-    <string name="share_description">Check out this game of Iconicus that I was playing. Can you finish it?</string>
-    <string name="link_copied">The link has been copied to the clipboard.</string>
-    <string name="position_locked">Current position is locked, please select a different location.</string>
-    <string name="nothing_selected">Nothing was selected, please select something first.</string>
-</resources>
diff --git a/samples/Iconicus/res/values/styles.xml b/samples/Iconicus/res/values/styles.xml
deleted file mode 100644
index af918bb24..000000000
--- a/samples/Iconicus/res/values/styles.xml
+++ /dev/null
@@ -1,55 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <style name="AppBaseTheme" parent="android:Theme.Light">
-    </style>
-
-    <color name="iconicus_button_background">#dddddd</color>
-    <color name="iconicus_button_background_disabled">#ffffff</color>
-    <color name="iconicus_button_background_pressed">#aaaaaa</color>
-    <color name="iconicus_button_border">#999999</color>
-    <color name="iconicus_icon_background">#c4b075</color>
-    <color name="iconicus_icon_shadow">#706644</color>
-    <color name="iconicus_icon_valid_border">#00ff00</color>
-    <color name="iconicus_icon_selected_border">#aa000000</color>
-    <color name="iconicus_icon_locked_border">#aaffffff</color>
-    <color name="iconicus_icon_invalid_border">#aaff0000</color>
-    <color name="iconicus_icon_default_border">#00bfff</color>
-    <color name="iconicus_choice_icon_background">#e4d08e</color>
-    <color name="iconicus_icon_outside">#c4b075</color>
-    <color name="iconicus_icon_inside">#e4d08e</color>
-    <color name="iconicus_board_background">#e5cf8e</color>
-    <color name="iconicus_divider">#a19056</color>
-
-    <style name="iconicus_button" parent="@android:style/Widget.Button">
-        <item name="android:background">@drawable/button_background</item>
-        <item name="android:drawablePadding">6dp</item>
-        <item name="android:gravity">center</item>
-        <item name="android:paddingBottom">5dp</item>
-        <item name="android:paddingLeft">8dp</item>
-        <item name="android:paddingRight">8dp</item>
-        <item name="android:paddingTop">5dp</item>
-        <item name="android:textColor">#000000</item>
-        <item name="android:textSize">14sp</item>
-    </style>
-
-</resources>
diff --git a/samples/Iconicus/src/com/example/iconicus/GameBoard.java b/samples/Iconicus/src/com/example/iconicus/GameBoard.java
deleted file mode 100644
index 6624bf4dd..000000000
--- a/samples/Iconicus/src/com/example/iconicus/GameBoard.java
+++ /dev/null
@@ -1,446 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.iconicus;
-
-import android.net.Uri;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Random;
-
-/**
- * Abstraction for a game board
- */
-public class GameBoard {
-    public static final int BOARD_ROWS = 9; // 9x9 board
-    public static final int GROUP_ROWS = 3;
-    public static final int BOARD_SIZE = BOARD_ROWS * BOARD_ROWS; // 9x9 board
-    public static final int EMPTY_PIECE = 0;
-    public static final int MIN_VALUE = 1;
-    public static final int MAX_VALUE = 9;
-
-    private static final Uri SHARE_URI = Uri.parse("https://fb.me/1570399853210604");
-    private static final String DATA_KEY = "data";
-    private static final String LOCKED_KEY = "locked";
-
-    private static final int [] SEED_GRID = {
-            1,2,3,4,5,6,7,8,9,
-            4,5,6,7,8,9,1,2,3,
-            7,8,9,1,2,3,4,5,6,
-            2,3,4,5,6,7,8,9,1,
-            5,6,7,8,9,1,2,3,4,
-            8,9,1,2,3,4,5,6,7,
-            3,4,5,6,7,8,9,1,2,
-            6,7,8,9,1,2,3,4,5,
-            9,1,2,3,4,5,6,7,8
-    };
-
-    private int[] board = new int[BOARD_SIZE];
-    private boolean[] lockedPositions = new boolean[BOARD_SIZE];
-
-    private GameBoard(int[] board, boolean[] lockedPositions) {
-        if (board.length != this.board.length
-                || lockedPositions.length != this.lockedPositions.length) {
-            throw new IllegalArgumentException("boards are not the same size");
-        }
-        System.arraycopy(board, 0, this.board, 0, board.length);
-        System.arraycopy(lockedPositions, 0, this.lockedPositions, 0, lockedPositions.length);
-    }
-
-    private GameBoard(int[] board) {
-        if (board.length != this.board.length) {
-            throw new IllegalArgumentException("boards are not the same size");
-        }
-        for (int i = 0; i < BOARD_SIZE; i++) {
-            this.board[i] = board[i];
-            this.lockedPositions[i] = (this.board[i] != EMPTY_PIECE);
-        }
-    }
-
-    /**
-     * Generates a new valid board.
-     * @param openPositions the number of open positions to leave on the board.
-     * @return a new valid board.
-     */
-    public static GameBoard generateBoard(final int openPositions) {
-        Random random = new Random(System.currentTimeMillis());
-        int [] board = new int[BOARD_SIZE];
-        System.arraycopy(SEED_GRID, 0, board, 0, BOARD_SIZE);
-
-        for (int i = 0; i < 9; i++) {
-            shuffleGrid(random, board);
-        }
-
-        List<Integer> remainingPositions = new ArrayList<>(BOARD_SIZE);
-        for (int i = 0; i < BOARD_SIZE; i++) {
-            remainingPositions.add(i);
-        }
-
-        for (int i = 0; i < openPositions; i++) {
-            removeOpenPosition(random, board, remainingPositions);
-        }
-
-        return new GameBoard(board);
-    }
-
-    /**
-     * Returns a GameBoard from a Uri.
-     * @param uri the uri that was shared.
-     * @return a board from the Uri.
-     */
-    public static GameBoard fromUri(final Uri uri) {
-        String data = uri.getQueryParameter(DATA_KEY);
-        if (data != null) {
-            int [] newBoard = decodeBoard(data);
-            String locked = uri.getQueryParameter(LOCKED_KEY);
-            boolean [] lockedArr;
-
-            if (locked != null) {
-                lockedArr = decodeLockedPositions(locked);
-            } else {
-                // if there's no explicit locked param, then treat every position
-                // passed in as being locked.
-                lockedArr = new boolean[BOARD_SIZE];
-                for (int i = 0; i < lockedArr.length; i++) {
-                    if (newBoard[i] != EMPTY_PIECE) {
-                        lockedArr[i] = true;
-                    }
-                }
-            }
-            return new GameBoard(newBoard, lockedArr);
-        }
-        return null;
-    }
-
-    /**
-     * Clears the existing board of all pieces that weren't locked in place.
-     */
-    public void clearBoard() {
-        for (int i = 0; i < board.length; i++) {
-            if (!lockedPositions[i]) {
-                board[i] = EMPTY_PIECE;
-            }
-        }
-    }
-
-    /**
-     * Determines whether the current position is locked or not.
-     * @param position the position of the piece on the board.
-     * @return whether it's locked or not.
-     */
-    public boolean isLocked(final int position) {
-        return lockedPositions[position];
-    }
-
-    /**
-     * Sets the value for the position on the board. Returns true if the value is successfully set,
-     * false otherwise (e.g. the current position is locked and can't be modified).
-     * @param value the value to set.
-     * @param position the position of the piece on the board.
-     * @return true if value is successfully set.
-     */
-    public boolean setValue(final int value, final int position) {
-        if (!isLocked(position)
-                && ((value >= MIN_VALUE && value <= MAX_VALUE) || value == EMPTY_PIECE)) {
-            board[position] = value;
-            return true;
-        }
-        return false;
-    }
-
-    /**
-     * Gets the integer value of the piece on the board.
-     * @param position the position of the piece on the board.
-     * @return the integer value (0-9) or -1 if there's no current value.
-     */
-    public int getValue(final int position) {
-        if (position < 0 || position >= BOARD_SIZE) {
-            return EMPTY_PIECE;
-        }
-        return board[position];
-    }
-
-    /**
-     * Gets the string value of the piece on the board.
-     * @param position the position of the piece on the board.
-     * @return the String value ("0"-"9") or the empty string "" if there's no current value.
-     */
-    public String getValueAsString(final int position) {
-        int value = getValue(position);
-        if (value < MIN_VALUE || value > MAX_VALUE) {
-            return "";
-        }
-        return "" + value;
-    }
-
-    /**
-     * Determines whether the current position is empty or not.
-     * @param position the position of the piece.
-     * @return true if the current position is empty.
-     */
-    public boolean isEmpty(final int position) {
-        return board[position] == EMPTY_PIECE;
-    }
-
-    /**
-     * Determines whether the value in the current position is valid or not.
-     * @param position the position of the piece.
-     * @return true if the current position is valid (empty pieces are by default valid).
-     */
-    public boolean isValid(final int position) {
-        if (isEmpty(position)) {
-            return true;
-        }
-        return validateRow(position) && validateColumn(position) && validateGroup(position);
-    }
-
-    /**
-     * Converts the current board into a Uri.
-     * @return a Uri that represents the current board.
-     */
-    public Uri toUri() {
-        Uri.Builder shareUri = SHARE_URI.buildUpon();
-        shareUri.appendQueryParameter(DATA_KEY, encodeBoard());
-        shareUri.appendQueryParameter(LOCKED_KEY, encodeLockedPositions());
-        return shareUri.build();
-    }
-
-    private String encodeBoard() {
-        StringBuilder builder = new StringBuilder();
-        for (int i = 0; i < board.length; i++) {
-            builder.append(board[i]);
-        }
-        return builder.toString();
-    }
-
-    private static int[] decodeBoard(String input) {
-        int [] newBoard = new int[BOARD_SIZE];
-        Arrays.fill(newBoard, EMPTY_PIECE);
-        if (input.length() == BOARD_SIZE) {
-            for (int i = 0; i < input.length(); i++) {
-                newBoard[i] = Integer.parseInt(input.substring(i, i + 1));
-            }
-        }
-        return newBoard;
-    }
-
-    private String encodeLockedPositions() {
-        StringBuilder builder = new StringBuilder();
-        for (int i = 0; i < lockedPositions.length; i++) {
-            builder.append(lockedPositions[i] ? 1 : 0);;;
-        }
-        return builder.toString();
-    }
-
-    private static boolean[] decodeLockedPositions(String input) {
-        boolean [] locked = new boolean[BOARD_SIZE];
-        Arrays.fill(locked, false);
-        if (input.length() == BOARD_SIZE) {
-            for (int i = 0; i < input.length(); i++) {
-                locked[i] = (input.charAt(i) == '1');
-            }
-        }
-        return locked;
-    }
-
-    private boolean validateRow(final int position) {
-        int startPos = (position / BOARD_ROWS) * BOARD_ROWS;
-        for (int i = 0; i < BOARD_ROWS; i++) {
-            if (!checkIsValid(position, startPos + i)) {
-                return false;
-            }
-        }
-        return true;
-    }
-
-    private boolean validateColumn(final int position) {
-        int startPos = position % BOARD_ROWS;
-        for (int i = 0; i < BOARD_ROWS; i++) {
-            if (!checkIsValid(position, startPos + (i * BOARD_ROWS))) {
-                return false;
-            }
-        }
-        return true;
-    }
-
-    private boolean validateGroup(final int position) {
-        int row = position / BOARD_ROWS;
-        int column = position % BOARD_ROWS;
-
-        int group = (row / GROUP_ROWS) * GROUP_ROWS + (column / GROUP_ROWS);
-        int startRow = (group / GROUP_ROWS) * GROUP_ROWS;
-        int startColumn = (group % GROUP_ROWS) * GROUP_ROWS;
-
-        for (int i = 0; i < GROUP_ROWS; i++) {
-            for (int j = 0; j < GROUP_ROWS; j++) {
-                if (!checkIsValid(position, (startRow + i) * 9 + startColumn + j)) {
-                    return false;
-                }
-            }
-        }
-        return true;
-    }
-
-    private boolean checkIsValid(final int position1, final int position2) {
-        return (position1 == position2) || (board[position1] != board[position2]);
-    }
-
-    private static void shuffleGrid(final Random random, final int[] board) {
-        switch (random.nextInt(5)) {
-            case 0:
-                shuffleRow(random, board);
-                break;
-            case 1:
-                shuffleRowGroup(random, board);
-                break;
-            case 2:
-                shuffleColumn(random, board);
-                break;
-            case 3:
-                shuffleColumnGroup(random, board);
-                break;
-            case 4:
-                transpose(board);
-                break;
-            default:
-                break;
-        }
-    }
-
-    private static void shuffleRow(final Random random, final int[] board) {
-        // Swap two random rows. Note that it's only safe to shuffle rows within each group of 3
-        // i.e. row 1 can only be shuffled with either row 2 or 3.
-        int group = random.nextInt(GROUP_ROWS);
-        int row1 = random.nextInt(GROUP_ROWS);
-        int row2 = randomOther(random, row1, GROUP_ROWS);
-
-        int realRow1 = group * GROUP_ROWS + row1;
-        int realRow2 = group * GROUP_ROWS + row2;
-
-        Range range1 = new Range(realRow1 * BOARD_ROWS, BOARD_ROWS);
-        Range range2 = new Range(realRow2 * BOARD_ROWS, BOARD_ROWS);
-        swap(board, range1, range2);
-    }
-
-    private static void shuffleRowGroup(final Random random, final int[] board) {
-        // Swap two groups of rows. i.e. swap rows 123 with rows 789
-        int group1 = random.nextInt(GROUP_ROWS);
-        int group2 = randomOther(random, group1, GROUP_ROWS);
-
-        Range range1 = new Range(group1 * GROUP_ROWS * BOARD_ROWS, GROUP_ROWS * BOARD_ROWS);
-        Range range2 = new Range(group2 * GROUP_ROWS * BOARD_ROWS, GROUP_ROWS * BOARD_ROWS);
-        swap(board, range1, range2);
-    }
-
-    private static void shuffleColumn(final Random random, final int[] board) {
-        // Swap two random columns. Note that just like with rows, it's only safe to shuffle columns
-        // within each group of 3
-        int group = random.nextInt(GROUP_ROWS);
-        int col1 = random.nextInt(GROUP_ROWS);
-        int col2 = randomOther(random, col1, GROUP_ROWS);
-
-        int realCol1 = group * GROUP_ROWS + col1;
-        int realCol2 = group * GROUP_ROWS + col2;
-
-        swapColumn(board, realCol1, realCol2);
-    }
-
-    private static void shuffleColumnGroup(final Random random, final int[] board) {
-        // Swap two groups of columns. i.e. swap columns 123 with columns 789
-        int group1 = random.nextInt(GROUP_ROWS);
-        int group2 = randomOther(random, group1, GROUP_ROWS);
-
-        for (int i = 0; i < GROUP_ROWS; i++) {
-            int realCol1 = group1 * GROUP_ROWS + i;
-            int realCol2 = group2 * GROUP_ROWS + i;
-            swapColumn(board, realCol1, realCol2);
-        }
-    }
-
-    private static void transpose(final int[] board) {
-        for (int row = 0; row < BOARD_ROWS; ++row) {
-            for (int col = row + 1; col < BOARD_ROWS; ++col) {
-                int index1 = (row * BOARD_ROWS) + col;
-                int index2 = (col * BOARD_ROWS) + row;
-                swapPosition(board, index1, index2);
-            }
-        }
-    }
-
-    private static int randomOther(final Random random, final int currentValue, final int space) {
-        return ((currentValue % space) + (random.nextInt(space - 1) + 1)) % space;
-    }
-
-    private static void swap(final int[] board, final Range range1, final Range range2) {
-        if (range1.getSize() != range2.getSize()) {
-            return;
-        }
-        int[] range2Copy = Arrays.copyOfRange(board, range2.getStart(), range2.getEnd());
-        System.arraycopy(board, range1.getStart(), board, range2.getStart(), range1.getSize());
-        System.arraycopy(range2Copy, 0, board, range1.getStart(), range1.getSize());
-    }
-
-    private static void swapColumn(final int[] board, final int col1, final int col2) {
-        for (int i = 0; i < BOARD_ROWS; i++) {
-            swapPosition(board, (i * BOARD_ROWS) + col1, (i * BOARD_ROWS) + col2);
-        }
-    }
-
-    private static void swapPosition(final int[] board, final int pos1, final int pos2) {
-        int val2 = board[pos2];
-        board[pos2] = board[pos1];
-        board[pos1] = val2;
-    }
-
-    private static void removeOpenPosition(
-            final Random random,
-            final int[] board,
-            final List<Integer> remainingPositions) {
-        int index = random.nextInt(remainingPositions.size());
-        int position = remainingPositions.remove(index);
-        board[position] = EMPTY_PIECE;
-    }
-
-    private static class Range {
-        private int start;
-        private int size;
-        private int end;
-
-        public Range(final int start, final int size) {
-            this.start = start;
-            this.size = size;
-            this.end = start + size;
-        }
-
-        public int getStart() {
-            return start;
-        }
-
-        public int getSize() {
-            return size;
-        }
-
-        public int getEnd() {
-            return end;
-        }
-    }
-}
diff --git a/samples/Iconicus/src/com/example/iconicus/GameController.java b/samples/Iconicus/src/com/example/iconicus/GameController.java
deleted file mode 100644
index 033d9ad26..000000000
--- a/samples/Iconicus/src/com/example/iconicus/GameController.java
+++ /dev/null
@@ -1,241 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.iconicus;
-
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.drawable.Drawable;
-import android.net.Uri;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.BaseAdapter;
-import android.widget.GridView;
-import android.widget.ImageView;
-import android.widget.Toast;
-
-import bolts.AppLinks;
-
-public class GameController {
-
-    private static final int NUM_OPEN_POSITIONS = 50;
-
-    private static boolean iconsInitialized = false;
-    private static Drawable[] validIcons = new Drawable[GameBoard.BOARD_ROWS + 1];
-
-    private Context context;
-    private GameBoard board;
-    private GridView boardView;
-    private GridView selectionView;
-    private BoardAdapter boardAdapter;
-    private SelectionAdapter selectionAdapter;
-    private int selectedNum;
-    private View selectedView;
-
-
-    public GameController(final Context context, final Intent intent) {
-        this.context = context;
-        initializeIcons();
-        board = handleDeepLink(context, intent);
-        if (board == null) {
-            board = GameBoard.generateBoard(NUM_OPEN_POSITIONS);
-        }
-        resetSelection();
-    }
-
-    public void setBoardView(final GridView boardView) {
-        this.boardView = boardView;
-        boardAdapter = new BoardAdapter();
-        this.boardView.setAdapter(boardAdapter);
-        this.boardView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            public void onItemClick(AdapterView<?> parent, View v,
-                                    int position, long id) {
-                if (selectedNum >= 0) {
-                    if (board.isLocked(position)) {
-                        Toast.makeText(context.getApplicationContext(),
-                                R.string.position_locked,
-                                Toast.LENGTH_SHORT).show();
-                    } else {
-                        board.setValue(selectedNum, position);
-                        dataSetChanged();
-                    }
-                } else {
-                    Toast.makeText(context.getApplicationContext(),
-                            R.string.nothing_selected,
-                            Toast.LENGTH_SHORT).show();
-                }
-            }
-        });
-
-    }
-
-    public void setSelectionView(final GridView selectionView) {
-        this.selectionView = selectionView;
-        selectionAdapter = new SelectionAdapter();
-        this.selectionView.setAdapter(selectionAdapter);
-        this.selectionView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            public void onItemClick(AdapterView<?> parent, View v,
-                                    int position, long id) {
-                if (selectedNum != position) {
-                    resetSelection();
-                    selectedNum = position;
-                    v.setBackgroundResource(R.drawable.selected_icon_background);
-                    selectedView = v;
-                } else {
-                    resetSelection();
-                }
-            }
-        });
-    }
-
-    public void newGame() {
-        board = GameBoard.generateBoard(NUM_OPEN_POSITIONS);
-        dataSetChanged();
-    }
-
-    public void clearBoard() {
-        board.clearBoard();
-        dataSetChanged();
-    }
-
-    public Uri getShareUri() {
-        return board.toUri();
-    }
-
-    private synchronized void initializeIcons() {
-        if (iconsInitialized) {
-            return;
-        }
-        validIcons[0] = null;
-        validIcons[1] = context.getResources().getDrawable(R.drawable.tile1);
-        validIcons[2] = context.getResources().getDrawable(R.drawable.tile2);
-        validIcons[3] = context.getResources().getDrawable(R.drawable.tile3);
-        validIcons[4] = context.getResources().getDrawable(R.drawable.tile4);
-        validIcons[5] = context.getResources().getDrawable(R.drawable.tile5);
-        validIcons[6] = context.getResources().getDrawable(R.drawable.tile6);
-        validIcons[7] = context.getResources().getDrawable(R.drawable.tile7);
-        validIcons[8] = context.getResources().getDrawable(R.drawable.tile8);
-        validIcons[9] = context.getResources().getDrawable(R.drawable.tile9);
-        iconsInitialized = true;
-    }
-
-    private GameBoard handleDeepLink(final Context context, final Intent intent) {
-        Uri targetUri = AppLinks.getTargetUrlFromInboundIntent(context, intent);
-        if (targetUri == null) {
-            targetUri = intent.getData();
-        }
-
-        if (targetUri == null) {
-            return null;
-        }
-
-        return GameBoard.fromUri(targetUri);
-    }
-
-    private void dataSetChanged() {
-        if (boardAdapter != null) {
-            boardAdapter.notifyDataSetChanged();
-        }
-    }
-
-    private void resetSelection() {
-        if (selectedView != null) {
-            selectedView.setBackgroundResource(R.drawable.choice_icon_background);
-        }
-        selectedNum = GameBoard.EMPTY_PIECE;
-        selectedView = null;
-    }
-
-    private void updateCell(final ImageView imageView, final int position) {
-        imageView.setImageDrawable(validIcons[board.getValue(position)]);
-
-        if (board.isLocked(position)) {
-            imageView.setBackgroundResource(R.drawable.locked_icon_background);
-        } else if (board.isEmpty(position)) {
-            imageView.setBackgroundResource(R.drawable.default_icon_background);
-        } else if (board.isValid(position)) {
-            imageView.setBackgroundResource(R.drawable.valid_icon_background);
-        } else {
-            imageView.setBackgroundResource(R.drawable.invalid_icon_background);
-        }
-    }
-
-    private class SelectionAdapter extends BaseAdapter {
-
-        @Override
-        public int getCount() {
-            return GameBoard.BOARD_ROWS + 1;
-        }
-
-        @Override
-        public Object getItem(int position) {
-            return validIcons[position];
-        }
-
-        @Override
-        public long getItemId(int position) {
-            return position;
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            if (convertView != null) {
-                return convertView;
-            }
-
-            ImageView view = (ImageView) View.inflate(context, R.layout.choice_cell, null);
-            view.setImageDrawable(validIcons[position]);
-            return view;
-        }
-    }
-
-    private class BoardAdapter extends BaseAdapter {
-
-        @Override
-        public int getCount() {
-            return GameBoard.BOARD_SIZE;
-        }
-
-        @Override
-        public Object getItem(final int position) {
-            return board.getValue(position);
-        }
-
-        @Override
-        public long getItemId(final int position) {
-            return position;
-        }
-
-        @Override
-        public View getView(final int position, final View convertView, final ViewGroup parent) {
-            if (convertView != null) {
-                updateCell((ImageView) convertView, position);
-                return convertView;
-            }
-
-            ImageView view = (ImageView) View.inflate(context, R.layout.grid_cell, null);
-
-            updateCell(view, position);
-
-            return view;
-        }
-    }
-}
diff --git a/samples/Iconicus/src/com/example/iconicus/MainActivity.java b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
deleted file mode 100644
index ba6fe0386..000000000
--- a/samples/Iconicus/src/com/example/iconicus/MainActivity.java
+++ /dev/null
@@ -1,110 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.iconicus;
-
-import android.app.Activity;
-import android.content.ClipData;
-import android.content.ClipboardManager;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.GridView;
-import android.widget.Toast;
-
-import com.facebook.share.model.ShareLinkContent;
-import com.facebook.share.widget.SendButton;
-import com.facebook.share.widget.ShareButton;
-
-public class MainActivity extends Activity {
-
-    private GridView board;
-    private GridView validNumbers;
-
-    private GameController gameController;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-
-        gameController = new GameController(this, getIntent());
-
-        board = (GridView) findViewById(R.id.board);
-
-        validNumbers = (GridView) findViewById(R.id.valid_numbers);
-
-        gameController.setBoardView(board);
-        gameController.setSelectionView(validNumbers);
-
-        Button newGame = (Button) findViewById(R.id.new_board);
-        newGame.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                gameController.newGame();
-            }
-        });
-
-        Button clearBoard = (Button) findViewById(R.id.clear_board);
-        clearBoard.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                gameController.clearBoard();
-            }
-        });
-
-        final ShareButton share = (ShareButton) findViewById(R.id.share_button);
-        share.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                share.setShareContent(getLinkContent());
-            }
-        });
-
-        final SendButton send = (SendButton) findViewById(R.id.send_button);
-        send.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                send.setShareContent(getLinkContent());
-            }
-        });
-
-        Button copy = (Button) findViewById(R.id.copy_button);
-        copy.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                ClipboardManager clipboard = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);
-                ClipData clip = ClipData.newUri(
-                        getContentResolver(), "Iconicus", gameController.getShareUri());
-                clipboard.setPrimaryClip(clip);
-                Toast.makeText(MainActivity.this, R.string.link_copied, Toast.LENGTH_SHORT).show();
-            }
-        });
-    }
-
-    private ShareLinkContent getLinkContent() {
-        return new ShareLinkContent.Builder()
-                .setContentUrl(gameController.getShareUri())
-                .setContentTitle(getString(R.string.share_title))
-                .setContentDescription(getString(R.string.share_description))
-                .build();
-    }
-
-}
diff --git a/samples/LoginSample/build.gradle b/samples/LoginSample/build.gradle
deleted file mode 100644
index 399e25fec..000000000
--- a/samples/LoginSample/build.gradle
+++ /dev/null
@@ -1,50 +0,0 @@
-apply plugin: 'com.android.application'
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId "com.facebook.samples.loginsample"
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-        versionCode 1
-        versionName "1.0"
-    }
-
-    buildTypes {
-        debug {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-        release {
-            minifyEnabled true
-            useProguard true
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
-
-dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation project(':facebook-login')
-    implementation project(':accountkitsdk')
-    implementation "com.android.support:appcompat-v7:${project.ext.supportLibraryVersion}"
-    implementation 'com.google.android.gms:play-services-base:11.8.0'
-
-    testImplementation 'junit:junit:4.12'
-}
-
diff --git a/samples/LoginSample/proguard-rules.pro b/samples/LoginSample/proguard-rules.pro
deleted file mode 100644
index a8376722c..000000000
--- a/samples/LoginSample/proguard-rules.pro
+++ /dev/null
@@ -1,17 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/abeatte/resources/android_sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/LoginSample/src/androidTest/java/com/facebook/samples/loginsample/ApplicationTest.java b/samples/LoginSample/src/androidTest/java/com/facebook/samples/loginsample/ApplicationTest.java
deleted file mode 100644
index 3730d148b..000000000
--- a/samples/LoginSample/src/androidTest/java/com/facebook/samples/loginsample/ApplicationTest.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample;
-
-import android.app.Application;
-import android.test.ApplicationTestCase;
-
-/**
- * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
- */
-public class ApplicationTest extends ApplicationTestCase<Application> {
-    public ApplicationTest() {
-        super(Application.class);
-    }
-}
diff --git a/samples/LoginSample/src/main/AndroidManifest.xml b/samples/LoginSample/src/main/AndroidManifest.xml
deleted file mode 100644
index b590a02d5..000000000
--- a/samples/LoginSample/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,115 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.facebook.samples.loginsample">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-    <uses-permission android:name="android.permission.RECEIVE_SMS" />
-    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
-
-    <application
-        android:allowBackup="true"
-        android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_name"
-        android:supportsRtl="true"
-        android:theme="@style/AppTheme">
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/facebook_app_id"/>
-
-        <activity android:name=".MainActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-
-        <activity android:label="@string/label_facebook_login"
-            android:name=".facebook.FacebookLoginActivity"/>
-
-        <activity android:name=".facebook.PermissionSelectActivity"/>
-
-        <activity android:label="@string/label_account_kit_login"
-            android:name=".accountkit.AccountKitLoginActivity"/>
-
-        <activity
-            android:name=".accountkit.ErrorActivity"
-            android:label="@string/action_bar_title_hello" />
-
-        <activity
-            android:name=".accountkit.CodeActivity"
-            android:label="@string/action_bar_title_hello" />
-
-        <activity
-            android:name=".accountkit.TokenActivity"
-            android:label="@string/action_bar_title_hello" />
-
-        <!--Account Kit-->
-
-        <activity
-            android:name="com.facebook.CustomTabActivity"
-            android:exported="true">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data android:name="com.facebook.accountkit.ApplicationName"
-            android:value="@string/app_name" />
-        <meta-data android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/facebook_app_id" />
-        <meta-data android:name="com.facebook.accountkit.ClientToken"
-            android:value="@string/ACCOUNT_KIT_CLIENT_TOKEN" />
-
-        <activity
-            android:name="com.facebook.accountkit.ui.AccountKitActivity"
-            android:theme="@style/AppLoginTheme"
-            tools:replace="android:theme">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <data android:scheme="@string/ak_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <activity android:name="com.facebook.accountkit.ui.AccountKitEmailRedirectActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/ak_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-    </application>
-
-</manifest>
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java
deleted file mode 100644
index d229254c6..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-import android.view.View;
-import android.widget.Button;
-
-import com.facebook.samples.loginsample.accountkit.AccountKitLoginActivity;
-import com.facebook.samples.loginsample.facebook.FacebookLoginActivity;
-
-public class MainActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-
-        initFacebookLogin();
-        initAccountKitLogin();
-    }
-
-    private void initFacebookLogin() {
-        final Button fbLoginButton = (Button) findViewById(R.id.fb_login_button);
-        fbLoginButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(MainActivity.this, FacebookLoginActivity.class));
-            }
-        });
-    }
-
-    private void initAccountKitLogin() {
-        final Button akLoginButton = (Button) findViewById(R.id.ak_login_button);
-        akLoginButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                startActivity(new Intent(MainActivity.this, AccountKitLoginActivity.class));
-            }
-        });
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
deleted file mode 100644
index 893d78459..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
+++ /dev/null
@@ -1,827 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.Manifest;
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.pm.PackageManager;
-import android.graphics.Color;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.annotation.ColorInt;
-import android.support.annotation.DrawableRes;
-import android.support.annotation.NonNull;
-import android.support.annotation.StyleRes;
-import android.support.v4.content.ContextCompat;
-import android.support.v4.content.LocalBroadcastManager;
-import android.util.SparseArray;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.CompoundButton;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.SeekBar;
-import android.widget.Spinner;
-import android.widget.Switch;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.facebook.accountkit.AccessToken;
-import com.facebook.accountkit.AccountKit;
-import com.facebook.accountkit.AccountKitError;
-import com.facebook.accountkit.AccountKitLoginResult;
-import com.facebook.accountkit.internal.AccountKitController;
-import com.facebook.accountkit.ui.AccountKitActivity;
-import com.facebook.accountkit.ui.AccountKitConfiguration;
-import com.facebook.accountkit.ui.SkinManager;
-import com.facebook.accountkit.ui.ButtonType;
-import com.facebook.accountkit.ui.LoginType;
-import com.facebook.accountkit.ui.TextPosition;
-import com.facebook.accountkit.ui.ThemeUIManager;
-import com.facebook.accountkit.ui.UIManager;
-import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.GoogleApiAvailability;
-
-import java.util.ArrayList;
-import java.util.List;
-import android.support.v7.app.AppCompatActivity;
-import java.util.UUID;
-import com.facebook.samples.loginsample.R;
-
-public class AccountKitLoginActivity extends AppCompatActivity {
-    private static final int FRAMEWORK_REQUEST_CODE = 1;
-
-    private static final @DrawableRes int DEFAULT_SKIN_BACKGROUND_IMAGE = R.drawable.dog;
-    private static final int TINT_SEEKBAR_ADJUSTMENT = 55;
-
-    private Switch advancedUISwitch;
-    private SkinManager.Skin skin;
-    private Switch skinBackgroundImage;
-    private TextView skinBackgroundTintIntensityTitle;
-    private SeekBar skinBackgroundTintIntensity;
-    private Spinner skinTintSpinner;
-    private ButtonType confirmButton;
-    private ButtonType entryButton;
-    private String initialStateParam;
-    private int nextPermissionsRequestCode = 4000;
-    private final SparseArray<OnCompleteListener> permissionsListeners = new SparseArray<>();
-    private @StyleRes int selectedThemeId = -1;
-    private @DrawableRes int selectedBackgroundId = -1;
-    private BroadcastReceiver switchLoginTypeReceiver;
-    private TextPosition textPosition;
-
-    private interface OnCompleteListener {
-        void onComplete();
-    }
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.accountkit_activity_main);
-
-        // Check if we're logged in already when the app is first started.
-        if (AccountKit.getCurrentAccessToken() != null && savedInstanceState == null) {
-            showHelloActivity(null);
-        }
-
-        final View skinUIOptionsLayout = setupSkinUIOptions();
-        skinBackgroundTintIntensityTitle =
-                (TextView) skinUIOptionsLayout.findViewById(R.id.tint_intensity_title);
-        skinBackgroundTintIntensity =
-                (SeekBar) skinUIOptionsLayout.findViewById(R.id.tint_intensity_field);
-        skinBackgroundTintIntensity.setOnSeekBarChangeListener(
-                new SeekBar.OnSeekBarChangeListener() {
-            @Override
-            public void onProgressChanged(
-                    final SeekBar seekBar,
-                    final int progress,
-                    final boolean fromUser) {
-                skinBackgroundTintIntensityTitle.setText(getString(
-                        R.string.config_tint_intensity_label,
-                        progress + TINT_SEEKBAR_ADJUSTMENT));
-            }
-
-            @Override
-            public void onStartTrackingTouch(SeekBar seekBar) { /* no op */ }
-
-            @Override
-            public void onStopTrackingTouch(SeekBar seekBar) { /* no op */ }
-        });
-        skinBackgroundTintIntensity.setProgress(75 - TINT_SEEKBAR_ADJUSTMENT);
-
-        skinBackgroundImage = (Switch) findViewById(R.id.background_image);
-        skinBackgroundImage.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                skinUIOptionsLayout.setVisibility(
-                        (isSkinSelected() && getBackgroundImage() >= 0) ?
-                                View.VISIBLE :
-                                View.GONE);
-            }
-        });
-        final Spinner themeSpinner = (Spinner) findViewById(R.id.theme_spinner);
-        if (themeSpinner != null) {
-            final ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
-                    this,
-                    R.array.theme_options,
-                    android.R.layout.simple_spinner_dropdown_item);
-            themeSpinner.setAdapter(adapter);
-            themeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-                @Override
-                public void onItemSelected(
-                        final AdapterView<?> parent,
-                        final View view,
-                        final int position,
-                        final long id) {
-
-                    // init defaults
-                    skin = SkinManager.Skin.NONE;
-                    selectedThemeId = -1;
-                    selectedBackgroundId = -1;
-
-                    switch (position) {
-                        case 0:
-                            skin = SkinManager.Skin.CLASSIC;
-                            advancedUISwitch.setChecked(false);
-                            break;
-                        case 1:
-                            skin = SkinManager.Skin.CONTEMPORARY;
-                            advancedUISwitch.setChecked(false);
-                            break;
-                        case 2:
-                            selectedThemeId = -1;
-                            skin = SkinManager.Skin.TRANSLUCENT;
-                            advancedUISwitch.setChecked(false);
-                            break;
-                        case 3:
-                            selectedThemeId = R.style.AppLoginTheme_Salmon;
-                            break;
-                        case 4:
-                            selectedThemeId = R.style.AppLoginTheme_Yellow;
-                            break;
-                        case 5:
-                            selectedThemeId = R.style.AppLoginTheme_Red;
-                            break;
-                        case 6:
-                            skin = SkinManager.Skin.CLASSIC;
-                            advancedUISwitch.setChecked(false);
-                            selectedBackgroundId = R.drawable.dog;
-                            break;
-                        case 7:
-                            selectedThemeId = R.style.AppLoginTheme_Bicycle;
-                            break;
-                        case 8:
-                            selectedThemeId = R.style.AppLoginTheme_Reverb_A;
-                            advancedUISwitch.setChecked(true);
-                            break;
-                        case 9:
-                            selectedThemeId = R.style.AppLoginTheme_Reverb_B;
-                            advancedUISwitch.setChecked(true);
-                            break;
-                        case 10:
-                            selectedThemeId = R.style.AppLoginTheme_Reverb_C;
-                            advancedUISwitch.setChecked(true);
-                            break;
-                        default:
-                            advancedUISwitch.setChecked(false);
-                            break;
-                    }
-
-                    skinBackgroundImage.setVisibility(isSkinSelected() ? View.VISIBLE : View.GONE);
-                    skinUIOptionsLayout.setVisibility(
-                            (isSkinSelected() && getBackgroundImage() >= 0) ?
-                                    View.VISIBLE :
-                                    View.GONE);
-                }
-
-                @Override
-                public void onNothingSelected(final AdapterView<?> parent) {
-                    selectedThemeId = -1;
-                    selectedBackgroundId = -1;
-                    skin = SkinManager.Skin.NONE;
-                    advancedUISwitch.setChecked(false);
-                    skinUIOptionsLayout.setVisibility(View.GONE);
-                    skinBackgroundImage.setVisibility(View.GONE);
-                }
-            });
-        }
-        setupAdvancedUIOptions();
-        // <INTERNAL_CODE>
-        setupServerConfigurationOptions();
-        // <END_INTERNAL_CODE>
-    }
-
-    // <INTERNAL_CODE>
-    private void setupServerConfigurationOptions() {
-        final LinearLayout configurationOptionsLayout =
-                (LinearLayout) findViewById(R.id.configuration_options);
-        final Button configureServerButton =
-                new Button(this, null, android.R.style.Widget_Holo_Light_Button_Borderless_Small);
-        configureServerButton.setTextColor(Color.BLUE);
-        refreshServerConfiguration(configureServerButton);
-        configurationOptionsLayout.addView(configureServerButton, 0);
-
-        configureServerButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                showServerConfigurationDialog(configureServerButton);
-            }
-        });
-    }
-
-    private void refreshServerConfiguration(final Button configureServerButton) {
-        configureServerButton.setText("API domain: " + AccountKitController.getBaseGraphHost());
-    }
-
-    private void showServerConfigurationDialog(final Button configureServerButton) {
-        final EditText editText = new EditText(this);
-        editText.setText(AccountKitController.getBaseGraphHost());
-
-        new AlertDialog.Builder(AccountKitLoginActivity.this)
-                .setTitle("API domain")
-                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        AccountKitController.setBaseGraphHost(editText.getText().toString());
-                        refreshServerConfiguration(configureServerButton);
-                        dialog.dismiss();
-                    }
-                })
-                .setNegativeButton(android.R.string.cancel, null)
-                .setView(editText)
-                .show();
-    }
-    // <END_INTERNAL_CODE>
-
-    private void setupAdvancedUIOptions() {
-
-        advancedUISwitch = (Switch) findViewById(R.id.advanced_ui_switch);
-
-        final View advancedUIOptionsLayout = findViewById(R.id.advanced_ui_options);
-
-        final List<CharSequence> buttonNames = new ArrayList<>();
-        buttonNames.add("Default");
-        for (ButtonType buttonType : ButtonType.values()) {
-            buttonNames.add(buttonType.name());
-        }
-        final ArrayAdapter<CharSequence> buttonNameAdapter
-                = new ArrayAdapter<>(
-                AccountKitLoginActivity.this,
-                android.R.layout.simple_spinner_dropdown_item,
-                buttonNames);
-
-        advancedUISwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                if (isChecked) {
-                    if (isSkinSelected()) {
-                        advancedUISwitch.setChecked(false);
-                        Toast.makeText(
-                                AccountKitLoginActivity.this,
-                                R.string.skin_ui_required,
-                                Toast.LENGTH_LONG)
-                                .show();
-                        return;
-                    }
-
-                    advancedUIOptionsLayout.setVisibility(View.VISIBLE);
-
-                    final Spinner entryButtonSpinner =
-                            (Spinner) findViewById(R.id.entry_button_spinner);
-                    if (entryButtonSpinner != null) {
-                        entryButtonSpinner.setAdapter(buttonNameAdapter);
-                        entryButtonSpinner.setOnItemSelectedListener(
-                                new AdapterView.OnItemSelectedListener() {
-                                    @Override
-                                    public void onItemSelected(
-                                            final AdapterView<?> parent,
-                                            final View view,
-                                            final int position,
-                                            final long id) {
-                                        // First position is empty, so anything past that
-                                        if (position > 0) {
-                                            entryButton = ButtonType.valueOf(
-                                                    entryButtonSpinner
-                                                            .getSelectedItem()
-                                                            .toString());
-                                        } else {
-                                            entryButton = null;
-                                        }
-                                    }
-
-                                    @Override
-                                    public void onNothingSelected(final AdapterView<?> parent) {
-                                        entryButton = null;
-                                    }
-                                });
-                    }
-
-                    final Spinner confirmButtonSpinner =
-                            (Spinner) findViewById(R.id.confirm_button_spinner);
-                    if (confirmButtonSpinner != null) {
-                        confirmButtonSpinner.setAdapter(buttonNameAdapter);
-                        confirmButtonSpinner.setOnItemSelectedListener(
-                                new AdapterView.OnItemSelectedListener() {
-                                    @Override
-                                    public void onItemSelected(
-                                            final AdapterView<?> parent,
-                                            final View view,
-                                            final int position,
-                                            final long id) {
-                                        // First position is empty, so anything past
-                                        // that
-                                        if (position > 0) {
-                                            confirmButton = ButtonType.valueOf(
-                                                    confirmButtonSpinner
-                                                            .getSelectedItem()
-                                                            .toString());
-                                        } else {
-                                            confirmButton = null;
-                                        }
-                                    }
-
-                                    @Override
-                                    public void onNothingSelected(
-                                            final AdapterView<?> parent) {
-                                        confirmButton = null;
-                                    }
-                                });
-                    }
-
-                    final Spinner textPositionSpinner =
-                            (Spinner) findViewById(R.id.text_position_spinner);
-                    if (textPositionSpinner != null) {
-                        final List<CharSequence> textPositions = new ArrayList<>();
-                        textPositions.add("Default");
-                        for (TextPosition textPosition : TextPosition.values()) {
-                            textPositions.add(textPosition.name());
-                        }
-                        final ArrayAdapter<CharSequence> textPositionAdapter
-                                = new ArrayAdapter<>(
-                                AccountKitLoginActivity.this,
-                                android.R.layout.simple_spinner_dropdown_item,
-                                textPositions);
-
-                        textPositionSpinner.setAdapter(textPositionAdapter);
-                        textPositionSpinner.setOnItemSelectedListener(
-                                new AdapterView.OnItemSelectedListener() {
-                                    @Override
-                                    public void onItemSelected(
-                                            final AdapterView<?> parent,
-                                            final View view,
-                                            final int position,
-                                            final long id) {
-                                        // First position is empty, so anything past
-                                        // that
-                                        if (position > 0) {
-                                            textPosition = TextPosition.valueOf(
-                                                    textPositionSpinner
-                                                            .getSelectedItem()
-                                                            .toString());
-                                        } else {
-                                            textPosition = null;
-                                        }
-                                    }
-
-                                    @Override
-                                    public void onNothingSelected(
-                                            final AdapterView<?> parent) {
-                                        textPosition = null;
-                                    }
-                                });
-                    }
-                } else if (isReverbThemeSelected()) {
-                    advancedUISwitch.setChecked(true);
-                    Toast.makeText(
-                            AccountKitLoginActivity.this,
-                            R.string.reverb_advanced_ui_required,
-                            Toast.LENGTH_LONG)
-                            .show();
-                } else {
-                    advancedUIOptionsLayout.setVisibility(View.GONE);
-                }
-            }
-        });
-    }
-
-    private View setupSkinUIOptions() {
-        final View skinLayout = findViewById(R.id.skin_ui_options);
-        skinTintSpinner = (Spinner) skinLayout.findViewById(R.id.skin_tint_spinner);
-
-        final List<CharSequence> tints = new ArrayList<>();
-        for (SkinManager.Tint tint : SkinManager.Tint.values()) {
-            tints.add(tint.toString());
-        }
-
-        final ArrayAdapter<CharSequence> skinTintAdapter = new ArrayAdapter<>(
-                AccountKitLoginActivity.this,
-                android.R.layout.simple_spinner_dropdown_item,
-                tints);
-        skinTintSpinner.setAdapter(skinTintAdapter);
-
-        return skinLayout;
-    }
-
-    @Override
-    protected void onDestroy() {
-        LocalBroadcastManager.getInstance(getApplicationContext())
-                .unregisterReceiver(switchLoginTypeReceiver);
-
-        super.onDestroy();
-    }
-
-    public void onLoginEmail(final View view) {
-        onLogin(LoginType.EMAIL);
-    }
-
-    public void onLoginPhone(final View view) {
-        onLogin(LoginType.PHONE);
-    }
-
-    @Override
-    protected void onActivityResult(
-            final int requestCode,
-            final int resultCode,
-            final Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        if (requestCode != FRAMEWORK_REQUEST_CODE) {
-            return;
-        }
-
-        final String toastMessage;
-        final AccountKitLoginResult loginResult = AccountKit.loginResultWithIntent(data);
-        if (loginResult == null || loginResult.wasCancelled()) {
-            toastMessage = "Login Cancelled";
-        } else if (loginResult.getError() != null) {
-            toastMessage = loginResult.getError().getErrorType().getMessage();
-            showErrorActivity(loginResult.getError());
-        } else {
-            final AccessToken accessToken = loginResult.getAccessToken();
-            final String authorizationCode = loginResult.getAuthorizationCode();
-            final long tokenRefreshIntervalInSeconds =
-                    loginResult.getTokenRefreshIntervalInSeconds();
-            if (accessToken != null) {
-                toastMessage = "Success:" + accessToken.getAccountId()
-                        + tokenRefreshIntervalInSeconds;
-                showHelloActivity(loginResult.getFinalAuthorizationState());
-            } else if (authorizationCode != null) {
-                toastMessage = String.format(
-                        "Success:%s...",
-                        authorizationCode.substring(0, 10));
-                showHelloActivity(authorizationCode, loginResult.getFinalAuthorizationState());
-            } else {
-                toastMessage = "Unknown response type";
-            }
-        }
-
-        Toast.makeText(
-                this,
-                toastMessage,
-                Toast.LENGTH_LONG)
-                .show();
-    }
-
-    private AccountKitActivity.ResponseType getResponseType() {
-        final Switch responseTypeSwitch = (Switch) findViewById(R.id.response_type_switch);
-        if (responseTypeSwitch != null && responseTypeSwitch.isChecked()) {
-            return AccountKitActivity.ResponseType.TOKEN;
-        } else {
-            return AccountKitActivity.ResponseType.CODE;
-        }
-    }
-
-    private AccountKitConfiguration.AccountKitConfigurationBuilder createAccountKitConfiguration(
-            final LoginType loginType) {
-        AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder
-                = new AccountKitConfiguration.AccountKitConfigurationBuilder(
-                loginType,
-                getResponseType());
-        final Switch stateParamSwitch = (Switch) findViewById(R.id.state_param_switch);
-        final Switch facebookNotificationsSwitch =
-                (Switch) findViewById(R.id.facebook_notification_switch);
-        final Switch voiceCallSwitch =
-                (Switch) findViewById(R.id.voice_call_switch);
-        final Switch useManualWhiteListBlacklist =
-                (Switch) findViewById(R.id.whitelist_blacklist_switch);
-        final Switch readPhoneStateSwitch =
-                (Switch) findViewById(R.id.read_phone_state_switch);
-        final Switch receiveSMS =
-                (Switch) findViewById(R.id.receive_sms_switch);
-
-        final UIManager uiManager;
-        if (advancedUISwitch != null && advancedUISwitch.isChecked()) {
-            if (isReverbThemeSelected()) {
-                if (switchLoginTypeReceiver == null) {
-                    switchLoginTypeReceiver = new BroadcastReceiver() {
-                        @Override
-                        public void onReceive(final Context context, final Intent intent) {
-                            final String loginTypeString
-                                    = intent.getStringExtra(ReverbUIManager.LOGIN_TYPE_EXTRA);
-                            if (loginTypeString == null) {
-                                return;
-                            }
-                            final LoginType loginType = LoginType.valueOf(loginTypeString);
-                            onLogin(loginType);
-                        }
-                    };
-                    LocalBroadcastManager.getInstance(getApplicationContext())
-                            .registerReceiver(
-                                    switchLoginTypeReceiver,
-                                    new IntentFilter(ReverbUIManager.SWITCH_LOGIN_TYPE_EVENT));
-                }
-                uiManager = new ReverbUIManager(
-                        confirmButton,
-                        entryButton,
-                        loginType,
-                        textPosition,
-                        selectedThemeId);
-            } else {
-                uiManager = new AccountKitSampleAdvancedUIManager(
-                        confirmButton,
-                        entryButton,
-                        textPosition,
-                        loginType);
-            }
-        } else if (isSkinSelected()) {
-            final @ColorInt int primaryColor = ContextCompat.getColor(this, R.color.default_color);
-            if (getBackgroundImage() >= 0) {
-                uiManager = new SkinManager(
-                        skin,
-                        primaryColor,
-                        getBackgroundImage(),
-                        getSkinTintOption(),
-                        getSkinBackgroundTintIntensity());
-            } else {
-                uiManager = new SkinManager(skin, primaryColor);
-            }
-        } else {
-            uiManager = new ThemeUIManager(selectedThemeId);
-        }
-
-        configurationBuilder.setUIManager(uiManager);
-
-        if (stateParamSwitch != null && stateParamSwitch.isChecked()) {
-            initialStateParam = UUID.randomUUID().toString();
-            configurationBuilder.setInitialAuthState(initialStateParam);
-        }
-
-        if (facebookNotificationsSwitch != null && !facebookNotificationsSwitch.isChecked()) {
-            configurationBuilder.setFacebookNotificationsEnabled(false);
-        }
-        if (voiceCallSwitch != null && !voiceCallSwitch.isChecked()) {
-            configurationBuilder.setVoiceCallbackNotificationsEnabled(false);
-        }
-
-        if (useManualWhiteListBlacklist != null && useManualWhiteListBlacklist.isChecked()) {
-            final String[] blackList
-                    = getResources().getStringArray(R.array.blacklistedSmsCountryCodes);
-            final String[] whiteList
-                    = getResources().getStringArray(R.array.whitelistedSmsCountryCodes);
-            configurationBuilder.setSMSBlacklist(blackList);
-            configurationBuilder.setSMSWhitelist(whiteList);
-        }
-
-        if (readPhoneStateSwitch != null && !(readPhoneStateSwitch.isChecked())) {
-            configurationBuilder.setReadPhoneStateEnabled(false);
-        }
-
-        if (receiveSMS != null && !receiveSMS.isChecked()) {
-            configurationBuilder.setReceiveSMS(false);
-        }
-
-        return configurationBuilder;
-    }
-
-    private double getSkinBackgroundTintIntensity() {
-        return (double) (skinBackgroundTintIntensity.getProgress() + TINT_SEEKBAR_ADJUSTMENT) / 100;
-    }
-
-    private SkinManager.Tint getSkinTintOption() {
-        return SkinManager.Tint.valueOf((String) skinTintSpinner.getSelectedItem());
-    }
-
-    private @DrawableRes int getBackgroundImage() {
-        @DrawableRes int bgId = selectedBackgroundId;
-        if (bgId < 0) {
-            bgId = DEFAULT_SKIN_BACKGROUND_IMAGE;
-        }
-        return skinBackgroundImage.isChecked() ? bgId : -1;
-    }
-
-    private boolean isReverbThemeSelected() {
-        return selectedThemeId == R.style.AppLoginTheme_Reverb_A
-                || selectedThemeId == R.style.AppLoginTheme_Reverb_B
-                || selectedThemeId == R.style.AppLoginTheme_Reverb_C;
-    }
-
-    private boolean isSkinSelected() {
-        return skin != SkinManager.Skin.NONE;
-    }
-
-    private void onLogin(final LoginType loginType) {
-        final Intent intent = new Intent(this, AccountKitActivity.class);
-        final AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder
-                = createAccountKitConfiguration(loginType);
-        final AccountKitConfiguration configuration = configurationBuilder.build();
-        intent.putExtra(
-                AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,
-                configuration);
-        OnCompleteListener completeListener = new OnCompleteListener() {
-            @Override
-            public void onComplete() {
-                startActivityForResult(intent, FRAMEWORK_REQUEST_CODE);
-            }
-        };
-        switch (loginType) {
-            case EMAIL:
-                if (!isGooglePlayServicesAvailable()) {
-                    final OnCompleteListener getAccountsCompleteListener = completeListener;
-                    completeListener = new OnCompleteListener() {
-                        @Override
-                        public void onComplete() {
-                            requestPermissions(
-                                    Manifest.permission.GET_ACCOUNTS,
-                                    R.string.permissions_get_accounts_title,
-                                    R.string.permissions_get_accounts_message,
-                                    getAccountsCompleteListener);
-                        }
-                    };
-                }
-                break;
-            case PHONE:
-                if (configuration.isReceiveSMSEnabled() && !canReadSmsWithoutPermission()) {
-                    final OnCompleteListener receiveSMSCompleteListener = completeListener;
-                    completeListener = new OnCompleteListener() {
-                        @Override
-                        public void onComplete() {
-                            requestPermissions(
-                                    Manifest.permission.RECEIVE_SMS,
-                                    R.string.permissions_receive_sms_title,
-                                    R.string.permissions_receive_sms_message,
-                                    receiveSMSCompleteListener);
-                        }
-                    };
-                }
-                if (configuration.isReadPhoneStateEnabled() && !isGooglePlayServicesAvailable()) {
-                    final OnCompleteListener readPhoneStateCompleteListener = completeListener;
-                    completeListener = new OnCompleteListener() {
-                        @Override
-                        public void onComplete() {
-                            requestPermissions(
-                                    Manifest.permission.READ_PHONE_STATE,
-                                    R.string.permissions_read_phone_state_title,
-                                    R.string.permissions_read_phone_state_message,
-                                    readPhoneStateCompleteListener);
-                        }
-                    };
-                }
-                break;
-        }
-        completeListener.onComplete();
-    }
-
-    private boolean isGooglePlayServicesAvailable() {
-        final GoogleApiAvailability apiAvailability = GoogleApiAvailability.getInstance();
-        int googlePlayServicesAvailable = apiAvailability.isGooglePlayServicesAvailable(this);
-        return googlePlayServicesAvailable == ConnectionResult.SUCCESS;
-    }
-
-    private boolean canReadSmsWithoutPermission() {
-        final GoogleApiAvailability apiAvailability = GoogleApiAvailability.getInstance();
-        int googlePlayServicesAvailable = apiAvailability.isGooglePlayServicesAvailable(this);
-        if (googlePlayServicesAvailable == ConnectionResult.SUCCESS) {
-            return true;
-        }
-        //TODO we should also check for Android O here t18761104
-
-        return false;
-    }
-
-    private void showHelloActivity(final String finalState) {
-        final Intent intent = new Intent(this, TokenActivity.class);
-        intent.putExtra(
-                TokenActivity.HELLO_TOKEN_ACTIVITY_INITIAL_STATE_EXTRA,
-                initialStateParam);
-        intent.putExtra(TokenActivity.HELLO_TOKEN_ACTIVITY_FINAL_STATE_EXTRA, finalState);
-        startActivity(intent);
-    }
-
-    private void showHelloActivity(final String code, final String finalState) {
-        final Intent intent = new Intent(this, CodeActivity.class);
-        intent.putExtra(CodeActivity.HELLO_CODE_ACTIVITY_CODE_EXTRA, code);
-        intent.putExtra(
-                CodeActivity.HELLO_CODE_ACTIVITY_INITIAL_STATE_EXTRA,
-                initialStateParam);
-        intent.putExtra(CodeActivity.HELLO_CODE_ACTIVITY_FINAL_STATE_EXTRA, finalState);
-
-        startActivity(intent);
-    }
-
-    private void showErrorActivity(final AccountKitError error) {
-        final Intent intent = new Intent(this, ErrorActivity.class);
-        intent.putExtra(ErrorActivity.HELLO_TOKEN_ACTIVITY_ERROR_EXTRA, error);
-
-        startActivity(intent);
-    }
-
-    private void requestPermissions(
-            final String permission,
-            final int rationaleTitleResourceId,
-            final int rationaleMessageResourceId,
-            final OnCompleteListener listener) {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
-            if (listener != null) {
-                listener.onComplete();
-            }
-            return;
-        }
-
-        checkRequestPermissions(
-                permission,
-                rationaleTitleResourceId,
-                rationaleMessageResourceId,
-                listener);
-    }
-
-    @TargetApi(23)
-    private void checkRequestPermissions(
-            final String permission,
-            final int rationaleTitleResourceId,
-            final int rationaleMessageResourceId,
-            final OnCompleteListener listener) {
-        if (checkSelfPermission(permission) == PackageManager.PERMISSION_GRANTED) {
-            if (listener != null) {
-                listener.onComplete();
-            }
-            return;
-        }
-
-        final int requestCode = nextPermissionsRequestCode++;
-        permissionsListeners.put(requestCode, listener);
-
-        if (shouldShowRequestPermissionRationale(permission)) {
-            new AlertDialog.Builder(this)
-                    .setTitle(rationaleTitleResourceId)
-                    .setMessage(rationaleMessageResourceId)
-                    .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-                        @Override
-                        public void onClick(final DialogInterface dialog, final int which) {
-                            requestPermissions(new String[] { permission }, requestCode);
-                        }
-                    })
-                    .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
-                        @Override
-                        public void onClick(final DialogInterface dialog, final int which) {
-                            // ignore and clean up the listener
-                            permissionsListeners.remove(requestCode);
-                        }
-                    })
-                    .setIcon(android.R.drawable.ic_dialog_alert)
-                    .show();
-        } else {
-            requestPermissions(new String[]{ permission }, requestCode);
-        }
-    }
-
-    @TargetApi(23)
-    @Override
-    public void onRequestPermissionsResult(
-        final int requestCode,
-        final @NonNull String[] permissions,
-        final @NonNull int[] grantResults) {
-        final OnCompleteListener permissionsListener = permissionsListeners.get(requestCode);
-        permissionsListeners.remove(requestCode);
-        if (permissionsListener != null
-                && grantResults.length > 0
-                && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-            permissionsListener.onComplete();
-        }
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
deleted file mode 100644
index 13f2a37f4..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
+++ /dev/null
@@ -1,229 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Fragment;
-import android.os.Parcel;
-import android.support.annotation.Nullable;
-
-import com.facebook.accountkit.AccountKitError;
-import com.facebook.accountkit.ui.BaseUIManager;
-import com.facebook.accountkit.ui.ButtonType;
-import com.facebook.accountkit.ui.LoginFlowState;
-import com.facebook.accountkit.ui.LoginType;
-import com.facebook.accountkit.ui.TextPosition;
-import com.facebook.samples.loginsample.R;
-
-public class AccountKitSampleAdvancedUIManager extends BaseUIManager {
-    private static final int BODY_HEIGHT = 80;
-    private static final int FOOTER_HEIGHT = 120;
-    private static final int HEADER_HEIGHT = 80;
-
-    private final ButtonType confirmButton;
-    private final ButtonType entryButton;
-    private AccountKitError error;
-    private LoginType loginType;
-    private final TextPosition textPosition;
-
-    @Deprecated
-    public AccountKitSampleAdvancedUIManager(
-            final ButtonType confirmButton,
-            final ButtonType entryButton,
-            final TextPosition textPosition,
-            final LoginType loginType) {
-        super(-1);
-        this.confirmButton = confirmButton;
-        this.entryButton = entryButton;
-        this.textPosition = textPosition;
-        this.loginType = loginType;
-    }
-
-    private AccountKitSampleAdvancedUIManager(final Parcel source) {
-        super(source);
-        this.loginType = LoginType.values()[source.readInt()];
-        String s = source.readString();
-        final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
-        s = source.readString();
-        final ButtonType entryButton = s == null ? null : ButtonType.valueOf(s);
-        s = source.readString();
-        final TextPosition textPosition = s == null ? null : TextPosition.valueOf(s);
-        this.confirmButton = confirmButton;
-        this.entryButton = entryButton;
-        this.textPosition = textPosition;
-    }
-
-    @Override
-    @Nullable
-    public Fragment getBodyFragment(final LoginFlowState state) {
-        return getPlaceholderFragment(state, BODY_HEIGHT, "Body");
-    }
-
-    @Override
-    @Nullable
-    public ButtonType getButtonType(final LoginFlowState state) {
-        switch (state) {
-            case PHONE_NUMBER_INPUT:
-            case EMAIL_INPUT:
-                return entryButton;
-            case CODE_INPUT:
-            case CONFIRM_ACCOUNT_VERIFIED:
-                return confirmButton;
-            default:
-                return null;
-        }
-    }
-
-    @Override
-    @Nullable
-    public Fragment getFooterFragment(final LoginFlowState state) {
-        return getPlaceholderFragment(state, FOOTER_HEIGHT, "Footer");
-    }
-
-    @Override
-    @Nullable
-    public Fragment getHeaderFragment(final LoginFlowState state) {
-        if (state != LoginFlowState.ERROR) {
-            return getPlaceholderFragment(state, HEADER_HEIGHT, "Header");
-        }
-        final String errorMessage = getErrorMessage();
-        if (errorMessage == null) {
-            return PlaceholderFragment.create(HEADER_HEIGHT, R.string.error_message);
-        } else {
-            return PlaceholderFragment.create(HEADER_HEIGHT, errorMessage);
-        }
-    }
-
-    @Override
-    @Nullable
-    public TextPosition getTextPosition(final LoginFlowState state) {
-        return textPosition;
-    }
-
-    @Override
-    public void onError(final AccountKitError error) {
-        this.error = error;
-    }
-
-    private String getErrorMessage() {
-        if (error == null) {
-            return null;
-        }
-
-        final String message = error.getUserFacingMessage();
-        if (message == null) {
-            return null;
-        }
-
-        return message;
-    }
-
-    @Nullable
-    private PlaceholderFragment getPlaceholderFragment(
-            final LoginFlowState state,
-            final int height,
-            final String suffix) {
-        final String prefix;
-        switch (state) {
-            case PHONE_NUMBER_INPUT:
-                prefix = "Custom Phone Number ";
-                break;
-            case EMAIL_INPUT:
-                prefix = "Custom Email ";
-                break;
-            case ACCOUNT_VERIFIED:
-                prefix = "Custom Account Verified ";
-                break;
-            case CONFIRM_ACCOUNT_VERIFIED:
-                prefix = "Custom Confirm Account Verified ";
-                break;
-            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
-                prefix = "Custom Confirm Instant Verification Login ";
-                break;
-            case EMAIL_VERIFY:
-                prefix = "Custom Email Verify ";
-                break;
-            case SENDING_CODE:
-                switch (loginType) {
-                    case EMAIL:
-                        prefix = "Custom Sending Email ";
-                        break;
-                    case PHONE:
-                        prefix = "Custom Sending Code ";
-                        break;
-                    default:
-                        return null;
-                }
-                break;
-            case SENT_CODE:
-                switch (loginType) {
-                    case EMAIL:
-                        prefix = "Custom Sent Email ";
-                        break;
-                    case PHONE:
-                        prefix = "Custom Sent Code ";
-                        break;
-                    default:
-                        return null;
-                }
-                break;
-            case CODE_INPUT:
-                prefix = "Custom Code Input ";
-                break;
-            case VERIFYING_CODE:
-                prefix = "Custom Verifying ";
-                break;
-            case VERIFIED:
-                prefix = "Custom Verified ";
-                break;
-            case RESEND:
-                prefix = "Custom Resend ";
-                break;
-            case ERROR:
-                prefix = "Custom Error ";
-                break;
-            default:
-                return null;
-        }
-        return PlaceholderFragment.create(height, prefix.concat(suffix));
-    }
-
-    @Override
-    public void writeToParcel(final Parcel dest, final int flags) {
-        super.writeToParcel(dest, flags);
-        dest.writeInt(loginType.ordinal());
-        dest.writeString(confirmButton != null ? confirmButton.name() : null);
-        dest.writeString(entryButton != null ? entryButton.name() : null);
-        dest.writeString(textPosition != null ? textPosition.name() : null);
-    }
-
-    public static final Creator<AccountKitSampleAdvancedUIManager> CREATOR
-            = new Creator<AccountKitSampleAdvancedUIManager>() {
-        @Override
-        public AccountKitSampleAdvancedUIManager createFromParcel(final Parcel source) {
-            return new AccountKitSampleAdvancedUIManager(source);
-        }
-
-        @Override
-        public AccountKitSampleAdvancedUIManager[] newArray(final int size) {
-            return new AccountKitSampleAdvancedUIManager[size];
-        }
-    };
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/CodeActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/CodeActivity.java
deleted file mode 100644
index f679d79ff..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/CodeActivity.java
+++ /dev/null
@@ -1,88 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-
-import com.facebook.accountkit.AccountKit;
-import com.facebook.samples.loginsample.R;
-
-public class CodeActivity extends Activity {
-    static final String HELLO_CODE_ACTIVITY_CODE_EXTRA = "HELLO_CODE_ACTIVITY_CODE_EXTRA";
-    static final String HELLO_CODE_ACTIVITY_FINAL_STATE_EXTRA =
-            "HELLO_CODE_ACTIVITY_FINAL_STATE_EXTRA";
-    static final String HELLO_CODE_ACTIVITY_INITIAL_STATE_EXTRA =
-            "HELLO_CODE_ACTIVITY_INITIAL_STATE_EXTRA";
-
-    @Override
-    public void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_hello_code);
-
-        final String code = getIntent().getStringExtra(HELLO_CODE_ACTIVITY_CODE_EXTRA);
-        final String finalState =
-                getIntent().getStringExtra(HELLO_CODE_ACTIVITY_FINAL_STATE_EXTRA);
-        final String initialState =
-                getIntent().getStringExtra(HELLO_CODE_ACTIVITY_INITIAL_STATE_EXTRA);
-
-        if (code != null) {
-            final TextView codeView = (TextView) findViewById(R.id.code);
-            if (codeView != null) {
-                codeView.setText(code);
-            }
-        }
-
-        if (initialState != null) {
-            final TextView initialStateView = (TextView) findViewById(R.id.initial_state);
-            final TextView initialStateLabelView =
-                    (TextView) findViewById(R.id.initial_state_label);
-            if (initialStateView != null && initialStateLabelView != null) {
-                initialStateView.setText(initialState);
-                initialStateView.setVisibility(View.VISIBLE);
-                initialStateLabelView.setVisibility(View.VISIBLE);
-            }
-        }
-
-        if (finalState != null) {
-            final TextView finalStateView = (TextView) findViewById(R.id.final_state);
-            final TextView finalStateLabelView =
-                    (TextView) findViewById(R.id.final_state_label);
-            if (finalStateView != null && finalStateLabelView != null) {
-                finalStateView.setText(finalState);
-                finalStateView.setVisibility(View.VISIBLE);
-                finalStateLabelView.setVisibility(View.VISIBLE);
-            }
-        }
-
-        final Button signOut = (Button) findViewById(R.id.log_out_button);
-        signOut.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                AccountKit.logOut();
-                finish();
-            }
-        });
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ErrorActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ErrorActivity.java
deleted file mode 100644
index 3aefa408c..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ErrorActivity.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-
-import com.facebook.accountkit.AccountKit;
-import com.facebook.accountkit.AccountKitError;
-import com.facebook.samples.loginsample.R;
-
-public class ErrorActivity extends Activity {
-    static final String HELLO_TOKEN_ACTIVITY_ERROR_EXTRA =
-            "HELLO_TOKEN_ACTIVITY_ERROR_EXTRA";
-
-    @Override
-    public void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_error);
-
-        final Button signOut = (Button) findViewById(R.id.log_out_button);
-        signOut.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                AccountKit.logOut();
-                finish();
-            }
-        });
-
-        final AccountKitError error =
-                getIntent().getParcelableExtra(HELLO_TOKEN_ACTIVITY_ERROR_EXTRA);
-
-        final TextView errorView = (TextView) findViewById(R.id.error);
-        if (errorView != null) {
-            if (error != null) {
-                errorView.setText(error.toString());
-            } else {
-                errorView.setText(R.string.na);
-            }
-        }
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/InflateFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/InflateFragment.java
deleted file mode 100644
index ffe5a5241..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/InflateFragment.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.app.Fragment;
-import android.content.Context;
-import android.os.Bundle;
-import android.util.AttributeSet;
-import com.facebook.samples.loginsample.R;
-
-@SuppressWarnings("All")
-class InflateFragment extends Fragment {
-    @TargetApi(11)
-    @Override
-    public void onInflate(final AttributeSet attrs, final Bundle savedInstanceState) {
-        super.onInflate(attrs, savedInstanceState);
-        handleAttributes(attrs);
-    }
-
-    @TargetApi(21)
-    @Override
-    public void onInflate(
-            final Activity activity,
-            final AttributeSet attrs,
-            final Bundle savedInstanceState) {
-        super.onInflate(activity, attrs, savedInstanceState);
-        handleAttributes(attrs);
-    }
-
-    @TargetApi(23)
-    @Override
-    public void onInflate(
-            final Context context,
-            final AttributeSet attrs,
-            final Bundle savedInstanceState) {
-        super.onInflate(context, attrs, savedInstanceState);
-        handleAttributes(attrs);
-    }
-
-    protected void handleAttributes(final AttributeSet attrs) {
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/PlaceholderFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/PlaceholderFragment.java
deleted file mode 100644
index d15c55865..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/PlaceholderFragment.java
+++ /dev/null
@@ -1,105 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Fragment;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.util.TypedValue;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-import com.facebook.samples.loginsample.R;
-
-public class PlaceholderFragment extends Fragment {
-    private static final String HEIGHT_KEY = "height";
-    private static final String TEXT_KEY = "text";
-    private static final String TEXT_RESOURCE_ID_KEY = "textResourceId";
-
-    private View.OnClickListener onClickListener;
-
-    public static PlaceholderFragment create(final int height, final String text) {
-        final PlaceholderFragment fragment = new PlaceholderFragment();
-        final Bundle arguments = new Bundle();
-        arguments.putInt(HEIGHT_KEY, height);
-        arguments.putString(TEXT_KEY, text);
-        fragment.setArguments(arguments);
-        return fragment;
-    }
-
-    public static PlaceholderFragment create(final int height, final int textResourceId) {
-        final PlaceholderFragment fragment = new PlaceholderFragment();
-        final Bundle arguments = new Bundle();
-        arguments.putInt(HEIGHT_KEY, height);
-        arguments.putInt(TEXT_RESOURCE_ID_KEY, textResourceId);
-        fragment.setArguments(arguments);
-        return fragment;
-    }
-
-    public void setOnClickListener(final View.OnClickListener onClickListener) {
-        this.onClickListener = onClickListener;
-        final View view = getView();
-        if (view != null) {
-            view.setOnClickListener(onClickListener);
-        }
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(
-            final LayoutInflater inflater,
-            final ViewGroup container,
-            @Nullable final Bundle savedInstanceState) {
-        View view = super.onCreateView(inflater, container, savedInstanceState);
-        if (view == null) {
-            view = inflater.inflate(R.layout.fragment_placeholder, container, false);
-        }
-
-        final Bundle arguments = getArguments();
-        if (arguments != null) {
-            final int height = arguments.getInt(HEIGHT_KEY, -1);
-            if (height >= 0) {
-                view.getLayoutParams().height = (int) TypedValue.applyDimension(
-                        TypedValue.COMPLEX_UNIT_DIP,
-                        height,
-                        getResources().getDisplayMetrics());
-            }
-
-            final String text = arguments.getString(TEXT_KEY);
-            final int textResourceId = arguments.getInt(TEXT_RESOURCE_ID_KEY, -1);
-            final TextView textView = (TextView) view.findViewById(R.id.text_view);
-            if (textView != null) {
-                if (text != null) {
-                    textView.setText(text);
-                } else if (textResourceId > 0) {
-                    textView.setText(textResourceId);
-                }
-            }
-        }
-
-        if (onClickListener != null) {
-            view.setOnClickListener(onClickListener);
-        }
-
-        return view;
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbBodyFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbBodyFragment.java
deleted file mode 100644
index a5b656a88..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbBodyFragment.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Fragment;
-import android.graphics.drawable.Drawable;
-import android.os.Bundle;
-import android.support.v4.content.ContextCompat;
-import android.support.v4.graphics.drawable.DrawableCompat;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import com.facebook.samples.loginsample.R;
-
-public class ReverbBodyFragment extends Fragment {
-
-    private static final String ICON_RESOURCE_ID_KEY = "iconResourceId";
-    private static final String ICON_TINT_RESOURCE_ID_KEY = "iconTintResourceId";
-    private static final String SHOW_PROGRESS_SPINNER_KEY = "showProgressSpinner";
-
-    public static ReverbBodyFragment newInstance(
-            int iconResourceId,
-            int iconTintResourceId,
-            boolean showProgressSpinner) {
-
-        Bundle args = new Bundle();
-        args.putInt(ICON_RESOURCE_ID_KEY, iconResourceId);
-        args.putInt(ICON_TINT_RESOURCE_ID_KEY, iconTintResourceId);
-        args.putBoolean(SHOW_PROGRESS_SPINNER_KEY, showProgressSpinner);
-
-        ReverbBodyFragment fragment = new ReverbBodyFragment();
-        fragment.setArguments(args);
-        return fragment;
-    }
-
-    private int iconResourceId;
-    private int iconTintResourceId;
-    private boolean showProgressSpinner;
-
-    @Override
-    public View onCreateView(
-            final LayoutInflater inflater,
-            final ViewGroup container,
-            final Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_reverb_body, container, false);
-    }
-
-    @Override
-    public void onViewCreated(View view, Bundle savedInstanceState) {
-        iconResourceId = getArguments().getInt(ICON_RESOURCE_ID_KEY);
-        iconTintResourceId = getArguments().getInt(ICON_TINT_RESOURCE_ID_KEY);
-        showProgressSpinner = getArguments().getBoolean(SHOW_PROGRESS_SPINNER_KEY);
-        updateIcon(view);
-    }
-
-    private void updateIcon(final View view) {
-
-        final View progressSpinner = view.findViewById(R.id.reverb_progress_spinner);
-        if (progressSpinner != null) {
-            progressSpinner.setVisibility(showProgressSpinner ? View.VISIBLE : View.GONE);
-        }
-
-        final ImageView iconView = (ImageView) view.findViewById(R.id.reverb_icon);
-        if (iconView != null) {
-            if (iconResourceId > 0) {
-
-                /*
-                 * Api levels lower than 21 do not support android:tint in xml drawables. Tint can
-                 * be applied with DrawableCompat
-                 */
-                Drawable icon = getResources().getDrawable(iconResourceId);
-                if(iconTintResourceId > 0) {
-                    icon = DrawableCompat.wrap(icon);
-                    DrawableCompat.setTint(
-                            icon,
-                            ContextCompat.getColor(view.getContext(), R.color.reverb_dark));
-                }
-
-                iconView.setImageDrawable(icon);
-                iconView.setVisibility(View.VISIBLE);
-            } else {
-                iconView.setVisibility(View.GONE);
-            }
-        }
-    }
-
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
deleted file mode 100644
index e6ea9402b..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Fragment;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import com.facebook.accountkit.ui.LoginType;
-import com.facebook.samples.loginsample.R;
-
-public class ReverbFooterFragment extends Fragment {
-    private static final String LOGIN_TYPE_KEY = "loginType";
-    private static final String PROGRESS_KEY = "progress";
-    private static final String PROGRESS_TYPE_KEY = "progressType";
-
-    public enum ProgressType {
-        BAR,
-        DOTS,
-    }
-
-    public interface OnSwitchLoginTypeListener {
-        void onSwitchLoginType();
-    }
-
-    private LoginType loginType;
-    private OnSwitchLoginTypeListener onSwitchLoginTypeListener;
-    private int progress = 0;
-    private ProgressType progressType = ProgressType.BAR;
-
-    public void setLoginType(final LoginType loginType) {
-        if (loginType == null) {
-            return;
-        }
-        this.loginType = loginType;
-        updateButtonText(getView());
-    }
-
-    public void setOnSwitchLoginTypeListener(
-            final OnSwitchLoginTypeListener onSwitchLoginTypeListener) {
-        this.onSwitchLoginTypeListener = onSwitchLoginTypeListener;
-        updateSwitchLoginTypeListener(getView());
-    }
-
-    public void setProgress(final int progress) {
-        this.progress = progress;
-        updateProgress(getView());
-    }
-
-    public void setProgressType(final ProgressType progressType) {
-        if (progressType == null) {
-            return;
-        }
-        this.progressType = progressType;
-    }
-
-    public View onCreateView(
-            final LayoutInflater inflater,
-            final ViewGroup container,
-            final Bundle savedInstanceState) {
-        if (savedInstanceState != null) {
-            final String loginTypeString = savedInstanceState.getString(LOGIN_TYPE_KEY);
-            loginType = loginTypeString == null ? loginType : LoginType.valueOf(loginTypeString);
-            progress = savedInstanceState.getInt(PROGRESS_KEY, progress);
-            final String progressTypeString = savedInstanceState.getString(PROGRESS_TYPE_KEY);
-            progressType = progressTypeString == null
-                    ? progressType
-                    : ProgressType.valueOf(progressTypeString);
-        }
-
-        View view = super.onCreateView(inflater, container, savedInstanceState);
-        if (view == null) {
-            final int layoutResourceId;
-            switch (progressType) {
-                case DOTS:
-                    layoutResourceId = R.layout.fragment_reverb_footer_dots;
-                    break;
-                case BAR:
-                default:
-                    layoutResourceId = R.layout.fragment_reverb_footer_bar;
-                    break;
-            }
-            view = inflater.inflate(layoutResourceId, container, false);
-        }
-        updateButtonText(view);
-        updateProgress(view);
-        updateSwitchLoginTypeListener(view);
-        return view;
-    }
-
-    @Override
-    public void onSaveInstanceState(final Bundle outState) {
-        super.onSaveInstanceState(outState);
-
-        outState.putString(LOGIN_TYPE_KEY, loginType == null ? null : loginType.name());
-        outState.putInt(PROGRESS_KEY, progress);
-        outState.putString(PROGRESS_TYPE_KEY, progressType.name());
-    }
-
-    private void updateButtonText(@Nullable final View view) {
-        if (view == null) {
-            return;
-        }
-        final TextView switchLoginTypeButton
-                = (TextView) view.findViewById(R.id.switch_login_type_button);
-        if (switchLoginTypeButton == null) {
-            return;
-        }
-        if (loginType == null) {
-            switchLoginTypeButton.setVisibility(View.GONE);
-            return;
-        }
-        switch (loginType) {
-            case EMAIL:
-                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_phone);
-                break;
-            case PHONE:
-                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_email);
-                break;
-        }
-        switchLoginTypeButton.setVisibility(View.VISIBLE);
-    }
-
-    private void updateProgress(@Nullable final View view) {
-        if (view == null) {
-            return;
-        }
-
-        final ProgressBar progressBar = (ProgressBar) view.findViewById(R.id.reverb_progress_bar);
-        if (progressBar != null) {
-            progressBar.setProgress(progress);
-        }
-    }
-
-    private void updateSwitchLoginTypeListener(@Nullable final View view) {
-        if (view == null || onSwitchLoginTypeListener == null) {
-            return;
-        }
-        final View switchLoginTypeButton = view.findViewById(R.id.switch_login_type_button);
-        if (switchLoginTypeButton == null) {
-            return;
-        }
-        switchLoginTypeButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(final View v) {
-                if (onSwitchLoginTypeListener != null) {
-                    onSwitchLoginTypeListener.onSwitchLoginType();
-                }
-            }
-        });
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
deleted file mode 100644
index 8b69463ca..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
+++ /dev/null
@@ -1,254 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Activity;
-import android.app.Fragment;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Parcel;
-import android.support.annotation.Nullable;
-import android.support.v4.content.LocalBroadcastManager;
-
-import com.facebook.accountkit.ui.BaseUIManager;
-import com.facebook.accountkit.ui.ButtonType;
-import com.facebook.accountkit.ui.LoginFlowState;
-import com.facebook.accountkit.ui.LoginType;
-import com.facebook.accountkit.ui.TextPosition;
-import com.facebook.samples.loginsample.R;
-
-public class ReverbUIManager extends BaseUIManager {
-    public static final String LOGIN_TYPE_EXTRA = "loginType";
-    public static final String SWITCH_LOGIN_TYPE_EVENT = "switch-login-type";
-
-    private final ButtonType confirmButton;
-    private final ButtonType entryButton;
-    private final LoginType loginType;
-    private final TextPosition textPosition;
-
-    public ReverbUIManager(
-            final ButtonType confirmButton,
-            final ButtonType entryButton,
-            final LoginType loginType,
-            final TextPosition textPosition,
-            final int themeResourceId) {
-        super(themeResourceId);
-        this.confirmButton = confirmButton;
-        this.entryButton = entryButton;
-        this.loginType = loginType;
-        this.textPosition = textPosition;
-    }
-
-    private ReverbUIManager(final Parcel source) {
-        super(source);
-        this.loginType = LoginType.values()[source.readInt()];
-        String s = source.readString();
-        final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
-        s = source.readString();
-        final ButtonType entryButton = s == null ? null : ButtonType.valueOf(s);
-        s = source.readString();
-        final TextPosition textPosition = s == null ? null : TextPosition.valueOf(s);
-        this.confirmButton = confirmButton;
-        this.entryButton = entryButton;
-        this.textPosition = textPosition;
-    }
-
-    @Override
-    @Nullable
-    public Fragment getBodyFragment(final LoginFlowState state) {
-        int iconResourceId = 0;
-        int iconTintResourceId = 0;
-        boolean showProgressSpinner = false;
-        switch (state) {
-            case SENDING_CODE:
-                showProgressSpinner = true;
-                break;
-            case SENT_CODE:
-                switch (loginType) {
-                    case EMAIL:
-                        iconResourceId = R.drawable.reverb_email;
-                        break;
-                    case PHONE:
-                        iconResourceId = R.drawable.reverb_progress_complete;
-                        break;
-                }
-                break;
-            case EMAIL_VERIFY:
-                iconResourceId = R.drawable.reverb_email_sent;
-                break;
-            case VERIFYING_CODE:
-            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
-                showProgressSpinner = true;
-                break;
-            case VERIFIED:
-                iconResourceId = R.drawable.reverb_progress_complete;
-                iconTintResourceId = R.color.reverb_dark;
-                break;
-            case ERROR:
-                iconResourceId = R.drawable.reverb_error;
-                break;
-            case PHONE_NUMBER_INPUT:
-            case EMAIL_INPUT:
-            case CODE_INPUT:
-            case CONFIRM_ACCOUNT_VERIFIED:
-            case RESEND:
-            case NONE:
-            default:
-                return null;
-        }
-
-        return ReverbBodyFragment.newInstance(
-                iconResourceId,
-                iconTintResourceId,
-                showProgressSpinner);
-    }
-
-    @Override
-    @Nullable
-    public ButtonType getButtonType(final LoginFlowState state) {
-        switch (state) {
-            case PHONE_NUMBER_INPUT:
-            case EMAIL_INPUT:
-                return entryButton;
-            case CODE_INPUT:
-            case CONFIRM_ACCOUNT_VERIFIED:
-                return confirmButton;
-            default:
-                return null;
-        }
-    }
-
-    @Override
-    @Nullable
-    public Fragment getFooterFragment(final LoginFlowState state) {
-        final int progress;
-        switch (state) {
-            case PHONE_NUMBER_INPUT:
-            case EMAIL_INPUT:
-                progress = 1;
-                break;
-            case SENDING_CODE:
-            case SENT_CODE:
-                progress = 2;
-                break;
-            case CODE_INPUT:
-            case EMAIL_VERIFY:
-            case CONFIRM_ACCOUNT_VERIFIED:
-                progress = 3;
-                break;
-            case VERIFYING_CODE:
-            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
-                progress = 4;
-                break;
-            case VERIFIED:
-                progress = 5;
-                break;
-            case RESEND:
-            case ERROR:
-            case NONE:
-            default:
-                return null;
-        }
-        final ReverbFooterFragment fragment = new ReverbFooterFragment();
-        if (progress == 1) {
-            fragment.setLoginType(loginType);
-            fragment.setOnSwitchLoginTypeListener(
-                    new ReverbFooterFragment.OnSwitchLoginTypeListener() {
-                        @Override
-                        public void onSwitchLoginType() {
-                            if (listener == null) {
-                                return;
-                            }
-
-                            listener.onCancel();
-
-                            final Activity activity = fragment.getActivity();
-                            if (activity == null) {
-                                return;
-                            }
-                            final Context applicationContext = activity.getApplicationContext();
-                            final LoginType newLoginType;
-                            switch (loginType) {
-                                case EMAIL:
-                                    newLoginType = LoginType.PHONE;
-                                    break;
-                                case PHONE:
-                                    newLoginType = LoginType.EMAIL;
-                                    break;
-                                default:
-                                    return;
-                            }
-                            LocalBroadcastManager
-                                    .getInstance(applicationContext)
-                                    .sendBroadcast(new Intent(SWITCH_LOGIN_TYPE_EVENT)
-                                            .putExtra(LOGIN_TYPE_EXTRA, newLoginType.name()));
-                        }
-                    });
-        }
-        if (getThemeId() == R.style.AppLoginTheme_Reverb_A) {
-            fragment.setProgressType(ReverbFooterFragment.ProgressType.BAR);
-        } else if (getThemeId() == R.style.AppLoginTheme_Reverb_B
-                || getThemeId() == R.style.AppLoginTheme_Reverb_C) {
-            fragment.setProgressType(ReverbFooterFragment.ProgressType.DOTS);
-        }
-        fragment.setProgress(progress);
-        return fragment;
-    }
-
-    @Override
-    @Nullable
-    public Fragment getHeaderFragment(final LoginFlowState state) {
-        if (state == LoginFlowState.ERROR) {
-            return null;
-        } else {
-            return SpaceFragment.create(
-                    R.styleable.Theme_AccountKitSample_Style_reverb_content_margin_top);
-        }
-    }
-
-    @Override
-    @Nullable
-    public TextPosition getTextPosition(final LoginFlowState state) {
-        return textPosition == null ? TextPosition.ABOVE_BODY : textPosition;
-    }
-
-    @Override
-    public void writeToParcel(final Parcel dest, final int flags) {
-        super.writeToParcel(dest, flags);
-        dest.writeInt(loginType.ordinal());
-        dest.writeString(confirmButton != null ? confirmButton.name() : null);
-        dest.writeString(entryButton != null ? entryButton.name() : null);
-        dest.writeString(textPosition != null ? textPosition.name() : null);
-    }
-
-    public static final Creator<ReverbUIManager> CREATOR
-            = new Creator<ReverbUIManager>() {
-        @Override
-        public ReverbUIManager createFromParcel(final Parcel source) {
-            return new ReverbUIManager(source);
-        }
-
-        @Override
-        public ReverbUIManager[] newArray(final int size) {
-            return new ReverbUIManager[size];
-        }
-    };
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/SpaceFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/SpaceFragment.java
deleted file mode 100644
index 9f28c34da..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/SpaceFragment.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Activity;
-import android.content.res.TypedArray;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import com.facebook.samples.loginsample.R;
-
-public class SpaceFragment extends InflateFragment {
-
-    private static final String HEIGHT_ATTRIBUTE_KEY = "heightAttribute";
-
-    private AttributeSet attributes;
-
-    public static SpaceFragment create(final int heightAttribute) {
-        final SpaceFragment fragment = new SpaceFragment();
-        final Bundle arguments = new Bundle();
-        arguments.putInt(HEIGHT_ATTRIBUTE_KEY, heightAttribute);
-        fragment.setArguments(arguments);
-        return fragment;
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(
-            final LayoutInflater inflater,
-            final ViewGroup container,
-            final Bundle savedInstanceState) {
-        View view = super.onCreateView(inflater, container, savedInstanceState);
-        if (view == null) {
-            view = inflater.inflate(R.layout.fragment_space, container, false);
-        }
-        updateHeight(view);
-        return view;
-    }
-
-    @Override
-    protected void handleAttributes(final AttributeSet attrs) {
-        attributes = attrs;
-        updateHeight(getView());
-    }
-
-    private void updateHeight(final View view) {
-        if (view == null) {
-            return;
-        }
-        final Activity activity = getActivity();
-        if (activity == null) {
-            return;
-        }
-
-        final Bundle arguments = getArguments();
-        if (arguments == null) {
-            return;
-        }
-
-        final int heightAttribute = arguments.getInt(HEIGHT_ATTRIBUTE_KEY, -1);
-        if (heightAttribute >= 0) {
-            final TypedArray a = activity.obtainStyledAttributes(
-                    attributes,
-                    R.styleable.Theme_AccountKitSample_Style);
-            final int heightAttributeValue = a.getDimensionPixelSize(heightAttribute, -1);
-            a.recycle();
-            if (heightAttributeValue >= 0) {
-                view.getLayoutParams().height = heightAttributeValue;
-            }
-        }
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
deleted file mode 100644
index 908b8a457..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-
-import com.facebook.accountkit.Account;
-import com.facebook.accountkit.AccountKit;
-import com.facebook.accountkit.AccountKitCallback;
-import com.facebook.accountkit.AccountKitError;
-import com.facebook.accountkit.PhoneNumber;
-import com.facebook.samples.loginsample.R;
-
-public class TokenActivity extends Activity {
-    static final String HELLO_TOKEN_ACTIVITY_FINAL_STATE_EXTRA =
-            "HELLO_TOKEN_ACTIVITY_FINAL_STATE_EXTRA";
-    static final String HELLO_TOKEN_ACTIVITY_INITIAL_STATE_EXTRA =
-            "HELLO_TOKEN_ACTIVITY_INITIAL_STATE_EXTRA";
-
-    @Override
-    public void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_hello_token);
-
-        final Button signOut = (Button) findViewById(R.id.log_out_button);
-        signOut.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                AccountKit.logOut();
-                finish();
-            }
-        });
-
-        final String finalState =
-                getIntent().getStringExtra(HELLO_TOKEN_ACTIVITY_FINAL_STATE_EXTRA);
-        final String initialState =
-                getIntent().getStringExtra(HELLO_TOKEN_ACTIVITY_INITIAL_STATE_EXTRA);
-
-        if (initialState != null) {
-            final TextView initialStateView = (TextView) findViewById(R.id.initial_state);
-            final TextView initialStateLabelView =
-                    (TextView) findViewById(R.id.initial_state_label);
-            if (initialStateView != null && initialStateLabelView != null) {
-                initialStateView.setText(initialState);
-                initialStateView.setVisibility(View.VISIBLE);
-                initialStateLabelView.setVisibility(View.VISIBLE);
-            }
-        }
-
-        if (finalState != null) {
-            final TextView finalStateView = (TextView) findViewById(R.id.final_state);
-            final TextView finalStateLabelView =
-                    (TextView) findViewById(R.id.final_state_label);
-            if (finalStateView != null && finalStateLabelView != null) {
-                finalStateView.setText(finalState);
-                finalStateView.setVisibility(View.VISIBLE);
-                finalStateLabelView.setVisibility(View.VISIBLE);
-            }
-        }
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-
-        AccountKit.getCurrentAccount(new AccountKitCallback<Account>() {
-            @Override
-            public void onSuccess(final Account account) {
-                final TextView userId = (TextView) findViewById(R.id.user_id);
-                userId.setText(account.getId());
-
-                final TextView phoneNumber = (TextView) findViewById(R.id.user_phone);
-                final PhoneNumber number = account.getPhoneNumber();
-                phoneNumber.setText(number == null ? null : number.toString());
-
-                final TextView email = (TextView) findViewById(R.id.user_email);
-                email.setText(account.getEmail());
-            }
-
-            @Override
-            public void onError(final AccountKitError error) {
-            }
-        });
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java
deleted file mode 100644
index 7ba24c86b..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java
+++ /dev/null
@@ -1,226 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.facebook;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.facebook.AccessToken;
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.HttpMethod;
-import com.facebook.Profile;
-import com.facebook.ProfileTracker;
-import com.facebook.login.DefaultAudience;
-import com.facebook.login.LoginManager;
-import com.facebook.login.LoginResult;
-import com.facebook.login.widget.LoginButton;
-import com.facebook.login.widget.ProfilePictureView;
-import com.facebook.samples.loginsample.R;
-
-import org.json.JSONException;
-
-public class FacebookLoginActivity extends AppCompatActivity {
-
-    private static final String GRAPH_PATH = "me/permissions";
-    private static final String SUCCESS = "success";
-
-    private static final int PICK_PERMS_REQUEST = 0;
-
-    private CallbackManager callbackManager;
-
-    private ProfilePictureView profilePictureView;
-    private TextView userNameView;
-    private LoginButton fbLoginButton;
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_facebook_login);
-
-        callbackManager = CallbackManager.Factory.create();
-
-        fbLoginButton = (LoginButton) findViewById(R.id._fb_login);
-        profilePictureView = (ProfilePictureView) findViewById(R.id.user_pic);
-        profilePictureView.setCropped(true);
-
-        userNameView = (TextView) findViewById(R.id.user_name);
-
-        final Button deAuthButton = (Button) findViewById(R.id.deauth);
-        deAuthButton.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View v) {
-                if (!isLoggedIn()) {
-                    Toast.makeText(
-                            FacebookLoginActivity.this,
-                            R.string.app_not_logged_in,
-                            Toast.LENGTH_LONG).show();
-                    return;
-                }
-                GraphRequest.Callback callback = new GraphRequest.Callback() {
-                    @Override
-                    public void onCompleted(GraphResponse response) {
-                        try {
-                            if(response.getError() != null) {
-                                Toast.makeText(
-                                        FacebookLoginActivity.this,
-                                        getResources().getString(
-                                                R.string.failed_to_deauth,
-                                                response.toString()),
-                                        Toast.LENGTH_LONG
-                                ).show();
-                            }
-                            else if (response.getJSONObject().getBoolean(SUCCESS)) {
-                                LoginManager.getInstance().logOut();
-                                // updateUI();?
-                            }
-                        } catch (JSONException ex) { /* no op */ }
-                    }
-                };
-                GraphRequest request = new GraphRequest(AccessToken.getCurrentAccessToken(),
-                        GRAPH_PATH, new Bundle(), HttpMethod.DELETE, callback);
-                request.executeAsync();
-            }
-        });
-
-        final Button permsButton = (Button) findViewById(R.id.perms);
-        permsButton.setOnClickListener(new View.OnClickListener() {
-            public void onClick(final View v) {
-                Intent selectPermsIntent =
-                        new Intent(FacebookLoginActivity.this, PermissionSelectActivity.class);
-                startActivityForResult(selectPermsIntent, PICK_PERMS_REQUEST);
-            }
-        });
-
-        // Callback registration
-        fbLoginButton.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {
-            @Override
-            public void onSuccess(final LoginResult loginResult) {
-                // App code
-                Toast.makeText(
-                        FacebookLoginActivity.this,
-                        R.string.success,
-                        Toast.LENGTH_LONG).show();
-                updateUI();
-            }
-
-            @Override
-            public void onCancel() {
-                // App code
-                Toast.makeText(
-                        FacebookLoginActivity.this,
-                        R.string.cancel,
-                        Toast.LENGTH_LONG).show();
-            }
-
-            @Override
-            public void onError(final FacebookException exception) {
-                // App code
-                Toast.makeText(
-                        FacebookLoginActivity.this,
-                        R.string.error,
-                        Toast.LENGTH_LONG).show();
-            }
-        });
-
-        new ProfileTracker() {
-            @Override
-            protected void onCurrentProfileChanged(
-                    final Profile oldProfile,
-                    final Profile currentProfile) {
-                updateUI();
-            }
-        };
-    }
-
-    private boolean isLoggedIn() {
-        AccessToken accesstoken = AccessToken.getCurrentAccessToken();
-        return !(accesstoken == null || accesstoken.getPermissions().isEmpty());
-    }
-
-    private void updateUI() {
-        Profile profile = Profile.getCurrentProfile();
-        if (profile != null) {
-            profilePictureView.setProfileId(profile.getId());
-            userNameView
-                    .setText(String.format("%s %s",profile.getFirstName(), profile.getLastName()));
-        } else {
-            profilePictureView.setProfileId(null);
-            userNameView.setText(getString(R.string.welcome));
-        }
-    }
-
-    @Override
-    protected void onActivityResult(
-            final int requestCode,
-            final int resultCode,
-            final Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        if(requestCode == PICK_PERMS_REQUEST) {
-            if(resultCode == RESULT_OK) {
-                String[] readPermsArr = data
-                        .getStringArrayExtra(PermissionSelectActivity.EXTRA_SELECTED_READ_PARAMS);
-                String writePrivacy = data
-                        .getStringExtra(PermissionSelectActivity.EXTRA_SELECTED_WRITE_PRIVACY);
-                String[] publishPermsArr = data
-                        .getStringArrayExtra(
-                                PermissionSelectActivity.EXTRA_SELECTED_PUBLISH_PARAMS);
-
-                fbLoginButton.clearPermissions();
-
-                if (readPermsArr != null) {
-                    if(readPermsArr.length > 0) {
-                        fbLoginButton.setReadPermissions(readPermsArr);
-                    }
-                }
-
-                if ((readPermsArr == null ||
-                        readPermsArr.length == 0) &&
-                        publishPermsArr != null) {
-                    if(publishPermsArr.length > 0) {
-                        fbLoginButton.setPublishPermissions(publishPermsArr);
-                    }
-                }
-                // Set write privacy for the user
-                if ((writePrivacy != null)) {
-                    DefaultAudience audience;
-                    if (DefaultAudience.EVERYONE.toString().equals(writePrivacy)) {
-                        audience = DefaultAudience.EVERYONE;
-                    } else if (DefaultAudience.FRIENDS.toString().equals(writePrivacy)) {
-                        audience = DefaultAudience.FRIENDS;
-                    } else {
-                        audience = DefaultAudience.ONLY_ME;
-                    }
-                    fbLoginButton.setDefaultAudience(audience);
-                }
-            }
-        } else {
-            callbackManager.onActivityResult(requestCode, resultCode, data);
-        }
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java
deleted file mode 100644
index ee7db339c..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.facebook;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.SparseBooleanArray;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.ListView;
-import com.facebook.login.DefaultAudience;
-import com.facebook.samples.loginsample.R;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.Set;
-
-public class PermissionSelectActivity extends Activity implements OnClickListener{
-
-    public static final String TAG = PermissionSelectActivity.class.getSimpleName();
-
-    public static final String EXTRA_SELECTED_READ_PARAMS = TAG + ".selectedReadPerms";
-    public static final String EXTRA_SELECTED_WRITE_PRIVACY = TAG + ".selectedWritePrivacy";
-    public static final String EXTRA_SELECTED_PUBLISH_PARAMS = TAG + ".selectedPublishPerms";
-
-    // Permissions
-    public static String PUBLISH_ACTIONS = "publish_actions";
-    public static String PUBLISH_CHECKINS = "publish_checkins";
-    public static String ADS_MANAGEMENT = "ads_management";
-    public static String CREATE_EVENT = "create_event";
-    public static String MANAGE_FRIENDLISTS = "manage_friendlists";
-    public static String MANAGE_NOTIFICATIONS = "manage_notifications";
-    public static String MANAGE_PAGES = "manage_pages";
-    public static String RSVP_EVENT = "rsvp_event";
-
-    public static final Set<String> PUBLISH_PERMS_LIST = new HashSet<>(Arrays.asList(
-            PUBLISH_ACTIONS,
-            PUBLISH_CHECKINS,
-            ADS_MANAGEMENT,
-            CREATE_EVENT,
-            MANAGE_FRIENDLISTS,
-            MANAGE_NOTIFICATIONS,
-            MANAGE_PAGES,
-            RSVP_EVENT));
-
-    Button button;
-    ListView listView;
-    ArrayAdapter<String> adapter;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.list_perms_new);
-        listView = (ListView) findViewById(R.id.list);
-        button = (Button) findViewById(R.id.confirm);
-        String[] perms = getResources().getStringArray(R.array.perms_array);
-
-        adapter = new ArrayAdapter<>(this,
-                android.R.layout.simple_list_item_multiple_choice, perms);
-        listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
-        listView.setAdapter(adapter);
-        button.setOnClickListener(this);
-    }
-
-    public void onClick(View v) {
-        SparseBooleanArray checked = listView.getCheckedItemPositions();
-        ArrayList<String> readPerms = new ArrayList<>();
-        String writePri = null;
-        ArrayList<String> publishPerms = new ArrayList<>();
-        for (int i = 0; i < checked.size(); i++) {
-            // Item position in adapter
-            int position = checked.keyAt(i);
-            // Add perm only if checked
-            if (checked.valueAt(i)){
-                String checkedItem = adapter.getItem(position);
-                if (DefaultAudience.EVERYONE.toString().equals(checkedItem)) {
-                    writePri = "EVERYONE";
-                } else if (DefaultAudience.FRIENDS.toString().equals(checkedItem)) {
-                    writePri = "FRIENDS";
-                } else if (DefaultAudience.ONLY_ME.toString().equals(checkedItem)) {
-                    writePri = "ONLY_ME";
-                } else if ((PUBLISH_PERMS_LIST).contains(checkedItem)) {
-                    publishPerms.add(checkedItem);
-                } else
-                    readPerms.add(checkedItem);
-            }
-        }
-
-        String[] readPermsArr = readPerms.toArray(new String[readPerms.size()]);
-        String[] publishPermsArr = publishPerms.toArray(new String[publishPerms.size()]);
-        Intent intent=new Intent();
-        intent.putExtra(EXTRA_SELECTED_READ_PARAMS, readPermsArr);
-        intent.putExtra(EXTRA_SELECTED_WRITE_PRIVACY, writePri);
-        intent.putExtra(EXTRA_SELECTED_PUBLISH_PARAMS, publishPermsArr);
-        setResult(RESULT_OK, intent);
-        finish();
-    }
-}
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/bicycle.jpg b/samples/LoginSample/src/main/res/drawable-hdpi/bicycle.jpg
deleted file mode 100644
index f9793bcec..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/bicycle.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/dog.jpg b/samples/LoginSample/src/main/res/drawable-hdpi/dog.jpg
deleted file mode 100644
index 87d1c8011..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/dog.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_arrow_purple.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_arrow_purple.png
deleted file mode 100644
index d257e4801..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_arrow_purple.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_arrow_white.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_arrow_white.png
deleted file mode 100644
index 2b5fe5946..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_arrow_white.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_checkmark.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_checkmark.png
deleted file mode 100644
index c03233229..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_checkmark.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_email.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_email.png
deleted file mode 100644
index dc2ffbd70..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_email.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_email_sent.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_email_sent.png
deleted file mode 100644
index fe4a768f2..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_email_sent.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_error.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_error.png
deleted file mode 100644
index b4e8ef844..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_error.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_icon.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_icon.png
deleted file mode 100644
index ae2b9c625..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_icon.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_progress_ring.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_progress_ring.png
deleted file mode 100644
index 415b3b283..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_progress_ring.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_rating_bar_selected.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_rating_bar_selected.png
deleted file mode 100644
index 3271014a5..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_rating_bar_selected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_rating_bar_unselected.png b/samples/LoginSample/src/main/res/drawable-hdpi/reverb_rating_bar_unselected.png
deleted file mode 100644
index f0dae891a..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-hdpi/reverb_rating_bar_unselected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/bicycle.jpg b/samples/LoginSample/src/main/res/drawable-mdpi/bicycle.jpg
deleted file mode 100644
index aefd987f6..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/bicycle.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/dog.jpg b/samples/LoginSample/src/main/res/drawable-mdpi/dog.jpg
deleted file mode 100644
index 3d5437852..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/dog.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_arrow_purple.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_arrow_purple.png
deleted file mode 100644
index 7bff78a4c..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_arrow_purple.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_arrow_white.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_arrow_white.png
deleted file mode 100644
index 317eb1e35..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_arrow_white.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_checkmark.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_checkmark.png
deleted file mode 100644
index 6ec8827b8..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_checkmark.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_email.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_email.png
deleted file mode 100644
index 0c1a77a8c..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_email.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_email_sent.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_email_sent.png
deleted file mode 100644
index 56ff2acd2..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_email_sent.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_error.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_error.png
deleted file mode 100644
index 31ffdbb8d..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_error.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_icon.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_icon.png
deleted file mode 100644
index 413dacb18..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_icon.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_progress_ring.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_progress_ring.png
deleted file mode 100644
index 1cc00e784..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_progress_ring.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_rating_bar_selected.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_rating_bar_selected.png
deleted file mode 100644
index 2fc152447..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_rating_bar_selected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_rating_bar_unselected.png b/samples/LoginSample/src/main/res/drawable-mdpi/reverb_rating_bar_unselected.png
deleted file mode 100644
index 128c70666..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-mdpi/reverb_rating_bar_unselected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/bicycle.jpg b/samples/LoginSample/src/main/res/drawable-xhdpi/bicycle.jpg
deleted file mode 100644
index 542ad35f1..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/bicycle.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/dog.jpg b/samples/LoginSample/src/main/res/drawable-xhdpi/dog.jpg
deleted file mode 100644
index 16170ddf8..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/dog.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_arrow_purple.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_arrow_purple.png
deleted file mode 100644
index ae1e819c9..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_arrow_purple.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_arrow_white.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_arrow_white.png
deleted file mode 100644
index 607f8af4e..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_arrow_white.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_checkmark.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_checkmark.png
deleted file mode 100644
index daf155d69..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_checkmark.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_email.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_email.png
deleted file mode 100644
index 813db5112..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_email.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_email_sent.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_email_sent.png
deleted file mode 100644
index 144c1cbc5..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_email_sent.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_error.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_error.png
deleted file mode 100644
index 27c4c9ba7..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_error.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_icon.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_icon.png
deleted file mode 100644
index d3bb03e90..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_icon.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_progress_ring.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_progress_ring.png
deleted file mode 100644
index e76c5152a..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_progress_ring.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_rating_bar_selected.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_rating_bar_selected.png
deleted file mode 100644
index 0ebd0c33d..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_rating_bar_selected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_rating_bar_unselected.png b/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_rating_bar_unselected.png
deleted file mode 100644
index cae2f159f..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xhdpi/reverb_rating_bar_unselected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/bicycle.jpg b/samples/LoginSample/src/main/res/drawable-xxhdpi/bicycle.jpg
deleted file mode 100644
index a029a356a..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/bicycle.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/dog.jpg b/samples/LoginSample/src/main/res/drawable-xxhdpi/dog.jpg
deleted file mode 100644
index 81b3ee646..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/dog.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_arrow_purple.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_arrow_purple.png
deleted file mode 100644
index 965439d33..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_arrow_purple.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_arrow_white.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_arrow_white.png
deleted file mode 100644
index d6491c11a..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_arrow_white.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_checkmark.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_checkmark.png
deleted file mode 100644
index 7ac4d4328..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_checkmark.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_email.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_email.png
deleted file mode 100644
index d6906ad31..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_email.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_email_sent.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_email_sent.png
deleted file mode 100644
index d634b90d5..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_email_sent.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_error.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_error.png
deleted file mode 100644
index 4c5ff33f0..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_error.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_icon.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_icon.png
deleted file mode 100644
index cf2889df9..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_icon.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_progress_ring.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_progress_ring.png
deleted file mode 100644
index cd1af3e94..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_progress_ring.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_rating_bar_selected.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_rating_bar_selected.png
deleted file mode 100644
index 498cb9786..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_rating_bar_selected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_rating_bar_unselected.png b/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_rating_bar_unselected.png
deleted file mode 100644
index 5956cb39b..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxhdpi/reverb_rating_bar_unselected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/bicycle.jpg b/samples/LoginSample/src/main/res/drawable-xxxhdpi/bicycle.jpg
deleted file mode 100644
index 5e0c6c8c2..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/bicycle.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/dog.jpg b/samples/LoginSample/src/main/res/drawable-xxxhdpi/dog.jpg
deleted file mode 100644
index 8ee6d7166..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/dog.jpg and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_arrow_purple.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_arrow_purple.png
deleted file mode 100644
index 415d397ba..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_arrow_purple.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_arrow_white.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_arrow_white.png
deleted file mode 100644
index f68850d93..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_arrow_white.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_checkmark.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_checkmark.png
deleted file mode 100644
index 694f511eb..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_checkmark.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_email.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_email.png
deleted file mode 100644
index b76b5c2d9..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_email.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_email_sent.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_email_sent.png
deleted file mode 100644
index 6a0559955..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_email_sent.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_error.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_error.png
deleted file mode 100644
index fa6ac722a..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_error.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_icon.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_icon.png
deleted file mode 100644
index c59f539fb..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_icon.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_progress_ring.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_progress_ring.png
deleted file mode 100644
index cce40d2dd..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_progress_ring.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_rating_bar_selected.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_rating_bar_selected.png
deleted file mode 100644
index 2db4d892b..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_rating_bar_selected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_rating_bar_unselected.png b/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_rating_bar_unselected.png
deleted file mode 100644
index 84ff81eb7..000000000
Binary files a/samples/LoginSample/src/main/res/drawable-xxxhdpi/reverb_rating_bar_unselected.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/drawable/placeholder_background.xml b/samples/LoginSample/src/main/res/drawable/placeholder_background.xml
deleted file mode 100644
index 469f62a35..000000000
--- a/samples/LoginSample/src/main/res/drawable/placeholder_background.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item>
-        <shape android:shape="rectangle">
-            <solid android:color="#e02727" />
-        </shape>
-    </item>
-    <item
-        android:bottom="6dp"
-        android:left="6dp"
-        android:right="6dp"
-        android:top="6dp"
-        >
-        <shape android:shape="rectangle">
-            <corners android:radius="6dp" />
-            <stroke
-                android:color="#cccccccc"
-                android:dashGap="4dp"
-                android:dashWidth="8dp"
-                android:width="2dp"
-                />
-        </shape>
-    </item>
-</layer-list>
diff --git a/samples/LoginSample/src/main/res/drawable/reverb_progress_bar.xml b/samples/LoginSample/src/main/res/drawable/reverb_progress_bar.xml
deleted file mode 100644
index f7e0fac75..000000000
--- a/samples/LoginSample/src/main/res/drawable/reverb_progress_bar.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:id="@android:id/background">
-        <shape>
-            <corners android:radius="@dimen/reverb_progress_bar_corner_radius" />
-            <solid android:color="@color/reverb_light" />
-        </shape>
-    </item>
-    <item android:id="@android:id/secondaryProgress">
-        <shape>
-            <corners android:radius="@dimen/reverb_progress_bar_corner_radius" />
-            <solid android:color="@color/reverb_light" />
-        </shape>
-    </item>
-    <item android:id="@android:id/progress">
-        <clip>
-            <shape>
-                <corners android:radius="@dimen/reverb_progress_bar_corner_radius" />
-                <solid android:color="@color/reverb_dark" />
-            </shape>
-        </clip>
-    </item>
-</layer-list>
diff --git a/samples/LoginSample/src/main/res/drawable/reverb_progress_complete.xml b/samples/LoginSample/src/main/res/drawable/reverb_progress_complete.xml
deleted file mode 100644
index 06abcd053..000000000
--- a/samples/LoginSample/src/main/res/drawable/reverb_progress_complete.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item>
-        <shape
-            android:shape="ring"
-            android:innerRadius="37dp"
-            android:thickness="4dp"
-            android:useLevel="false"
-            >
-            <solid
-                android:color="@color/reverb_dark"
-                android:useLevel="false"
-                />
-        </shape>
-    </item>
-    <item>
-        <bitmap
-            android:src="@drawable/reverb_checkmark"
-            android:tint="@color/reverb_dark"
-            />
-    </item>
-</layer-list>
diff --git a/samples/LoginSample/src/main/res/drawable/reverb_progress_rotating_ring.xml b/samples/LoginSample/src/main/res/drawable/reverb_progress_rotating_ring.xml
deleted file mode 100644
index 5ae1d9c40..000000000
--- a/samples/LoginSample/src/main/res/drawable/reverb_progress_rotating_ring.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<rotate
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:drawable="@drawable/reverb_progress_ring"
-    android:fromDegrees="0"
-    android:pivotX="50%"
-    android:pivotY="50%"
-    android:toDegrees="720"
-    />
diff --git a/samples/LoginSample/src/main/res/drawable/reverb_rating_bar.xml b/samples/LoginSample/src/main/res/drawable/reverb_rating_bar.xml
deleted file mode 100644
index 7c66ea0eb..000000000
--- a/samples/LoginSample/src/main/res/drawable/reverb_rating_bar.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <!-- RatingBar does not handle ShapeDrawables for the items, so just use images -->
-    <item
-        android:id="@android:id/background"
-        android:drawable="@drawable/reverb_rating_bar_unselected"
-        />
-    <item
-        android:id="@android:id/secondaryProgress"
-        android:drawable="@drawable/reverb_rating_bar_unselected"
-        />
-    <item
-        android:id="@android:id/progress"
-        android:drawable="@drawable/reverb_rating_bar_selected"
-        />
-</layer-list>
diff --git a/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
deleted file mode 100644
index d36b08fa0..000000000
--- a/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
+++ /dev/null
@@ -1,278 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-    <LinearLayout style="@style/Sample.ScrollContent">
-        <LinearLayout
-            android:id="@+id/configuration_options"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="vertical"
-            android:minWidth="300dp"
-            tools:ignore="UselessParent"
-            >
-            <Switch
-                android:id="@+id/advanced_ui_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:text="@string/config_advanced_ui_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/response_type_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:checked="true"
-                android:text="@string/config_response_type_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/state_param_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:text="@string/confirm_state_param_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/facebook_notification_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:checked="true"
-                android:text="@string/confirm_facebook_notification_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/voice_call_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:checked="true"
-                android:text="@string/confirm_voice_call_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/whitelist_blacklist_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:text="@string/use_manual_whitelistblacklist_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/read_phone_state_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:checked="true"
-                android:text="@string/read_phone_state_label"
-                android:textColor="@android:color/black"
-                />
-            <Switch
-                android:id="@+id/receive_sms_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:checked="true"
-                android:text="@string/receive_sms_label"
-                android:textColor="@android:color/black"
-                />
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:orientation="horizontal"
-                >
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/config_theme_label"
-                    android:textColor="@android:color/black"
-                    />
-                <Spinner
-                    android:id="@+id/theme_spinner"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:gravity="end"
-                    android:textAlignment="center"
-                    tools:ignore="UnusedAttribute"
-                    />
-            </LinearLayout>
-            <LinearLayout
-                android:id="@+id/advanced_ui_options"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:orientation="vertical"
-                android:visibility="gone"
-                tools:visibility="visible"
-                >
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:gravity="center"
-                    android:orientation="horizontal"
-                    >
-                    <TextView
-                        android:layout_width="0dp"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/config_entry_button_label"
-                        android:textColor="@android:color/black"
-                        />
-                    <Spinner
-                        android:id="@+id/entry_button_spinner"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:gravity="end"
-                        android:textAlignment="center"
-                        tools:ignore="UnusedAttribute"
-                        />
-                </LinearLayout>
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:gravity="center"
-                    android:orientation="horizontal"
-                    >
-                    <TextView
-                        android:layout_width="0dp"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/config_confirm_button_label"
-                        android:textColor="@android:color/black"
-                        />
-                    <Spinner
-                        android:id="@+id/confirm_button_spinner"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:gravity="end"
-                        android:textAlignment="center"
-                        tools:ignore="UnusedAttribute"
-                        />
-                </LinearLayout>
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:gravity="center"
-                    android:orientation="horizontal"
-                    >
-                    <TextView
-                        android:layout_width="0dp"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/config_text_position_label"
-                        android:textColor="@android:color/black"
-                        />
-                    <Spinner
-                        android:id="@+id/text_position_spinner"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:gravity="end"
-                        android:textAlignment="center"
-                        tools:ignore="UnusedAttribute"
-                        />
-                </LinearLayout>
-            </LinearLayout>
-            <Switch
-                android:id="@+id/background_image"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:checked="true"
-                android:text="@string/config_background_image_label"
-                android:textColor="@android:color/black"
-                />
-            <LinearLayout
-                android:id="@+id/skin_ui_options"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:orientation="vertical"
-                android:visibility="gone"
-                tools:visibility="visible"
-                >
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:gravity="center"
-                    android:orientation="horizontal"
-                    >
-                    <TextView
-                        android:layout_width="0dp"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/config_tint_label"
-                        android:textColor="@android:color/black"
-                        />
-                    <Spinner
-                        android:id="@+id/skin_tint_spinner"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:gravity="end"
-                        android:textAlignment="center"
-                        />
-                </LinearLayout>
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:gravity="center"
-                    android:orientation="horizontal"
-                    >
-                    <TextView
-                        android:id="@+id/tint_intensity_title"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/config_tint_intensity_label"
-                        android:textColor="@android:color/black"
-                        />
-                    <SeekBar
-                        android:id="@+id/tint_intensity_field"
-                        android:layout_width="0dp"
-                        android:layout_weight="1"
-                        android:layout_height="wrap_content"
-                        android:max="30"/>
-                </LinearLayout>
-            </LinearLayout>
-            <Button
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:onClick="onLoginPhone"
-                android:text="@string/log_in_phone_button"
-                />
-            <Button
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:onClick="onLoginEmail"
-                android:text="@string/log_in_email_button"
-                />
-        </LinearLayout>
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/LoginSample/src/main/res/layout/activity_error.xml b/samples/LoginSample/src/main/res/layout/activity_error.xml
deleted file mode 100644
index c3711ec54..000000000
--- a/samples/LoginSample/src/main/res/layout/activity_error.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-    <LinearLayout style="@style/Sample.ScrollContent">
-        <Button
-            android:id="@+id/log_out_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="@string/log_out_button"
-            />
-        <TextView
-            android:id="@+id/error_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/error_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/error"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/loading_placeholder"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/LoginSample/src/main/res/layout/activity_facebook_login.xml b/samples/LoginSample/src/main/res/layout/activity_facebook_login.xml
deleted file mode 100644
index d0f1176c1..000000000
--- a/samples/LoginSample/src/main/res/layout/activity_facebook_login.xml
+++ /dev/null
@@ -1,85 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:facebook="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical"
-    android:gravity="center">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:gravity="center">
-
-        <com.facebook.login.widget.ProfilePictureView
-            android:id="@+id/user_pic"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginStart="10dp"
-            android:layout_marginRight="10dp"
-            android:layout_marginEnd="10dp"
-            facebook:com_facebook_preset_size="small" />
-
-        <TextView
-            android:id="@+id/user_name"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/welcome" />
-
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:gravity="center"
-        android:layout_margin="10dp">
-
-        <Button
-            android:id="@+id/deauth"
-            android:layout_width="182dip"
-            android:layout_height="wrap_content"
-            android:text="@string/de_authorize_app"
-            android:layout_marginRight="5dp"
-            android:layout_marginEnd="5dp"
-            android:textSize="12sp" />
-
-        <Button
-            android:id="@+id/perms"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/permissions"
-            android:layout_marginLeft="5dp"
-            android:layout_marginStart="5dp"
-            android:textSize="12sp" />
-
-    </LinearLayout>
-
-    <com.facebook.login.widget.LoginButton
-        android:id="@+id/_fb_login"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center_horizontal" />
-
-</LinearLayout>
diff --git a/samples/LoginSample/src/main/res/layout/activity_hello_code.xml b/samples/LoginSample/src/main/res/layout/activity_hello_code.xml
deleted file mode 100644
index 30b0bf7c4..000000000
--- a/samples/LoginSample/src/main/res/layout/activity_hello_code.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-    <LinearLayout style="@style/Sample.ScrollContent">
-        <Button
-            android:id="@+id/log_out_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="@string/log_out_button"
-            />
-        <TextView
-            android:id="@+id/user_code_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/code_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/code"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/loading_placeholder"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/initial_state_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/initial_state_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:visibility="gone"
-            />
-        <TextView
-            android:id="@+id/initial_state"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:visibility="gone"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/final_state_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/final_state_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:visibility="gone"
-            />
-        <TextView
-            android:id="@+id/final_state"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:visibility="gone"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/LoginSample/src/main/res/layout/activity_hello_token.xml b/samples/LoginSample/src/main/res/layout/activity_hello_token.xml
deleted file mode 100644
index eea3b554b..000000000
--- a/samples/LoginSample/src/main/res/layout/activity_hello_token.xml
+++ /dev/null
@@ -1,108 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-    <LinearLayout style="@style/Sample.ScrollContent">
-        <Button
-            android:id="@+id/log_out_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="@string/log_out_button"
-            />
-        <TextView
-            android:id="@+id/user_id_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/user_id_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/user_id"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/loading_placeholder"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/user_phone_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_number_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/user_phone"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/loading_placeholder"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/user_email_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/email_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/user_email"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/loading_placeholder"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/initial_state_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/initial_state_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:visibility="gone"
-            />
-        <TextView
-            android:id="@+id/initial_state"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:visibility="gone"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-        <TextView
-            android:id="@+id/final_state_label"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/final_state_label"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:visibility="gone"
-            />
-        <TextView
-            android:id="@+id/final_state"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:visibility="gone"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            />
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/LoginSample/src/main/res/layout/activity_main.xml b/samples/LoginSample/src/main/res/layout/activity_main.xml
deleted file mode 100644
index c5828e387..000000000
--- a/samples/LoginSample/src/main/res/layout/activity_main.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:gravity="center"
-    android:orientation="vertical"
-    tools:context="com.facebook.samples.loginsample.MainActivity">
-
-    <Button
-        android:id="@+id/fb_login_button"
-        android:text="@string/log_in_with_facebook"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dp"
-        android:textSize="12sp"/>
-
-    <Button
-        android:id="@+id/ak_login_button"
-        android:text="@string/login_with_account_kit"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dp"
-        android:textSize="12sp"/>
-
-</LinearLayout>
diff --git a/samples/LoginSample/src/main/res/layout/fragment_placeholder.xml b/samples/LoginSample/src/main/res/layout/fragment_placeholder.xml
deleted file mode 100644
index 3f0e56e02..000000000
--- a/samples/LoginSample/src/main/res/layout/fragment_placeholder.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="100dp"
-    android:background="@drawable/placeholder_background"
-    >
-    <TextView
-        android:id="@+id/text_view"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:textColor="#ffffff"
-        />
-</FrameLayout>
diff --git a/samples/LoginSample/src/main/res/layout/fragment_reverb_action_bar.xml b/samples/LoginSample/src/main/res/layout/fragment_reverb_action_bar.xml
deleted file mode 100644
index 080c48105..000000000
--- a/samples/LoginSample/src/main/res/layout/fragment_reverb_action_bar.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/reverb_action_bar_height"
-    android:background="?attr/com_accountkit_header_background_color"
-    android:gravity="center_vertical"
-    android:orientation="horizontal"
-    android:paddingEnd="@dimen/activity_horizontal_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingStart="@dimen/activity_horizontal_margin"
-    tools:ignore="Overdraw"
-    >
-    <ImageView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:onClick="onBackPressed"
-        android:src="?attr/reverb_back_arrow_src"
-        tools:ignore="ContentDescription,OnClick"
-        />
-    <TextView
-        android:id="@+id/title_view"
-        android:layout_width="0dp"
-        android:layout_height="match_parent"
-        android:layout_weight="1"
-        android:gravity="center_vertical"
-        android:paddingLeft="@dimen/activity_horizontal_margin"
-        android:paddingRight="@dimen/activity_horizontal_margin"
-        android:textAllCaps="?attr/reverb_text_all_caps"
-        android:textColor="?attr/com_accountkit_header_text_color"
-        />
-    <ImageView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/reverb_icon"
-        android:visibility="?attr/reverb_app_icon_visibility"
-        tools:ignore="ContentDescription"
-        />
-</LinearLayout>
diff --git a/samples/LoginSample/src/main/res/layout/fragment_reverb_body.xml b/samples/LoginSample/src/main/res/layout/fragment_reverb_body.xml
deleted file mode 100644
index 1e95eae43..000000000
--- a/samples/LoginSample/src/main/res/layout/fragment_reverb_body.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical"
-    >
-    <FrameLayout
-        android:id="@+id/reverb_progress_spinner"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:visibility="gone"
-        >
-        <ProgressBar
-            android:layout_width="@dimen/reverb_icon_size"
-            android:layout_height="@dimen/reverb_icon_size"
-            android:layout_gravity="center"
-            android:indeterminateDrawable="@drawable/reverb_progress_rotating_ring"
-            />
-    </FrameLayout>
-    <ImageView
-        android:id="@+id/reverb_icon"
-        android:layout_width="@dimen/reverb_icon_size"
-        android:layout_height="@dimen/reverb_icon_size"
-        android:layout_gravity="center"
-        android:visibility="gone"
-        tools:ignore="ContentDescription"
-        />
-</LinearLayout>
diff --git a/samples/LoginSample/src/main/res/layout/fragment_reverb_footer_bar.xml b/samples/LoginSample/src/main/res/layout/fragment_reverb_footer_bar.xml
deleted file mode 100644
index 2809db05b..000000000
--- a/samples/LoginSample/src/main/res/layout/fragment_reverb_footer_bar.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:paddingBottom="@dimen/reverb_progress_bar_padding"
-    android:paddingTop="@dimen/reverb_progress_bar_padding"
-    style="@style/Reverb.Footer"
-    >
-    <include layout="@layout/layout_reverb_switch_login_type" />
-    <ProgressBar
-        android:id="@+id/reverb_progress_bar"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/reverb_progress_bar_height"
-        android:indeterminateOnly="false"
-        android:max="5"
-        android:progressDrawable="@drawable/reverb_progress_bar"
-        />
-</LinearLayout>
diff --git a/samples/LoginSample/src/main/res/layout/fragment_reverb_footer_dots.xml b/samples/LoginSample/src/main/res/layout/fragment_reverb_footer_dots.xml
deleted file mode 100644
index 546cb2530..000000000
--- a/samples/LoginSample/src/main/res/layout/fragment_reverb_footer_dots.xml
+++ /dev/null
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    style="@style/Reverb.Footer"
-    >
-    <include layout="@layout/layout_reverb_switch_login_type" />
-    <RatingBar
-        android:id="@+id/reverb_progress_bar"
-        android:isIndicator="true"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:maxHeight="@dimen/reverb_rating_bar_height"
-        android:minHeight="@dimen/reverb_rating_bar_height"
-        android:numStars="5"
-        android:progressDrawable="@drawable/reverb_rating_bar"
-        android:rating="1.0"
-        android:stepSize="1.0"
-        />
-</LinearLayout>
diff --git a/samples/LoginSample/src/main/res/layout/fragment_space.xml b/samples/LoginSample/src/main/res/layout/fragment_space.xml
deleted file mode 100644
index 5827d721c..000000000
--- a/samples/LoginSample/src/main/res/layout/fragment_space.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="0dp"
-    />
diff --git a/samples/LoginSample/src/main/res/layout/layout_reverb_switch_login_type.xml b/samples/LoginSample/src/main/res/layout/layout_reverb_switch_login_type.xml
deleted file mode 100644
index 8b515f11d..000000000
--- a/samples/LoginSample/src/main/res/layout/layout_reverb_switch_login_type.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<TextView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/switch_login_type_button"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginTop="@dimen/reverb_footer_margin_top"
-    android:gravity="center"
-    android:padding="@dimen/reverb_padding"
-    android:textColor="?attr/com_accountkit_button_background_color"
-    android:textSize="@dimen/reverb_switch_login_type_text_size"
-    android:textStyle="bold"
-    android:visibility="gone"
-    />
diff --git a/samples/LoginSample/src/main/res/layout/list_perms_new.xml b/samples/LoginSample/src/main/res/layout/list_perms_new.xml
deleted file mode 100644
index 2ab9dbc86..000000000
--- a/samples/LoginSample/src/main/res/layout/list_perms_new.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <Button
-        android:id="@+id/confirm"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:text="@android:string/ok" />
-
-    <ListView
-        android:id="@+id/list"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:layout_above="@id/confirm"
-        android:layout_alignParentTop="true"
-        />
-</RelativeLayout>
diff --git a/samples/LoginSample/src/main/res/mipmap-hdpi/ic_launcher.png b/samples/LoginSample/src/main/res/mipmap-hdpi/ic_launcher.png
deleted file mode 100755
index a4a96fed1..000000000
Binary files a/samples/LoginSample/src/main/res/mipmap-hdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/mipmap-mdpi/ic_launcher.png b/samples/LoginSample/src/main/res/mipmap-mdpi/ic_launcher.png
deleted file mode 100755
index 909d5b7f7..000000000
Binary files a/samples/LoginSample/src/main/res/mipmap-mdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png b/samples/LoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png
deleted file mode 100755
index 507873baa..000000000
Binary files a/samples/LoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png b/samples/LoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png
deleted file mode 100755
index b2f1081ed..000000000
Binary files a/samples/LoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/samples/LoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png
deleted file mode 100755
index 26a703056..000000000
Binary files a/samples/LoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png and /dev/null differ
diff --git a/samples/LoginSample/src/main/res/values-v17/styles.xml b/samples/LoginSample/src/main/res/values-v17/styles.xml
deleted file mode 100644
index caabf4282..000000000
--- a/samples/LoginSample/src/main/res/values-v17/styles.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <style name="Sample.ScrollContent" parent="Base.Sample.ScrollContent">
-        <item name="android:paddingEnd">@dimen/activity_horizontal_margin</item>
-        <item name="android:paddingStart">@dimen/activity_horizontal_margin</item>
-    </style>
-
-    <style name="Reverb.Footer" parent="Base.Reverb.Footer">
-        <item name="android:layout_marginEnd">@dimen/reverb_content_margin_end</item>
-        <item name="android:layout_marginStart">@dimen/reverb_content_margin_start</item>
-    </style>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values-w820dp/dimens.xml b/samples/LoginSample/src/main/res/values-w820dp/dimens.xml
deleted file mode 100644
index 72bb51545..000000000
--- a/samples/LoginSample/src/main/res/values-w820dp/dimens.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
-         (such as screen margins) for screens with more than 820dp of available width. This
-         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
-    <dimen name="activity_horizontal_margin">64dp</dimen>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_colors.xml b/samples/LoginSample/src/main/res/values/accountkit_colors.xml
deleted file mode 100644
index e5510c02d..000000000
--- a/samples/LoginSample/src/main/res/values/accountkit_colors.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <color name="default_color">#0099E1</color>
-    <color name="reverb_dark">#262261</color>
-    <color name="reverb_light">#e9e8ef</color>
-    <color name="reverb_text">#1d2129</color>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_dimens.xml b/samples/LoginSample/src/main/res/values/accountkit_dimens.xml
deleted file mode 100644
index 2d11a897d..000000000
--- a/samples/LoginSample/src/main/res/values/accountkit_dimens.xml
+++ /dev/null
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <dimen name="reverb_action_bar_height">50dp</dimen>
-    <dimen name="reverb_content_margin_end">25dp</dimen>
-    <dimen name="reverb_content_margin_start">25dp</dimen>
-    <dimen name="reverb_content_margin_top_large">22dp</dimen>
-    <dimen name="reverb_content_margin_top_small">14dp</dimen>
-    <dimen name="reverb_content_max_width">360dp</dimen>
-    <dimen name="reverb_content_min_height">340dp</dimen>
-    <dimen name="reverb_footer_margin_bottom">12dp</dimen>
-    <dimen name="reverb_footer_margin_top">14dp</dimen>
-    <dimen name="reverb_icon_size">86dp</dimen>
-    <dimen name="reverb_padding">8dp</dimen>
-    <dimen name="reverb_progress_bar_corner_radius">3dp</dimen>
-    <dimen name="reverb_progress_bar_height">14dp</dimen>
-    <dimen name="reverb_progress_bar_padding">10dp</dimen>
-    <dimen name="reverb_rating_bar_height">20dp</dimen>
-    <dimen name="reverb_switch_login_type_text_size">12sp</dimen>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_strings.xml b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
deleted file mode 100644
index 26be9b020..000000000
--- a/samples/LoginSample/src/main/res/values/accountkit_strings.xml
+++ /dev/null
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="action_bar_title_hello">Hello</string>
-    <string name="code_label">Code</string>
-    <string name="config_advanced_ui_label">Use advanced UI theming</string>
-    <string name="config_confirm_button_label">Confirm button Text</string>
-    <string name="config_entry_button_label">Entry button Text</string>
-    <string name="config_response_type_label">Enable Client Access Token Flow</string>
-    <string name="config_text_position_label">Text Position</string>
-    <string name="config_theme_label">Theme</string>
-    <string name="config_background_image_label">Background image</string>
-    <string name="config_tint_label">Background Image Tint</string>
-    <string name="config_tint_intensity_label">Tint Intensity (%1$d%%)</string>
-    <string name="confirm_facebook_notification_label">Facebook Notifications Fallback</string>
-    <string name="confirm_voice_call_label">Allow Voice Call Fallback</string>
-    <string name="confirm_state_param_label">Is State Param passed?</string>
-    <string name="email_label">Email</string>
-    <string name="error_label">Error</string>
-    <string name="error_message">An error has occurred.</string>
-    <string name="final_state_label">Final State</string>
-    <string name="initial_state_label">Initial State</string>
-    <string name="loading_placeholder">Loading…</string>
-    <string name="log_in_email_button">Log In via Email</string>
-    <string name="log_in_phone_button">Log In via Phone</string>
-    <string name="log_out_button">Log Out</string>
-    <string name="na">NA</string>
-    <string name="permissions_get_accounts_message">
-        Grant permission to read your email address from your device to pre-fill.
-    </string>
-    <string name="permissions_get_accounts_title">Read Email Address</string>
-    <string name="permissions_read_phone_state_message">
-        Grant permission to read your phone number from your device to pre-fill.
-    </string>
-    <string name="permissions_read_phone_state_title">Read Phone Number</string>
-    <string name="permissions_receive_sms_message">
-        Grant permission to read your SMS code from your device to pre-fill.
-    </string>
-    <string name="permissions_receive_sms_title">Read SMS Code</string>
-    <string name="phone_number_label">Phone Number</string>
-    <string name="read_phone_state_label">Read phone number?</string>
-    <string name="receive_sms_label">Receive SMS?</string>
-    <string name="use_manual_whitelistblacklist_label">Use manual whitelist/blacklist</string>
-    <string name="user_id_label">Account ID</string>
-    <string name="reverb_advanced_ui_required">
-        Advanced UI theming is required for Reverb themes. Select a different theme to disable.
-    </string>
-    <string name="skin_ui_required">
-        Advanced UI theming is not allowed for Skin themes. Select a different theme to enable.
-    </string>
-    <string name="reverb_switch_login_type_phone">SIGN IN WITH PHONE</string>
-    <string name="reverb_switch_login_type_email">SIGN IN WITH EMAIL</string>
-    <string name="reverb_title_code_input">Enter your code</string>
-    <string name="reverb_title_email_input">Enter your email address</string>
-    <string name="reverb_title_email_verify">Open the email and confirm your address</string>
-    <string name="reverb_title_error">We\'re sorry, something went wrong.</string>
-    <string name="reverb_title_phone_number_input">Enter your phone number</string>
-    <string name="reverb_title_resend">We\'re sorry. Try these options to continue.</string>
-    <string name="reverb_title_sending_code">Sending your code…</string>
-    <string name="reverb_title_sent_code">Sent!</string>
-    <string name="reverb_title_account_verified">Account verified!</string>
-    <string name="reverb_title_logging_in">Logging in…</string>
-    <string name="reverb_title_verified">Done!</string>
-    <string name="reverb_title_verifying_code">Verifying your code…</string>
-    <string-array name="theme_options">
-        <item>Classic</item>
-        <item>Contemporary</item>
-        <item>Translucent</item>
-        <item>Salmon</item>
-        <item>Yellow</item>
-        <item>Red</item>
-        <item>Dog</item>
-        <item>Bicycle</item>
-        <item>Reverb A</item>
-        <item>Reverb B</item>
-        <item>Reverb C</item>
-    </string-array>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_styles.xml b/samples/LoginSample/src/main/res/values/accountkit_styles.xml
deleted file mode 100644
index 6e490e3a8..000000000
--- a/samples/LoginSample/src/main/res/values/accountkit_styles.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <style name="Sample.ScrollContent" parent="Base.Sample.ScrollContent" />
-
-    <style name="Base.Sample.ScrollContent" parent="">
-        <item name="android:gravity">center_horizontal</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:orientation">vertical</item>
-        <item name="android:paddingBottom">@dimen/activity_vertical_margin</item>
-        <item name="android:paddingLeft">@dimen/activity_horizontal_margin</item>
-        <item name="android:paddingRight">@dimen/activity_horizontal_margin</item>
-        <item name="android:paddingTop">@dimen/activity_vertical_margin</item>
-    </style>
-
-    <style name="Reverb.Footer" parent="Base.Reverb.Footer" />
-
-    <style name="Base.Reverb.Footer" parent="">
-        <item name="android:gravity">center_horizontal|bottom</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginBottom">@dimen/reverb_footer_margin_bottom</item>
-        <item name="android:layout_marginLeft">@dimen/reverb_content_margin_start</item>
-        <item name="android:layout_marginRight">@dimen/reverb_content_margin_end</item>
-        <item name="android:layout_marginTop">@dimen/reverb_footer_margin_top</item>
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:orientation">vertical</item>
-    </style>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_themes.xml b/samples/LoginSample/src/main/res/values/accountkit_themes.xml
deleted file mode 100644
index 304f3049c..000000000
--- a/samples/LoginSample/src/main/res/values/accountkit_themes.xml
+++ /dev/null
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <style name="AppLoginTheme" parent="Theme.AccountKit" />
-    <style name="AppLoginTheme.Salmon" parent="Theme.AccountKit">
-        <item name="com_accountkit_primary_color">@android:color/white</item>
-        <item name="com_accountkit_primary_text_color">#565a5c</item>
-        <item name="com_accountkit_secondary_color">#ffe5e5</item>
-        <item name="com_accountkit_secondary_text_color">
-            ?attr/com_accountkit_primary_text_color
-        </item>
-        <item name="com_accountkit_status_bar_color">@android:color/black</item>
-        <item name="com_accountkit_button_background_color">#ff5a5f</item>
-        <item name="com_accountkit_button_text_color">@android:color/white</item>
-        <item name="com_accountkit_icon_color">#ff5a5f</item>
-        <item name="com_accountkit_toolbar_elevation">8dp</item>
-    </style>
-    <style name="AppLoginTheme.Yellow" parent="Theme.AccountKit.Outline">
-        <item name="com_accountkit_primary_color">#f4bf56</item>
-        <item name="com_accountkit_primary_text_color">@android:color/white</item>
-        <item name="com_accountkit_secondary_text_color">#44566b</item>
-        <item name="com_accountkit_status_bar_color">#ed9d00</item>
-        <item name="com_accountkit_input_accent_color">?attr/com_accountkit_primary_color</item>
-        <item name="com_accountkit_input_border_color">?attr/com_accountkit_primary_color</item>
-    </style>
-    <style name="AppLoginTheme.Red" parent="Theme.AccountKit.Outline">
-        <item name="com_accountkit_primary_color">#333333</item>
-        <item name="com_accountkit_primary_text_color">@android:color/white</item>
-        <item name="com_accountkit_secondary_text_color">#151515</item>
-        <item name="com_accountkit_status_bar_color">@android:color/black</item>
-        <item name="com_accountkit_background_color">#f7f7f7</item>
-        <item name="com_accountkit_button_background_color">#e02727</item>
-        <item name="com_accountkit_button_border_color">
-            ?attr/com_accountkit_button_background_color
-        </item>
-        <item name="com_accountkit_input_border_color">#bbbbbb</item>
-    </style>
-    <style name="AppLoginTheme_Contemporary" parent="Theme.AccountKit">
-        <item name="com_accountkit_primary_color">#ff5a5f</item>
-        <item name="com_accountkit_primary_text_color">#387c1f</item>
-        <item name="com_accountkit_secondary_color">#cc1c2f97</item>
-        <item name="com_accountkit_secondary_text_color">#cc97971c</item>
-        <item name="com_accountkit_background_color">#994e7e24</item>
-        <item name="com_accountkit_input_text_color">?attr/com_accountkit_primary_text_color</item>
-    </style>
-    <style name="AppLoginTheme.Bicycle" parent="Theme.AccountKit.Outline">
-        <item name="com_accountkit_primary_color">#ff5a5f</item>
-        <item name="com_accountkit_primary_text_color">@android:color/white</item>
-        <item name="com_accountkit_secondary_text_color">@android:color/white</item>
-        <item name="com_accountkit_background">@drawable/bicycle</item>
-        <item name="com_accountkit_background_color">#66000000</item>
-        <item name="com_accountkit_input_accent_color">@android:color/white</item>
-        <item name="com_accountkit_input_background_color">#00000000</item>
-        <item name="com_accountkit_input_border_color">@android:color/white</item>
-    </style>
-    <style name="Base.AppLoginTheme.Reverb" parent="AppLoginTheme">
-        <item name="com_accountkit_primary_color">?attr/com_accountkit_secondary_color</item>
-        <item name="com_accountkit_primary_text_color">
-            ?attr/com_accountkit_secondary_text_color
-        </item>
-        <item name="com_accountkit_secondary_color">@color/reverb_light</item>
-        <item name="com_accountkit_secondary_text_color">@color/reverb_text</item>
-        <item name="com_accountkit_status_bar_color">@color/reverb_dark</item>
-        <item name="com_accountkit_button_background_color">@color/reverb_dark</item>
-        <item name="com_accountkit_button_border_color">@color/reverb_dark</item>
-        <item name="com_accountkit_button_text_color">@android:color/white</item>
-        <item name="com_accountkit_content_body_layout_weight">1</item>
-        <item name="com_accountkit_content_bottom_layout_weight">1</item>
-        <item name="com_accountkit_content_footer_layout_weight">0</item>
-        <item name="com_accountkit_content_header_layout_weight">1</item>
-        <item name="com_accountkit_content_text_layout_weight">1</item>
-        <item name="com_accountkit_content_top_layout_weight">1</item>
-        <item name="com_accountkit_content_margin_end">@dimen/reverb_content_margin_end</item>
-        <item name="com_accountkit_content_margin_start">@dimen/reverb_content_margin_start</item>
-        <item name="com_accountkit_content_max_width">@dimen/reverb_content_max_width</item>
-        <item name="com_accountkit_content_min_height">@dimen/reverb_content_min_height</item>
-        <item name="com_accountkit_icon_color">?attr/com_accountkit_status_bar_color</item>
-        <item name="reverb_app_icon_visibility">gone</item>
-        <item name="reverb_back_arrow_src">@drawable/reverb_arrow_purple</item>
-        <item name="reverb_content_margin_top">@dimen/reverb_content_margin_top_small</item>
-        <item name="reverb_text_all_caps">false</item>
-    </style>
-    <style name="AppLoginTheme.Reverb.A" parent="Base.AppLoginTheme.Reverb">
-        <item name="com_accountkit_header_background_color">@android:color/white</item>
-        <item name="com_accountkit_header_text_color">?attr/com_accountkit_status_bar_color</item>
-    </style>
-    <style name="AppLoginTheme.Reverb.B" parent="Base.AppLoginTheme.Reverb">
-        <item name="com_accountkit_header_background_color">#7c7aa0</item>
-        <item name="com_accountkit_header_text_color">@android:color/white</item>
-        <item name="reverb_app_icon_visibility">visible</item>
-        <item name="reverb_back_arrow_src">@drawable/reverb_arrow_white</item>
-        <item name="reverb_content_margin_top">@dimen/reverb_content_margin_top_large</item>
-        <item name="reverb_text_all_caps">true</item>
-    </style>
-    <style name="AppLoginTheme.Reverb.C" parent="AppLoginTheme.Reverb.A">
-        <item name="reverb_app_icon_visibility">visible</item>
-        <item name="reverb_text_all_caps">true</item>
-    </style>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/attrs.xml b/samples/LoginSample/src/main/res/values/attrs.xml
deleted file mode 100644
index e20fc7ffd..000000000
--- a/samples/LoginSample/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <declare-styleable name="Theme.AccountKitSample.Style">
-        <attr name="reverb_app_icon_visibility" format="enum">
-            <enum name="visible" value="0" />
-            <enum name="gone" value="2" />
-        </attr>
-        <attr name="reverb_back_arrow_src" format="reference" />
-        <attr name="reverb_content_margin_top" format="dimension" />
-        <attr name="reverb_text_all_caps" format="boolean" />
-    </declare-styleable>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/blacklisted_phone_country_codes.xml b/samples/LoginSample/src/main/res/values/blacklisted_phone_country_codes.xml
deleted file mode 100644
index 3ef4ccaea..000000000
--- a/samples/LoginSample/src/main/res/values/blacklisted_phone_country_codes.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources xmlns:tools="http://schemas.android.com/tools">
-    <string-array name="blacklistedSmsCountryCodes" tools:ignore="MissingTranslation">
-        <item>ID</item>
-    </string-array>
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/colors.xml b/samples/LoginSample/src/main/res/values/colors.xml
deleted file mode 100644
index a887ffe50..000000000
--- a/samples/LoginSample/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <color name="colorPrimary">#3F51B5</color>
-    <color name="colorPrimaryDark">#303F9F</color>
-    <color name="colorAccent">#FF4081</color>
-
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/dimens.xml b/samples/LoginSample/src/main/res/values/dimens.xml
deleted file mode 100644
index 34e488dbb..000000000
--- a/samples/LoginSample/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <!-- Default screen margins, per the Android Design guidelines. -->
-    <dimen name="activity_horizontal_margin">16dp</dimen>
-    <dimen name="activity_vertical_margin">16dp</dimen>
-
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/strings.xml b/samples/LoginSample/src/main/res/values/strings.xml
deleted file mode 100644
index 72639e7c0..000000000
--- a/samples/LoginSample/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,85 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <string name="app_name">Login Sample</string>
-    <string name="facebook_app_id">133094273807591</string>
-    <string name="fb_login_protocol_scheme">fb133094273807591</string>
-    <string name="ACCOUNT_KIT_CLIENT_TOKEN">9d92ebdd3db421ff3ddb041fb8fe60c0</string>
-    <string name="ak_login_protocol_scheme">ak133094273807591</string>
-
-    <string name="login_with_account_kit">Log in with AccountKit</string>
-
-    <string name="welcome">Welcome!</string>
-    <string name="log_in_with_facebook">Log in with Facebook</string>
-    <string name="permissions">Permissions</string>
-    <string name="label_facebook_login">Facebook Login</string>
-    <string name="label_account_kit_login">Account Kit Login</string>
-    <string name="de_authorize_app">De-authorize App</string>
-    <string name="failed_to_deauth">"failed to deauthorize app %1s"</string>
-    <string name="app_not_logged_in">App not logged in</string>
-    <string name="success">SUCCESS</string>
-    <string name="cancel">CANCEL</string>
-    <string name="error">ERROR</string>
-
-    <string-array name="perms_array">
-        // User Data Permissions
-        <item>basic_info</item>
-        <item>public_profile</item>
-        <item>email</item>
-        <item>publish_actions</item>
-        <item>user_about_me</item>
-        <item>user_activities</item>
-        <item>user_birthday</item>
-        <item>user_mobile_phone</item>
-        <item>user_education_history</item>
-        <item>user_friends</item>
-        <item>user_games_activity</item>
-        <item>user_hometown</item>
-        <item>user_interests</item>
-        <item>user_likes</item>
-        <item>user_location</item>
-        <item>user_photos</item>
-        <item>user_posts</item>
-        <item>user_relationship_details</item>
-        <item>user_relationships</item>
-        <item>user_religion_politics</item>
-        <item>user_status</item>
-        <item>user_tagged_places</item>
-        <item>user_videos</item>
-        <item>user_website</item>
-        <item>user_work_history</item>
-
-        // Other Permissions
-        <item>manage_notifications</item>
-        <item>read_custom_friendlists</item>
-        <item>read_insights</item>
-        <item>read_mailbox</item>
-        <item>read_stream</item>
-        <item>read_audience_network_insights</item>
-
-        // Privacy
-        <item>ONLY_ME</item>
-        <item>FRIENDS</item>
-        <item>EVERYONE</item>
-    </string-array>
-
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/styles.xml b/samples/LoginSample/src/main/res/values/styles.xml
deleted file mode 100644
index cbe3e82a6..000000000
--- a/samples/LoginSample/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-        <item name="colorPrimary">@color/colorPrimary</item>
-        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
-    </style>
-
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/themes.xml b/samples/LoginSample/src/main/res/values/themes.xml
deleted file mode 100644
index 7c0e3007e..000000000
--- a/samples/LoginSample/src/main/res/values/themes.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <style name="AppTheme.NoActionBar">
-        <item name="windowActionBar">false</item>
-        <item name="windowNoTitle">true</item>
-    </style>
-
-</resources>
diff --git a/samples/LoginSample/src/main/res/values/whitelisted_phone_country_codes.xml b/samples/LoginSample/src/main/res/values/whitelisted_phone_country_codes.xml
deleted file mode 100644
index b573a2b9a..000000000
--- a/samples/LoginSample/src/main/res/values/whitelisted_phone_country_codes.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string-array name="whitelistedSmsCountryCodes">
-        <item>ID</item>
-        <item>US</item>
-    </string-array>
-</resources>
diff --git a/samples/LoginSample/src/test/java/com/facebook/samples/loginsample/ExampleUnitTest.java b/samples/LoginSample/src/test/java/com/facebook/samples/loginsample/ExampleUnitTest.java
deleted file mode 100644
index b5a7d1ebb..000000000
--- a/samples/LoginSample/src/test/java/com/facebook/samples/loginsample/ExampleUnitTest.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample;
-
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-
-/**
- * To work on unit tests, switch the Test Artifact in the Build Variants view.
- */
-public class ExampleUnitTest {
-    @Test
-    public void addition_isCorrect() throws Exception {
-        assertEquals(4, 2 + 2);
-    }
-}
diff --git a/samples/MessengerSendSample/build.gradle b/samples/MessengerSendSample/build.gradle
deleted file mode 100644
index 386ec4091..000000000
--- a/samples/MessengerSendSample/build.gradle
+++ /dev/null
@@ -1,44 +0,0 @@
-apply plugin: 'com.android.application'
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId "com.facebook.samples.messenger.send"
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-        versionCode 1
-        versionName "0.1"
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'src/main/AndroidManifest.xml'
-            java.srcDirs = ['src/main/java']
-        }
-    }
-
-    packagingOptions {
-        exclude 'LICENSE'
-        exclude 'LICENSE.txt'
-        exclude 'META-INF/LICENSE'
-        exclude 'META-INF/LICENSE.txt'
-        exclude 'META-INF/NOTICE'
-        exclude 'META-INF/NOTICE.txt'
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
-
-dependencies {
-    implementation project(':facebook-messenger')
-    implementation("com.android.support:appcompat-v7:${project.ext.supportLibraryVersion}")
-}
diff --git a/samples/MessengerSendSample/src/main/AndroidManifest.xml b/samples/MessengerSendSample/src/main/AndroidManifest.xml
deleted file mode 100644
index f2aef47fd..000000000
--- a/samples/MessengerSendSample/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,62 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android='http://schemas.android.com/apk/res/android'
-    package='com.facebook.samples.messenger.send'>
-
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.INTERNET" />
-
-    <application
-        android:icon='@null'
-        android:label='@string/app_name'
-        android:theme='@style/Theme.AppCompat.NoActionBar'>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/facebook_app_id" />
-
-        <activity android:name='.MainActivity'>
-            <intent-filter>
-                <action android:name='android.intent.action.MAIN' />
-                <category android:name='android.intent.category.LAUNCHER' />
-            </intent-filter>
-
-            <!-- Intent filter used for Messenger protocol version 20150311 -->
-            <intent-filter>
-                <action android:name="android.intent.action.PICK" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="com.facebook.orca.category.PLATFORM_THREAD_20150311" />
-            </intent-filter>
-
-            <!-- Intent filter used for Messenger protocol version 20150314 -->
-            <intent-filter>
-                <action android:name="android.intent.action.PICK" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="com.facebook.orca.category.PLATFORM_THREAD_20150314" />
-            </intent-filter>
-
-        </activity>
-
-    </application>
-</manifest>
diff --git a/samples/MessengerSendSample/src/main/java/com/facebook/samples/messenger/send/MainActivity.java b/samples/MessengerSendSample/src/main/java/com/facebook/samples/messenger/send/MainActivity.java
deleted file mode 100644
index 40192b5e5..000000000
--- a/samples/MessengerSendSample/src/main/java/com/facebook/samples/messenger/send/MainActivity.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.messenger.send;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v7.widget.Toolbar;
-import android.view.View;
-
-import com.facebook.messenger.MessengerThreadParams;
-import com.facebook.messenger.MessengerUtils;
-import com.facebook.messenger.ShareToMessengerParams;
-
-/**
- * Main Activity for sample.
- */
-public class MainActivity extends Activity {
-
-  // This is the request code that the SDK uses for startActivityForResult. See the code below
-  // that references it. Messenger currently doesn't return any data back to the calling
-  // application.
-  private static final int REQUEST_CODE_SHARE_TO_MESSENGER = 1;
-
-  private Toolbar mToolbar;
-  private View mMessengerButton;
-  private MessengerThreadParams mThreadParams;
-  private boolean mPicking;
-
-  @Override
-  protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-
-    setContentView(R.layout.main_activity);
-    mToolbar = (Toolbar) findViewById(R.id.toolbar);
-    mMessengerButton = findViewById(R.id.messenger_send_button);
-
-    mToolbar.setTitle(R.string.app_name);
-
-    // If we received Intent.ACTION_PICK from Messenger, we were launched from a composer shortcut
-    // or the reply flow.
-    Intent intent = getIntent();
-    if (Intent.ACTION_PICK.equals(intent.getAction())) {
-      mThreadParams = MessengerUtils.getMessengerThreadParamsForIntent(intent);
-      mPicking = true;
-
-      // Note, if mThreadParams is non-null, it means the activity was launched from Messenger.
-      // It will contain the metadata associated with the original content, if there was content.
-    }
-
-    mMessengerButton.setOnClickListener(new View.OnClickListener() {
-      @Override
-      public void onClick(View v) {
-        onMessengerButtonClicked();
-      }
-    });
-  }
-
-  private void onMessengerButtonClicked() {
-    // The URI can reference a file://, content://, or android.resource. Here we use
-    // android.resource for sample purposes.
-    Uri uri =
-        Uri.parse("android.resource://com.facebook.samples.messenger.send/" + R.drawable.tree);
-
-    // Create the parameters for what we want to send to Messenger.
-    ShareToMessengerParams shareToMessengerParams =
-        ShareToMessengerParams.newBuilder(uri, "image/jpeg")
-            .setMetaData("{ \"image\" : \"tree\" }")
-            .build();
-
-    if (mPicking) {
-      // If we were launched from Messenger, we call MessengerUtils.finishShareToMessenger to return
-      // the content to Messenger.
-      MessengerUtils.finishShareToMessenger(this, shareToMessengerParams);
-    } else {
-      // Otherwise, we were launched directly (for example, user clicked the launcher icon). We
-      // initiate the broadcast flow in Messenger. If Messenger is not installed or Messenger needs
-      // to be upgraded, this will direct the user to the play store.
-      MessengerUtils.shareToMessenger(
-          this,
-          REQUEST_CODE_SHARE_TO_MESSENGER,
-          shareToMessengerParams);
-    }
-  }
-}
diff --git a/samples/MessengerSendSample/src/main/res/drawable-xhdpi/tree.jpg b/samples/MessengerSendSample/src/main/res/drawable-xhdpi/tree.jpg
deleted file mode 100644
index a02aec467..000000000
Binary files a/samples/MessengerSendSample/src/main/res/drawable-xhdpi/tree.jpg and /dev/null differ
diff --git a/samples/MessengerSendSample/src/main/res/layout/main_activity.xml b/samples/MessengerSendSample/src/main/res/layout/main_activity.xml
deleted file mode 100644
index 6ce6ea440..000000000
--- a/samples/MessengerSendSample/src/main/res/layout/main_activity.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/container"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical"
-    android:background="#fff"
-    >
-
-  <android.support.v7.widget.Toolbar
-      android:id="@+id/toolbar"
-      android:layout_width="match_parent"
-      android:layout_height="wrap_content"
-      android:minHeight="?attr/actionBarSize"
-      android:background="?attr/colorPrimary"
-      />
-
-
-  <ImageView
-      android:layout_width="match_parent"
-      android:layout_height="0dp"
-      android:layout_weight="1"
-      android:src="@drawable/tree"
-      android:scaleType="fitCenter"
-      />
-
-  <include
-      layout="@layout/messenger_button_send_blue_large"
-      android:layout_width="match_parent"
-      android:layout_height="40dp"
-      android:layout_margin="10dp"
-      />
-
-</LinearLayout>
diff --git a/samples/MessengerSendSample/src/main/res/values/strings.xml b/samples/MessengerSendSample/src/main/res/values/strings.xml
deleted file mode 100644
index 8fef5a16f..000000000
--- a/samples/MessengerSendSample/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name='app_name'>Messenger SDK Sample</string>
-  <string name="facebook_app_id">434629220047124</string>
-</resources>
diff --git a/samples/PlacesGraphSample/AndroidManifest.xml b/samples/PlacesGraphSample/AndroidManifest.xml
deleted file mode 100644
index 2f75e5a63..000000000
--- a/samples/PlacesGraphSample/AndroidManifest.xml
+++ /dev/null
@@ -1,92 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.places"
-    android:versionCode="1"
-    android:versionName="1.0">
-
-    <!-- The SDK uses the location permissions to retrieve the current device location
-     from the platform. The locations permissions are also used to scan for nearby wifi access
-     points and bluetooth beacons if the corresponding wifi and bluetooth permissions are
-      available -->
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-
-    <!-- This permission is optional. If present, the SDK will get the currently connected
-     wifi access point to improve the accuracy of the current place request. -->
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
-    <!-- This permission is optional. If present, the SDK will scan for nearby wifi access points
-     in order to improve the accuracy of the current place request. -->
-    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
-
-    <!-- These two bluetooth permissions are optional. If present, the SDK will scan nearby
-    Bluetooth Low Energy beacons in order to improve the accuracy of the current place request. -->
-    <uses-permission android:name="android.permission.BLUETOOTH" />
-    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
-
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.CALL_PHONE" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-
-    <application
-        android:icon="@drawable/icon"
-        android:label="@string/app_name"
-        android:theme="@style/AppTheme">
-
-        <!-- This sample app illustrates how to display places on map. Enter your Google Maps Api
-        key below in order to enable the map. -->
-        <meta-data
-            android:name="com.google.android.geo.API_KEY"
-            android:value="@string/google_maps_key" />
-
-        <activity
-            android:name=".MainActivity"
-            android:label="@string/app_name"
-            android:screenOrientation="portrait"
-            android:windowSoftInputMode="stateHidden">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/app_id" />
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationName"
-            android:value="@string/facebook_app_name" />
-
-    </application>
-</manifest>
diff --git a/samples/PlacesGraphSample/build.gradle b/samples/PlacesGraphSample/build.gradle
deleted file mode 100644
index 50be4734b..000000000
--- a/samples/PlacesGraphSample/build.gradle
+++ /dev/null
@@ -1,43 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    implementation project(':facebook-login')
-    implementation project(':facebook-places')
-    implementation "com.android.support:appcompat-v7:${project.ext.supportLibraryVersion}"
-    implementation "com.android.support:cardview-v7:${project.ext.supportLibraryVersion}"
-    implementation "com.android.support:design:${project.ext.supportLibraryVersion}"
-    implementation "com.android.support:recyclerview-v7:${project.ext.supportLibraryVersion}"
-    implementation 'com.google.android.gms:play-services-maps:10.2.0'
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId 'com.example.places'
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
diff --git a/samples/PlacesGraphSample/proguard-project.txt b/samples/PlacesGraphSample/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/PlacesGraphSample/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/PlacesGraphSample/res/drawable-hdpi/icon.png b/samples/PlacesGraphSample/res/drawable-hdpi/icon.png
deleted file mode 100644
index 0a0d7cc73..000000000
Binary files a/samples/PlacesGraphSample/res/drawable-hdpi/icon.png and /dev/null differ
diff --git a/samples/PlacesGraphSample/res/drawable-mdpi/icon.png b/samples/PlacesGraphSample/res/drawable-mdpi/icon.png
deleted file mode 100644
index b4507c0e7..000000000
Binary files a/samples/PlacesGraphSample/res/drawable-mdpi/icon.png and /dev/null differ
diff --git a/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png b/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png
deleted file mode 100644
index 6e8424602..000000000
Binary files a/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png and /dev/null differ
diff --git a/samples/PlacesGraphSample/res/drawable/icon.png b/samples/PlacesGraphSample/res/drawable/icon.png
deleted file mode 100644
index b4507c0e7..000000000
Binary files a/samples/PlacesGraphSample/res/drawable/icon.png and /dev/null differ
diff --git a/samples/PlacesGraphSample/res/layout/current_place_fragment.xml b/samples/PlacesGraphSample/res/layout/current_place_fragment.xml
deleted file mode 100644
index 70a316784..000000000
--- a/samples/PlacesGraphSample/res/layout/current_place_fragment.xml
+++ /dev/null
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/current_place_loading_container"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="@dimen/cards_margin"
-        android:orientation="horizontal"
-        android:background="@color/white">
-        <ProgressBar
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" />
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical|left"
-            android:layout_margin="@dimen/cardview_padding"
-            android:text="@string/loading"
-            android:textSize="@dimen/body_text_size"/>
-    </LinearLayout>
-
-    <android.support.v7.widget.RecyclerView
-        android:id="@+id/current_place_recyclerview"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:background="@color/white"
-        android:visibility="invisible"/>
-
-</FrameLayout>
diff --git a/samples/PlacesGraphSample/res/layout/current_place_list_item.xml b/samples/PlacesGraphSample/res/layout/current_place_list_item.xml
deleted file mode 100644
index d2c6a2861..000000000
--- a/samples/PlacesGraphSample/res/layout/current_place_list_item.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/place_container"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_gravity="center"
-    android:orientation="vertical"
-    android:clickable="true"
-    android:padding="@dimen/cardview_padding"
-    android:foreground="?attr/selectableItemBackground">
-
-    <TextView
-        android:id="@+id/place_name"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:ellipsize="end"
-        android:maxLines="1"
-        android:textAppearance="@style/TextAppearance.AppCompat.Title"
-        android:textColor="@color/dark_text_color"/>
-
-    <TextView
-        android:id="@+id/place_address"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_below="@+id/place_name"
-        android:ellipsize="end"
-        android:maxLines="1"
-        android:textSize="@dimen/body_text_size" />
-
-</LinearLayout>
diff --git a/samples/PlacesGraphSample/res/layout/login_fragment.xml b/samples/PlacesGraphSample/res/layout/login_fragment.xml
deleted file mode 100644
index 0f01f8760..000000000
--- a/samples/PlacesGraphSample/res/layout/login_fragment.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:facebook="http://schemas.android.com/apk/res-auto"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <com.facebook.login.widget.LoginButton
-        android:id="@+id/login_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        facebook:com_facebook_confirm_logout="false"
-        facebook:com_facebook_tooltip_mode="never_display"
-        />
-
-</FrameLayout>
diff --git a/samples/PlacesGraphSample/res/layout/main_activity.xml b/samples/PlacesGraphSample/res/layout/main_activity.xml
deleted file mode 100644
index 115c2d605..000000000
--- a/samples/PlacesGraphSample/res/layout/main_activity.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <FrameLayout
-        android:id="@+id/fragment_placeholder"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-
-</RelativeLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_info_fragment.xml b/samples/PlacesGraphSample/res/layout/place_info_fragment.xml
deleted file mode 100644
index fdfc5fdb1..000000000
--- a/samples/PlacesGraphSample/res/layout/place_info_fragment.xml
+++ /dev/null
@@ -1,88 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<android.support.design.widget.CoordinatorLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <android.support.design.widget.AppBarLayout
-        android:id="@+id/place_details_appbarlayout"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/toolbar_height"
-        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-        android:background="@color/primary">
-
-        <android.support.design.widget.CollapsingToolbarLayout
-            android:id="@+id/place_details_toolbarlayout"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            app:layout_scrollFlags="scroll|exitUntilCollapsed"
-            app:contentScrim="@color/primary"
-            app:expandedTitleMarginStart="@dimen/toolbar_margin_start"
-            app:expandedTitleMarginEnd="@dimen/toolbar_margin_end">
-
-            <ImageView
-                android:id="@+id/place_details_cover"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:scaleType="centerCrop"
-                app:layout_collapseMode="parallax" />
-
-            <android.support.v7.widget.Toolbar
-                android:id="@+id/place_details_toolbar"
-                android:layout_height="?attr/actionBarSize"
-                android:layout_width="match_parent"
-                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
-                app:layout_collapseMode="pin"/>
-
-        </android.support.design.widget.CollapsingToolbarLayout>
-
-    </android.support.design.widget.AppBarLayout>
-
-    <android.support.v7.widget.RecyclerView
-        android:id="@+id/place_details_recyclerview"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        app:layout_behavior="@string/appbar_scrolling_view_behavior"
-        android:background="@color/white"/>
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/place_details_actionbutton"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="@dimen/action_button_margin"
-        android:src="@android:drawable/ic_menu_call"
-        app:borderWidth="0dp"
-        app:layout_anchor="@id/place_details_appbarlayout"
-        app:layout_anchorGravity="bottom|right|end" />
-
-    <ProgressBar
-        android:id="@+id/place_details_progress"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:indeterminate="true"
-        android:visibility="invisible"
-        />
-
-</android.support.design.widget.CoordinatorLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_info_item.xml b/samples/PlacesGraphSample/res/layout/place_info_item.xml
deleted file mode 100644
index 65f66058a..000000000
--- a/samples/PlacesGraphSample/res/layout/place_info_item.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/place_detail_container"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingLeft="@dimen/cards_margin"
-    android:paddingRight="@dimen/cards_margin"
-    android:paddingTop="@dimen/place_detail_item_margin_vertical"
-    android:paddingBottom="@dimen/place_detail_item_margin_vertical"
-    android:background="?attr/selectableItemBackground" >
-
-    <TextView
-        android:id="@+id/place_detail_title"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="left|top"
-        android:ellipsize="end"
-        android:maxLines="1"
-        android:textColor="@color/primary"/>
-
-    <TextView
-        android:id="@+id/place_detail_text"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="left|top"
-        android:textSize="@dimen/place_detail_text_size"
-        android:textColor="@color/dark_text_color"/>
-
-</LinearLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_list_item.xml b/samples/PlacesGraphSample/res/layout/place_list_item.xml
deleted file mode 100644
index e8772a01c..000000000
--- a/samples/PlacesGraphSample/res/layout/place_list_item.xml
+++ /dev/null
@@ -1,57 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<android.support.v7.widget.CardView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/place_container"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_gravity="center"
-    android:layout_marginBottom="@dimen/cards_margin"
-    android:layout_marginLeft="@dimen/cards_margin"
-    android:layout_marginRight="@dimen/cards_margin"
-    android:foreground="?attr/selectableItemBackground">
-
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="@dimen/cardview_padding">
-
-        <TextView
-            android:id="@+id/place_name"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:ellipsize="end"
-            android:maxLines="1"
-            android:textAppearance="@style/TextAppearance.AppCompat.Title"
-            android:textColor="@color/dark_text_color" />
-
-        <TextView
-            android:id="@+id/place_address"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/place_name"
-            android:ellipsize="end"
-            android:maxLines="1"
-            android:textColor="@color/dark_text_color"
-            android:textSize="@dimen/body_text_size" />
-
-    </RelativeLayout>
-</android.support.v7.widget.CardView>
diff --git a/samples/PlacesGraphSample/res/layout/place_search_fragment.xml b/samples/PlacesGraphSample/res/layout/place_search_fragment.xml
deleted file mode 100644
index 41c6a7908..000000000
--- a/samples/PlacesGraphSample/res/layout/place_search_fragment.xml
+++ /dev/null
@@ -1,119 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <FrameLayout
-        android:id="@+id/place_search_map_placeholder"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-
-    <android.support.v7.widget.CardView
-        android:id="@+id/place_search_cardview"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="@dimen/cards_margin">
-        <EditText
-            android:id="@+id/place_search_edittext"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:hint="@string/place_search_hint"
-            android:maxLines="1"
-            android:background="@android:color/transparent"
-            android:inputType="text"
-            android:imeOptions="actionSearch"
-            android:padding="@dimen/cardview_padding"/>
-    </android.support.v7.widget.CardView>
-
-    <android.support.v7.widget.CardView
-        android:id="@+id/current_place_cardview"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/place_search_cardview"
-        android:layout_marginLeft="@dimen/cards_margin"
-        android:layout_marginRight="@dimen/cards_margin"
-        android:clickable="true"
-        android:foreground="?attr/selectableItemBackground">
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:padding="@dimen/cardview_padding"
-            android:orientation="vertical">
-            <TextView
-                android:id="@+id/current_place_title"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="@string/add_my_location"
-                android:textAppearance="@style/TextAppearance.AppCompat.Title"
-                android:textColor="@color/dark_text_color"/>
-            <TextView
-                android:id="@+id/current_place_name"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="@dimen/cardview_padding"
-                android:maxLines="1"
-                android:textAppearance="@style/TextAppearance.AppCompat.Title"
-                android:textColor="@color/dark_text_color"
-                android:visibility="gone"/>
-            <TextView
-                android:id="@+id/current_place_address"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:maxLines="1"
-                android:textSize="@dimen/body_text_size"
-                android:visibility="gone"/>
-        </LinearLayout>
-
-    </android.support.v7.widget.CardView>
-
-    <android.support.v7.widget.RecyclerView
-        android:id="@+id/place_search_recyclerview"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_below="@id/current_place_cardview"
-        android:layout_marginTop="@dimen/place_list_margin_top"
-        android:overScrollMode="never"/>
-
-    <android.support.design.widget.FloatingActionButton
-        xmlns:app="http://schemas.android.com/apk/res-auto"
-        android:id="@+id/place_search_toggle_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentRight="true"
-        android:layout_margin="@dimen/action_button_margin"
-        android:src="@android:drawable/ic_dialog_map"
-        app:backgroundTint="@color/primary"
-        app:borderWidth="0dp"
-        app:elevation="@dimen/action_button_elevation"
-        app:fabSize="normal"/>
-
-    <ProgressBar
-        android:id="@+id/place_search_progressbar"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerInParent="true"
-        android:indeterminate="true"
-        android:visibility="invisible" />
-
-</RelativeLayout>
diff --git a/samples/PlacesGraphSample/res/values/arrays.xml b/samples/PlacesGraphSample/res/values/arrays.xml
deleted file mode 100644
index 677a3f609..000000000
--- a/samples/PlacesGraphSample/res/values/arrays.xml
+++ /dev/null
@@ -1,91 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<resources>
-
-    <string-array name="parking_keys">
-        <item>lot</item>
-        <item>street</item>
-        <item>valet</item>
-    </string-array>
-
-    <string-array name="parking_labels">
-        <item>Lot</item>
-        <item>Street</item>
-        <item>Valet</item>
-    </string-array>
-
-    <string-array name="restaurant_specialties_keys">
-        <item>breakfast</item>
-        <item>coffee</item>
-        <item>dinner</item>
-        <item>drinks</item>
-        <item>lunch</item>
-    </string-array>
-
-    <string-array name="restaurant_specialties_labels">
-        <item>Breakfast</item>
-        <item>Coffee</item>
-        <item>Dinner</item>
-        <item>Drinks</item>
-        <item>Lunch</item>
-    </string-array>
-
-    <string-array name="payment_options_keys">
-        <item>mastercard</item>
-        <item>visa</item>
-        <item>discover</item>
-        <item>amex</item>
-        <item>cash_only</item>
-    </string-array>
-
-    <string-array name="payment_options_labels">
-        <item>Mastercard</item>
-        <item>Visa</item>
-        <item>Discover</item>
-        <item>Amex</item>
-        <item>Cash only</item>
-    </string-array>
-
-    <string-array name="restaurant_services_keys">
-        <item>delivery</item>
-        <item>takeout</item>
-        <item>catering</item>
-        <item>reserve</item>
-        <item>groups</item>
-        <item>kids</item>
-        <item>outdoor</item>
-        <item>waiter</item>
-        <item>walkins</item>
-    </string-array>
-
-    <string-array name="restaurant_services_labels">
-        <item>Delivery</item>
-        <item>Takeout</item>
-        <item>Catering</item>
-        <item>Reservations</item>
-        <item>Groups</item>
-        <item>Kid friendly</item>
-        <item>Outdoor seating</item>
-        <item>Waiter</item>
-        <item>Walkins</item>
-    </string-array>
-
-</resources>
diff --git a/samples/PlacesGraphSample/res/values/colors.xml b/samples/PlacesGraphSample/res/values/colors.xml
deleted file mode 100644
index 05c4dd159..000000000
--- a/samples/PlacesGraphSample/res/values/colors.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<resources>
-    <color name="primary">#3F51B5</color>
-    <color name="primary_dark">#303F9F</color>
-    <color name="accent">#FF4081</color>
-    <color name="white">#FFFFFF</color>
-    <color name="dark_text_color">#515151</color>
-</resources>
diff --git a/samples/PlacesGraphSample/res/values/dimens.xml b/samples/PlacesGraphSample/res/values/dimens.xml
deleted file mode 100644
index 3b0acbaf2..000000000
--- a/samples/PlacesGraphSample/res/values/dimens.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<resources>
-    <dimen name="cards_margin">16dp</dimen>
-    <dimen name="search_resting_elevation">2dp</dimen>
-    <dimen name="search_scrolling_elevation">16dp</dimen>
-    <dimen name="cardview_padding">10dp</dimen>
-    <dimen name="action_button_margin">24dp</dimen>
-    <dimen name="toolbar_margin_start">16dp</dimen>
-    <dimen name="toolbar_margin_end">64dp</dimen>
-    <dimen name="toolbar_height">192dp</dimen>
-    <dimen name="place_list_margin_top">-16dp</dimen>
-    <dimen name="body_text_size">16sp</dimen>
-    <dimen name="current_place_confidence_text_size">12sp</dimen>
-    <dimen name="place_search_list_header_height">32dp</dimen>
-    <dimen name="place_detail_text_size">18sp</dimen>
-    <dimen name="place_detail_item_margin_vertical">5dp</dimen>
-    <dimen name="action_button_elevation">6dp</dimen>
-</resources>
diff --git a/samples/PlacesGraphSample/res/values/strings.xml b/samples/PlacesGraphSample/res/values/strings.xml
deleted file mode 100644
index 73deb10b3..000000000
--- a/samples/PlacesGraphSample/res/values/strings.xml
+++ /dev/null
@@ -1,94 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <!-- Enter your Google Map Api Key here -->
-    <string name="google_maps_key"></string>
-
-    <!-- When using a client token to authenticate, also changes the app_id to your own -->
-    <string name="app_id">1839650616300326</string>
-    <string name="fb_login_protocol_scheme">fb1839650616300326</string>
-
-    <string name="app_name">PlacesGraphSample</string>
-    <string name="facebook_app_name">PlacesGraphAndroidSample</string>
-    <string name="cancelled">Cancelled</string>
-    <string name="permission_not_granted">Unable to perform selected action because permissions were not granted.</string>
-    <string name="ok">OK</string>
-    <string name="yes">Yes</string>
-    <string name="no">No</string>
-    <string name="error">Error</string>
-    <string name="exception">Exception: %1$s</string>
-    <string name="loading">Loading</string>
-    <string name="permission_prompt_location">This sample app requires location access to search for nearby places.</string>
-    <string name="permission_prompt_call_phone">This sample app requires permission to place a phone call.</string>
-    <string name="current_place">Current place</string>
-    <string name="add_my_location">Add my location</string>
-    <string name="place_search_hint">Search for nearby places…</string>
-
-    <string name="location_error_disabled">Location services are disabled. Enable location services to use this application.</string>
-    <string name="location_error_unknown">An error has occurred retrieving the current location.</string>
-
-    <string name="place_info_checkins">%1$d checkins</string>
-    <string name="place_info_is_permanently_closed">Permanently closed</string>
-    <string name="place_info_parking_lot">Parking lot</string>
-    <string name="place_info_parking_street">Street</string>
-    <string name="place_info_parking_valet">Valet</string>
-    <string name="place_info_rating">%1$s stars (%2$d ratings)</string>
-    <string name="place_info_fan_count">%1$d fans</string>
-
-    <string name="place_field_about">About</string>
-    <string name="place_field_address">Address</string>
-    <string name="place_field_app_link">App Link</string>
-    <string name="place_field_categories">Categories</string>
-    <string name="place_field_checkins">Checkins</string>
-    <string name="place_field_description">Description</string>
-    <string name="place_field_engagement">Engagement</string>
-    <string name="place_field_hours">Business hours</string>
-    <string name="place_field_link">Link</string>
-    <string name="place_field_parking">Parking</string>
-    <string name="place_field_payment_options">Payment options</string>
-    <string name="place_field_phone">Phone</string>
-    <string name="place_field_price_range">Price range</string>
-    <string name="place_field_rating">Rating</string>
-    <string name="place_field_rating_count">Rating count</string>
-    <string name="place_field_specialties">Specialties</string>
-    <string name="place_field_services">Services</string>
-    <string name="place_field_website">Website</string>
-
-    <string name="parking_lot">Lot</string>
-    <string name="parking_street">Street</string>
-    <string name="parking_valet">Valet</string>
-
-    <string name="monday">Monday</string>
-    <string name="tuesday">Tuesday</string>
-    <string name="wednesday">Wednesday</string>
-    <string name="thursday">Thursday</string>
-    <string name="friday">Friday</string>
-    <string name="saturday">Saturday</string>
-    <string name="sunday">Sunday</string>
-
-    <string name="place_always_open">This place is open 24H</string>
-    <string name="place_permanently_closed">This place is permanently closed</string>
-
-    <string name="place_app_link">Open this place in Facebook</string>
-
-</resources>
diff --git a/samples/PlacesGraphSample/res/values/styles.xml b/samples/PlacesGraphSample/res/values/styles.xml
deleted file mode 100644
index 5b85747b9..000000000
--- a/samples/PlacesGraphSample/res/values/styles.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<resources>
-    <!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="colorPrimary">@color/primary</item>
-        <item name="colorPrimaryDark">@color/primary_dark</item>
-        <item name="colorAccent">@color/accent</item>
-    </style>
-</resources>
diff --git a/samples/PlacesGraphSample/src/com/example/places/MainActivity.java b/samples/PlacesGraphSample/src/com/example/places/MainActivity.java
deleted file mode 100644
index 983c31d3b..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/MainActivity.java
+++ /dev/null
@@ -1,282 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places;
-
-import android.Manifest;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.os.Bundle;
-import android.support.v4.app.ActivityCompat;
-import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
-
-import com.example.places.fragments.PlaceInfoFragment;
-import com.example.places.fragments.PlaceSearchFragment;
-import com.example.places.fragments.LoginFragment;
-import com.example.places.model.Place;
-import com.facebook.AccessToken;
-import com.facebook.FacebookSdk;
-
-/**
- * This sample application illustrates how to use the Places Graph SDK to:
- * <ul>
- *   <li>Retrieve a collection of place candidates along with confidence level estimates, that the
- * user is at those places.</li>
- *   <li>Allow the user to provide feedback on the accuracy of the current place estimate.</li>
- *   <li>Search for nearby places.</li>
- *   <li>Retrieve detailed place information.</li>
- *   <li>Retrieve a cover photo associated with a particular place.</li>
- *   <li>Display places on a map.</li>
- *</ul>
- * <p>
- * {@link PlacesGraphSDKHelper} demonstrates how to create requests with the Places Graph SDK.
- *
- * {@link com.example.places.model.Place} and {@link com.example.places.model.PlaceTextUtils}
- * demonstrates how to parse place information.
- */
-public class MainActivity extends AppCompatActivity implements LoginFragment.Listener,
-        PlaceSearchFragment.Listener, PlaceInfoFragment.Listener {
-
-    private static final int REQUEST_LOCATION = 0;
-    private static final int REQUEST_CALL_PHONE = 1;
-
-    /**
-     * The Places Graph SDK can be accessed using either a User Access Token or a Client Token.
-     * A User Access Token will require users to login to Facebook, but a Client Token won't.
-     *
-     * This sample app demonstrates how to use both User Access Tokens and Client Tokens.
-     * To use either one, just change the value of {@code authenticationType}
-     * to USER_TOKEN or CLIENT_TOKEN.
-     */
-    private enum AuthenticationType {
-        USER_TOKEN,
-        CLIENT_TOKEN,
-    };
-
-    /**
-     * This variable specifies whether the sample app uses a User Access Token or a Client Token.
-     *
-     * Change it to AuthenticationType.CLIENT_TOKEN to use a Client Token.
-     *
-     * To use a client token, you will also need to: update "app_id" in strings.xml to
-     * the application ID of your app, and then update the CLIENT_TOKEN constant in this class to
-     * the value of your app client token. You can find the client token value on the Developer
-     * Portal page of your app, under the Advanced Settings section.
-     */
-    private final AuthenticationType authenticationType = AuthenticationType.USER_TOKEN;
-
-    /**
-     * To use client token authentication, get your app client token from the developer
-     * portal, and enter it below. The client token is available under your application page in the
-     * Developer Portal, under the Advanced Settings section. Note that you must also change
-     * the app_id to your own Application ID in the file "strings.xml".
-     */
-    private static final String CLIENT_TOKEN = "";
-
-    private Intent callPhoneIntent;
-
-    public void onCreate(Bundle bundle) {
-        super.onCreate(bundle);
-
-        setContentView(R.layout.main_activity);
-
-        /**
-         * You can use the Places Graph SDK with either a User Access Token, or a Client Token.
-         * By default, this code sample is configured to use a User Access Token.
-         */
-        if (authenticationType == AuthenticationType.USER_TOKEN) {
-            AccessToken accessToken = AccessToken.getCurrentAccessToken();
-            if (accessToken == null) {
-                /**
-                 * When a User Access Token is used, and if the token is not present,
-                 * then prompt the user to log into Facebook.
-                 */
-                displayLoginFragment();
-            } else {
-                displayPlaceListFragment();
-            }
-        } else {
-            /**
-             * When a Client Token is used, set the client token to the Facebook SDK class
-             * as illustrated below. Users do not need to log into Facebook. PlaceManager requests
-             * can be placed once the client token has been set.
-             */
-            FacebookSdk.setClientToken(CLIENT_TOKEN);
-            displayPlaceListFragment();
-        }
-    }
-
-    public void onStart() {
-        super.onStart();
-        if (!hasLocationPermission()) {
-            requestLocationPermission();
-        }
-    }
-
-    private void requestLocationPermission() {
-        /*
-         * Prompts the user to grant location permissions. This sample app uses the
-         * device's' location to get the current place from the Place Graph SDK,
-         * and to perform local place searches.
-         */
-        if (ActivityCompat.shouldShowRequestPermissionRationale(
-            this,
-            Manifest.permission.ACCESS_FINE_LOCATION)) {
-
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setMessage(R.string.permission_prompt_location);
-            builder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    ActivityCompat.requestPermissions(
-                            MainActivity.this,
-                            new String[]{Manifest.permission.ACCESS_FINE_LOCATION,
-                                    Manifest.permission.ACCESS_COARSE_LOCATION},
-                            REQUEST_LOCATION);
-                }
-            });
-            builder.create().show();
-        } else {
-            ActivityCompat.requestPermissions(
-                    this,
-                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION,
-                            Manifest.permission.ACCESS_COARSE_LOCATION},
-                    REQUEST_LOCATION);
-        }
-    }
-
-    @Override
-    public void onRequestPermissionsResult(
-            int requestCode,
-            String[] permissions,
-            int[] grantResults) {
-        if (requestCode == REQUEST_CALL_PHONE) {
-            try {
-                if (callPhoneIntent != null) {
-                    startActivity(callPhoneIntent);
-                    callPhoneIntent = null;
-                }
-            } catch (SecurityException e) {
-                callPhoneIntent = null;
-                // ignore
-            }
-        } else {
-            super.onRequestPermissionsResult(requestCode, permissions, grantResults);
-        }
-    }
-
-    @Override
-    public void onLoginComplete() {
-        // Event invoked by the LoginFragment when login completes.
-        displayPlaceListFragment();
-    }
-
-    @Override
-    public void onPlaceSelected(Place place) {
-        // Event invoked by the PlaceSearchFragment when a place is selected.
-        displayPlaceInfoFragment(place);
-    }
-
-    @Override
-    public void onLocationPermissionsError() {
-        // Event invoked by the PlaceSearchFragment when the Places Graph SDK fails to retrieve
-        // the current device location due to missing location permissions.
-        requestLocationPermission();
-    }
-
-    private void displayPlaceListFragment() {
-        PlaceSearchFragment placeListFragment = PlaceSearchFragment.newInstance();
-        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-        transaction.replace(R.id.fragment_placeholder, placeListFragment);
-        transaction.commit();
-    }
-
-    private void displayLoginFragment() {
-        LoginFragment loginFragment = LoginFragment.newInstance();
-        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-        transaction.replace(R.id.fragment_placeholder, loginFragment);
-        transaction.commit();
-    }
-
-    private void displayPlaceInfoFragment(Place place) {
-        PlaceInfoFragment placeInfoFragment = PlaceInfoFragment.newInstance();
-        Bundle bundle = new Bundle();
-        bundle.putParcelable(PlaceInfoFragment.EXTRA_PLACE, place);
-        placeInfoFragment.setArguments(bundle);
-        getSupportFragmentManager()
-                .beginTransaction()
-                .add(R.id.fragment_placeholder, placeInfoFragment, "details")
-                .addToBackStack(place.get(Place.NAME))
-                .commit();
-    }
-
-    @Override
-    public void onCallPhone(final Intent intent) {
-        /*
-         * Prompts the user for permission to place a phone call, and then places the call.
-         */
-        if (hasPermission(Manifest.permission.CALL_PHONE)) {
-            startActivity(intent);
-        } else if (ActivityCompat.shouldShowRequestPermissionRationale(
-            this,
-            Manifest.permission.CALL_PHONE)) {
-
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setMessage(R.string.permission_prompt_call_phone);
-            builder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    callPhoneIntent = intent;
-                    ActivityCompat.requestPermissions(
-                            MainActivity.this,
-                            new String[]{Manifest.permission.CALL_PHONE},
-                            REQUEST_CALL_PHONE);
-                }
-            });
-            builder.create().show();
-        } else {
-            callPhoneIntent = intent;
-            ActivityCompat.requestPermissions(
-                    this,
-                    new String[]{Manifest.permission.CALL_PHONE},
-                    REQUEST_CALL_PHONE);
-        }
-    }
-
-    private boolean hasPermission(String permission) {
-        return ActivityCompat.checkSelfPermission(this, permission)
-                == PackageManager.PERMISSION_GRANTED;
-    }
-
-    @Override
-    public boolean hasLocationPermission() {
-        return hasPermission(Manifest.permission.ACCESS_FINE_LOCATION)
-                || hasPermission(Manifest.permission.ACCESS_COARSE_LOCATION);
-    }
-
-    @Override
-    public boolean onSupportNavigateUp() {
-        onBackPressed();
-        return true;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java b/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java
deleted file mode 100644
index d5dade6e2..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java
+++ /dev/null
@@ -1,491 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places;
-
-import android.support.annotation.Nullable;
-import android.util.Log;
-
-import com.example.places.model.CurrentPlaceResult;
-import com.example.places.model.Place;
-import com.example.places.utils.BitmapDownloadTask;
-import com.facebook.FacebookRequestError;
-import com.facebook.FacebookSdk;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.places.PlaceManager;
-import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
-import com.facebook.places.model.CurrentPlaceRequestParams;
-import com.facebook.places.model.PlaceFields;
-import com.facebook.places.model.PlaceInfoRequestParams;
-import com.facebook.places.model.PlaceSearchRequestParams;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.lang.ref.WeakReference;
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This class illustrates how to use the Places Graph SDK to:
- * <ul>
- *   <li>Get the current place.</li>
- *   <li>Provide feedback on the current place response.</li>
- *   <li>Search places.</li>
- *   <li>Fetch detailed place info.</li>
- *</ul>
- * This class also illustrates how to parse the responses of the Places Graph SDK.
- */
-public class PlacesGraphSDKHelper {
-
-    private static final String TAG = "PlacesGraphSDKHelper";
-    private static final String PARAM_DATA = "data";
-
-    /**
-     * These are the place fields that are fetched in the place info request.
-     */
-    private static final String[] PLACE_INFO_REQUEST_FIELDS = new String[]{
-            Place.ID,
-            Place.NAME,
-            Place.DESCRIPTION,
-            Place.CHECKINS,
-            Place.ABOUT,
-            Place.ENGAGEMENT,
-            Place.HOURS,
-            Place.COVER,
-            Place.IS_ALWAYS_OPEN,
-            Place.IS_PERMANENTLY_CLOSED,
-            Place.IS_VERIFIED,
-            Place.LINK,
-            Place.APP_LINKS,
-            Place.OVERALL_STAR_RATING,
-            Place.PARKING,
-            Place.RESTAURANT_SPECIALTIES,
-            Place.WEBSITE,
-            Place.LOCATION,
-            Place.PHONE,
-            Place.PRICE_RANGE,
-            Place.RATING_COUNT,
-            Place.CATEGORY_LIST,
-            Place.RESTAURANT_SERVICES,
-            Place.PAYMENT_OPTIONS,
-            Place.WORKFLOWS,
-            Place.SINGLE_LINE_ADDRESS,
-    };
-
-    /**
-     * Defines the listener invoked when the current place response is received.
-     */
-    public interface CurrentPlaceRequestListener {
-
-        /**
-         * Invoked when the current place response is received.
-         *
-         * @param result This object contains the list of places, and the tracking ID parsed
-         *  from the current place response; or it contains null if the request fails.
-         * @param response The Places Graph response.
-         */
-        void onCurrentPlaceResult(
-                @Nullable CurrentPlaceResult result,
-                GraphResponse response);
-
-        /**
-         * Invoked when the Places Graph SDK fails to retrieve the current location.
-         * @param error Contains a message that explains why retrieving the location failed.
-         */
-        void onLocationError(PlaceManager.LocationError error);
-    }
-
-    /**
-     * Defines the listener invoked when the place search response is received.
-     */
-    public interface PlaceSearchRequestListener {
-
-        /**
-         * Invoked when the place search response has been received.
-         *
-         * @param places The list of places parsed from the response,
-         *               or contains null if the request fails.
-         * @param response The Places Graph response.
-         */
-        void onPlaceSearchResult(@Nullable List<Place> places, GraphResponse response);
-
-        /**
-         * Invoked when the Places Graph SDK fails to retrieve the current location.
-         * @param error Contains the reason why retrieving the location failed.
-         */
-        void onLocationError(PlaceManager.LocationError error);
-    }
-
-    /**
-     * Defines the listener invoked when the place info response is received.
-     */
-    public interface PlaceInfoRequestListener {
-
-        /**
-         * Invoked when the place info response is received.
-         *
-         * @param place The place instance parsed from the response,
-         *              or contains null if the request fails.
-         * @param response The Places Graph response.
-         */
-        void onPlaceInfoResult(@Nullable Place place, GraphResponse response);
-    }
-
-    /**
-     * Creates and executes a place search request.
-     * @param searchQuery The text search term. This can be null to let the Places Graph SDK
-     *                    return nearby places.
-     * @param listener Invoked when the place search response is received,
-     *                 and when the place search request fails.
-     */
-    public static void searchPlace(String searchQuery, PlaceSearchRequestListener listener) {
-
-        // Creates the place search request builder.
-        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
-        // Specifies the text search query. This field is optional. If you don't specify it,
-        // then places of importance within the maximum distance radius will be returned.
-        builder.setSearchText(searchQuery);
-        // The maximum search radius in meters.
-        builder.setDistance(1000);
-        // The maximum number of places to return.
-        builder.setLimit(10);
-        // The place fields to be returned.
-        builder.addField(Place.NAME);
-        builder.addField(Place.LOCATION);
-        builder.addField(Place.PHONE);
-
-        // Creates the callback invoked when the request is ready.
-        OnPlaceSearchRequestReadyCallback onRequestReadyCallback =
-                new OnPlaceSearchRequestReadyCallback(listener);
-
-        // The Places Graph SDK starts retrieving the current device location, and constructs
-        // the GraphRequest. The callback is invoked once the request is ready.
-        PlaceManager.newPlaceSearchRequest(builder.build(), onRequestReadyCallback);
-    }
-
-    private static class OnPlaceSearchRequestReadyCallback
-            implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {
-
-        private final WeakReference<PlaceSearchRequestListener> listenerRef;
-
-        OnPlaceSearchRequestReadyCallback(PlaceSearchRequestListener listener) {
-            listenerRef = new WeakReference<>(listener);
-        }
-
-        @Override
-        public void onLocationError(PlaceManager.LocationError error) {
-            // Invoked if the Places Graph SDK fails to retrieve the device location.
-            PlaceSearchRequestListener listener = listenerRef.get();
-            if (listener == null) {
-                Log.d(TAG, "listener is null!");
-            } else {
-                listener.onLocationError(error);
-            }
-        }
-
-        @Override
-        public void onRequestReady(GraphRequest graphRequest) {
-
-            // The place search request is ready to be executed.
-            // The request can be customized here if needed.
-
-            // Sets the callback, and executes the request.
-            graphRequest.setCallback(this);
-            graphRequest.executeAsync();
-        }
-
-        @Override
-        public void onCompleted(GraphResponse response) {
-            // Event invoked when the place search response is received.
-
-            List<Place> places = null;
-
-            FacebookRequestError error = response.getError();
-            if (error == null) {
-                // Parses the place search response.
-                try {
-                    JSONObject jsonObject = response.getJSONObject();
-                    if (jsonObject != null) {
-                        JSONArray jsonArray = jsonObject.optJSONArray(PARAM_DATA);
-                        if (jsonArray != null) {
-                            int length = jsonArray.length();
-                            places = new ArrayList<>(length);
-                            for (int i = 0; i < length; i++) {
-                                places.add(new Place(jsonArray.getJSONObject(i)));
-                            }
-                        }
-                    }
-                } catch (JSONException e) {
-                    Log.e(TAG, "failed to parse place the place search response", e);
-                }
-            } else {
-                // The error object contains more information on the error.
-                Log.d(TAG, "response error: " + error);
-            }
-
-            PlaceSearchRequestListener listener = listenerRef.get();
-            if (listener == null) {
-                Log.d(TAG, "no listener!");
-            } else {
-                listener.onPlaceSearchResult(places, response);
-            }
-        }
-    }
-
-    /**
-     * Creates and executes a current place request.
-     * This request is used to determine the place where the user is currently located.
-     *
-     * @param listener Listener invoked when the current place response is received.
-     */
-    public static void getCurrentPlace(CurrentPlaceRequestListener listener) {
-
-        // Creates the current place request builder.
-        CurrentPlaceRequestParams.Builder builder =
-                new CurrentPlaceRequestParams.Builder();
-
-        // Specifies the minimum confidence level of the results.
-        builder.setMinConfidenceLevel(CurrentPlaceRequestParams.ConfidenceLevel.LOW);
-        // Specifies the maximum number of places returned.
-        builder.setLimit(10);
-        // Specifies the place fields returned.
-        builder.addField(PlaceFields.NAME);
-        builder.addField(PlaceFields.CONFIDENCE_LEVEL);
-        builder.addField(PlaceFields.LOCATION);
-        builder.addField(PlaceFields.PHONE);
-
-        OnCurrentPlaceRequestReadyCallback callback =
-                new OnCurrentPlaceRequestReadyCallback(listener);
-
-        PlaceManager.newCurrentPlaceRequest(builder.build(), callback);
-    }
-
-    private static class OnCurrentPlaceRequestReadyCallback
-            implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {
-
-        private final WeakReference<CurrentPlaceRequestListener> listenerRef;
-
-        private OnCurrentPlaceRequestReadyCallback(CurrentPlaceRequestListener listener) {
-            listenerRef = new WeakReference<>(listener);
-        }
-
-        @Override
-        public void onRequestReady(GraphRequest graphRequest) {
-
-            // The current place request is ready. The request can be customized here.
-            // Define the callback that will handle and parse the response,
-            // and then execute the request.
-            graphRequest.setCallback(this);
-            graphRequest.executeAsync();
-        }
-
-        @Override
-        public void onCompleted(GraphResponse response) {
-
-            FacebookRequestError error = response.getError();
-
-            // Parses the current place response. CurrentPlaceResult is used in
-            // the sample app to illustrate how to parse the list of places, and
-            // how to parse the tracking ID from the current place response.
-
-            CurrentPlaceResult result = null;
-            if (error == null) {
-                try {
-                    JSONObject jsonObject = response.getJSONObject();
-                    if (jsonObject != null) {
-                        result = CurrentPlaceResult.fromJson(jsonObject);
-                    }
-                } catch (JSONException e) {
-                    Log.e(TAG, "error while parsing current place response", e);
-                }
-            } else {
-                Log.d(TAG, "response error: " + error);
-            }
-
-            CurrentPlaceRequestListener listener = listenerRef.get();
-            if (listener == null) {
-                Log.d(TAG, "no listener");
-            } else {
-                listener.onCurrentPlaceResult(result, response);
-            }
-        }
-
-        @Override
-        public void onLocationError(PlaceManager.LocationError error) {
-            CurrentPlaceRequestListener listener = listenerRef.get();
-            if (listener == null) {
-                Log.d(TAG, "listener is null!");
-            } else {
-                listener.onLocationError(error);
-            }
-        }
-    }
-
-    /**
-     * Creates and executes a current place feedback request. This request is used to provide
-     * feedback on the accuracy of the current place response.
-     *
-     * @param currentPlaceResult The result of the current place request.
-     * @param place The place where the user is (or isn't') located.
-     * @param wasHere true to indicate that the user is located at the place, and
-     * false to indicate that the user is not located at the place.
-     */
-    public static void provideCurrentPlaceFeedback(
-            final CurrentPlaceResult currentPlaceResult,
-            final Place place,
-            final boolean wasHere) {
-
-        // Creates the builder of the current place feedback request.
-        CurrentPlaceFeedbackRequestParams.Builder builder =
-                new CurrentPlaceFeedbackRequestParams.Builder();
-
-        /**
-         * Sets the tracking ID, which is used as a correlator to the current place response.
-         * The tracking ID is retrieved from the current place response.
-          */
-        builder.setTracking(currentPlaceResult.getTracking());
-
-        // The place at which the user is (or is not) located.
-        String placeId = place.get(Place.ID);
-        builder.setPlaceId(placeId);
-
-        // Indicates if the user is or is not at the place.
-        builder.setWasHere(wasHere);
-
-        GraphRequest request = PlaceManager.newCurrentPlaceFeedbackRequest(builder.build());
-
-        GraphRequest.Callback callback = new GraphRequest.Callback() {
-            @Override
-            public void onCompleted(GraphResponse response) {
-                boolean success = false;
-                FacebookRequestError error = response.getError();
-                if (error == null) {
-                    JSONObject jsonObject = response.getJSONObject();
-                    success = jsonObject.optBoolean("success");
-                } else {
-                    Log.d(TAG, "response error: " + error);
-                }
-                Log.d(
-                        TAG,
-                        "provideCurrentPlaceFeedback: onCompleted: response: success=" + success);
-            }
-        };
-        request.setCallback(callback);
-
-        request.executeAsync();
-    }
-
-    /**
-     * Creates and executes a Place Info request on the Places Graph SDK.
-     *
-     * @param place Specifies the place for retrieving additional fields.
-     * @param listener The listener invoked when the place details have been fetched.
-     */
-    public static void fetchPlaceInfo(Place place, PlaceInfoRequestListener listener) {
-
-        // Creates the builder for the place info request.
-        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
-
-        // Specifies the ID of the place to fetch information about.
-        String placeId = place.get(Place.ID);
-        builder.setPlaceId(placeId);
-        /**
-         * Specifies the fields to be fetched. Note the fields are defined in {@link PlaceFields}
-         * as String constants. Refer to the Places Graph online documentation to see the
-         * complete list of fields.
-         */
-        builder.addFields(PLACE_INFO_REQUEST_FIELDS);
-
-        // Create the place information request.
-        final GraphRequest request = PlaceManager.newPlaceInfoRequest(builder.build());
-
-        // Define the callback that will parse the response.
-        request.setCallback(new OnPlaceInfoResponseCallback(listener));
-        request.executeAsync();
-    }
-
-    /**
-     * Callback used to parse the place information response.
-     */
-    private static class OnPlaceInfoResponseCallback implements GraphRequest.Callback {
-
-        private final WeakReference<PlaceInfoRequestListener> listenerRef;
-
-        private OnPlaceInfoResponseCallback(PlaceInfoRequestListener listener) {
-            listenerRef = new WeakReference<>(listener);
-        }
-
-        @Override
-        public void onCompleted(GraphResponse response) {
-
-            Place place = null;
-
-            // The place object is used in the sample app to parse the JSON response
-            // from the Places Graph.
-            FacebookRequestError error = response.getError();
-            if (error == null) {
-                try {
-                    JSONObject jsonObject = response.getJSONObject();
-                    if (jsonObject != null) {
-                        place = new Place(jsonObject);
-                    }
-                } catch (Exception e) {
-                    Log.e(TAG, "failed to parse place info", e);
-                }
-            } else {
-                Log.d(TAG, "response error: " + error);
-            }
-
-            PlaceInfoRequestListener listener = listenerRef.get();
-            if (listener == null) {
-                Log.d(TAG, "no listener");
-            } else {
-                listener.onPlaceInfoResult(place, response);
-            }
-        }
-    }
-
-    /**
-     * Illustrates how to download the cover photo of a given place.
-     *
-     * @param place Specifies the place associated with the cover photo.
-     *              The place must have a COVER field. See {@link PlaceFields}.
-     * @param listener The listener invoked when the cover photo is downloaded.
-     * @return true if the download is initiated. false if the place does not have a COVER field.
-     */
-    public static boolean downloadPlaceCoverPhoto(
-            Place place,
-            BitmapDownloadTask.Listener listener) {
-        /**
-         * In your applications, use Fresco to download, load, cache, and display images.
-         * https://github.com/facebook/fresco
-         */
-        String coverPhotoUrl = place.getCoverPhotoUrl();
-        if (coverPhotoUrl == null) {
-            return false;
-        }
-        BitmapDownloadTask bitmapDownloadTask = new BitmapDownloadTask(coverPhotoUrl, listener);
-        FacebookSdk.getExecutor().execute(bitmapDownloadTask);
-        return true;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java
deleted file mode 100644
index 3808161db..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java
+++ /dev/null
@@ -1,101 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.adapters;
-
-import android.content.Context;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.example.places.R;
-import com.example.places.utils.PlaceFieldData;
-
-import java.util.List;
-
-public class PlaceDetailsAdapter extends
-        RecyclerView.Adapter<PlaceDetailsAdapter.PlaceDetailViewHolder> {
-
-    private List<PlaceFieldData> fields;
-    private Listener listener;
-
-    public interface Listener {
-        void onPlaceFieldSelected(PlaceFieldData placeFieldData);
-    }
-
-    public class PlaceDetailViewHolder extends RecyclerView.ViewHolder
-            implements View.OnClickListener {
-
-        private View container;
-        private TextView title;
-        private TextView text;
-        private PlaceFieldData currentPlaceFieldData;
-
-        public PlaceDetailViewHolder(View itemView) {
-            super(itemView);
-            container = itemView.findViewById(R.id.place_detail_container);
-            title = (TextView) itemView.findViewById(R.id.place_detail_title);
-            text = (TextView) itemView.findViewById(R.id.place_detail_text);
-        }
-
-        void update(PlaceFieldData placeFieldData) {
-            currentPlaceFieldData = placeFieldData;
-            title.setText(placeFieldData.getTitle());
-            text.setText(placeFieldData.getText());
-            if (placeFieldData.isClickable()) {
-                container.setOnClickListener(this);
-            } else {
-                container.setOnClickListener(null);
-            }
-        }
-
-        @Override
-        public void onClick(View v) {
-            listener.onPlaceFieldSelected(currentPlaceFieldData);
-        }
-    }
-
-    public PlaceDetailsAdapter(Listener listener, List<PlaceFieldData> fields) {
-        this.listener = listener;
-        this.fields = fields;
-    }
-
-    @Override
-    public PlaceDetailViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        Context context = parent.getContext();
-        LayoutInflater inflater = LayoutInflater.from(context);
-        View view = inflater.inflate(R.layout.place_info_item, parent, false);
-        PlaceDetailViewHolder viewHolder = new PlaceDetailViewHolder(view);
-        return viewHolder;
-    }
-
-    @Override
-    public int getItemCount() {
-        return fields.size();
-    }
-
-    @Override
-    public void onBindViewHolder(PlaceDetailViewHolder holder, int position) {
-        PlaceFieldData field = fields.get(position);
-        holder.update(field);
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java
deleted file mode 100644
index 9d6904aa6..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java
+++ /dev/null
@@ -1,99 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.adapters;
-
-import android.content.Context;
-import android.support.v7.widget.CardView;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.example.places.R;
-import com.example.places.model.Place;
-import com.example.places.model.PlaceTextUtils;
-
-import java.util.List;
-
-public class PlaceListAdapter extends RecyclerView.Adapter<PlaceListAdapter.PlaceViewHolder> {
-
-    private List<Place> places;
-    private Listener listener;
-    private int layoutId;
-
-    public interface Listener {
-        void onPlaceSelected(Place place);
-    }
-
-    public class PlaceViewHolder extends RecyclerView.ViewHolder {
-        private View container;
-        private TextView placeNameTextView;
-        private TextView placeAddressTextView;
-        private Place currentPlace;
-
-        public PlaceViewHolder(View itemView) {
-            super(itemView);
-            container = itemView.findViewById(R.id.place_container);
-            placeNameTextView = (TextView) itemView.findViewById(R.id.place_name);
-            placeAddressTextView =
-                    (TextView) itemView.findViewById(R.id.place_address);
-            container.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    listener.onPlaceSelected(currentPlace);
-                }
-            });
-        }
-
-        void refresh(Place place) {
-            this.currentPlace = place;
-            placeNameTextView.setText(place.get(Place.NAME));
-            placeAddressTextView.setText(PlaceTextUtils.getAddress(place));
-        }
-    }
-
-    public PlaceListAdapter(int laoyutId, List<Place> places, Listener listener) {
-        this.layoutId = laoyutId;
-        this.places = places;
-        this.listener = listener;
-    }
-
-    @Override
-    public PlaceViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        Context context = parent.getContext();
-        LayoutInflater inflater = LayoutInflater.from(context);
-        View view = inflater.inflate(layoutId, parent, false);
-        PlaceViewHolder viewHolder = new PlaceViewHolder(view);
-        return viewHolder;
-    }
-
-    @Override
-    public void onBindViewHolder(PlaceViewHolder holder, int position) {
-        Place place = places.get(position);
-        holder.refresh(place);
-    }
-
-    @Override
-    public int getItemCount() {
-        return places.size();
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java
deleted file mode 100644
index 18a4c2be4..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java
+++ /dev/null
@@ -1,171 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.fragments;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.DialogFragment;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Toast;
-
-import com.example.places.PlacesGraphSDKHelper;
-import com.example.places.R;
-import com.example.places.adapters.PlaceListAdapter;
-import com.example.places.model.CurrentPlaceResult;
-import com.example.places.model.Place;
-import com.facebook.GraphResponse;
-import com.facebook.places.PlaceManager;
-
-/**
- * This dialog fragment illustrates how to:
- * <ul>
- *   <li>Fetch a collection of current place candidates where the user might be located.</li>
- *   <li>Display a list of current place candidates.</li>
- *   <li>Provide feedback about the current place estimate.</li>
- * </ul>
- */
-public class CurrentPlaceDialogFragment extends DialogFragment implements
-        PlaceListAdapter.Listener {
-
-    public static final String EXTRA_CURRENT_PLACE = "current_place";
-
-    private RecyclerView recyclerView;
-    private View loadingView;
-    private CurrentPlaceResult currentPlaceResult;
-    private CurrentPlaceRequestListener currentPlaceRequestListener
-            = new CurrentPlaceRequestListener();
-
-    public static CurrentPlaceDialogFragment newInstance() {
-        return new CurrentPlaceDialogFragment();
-    }
-
-    @Override
-    public void onDetach() {
-        super.onDetach();
-        currentPlaceRequestListener = null;
-    }
-
-    public View onCreateView(
-            LayoutInflater inflater,
-            @Nullable ViewGroup container,
-            Bundle savedInstanceState) {
-        getDialog().setTitle(getString(R.string.current_place));
-        return inflater.inflate(R.layout.current_place_fragment, container, false);
-    }
-
-    @Override
-    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-
-        recyclerView = (RecyclerView) view.findViewById(R.id.current_place_recyclerview);
-        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
-        loadingView = view.findViewById(R.id.current_place_loading_container);
-
-        getCurrentPlace();
-    }
-
-    private void getCurrentPlace() {
-        PlacesGraphSDKHelper.getCurrentPlace(currentPlaceRequestListener);
-    }
-
-    @Override
-    public void onPlaceSelected(Place place) {
-
-        // Provides feedback to the Places Graph once the user confirms presence at
-        // a place. This feedback helps Facebook improve the accuracy of current place estimates.
-        PlacesGraphSDKHelper.provideCurrentPlaceFeedback(
-                currentPlaceResult,
-                place,
-                true);
-
-        Intent data = new Intent();
-        data.putExtra(EXTRA_CURRENT_PLACE, place);
-
-        getTargetFragment().onActivityResult(
-                getTargetRequestCode(),
-                Activity.RESULT_OK,
-                data);
-
-        dismiss();
-    }
-
-    private void refreshCurrentPlaceList(CurrentPlaceResult result) {
-        currentPlaceResult = result;
-
-        PlaceListAdapter adapter = new PlaceListAdapter(
-                R.layout.current_place_list_item,
-                result.getPlaces(),
-                this);
-
-        recyclerView.setAdapter(adapter);
-        recyclerView.setVisibility(View.VISIBLE);
-        loadingView.setVisibility(View.GONE);
-    }
-
-    private class CurrentPlaceRequestListener
-            implements PlacesGraphSDKHelper.CurrentPlaceRequestListener {
-
-        @Override
-        public void onCurrentPlaceResult(
-                @Nullable final CurrentPlaceResult result,
-                final GraphResponse response) {
-
-            if (isAdded()) {
-                getActivity().runOnUiThread(new Runnable() {
-                    @Override
-                    public void run() {
-                        if (result == null) {
-                            Toast.makeText(
-                                    getActivity(),
-                                    R.string.error,
-                                    Toast.LENGTH_SHORT).show();
-                            dismiss();
-                        } else {
-                            refreshCurrentPlaceList(result);
-                        }
-                    }
-                });
-            }
-        }
-
-        @Override
-        public void onLocationError(PlaceManager.LocationError error) {
-            if (isAdded()) {
-                getActivity().runOnUiThread(new Runnable() {
-                    @Override
-                    public void run() {
-                        Toast.makeText(
-                                getActivity(),
-                                R.string.location_error_unknown,
-                                Toast.LENGTH_SHORT).show();
-                        dismiss();
-                    }
-                });
-            }
-        }
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
deleted file mode 100644
index fc81046e8..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
+++ /dev/null
@@ -1,141 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.fragments;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.places.R;
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.login.LoginResult;
-import com.facebook.login.widget.LoginButton;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This fragment implements login to Facebook. This step is optional when
- * using the Places Graph SDK.
- *
- * The Places Graph SDK supports two types of authentication tokens:
- * <ul>
- *     <li>Client Token: these do NOT require users to log in Facebook.
- * Refer to {@link com.example.places.MainActivity} to see how to use a Client Token.</li>
- *     <li>User Access Token: these are the tokens obtained when a user logs into Facebook.
- *     This fragment illustrates how to login to Facebook and get a user token.
- *     For more information about Facebook login, see the "HelloFacebookSample".</li>
- * </ul>
- */
-public class LoginFragment extends Fragment {
-
-    private static final String TAG = "LoginFragment";
-    private static final String PUBLIC_PERMISSION = "public_profile";
-
-    private Listener listener;
-    private CallbackManager callbackManager;
-
-    public interface Listener {
-        void onLoginComplete();
-    }
-
-    public static LoginFragment newInstance() {
-        return new LoginFragment();
-    }
-
-    public void onAttach(Context context) {
-        super.onAttach(context);
-        if (context instanceof Activity) {
-            listener = (Listener) context;
-        }
-    }
-
-    public void onDestroy() {
-        super.onDestroy();
-        listener = null;
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(
-            LayoutInflater inflater,
-            @Nullable ViewGroup container,
-            Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.login_fragment, container, false);
-    }
-
-    @Override
-    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-
-        LoginButton loginButton = (LoginButton) view.findViewById(R.id.login_button);
-        loginButton.setFragment(this);
-        List<String> permissions = new ArrayList<>();
-        permissions.add(PUBLIC_PERMISSION);
-        loginButton.setReadPermissions(permissions);
-        callbackManager = CallbackManager.Factory.create();
-
-        loginButton.registerCallback(
-            callbackManager,
-            new FacebookCallback<LoginResult>() {
-                    @Override
-                    public void onSuccess(LoginResult loginResult) {
-                        listener.onLoginComplete();
-                    }
-
-                    @Override
-                    public void onCancel() {
-                        Log.d(TAG, "onCancel");
-                        showAlert();
-                    }
-
-                    @Override
-                    public void onError(FacebookException exception) {
-                        Log.d(TAG, "onError: " + exception);
-                        showAlert();
-                    }
-                });
-    }
-
-    private void showAlert() {
-        new AlertDialog.Builder(getActivity())
-                .setTitle(R.string.cancelled)
-                .setMessage(R.string.permission_not_granted)
-                .setPositiveButton(R.string.ok, null)
-                .show();
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java
deleted file mode 100644
index e1d91ced9..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java
+++ /dev/null
@@ -1,276 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.fragments;
-
-import android.app.Activity;
-import android.content.ActivityNotFoundException;
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.Bitmap;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.design.widget.FloatingActionButton;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.support.v7.widget.Toolbar;
-import android.telephony.PhoneNumberUtils;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.ProgressBar;
-import android.widget.Toast;
-
-import com.example.places.R;
-import com.example.places.adapters.PlaceDetailsAdapter;
-import com.example.places.PlacesGraphSDKHelper;
-import com.example.places.utils.PlaceFieldData;
-import com.example.places.utils.PlaceFieldDataFactory;
-import com.example.places.model.Place;
-import com.example.places.model.PlaceTextUtils;
-import com.example.places.utils.BitmapDownloadTask;
-import com.facebook.GraphResponse;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This fragment illustrates how to get detailed place information from the Places Graph SDK.
- *
- * Refer to {@link PlacesGraphSDKHelper}, {@link Place}, and {@link PlaceTextUtils} to see how
- * the place info request is created, and to see how the place info is parsed and displayed.
- */
-public class PlaceInfoFragment extends Fragment implements
-        PlacesGraphSDKHelper.PlaceInfoRequestListener,
-        PlaceDetailsAdapter.Listener,
-        BitmapDownloadTask.Listener {
-
-    private static final String TAG = PlaceInfoFragment.class.getSimpleName();
-
-    public static final String EXTRA_PLACE = "place";
-
-    /**
-     *
-     * These are the place fields that will be displayed in the recycler view.
-     */
-    private static final String[] PLACE_FIELDS_TO_DISPLAY_IN_RECYCLERVIEW = new String[]{
-            Place.CATEGORY_LIST,
-            Place.ABOUT,
-            Place.LOCATION,
-            Place.PHONE,
-            Place.WEBSITE,
-            Place.HOURS,
-            Place.IS_ALWAYS_OPEN,
-            Place.IS_PERMANENTLY_CLOSED,
-            Place.DESCRIPTION,
-            Place.CHECKINS,
-            Place.OVERALL_STAR_RATING,
-            Place.ENGAGEMENT,
-            Place.RESTAURANT_SPECIALTIES,
-            Place.RESTAURANT_SERVICES,
-            Place.PRICE_RANGE,
-            Place.PAYMENT_OPTIONS,
-            Place.IS_VERIFIED,
-            Place.APP_LINKS,
-            Place.PARKING,
-            Place.LINK,
-    };
-
-    public interface Listener {
-        void onCallPhone(Intent intent);
-    }
-
-    private Listener listener;
-    private Place place;
-    private RecyclerView recyclerView;
-    private ImageView coverView;
-    private Toolbar toolbar;
-    private FloatingActionButton floatingActionButton;
-    private ProgressBar progressBar;
-
-    public static PlaceInfoFragment newInstance() {
-        return new PlaceInfoFragment();
-    }
-
-    public void onAttach(Context context) {
-        super.onAttach(context);
-        if (context instanceof Activity) {
-            listener = (Listener) context;
-        }
-    }
-
-    public void onDestroy() {
-        super.onDestroy();
-        listener = null;
-    }
-
-    public View onCreateView(
-            LayoutInflater inflater,
-            @Nullable ViewGroup container,
-            Bundle savedInstanceState) {
-        if (savedInstanceState == null) {
-            final Bundle args = getArguments();
-            place = args.getParcelable(EXTRA_PLACE);
-        } else {
-            place = savedInstanceState.getParcelable(EXTRA_PLACE);
-        }
-        return inflater.inflate(R.layout.place_info_fragment, container, false);
-    }
-
-    @Override
-    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-
-        toolbar = (Toolbar) view.findViewById(R.id.place_details_toolbar);
-        ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayShowHomeEnabled(true);
-
-        progressBar = (ProgressBar) view.findViewById(R.id.place_details_progress);
-        coverView = (ImageView) view.findViewById(R.id.place_details_cover);
-        recyclerView = (RecyclerView) view.findViewById(R.id.place_details_recyclerview);
-        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
-        floatingActionButton =
-                (FloatingActionButton) view.findViewById(R.id.place_details_actionbutton);
-        floatingActionButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String phoneNumber = place.get(Place.PHONE);
-                if (phoneNumber != null) {
-                    String strippedNumber = PhoneNumberUtils.stripSeparators(phoneNumber);
-                    Intent intent =
-                            new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + strippedNumber));
-                    listener.onCallPhone(intent);
-                }
-            }
-        });
-
-        toolbar.setTitle(place.get(Place.NAME));
-        int actionButtonVisibility = place.has(Place.PHONE) ? View.VISIBLE : View.GONE;
-        floatingActionButton.setVisibility(actionButtonVisibility);
-
-        fetchPlaceInfo();
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        outState.putParcelable(EXTRA_PLACE, place);
-    }
-
-    public void onDestroyView() {
-        toolbar = null;
-        coverView = null;
-        recyclerView = null;
-        floatingActionButton = null;
-        super.onDestroyView();
-    }
-
-    private void fetchPlaceInfo() {
-        // Creates and executes a Place Info request on the Places Graph SDK
-        PlacesGraphSDKHelper.fetchPlaceInfo(place, this);
-        progressBar.setVisibility(View.VISIBLE);
-    }
-
-    private void updateList() {
-        List<PlaceFieldData> fields = new ArrayList<>();
-        for (String fieldName : PLACE_FIELDS_TO_DISPLAY_IN_RECYCLERVIEW) {
-            PlaceFieldData fieldData =
-                    PlaceFieldDataFactory.newPlaceField(getActivity(), fieldName, place);
-            if (fieldData != null) {
-                fields.add(fieldData);
-            }
-        }
-        PlaceDetailsAdapter adapter = new PlaceDetailsAdapter(this, fields);
-        recyclerView.setAdapter(adapter);
-    }
-
-    @Override
-    public void onPlaceInfoResult(final Place place, final GraphResponse response) {
-        if (isAdded()) {
-            getActivity().runOnUiThread(new Runnable() {
-                @Override
-                public void run() {
-                    progressBar.setVisibility(View.INVISIBLE);
-                    if (place == null) {
-                        // The response object contains additional information on the error.
-                        Toast.makeText(getActivity(), R.string.error, Toast.LENGTH_SHORT).show();
-                    } else {
-                        // Refresh the UI with the new place information.
-                        PlaceInfoFragment.this.place = place;
-                        updateList();
-                        downloadCoverPhoto();
-                    }
-                }
-            });
-        }
-    }
-
-    private void downloadCoverPhoto() {
-        // Downloads the place cover photo.
-        PlacesGraphSDKHelper.downloadPlaceCoverPhoto(place, PlaceInfoFragment.this);
-    }
-
-    @Override
-    public void onPlaceFieldSelected(PlaceFieldData placeFieldData) {
-        try {
-            Intent intent = placeFieldData.getActionIntent();
-            if (Intent.ACTION_CALL.equals(intent.getAction())) {
-                listener.onCallPhone(intent);
-            } else {
-                getActivity().startActivity(intent);
-            }
-        } catch (ActivityNotFoundException e) {
-            Log.e(TAG, "failed to start activity", e);
-        }
-    }
-
-    @Override
-    public void onBitmapDownloadSuccess(final String url, final Bitmap bitmap) {
-        if (isAdded()) {
-            getActivity().runOnUiThread(new Runnable() {
-                @Override
-                public void run() {
-                    coverView.setImageBitmap(bitmap);
-                }
-            });
-        }
-    }
-
-    @Override
-    public void onBitmapDownloadFailure(final String url) {
-        if (isAdded()) {
-            getActivity().runOnUiThread(new Runnable() {
-                @Override
-                public void run() {
-                    Toast.makeText(
-                            getActivity(),
-                            R.string.error,
-                            Toast.LENGTH_SHORT).show();
-                }
-            });
-        }
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java
deleted file mode 100644
index cb645a996..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java
+++ /dev/null
@@ -1,396 +0,0 @@
-/*
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.fragments;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.Rect;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.design.widget.FloatingActionButton;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentTransaction;
-import android.support.v4.view.ViewCompat;
-import android.support.v7.widget.CardView;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.view.KeyEvent;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.inputmethod.EditorInfo;
-import android.view.inputmethod.InputMethodManager;
-import android.widget.EditText;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.example.places.R;
-import com.example.places.adapters.PlaceListAdapter;
-import com.example.places.model.Place;
-import com.example.places.PlacesGraphSDKHelper;
-import com.example.places.model.PlaceTextUtils;
-import com.facebook.GraphResponse;
-import com.facebook.places.PlaceManager;
-import com.google.android.gms.maps.CameraUpdate;
-import com.google.android.gms.maps.CameraUpdateFactory;
-import com.google.android.gms.maps.GoogleMap;
-import com.google.android.gms.maps.OnMapReadyCallback;
-import com.google.android.gms.maps.SupportMapFragment;
-import com.google.android.gms.maps.model.LatLng;
-import com.google.android.gms.maps.model.LatLngBounds;
-import com.google.android.gms.maps.model.Marker;
-import com.google.android.gms.maps.model.MarkerOptions;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This fragment illustrates how to use the Places Graph SDK to:
- * <ul>
- *     <li>Search for nearby places.</li>
- *     <li>Display places on a map.</li>
- * </ul>
- */
-public class PlaceSearchFragment extends Fragment implements
-        PlacesGraphSDKHelper.PlaceSearchRequestListener,
-        PlaceListAdapter.Listener,
-        OnMapReadyCallback {
-
-    private static final int SCROLL_DIRECTION_UP = -1;
-    private static final int REQUEST_CODE_GET_CURRENT_PLACE = 1;
-
-    private Listener listener;
-    private ProgressBar progressBar;
-    private RecyclerView recyclerView;
-    private PlaceListAdapter placeListAdapter;
-    private TextView currentPlaceNameTextView;
-    private TextView currentPlaceAddressTextView;
-    private CardView searchCardView;
-    private CardView currentPlaceCardView;
-    private EditText searchEditText;
-    private FloatingActionButton actionButton;
-    private SupportMapFragment mapFragment;
-    private GoogleMap map;
-    private State state = State.LIST;
-
-    private List<Place> placesToDisplay = new ArrayList<>(0);
-
-    public enum State {
-        LIST,
-        MAP
-    };
-
-    public interface Listener {
-        void onPlaceSelected(Place place);
-        void onLocationPermissionsError();
-        boolean hasLocationPermission();
-    }
-
-    public static PlaceSearchFragment newInstance() {
-        return new PlaceSearchFragment();
-    }
-
-    public void onAttach(Context context) {
-        super.onAttach(context);
-        if (context instanceof Activity) {
-            listener = (Listener) context;
-        }
-    }
-
-    @Override
-    public void onDetach() {
-        super.onDetach();
-    }
-
-    public View onCreateView(
-            LayoutInflater inflater,
-            @Nullable ViewGroup container,
-            Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.place_search_fragment, container, false);
-    }
-
-    @Override
-    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-
-        progressBar = (ProgressBar) view.findViewById(R.id.place_search_progressbar);
-        recyclerView = (RecyclerView) view.findViewById(R.id.place_search_recyclerview);
-        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
-
-        actionButton = (FloatingActionButton) view.findViewById(R.id.place_search_toggle_button);
-        actionButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                onActionButtonClicked();
-            }
-        });
-
-        currentPlaceCardView = (CardView) view.findViewById(R.id.current_place_cardview);
-        currentPlaceCardView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                openCurrentPlaceDialog();
-            }
-        });
-
-        currentPlaceNameTextView = (TextView) view.findViewById(R.id.current_place_name);
-        currentPlaceAddressTextView = (TextView) view.findViewById(R.id.current_place_address);
-        searchCardView = (CardView) view.findViewById(R.id.place_search_cardview);
-        searchEditText = (EditText) view.findViewById(R.id.place_search_edittext);
-        searchEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
-            @Override
-            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
-                // When the search soft input key is clicked,
-                // hide soft input and search nearby places
-                if (actionId == EditorInfo.IME_ACTION_SEARCH) {
-                    InputMethodManager imm = (InputMethodManager) getActivity()
-                            .getSystemService(Context.INPUT_METHOD_SERVICE);
-                    imm.hideSoftInputFromWindow(searchEditText.getWindowToken(), 0);
-                    searchPlace(searchEditText.getText().toString());
-                }
-                return true;
-            }
-        });
-
-        RecyclerView.ItemDecoration itemDecoration = new RecyclerView.ItemDecoration() {
-            @Override
-            public void getItemOffsets(
-                    Rect outRect,
-                    View view,
-                    RecyclerView parent,
-                    RecyclerView.State state) {
-                if (parent.getChildAdapterPosition(view) == 0) {
-                    outRect.top = getResources()
-                            .getDimensionPixelOffset(R.dimen.place_search_list_header_height);
-                }
-            }
-        };
-        recyclerView.addItemDecoration(itemDecoration);
-
-        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
-                super.onScrolled(recyclerView, dx, dy);
-                float elevation;
-                if (recyclerView.canScrollVertically(SCROLL_DIRECTION_UP)) {
-                    elevation = getResources().getDimension(R.dimen.search_scrolling_elevation);
-                } else {
-                    elevation = getResources().getDimension(R.dimen.search_resting_elevation);
-                }
-                ViewCompat.setElevation(currentPlaceCardView, elevation);
-                ViewCompat.setElevation(searchCardView, elevation);
-            }
-        });
-    }
-
-    public void onDestroyView() {
-        recyclerView = null;
-        searchEditText = null;
-        searchCardView = null;
-        actionButton = null;
-        progressBar = null;
-        mapFragment = null;
-        map = null;
-        super.onDestroyView();
-    }
-
-    private void setLoading(boolean isLoading) {
-        progressBar.setVisibility(isLoading ? View.VISIBLE : View.INVISIBLE);
-    }
-
-    private void searchPlace(String searchQuery) {
-        setLoading(true);
-        PlacesGraphSDKHelper.searchPlace(searchQuery, this);
-    }
-
-    private void onActionButtonClicked() {
-        toggleMapAndList();
-        // Hide soft input
-        InputMethodManager imm = (InputMethodManager) getActivity()
-                .getSystemService(Context.INPUT_METHOD_SERVICE);
-        imm.hideSoftInputFromWindow(searchEditText.getWindowToken(), 0);
-    }
-
-    private void toggleMapAndList() {
-        state = state == State.MAP ? State.LIST : State.MAP;
-
-        if (state == State.LIST) {
-            if (mapFragment != null) {
-                FragmentTransaction ft = getChildFragmentManager().beginTransaction();
-                ft.hide(mapFragment).commit();
-            }
-            recyclerView.setVisibility(View.VISIBLE);
-            currentPlaceCardView.setVisibility(View.VISIBLE);
-        }
-        if (state == State.MAP) {
-            if (mapFragment == null) {
-                mapFragment = SupportMapFragment.newInstance();
-                FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
-                transaction.replace(R.id.place_search_map_placeholder, mapFragment);
-                transaction.commit();
-                mapFragment.getMapAsync(this);
-            } else {
-                FragmentTransaction ft = getChildFragmentManager().beginTransaction();
-                ft.show(mapFragment).commit();
-            }
-            recyclerView.setVisibility(View.INVISIBLE);
-            currentPlaceCardView.setVisibility(View.INVISIBLE);
-        }
-        displayPlaces(placesToDisplay);
-    }
-
-    private void openCurrentPlaceDialog() {
-
-        CurrentPlaceDialogFragment currentPlaceDialogFragment =
-                CurrentPlaceDialogFragment.newInstance();
-        currentPlaceDialogFragment.setTargetFragment(this, REQUEST_CODE_GET_CURRENT_PLACE);
-        currentPlaceDialogFragment.show(getActivity().getSupportFragmentManager(), "dialog");
-    }
-
-    @Override
-    public void onPlaceSearchResult(final List<Place> places, GraphResponse response) {
-        if (isAdded()) {
-            getActivity().runOnUiThread(new Runnable() {
-                @Override
-                public void run() {
-
-                    setLoading(false);
-
-                    if (places == null) {
-                        // The response object does contain more information on the error
-                        Toast.makeText(getActivity(), R.string.error, Toast.LENGTH_SHORT).show();
-                    } else {
-                        placesToDisplay = places;
-                        displayPlaces(placesToDisplay);
-                    }
-                }
-            });
-        }
-    }
-
-    @Override
-    public void onLocationError(final PlaceManager.LocationError error) {
-
-        // This event is invoked when the Places Graph SDK fails to retrieve the device location.
-
-        if (isAdded()) {
-            getActivity().runOnUiThread(new Runnable() {
-                @Override
-                public void run() {
-                    if (error == PlaceManager.LocationError.LOCATION_PERMISSION_DENIED) {
-                        // Trigger the activity to prompt the user for location permissions.
-                        listener.onLocationPermissionsError();
-                    } else if (error == PlaceManager.LocationError.LOCATION_SERVICES_DISABLED) {
-                        String message = getString(R.string.location_error_disabled);
-                        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
-                    } else {
-                        String message = getString(R.string.location_error_unknown);
-                        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
-                    }
-                }
-            });
-        }
-    }
-
-    private void displayPlaces(List<Place> places) {
-        if (state == State.LIST) {
-            placeListAdapter = new PlaceListAdapter(R.layout.place_list_item, places, this);
-            recyclerView.setAdapter(placeListAdapter);
-            placeListAdapter.notifyDataSetChanged();
-        } else if (state == State.MAP) {
-            displayPlacesOnMap(places);
-        }
-    }
-
-    private void displayPlacesOnMap(List<Place> places) {
-        if (map != null) {
-            map.clear();
-            if (!places.isEmpty()) {
-                LatLngBounds.Builder boundsBuilder = new LatLngBounds.Builder();
-                for (Place place : places) {
-                    // Creates a marker at the place location and with the place name
-                    LatLng position = place.getPosition();
-                    String placeName = place.get(Place.NAME);
-                    if (position != null) {
-                        MarkerOptions markerOptions = new MarkerOptions()
-                                .position(position)
-                                .title(placeName);
-                        Marker marker = map.addMarker(markerOptions);
-                        marker.setTag(place);
-                        boundsBuilder.include(position);
-                    }
-                }
-
-                CameraUpdate cameraUpdate =
-                        CameraUpdateFactory.newLatLngBounds(boundsBuilder.build(), 100);
-                map.moveCamera(cameraUpdate);
-            }
-        }
-    }
-
-    @Override
-    @SuppressWarnings("MissingPermission")
-    public void onMapReady(GoogleMap googleMap) {
-        map = googleMap;
-        map.getUiSettings().setMapToolbarEnabled(false);
-        if (listener.hasLocationPermission()) {
-            map.setMyLocationEnabled(true);
-            map.getUiSettings().setMyLocationButtonEnabled(false);
-        }
-        map.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {
-            @Override
-            public void onInfoWindowClick(Marker marker) {
-                if (marker.getTag() instanceof Place) {
-                    Place place = (Place) marker.getTag();
-                    listener.onPlaceSelected(place);
-                }
-            }
-        });
-        if (state == State.MAP) {
-            displayPlaces(placesToDisplay);
-        }
-    }
-
-    @Override
-    public void onPlaceSelected(Place place) {
-        listener.onPlaceSelected(place);
-    }
-
-    private void onCurrentPlaceSelected(Place place) {
-        currentPlaceNameTextView.setText(place.get(Place.NAME));
-        currentPlaceNameTextView.setVisibility(View.VISIBLE);
-        currentPlaceAddressTextView.setText(PlaceTextUtils.getAddress(place));
-        currentPlaceAddressTextView.setVisibility(View.VISIBLE);
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (requestCode == REQUEST_CODE_GET_CURRENT_PLACE) {
-            if (resultCode == Activity.RESULT_OK) {
-                Place place = (Place) data.getParcelableExtra(
-                        CurrentPlaceDialogFragment.EXTRA_CURRENT_PLACE);
-                onCurrentPlaceSelected(place);
-            }
-        }
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java b/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
deleted file mode 100644
index 05b74cec9..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.model;
-
-import android.content.Intent;
-
-public class AppLink {
-
-    private String appName;
-    private Intent intent;
-
-    public AppLink(String appName, Intent intent) {
-        this.appName = appName;
-        this.intent = intent;
-    }
-
-    public String getAppName() {
-        return appName;
-    }
-
-    public Intent getIntent() {
-        return intent;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java b/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java
deleted file mode 100644
index ad13b7a78..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java
+++ /dev/null
@@ -1,67 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.model;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class CurrentPlaceResult {
-
-    private static final String PARAM_DATA = "data";
-    private static final String PARAM_SUMMARY = "summary";
-    private static final String PARAM_TRACKING = "tracking";
-
-    private List<Place> places;
-    private String tracking;
-
-    public List<Place> getPlaces() {
-        return places;
-    }
-
-    public String getTracking() {
-        return tracking;
-    }
-
-    public static CurrentPlaceResult fromJson(JSONObject json) throws JSONException {
-
-        CurrentPlaceResult response = new CurrentPlaceResult();
-
-        if (json.has(PARAM_DATA)) {
-            JSONArray array = json.getJSONArray(PARAM_DATA);
-            int length = array.length();
-            response.places = new ArrayList<>(length);
-            for (int i=0; i<length; i++) {
-                JSONObject placeJson = array.getJSONObject(i);
-                response.places.add(new Place(placeJson));
-            }
-        }
-        if (json.has(PARAM_SUMMARY)) {
-            JSONObject summaryJson = json.getJSONObject(PARAM_SUMMARY);
-            response.tracking = summaryJson.getString(PARAM_TRACKING);
-        }
-
-        return response;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java b/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java
deleted file mode 100644
index 8b51d4dba..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.model;
-
-import android.text.TextUtils;
-import android.util.SparseArray;
-
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class OpeningHours {
-
-    public static final int MONDAY = 0;
-    public static final int TUESDAY = 1;
-    public static final int WEDNESDAY = 2;
-    public static final int THURSDAY = 3;
-    public static final int FRIDAY = 4;
-    public static final int SATURDAY = 5;
-    public static final int SUNDAY = 6;
-
-    private static final String[] DAY_PREFIX =
-            new String[] {"mon", "tue", "wed","thu", "fri", "sat","sun"};
-
-    private final SparseArray<List<String>> openingHours = new SparseArray<>();
-
-    public List<String> getHoursInterval(int day) {
-        return openingHours.get(day);
-    }
-
-    public static OpeningHours parse(Place place) {
-        JSONObject jsonHours = place.getJson(Place.HOURS);
-        if (jsonHours != null) {
-            OpeningHours instance = new OpeningHours();
-            for (int i = MONDAY; i <= SUNDAY; i++) {
-                List<String> hoursIntervals = getOpeningHoursOfADay(jsonHours, DAY_PREFIX[i]);
-                if (hoursIntervals != null) {
-                    instance.openingHours.put(i, hoursIntervals);
-                }
-            }
-            return instance;
-        }
-        return null;
-    }
-
-    private static List<String> getOpeningHoursOfADay(JSONObject jsonHours, String dayPrefix) {
-        List<String> hoursIntervals = null;
-        String open1 = jsonHours.optString(dayPrefix + "_1_open");
-        String close1 = jsonHours.optString(dayPrefix + "_1_close");
-
-        if (!TextUtils.isEmpty(open1) && !TextUtils.isEmpty(close1)) {
-            hoursIntervals = new ArrayList<>(4);
-            hoursIntervals.add(open1);
-            hoursIntervals.add(close1);
-
-            String open2 = jsonHours.optString(dayPrefix + "_2_open");
-            String close2 = jsonHours.optString(dayPrefix + "_2_close");
-
-            if (!TextUtils.isEmpty(open2) && !TextUtils.isEmpty(close2)) {
-                hoursIntervals.add(open2);
-                hoursIntervals.add(close2);
-            }
-        }
-        return hoursIntervals;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/Place.java b/samples/PlacesGraphSample/src/com/example/places/model/Place.java
deleted file mode 100644
index 2269375a1..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/model/Place.java
+++ /dev/null
@@ -1,183 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.model;
-
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Parcel;
-import android.os.Parcelable;
-import android.text.TextUtils;
-import android.util.Log;
-
-import com.facebook.places.model.CurrentPlaceRequestParams;
-import com.facebook.places.model.PlaceFields;
-import com.google.android.gms.maps.model.LatLng;
-
-import org.json.JSONArray;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class Place implements PlaceFields, Parcelable {
-
-    private static final String TAG = Place.class.getSimpleName();
-
-    private JSONObject jsonData;
-
-    public Place(JSONObject jsonData) {
-        this.jsonData = jsonData;
-    }
-
-    public JSONObject getJson() {
-        return jsonData;
-    }
-
-    public String get(String field) {
-        return jsonData.optString(field);
-    }
-
-    public JSONObject getJson(String field) {
-        return jsonData.optJSONObject(field);
-    }
-
-    public JSONArray getJsonArray(String field) {
-        return jsonData.optJSONArray(field);
-    }
-
-    public int getInt(String field) {
-        return jsonData.optInt(field);
-    }
-
-    public boolean getBoolean(String field) {
-        return jsonData.optBoolean(field);
-    }
-
-    public boolean has(String field) {
-        return jsonData.has(field);
-    }
-
-    public LatLng getPosition() {
-        JSONObject location = jsonData.optJSONObject(LOCATION);
-        if (location != null) {
-            if (location.has("latitude") && location.has("longitude")) {
-                double latitude = location.optDouble("latitude");
-                double longitude = location.optDouble("longitude");
-                return new LatLng(latitude, longitude);
-            }
-        }
-        return null;
-    }
-
-    public CurrentPlaceRequestParams.ConfidenceLevel getConfidenceLevel() {
-        if (jsonData.has(CONFIDENCE_LEVEL)) {
-            String confidenceLevel = jsonData.optString(CONFIDENCE_LEVEL);
-            if ("high".equalsIgnoreCase(confidenceLevel)) {
-                return CurrentPlaceRequestParams.ConfidenceLevel.HIGH;
-            } else if ("medium".equalsIgnoreCase(confidenceLevel)) {
-                return CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM;
-            } else if ("low".equalsIgnoreCase(confidenceLevel)) {
-                return CurrentPlaceRequestParams.ConfidenceLevel.LOW;
-            }
-        }
-        return null;
-    }
-
-    public String getCoverPhotoUrl() {
-        JSONObject coverPhotoJson = jsonData.optJSONObject("cover");
-        if (coverPhotoJson != null) {
-            return coverPhotoJson.optString("source");
-        }
-        return null;
-    }
-
-    public Intent getAppLinkIntent(String appName) {
-        List<AppLink> appLinks = getAppLinks();
-        if (appLinks != null) {
-            for (AppLink appLink : appLinks) {
-                if (appName.equals(appLink.getAppName())) {
-                    return appLink.getIntent();
-                }
-            }
-        }
-        return null;
-    }
-
-    public List<AppLink> getAppLinks() {
-        List<AppLink> appLinks = new ArrayList<>();
-        JSONObject appLinkJson = jsonData.optJSONObject(APP_LINKS);
-        if (appLinkJson != null) {
-            JSONArray appArray = appLinkJson.optJSONArray("android");
-            if (appArray != null) {
-                int length = appArray.length();
-                for (int i = 0; i < length; i++) {
-                    JSONObject linkJson = appArray.optJSONObject(i);
-                    if (linkJson != null) {
-                        String appName = linkJson.optString("app_name");
-                        Intent intent = new Intent(Intent.ACTION_VIEW);
-                        String packageName = linkJson.optString("package");
-                        String className = linkJson.optString("class");
-                        if (!TextUtils.isEmpty(packageName) && !TextUtils.isEmpty(className)) {
-                            intent.setClassName(packageName, className);
-                        }
-                        String url = linkJson.optString("url");
-                        if (url != null) {
-                            intent.setData(Uri.parse(url));
-                        }
-                        appLinks.add(new AppLink(appName, intent));
-                    }
-                }
-            }
-        }
-        return appLinks;
-    }
-
-    public OpeningHours getOpeningHours() {
-        return OpeningHours.parse(this);
-    }
-
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
-    @Override
-    public void writeToParcel(Parcel dest, int flags) {
-        dest.writeString(jsonData.toString());
-    }
-
-    public static final Parcelable.Creator<Place> CREATOR = new Parcelable.Creator<Place>() {
-
-        public Place createFromParcel(Parcel in) {
-            try {
-                String json = in.readString();
-                return new Place(new JSONObject(json));
-            } catch (Exception e) {
-                Log.e(TAG, "Failed to parse place", e);
-            }
-            return null;
-        }
-
-        public Place[] newArray(int size) {
-            return new Place[size];
-        }
-    };
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java b/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java
deleted file mode 100644
index 5442980ec..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java
+++ /dev/null
@@ -1,310 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.model;
-
-import android.content.Context;
-import android.content.res.Resources;
-import android.text.TextUtils;
-
-import com.example.places.R;
-
-import org.json.JSONArray;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class PlaceTextUtils {
-
-    private static final int[] DAY_OF_WEEK_STRINGID =  new int[]{
-            R.string.monday,
-            R.string.tuesday,
-            R.string.wednesday,
-            R.string.thursday,
-            R.string.friday,
-            R.string.saturday,
-            R.string.sunday,
-    };
-
-    public static String getFieldName(Context context, String placeField) {
-        Resources resources = context.getResources();
-        if (Place.ABOUT.equals(placeField)) {
-            return resources.getString(R.string.place_field_about);
-        } else if (Place.APP_LINKS.equals(placeField)) {
-            return resources.getString(R.string.place_field_app_link);
-        } else if (Place.CATEGORY_LIST.equals(placeField)) {
-            return resources.getString(R.string.place_field_categories);
-        } else if (Place.CHECKINS.equals(placeField)) {
-            return resources.getString(R.string.place_field_checkins);
-        } else if (Place.DESCRIPTION.equals(placeField)) {
-            return resources.getString(R.string.place_field_description);
-        } else if (Place.ENGAGEMENT.equals(placeField)) {
-            return resources.getString(R.string.place_field_engagement);
-        } else if (Place.HOURS.equals(placeField)) {
-            return resources.getString(R.string.place_field_hours);
-        } else if (Place.LOCATION.equals(placeField)) {
-            return resources.getString(R.string.place_field_address);
-        } else if (Place.LINK.equals(placeField)) {
-            return resources.getString(R.string.place_field_link);
-        } else if (Place.OVERALL_STAR_RATING.equals(placeField)) {
-            return resources.getString(R.string.place_field_rating);
-        } else if (Place.PARKING.equals(placeField)) {
-            return resources.getString(R.string.place_field_parking);
-        } else if (Place.PAYMENT_OPTIONS.equals(placeField)) {
-            return resources.getString(R.string.place_field_payment_options);
-        } else if (Place.PHONE.equals(placeField)) {
-            return resources.getString(R.string.place_field_phone);
-        } else if (Place.PRICE_RANGE.equals(placeField)) {
-            return resources.getString(R.string.place_field_price_range);
-        } else if (Place.RATING_COUNT.equals(placeField)) {
-            return resources.getString(R.string.place_field_rating_count);
-        } else if (Place.RESTAURANT_SPECIALTIES.equals(placeField)) {
-            return resources.getString(R.string.place_field_specialties);
-        } else if (Place.RESTAURANT_SERVICES.equals(placeField)) {
-            return resources.getString(R.string.place_field_services);
-        } else if (Place.WEBSITE.equals(placeField)) {
-            return resources.getString(R.string.place_field_website);
-        }
-        return null;
-    }
-
-    public static String getFieldValue(Context context, Place place, String field) {
-        Resources resources = context.getResources();
-        if (Place.CATEGORY_LIST.equals(field)) {
-            List<String> categories = getCategories(place);
-            return TextUtils.join(", ", categories);
-        } else if (Place.LOCATION.equals(field)) {
-            return getAddress(place);
-        } else if (Place.PHONE.equals(field)) {
-            return place.get(field);
-        } else if (Place.WEBSITE.equals(field)) {
-            return place.get(field);
-        } else if (Place.LINK.equals(field)) {
-            return place.get(field);
-        } else if (Place.HOURS.equals(field)) {
-            return getOpeningHours(context, place);
-        } else if (Place.DESCRIPTION.equals(field)) {
-            return place.get(field);
-        } else if (Place.ABOUT.equals(field)) {
-            return place.get(field);
-        } else if (Place.CHECKINS.equals(field)) {
-            int checkins = place.getInt(field);
-            return resources.getString(R.string.place_info_checkins, checkins);
-        } else if (Place.OVERALL_STAR_RATING.equals(field)) {
-            String rating = place.get(Place.OVERALL_STAR_RATING);
-            int ratingCount = place.getInt(Place.RATING_COUNT);
-            if (!TextUtils.isEmpty(rating) && ratingCount > 0) {
-                return resources.getString(R.string.place_info_rating, rating, ratingCount);
-            }
-        } else if (Place.ENGAGEMENT.equals(field)) {
-            JSONObject jsonObject = place.getJson(Place.ENGAGEMENT);
-            if (jsonObject != null) {
-                return jsonObject.optString("social_sentence");
-            }
-        } else if (Place.RESTAURANT_SPECIALTIES.equals(field)) {
-            List<String> specialties = getRestaurantSpecialties(context, place);
-            if (!specialties.isEmpty()) {
-                return TextUtils.join(", ", specialties);
-            }
-        } else if (Place.PRICE_RANGE.equals(field)) {
-            return place.get(Place.PRICE_RANGE);
-        } else if (Place.IS_ALWAYS_OPEN.equals(field)) {
-            boolean isAlwaysOpen = place.getBoolean(field);
-            if (isAlwaysOpen) {
-                return resources.getString(R.string.place_always_open);
-            }
-        } else if (Place.IS_PERMANENTLY_CLOSED.equals(field)) {
-            boolean isPermanentlyClosed = place.getBoolean(field);
-            if (isPermanentlyClosed) {
-                return resources.getString(R.string.place_permanently_closed);
-            }
-        } else if (Place.APP_LINKS.equals(field)) {
-           if (hasFacebookAppLink(place)) {
-                return resources.getString(R.string.place_app_link);
-            }
-        } else if (Place.PARKING.equals(field)) {
-            List<String> parking = getParking(context, place);
-            if (!parking.isEmpty()) {
-                return TextUtils.join(", ", parking);
-            }
-        } else if (Place.RESTAURANT_SERVICES.equals(field)) {
-            List<String> services = getRestaurantServices(context, place);
-            if (!services.isEmpty()) {
-                return TextUtils.join(", ", services);
-            }
-        } else if (Place.PAYMENT_OPTIONS.equals(field)) {
-            List<String> paymentOptions = getPaymentOptions(context, place);
-            if (!paymentOptions.isEmpty()) {
-                return TextUtils.join(", ", paymentOptions);
-            }
-        }
-        return null;
-    }
-
-    public static String getAddress(Place place) {
-        if (place.has(Place.SINGLE_LINE_ADDRESS)) {
-            return place.get(Place.SINGLE_LINE_ADDRESS);
-        } else if (place.has(Place.LOCATION)) {
-            JSONObject location = place.getJson(Place.LOCATION);
-            List<String> address = new ArrayList<>(5);
-            String street = location.optString("street");
-            if (!TextUtils.isEmpty(street)) {
-                address.add(street);
-            }
-            String city = location.optString("city");
-            if (!TextUtils.isEmpty(city)) {
-                address.add(city);
-            }
-            String state = location.optString("state");
-            if (!TextUtils.isEmpty(state)) {
-                address.add(state);
-            }
-            String country = location.optString("city");
-            if (!TextUtils.isEmpty(country)) {
-                address.add(country);
-            }
-            return TextUtils.join(", ", address);
-        }
-        return null;
-    }
-
-    public static List<String> getCategories(Place place) {
-        JSONObject jsonData = place.getJson();
-        List<String> categories = new ArrayList<>();
-        JSONArray jsonCategories = jsonData.optJSONArray(Place.CATEGORY_LIST);
-        if (jsonCategories != null) {
-            int length = jsonCategories.length();
-            for (int i=0; i<length; i++) {
-                JSONObject jsonCategory = jsonCategories.optJSONObject(i);
-                if (jsonCategory != null) {
-                    String category = jsonCategory.optString("name");
-                    categories.add(category);
-                }
-            }
-        }
-        return categories;
-    }
-
-    public static String getOpeningHours(Context context, Place place) {
-        OpeningHours hours = place.getOpeningHours();
-        if (hours != null) {
-            StringBuilder openingHours = new StringBuilder();
-            for (int day = OpeningHours.MONDAY; day < OpeningHours.SUNDAY; day++) {
-                String hourIntervalText = getOpeningHourText(context.getResources(), hours, day);
-                if (hourIntervalText != null) {
-                    if (openingHours.length() > 0) {
-                        openingHours.append("\n");
-                    }
-                    openingHours.append(hourIntervalText);
-                }
-            }
-            if (openingHours.length() > 0) {
-                return openingHours.toString();
-            }
-        }
-        return null;
-    }
-
-    private static String getOpeningHourText(Resources resources, OpeningHours hours, int day) {
-        List<String> hourInterval = hours.getHoursInterval(day);
-        if (hourInterval != null) {
-            StringBuilder builder = new StringBuilder();
-            if (hourInterval.size() >= 2) {
-                builder.append(hourInterval.get(0));
-                builder.append(' ');
-                builder.append(hourInterval.get(1));
-            }
-            if (hourInterval.size() == 4) {
-                builder.append(", ");
-                builder.append(hourInterval.get(2));
-                builder.append(' ');
-                builder.append(hourInterval.get(3));
-            }
-            if (hourInterval.size() > 0) {
-                builder.append(" - ");
-                builder.append(resources.getString(DAY_OF_WEEK_STRINGID[day]));
-                return builder.toString();
-            }
-        }
-        return null;
-    }
-
-    public static List<String> getPaymentOptions(Context context, Place place) {
-        return extractValidValues(
-                context,
-                place.getJson(Place.PAYMENT_OPTIONS),
-                R.array.payment_options_keys,
-                R.array.payment_options_labels);
-    }
-
-    public static List<String> getParking(Context context, Place place) {
-        return extractValidValues(
-                context,
-                place.getJson(Place.PARKING),
-                R.array.parking_keys,
-                R.array.parking_labels);
-    }
-
-    public static List<String> getRestaurantSpecialties(Context context, Place place) {
-        return extractValidValues(
-                context,
-                place.getJson(Place.RESTAURANT_SPECIALTIES),
-                R.array.restaurant_specialties_keys,
-                R.array.restaurant_specialties_labels);
-    }
-
-    public static List<String> getRestaurantServices(Context context, Place place) {
-        return extractValidValues(
-                context,
-                place.getJson(Place.RESTAURANT_SERVICES),
-                R.array.restaurant_services_keys,
-                R.array.restaurant_services_labels);
-    }
-
-    private static List<String> extractValidValues(
-            Context context,
-            JSONObject jsonObject,
-            int keysId,
-            int labelsId) {
-        List<String> labels = new ArrayList<>();
-        if (jsonObject != null) {
-            String[] keys = context.getResources().getStringArray(keysId);
-            String[] labelArray = context.getResources().getStringArray(labelsId);
-            for (int i=0; i<keys.length; i++) {
-                int value = jsonObject.optInt(keys[i]);
-                if (value == 1) {
-                    labels.add(labelArray[i]);
-                }
-            }
-        }
-        return labels;
-    }
-
-    private static boolean hasFacebookAppLink(Place place) {
-        List<AppLink> appLinks = place.getAppLinks();
-        for (AppLink appLink : appLinks) {
-            if ("Facebook".equals(appLink.getAppName())) {
-                return true;
-            }
-        }
-        return false;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java b/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java
deleted file mode 100644
index 980331846..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.utils;
-
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.util.Log;
-
-import java.io.InputStream;
-import java.lang.ref.WeakReference;
-import java.net.HttpURLConnection;
-
-/**
- * In your applications, use Fresco for image download, caching and display.
- * https://github.com/facebook/fresco
- */
-public class BitmapDownloadTask implements Runnable {
-
-    private final String url;
-    private final WeakReference<Listener> listenerWeakReference;
-
-    public interface Listener {
-        void onBitmapDownloadSuccess(String url, Bitmap bitmap);
-        void onBitmapDownloadFailure(String url);
-    }
-
-    public BitmapDownloadTask(String url, Listener listener) {
-        this.url = url;
-        listenerWeakReference = new WeakReference<>(listener);
-    }
-
-    @Override
-    public void run() {
-        try {
-            HttpURLConnection connection =
-                    (HttpURLConnection) new java.net.URL(url).openConnection();
-            connection.setDoInput(true);
-            connection.connect();
-            InputStream input = connection.getInputStream();
-            Bitmap bitmap = BitmapFactory.decodeStream(input);
-            Listener listener = listenerWeakReference.get();
-            if (listener != null) {
-                listener.onBitmapDownloadSuccess(url, bitmap);
-            }
-        } catch (Throwable t) {
-            t.printStackTrace();
-            Listener listener = listenerWeakReference.get();
-            if (listener != null) {
-                listener.onBitmapDownloadFailure(url);
-            }
-        }
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java
deleted file mode 100644
index c58d1eec0..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.utils;
-
-import android.content.Intent;
-import android.net.Uri;
-import android.telephony.PhoneNumberUtils;
-
-import com.example.places.model.Place;
-
-public class PlaceFieldData {
-
-    public enum Type {
-        TEXT,
-        LINK,
-        PHONE,
-        MAP,
-        APP_LINK,
-    }
-
-    private Place place;
-    private String field;
-    private String title;
-    private String text;
-    private Type type;
-
-    public PlaceFieldData(Place place, String field, String title, String text, Type type) {
-        this.place = place;
-        this.field = field;
-        this.title = title;
-        this.text = text;
-        this.type = type;
-    }
-
-    public String getTitle() {
-        return title;
-    }
-
-    public String getText() {
-        return text;
-    }
-
-    public void setTitle(String title) {
-        this.title = title;
-    }
-
-    public void setText(String text) {
-        this.text = text;
-    }
-
-    public boolean isClickable() {
-        return type != Type.TEXT;
-    }
-
-    public Intent getActionIntent() {
-        Intent intent = null;
-        if (type == Type.LINK) {
-            intent = new Intent(Intent.ACTION_VIEW);
-            String url = text;
-            if (!url.startsWith("http")) {
-                url = "http://" + url;
-            }
-            intent.setData(Uri.parse(url));
-        } else if (type == Type.MAP) {
-            intent = new Intent(
-                    android.content.Intent.ACTION_VIEW,
-                    Uri.parse("google.navigation:q=" + text));
-        } else if (type == Type.PHONE) {
-            String number = PhoneNumberUtils.stripSeparators(text);
-            intent = new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + number));
-        } else if (type == Type.APP_LINK) {
-            intent = place.getAppLinkIntent("Facebook");
-        }
-        return intent;
-    }
-}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java
deleted file mode 100644
index a7f36d881..000000000
--- a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.places.utils;
-
-import android.content.Context;
-
-import com.example.places.model.Place;
-import com.example.places.model.PlaceTextUtils;
-
-public class PlaceFieldDataFactory {
-
-    public static PlaceFieldData newPlaceField(
-            Context context,
-            String field,
-            Place place) {
-
-        if (!place.has(field)) {
-            return null;
-        }
-
-        String text = PlaceTextUtils.getFieldValue(context, place, field);
-
-        if (text == null) {
-            return null;
-        }
-        PlaceFieldData.Type type = getPlaceFieldType(field);
-        String title = PlaceTextUtils.getFieldName(context, field);
-
-        return new PlaceFieldData(
-                place,
-                field,
-                title,
-                text,
-                type);
-    }
-
-    private static PlaceFieldData.Type getPlaceFieldType(String field) {
-        switch (field) {
-            case Place.LOCATION:
-                return PlaceFieldData.Type.MAP;
-            case Place.APP_LINKS:
-                return PlaceFieldData.Type.APP_LINK;
-            case Place.PHONE:
-                return PlaceFieldData.Type.PHONE;
-            case Place.LINK:
-            case Place.WEBSITE:
-                return PlaceFieldData.Type.LINK;
-            default:
-                return PlaceFieldData.Type.TEXT;
-        }
-    }
-}
diff --git a/samples/RPSSample/AndroidManifest.xml b/samples/RPSSample/AndroidManifest.xml
deleted file mode 100644
index 9aa32a366..000000000
--- a/samples/RPSSample/AndroidManifest.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.rps"
-    android:versionCode="1"
-    android:versionName="1.0">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="com.android.vending.BILLING" />
-
-    <application
-        android:icon="@drawable/icon"
-        android:label="@string/app_name"
-        android:theme="@android:style/Theme.NoTitleBar">
-        <activity
-            android:name="com.example.rps.MainActivity"
-            android:label="@string/app_name"
-            android:screenOrientation="portrait"
-            android:windowSoftInputMode="adjustResize">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data
-                    android:host="fb.me"
-                    android:scheme="https" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/app_id" />
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationName"
-            android:value="@string/facebook_app_name" />
-        <meta-data android:name="com.facebook.sdk.AutoLogAppEventsEnabled"
-            android:value="true"/>
-        <provider
-            android:name="com.facebook.FacebookContentProvider"
-            android:authorities="com.facebook.app.FacebookContentProvider157578437735213"
-            android:exported="true" />
-    </application>
-</manifest>
diff --git a/samples/RPSSample/build.gradle b/samples/RPSSample/build.gradle
deleted file mode 100644
index bc8b26939..000000000
--- a/samples/RPSSample/build.gradle
+++ /dev/null
@@ -1,41 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    // Facebook Dependencies
-    implementation project(':facebook-login')
-    implementation project(':facebook-share')
-    implementation 'com.parse.bolts:bolts-android:1.4.0'
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId 'com.example.rps'
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-            aidl.srcDirs = ['src']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
\ No newline at end of file
diff --git a/samples/RPSSample/gradle/wrapper/gradle-wrapper.jar b/samples/RPSSample/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 13372aef5..000000000
Binary files a/samples/RPSSample/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
diff --git a/samples/RPSSample/gradle/wrapper/gradle-wrapper.properties b/samples/RPSSample/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
index 519effa65..000000000
--- a/samples/RPSSample/gradle/wrapper/gradle-wrapper.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-#Wed Feb 21 15:51:04 PST 2018
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
diff --git a/samples/RPSSample/post_app_objects.sh b/samples/RPSSample/post_app_objects.sh
deleted file mode 100755
index 37b56b9ea..000000000
--- a/samples/RPSSample/post_app_objects.sh
+++ /dev/null
@@ -1,155 +0,0 @@
-#!/bin/sh
-#
-# Copyright 2010-present Facebook.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-# 
-#    http://www.apache.org/licenses/LICENSE-2.0
-# 
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-# Note: Use of this script requires Perl
-
-#
-# step 1 - confirm we have an app id and app secret to work with
-#
-
-if [ -z "$APPID" ]
-then
-  echo '$APPID must be exported and set to the application id for the sample before running this script'
-  exit 1
-fi
-
-if [ -z "$APPSECRET" ]
-then
-  echo '$APPSECRET must be exported set to the app secret for the sample before running this script'
-  exit 1
-fi
-
-#
-# step 2 - stage images and capture their URIs in variables
-#
-
-echo curling...
-
-ROCK_IMAGE_URI=` \
-  curl -s -k -X POST https://graph.facebook.com/$APPID/staging_resources -F access_token="$APPID|$APPSECRET" -F 'file=@res/drawable/left_rock.png;type=image/png' \
-  | perl -ne '/"uri":"(.*)"}/ && print $1' `
-
-PAPER_IMAGE_URI=` \
-  curl -s -k -X POST https://graph.facebook.com/$APPID/staging_resources -F access_token="$APPID|$APPSECRET" -F 'file=@res/drawable/left_paper.png;type=image/png' \
-  | perl -ne '/"uri":"(.*)"}/ && print $1' `
-
-SCISSORS_IMAGE_URI=` \
-  curl -s -k -X POST https://graph.facebook.com/$APPID/staging_resources -F access_token="$APPID|$APPSECRET" -F 'file=@res/drawable/left_scissors.png;type=image/png' \
-  | perl -ne '/"uri":"(.*)"}/ && print $1' `
-
-echo "created staged resources..."
-echo "  rock=$ROCK_IMAGE_URI"
-echo "  paper=$PAPER_IMAGE_URI"
-echo "  scissors=$SCISSORS_IMAGE_URI"
-
-# step 3 - create facebook hosted applink page for the app:
-# For mobile only app, facebook provide applink host service to generate a page: https://developers.facebook.com/docs/graph-api/reference/v2.0/app/app_link_hosts
-
-echo "creating facebook host applink page for mobile-only app:"
-
-FB_APPLINK_HOST_ID=` \
-curl https://graph.facebook.com/app/app_link_hosts -F access_token="$APPID|$APPSECRET" -F pretty=true -F name="RPSSample" \
--F ios='[
-    {
-      "url" : "rps-sample-applink-example://",
-      "app_store_id" : 794163692,
-      "app_name" : "RPS Sample",
-    },
-  ]' \
--F android=' [
-    {
-      "package" : "com.example.rps",
-      "app_name" : "RPS Sample",
-    },
-  ]' \
--F web=' {
-    "should_fallback" : false,
-  }' \
-| perl -ne '/"id":\s*"(.*)"/ && print $1'`
-
-FB_APPLINK_HOST_URL=` \
-curl -X GET https://graph.facebook.com/v2.0/$FB_APPLINK_HOST_ID?access_token="$APPID|$APPSECRET" \
-| perl -ne '/"canonical_url":\s*"(.*)"/ && print $1' `
-
-echo "  applink host url id: $FB_APPLINK_HOST_ID"
-echo "  applink host url: $FB_APPLINK_HOST_URL"
-
-#
-# step 4 - create objects and capture their IDs in variables
-#
-
-# rock
-ROCK_OBJID=` \
-  curl -s -X POST -F "object={\"title\":\"Rock\",\"description\":\"Breaks scissors, alas is covered by paper.\",\"image\":\"$ROCK_IMAGE_URI\",\"url\":\"$FB_APPLINK_HOST_URL?gesture=rock\"}" "https://graph.facebook.com/$APPID/objects/fb_sample_rps:gesture?access_token=$APPID|$APPSECRET" \
-  | perl -ne '/"id":"(.*)"}/ && print $1' `
-
-# paper
-PAPER_OBJID=` \
-  curl -s -X POST -F "object={\"title\":\"Paper\",\"description\":\"Covers rock, sadly scissors cut it.\",\"image\":\"$PAPER_IMAGE_URI\",\"url\":\"$FB_APPLINK_HOST_URL?gesture=paper\"}" "https://graph.facebook.com/$APPID/objects/fb_sample_rps:gesture?access_token=$APPID|$APPSECRET" \
-  | perl -ne '/"id":"(.*)"}/ && print $1' `
-
-# scissors
-SCISSORS_OBJID=` \
-  curl -s -X POST -F "object={\"title\":\"Scissors\",\"description\":\"Cuts paper, broken by rock -- bother.\",\"image\":\"$SCISSORS_IMAGE_URI\",\"url\":\"$FB_APPLINK_HOST_URL?gesture=scissors\"}" "https://graph.facebook.com/$APPID/objects/fb_sample_rps:gesture?access_token=$APPID|$APPSECRET" \
-  | perl -ne '/"id":"(.*)"}/ && print $1' `
-
-#
-# step 5 - echo progress
-#
-
-echo "created application objects..."
-echo "  rock=$ROCK_OBJID"
-echo "  paper=$PAPER_OBJID"
-echo "  scissors=$SCISSORS_OBJID"
-
-#
-# step 6 - write .java file for common objects
-#
-
-MFILE=src/com/example/rps/CommonObjects.java
-
-cat > $MFILE << EOF
-/*
- * Copyright 2010-present Facebook.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *    http://www.apache.org/licenses/LICENSE-2.0
- 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.rps;
-
-public class CommonObjects {
-    public static final String BUILT_IN_OPEN_GRAPH_OBJECTS[] = {
-            "$ROCK_OBJID", // rock
-            "$PAPER_OBJID", // paper
-            "$SCISSORS_OBJID"  // scissors
-    };
-}
-
-EOF
-
-echo "created $MFILE ..."
-echo done.
diff --git a/samples/RPSSample/proguard-project.txt b/samples/RPSSample/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/RPSSample/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/RPSSample/res/drawable-hdpi/icon.png b/samples/RPSSample/res/drawable-hdpi/icon.png
deleted file mode 100644
index e3336f6bf..000000000
Binary files a/samples/RPSSample/res/drawable-hdpi/icon.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable-mdpi/icon.png b/samples/RPSSample/res/drawable-mdpi/icon.png
deleted file mode 100644
index f8ac7a2db..000000000
Binary files a/samples/RPSSample/res/drawable-mdpi/icon.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable-xhdpi/icon.png b/samples/RPSSample/res/drawable-xhdpi/icon.png
deleted file mode 100644
index ea8da121a..000000000
Binary files a/samples/RPSSample/res/drawable-xhdpi/icon.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/app_background.xml b/samples/RPSSample/res/drawable/app_background.xml
deleted file mode 100644
index cb65d561d..000000000
--- a/samples/RPSSample/res/drawable/app_background.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item>
-        <shape xmlns:android="http://schemas.android.com/apk/res/android"
-                android:shape="rectangle">
-            <solid android:color="#ccc" />
-        </shape>
-    </item>
-    <item android:top="390dp">
-        <shape android:shape="rectangle">
-            <solid android:color="#999" />
-        </shape>
-    </item>
-</layer-list>
diff --git a/samples/RPSSample/res/drawable/fb_logo.png b/samples/RPSSample/res/drawable/fb_logo.png
deleted file mode 100755
index 42c619123..000000000
Binary files a/samples/RPSSample/res/drawable/fb_logo.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/icon.png b/samples/RPSSample/res/drawable/icon.png
deleted file mode 100644
index f8ac7a2db..000000000
Binary files a/samples/RPSSample/res/drawable/icon.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/icon_border.xml b/samples/RPSSample/res/drawable/icon_border.xml
deleted file mode 100644
index 07c7ac547..000000000
--- a/samples/RPSSample/res/drawable/icon_border.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
-    <solid android:color="#FFF" />
-    <corners android:radius="10dp" />
-    <padding android:bottom="2dp" android:left="2dp" android:right="2dp" android:top="2dp" />
-    <stroke android:width="2px" android:color="@color/text_color" />
-</shape>
diff --git a/samples/RPSSample/res/drawable/left_paper.png b/samples/RPSSample/res/drawable/left_paper.png
deleted file mode 100755
index 813e925da..000000000
Binary files a/samples/RPSSample/res/drawable/left_paper.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/left_rock.png b/samples/RPSSample/res/drawable/left_rock.png
deleted file mode 100755
index 4226ab074..000000000
Binary files a/samples/RPSSample/res/drawable/left_rock.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/left_scissors.png b/samples/RPSSample/res/drawable/left_scissors.png
deleted file mode 100755
index 0ed1b1c16..000000000
Binary files a/samples/RPSSample/res/drawable/left_scissors.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/profile_default_icon.png b/samples/RPSSample/res/drawable/profile_default_icon.png
deleted file mode 100644
index 15864ccdb..000000000
Binary files a/samples/RPSSample/res/drawable/profile_default_icon.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/right_paper.png b/samples/RPSSample/res/drawable/right_paper.png
deleted file mode 100755
index 54431fe6a..000000000
Binary files a/samples/RPSSample/res/drawable/right_paper.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/right_rock.png b/samples/RPSSample/res/drawable/right_rock.png
deleted file mode 100755
index 51203c4bc..000000000
Binary files a/samples/RPSSample/res/drawable/right_rock.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/right_scissors.png b/samples/RPSSample/res/drawable/right_scissors.png
deleted file mode 100755
index 7c55471e6..000000000
Binary files a/samples/RPSSample/res/drawable/right_scissors.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/usersettings_facebook_logo.png b/samples/RPSSample/res/drawable/usersettings_facebook_logo.png
deleted file mode 100644
index 161bef08b..000000000
Binary files a/samples/RPSSample/res/drawable/usersettings_facebook_logo.png and /dev/null differ
diff --git a/samples/RPSSample/res/drawable/usersettings_fragment_background_gradient.xml b/samples/RPSSample/res/drawable/usersettings_fragment_background_gradient.xml
deleted file mode 100644
index 0a504ea55..000000000
--- a/samples/RPSSample/res/drawable/usersettings_fragment_background_gradient.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
-    <gradient
-      android:startColor="#5774B5"
-      android:endColor="#2C4988"
-      android:gradientRadius="495"
-      android:type="radial"/>
-</shape>    
diff --git a/samples/RPSSample/res/layout/content_fragment.xml b/samples/RPSSample/res/layout/content_fragment.xml
deleted file mode 100644
index b613cc47f..000000000
--- a/samples/RPSSample/res/layout/content_fragment.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:id="@+id/content_group"
-              android:layout_height="match_parent"
-              android:layout_width="match_parent"
-              android:background="#FFF"
-              android:orientation="vertical">
-
-    <TextView android:id="@+id/content_title"
-              android:layout_height="wrap_content"
-              android:layout_width="wrap_content"
-              android:layout_gravity="center_horizontal"
-              android:paddingTop="20dp"
-              android:textColor="@color/text_color"
-              android:textSize="@dimen/text_size"/>
-
-    <ImageView android:id="@+id/content_image"
-               android:layout_height="wrap_content"
-               android:layout_width="wrap_content"
-               android:layout_gravity="center_horizontal"
-               android:padding="20dp" />
-
-
-    <Button android:id="@+id/content_play_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="@string/play"
-            android:background="@drawable/icon_border"
-            style="@style/again_button_style" />
-</LinearLayout>
diff --git a/samples/RPSSample/res/layout/main.xml b/samples/RPSSample/res/layout/main.xml
deleted file mode 100644
index f982323d4..000000000
--- a/samples/RPSSample/res/layout/main.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:orientation="vertical"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-    <fragment android:name="com.example.rps.RpsFragment"
-              android:id="@+id/rps_fragment"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent" />
-    <fragment android:name="com.example.rps.usersettings.UserSettingsFragment"
-              android:id="@+id/settings_fragment"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent" />
-    <fragment android:name="com.example.rps.ContentFragment"
-              android:id="@+id/content_fragment"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent" />
-
-</LinearLayout>
-
diff --git a/samples/RPSSample/res/layout/rps_fragment.xml b/samples/RPSSample/res/layout/rps_fragment.xml
deleted file mode 100644
index 1e4cb0397..000000000
--- a/samples/RPSSample/res/layout/rps_fragment.xml
+++ /dev/null
@@ -1,246 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:id="@+id/game_group"
-              android:orientation="vertical"
-              android:layout_height="match_parent"
-              android:layout_width="match_parent"
-              android:background="@drawable/app_background">
-
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:orientation="vertical"
-        >
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="70dp"
-            android:layout_gravity="center_vertical"
-            android:layout_marginTop="20dp"
-            android:orientation="horizontal"
-            >
-
-            <TextView
-                android:id="@+id/text_rock"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="left"
-                android:text="@string/rock"
-                android:textColor="@color/text_color"
-                android:textSize="@dimen/text_size"
-                />
-
-            <Button
-                android:id="@+id/buy_button"
-                android:layout_width="80dp"
-                android:layout_height="55dp"
-                android:layout_gravity="center_horizontal"
-                android:layout_marginLeft="40dp"
-                android:background="@drawable/icon_border"
-                android:text="@string/buy_token"
-                android:textColor="@color/text_color"
-                android:textSize="20sp"
-                style="@style/again_button_style"
-                />
-            />
-        </LinearLayout>
-
-        <TextView
-            android:id="@+id/text_paper"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="left"
-            android:layout_marginLeft="30dp"
-            android:text="@string/paper"
-            android:textColor="@color/text_color"
-            android:textSize="@dimen/text_size" />
-
-        <TextView
-            android:id="@+id/text_scissors"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="left"
-            android:layout_marginBottom="20dp"
-            android:layout_marginLeft="60dp"
-            android:text="@string/scissors"
-            android:textColor="@color/text_color"
-            android:textSize="@dimen/text_size" />
-    </LinearLayout>
-
-    <FrameLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="@dimen/margin_left"
-            android:layout_marginRight="@dimen/margin_right"
-            android:layout_marginTop="10dp"
-            android:layout_marginBottom="10dp"
-            android:layout_gravity="center_horizontal|center_vertical">
-        <RelativeLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:id="@+id/shoot_display_group">
-            <TextView android:id="@+id/shoot"
-                      android:layout_height="wrap_content"
-                      android:layout_width="wrap_content"
-                      android:layout_gravity="left"
-                      android:textColor="@color/text_color"
-                      android:textSize="@dimen/text_size"
-                      android:text="@string/shoot"
-                      android:layout_alignParentLeft="true"
-                      android:layout_centerVertical="true" />
-            <ViewFlipper
-                    android:layout_width="@dimen/image_width"
-                    android:layout_height="@dimen/image_height"
-                    android:id="@+id/rps_flipper"
-                    android:layout_alignParentLeft="false"
-                    android:layout_alignParentRight="true"
-                    android:layout_centerVertical="true"
-                    android:layout_alignParentBottom="false"
-                    android:flipInterval="150"
-                    android:autoStart="true">
-                <ImageView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:id="@+id/flipper_view1"
-                        android:scaleType="fitCenter"
-                        android:src="@drawable/right_rock"/>
-                <ImageView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:id="@+id/flipper_view2"
-                        android:scaleType="fitCenter"
-                        android:src="@drawable/right_paper"/>
-                <ImageView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:id="@+id/flipper_view3"
-                        android:scaleType="fitCenter"
-                        android:src="@drawable/right_scissors"/>
-            </ViewFlipper>
-        </RelativeLayout>
-        <RelativeLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:id="@+id/result_display_group">
-            <ImageView
-                    android:layout_width="@dimen/image_width"
-                    android:layout_height="@dimen/image_height"
-                    android:id="@+id/player_choice"
-                    android:scaleType="fitCenter"
-                    android:layout_alignParentLeft="true"
-                    android:layout_centerVertical="true"
-                    android:src="@drawable/right_paper"/>
-            <TextView android:id="@+id/who_won"
-                      android:layout_height="wrap_content"
-                      android:layout_width="wrap_content"
-                      android:layout_gravity="left"
-                      android:textColor="@color/text_color"
-                      android:textSize="@dimen/text_size_small"
-                      android:text=""
-                      android:layout_centerHorizontal="true"
-                      android:layout_centerVertical="true" />
-            <ImageView
-                    android:layout_width="@dimen/image_width"
-                    android:layout_height="@dimen/image_height"
-                    android:id="@+id/computer_choice"
-                    android:scaleType="fitCenter"
-                    android:layout_alignParentRight="true"
-                    android:layout_centerVertical="true"
-                    android:src="@drawable/right_rock"/>
-        </RelativeLayout>
-    </FrameLayout>
-
-    <FrameLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="@dimen/margin_left"
-            android:layout_marginRight="@dimen/margin_right"
-            android:layout_marginTop="10dp"
-            android:layout_marginBottom="10dp"
-            android:layout_gravity="center_horizontal|center_vertical">
-        <RelativeLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:id="@+id/player_choice_display_group">
-            <ImageButton
-                    android:layout_width="@dimen/image_width"
-                    android:layout_height="@dimen/image_height"
-                    android:id="@+id/player_rock"
-                    android:scaleType="fitCenter"
-                    android:layout_alignParentLeft="true"
-                    android:layout_centerVertical="true"
-                    android:background="@drawable/left_rock" />
-            <ImageButton
-                    android:layout_width="@dimen/image_width"
-                    android:layout_height="@dimen/image_height"
-                    android:id="@+id/player_paper"
-                    android:scaleType="fitCenter"
-                    android:layout_centerHorizontal="true"
-                    android:layout_centerVertical="true"
-                    android:background="@drawable/left_paper" />
-            <ImageButton
-                    android:layout_width="@dimen/image_width"
-                    android:layout_height="@dimen/image_height"
-                    android:id="@+id/player_scissors"
-                    android:layout_alignParentRight="true"
-                    android:layout_centerVertical="true"
-                    android:background="@drawable/left_scissors" />
-        </RelativeLayout>
-        <Button android:id="@+id/again_button"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center"
-                android:text="@string/again"
-                android:background="@drawable/icon_border"
-                style="@style/again_button_style" />
-    </FrameLayout>
-
-    <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="@dimen/margin_left"
-            android:layout_marginRight="@dimen/margin_right"
-            android:layout_marginTop="10dp"
-            android:layout_marginBottom="10dp">
-        <TextView android:id="@+id/stats"
-                  android:layout_height="wrap_content"
-                  android:layout_width="wrap_content"
-                  android:layout_gravity="left"
-                  android:textColor="#000"
-                  android:textSize="20sp"
-                  android:layout_alignParentLeft="true"
-                  android:layout_centerVertical="true" />
-
-        <ImageButton
-                android:layout_gravity="right"
-                android:gravity="right"
-                android:layout_width="50dp"
-                android:layout_height="50dp"
-                android:layout_alignParentRight="true"
-                android:layout_centerVertical="true"
-                android:id="@+id/facebook_button"
-                android:background="@drawable/fb_logo" />
-    </RelativeLayout>
-
-</LinearLayout>
diff --git a/samples/RPSSample/res/layout/usersettings_fragment.xml b/samples/RPSSample/res/layout/usersettings_fragment.xml
deleted file mode 100644
index 3e9bd7cd4..000000000
--- a/samples/RPSSample/res/layout/usersettings_fragment.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:loginView="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@drawable/usersettings_fragment_background_gradient" >
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <ImageView
-            android:id="@+id/usersettings_fragment_logo_image"
-            android:layout_width="193dp"
-            android:layout_height="44dp"
-            android:layout_gravity="center_horizontal"
-            android:src="@drawable/usersettings_facebook_logo"
-            android:layout_marginTop="35dp"
-            android:contentDescription="@string/usersettings_fragment_logo_content_description"/>
-
-        <TextView
-            android:id="@+id/usersettings_fragment_profile_name"
-            android:layout_width="match_parent"
-            android:layout_height="100dp"
-            android:lines="1"
-            android:textSize="16sp"
-            android:textStyle="bold"
-            android:layout_marginTop="35dp"
-            android:gravity="center"/>
-    
-        <com.facebook.login.widget.LoginButton
-            android:id="@+id/usersettings_fragment_login_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:layout_marginTop="35dp"
-            android:layout_marginBottom="35dp"
-            loginView:com_facebook_login_text="@string/usersettings_fragment_log_in_button"
-            style="@style/com_facebook_loginview_silver_style" />
-    
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/RPSSample/res/values/strings.xml b/samples/RPSSample/res/values/strings.xml
deleted file mode 100644
index 57ecc3996..000000000
--- a/samples/RPSSample/res/values/strings.xml
+++ /dev/null
@@ -1,69 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="app_name">RPSSample</string>
-    <string name="facebook_app_name">Rock Paper Scissors SDK Sample</string>
-    <string name="app_id">157578437735213</string>
-    <string name="fb_login_protocol_scheme">fb157578437735213</string>
-    <string name="rock">Rock</string>
-    <string name="paper">Paper</string>
-    <string name="scissors">Scissors</string>
-    <string name="buy_token">Buy Token</string>
-    <string name="shoot">Shoot!</string>
-    <string name="win">Win!</string>
-    <string name="loss">Loss</string>
-    <string name="tie">Tie</string>
-    <string name="again">Again!</string>
-    <string name="play">Play!</string>
-    <string name="result_won">won</string>
-    <string name="result_lost">lost</string>
-    <string name="result_tied">tied</string>
-    <string name="share_on_facebook">Share on Facebook</string>
-    <string name="send_with_messenger">Send with Messenger</string>
-    <string name="check_settings">Check Facebook Settings</string>
-    <string name="friends_using_rps">Friends Rockin\' RPS</string>
-    <string name="friend_activity">Friend\'s Activity</string>
-    <string name="challenge_friends">Challenge Friends</string>
-    <string name="challenge_dialog_title">Challenge a Friend</string>
-    <string name="challenge_dialog_message">Please come play RPS with me!</string>
-    <string name="stats_format">W = %1$d  L = %2$d  T = %3$d</string>
-    <string name="action_display_format">%1$s vs %2$s</string>
-    <string name="feature_requires_login_title">Social Features Disabled</string>
-    <string name="feature_requires_login_message">
-        You have not logged in with Facebook.
-        Please use the menu and check your Facebook settings.
-    </string>
-    <string name="share_with_friends_title">Share on Facebook</string>
-    <string name="share_with_friends_message">Share game activity with friends?</string>
-    <string name="share_with_friends_yes">Yes</string>
-    <string name="share_with_friends_no">Maybe Later</string>
-    <string name="error_ok_button">OK</string>
-    <string name="native_share_error">Native sharing requires the Facebook for Android
-        application.</string>
-    <string name="appinvite_error">Cannot present App Invite Dialog.</string>
-    <string name="error_dialog_title">Error!</string>
-    <string name="login_error">An error occurred during login. Please try again.</string>
-    <string name="usersettings_fragment_log_in_button">Log in&#8230;</string>
-    <string name="usersettings_fragment_logged_in">Logged in</string>
-    <string name="usersettings_fragment_not_logged_in">Not logged in</string>
-    <string name="usersettings_fragment_logo_content_description">Facebook Logo</string>
-</resources>
diff --git a/samples/RPSSample/res/values/styles.xml b/samples/RPSSample/res/values/styles.xml
deleted file mode 100644
index 278bc4ae6..000000000
--- a/samples/RPSSample/res/values/styles.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-    <color name="facebook_blue">#3B5998</color>
-    
-    <color name="text_color">#303040</color>
-    <dimen name="text_size">50sp</dimen>
-    <dimen name="text_size_small">40sp</dimen>
-    <dimen name="margin_left">20dp</dimen>
-    <dimen name="margin_right">20dp</dimen>
-    
-    <dimen name="image_height">80dp</dimen>
-    <dimen name="image_width">80dp</dimen>
-
-    <style name="again_button_style" parent="@android:style/Widget.Button">
-        <item name="android:width">200dp</item>
-        <item name="android:height">75dp</item>
-        <item name="android:textSize">@dimen/text_size</item>
-        <item name="android:textColor">@color/text_color</item>
-        <item name="android:gravity">center</item>
-    </style>
-
-    <color name="usersettings_fragment_connected_text_color">#FFFFFF</color>
-    <color name="usersettings_fragment_connected_shadow_color">#000000</color>
-    <color name="usersettings_fragment_not_connected_text_color">#A6AED7</color>
-    <dimen name="usersettings_fragment_profile_picture_width">64dp</dimen>
-    <dimen name="usersettings_fragment_profile_picture_height">64dp</dimen>
-
-</resources>
diff --git a/samples/RPSSample/src/com/android/vending/billing/IInAppBillingService.aidl b/samples/RPSSample/src/com/android/vending/billing/IInAppBillingService.aidl
deleted file mode 100644
index 2a492f784..000000000
--- a/samples/RPSSample/src/com/android/vending/billing/IInAppBillingService.aidl
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * Copyright (C) 2012 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.vending.billing;
-
-import android.os.Bundle;
-
-/**
- * InAppBillingService is the service that provides in-app billing version 3 and beyond.
- * This service provides the following features:
- * 1. Provides a new API to get details of in-app items published for the app including
- *    price, type, title and description.
- * 2. The purchase flow is synchronous and purchase information is available immediately
- *    after it completes.
- * 3. Purchase information of in-app purchases is maintained within the Google Play system
- *    till the purchase is consumed.
- * 4. An API to consume a purchase of an inapp item. All purchases of one-time
- *    in-app items are consumable and thereafter can be purchased again.
- * 5. An API to get current purchases of the user immediately. This will not contain any
- *    consumed purchases.
- *
- * All calls will give a response code with the following possible values
- * RESULT_OK = 0 - success
- * RESULT_USER_CANCELED = 1 - user pressed back or canceled a dialog
- * RESULT_BILLING_UNAVAILABLE = 3 - this billing API version is not supported for the type requested
- * RESULT_ITEM_UNAVAILABLE = 4 - requested SKU is not available for purchase
- * RESULT_DEVELOPER_ERROR = 5 - invalid arguments provided to the API
- * RESULT_ERROR = 6 - Fatal error during the API action
- * RESULT_ITEM_ALREADY_OWNED = 7 - Failure to purchase since item is already owned
- * RESULT_ITEM_NOT_OWNED = 8 - Failure to consume since item is not owned
- */
-interface IInAppBillingService {
-    /**
-     * Checks support for the requested billing API version, package and in-app type.
-     * Minimum API version supported by this interface is 3.
-     * @param apiVersion the billing version which the app is using
-     * @param packageName the package name of the calling app
-     * @param type type of the in-app item being purchased "inapp" for one-time purchases
-     *        and "subs" for subscription.
-     * @return RESULT_OK(0) on success, corresponding result code on failures
-     */
-    int isBillingSupported(int apiVersion, String packageName, String type);
-
-    /**
-     * Provides details of a list of SKUs
-     * Given a list of SKUs of a valid type in the skusBundle, this returns a bundle
-     * with a list JSON strings containing the productId, price, title and description.
-     * This API can be called with a maximum of 20 SKUs.
-     * @param apiVersion billing API version that the Third-party is using
-     * @param packageName the package name of the calling app
-     * @param skusBundle bundle containing a StringArrayList of SKUs with key "ITEM_ID_LIST"
-     * @return Bundle containing the following key-value pairs
-     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
-     *              failure as listed above.
-     *         "DETAILS_LIST" with a StringArrayList containing purchase information
-     *              in JSON format similar to:
-     *              '{ "productId" : "exampleSku", "type" : "inapp", "price" : "$5.00",
-     *                 "title : "Example Title", "description" : "This is an example description" }'
-     */
-    Bundle getSkuDetails(int apiVersion, String packageName, String type, in Bundle skusBundle);
-
-    /**
-     * Returns a pending intent to launch the purchase flow for an in-app item by providing a SKU,
-     * the type, a unique purchase token and an optional developer payload.
-     * @param apiVersion billing API version that the app is using
-     * @param packageName package name of the calling app
-     * @param sku the SKU of the in-app item as published in the developer console
-     * @param type the type of the in-app item ("inapp" for one-time purchases
-     *        and "subs" for subscription).
-     * @param developerPayload optional argument to be sent back with the purchase information
-     * @return Bundle containing the following key-value pairs
-     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
-     *              failure as listed above.
-     *         "BUY_INTENT" - PendingIntent to start the purchase flow
-     *
-     * The Pending intent should be launched with startIntentSenderForResult. When purchase flow
-     * has completed, the onActivityResult() will give a resultCode of OK or CANCELED.
-     * If the purchase is successful, the result data will contain the following key-value pairs
-     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
-     *              failure as listed above.
-     *         "INAPP_PURCHASE_DATA" - String in JSON format similar to
-     *              '{"orderId":"12999763169054705758.1371079406387615",
-     *                "packageName":"com.example.app",
-     *                "productId":"exampleSku",
-     *                "purchaseTime":1345678900000,
-     *                "purchaseToken" : "122333444455555",
-     *                "developerPayload":"example developer payload" }'
-     *         "INAPP_DATA_SIGNATURE" - String containing the signature of the purchase data that
-     *                                  was signed with the private key of the developer
-     *                                  TODO: change this to app-specific keys.
-     */
-    Bundle getBuyIntent(int apiVersion, String packageName, String sku, String type,
-        String developerPayload);
-
-    /**
-     * Returns the current SKUs owned by the user of the type and package name specified along with
-     * purchase information and a signature of the data to be validated.
-     * This will return all SKUs that have been purchased in V3 and managed items purchased using
-     * V1 and V2 that have not been consumed.
-     * @param apiVersion billing API version that the app is using
-     * @param packageName package name of the calling app
-     * @param type the type of the in-app items being requested
-     *        ("inapp" for one-time purchases and "subs" for subscription).
-     * @param continuationToken to be set as null for the first call, if the number of owned
-     *        skus are too many, a continuationToken is returned in the response bundle.
-     *        This method can be called again with the continuation token to get the next set of
-     *        owned skus.
-     * @return Bundle containing the following key-value pairs
-     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
-     *              failure as listed above.
-     *         "INAPP_PURCHASE_ITEM_LIST" - StringArrayList containing the list of SKUs
-     *         "INAPP_PURCHASE_DATA_LIST" - StringArrayList containing the purchase information
-     *         "INAPP_DATA_SIGNATURE_LIST"- StringArrayList containing the signatures
-     *                                      of the purchase information
-     *         "INAPP_CONTINUATION_TOKEN" - String containing a continuation token for the
-     *                                      next set of in-app purchases. Only set if the
-     *                                      user has more owned skus than the current list.
-     */
-    Bundle getPurchases(int apiVersion, String packageName, String type, String continuationToken);
-
-    /**
-     * Consume the last purchase of the given SKU. This will result in this item being removed
-     * from all subsequent responses to getPurchases() and allow re-purchase of this item.
-     * @param apiVersion billing API version that the app is using
-     * @param packageName package name of the calling app
-     * @param purchaseToken token in the purchase information JSON that identifies the purchase
-     *        to be consumed
-     * @return 0 if consumption succeeded. Appropriate error values for failures.
-     */
-    int consumePurchase(int apiVersion, String packageName, String purchaseToken);
-}
diff --git a/samples/RPSSample/src/com/example/rps/CommonObjects.java b/samples/RPSSample/src/com/example/rps/CommonObjects.java
deleted file mode 100644
index d78770cd8..000000000
--- a/samples/RPSSample/src/com/example/rps/CommonObjects.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-
-package com.example.rps;
-
-public class CommonObjects {
-    public static final String BUILT_IN_OPEN_GRAPH_OBJECTS[] = {
-            "672839339475385", // rock
-            "296430467206197", // paper
-            "524651207660361"  // scissors
-    };
-}
-
diff --git a/samples/RPSSample/src/com/example/rps/ContentFragment.java b/samples/RPSSample/src/com/example/rps/ContentFragment.java
deleted file mode 100644
index 9dac9d898..000000000
--- a/samples/RPSSample/src/com/example/rps/ContentFragment.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.rps;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-public class ContentFragment extends Fragment {
-    public static final String CONTENT_INDEX_KEY = "content";
-
-    private TextView title;
-    private ImageView image;
-    private Button playButton;
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.content_fragment, container, false);
-        title = (TextView) view.findViewById(R.id.content_title);
-        image = (ImageView) view.findViewById(R.id.content_image);
-        playButton = (Button) view.findViewById(R.id.content_play_button);
-
-        playButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                MainActivity activity = (MainActivity) getActivity();
-                activity.showFragment(MainActivity.RPS, false);
-            }
-        });
-        return view;
-    }
-
-    public void setContentIndex(int index) {
-        title.setText(RpsGameUtils.STRINGS_TITLES[index]);
-        image.setImageResource(RpsGameUtils.DRAWABLES_HUMAN[index]);
-    }
-}
diff --git a/samples/RPSSample/src/com/example/rps/MainActivity.java b/samples/RPSSample/src/com/example/rps/MainActivity.java
deleted file mode 100644
index 891df2bc8..000000000
--- a/samples/RPSSample/src/com/example/rps/MainActivity.java
+++ /dev/null
@@ -1,288 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.rps;
-
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentActivity;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentTransaction;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-
-import bolts.AppLinks;
-import com.facebook.*;
-import com.facebook.AccessToken;
-import com.facebook.FacebookException;
-import com.facebook.FacebookSdk;
-import com.facebook.share.model.GameRequestContent;
-import com.facebook.share.widget.GameRequestDialog;
-
-import org.json.JSONObject;
-import org.json.JSONException;
-
-import static com.example.rps.RpsGameUtils.INVALID_CHOICE;
-
-public class MainActivity extends FragmentActivity {
-    private static final String TAG = "MainActivity";
-    private static final String INAPP_PURCHASE_DATA = "INAPP_PURCHASE_DATA";
-
-    static final int RPS = 0;
-    static final int SETTINGS = 1;
-    static final int CONTENT = 2;
-    static final int FRAGMENT_COUNT = CONTENT +1;
-
-    private Fragment[] fragments = new Fragment[FRAGMENT_COUNT];
-    private MenuItem settings;
-    private MenuItem challenge;
-    private MenuItem share;
-    private MenuItem message;
-    private boolean isResumed = false;
-    private boolean hasNativeLink = false;
-    private CallbackManager callbackManager;
-    private GameRequestDialog gameRequestDialog;
-
-    private AccessTokenTracker accessTokenTracker;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-
-        FacebookSdk.addLoggingBehavior(LoggingBehavior.APP_EVENTS);
-        FacebookSdk.setIsDebugEnabled(true);
-
-        super.onCreate(savedInstanceState);
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken,
-                                                       AccessToken currentAccessToken) {
-                if (isResumed) {
-                    if (currentAccessToken == null) {
-                        showFragment(RPS, false);
-                    }
-                }
-            }
-        };
-
-        setContentView(R.layout.main);
-
-        FragmentManager fm = getSupportFragmentManager();
-        fragments[RPS] = fm.findFragmentById(R.id.rps_fragment);
-        fragments[SETTINGS] = fm.findFragmentById(R.id.settings_fragment);
-        fragments[CONTENT] = fm.findFragmentById(R.id.content_fragment);
-
-        FragmentTransaction transaction = fm.beginTransaction();
-        for(int i = 0; i < fragments.length; i++) {
-            transaction.hide(fragments[i]);
-        }
-        transaction.commit();
-
-        hasNativeLink = handleNativeLink();
-
-        gameRequestDialog = new GameRequestDialog(this);
-        callbackManager = CallbackManager.Factory.create();
-        gameRequestDialog.registerCallback(
-                callbackManager,
-                new FacebookCallback<GameRequestDialog.Result>() {
-                    @Override
-                    public void onCancel() {
-                        Log.d(TAG, "Canceled");
-                    }
-
-                    @Override
-                    public void onError(FacebookException error) {
-                        Log.d(TAG, String.format("Error: %s", error.toString()));
-                    }
-
-                    @Override
-                    public void onSuccess(GameRequestDialog.Result result) {
-                        Log.d(TAG, "Success!");
-                        Log.d(TAG, "Request id: " + result.getRequestId());
-                        Log.d(TAG, "Recipients:");
-                        for (String recipient : result.getRequestRecipients()) {
-                            Log.d(TAG, recipient);
-                        }
-                    }
-                });
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        isResumed = true;
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        isResumed = false;
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-        super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode == RpsFragment.IN_APP_PURCHASE_RESULT) {
-            String purchaseData = data.getStringExtra(INAPP_PURCHASE_DATA);
-
-            if (resultCode == RESULT_OK) {
-                RpsFragment fragment = (RpsFragment) fragments[RPS];
-                try {
-                    JSONObject jo = new JSONObject(purchaseData);
-                    fragment.onInAppPurchaseSuccess(jo);
-                }
-                catch (JSONException e) {
-                    Log.e(TAG, "In app purchase invalid json.", e);
-                }
-            }
-        }
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        accessTokenTracker.stopTracking();
-    }
-
-    @Override
-    protected void onResumeFragments() {
-        super.onResumeFragments();
-
-        if (hasNativeLink) {
-            showFragment(CONTENT, false);
-            hasNativeLink = false;
-        } else {
-            showFragment(RPS, false);
-        }
-    }
-
-    @Override
-    public boolean onPrepareOptionsMenu(Menu menu) {
-        // only add the menu when the selection fragment is showing
-        if (fragments[RPS].isVisible()) {
-            if (menu.size() == 0) {
-                share = menu.add(R.string.share_on_facebook);
-                message = menu.add(R.string.send_with_messenger);
-                challenge = menu.add(R.string.challenge_friends);
-                settings = menu.add(R.string.check_settings);
-            }
-            return true;
-        } else {
-            menu.clear();
-            settings = null;
-        }
-        return false;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        if (item.equals(settings)) {
-            showFragment(SETTINGS, true);
-            return true;
-        } else if (item.equals(challenge)) {
-            GameRequestContent newGameRequestContent = new GameRequestContent.Builder()
-                    .setTitle(getString(R.string.challenge_dialog_title))
-                    .setMessage(getString(R.string.challenge_dialog_message))
-                    .build();
-
-            gameRequestDialog.show(this, newGameRequestContent);
-
-            return true;
-        } else if (item.equals(share)) {
-            RpsFragment fragment = (RpsFragment) fragments[RPS];
-            fragment.shareUsingNativeDialog();
-            return true;
-        } else if (item.equals(message)) {
-            RpsFragment fragment = (RpsFragment) fragments[RPS];
-            fragment.shareUsingMessengerDialog();
-            return true;
-        }
-        return false;
-    }
-
-    private boolean handleNativeLink() {
-        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken == null) {
-            AccessToken.createFromNativeLinkingIntent(getIntent(),
-                    FacebookSdk.getApplicationId(), new AccessToken.AccessTokenCreationCallback(){
-
-                        @Override
-                        public void onSuccess(AccessToken token) {
-                            AccessToken.setCurrentAccessToken(token);
-                        }
-
-                        @Override
-                        public void onError(FacebookException error) {
-
-                        }
-                    });
-        }
-        // See if we have a deep link in addition.
-        int appLinkGesture = getAppLinkGesture(getIntent());
-        if (appLinkGesture != INVALID_CHOICE) {
-            ContentFragment fragment = (ContentFragment) fragments[CONTENT];
-            fragment.setContentIndex(appLinkGesture);
-            return true;
-        }
-        return false;
-    }
-
-    private int getAppLinkGesture(Intent intent) {
-      Uri targetURI = AppLinks.getTargetUrlFromInboundIntent(this, intent);
-      if (targetURI == null) {
-        return INVALID_CHOICE;
-      }
-      String gesture = targetURI.getQueryParameter("gesture");
-      if (gesture != null) {
-          if (gesture.equalsIgnoreCase(getString(R.string.rock))) {
-              return RpsGameUtils.ROCK;
-          } else if (gesture.equalsIgnoreCase(getString(R.string.paper))) {
-              return RpsGameUtils.PAPER;
-          } else if (gesture.equalsIgnoreCase(getString(R.string.scissors))) {
-              return RpsGameUtils.SCISSORS;
-          }
-      }
-      return INVALID_CHOICE;
-    }
-
-    void showFragment(int fragmentIndex, boolean addToBackStack) {
-        FragmentManager fm = getSupportFragmentManager();
-        FragmentTransaction transaction = fm.beginTransaction();
-        if (addToBackStack) {
-            transaction.addToBackStack(null);
-        } else {
-            int backStackSize = fm.getBackStackEntryCount();
-            for (int i = 0; i < backStackSize; i++) {
-                fm.popBackStack();
-            }
-        }
-        for (int i = 0; i < fragments.length; i++) {
-            if (i == fragmentIndex) {
-                transaction.show(fragments[i]);
-            } else {
-                transaction.hide(fragments[i]);
-            }
-        }
-        transaction.commit();
-    }
-}
diff --git a/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java b/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
deleted file mode 100644
index ba30e5ce3..000000000
--- a/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
+++ /dev/null
@@ -1,30 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.rps;
-
-public class OpenGraphConsts {
-    public static final String THROW_ACTION_TYPE = "fb_sample_rps:throw";
-    public static final String THROW_ACTION_PREVIEW_PROPERTY_NAME = "fb_sample_rps:gesture";
-
-    public static final String GAME_OBJECT_TYPE = "fb_sample_rps:game";
-
-    public static final String PLAY_ACTION_TYPE = "fb_sample_rps:play";
-}
diff --git a/samples/RPSSample/src/com/example/rps/RpsFragment.java b/samples/RPSSample/src/com/example/rps/RpsFragment.java
deleted file mode 100644
index 188231ed4..000000000
--- a/samples/RPSSample/src/com/example/rps/RpsFragment.java
+++ /dev/null
@@ -1,808 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.rps;
-
-import android.app.AlertDialog;
-import android.app.PendingIntent;
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.IntentSender;
-import android.content.ServiceConnection;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.drawable.BitmapDrawable;
-import android.net.Uri;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.IBinder;
-import android.os.Message;
-import android.os.RemoteException;
-import android.support.v4.app.Fragment;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.*;
-
-import com.android.vending.billing.IInAppBillingService;
-import com.facebook.*;
-import com.facebook.AccessToken;
-import com.facebook.FacebookException;
-import com.facebook.internal.Utility;
-import com.facebook.login.DefaultAudience;
-import com.facebook.login.LoginManager;
-import com.facebook.login.LoginResult;
-import com.facebook.share.ShareApi;
-import com.facebook.share.Sharer;
-import com.facebook.share.model.ShareContent;
-import com.facebook.share.model.ShareLinkContent;
-import com.facebook.share.model.ShareOpenGraphAction;
-import com.facebook.share.model.ShareOpenGraphContent;
-import com.facebook.share.model.ShareOpenGraphObject;
-import com.facebook.share.model.SharePhoto;
-import com.facebook.share.model.AppInviteContent;
-import com.facebook.share.widget.AppInviteDialog;
-import com.facebook.share.widget.MessageDialog;
-import com.facebook.share.widget.ShareDialog;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Random;
-
-import static com.example.rps.RpsGameUtils.*;
-
-public class RpsFragment extends Fragment {
-
-    private static final String SHARE_GAME_LINK = "https://developers.facebook.com/docs/android";
-    private static final String SHARE_GAME_NAME = "Rock, Papers, Scissors Sample Application";
-    private static final String DEFAULT_GAME_OBJECT_TITLE =
-            "an awesome game of Rock, Paper, Scissors";
-    private static final String WIN_KEY = "wins";
-    private static final String LOSS_KEY = "losses";
-    private static final String TIE_KEY = "ties";
-    private static final String PLAYER_CHOICE_KEY = "player_choice";
-    private static final String COMPUTER_CHOICE_KEY = "computer_choice";
-    private static final String STATE_KEY = "state";
-    private static final String RESULT_KEY = "result";
-    private static final String PENDING_PUBLISH_KEY = "pending_publish";
-    private static final String IMPLICIT_PUBLISH_KEY = "implicitly_publish";
-    private static final String ADDITIONAL_PERMISSIONS = "publish_actions";
-    private static final int INITIAL_DELAY_MILLIS = 500;
-    private static final int DEFAULT_DELAY_MILLIS = 1000;
-    private static final String TAG = RpsFragment.class.getName();
-    private static final String TEST_SKU = "android.test.purchased";
-    // TOKEN_SKU should only be used for licensed test users to purchase in-app products set by
-    // developers. Please follow Google's guide for reference
-    // https://developer.android.com/google/play/billing/billing_testing.html#testing-purchases
-    private static final String TOKEN_SKU = "com.rpssample.token";
-    private static final String TOKEN_SUBSCRIPTION_SKU = "com.rpssample.tokensubs";
-    private static final String INAPP_PURCHASE_ITEM_LIST = "INAPP_PURCHASE_ITEM_LIST";
-    private static final String INAPP_PURCHASE_DATA_LIST = "INAPP_PURCHASE_DATA_LIST";
-    private static final String INAPP_DATA_SIGNATURE_LIST = "INAPP_DATA_SIGNATURE_LIST";
-    private static final String BUY_INTENT = "BUY_INTENT";
-    private static final String RESPONSE_CODE = "RESPONSE_CODE";
-
-    public static final int BILLING_RESPONSE_RESULT_OK = 0;
-    public static final int IN_APP_PURCHASE_RESULT = 1001;
-    public static final int IN_APP_PURCHASE_VERSION = 3;
-
-    private static String[] PHOTO_URIS = {null, null, null};
-
-    private TextView[] gestureTextViews = new TextView[3];
-    private TextView shootTextView;
-    private ImageView playerChoiceView;
-    private ImageView computerChoiceView;
-    private TextView resultTextView;
-    private ViewGroup shootGroup;
-    private ViewGroup resultGroup;
-    private ViewGroup playerChoiceGroup;
-    private Button againButton;
-    private ImageButton[] gestureImages = new ImageButton[3];
-    private ImageButton fbButton;
-    private TextView statsTextView;
-    private ViewFlipper rpsFlipper;
-    private Button buyButton;
-
-    private int wins = 0;
-    private int losses = 0;
-    private int ties = 0;
-    private int playerChoice = INVALID_CHOICE;
-    private int computerChoice = INVALID_CHOICE;
-    private RpsState currentState = RpsState.INIT;
-    private RpsResult result = RpsResult.INVALID;
-    private InitHandler handler = new InitHandler();
-    private Random random = new Random(System.currentTimeMillis());
-    private boolean pendingPublish;
-    private boolean shouldImplicitlyPublish = true;
-    private CallbackManager callbackManager;
-    private ShareDialog shareDialog;
-    private MessageDialog messageDialog;
-    private AppInviteDialog appInviteDialog;
-    private IInAppBillingService inAppBillingService;
-    private ServiceConnection serviceConnection;
-    private Context context;
-
-    private DialogInterface.OnClickListener canPublishClickListener = new DialogInterface.OnClickListener() {
-        @Override
-        public void onClick(DialogInterface dialogInterface, int i) {
-            if (AccessToken.getCurrentAccessToken() != null) {
-                // if they choose to publish, then we request for publish permissions
-                shouldImplicitlyPublish = true;
-                pendingPublish = true;
-
-                LoginManager.getInstance()
-                        .setDefaultAudience(DefaultAudience.FRIENDS)
-                        .logInWithPublishPermissions(
-                                RpsFragment.this,
-                                Arrays.asList(ADDITIONAL_PERMISSIONS));
-            }
-        }
-    };
-
-    private DialogInterface.OnClickListener dontPublishClickListener = new DialogInterface.OnClickListener() {
-        @Override
-        public void onClick(DialogInterface dialogInterface, int i) {
-            // if they choose not to publish, then we save that choice, and don't prompt them
-            // until they restart the app
-            pendingPublish = false;
-            shouldImplicitlyPublish = false;
-        }
-    };
-
-     private class InitHandler extends Handler {
-        @Override
-        public void handleMessage(Message msg) {
-            if (!isResumed()) {
-                // if we're not in between onResume and onPause, don't do animation transitions
-                return;
-            }
-            switch (msg.what) {
-                case ROCK:
-                    showViews(gestureTextViews[ROCK], gestureImages[ROCK]);
-                    sendNextMessage(PAPER);
-                    break;
-                case PAPER:
-                    showViews(gestureTextViews[PAPER], gestureImages[PAPER]);
-                    sendNextMessage(SCISSORS);
-                    break;
-                case SCISSORS:
-                    showViews(gestureTextViews[SCISSORS], gestureImages[SCISSORS]);
-                    sendNextMessage(SHOOT);
-                    break;
-                case SHOOT:
-                    showViews(shootTextView);
-                    switchState(RpsState.PLAYING, false);
-                    break;
-                default:
-                    Log.e(TAG, "Unexpected message received: " + msg.toString());
-                    break;
-            }
-        }
-
-        private void sendNextMessage(int what) {
-            Message newMsg = new Message();
-            newMsg.what = what;
-            sendMessageDelayed(newMsg, DEFAULT_DELAY_MILLIS);
-        }
-    }
-
-    private void switchState(RpsState newState, boolean isOnResume) {
-        if (!isResumed()) {
-            // if we're not in between onResume and onPause, don't transition states
-            return;
-        }
-        switch (newState) {
-            case INIT:
-                playerChoice = INVALID_CHOICE;
-                computerChoice = INVALID_CHOICE;
-                result = RpsResult.INVALID;
-                showViews(shootGroup, playerChoiceGroup, rpsFlipper);
-                rpsFlipper.startFlipping();
-                hideViews(gestureImages);
-                hideViews(gestureTextViews);
-                hideViews(resultGroup, shootTextView, againButton);
-                enableViews(false, gestureImages);
-                enableViews(false, againButton);
-                Message initMessage = new Message();
-                initMessage.what = ROCK;
-                handler.sendMessageDelayed(initMessage, INITIAL_DELAY_MILLIS);
-                break;
-            case PLAYING:
-                enableViews(true, gestureImages);
-                showViews(rpsFlipper);
-                rpsFlipper.startFlipping();
-                break;
-            case RESULT:
-                hideViews(shootGroup, playerChoiceGroup);
-                playerChoiceView.setImageResource(DRAWABLES_HUMAN[playerChoice]);
-                computerChoiceView.setImageResource(DRAWABLES_COMPUTER[computerChoice]);
-                resultTextView.setText(result.getStringId());
-                showViews(resultGroup, againButton);
-                enableViews(true, againButton);
-                if (!isOnResume) {
-                    // don't publish if we're switching states because onResumed is being called
-                    publishResult();
-                }
-                break;
-            default:
-                Log.e(TAG, "Unexpected state reached: " + newState.toString());
-                break;
-        }
-
-        String statsFormat = getResources().getString(R.string.stats_format);
-        statsTextView.setText(String.format(statsFormat, wins, losses, ties));
-
-        currentState = newState;
-    }
-
-    private void hideViews(View... views) {
-        for (View view : views) {
-            view.setVisibility(View.INVISIBLE);
-        }
-    }
-
-    private void showViews(View... views) {
-        for (View view : views) {
-            view.setVisibility(View.VISIBLE);
-        }
-    }
-
-    private void enableViews(boolean enabled, View... views) {
-        for (View view : views) {
-            view.setEnabled(enabled);
-        }
-    }
-
-    private void playerPlayed(int choice) {
-        playerChoice = choice;
-        computerChoice = getComputerChoice();
-        result = RESULTS[playerChoice][computerChoice];
-        switch (result) {
-            case WIN:
-                wins++;
-                break;
-            case LOSS:
-                losses++;
-                break;
-            case TIE:
-                ties++;
-                break;
-            default:
-                Log.e(TAG, "Unexpected result: " + result.toString());
-                break;
-        }
-        switchState(RpsState.RESULT, false);
-    }
-
-    private int getComputerChoice() {
-        return random.nextInt(3);
-    }
-
-    private boolean canPublish() {
-        final AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null) {
-            if (accessToken.getPermissions().contains(ADDITIONAL_PERMISSIONS)) {
-                // if we already have publish permissions, then go ahead and publish
-                return true;
-            } else {
-                // otherwise we ask the user if they'd like to publish to facebook
-                new AlertDialog.Builder(getActivity())
-                        .setTitle(R.string.share_with_friends_title)
-                        .setMessage(R.string.share_with_friends_message)
-                        .setPositiveButton(R.string.share_with_friends_yes, canPublishClickListener)
-                        .setNegativeButton(R.string.share_with_friends_no, dontPublishClickListener)
-                        .show();
-                return false;
-            }
-        }
-        return false;
-    }
-
-    private void showError(int messageId) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-        builder.setTitle(R.string.error_dialog_title).
-                setMessage(messageId).
-                setPositiveButton(R.string.error_ok_button, null);
-        builder.show();
-    }
-
-    private void publishResult() {
-        if (shouldImplicitlyPublish && canPublish()) {
-            String photoUri = PHOTO_URIS[playerChoice];
-            SharePhoto.Builder sharePhotoBuilder = new SharePhoto.Builder();
-            if (photoUri == null) {
-                Bitmap bitmap = BitmapFactory.decodeResource(
-                        getResources(),
-                        DRAWABLES_HUMAN[playerChoice]);
-                sharePhotoBuilder.setBitmap(bitmap);
-            } else {
-                sharePhotoBuilder.setImageUrl(Uri.parse(photoUri));
-            }
-            sharePhotoBuilder.setUserGenerated(false);
-            final SharePhoto gesturePhoto = sharePhotoBuilder.build();
-
-            ShareOpenGraphObject gameObject = createGameObject(gesturePhoto);
-            ShareOpenGraphAction playAction = createPlayActionWithGame(gameObject);
-            ShareOpenGraphContent content = new ShareOpenGraphContent.Builder()
-                    .setAction(playAction)
-                    .setPreviewPropertyName("game")
-                    .build();
-
-            ShareApi.share(content, new FacebookCallback<Sharer.Result>() {
-                @Override
-                public void onSuccess(Sharer.Result result) {
-                    Log.i(TAG, "Posted OG Action with id: " +
-                            result.getPostId());
-                }
-
-                @Override
-                public void onCancel() {
-                    // This should not happen
-                }
-
-                @Override
-                public void onError(FacebookException error) {
-                    Log.e(TAG, "Play action creation failed: " + error.getMessage());
-                }
-            });
-        }
-    }
-
-    private ShareOpenGraphObject createGameObject(final SharePhoto gesturePhoto) {
-        return new ShareOpenGraphObject.Builder()
-                .putString("og:title", DEFAULT_GAME_OBJECT_TITLE)
-                .putString("og:type", "fb_sample_rps:game")
-                .putString("fb_sample_rps:player_gesture",
-                        CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS[playerChoice])
-                .putString("fb_sample_rps:opponent_gesture",
-                        CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS[computerChoice])
-                .putString("fb_sample_rps:result", getString(result.getResultStringId()))
-                .putPhotoArrayList("og:image", new ArrayList<SharePhoto>() {{
-                    add(gesturePhoto);
-                }})
-                .build();
-    }
-
-    private ShareOpenGraphAction createPlayActionWithGame(ShareOpenGraphObject game) {
-        return new ShareOpenGraphAction.Builder()
-                .setActionType(OpenGraphConsts.PLAY_ACTION_TYPE)
-                .putObject("game", game).build();
-    }
-
-    private String getBuiltInGesture(int choice) {
-        if (choice < 0 || choice >= CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS.length) {
-            throw new IllegalArgumentException("Invalid choice");
-        }
-
-        return CommonObjects.BUILT_IN_OPEN_GRAPH_OBJECTS[choice];
-    }
-
-    private ShareOpenGraphAction getThrowAction() {
-        // The OG objects have their own bitmaps we could rely on, but in order to demonstrate
-        // attaching an in-memory bitmap (e.g., a game screencap) we'll send the bitmap explicitly
-        // ourselves.
-        ImageButton view = gestureImages[playerChoice];
-        BitmapDrawable drawable = (BitmapDrawable) view.getBackground();
-        final Bitmap bitmap = drawable.getBitmap();
-
-        return new ShareOpenGraphAction.Builder()
-                .setActionType(OpenGraphConsts.THROW_ACTION_TYPE)
-                .putString("fb_sample_rps:gesture", getBuiltInGesture(playerChoice))
-                .putString("fb_sample_rps:opposing_gesture", getBuiltInGesture(computerChoice))
-                .putPhotoArrayList("og:image", new ArrayList<SharePhoto>() {{
-                    add(new SharePhoto.Builder().setBitmap(bitmap).build());
-                }})
-                .build();
-    }
-
-    private ShareOpenGraphContent getThrowActionContent() {
-        return new ShareOpenGraphContent.Builder()
-                .setAction(getThrowAction())
-                .setPreviewPropertyName(OpenGraphConsts.THROW_ACTION_PREVIEW_PROPERTY_NAME)
-                .build();
-    }
-
-    private ShareLinkContent getLinkContent() {
-        return new ShareLinkContent.Builder()
-                .setContentTitle(SHARE_GAME_NAME)
-                .setContentUrl(Uri.parse(SHARE_GAME_LINK))
-                .build();
-    }
-
-    // Workaround to bug where sometimes response codes come as Long instead of Integer
-    private int getResponseCodeFromBundle(Bundle b) {
-        Object o = b.get(RESPONSE_CODE);
-        if (o == null) {
-            Log.e(TAG, "Bundle with null response code, assuming OK (known issue)");
-            return BILLING_RESPONSE_RESULT_OK;
-        }
-        else if (o instanceof Integer) return ((Integer) o).intValue();
-        else if (o instanceof Long) return (int) ((Long)o).longValue();
-        else {
-            Log.e(TAG, "Unexpected type for bundle response code.");
-            Log.e(TAG, o.getClass().getName());
-            throw new RuntimeException(
-                    "Unexpected type for bundle response code: " + o.getClass().getName());
-        }
-    }
-
-    private void makePurchase(boolean isSubscription) {
-        try {
-            Bundle buyIntentBundle = inAppBillingService.getBuyIntent(
-                3,
-                getActivity().getPackageName(),
-                TEST_SKU,
-                isSubscription ? "subs" : "inapp",
-                "this is a test");
-
-            int response = getResponseCodeFromBundle(buyIntentBundle);
-            if (response != BILLING_RESPONSE_RESULT_OK) {
-                Log.e(TAG, "Unable to buy item, Error response: " + response);
-                return;
-            }
-
-            PendingIntent pendingIntent = buyIntentBundle.getParcelable(BUY_INTENT);
-            getActivity().startIntentSenderForResult(
-                pendingIntent.getIntentSender(),
-                IN_APP_PURCHASE_RESULT,
-                new Intent(),
-                Integer.valueOf(0),
-                Integer.valueOf(0),
-                Integer.valueOf(0));
-        }
-        catch (IntentSender.SendIntentException e) {
-            Log.e(TAG, "In app purchase send intent exception.", e);
-        }
-        catch (RemoteException e) {
-            Log.e(TAG, "In app purchase remote exception.", e);
-        }
-    }
-
-    public void onInAppPurchaseSuccess(JSONObject jo)  {
-        String token = null;
-        try {
-            token = jo.getString("purchaseToken");
-            String packageName = jo.getString("packageName");
-            consumePurchase(token, packageName);
-        } catch (JSONException e) {
-            Log.e(TAG, "In app purchase invalid json.", e);
-        }
-    }
-
-    private void consumePurchase(String packageName, String token) {
-        try {
-            int consumeResponse = inAppBillingService.consumePurchase(
-                    IN_APP_PURCHASE_VERSION, packageName, token);
-            if (consumeResponse == 0) {
-                Log.d(TAG, "Successfully consumed package: " + packageName);
-            } else {
-                Log.d(TAG, "Faileds to consume package: " + packageName + " "
-                        + consumeResponse);
-            }
-        } catch (RemoteException e) {
-            Log.e(TAG, "Consuming purchase remote exception.", e);
-        }
-    }
-
-    public void shareUsingNativeDialog() {
-        if (playerChoice == INVALID_CHOICE || computerChoice == INVALID_CHOICE) {
-            ShareContent content = getLinkContent();
-
-            // share the app
-            if (shareDialog.canShow(content, ShareDialog.Mode.NATIVE)) {
-                shareDialog.show(content, ShareDialog.Mode.NATIVE);
-            } else {
-                showError(R.string.native_share_error);
-            }
-        } else {
-            ShareContent content = getThrowActionContent();
-
-            if (shareDialog.canShow(content, ShareDialog.Mode.NATIVE)) {
-                shareDialog.show(content, ShareDialog.Mode.NATIVE);
-            } else {
-                showError(R.string.native_share_error);
-            }
-        }
-    }
-
-    public void shareUsingMessengerDialog() {
-        if (playerChoice == INVALID_CHOICE || computerChoice == INVALID_CHOICE) {
-            ShareContent content = getLinkContent();
-
-            // share the app
-            if (messageDialog.canShow(content)) {
-                messageDialog.show(content);
-            }
-        } else {
-            ShareContent content = getThrowActionContent();
-
-            if (messageDialog.canShow(content)) {
-                messageDialog.show(content);
-            }
-        }
-    }
-
-    public void presentAppInviteDialog() {
-        AppInviteContent content = new AppInviteContent.Builder()
-                .setApplinkUrl("https://d3uu10x6fsg06w.cloudfront.net/hosting-rps/applink.html")
-                .setPreviewImageUrl("https://d3uu10x6fsg06w.cloudfront.net/hosting-rps/rps-preview-image.jpg")
-                .build();
-        if (AppInviteDialog.canShow()) {
-            appInviteDialog.show(this, content);
-        } else {
-            showError(R.string.appinvite_error);
-        }
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater,
-                             ViewGroup container,
-                             Bundle savedInstanceState) {
-        super.onCreateView(inflater, container, savedInstanceState);
-        View view = inflater.inflate(R.layout.rps_fragment, container, false);
-
-        gestureTextViews[ROCK] = (TextView) view.findViewById(R.id.text_rock);
-        gestureTextViews[PAPER] = (TextView) view.findViewById(R.id.text_paper);
-        gestureTextViews[SCISSORS] = (TextView) view.findViewById(R.id.text_scissors);
-        shootTextView = (TextView) view.findViewById(R.id.shoot);
-        playerChoiceView = (ImageView) view.findViewById(R.id.player_choice);
-        computerChoiceView = (ImageView) view.findViewById(R.id.computer_choice);
-        resultTextView = (TextView) view.findViewById(R.id.who_won);
-        shootGroup = (ViewGroup) view.findViewById(R.id.shoot_display_group);
-        resultGroup = (ViewGroup) view.findViewById(R.id.result_display_group);
-        playerChoiceGroup = (ViewGroup) view.findViewById(R.id.player_choice_display_group);
-        againButton = (Button) view.findViewById(R.id.again_button);
-        gestureImages[ROCK] = (ImageButton) view.findViewById(R.id.player_rock);
-        gestureImages[PAPER] = (ImageButton) view.findViewById(R.id.player_paper);
-        gestureImages[SCISSORS] = (ImageButton) view.findViewById(R.id.player_scissors);
-        fbButton = (ImageButton) view.findViewById(R.id.facebook_button);
-        statsTextView = (TextView) view.findViewById(R.id.stats);
-        rpsFlipper = (ViewFlipper) view.findViewById(R.id.rps_flipper);
-        buyButton = (Button) view.findViewById(R.id.buy_button);
-
-        gestureImages[ROCK].setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                playerPlayed(ROCK);
-            }
-        });
-
-        gestureImages[PAPER].setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                playerPlayed(PAPER);
-            }
-        });
-
-        gestureImages[SCISSORS].setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                playerPlayed(SCISSORS);
-            }
-        });
-
-        againButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                switchState(RpsState.INIT, false);
-            }
-        });
-
-        fbButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                getActivity().openOptionsMenu();
-            }
-        });
-
-        buyButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                makePurchase(false);
-            }
-        });
-
-        return view;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (savedInstanceState != null) {
-            wins = savedInstanceState.getInt(WIN_KEY);
-            losses = savedInstanceState.getInt(LOSS_KEY);
-            ties = savedInstanceState.getInt(TIE_KEY);
-            computerChoice = savedInstanceState.getInt(COMPUTER_CHOICE_KEY);
-            playerChoice = savedInstanceState.getInt(PLAYER_CHOICE_KEY);
-            currentState = (RpsState) savedInstanceState.getSerializable(STATE_KEY);
-            result = (RpsResult) savedInstanceState.getSerializable(RESULT_KEY);
-            pendingPublish = savedInstanceState.getBoolean(PENDING_PUBLISH_KEY);
-            shouldImplicitlyPublish = savedInstanceState.getBoolean(IMPLICIT_PUBLISH_KEY);
-        }
-        callbackManager = CallbackManager.Factory.create();
-        LoginManager.getInstance().registerCallback(
-                callbackManager,
-                new FacebookCallback<LoginResult>() {
-                    @Override
-                    public void onSuccess(LoginResult loginResult) {
-                        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-                        if (accessToken.getPermissions().contains(ADDITIONAL_PERMISSIONS)) {
-                            publishResult();
-                        } else {
-                            handleError();
-                        }
-                    }
-
-                    @Override
-                    public void onCancel() {
-                        handleError();
-                    }
-
-                    @Override
-                    public void onError(FacebookException exception) {
-                        handleError();
-                    }
-
-                    private void handleError() {
-                        // this means the user did not grant us write permissions, so
-                        // we don't do implicit publishes
-                        shouldImplicitlyPublish = false;
-                        pendingPublish = false;
-                    }
-                }
-        );
-
-        FacebookCallback<Sharer.Result> callback =
-                new FacebookCallback<Sharer.Result>() {
-                    @Override
-                    public void onCancel() {
-                        Log.d(TAG, "Canceled");
-                    }
-
-                    @Override
-                    public void onError(FacebookException error) {
-                        Log.d(TAG, String.format("Error: %s", error.toString()));
-                    }
-
-                    @Override
-                    public void onSuccess(Sharer.Result result) {
-                        Log.d(TAG, "Success!");
-                    }
-                };
-        shareDialog = new ShareDialog(this);
-        shareDialog.registerCallback(callbackManager, callback);
-        messageDialog = new MessageDialog(this);
-        messageDialog.registerCallback(callbackManager, callback);
-
-        FacebookCallback<AppInviteDialog.Result> appInviteCallback =
-                new FacebookCallback<AppInviteDialog.Result>() {
-                    @Override
-                    public void onSuccess(AppInviteDialog.Result result) {
-                        Log.d(TAG, "Success!");
-                    }
-
-                    @Override
-                    public void onCancel() {
-                        Log.d(TAG, "Canceled");
-                    }
-
-                    @Override
-                    public void onError(FacebookException error) {
-                        Log.d(TAG, String.format("Error: %s", error.toString()));
-                    }
-                };
-        appInviteDialog = new AppInviteDialog(this);
-        appInviteDialog.registerCallback(callbackManager, appInviteCallback);
-
-        // Initialize in-app billing service
-        serviceConnection = new ServiceConnection() {
-            @Override
-            public void onServiceDisconnected(ComponentName name) {
-                inAppBillingService = null;
-                Utility.logd(TAG, "In-app billing service disconnected");
-            }
-
-            @Override
-            public void onServiceConnected(
-                ComponentName name,
-                IBinder service) {
-                inAppBillingService = IInAppBillingService.Stub.asInterface(service);
-                Utility.logd(TAG, "In app billing service connected");
-                try {
-                    Bundle ownedItems = inAppBillingService.getPurchases(
-                        IN_APP_PURCHASE_VERSION,
-                        context.getPackageName(),
-                        "inapp",
-                        null);
-                    int response = ownedItems.getInt("RESPONSE_CODE");
-                    if (response == 0) {
-                        ArrayList<String> ownedSkus =
-                                ownedItems.getStringArrayList(INAPP_PURCHASE_ITEM_LIST);
-                        ArrayList<String>  purchaseDataList =
-                                ownedItems.getStringArrayList(INAPP_PURCHASE_DATA_LIST);
-                        ArrayList<String>  signatureList =
-                                ownedItems.getStringArrayList(INAPP_DATA_SIGNATURE_LIST);
-
-                        for (int i = 0; i < purchaseDataList.size(); ++i) {
-                            String purchaseData = purchaseDataList.get(i);
-
-                            try {
-                                JSONObject jo = new JSONObject(purchaseData);
-                                String token = jo.getString("purchaseToken");
-                                consumePurchase(context.getPackageName(), token);
-                            }
-                            catch (JSONException e) {
-                                Log.e(TAG, "Error parsing purchase data.", e);
-                            }
-                        }
-                    }
-                }
-                catch (RemoteException e) {
-                    Log.e(TAG, "Consuming purchase remote exception.", e);
-                }
-            }
-        };
-
-        context = this.getActivity().getApplicationContext();
-        Intent serviceIntent =
-                new Intent("com.android.vending.billing.InAppBillingService.BIND");
-        serviceIntent.setPackage("com.android.vending");
-        context.bindService(serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE);
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        switchState(currentState, true);
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle bundle) {
-        super.onSaveInstanceState(bundle);
-        bundle.putInt(WIN_KEY, wins);
-        bundle.putInt(LOSS_KEY, losses);
-        bundle.putInt(TIE_KEY, ties);
-        bundle.putInt(COMPUTER_CHOICE_KEY, computerChoice);
-        bundle.putInt(PLAYER_CHOICE_KEY, playerChoice);
-        bundle.putSerializable(STATE_KEY, currentState);
-        bundle.putSerializable(RESULT_KEY, result);
-        bundle.putBoolean(PENDING_PUBLISH_KEY, pendingPublish);
-        bundle.putBoolean(IMPLICIT_PUBLISH_KEY, shouldImplicitlyPublish);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        if (inAppBillingService != null) {
-            context.unbindService(serviceConnection);
-        }
-    }
-}
diff --git a/samples/RPSSample/src/com/example/rps/RpsGameUtils.java b/samples/RPSSample/src/com/example/rps/RpsGameUtils.java
deleted file mode 100644
index db87462a1..000000000
--- a/samples/RPSSample/src/com/example/rps/RpsGameUtils.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.rps;
-
-public class RpsGameUtils {
-    public enum RpsState {
-        INIT,
-        PLAYING,
-        RESULT
-    };
-
-    public enum RpsResult {
-        WIN(R.string.win, R.string.result_won),
-        LOSS(R.string.loss, R.string.result_lost),
-        TIE(R.string.tie, R.string.result_tied),
-        INVALID(0, 0);
-
-        private int id;
-        private int resultId;
-
-        private RpsResult(int stringId, int resultStringId) {
-            id = stringId;
-            resultId = resultStringId;
-        }
-
-        public int getStringId() {
-            return id;
-        }
-
-        public int getResultStringId() {
-            return resultId;
-        }
-    };
-
-    public static final int ROCK = 0;
-    public static final int PAPER = 1;
-    public static final int SCISSORS = 2;
-    public static final int INVALID_CHOICE = -1;
-    public static final int SHOOT = 100;
-    public static final int[] DRAWABLES_HUMAN =
-            { R.drawable.left_rock, R.drawable.left_paper, R.drawable.left_scissors };
-    public static final int[] DRAWABLES_COMPUTER =
-            { R.drawable.right_rock, R.drawable.right_paper, R.drawable.right_scissors };
-    public static final int[] STRINGS_TITLES =
-            { R.string.rock, R.string.paper, R.string.scissors };
-    public static final RpsResult[][] RESULTS =
-            {
-                    {RpsResult.TIE, RpsResult.LOSS, RpsResult.WIN},
-                    {RpsResult.WIN, RpsResult.TIE, RpsResult.LOSS},
-                    {RpsResult.LOSS, RpsResult.WIN, RpsResult.TIE}
-            };
-}
diff --git a/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java b/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
deleted file mode 100644
index 4b1bab031..000000000
--- a/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
+++ /dev/null
@@ -1,245 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.rps.usersettings;
-
-import android.content.Intent;
-import android.graphics.Bitmap;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.text.TextUtils;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenTracker;
-import com.facebook.CallbackManager;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.internal.ImageDownloader;
-import com.facebook.internal.ImageRequest;
-import com.facebook.internal.ImageResponse;
-import com.example.rps.R;
-import com.facebook.login.widget.LoginButton;
-
-import org.json.JSONObject;
-
-/**
- * A Fragment that displays a Login/Logout button as well as the user's
- * profile picture and name when logged in.
- */
-public final class UserSettingsFragment extends Fragment {
-
-    private static final String NAME = "name";
-    private static final String ID = "id";
-    private static final String PICTURE = "picture";
-    private static final String FIELDS = "fields";
-
-    private static final String REQUEST_FIELDS =
-            TextUtils.join(",", new String[] {ID, NAME, PICTURE});
-
-    private AccessTokenTracker accessTokenTracker;
-    private CallbackManager callbackManager;
-
-    private LoginButton loginButton;
-    private TextView connectedStateLabel;
-    private JSONObject user;
-    private Drawable userProfilePic;
-    private String userProfilePicID;
-
-    @Override
-    public void onActivityCreated(Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken,
-                                                       AccessToken currentAccessToken) {
-                fetchUserInfo();
-                updateUI();
-
-            }
-        };
-        callbackManager = CallbackManager.Factory.create();
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        accessTokenTracker.stopTracking();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.usersettings_fragment, container, false);
-        loginButton = (LoginButton) view.findViewById(R.id.usersettings_fragment_login_button);
-        loginButton.setFragment(this);
-
-        connectedStateLabel = (TextView) view.findViewById(R.id.usersettings_fragment_profile_name);
-
-        // if no background is set for some reason, then default to Facebook blue
-        if (view.getBackground() == null) {
-            view.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
-        } else {
-            view.getBackground().setDither(true);
-        }
-        return view;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setRetainInstance(true);
-    }
-
-    /**
-     * @throws com.facebook.FacebookException if errors occur during the loading of user information
-     */
-    @Override
-    public void onResume() {
-        super.onResume();
-        fetchUserInfo();
-        updateUI();
-    }
-
-    private void fetchUserInfo() {
-        final AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null) {
-            GraphRequest request = GraphRequest.newMeRequest(
-                    accessToken, new GraphRequest.GraphJSONObjectCallback() {
-                        @Override
-                        public void onCompleted(JSONObject me, GraphResponse response) {
-                            user = me;
-                            updateUI();
-                        }
-                    });
-            Bundle parameters = new Bundle();
-            parameters.putString(FIELDS, REQUEST_FIELDS);
-            request.setParameters(parameters);
-            GraphRequest.executeBatchAsync(request);
-        } else {
-            user = null;
-        }
-    }
-
-    private void updateUI() {
-        if (!isAdded()) {
-            return;
-        }
-        if (AccessToken.getCurrentAccessToken() != null) {
-            connectedStateLabel.setTextColor(getResources().getColor(
-                    R.color.usersettings_fragment_connected_text_color));
-            connectedStateLabel.setShadowLayer(1f, 0f, -1f,
-                    getResources().getColor(
-                            R.color.usersettings_fragment_connected_shadow_color));
-
-            if (user != null) {
-                ImageRequest request = getImageRequest();
-                if (request != null) {
-                    Uri requestUri = request.getImageUri();
-                    // Do we already have the right picture? If so, leave it alone.
-                    if (!requestUri.equals(connectedStateLabel.getTag())) {
-                        if (user.optString("id").equals(userProfilePicID)) {
-                            connectedStateLabel.setCompoundDrawables(
-                                    null, userProfilePic, null, null);
-                            connectedStateLabel.setTag(requestUri);
-                        } else {
-                            ImageDownloader.downloadAsync(request);
-                        }
-                    }
-                }
-                connectedStateLabel.setText(user.optString("name"));
-            } else {
-                connectedStateLabel.setText(getResources().getString(
-                        R.string.usersettings_fragment_logged_in));
-                Drawable noProfilePic = getResources().getDrawable(
-                        R.drawable.profile_default_icon);
-                noProfilePic.setBounds(0, 0,
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_height));
-                connectedStateLabel.setCompoundDrawables(null, noProfilePic, null, null);
-            }
-        } else {
-            int textColor = getResources().getColor(
-                    R.color.usersettings_fragment_not_connected_text_color);
-            connectedStateLabel.setTextColor(textColor);
-            connectedStateLabel.setShadowLayer(0f, 0f, 0f, textColor);
-            connectedStateLabel.setText(getResources().getString(
-                    R.string.usersettings_fragment_not_logged_in));
-            connectedStateLabel.setCompoundDrawables(null, null, null, null);
-            connectedStateLabel.setTag(null);
-        }
-    }
-
-    private ImageRequest getImageRequest() {
-        ImageRequest request = null;
-        ImageRequest.Builder requestBuilder = new ImageRequest.Builder(
-                getActivity(),
-                ImageRequest.getProfilePictureUri(
-                        user.optString("id"),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_height)));
-
-        request = requestBuilder.setCallerTag(this)
-                .setCallback(
-                        new ImageRequest.Callback() {
-                            @Override
-                            public void onCompleted(ImageResponse response) {
-                                processImageResponse(user.optString("id"), response);
-                            }
-                        })
-                .build();
-        return request;
-    }
-
-    private void processImageResponse(String id, ImageResponse response) {
-        if (response != null) {
-            Bitmap bitmap = response.getBitmap();
-            if (bitmap != null) {
-                BitmapDrawable drawable = new BitmapDrawable(
-                        UserSettingsFragment.this.getResources(), bitmap);
-                drawable.setBounds(0, 0,
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_height));
-                userProfilePic = drawable;
-                userProfilePicID = id;
-                connectedStateLabel.setCompoundDrawables(null, drawable, null, null);
-                connectedStateLabel.setTag(response.getRequest().getImageUri());
-            }
-        }
-    }
-}
diff --git a/samples/Scrumptious/AndroidManifest.xml b/samples/Scrumptious/AndroidManifest.xml
deleted file mode 100644
index 0fc0fdbfc..000000000
--- a/samples/Scrumptious/AndroidManifest.xml
+++ /dev/null
@@ -1,77 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.scrumptious"
-    android:versionCode="1"
-    android:versionName="1.0">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-    <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-
-    <uses-feature android:name="android.hardware.camera" />
-    <uses-feature android:name="android.hardware.camera.autofocus" />
-
-    <application
-        android:name="com.example.scrumptious.ScrumptiousApplication"
-        android:icon="@drawable/add_food"
-        android:label="@string/app_name">
-        <activity
-            android:name="com.example.scrumptious.MainActivity"
-            android:label="@string/app_name"
-            android:theme="@style/Theme.Scrumptious"
-            android:windowSoftInputMode="adjustResize">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.example.scrumptious.PickerActivity"
-            android:label="@string/app_name" />
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/app_id" />
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationName"
-            android:value="@string/app_name" />
-        <meta-data
-            android:name="com.facebook.sdk.WebDialogTheme"
-            android:resource="@android:style/Theme.Translucent.NoTitleBar" />
-
-        <provider
-            android:name="com.facebook.FacebookContentProvider"
-            android:authorities="com.facebook.app.FacebookContentProvider233936543368280"
-            android:exported="true" />
-    </application>
-</manifest> 
diff --git a/samples/Scrumptious/build.gradle b/samples/Scrumptious/build.gradle
deleted file mode 100644
index 976e9e6bc..000000000
--- a/samples/Scrumptious/build.gradle
+++ /dev/null
@@ -1,38 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    implementation project(':facebook-login')
-    implementation project(':facebook-share')
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId 'com.example.scrumptious'
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
diff --git a/samples/Scrumptious/proguard-project.txt b/samples/Scrumptious/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/Scrumptious/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/Scrumptious/res/drawable-hdpi/icon.png b/samples/Scrumptious/res/drawable-hdpi/icon.png
deleted file mode 100644
index d5b4ef6cb..000000000
Binary files a/samples/Scrumptious/res/drawable-hdpi/icon.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-hdpi/picker_magnifier.png b/samples/Scrumptious/res/drawable-hdpi/picker_magnifier.png
deleted file mode 100644
index 0dcd013d6..000000000
Binary files a/samples/Scrumptious/res/drawable-hdpi/picker_magnifier.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-hdpi/placeholder_image.png b/samples/Scrumptious/res/drawable-hdpi/placeholder_image.png
deleted file mode 100644
index 7dec9eaf1..000000000
Binary files a/samples/Scrumptious/res/drawable-hdpi/placeholder_image.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-mdpi/icon.png b/samples/Scrumptious/res/drawable-mdpi/icon.png
deleted file mode 100644
index 895d70f2e..000000000
Binary files a/samples/Scrumptious/res/drawable-mdpi/icon.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-mdpi/logo.png b/samples/Scrumptious/res/drawable-mdpi/logo.png
deleted file mode 100644
index a6f07865e..000000000
Binary files a/samples/Scrumptious/res/drawable-mdpi/logo.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-mdpi/picker_magnifier.png b/samples/Scrumptious/res/drawable-mdpi/picker_magnifier.png
deleted file mode 100644
index 3013a5519..000000000
Binary files a/samples/Scrumptious/res/drawable-mdpi/picker_magnifier.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-mdpi/placeholder_image.png b/samples/Scrumptious/res/drawable-mdpi/placeholder_image.png
deleted file mode 100644
index 79f4cb430..000000000
Binary files a/samples/Scrumptious/res/drawable-mdpi/placeholder_image.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-xhdpi/icon.png b/samples/Scrumptious/res/drawable-xhdpi/icon.png
deleted file mode 100644
index 7e7a5ce77..000000000
Binary files a/samples/Scrumptious/res/drawable-xhdpi/icon.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-xhdpi/logo.png b/samples/Scrumptious/res/drawable-xhdpi/logo.png
deleted file mode 100644
index aea4d819e..000000000
Binary files a/samples/Scrumptious/res/drawable-xhdpi/logo.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-xhdpi/picker_magnifier.png b/samples/Scrumptious/res/drawable-xhdpi/picker_magnifier.png
deleted file mode 100644
index a5eb056a1..000000000
Binary files a/samples/Scrumptious/res/drawable-xhdpi/picker_magnifier.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable-xhdpi/placeholder_image.png b/samples/Scrumptious/res/drawable-xhdpi/placeholder_image.png
deleted file mode 100644
index b3ce31c10..000000000
Binary files a/samples/Scrumptious/res/drawable-xhdpi/placeholder_image.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/add_food.png b/samples/Scrumptious/res/drawable/add_food.png
deleted file mode 100644
index aeb1ae315..000000000
Binary files a/samples/Scrumptious/res/drawable/add_food.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/add_friends.png b/samples/Scrumptious/res/drawable/add_friends.png
deleted file mode 100644
index b728ebfd9..000000000
Binary files a/samples/Scrumptious/res/drawable/add_friends.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/add_location.png b/samples/Scrumptious/res/drawable/add_location.png
deleted file mode 100644
index 45a30b3e5..000000000
Binary files a/samples/Scrumptious/res/drawable/add_location.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/add_photo.png b/samples/Scrumptious/res/drawable/add_photo.png
deleted file mode 100644
index f48ea0680..000000000
Binary files a/samples/Scrumptious/res/drawable/add_photo.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/button_border.xml b/samples/Scrumptious/res/drawable/button_border.xml
deleted file mode 100644
index 64ea0ceb3..000000000
--- a/samples/Scrumptious/res/drawable/button_border.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-       android:shape="rectangle">
-    <solid android:color="#FFF" />
-    <corners android:radius="10dp" />
-    <padding android:bottom="10dp" android:left="10dp" android:right="10dp" android:top="10dp" />
-    <stroke android:width="1px" android:color="#222" />
-</shape>
diff --git a/samples/Scrumptious/res/drawable/button_text_color.xml b/samples/Scrumptious/res/drawable/button_text_color.xml
deleted file mode 100644
index 84751a1ba..000000000
--- a/samples/Scrumptious/res/drawable/button_text_color.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android" >
-	<item 
-		android:state_enabled="false"
-		android:color="@color/disabled_button_color"/>
-    <item
-    	android:color="@color/scrumptious_main_orange"/>
-</selector>
diff --git a/samples/Scrumptious/res/drawable/facebook.png b/samples/Scrumptious/res/drawable/facebook.png
deleted file mode 100755
index 88c2ed6a8..000000000
Binary files a/samples/Scrumptious/res/drawable/facebook.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/icon.png b/samples/Scrumptious/res/drawable/icon.png
deleted file mode 100644
index 895d70f2e..000000000
Binary files a/samples/Scrumptious/res/drawable/icon.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_button_check.xml b/samples/Scrumptious/res/drawable/picker_button_check.xml
deleted file mode 100644
index 6f3d22950..000000000
--- a/samples/Scrumptious/res/drawable/picker_button_check.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-  <item android:state_checked="true" android:drawable="@drawable/picker_button_check_on" />
-  <item android:drawable="@drawable/picker_button_check_off" />
-</selector>
diff --git a/samples/Scrumptious/res/drawable/picker_button_check_off.png b/samples/Scrumptious/res/drawable/picker_button_check_off.png
deleted file mode 100644
index c25695d53..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_button_check_off.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_button_check_on.png b/samples/Scrumptious/res/drawable/picker_button_check_on.png
deleted file mode 100644
index d793151e6..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_button_check_on.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_item_background.xml b/samples/Scrumptious/res/drawable/picker_item_background.xml
deleted file mode 100644
index e52cd305d..000000000
--- a/samples/Scrumptious/res/drawable/picker_item_background.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <!-- Even though these two point to the same resource, have two states so the drawable will invalidate itself when coming out of pressed state. -->
-    <item android:state_focused="true"  android:state_enabled="false" android:state_pressed="true" android:drawable="@drawable/picker_list_selector_disabled" />
-    <item android:state_focused="true"  android:state_enabled="false"                              android:drawable="@drawable/picker_list_selector_disabled" />
-    <item android:state_focused="true"                                android:state_pressed="true" android:drawable="@drawable/picker_list_selector_background_transition" />
-    <item android:state_focused="false"                               android:state_pressed="true" android:drawable="@drawable/picker_list_selector_background_transition" />
-    <item android:state_focused="true"                                                             android:drawable="@drawable/picker_list_focused" />
-    <item                                                                                          android:drawable="@android:color/transparent" />
-</selector>
diff --git a/samples/Scrumptious/res/drawable/picker_list_divider.9.png b/samples/Scrumptious/res/drawable/picker_list_divider.9.png
deleted file mode 100644
index 4c0df0768..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_list_divider.9.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_list_focused.9.png b/samples/Scrumptious/res/drawable/picker_list_focused.9.png
deleted file mode 100644
index 3efadc352..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_list_focused.9.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_list_longpressed.9.png b/samples/Scrumptious/res/drawable/picker_list_longpressed.9.png
deleted file mode 100644
index 5fcd5b207..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_list_longpressed.9.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_list_pressed.9.png b/samples/Scrumptious/res/drawable/picker_list_pressed.9.png
deleted file mode 100644
index 0e557469e..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_list_pressed.9.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_list_section_header_background.9.png b/samples/Scrumptious/res/drawable/picker_list_section_header_background.9.png
deleted file mode 100644
index 0ee16ffb6..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_list_section_header_background.9.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_list_selector.xml b/samples/Scrumptious/res/drawable/picker_list_selector.xml
deleted file mode 100644
index ceb4f87de..000000000
--- a/samples/Scrumptious/res/drawable/picker_list_selector.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item android:state_window_focused="false" android:drawable="@android:color/transparent" />
-
-    <item android:state_focused="true"  android:state_enabled="false" android:state_pressed="true" android:drawable="@drawable/picker_list_selector_disabled" />
-    <item android:state_focused="true"  android:state_enabled="false"                              android:drawable="@drawable/picker_list_selector_disabled" />
-    <item android:state_focused="true"                                android:state_pressed="true" android:drawable="@drawable/picker_list_selector_background_transition" />
-    <item android:state_focused="false"                               android:state_pressed="true" android:drawable="@drawable/picker_list_selector_background_transition" />
-    <item android:state_focused="true"                                                             android:drawable="@drawable/picker_list_focused" />
-
-</selector>
diff --git a/samples/Scrumptious/res/drawable/picker_list_selector_background_transition.xml b/samples/Scrumptious/res/drawable/picker_list_selector_background_transition.xml
deleted file mode 100644
index 935189b31..000000000
--- a/samples/Scrumptious/res/drawable/picker_list_selector_background_transition.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<transition xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/picker_list_pressed"  />
-    <item android:drawable="@drawable/picker_list_longpressed"  />
-</transition>
diff --git a/samples/Scrumptious/res/drawable/picker_list_selector_disabled.9.png b/samples/Scrumptious/res/drawable/picker_list_selector_disabled.9.png
deleted file mode 100644
index 10851f6c8..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_list_selector_disabled.9.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_place_default_icon.png b/samples/Scrumptious/res/drawable/picker_place_default_icon.png
deleted file mode 100644
index 97ec3e608..000000000
Binary files a/samples/Scrumptious/res/drawable/picker_place_default_icon.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/picker_selector_top_button.xml b/samples/Scrumptious/res/drawable/picker_selector_top_button.xml
deleted file mode 100644
index 6aed2827c..000000000
--- a/samples/Scrumptious/res/drawable/picker_selector_top_button.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/picker_top_button" />
-    <item android:state_focused="true"
-          android:drawable="@drawable/picker_top_button" />
-    <item android:state_selected="true"
-          android:drawable="@drawable/picker_top_button" />
-    <item
-            android:drawable="@drawable/picker_top_background" />
-</selector>
diff --git a/samples/Scrumptious/res/drawable/picker_top_background.xml b/samples/Scrumptious/res/drawable/picker_top_background.xml
deleted file mode 100644
index 49649c05b..000000000
--- a/samples/Scrumptious/res/drawable/picker_top_background.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-  <gradient
-      android:startColor="#FF5975b0"
-      android:endColor="#FF47639e"
-      android:angle="270"/>
-</shape>
diff --git a/samples/Scrumptious/res/drawable/picker_top_button.xml b/samples/Scrumptious/res/drawable/picker_top_button.xml
deleted file mode 100644
index 098883e70..000000000
--- a/samples/Scrumptious/res/drawable/picker_top_button.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <gradient
-            android:startColor="#3f5b96"
-            android:endColor="#2d4984"
-            android:angle="270"/>
-</shape>
diff --git a/samples/Scrumptious/res/drawable/placeholder_image.png b/samples/Scrumptious/res/drawable/placeholder_image.png
deleted file mode 100644
index c8948a1ce..000000000
Binary files a/samples/Scrumptious/res/drawable/placeholder_image.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/profile_default_icon.png b/samples/Scrumptious/res/drawable/profile_default_icon.png
deleted file mode 100644
index 15864ccdb..000000000
Binary files a/samples/Scrumptious/res/drawable/profile_default_icon.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/title_bar_logo.png b/samples/Scrumptious/res/drawable/title_bar_logo.png
deleted file mode 100644
index 3fe6e8b97..000000000
Binary files a/samples/Scrumptious/res/drawable/title_bar_logo.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/usersettings_facebook_logo.png b/samples/Scrumptious/res/drawable/usersettings_facebook_logo.png
deleted file mode 100644
index 161bef08b..000000000
Binary files a/samples/Scrumptious/res/drawable/usersettings_facebook_logo.png and /dev/null differ
diff --git a/samples/Scrumptious/res/drawable/usersettings_fragment_background_gradient.xml b/samples/Scrumptious/res/drawable/usersettings_fragment_background_gradient.xml
deleted file mode 100644
index 0a504ea55..000000000
--- a/samples/Scrumptious/res/drawable/usersettings_fragment_background_gradient.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
-    <gradient
-      android:startColor="#5774B5"
-      android:endColor="#2C4988"
-      android:gradientRadius="495"
-      android:type="radial"/>
-</shape>    
diff --git a/samples/Scrumptious/res/layout-land/selection.xml b/samples/Scrumptious/res/layout-land/selection.xml
deleted file mode 100644
index 7309b4130..000000000
--- a/samples/Scrumptious/res/layout-land/selection.xml
+++ /dev/null
@@ -1,98 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <include layout="@layout/title_bar" />
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:background="#FFF"
-        android:fillViewport="true">
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-
-            <com.example.scrumptious.FullListView
-                android:id="@+id/selection_list"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_margin="20dp"
-                android:layout_weight="2"
-                android:divider="#00000000"
-                android:dividerHeight="@dimen/item_list_padding" />
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_margin="20dp"
-                android:layout_weight="1"
-                android:orientation="vertical">
-
-                <ImageView
-                    android:id="@+id/selected_image"
-                    android:layout_width="175dp"
-                    android:layout_height="175dp"
-                    android:layout_gravity="center_horizontal"
-                    android:layout_margin="5dp"
-                    android:contentDescription="@string/food_image_content_description"
-                    android:scaleType="fitCenter"
-                    android:src="@drawable/placeholder_image" />
-
-
-                <LinearLayout
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_gravity="center_horizontal"
-                    android:layout_margin="5dp"
-                    android:orientation="horizontal">
-
-                    <Button
-                        android:id="@+id/announce_text"
-                        style="@style/com_facebook_button"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_margin="5dp"
-                        android:text="@string/announce" />
-
-
-                    <com.facebook.share.widget.ShareButton
-                        android:id="@+id/share_button"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_margin="5dp" />
-
-
-                    <com.facebook.share.widget.SendButton
-                        android:id="@+id/message_button"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_margin="5dp" />
-                </LinearLayout>
-            </LinearLayout>
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
diff --git a/samples/Scrumptious/res/layout/listitem.xml b/samples/Scrumptious/res/layout/listitem.xml
deleted file mode 100644
index 9f12d7154..000000000
--- a/samples/Scrumptious/res/layout/listitem.xml
+++ /dev/null
@@ -1,53 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="fill_parent"
-              android:layout_height="wrap_content"
-              android:layout_gravity="center_horizontal"
-              android:orientation="horizontal">
-
-    <ImageView
-            android:id="@+id/icon"
-            android:layout_width="50dp"
-            android:layout_height="50dp" />
-    <LinearLayout
-            android:orientation="vertical"
-            android:layout_gravity="center_vertical"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp" >
-        <TextView
-                android:id="@+id/text1"
-                android:text="test"
-                android:textColor="#FB5820"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:textSize="16sp" />
-        <TextView
-                android:id="@+id/text2"
-                android:text="test2"
-                android:textColor="#E4C897"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:textSize="12sp" />
-    </LinearLayout>
-</LinearLayout>
diff --git a/samples/Scrumptious/res/layout/main.xml b/samples/Scrumptious/res/layout/main.xml
deleted file mode 100644
index 61fbe89dd..000000000
--- a/samples/Scrumptious/res/layout/main.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:orientation="vertical"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent">
-
-    <fragment android:name="com.example.scrumptious.SelectionFragment"
-              android:id="@+id/selectionFragment"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent" />
-    <fragment android:name="com.example.scrumptious.SplashFragment"
-              android:id="@+id/splashFragment"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent" />
-    <fragment android:name="com.example.scrumptious.usersettings.UserSettingsFragment"
-              android:id="@+id/userSettingsFragment"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent" />
-</LinearLayout>
-
diff --git a/samples/Scrumptious/res/layout/picker_activity_circle_row.xml b/samples/Scrumptious/res/layout/picker_activity_circle_row.xml
deleted file mode 100644
index ceb3d92e2..000000000
--- a/samples/Scrumptious/res/layout/picker_activity_circle_row.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_height="50dip"
-        android:layout_width="match_parent"
-        >
-    <ProgressBar android:indeterminate="true"
-                 android:layout_width="wrap_content"
-                 android:layout_height="50dip"
-                 android:id="@+id/com_facebook_picker_row_activity_circle"
-                 style="@android:style/Widget.ProgressBar.Small"
-                 android:layout_centerInParent="true"
-                 android:visibility="visible"
-                 android:indeterminateOnly="true"
-            />
-</RelativeLayout>
diff --git a/samples/Scrumptious/res/layout/picker_checkbox.xml b/samples/Scrumptious/res/layout/picker_checkbox.xml
deleted file mode 100644
index c2b2a6e5f..000000000
--- a/samples/Scrumptious/res/layout/picker_checkbox.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<CheckBox
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/com_facebook_picker_checkbox"
-    android:layout_width="23dip"
-    android:layout_height="23dip"
-    android:focusable="false"
-    android:clickable="false"
-    android:button="@drawable/picker_button_check" />
diff --git a/samples/Scrumptious/res/layout/picker_friendpickerfragment.xml b/samples/Scrumptious/res/layout/picker_friendpickerfragment.xml
deleted file mode 100644
index abdd3941c..000000000
--- a/samples/Scrumptious/res/layout/picker_friendpickerfragment.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:background="#FFFFFF">
-
-    <include layout="@layout/picker_title_bar_stub"/>
-
-    <ListView
-            android:id="@+id/com_facebook_picker_list_view"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:divider="@drawable/picker_list_divider"
-            android:fastScrollEnabled="true"
-            android:scrollbars="vertical"
-            android:listSelector="@drawable/picker_list_selector"
-            android:cacheColorHint="#FFFFFF"
-            />
-
-    <ProgressBar android:indeterminate="true"
-                 android:layout_width="wrap_content"
-                 android:layout_height="wrap_content"
-                 android:id="@+id/com_facebook_picker_activity_circle"
-                 style="@android:style/Widget.ProgressBar"
-                 android:layout_centerInParent="true"
-                 android:visibility="invisible"
-            />
-</RelativeLayout>
diff --git a/samples/Scrumptious/res/layout/picker_image.xml b/samples/Scrumptious/res/layout/picker_image.xml
deleted file mode 100644
index 9cbb41bbb..000000000
--- a/samples/Scrumptious/res/layout/picker_image.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ImageView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/com_facebook_picker_image"
-    android:layout_width="50dip"
-    android:layout_height="50dip"
-    android:layout_gravity="center_vertical"
-    android:src="@drawable/profile_default_icon" />
diff --git a/samples/Scrumptious/res/layout/picker_list_row.xml b/samples/Scrumptious/res/layout/picker_list_row.xml
deleted file mode 100644
index 4e87484b0..000000000
--- a/samples/Scrumptious/res/layout/picker_list_row.xml
+++ /dev/null
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_height="wrap_content"
-        android:layout_width="match_parent"
-        >
-    <ViewStub
-            android:id="@+id/com_facebook_picker_profile_pic_stub"
-            android:inflatedId="@+id/com_facebook_picker_image"
-            android:layout="@layout/picker_image"
-            android:layout_width="50dip"
-            android:layout_height="50dip" />
-    <TextView
-            android:id="@+id/com_facebook_picker_title"
-            android:layout_width="100dip"
-            android:layout_height="50dip"
-            android:layout_weight="1.0"
-            android:paddingLeft="5dip"
-            android:textStyle="bold"
-            android:textColor="#000000"
-            android:singleLine="true"
-            android:ellipsize="end"
-            android:textSize="18sp"
-            android:gravity="left|center_vertical"/>
-    <ViewStub
-            android:id="@+id/com_facebook_picker_checkbox_stub"
-            android:inflatedId="@+id/com_facebook_picker_checkbox"
-            android:layout="@layout/picker_checkbox"
-            android:layout_width="23dip"
-            android:layout_height="23dip"
-            android:layout_marginRight="10dip"/>
-</LinearLayout>
diff --git a/samples/Scrumptious/res/layout/picker_list_section_header.xml b/samples/Scrumptious/res/layout/picker_list_section_header.xml
deleted file mode 100644
index ea3a4bba0..000000000
--- a/samples/Scrumptious/res/layout/picker_list_section_header.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<TextView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/com_facebook_picker_list_section_header"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:textStyle="bold"
-    android:background="@drawable/picker_list_section_header_background"
-    android:orientation="horizontal"
-    android:gravity="left|center_vertical"
-    android:textColor="#68768a"
-    android:textSize="17sp"
-    android:paddingLeft="8dip"
-    android:paddingBottom="0px"
-    android:shadowDx="1"
-    android:shadowDy="1"
-    android:shadowRadius="1"
-    android:shadowColor="#BFFFFFFF" />
diff --git a/samples/Scrumptious/res/layout/picker_placepickerfragment.xml b/samples/Scrumptious/res/layout/picker_placepickerfragment.xml
deleted file mode 100644
index 12a069d6d..000000000
--- a/samples/Scrumptious/res/layout/picker_placepickerfragment.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:background="#FFFFFF"
-              android:descendantFocusability="beforeDescendants"
-              android:focusableInTouchMode="true">
-
-    <include layout="@layout/picker_title_bar_stub"/>
-
-    <ListView
-            android:id="@+id/com_facebook_picker_list_view"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_alignParentTop="true"
-            android:divider="@null"
-            android:fastScrollEnabled="true"
-            android:scrollbars="vertical"
-            android:listSelector="@drawable/picker_list_selector"
-            android:cacheColorHint="#FFFFFF"
-            />
-
-    <ProgressBar android:indeterminate="true"
-                 android:layout_width="wrap_content"
-                 android:layout_height="wrap_content"
-                 android:id="@+id/com_facebook_picker_activity_circle"
-                 style="@android:style/Widget.ProgressBar"
-                 android:layout_centerInParent="true"
-                 android:visibility="invisible"
-            />
-</RelativeLayout>
diff --git a/samples/Scrumptious/res/layout/picker_placepickerfragment_list_row.xml b/samples/Scrumptious/res/layout/picker_placepickerfragment_list_row.xml
deleted file mode 100644
index d20989c37..000000000
--- a/samples/Scrumptious/res/layout/picker_placepickerfragment_list_row.xml
+++ /dev/null
@@ -1,94 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_height="wrap_content"
-        android:layout_width="match_parent"
-        android:focusable="false">
-    <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal"
-            android:focusable="false"
-            >
-        <FrameLayout
-                android:layout_width="80dp"
-                android:layout_height="wrap_content"
-                >
-            <ViewStub
-                    android:id="@+id/com_facebook_picker_profile_pic_stub"
-                    android:inflatedId="@+id/com_facebook_picker_image"
-                    android:layout="@layout/picker_image"
-                    android:layout_gravity="left|center_vertical"
-                    android:layout_width="@dimen/picker_place_image_size"
-                    android:layout_height="@dimen/picker_place_image_size" />
-        </FrameLayout>
-        <LinearLayout
-                android:orientation="vertical"
-                android:focusable="false"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginRight="16dp"
-                android:layout_gravity="center_vertical"
-                android:layout_weight="1">
-            <TextView
-                    android:id="@+id/com_facebook_picker_title"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1.0"
-                    android:ellipsize="end"
-                    android:singleLine="true"
-                    android:typeface="sans"
-                    android:textColor="#000000"
-                    android:lines="1"
-                    android:textSize="16sp"
-                    android:gravity="left|center_vertical"/>
-            <TextView
-                    android:id="@+id/picker_subtitle"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1.0"
-                    android:ellipsize="end"
-                    android:singleLine="true"
-                    android:textColor="#666666"
-                    android:lines="1"
-                    android:typeface="sans"
-                    android:textSize="12sp"
-                    android:gravity="left|center_vertical"/>
-        </LinearLayout>
-        <!--ViewStub
-                android:id="@+id/checkbox_stub"
-                android:inflatedId="@+id/picker_checkbox"
-                android:layout="@layout/checkbox_layout"
-                android:layout_width="23dip"
-                android:layout_height="23dip"
-                android:layout_marginRight="10dip"/-->
-    </LinearLayout>
-    <View
-            android:layout_width="0dp"
-            android:layout_height="@dimen/picker_divider_width"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentRight="true"
-            android:layout_alignParentBottom="true"
-            android:background="@drawable/picker_default_separator_color"
-            />
-</RelativeLayout>
diff --git a/samples/Scrumptious/res/layout/picker_search_bar_layout.xml b/samples/Scrumptious/res/layout/picker_search_bar_layout.xml
deleted file mode 100644
index 9846507de..000000000
--- a/samples/Scrumptious/res/layout/picker_search_bar_layout.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:id="@+id/com_facebook_search_bar_view"
-        android:orientation="horizontal"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="0dp"
-        android:paddingBottom="0dp"
-        android:paddingLeft="5dp"
-        android:paddingRight="5dp"
-        android:background="@color/picker_search_bar_background"
-        >
-    <EditText
-            android:id="@+id/com_facebook_picker_search_text"
-            android:layout_width="match_parent"
-            android:layout_height="48dp"
-            android:layout_marginLeft="5dp"
-            android:singleLine="true"
-            android:layout_gravity="center"
-            android:gravity="center_vertical"
-            android:textSize="16sp"
-            android:textColor="@android:color/black"
-            android:textColorHint="@color/picker_search_bar_text"
-            android:background="@color/picker_search_bar_background"
-            android:drawableLeft="@drawable/picker_magnifier"
-            android:drawablePadding="5dp"
-            android:imeOptions="actionDone"
-            />
-</LinearLayout>
diff --git a/samples/Scrumptious/res/layout/picker_search_box.xml b/samples/Scrumptious/res/layout/picker_search_box.xml
deleted file mode 100644
index 8f21217f4..000000000
--- a/samples/Scrumptious/res/layout/picker_search_box.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="match_parent"
-              android:layout_height="wrap_content"
-              android:orientation="vertical"
-        >
-    <include layout="@layout/picker_search_bar_layout" />
-    <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/picker_divider_width"
-            android:background="@drawable/picker_default_separator_color"
-            />
-</LinearLayout>
diff --git a/samples/Scrumptious/res/layout/picker_title_bar.xml b/samples/Scrumptious/res/layout/picker_title_bar.xml
deleted file mode 100644
index fe6b9e533..000000000
--- a/samples/Scrumptious/res/layout/picker_title_bar.xml
+++ /dev/null
@@ -1,69 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/com_facebook_picker_top_bar"
-                android:layout_width="match_parent"
-                android:layout_height="48dp"
-                android:background="@drawable/picker_top_background"
-                android:gravity="right">
-    <Button
-            android:id="@+id/com_facebook_picker_done_button"
-            android:layout_width="wrap_content"
-            android:minWidth="55dp"
-            android:layout_height="48dp"
-            android:background="@drawable/picker_selector_top_button"
-            android:paddingLeft="5dip"
-            android:paddingRight="5dip"
-            android:textColor="#ffffff"
-            android:textSize="14sp"
-            android:shadowColor="#66000000"
-            android:shadowDx="1"
-            android:shadowDy="1"
-            android:shadowRadius="1"
-            android:layout_alignParentRight="true"
-            />
-    <LinearLayout
-            android:id="@+id/com_facebook_picker_divider"
-            android:layout_width="1dp"
-            android:layout_height="match_parent"
-            android:background="#40000000"
-            android:layout_alignLeft="@id/com_facebook_picker_done_button"
-            android:layout_alignStart="@id/com_facebook_picker_done_button"
-            android:orientation="horizontal"/>
-    <TextView
-            android:id="@+id/com_facebook_picker_title"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:textSize="22sp"
-            android:textColor="#FFFFFF"
-            android:gravity="left|center_vertical"
-            android:ellipsize="end"
-            android:singleLine="true"
-            android:scaleType="center"
-            android:shadowColor="#66000000"
-            android:shadowDx="1"
-            android:shadowDy="1"
-            android:shadowRadius="1"
-            android:layout_marginLeft="10dip"
-            android:layout_marginRight="10dip"
-            android:layout_toLeftOf="@id/com_facebook_picker_divider"/>
-</RelativeLayout>
diff --git a/samples/Scrumptious/res/layout/picker_title_bar_stub.xml b/samples/Scrumptious/res/layout/picker_title_bar_stub.xml
deleted file mode 100644
index 76fbf9b41..000000000
--- a/samples/Scrumptious/res/layout/picker_title_bar_stub.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android">
-    <ViewStub android:id="@+id/com_facebook_picker_title_bar_stub"
-              android:inflatedId="@+id/com_facebook_picker_title_bar"
-              android:layout="@layout/picker_title_bar"
-              android:layout_height="48dip"
-              android:layout_width="match_parent"/>
-
-</merge>
diff --git a/samples/Scrumptious/res/layout/pickers.xml b/samples/Scrumptious/res/layout/pickers.xml
deleted file mode 100644
index fc6f506b2..000000000
--- a/samples/Scrumptious/res/layout/pickers.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_width="fill_parent"
-              android:layout_height="fill_parent"
-        >
-    <FrameLayout
-            android:id="@+id/picker_fragment"
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent"
-            />
-</LinearLayout>
diff --git a/samples/Scrumptious/res/layout/selection.xml b/samples/Scrumptious/res/layout/selection.xml
deleted file mode 100644
index ed5b2606b..000000000
--- a/samples/Scrumptious/res/layout/selection.xml
+++ /dev/null
@@ -1,93 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <include layout="@layout/title_bar"/>
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:background="#FFF"
-        android:fillViewport="true">
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <com.example.scrumptious.FullListView
-                android:id="@+id/selection_list"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_margin="20dp"
-                android:divider="#00000000"
-                android:dividerHeight="@dimen/item_list_padding" />
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <ImageView
-                android:id="@+id/selected_image"
-                android:src="@drawable/placeholder_image"
-                android:layout_width="fill_parent"
-                android:layout_height="200dp"
-                android:layout_marginLeft="10dp"
-                android:layout_marginRight="10dp"
-                android:layout_weight="1"
-                android:scaleType="fitCenter"
-                android:contentDescription="@string/food_image_content_description"/>
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical"
-                android:gravity="end"
-                android:layout_weight="2">
-                <Button
-                    android:id="@+id/announce_text"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_gravity="center"
-                    android:layout_margin="5dp"
-                    android:text="@string/announce"
-                    style="@style/com_facebook_button"/>
-                <com.facebook.share.widget.ShareButton
-                    android:id="@+id/share_button"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_margin="5dp"
-                    android:layout_gravity="center"/>
-                <com.facebook.share.widget.SendButton
-                    android:id="@+id/message_button"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_gravity="center"
-                    android:layout_margin="5dp"/>
-                </LinearLayout>
-        </LinearLayout>
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
-
-
diff --git a/samples/Scrumptious/res/layout/splash.xml b/samples/Scrumptious/res/layout/splash.xml
deleted file mode 100644
index 058c7a97e..000000000
--- a/samples/Scrumptious/res/layout/splash.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fillViewport="true"
-    android:background="#FB5820" >
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical">
-
-    	<ImageView 
-    		android:layout_width="match_parent"
-    		android:layout_height="0dp"
-    		android:layout_weight="1"
-    		android:layout_gravity="center"
-    		android:padding="50dp"
-    		android:src="@drawable/logo"/>
-
-        <com.facebook.login.widget.LoginButton
-            android:id="@+id/login_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:layout_marginTop="30dp"
-            android:layout_marginBottom="30dp" />
-
-        <TextView
-            android:id="@+id/skip_login_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="@string/skip_login"
-            android:textSize="12sp"
-            android:textColor="#EAFEA7"
-            android:paddingLeft="20dp"
-            android:paddingRight="20dp"
-            android:layout_marginBottom="30dp" />
-
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/Scrumptious/res/layout/title_bar.xml b/samples/Scrumptious/res/layout/title_bar.xml
deleted file mode 100644
index e7ef3699d..000000000
--- a/samples/Scrumptious/res/layout/title_bar.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:facebook="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="60dp"
-    android:background="@color/scrumptious_main_orange">
-
-    <ImageView
-        android:id="@+id/image_title"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerInParent="true"
-        android:layout_margin="16dp"
-        android:scaleType="fitCenter"
-        android:src="@drawable/title_bar_logo"
-        android:contentDescription="@string/logo_content_description"/>
-
-    <com.facebook.login.widget.ProfilePictureView
-        android:id="@+id/selection_profile_pic"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentRight="true"
-        android:layout_alignParentEnd="true"
-        android:layout_centerVertical="true"
-        android:layout_margin="10dp"
-        android:gravity="end|center_vertical"
-        facebook:com_facebook_preset_size="small" />
-
-</RelativeLayout>
diff --git a/samples/Scrumptious/res/layout/usersettings_fragment.xml b/samples/Scrumptious/res/layout/usersettings_fragment.xml
deleted file mode 100644
index 3e9bd7cd4..000000000
--- a/samples/Scrumptious/res/layout/usersettings_fragment.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:loginView="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@drawable/usersettings_fragment_background_gradient" >
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <ImageView
-            android:id="@+id/usersettings_fragment_logo_image"
-            android:layout_width="193dp"
-            android:layout_height="44dp"
-            android:layout_gravity="center_horizontal"
-            android:src="@drawable/usersettings_facebook_logo"
-            android:layout_marginTop="35dp"
-            android:contentDescription="@string/usersettings_fragment_logo_content_description"/>
-
-        <TextView
-            android:id="@+id/usersettings_fragment_profile_name"
-            android:layout_width="match_parent"
-            android:layout_height="100dp"
-            android:lines="1"
-            android:textSize="16sp"
-            android:textStyle="bold"
-            android:layout_marginTop="35dp"
-            android:gravity="center"/>
-    
-        <com.facebook.login.widget.LoginButton
-            android:id="@+id/usersettings_fragment_login_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:layout_marginTop="35dp"
-            android:layout_marginBottom="35dp"
-            loginView:com_facebook_login_text="@string/usersettings_fragment_log_in_button"
-            style="@style/com_facebook_loginview_silver_style" />
-    
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/Scrumptious/res/values-hdpi/dimens.xml b/samples/Scrumptious/res/values-hdpi/dimens.xml
deleted file mode 100644
index 2cbb2f58d..000000000
--- a/samples/Scrumptious/res/values-hdpi/dimens.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <dimen name="picker_divider_width">1px</dimen>
-</resources>
diff --git a/samples/Scrumptious/res/values-ldpi/dimens.xml b/samples/Scrumptious/res/values-ldpi/dimens.xml
deleted file mode 100644
index 2cbb2f58d..000000000
--- a/samples/Scrumptious/res/values-ldpi/dimens.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <dimen name="picker_divider_width">1px</dimen>
-</resources>
diff --git a/samples/Scrumptious/res/values-mdpi/dimens.xml b/samples/Scrumptious/res/values-mdpi/dimens.xml
deleted file mode 100644
index 2cbb2f58d..000000000
--- a/samples/Scrumptious/res/values-mdpi/dimens.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <dimen name="picker_divider_width">1px</dimen>
-</resources>
diff --git a/samples/Scrumptious/res/values-xhdpi/dimens.xml b/samples/Scrumptious/res/values-xhdpi/dimens.xml
deleted file mode 100644
index 9d344308d..000000000
--- a/samples/Scrumptious/res/values-xhdpi/dimens.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <dimen name="picker_divider_width">2px</dimen>
-</resources>
diff --git a/samples/Scrumptious/res/values/attrs.xml b/samples/Scrumptious/res/values/attrs.xml
deleted file mode 100644
index 0ab60ae6f..000000000
--- a/samples/Scrumptious/res/values/attrs.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <declare-styleable name="picker_fragment">
-        <attr name="show_pictures" format="boolean"/>
-        <attr name="extra_fields" format="string"/>
-        <attr name="show_title_bar" format="boolean" />
-        <attr name="title_text" format="string" />
-        <attr name="done_button_text" format="string" />
-        <attr name="title_bar_background" format="reference" />
-        <attr name="done_button_background" format="reference" />
-    </declare-styleable>
-    <declare-styleable name="picker_friend_picker_fragment">
-        <attr name="multi_select" format="boolean"/>
-    </declare-styleable>
-    <declare-styleable name="picker_place_picker_fragment">
-        <attr name="radius_in_meters" format="integer"/>
-        <attr name="results_limit" format="integer"/>
-        <attr name="search_text" format="string"/>
-        <attr name="show_search_box" format="boolean" />
-    </declare-styleable>
-</resources>
diff --git a/samples/Scrumptious/res/values/colors.xml b/samples/Scrumptious/res/values/colors.xml
deleted file mode 100644
index 1ce7251ba..000000000
--- a/samples/Scrumptious/res/values/colors.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <dimen name="picker_place_image_size">64dp</dimen>
-    <color name="picker_search_bar_background">#f5f5f7</color>
-    <color name="picker_search_bar_text">#bcbdc2</color>
-	<color name="scrumptious_main_orange">#FFFD5720</color>
-    <color name="disabled_button_color">#FFB7B7B7</color>
-</resources>
diff --git a/samples/Scrumptious/res/values/dimens.xml b/samples/Scrumptious/res/values/dimens.xml
deleted file mode 100644
index c6db724a3..000000000
--- a/samples/Scrumptious/res/values/dimens.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-	<dimen name="item_list_padding">14dp</dimen>
-</resources>
diff --git a/samples/Scrumptious/res/values/drawables.xml b/samples/Scrumptious/res/values/drawables.xml
deleted file mode 100644
index cdb56f864..000000000
--- a/samples/Scrumptious/res/values/drawables.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <drawable name="picker_default_separator_color">#33464c59</drawable>
-</resources>
diff --git a/samples/Scrumptious/res/values/strings.xml b/samples/Scrumptious/res/values/strings.xml
deleted file mode 100644
index 080012bbf..000000000
--- a/samples/Scrumptious/res/values/strings.xml
+++ /dev/null
@@ -1,100 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="app_name">Scrumptious</string>
-    <string name="app_id">233936543368280</string>
-    <string name="fb_login_protocol_scheme">fb233936543368280</string>
-    <string name="get_started">To get started, login using Facebook</string>
-    <string name="skip_login">continue as a guest</string>
-    <string name="action_eating">Pick Meal</string>
-    <string name="action_location">Pick Location</string>
-    <string name="action_people">Pick Friends</string>
-    <string name="action_photo">Pick Photo</string>
-    <string name="action_eating_default">Select a meal</string>
-    <string name="action_location_default">Select a place</string>
-    <string name="action_people_default">Select friends</string>
-    <string name="action_photo_default">Take one</string>
-    <string name="action_photo_ready">Ready</string>
-    <string name="action_photo_camera">Take Photo</string>
-    <string name="action_photo_gallery">Choose Existing</string>
-    <string name="announce">Announce</string>
-    <string name="picker_placepicker_subtitle_format">%1$s • %2$,d were here</string>
-    <string name="picker_placepicker_subtitle_catetory_only_format">%1$s</string>
-    <string name="picker_placepicker_subtitle_were_here_only_format">%1$,d were here</string>
-    <string name="picker_picker_done_button_text">Done</string>
-    <string name="message">Send with Messenger</string>
-    <string name="login">Login</string>
-    <string name="settings">Settings</string>
-    <string name="select_meal">Select a meal</string>
-    <string name="enter_meal">Enter meal</string>
-    <string name="result_dialog_title">Result</string>
-    <string name="result_dialog_button_text">Thanks!</string>
-    <string name="result_dialog_text_with_id">Posted Open Graph action, id: %1$s</string>
-    <string name="result_dialog_text_default">Post action complete.</string>
-    <string name="result_dialog_text_canceled">Post canceled.</string>
-    <string name="progress_dialog_text">Announcing, please wait...</string>
-    <string name="single_user_selected">%1$s</string>
-    <string name="two_users_selected">%1$s and %2$s</string>
-    <string name="multiple_users_selected">%1$s and %2$s others</string>
-    <string name="error_dialog_title">Something Went Wrong</string>
-    <string name="error_dialog_button_text">OK</string>
-    <string name="error_dialog_default_text">No response from server.</string>
-    <string name="select_picture">Select Picture</string>
-    <string name="rejected_publish_permission">Publish permission rejected, canceling.</string>
-    <string name="error_transient">A temporary error occurred, please try again later.</string>
-    <string name="error_unknown">An unknown error occurred, please contact the developer with the following message: %1$s</string>
-    <string name="exception">Exception: %1$s</string>
-    <string name="ok">OK</string>
-    <string name="cancel">Cancel</string>
-    <string name="usersettings_fragment_log_in_button">Log in&#8230;</string>
-    <string name="usersettings_fragment_logged_in">Logged in</string>
-    <string name="usersettings_fragment_not_logged_in">Not logged in</string>
-    <string name="usersettings_fragment_logo_content_description">Facebook Logo</string>
-    <string name="logo_content_description">logo</string>
-    <string name="food_image_content_description">Food image</string>
-    <string name="choose_friends">Choose Friends</string>
-    <string name="nearby">Nearby</string>
-
-    <string-array name="food_types">
-        <item>Cheeseburger</item>
-        <item>Pizza</item>
-        <item>Hotdog</item>
-        <item>Italian</item>
-        <item>French</item>
-        <item>Chinese</item>
-        <item>Thai</item>
-        <item>Indian</item>
-        <item>&lt;Other&gt;</item>
-    </string-array>
-
-    <string-array name="food_og_urls">
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/cheeseburger.html</item> <!-- Cheeseburger -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/pizza.html</item> <!-- Pizza -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/hotdog.html</item> <!-- Hotdog -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/italian.html</item> <!-- Italian -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/french.html</item> <!-- French -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/chinese.html</item> <!-- Chinese -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/thai.html</item> <!-- Thai -->
-        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/indian.html</item> <!-- Indian -->
-        <item></item>
-    </string-array>
-</resources>
diff --git a/samples/Scrumptious/res/values/styles.xml b/samples/Scrumptious/res/values/styles.xml
deleted file mode 100644
index 2f4dfe586..000000000
--- a/samples/Scrumptious/res/values/styles.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-	<style name="Theme.Scrumptious" parent="android:Theme">
-        <item name="android:windowNoTitle">true</item>
-    </style>
-    <color name="usersettings_fragment_connected_text_color">#FFFFFF</color>
-    <color name="usersettings_fragment_connected_shadow_color">#000000</color>
-    <color name="usersettings_fragment_not_connected_text_color">#A6AED7</color>
-    <dimen name="usersettings_fragment_profile_picture_width">64dp</dimen>
-    <dimen name="usersettings_fragment_profile_picture_height">64dp</dimen>
-</resources>
diff --git a/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java b/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
deleted file mode 100644
index 5cd8cff35..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.content.Intent;
-import android.graphics.drawable.Drawable;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.BaseAdapter;
-
-import com.facebook.share.model.ShareOpenGraphAction;
-
-/**
- * Base class for a list element in the Scrumptious main display, consisting of an
- * icon to the left, and a two line display to the right.
- */
-public abstract class BaseListElement {
-
-    private Drawable icon;
-    private String text1;
-    private String text2;
-    private BaseAdapter adapter;
-    private int requestCode;
-
-    /**
-     * Constructs a new list element.
-     *
-     * @param icon the drawable for the icon
-     * @param text1 the first row of text
-     * @param text2 the second row of text
-     * @param requestCode the requestCode to start new Activities with
-     */
-    public BaseListElement(Drawable icon, String text1, String text2, int requestCode) {
-        this.icon = icon;
-        this.text1 = text1;
-        this.text2 = text2;
-        this.requestCode = requestCode;
-    }
-
-    /**
-     * The Adapter associated with this list element (used for notifying that the
-     * underlying dataset has changed).
-     * @param adapter the adapter associated with this element
-     */
-    public void setAdapter(BaseAdapter adapter) {
-        this.adapter = adapter;
-    }
-
-    /**
-     * Returns the icon.
-     *
-     * @return the icon
-     */
-    public Drawable getIcon() {
-        return icon;
-    }
-
-    /**
-     * Returns the first row of text.
-     *
-     * @return the first row of text
-     */
-    public String getText1() {
-        return text1;
-    }
-
-    /**
-     * Returns the second row of text.
-     *
-     * @return the second row of text
-     */
-    public String getText2() {
-        return text2;
-    }
-
-    /**
-     * Returns the requestCode for starting new Activities.
-     *
-     * @return the requestCode
-     */
-    public int getRequestCode() {
-        return requestCode;
-    }
-
-    /**
-     * Sets the first row of text.
-     *
-     * @param text1 text to set on the first row
-     */
-    public void setText1(String text1) {
-        this.text1 = text1;
-        if (adapter != null) {
-            adapter.notifyDataSetChanged();
-        }
-    }
-
-    /**
-     * Sets the second row of text.
-     *
-     * @param text2 text to set on the second row
-     */
-    public void setText2(String text2) {
-        this.text2 = text2;
-        if (adapter != null) {
-            adapter.notifyDataSetChanged();
-        }
-    }
-
-    /**
-     * Returns the OnClickListener associated with this list element. To be
-     * overridden by the subclasses.
-     *
-     * @return the OnClickListener associated with this list element
-     */
-    protected abstract View.OnClickListener getOnClickListener();
-
-    /**
-     * Populate an OpenGraphAction with the results of this list element.
-     *
-     * @param actionBuilder the builder to populate with data
-     */
-    protected abstract void populateOpenGraphAction(ShareOpenGraphAction.Builder actionBuilder);
-
-    /**
-     * Callback if the OnClickListener happens to launch a new Activity.
-     *
-     * @param data the data associated with the result
-     */
-    protected void onActivityResult(Intent data) {}
-
-    /**
-     * Save the state of the current element.
-     *
-     * @param bundle the bundle to save to
-     */
-    protected void onSaveInstanceState(Bundle bundle) {}
-
-    /**
-     * Restore the state from the saved bundle. Returns true if the
-     * state was restored.
-     *
-     * @param savedState the bundle to restore from
-     * @return true if state was restored
-     */
-    protected boolean restoreState(Bundle savedState) {
-        return false;
-    }
-
-    /**
-     * Notifies the associated Adapter that the underlying data has changed,
-     * and to re-layout the view.
-     */
-    protected void notifyDataChanged() {
-        adapter.notifyDataSetChanged();
-    }
-
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/FullListView.java b/samples/Scrumptious/src/com/example/scrumptious/FullListView.java
deleted file mode 100644
index 0d6f84c80..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/FullListView.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.content.Context;
-import android.util.AttributeSet;
-import android.view.View;
-import android.widget.ListAdapter;
-import android.widget.ListView;
-
-/**
- * A subclass of ListView that will always show the full list of elements.
- * This allows a ListView to be embedded inside a ScrollView.
- */
-public class FullListView extends ListView {
-
-    public FullListView(Context context) {
-        super(context);
-    }
-
-    public FullListView(Context context, AttributeSet attributeSet) {
-        super(context, attributeSet);
-    }
-
-    public FullListView(Context context, AttributeSet attributeSet, int defStyle) {
-        super(context, attributeSet, defStyle);
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        int width = getMeasuredWidth();
-        int height = 0;
-        ListAdapter adapter = getAdapter();
-        int count = adapter != null ? adapter.getCount() : 0;
-        for (int i = 0; i < count; i++) {
-            View childView = adapter.getView(i, null, this);
-            childView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),
-                    MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));
-            height += childView.getMeasuredHeight();
-        }
-        height += getDividerHeight() * (count-1);
-        setMeasuredDimension(width, height);
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
deleted file mode 100644
index 9afe82eca..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
+++ /dev/null
@@ -1,167 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.app.Activity;
-import android.app.Fragment;
-import android.app.FragmentManager;
-import android.app.FragmentTransaction;
-import android.content.Intent;
-import android.os.Bundle;
-
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenTracker;
-import com.facebook.CallbackManager;
-
-public class MainActivity extends Activity {
-
-    private static final String USER_SKIPPED_LOGIN_KEY = "user_skipped_login";
-
-    private static final int SPLASH = 0;
-    private static final int SELECTION = 1;
-    private static final int SETTINGS = 2;
-    private static final int FRAGMENT_COUNT = SETTINGS +1;
-
-    private Fragment[] fragments = new Fragment[FRAGMENT_COUNT];
-    private boolean isResumed = false;
-    private boolean userSkippedLogin = false;
-    private AccessTokenTracker accessTokenTracker;
-    private CallbackManager callbackManager;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        if (savedInstanceState != null) {
-            userSkippedLogin = savedInstanceState.getBoolean(USER_SKIPPED_LOGIN_KEY);
-        }
-        callbackManager = CallbackManager.Factory.create();
-
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken,
-                                                       AccessToken currentAccessToken) {
-                if (isResumed) {
-                    FragmentManager manager = getFragmentManager();
-                    int backStackSize = manager.getBackStackEntryCount();
-                    for (int i = 0; i < backStackSize; i++) {
-                        manager.popBackStack();
-                    }
-                    if (currentAccessToken != null) {
-                        showFragment(SELECTION, false);
-                    } else {
-                        showFragment(SPLASH, false);
-                    }
-                }
-            }
-        };
-
-        setContentView(R.layout.main);
-
-        FragmentManager fm = getFragmentManager();
-        SplashFragment splashFragment = (SplashFragment) fm.findFragmentById(R.id.splashFragment);
-        fragments[SPLASH] = splashFragment;
-        fragments[SELECTION] = fm.findFragmentById(R.id.selectionFragment);
-        fragments[SETTINGS] = fm.findFragmentById(R.id.userSettingsFragment);
-
-        FragmentTransaction transaction = fm.beginTransaction();
-        for(int i = 0; i < fragments.length; i++) {
-            transaction.hide(fragments[i]);
-        }
-        transaction.commit();
-
-        splashFragment.setSkipLoginCallback(new SplashFragment.SkipLoginCallback() {
-            @Override
-            public void onSkipLoginPressed() {
-                userSkippedLogin = true;
-                showFragment(SELECTION, false);
-            }
-        });
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        isResumed = true;
-
-        if (AccessToken.getCurrentAccessToken() != null) {
-            // if the user already logged in, try to show the selection fragment
-            showFragment(SELECTION, false);
-            userSkippedLogin = false;
-        } else if (userSkippedLogin) {
-            showFragment(SELECTION, false);
-        } else {
-            // otherwise present the splash screen and ask the user to login,
-            // unless the user explicitly skipped.
-            showFragment(SPLASH, false);
-        }
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        isResumed = false;
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        accessTokenTracker.stopTracking();
-    }
-
-    @Override
-    protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-
-        outState.putBoolean(USER_SKIPPED_LOGIN_KEY, userSkippedLogin);
-    }
-
-    public void showSettingsFragment() {
-        showFragment(SETTINGS, true);
-    }
-
-    public void showSplashFragment() {
-        showFragment(SPLASH, true);
-    }
-
-
-    private void showFragment(int fragmentIndex, boolean addToBackStack) {
-        FragmentManager fm = getFragmentManager();
-        FragmentTransaction transaction = fm.beginTransaction();
-        for (int i = 0; i < fragments.length; i++) {
-            if (i == fragmentIndex) {
-                transaction.show(fragments[i]);
-            } else {
-                transaction.hide(fragments[i]);
-            }
-        }
-        if (addToBackStack) {
-            transaction.addToBackStack(null);
-        }
-        transaction.commit();
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java b/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
deleted file mode 100644
index 1d8a57bc6..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
+++ /dev/null
@@ -1,273 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.Manifest;
-import android.annotation.SuppressLint;
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Fragment;
-import android.app.FragmentManager;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.pm.PackageManager;
-import android.location.Criteria;
-import android.location.Location;
-import android.location.LocationListener;
-import android.location.LocationManager;
-import android.net.Uri;
-import android.os.Build;
-import android.os.Bundle;
-import android.os.Looper;
-import android.widget.Toast;
-import com.facebook.FacebookException;
-import com.example.scrumptious.picker.FriendPickerFragment;
-import com.example.scrumptious.picker.PickerFragment;
-import com.example.scrumptious.picker.PlacePickerFragment;
-
-/**
- * The PickerActivity enhances the Friend or Place Picker by adding a title
- * and a Done button. The selection results are saved in the ScrumptiousApplication
- * instance.
- */
-public class PickerActivity extends Activity {
-    public static final Uri FRIEND_PICKER = Uri.parse("picker://friend");
-    public static final Uri PLACE_PICKER = Uri.parse("picker://place");
-
-    private static final int SEARCH_RADIUS_METERS = 1000;
-    private static final int SEARCH_RESULT_LIMIT = 50;
-    private static final String SEARCH_TEXT = "Restaurant";
-    private static final int LOCATION_CHANGE_THRESHOLD = 50; // meters
-
-    private FriendPickerFragment friendPickerFragment;
-    private PlacePickerFragment placePickerFragment;
-    private LocationListener locationListener;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.pickers);
-
-        Bundle args = getIntent().getExtras();
-        FragmentManager manager = getFragmentManager();
-        Fragment fragmentToShow = null;
-        Uri intentUri = getIntent().getData();
-
-        if (FRIEND_PICKER.equals(intentUri)) {
-            if (savedInstanceState == null) {
-                friendPickerFragment = new FriendPickerFragment();
-                friendPickerFragment.setSettingsFromBundle(args);
-                friendPickerFragment.setFriendPickerType(FriendPickerFragment.FriendPickerType.TAGGABLE_FRIENDS);
-            } else {
-                friendPickerFragment = (FriendPickerFragment) manager.findFragmentById(R.id.picker_fragment);;
-            }
-
-            friendPickerFragment.setOnErrorListener(new PickerFragment.OnErrorListener() {
-                @Override
-                public void onError(PickerFragment fragment, FacebookException error) {
-                    PickerActivity.this.onError(error);
-                }
-            });
-            friendPickerFragment.setOnDoneButtonClickedListener(new PickerFragment.OnDoneButtonClickedListener() {
-                @Override
-                public void onDoneButtonClicked(PickerFragment fragment) {
-                    finishActivity();
-                }
-            });
-            fragmentToShow = friendPickerFragment;
-
-        } else if (PLACE_PICKER.equals(intentUri)) {
-            if (savedInstanceState == null) {
-                placePickerFragment = new PlacePickerFragment();
-                placePickerFragment.setSettingsFromBundle(args);
-            } else {
-                placePickerFragment = (PlacePickerFragment) manager.findFragmentById(R.id.picker_fragment);
-            }
-            placePickerFragment.setOnSelectionChangedListener(new PickerFragment.OnSelectionChangedListener() {
-                @Override
-                public void onSelectionChanged(PickerFragment fragment) {
-                    finishActivity(); // call finish since you can only pick one place
-                }
-            });
-            placePickerFragment.setOnErrorListener(new PickerFragment.OnErrorListener() {
-                @Override
-                public void onError(PickerFragment fragment, FacebookException error) {
-                    PickerActivity.this.onError(error);
-                }
-            });
-            placePickerFragment.setOnDoneButtonClickedListener(new PickerFragment.OnDoneButtonClickedListener() {
-                @Override
-                public void onDoneButtonClicked(PickerFragment fragment) {
-                    finishActivity();
-                }
-            });
-            fragmentToShow = placePickerFragment;
-        } else {
-            // Nothing to do, finish
-            setResult(RESULT_CANCELED);
-            finish();
-            return;
-        }
-
-        manager.beginTransaction().replace(R.id.picker_fragment, fragmentToShow).commit();
-    }
-
-    @Override
-    @SuppressLint("MissingPermission")
-    protected void onStart() {
-        super.onStart();
-        if (FRIEND_PICKER.equals(getIntent().getData())) {
-            try {
-                friendPickerFragment.loadData(false);
-            } catch (Exception ex) {
-                onError(ex);
-            }
-        } else if (PLACE_PICKER.equals(getIntent().getData())) {
-            try {
-                Location location = null;
-                Criteria criteria = new Criteria();
-                LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
-                String bestProvider = locationManager.getBestProvider(criteria, false);
-                if (bestProvider != null && checkForLocationPermissionsAndRequest()) {
-                    location = locationManager.getLastKnownLocation(bestProvider);
-                    if (locationManager.isProviderEnabled(bestProvider) && locationListener == null) {
-                        locationListener = new LocationListener() {
-                            @Override
-                            public void onLocationChanged(Location location) {
-                                boolean updateLocation = true;
-                                Location prevLocation = placePickerFragment.getLocation();
-                                if (prevLocation != null) {
-                                    updateLocation = location.distanceTo(prevLocation) >= LOCATION_CHANGE_THRESHOLD;
-                                }
-                                if (updateLocation) {
-                                    placePickerFragment.setLocation(location);
-                                    placePickerFragment.loadData(true);
-                                }
-                            }
-                            @Override
-                            public void onStatusChanged(String s, int i, Bundle bundle) {
-                            }
-                            @Override
-                            public void onProviderEnabled(String s) {
-                            }
-                            @Override
-                            public void onProviderDisabled(String s) {
-                            }
-                        };
-                        locationManager.requestLocationUpdates(bestProvider, 1, LOCATION_CHANGE_THRESHOLD,
-                                locationListener, Looper.getMainLooper());
-                    }
-                }
-                if (location != null) {
-                    placePickerFragment.setLocation(location);
-                    placePickerFragment.setRadiusInMeters(SEARCH_RADIUS_METERS);
-                    placePickerFragment.setSearchText(SEARCH_TEXT);
-                    placePickerFragment.setResultsLimit(SEARCH_RESULT_LIMIT);
-                    placePickerFragment.loadData(false);
-                }
-            } catch (Exception ex) {
-                onError(ex);
-            }
-        }
-    }
-
-    @Override
-    @SuppressLint("MissingPermission")
-    protected void onStop() {
-        super.onStop();
-        if (locationListener != null) {
-            if (hasLocationPermissions()) {
-                LocationManager locationManager =
-                        (LocationManager)getSystemService(Context.LOCATION_SERVICE);
-                locationManager.removeUpdates(locationListener);
-            }
-            locationListener = null;
-        }
-    }
-
-    private void onError(Exception error) {
-        String text = getString(R.string.exception, error.getMessage());
-        Toast toast = Toast.makeText(this, text, Toast.LENGTH_SHORT);
-        toast.show();
-    }
-
-    private void onError(String error, final boolean finishActivity) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        builder.setTitle(R.string.error_dialog_title).
-                setMessage(error).
-                setPositiveButton(R.string.error_dialog_button_text, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialogInterface, int i) {
-                        if (finishActivity) {
-                            finishActivity();
-                        }
-                    }
-                });
-        builder.show();
-    }
-
-    private void finishActivity() {
-        ScrumptiousApplication app = (ScrumptiousApplication) getApplication();
-        if (FRIEND_PICKER.equals(getIntent().getData())) {
-            if (friendPickerFragment != null) {
-                app.setSelectedUsers(friendPickerFragment.getSelection());
-            }
-        } else if (PLACE_PICKER.equals(getIntent().getData())) {
-            if (placePickerFragment != null) {
-                app.setSelectedPlace(placePickerFragment.getSelection());
-            }
-        }
-        setResult(RESULT_OK, null);
-        finish();
-    }
-
-    private boolean checkForLocationPermissionsAndRequest() {
-        if (!hasLocationPermissions()) {
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-                requestPermissions(
-                        new String[]{
-                                Manifest.permission.ACCESS_FINE_LOCATION,
-                                Manifest.permission.ACCESS_COARSE_LOCATION
-                        },
-                        0);
-            }
-
-            return false;
-        } else {
-            return true;
-        }
-    }
-
-    private boolean hasLocationPermissions() {
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
-            return true;
-        }
-
-        if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)
-                != PackageManager.PERMISSION_GRANTED
-                && checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION)
-                != PackageManager.PERMISSION_GRANTED) {
-            return false;
-        }
-
-        return true;
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
deleted file mode 100644
index 27df704da..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.app.Application;
-
-
-import org.json.JSONObject;
-
-import java.util.List;
-
-/**
- * Use a custom Application class to pass state data between Activities.
- */
-public class ScrumptiousApplication extends Application {
-    private List<JSONObject> selectedUsers;
-    private JSONObject selectedPlace;
-
-    public List<JSONObject> getSelectedUsers() {
-        return selectedUsers;
-    }
-
-    public void setSelectedUsers(List<JSONObject> users) {
-        selectedUsers = users;
-    }
-
-    public JSONObject getSelectedPlace() {
-        return selectedPlace;
-    }
-
-    public void setSelectedPlace(JSONObject place) {
-        this.selectedPlace = place;
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
deleted file mode 100644
index b86688c60..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
+++ /dev/null
@@ -1,1110 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Fragment;
-import android.app.ProgressDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.database.DataSetObserver;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.Matrix;
-import android.net.Uri;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.os.Environment;
-import android.provider.MediaStore;
-import android.util.Log;
-import android.util.Pair;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.WindowManager;
-import android.widget.*;
-
-import com.facebook.*;
-import com.facebook.AccessToken;
-import com.facebook.FacebookException;
-import com.facebook.FacebookGraphResponseException;
-import com.facebook.FacebookRequestError;
-import com.facebook.FacebookSdk;
-import com.facebook.GraphResponse;
-import com.facebook.internal.Utility;
-import com.facebook.login.DefaultAudience;
-import com.facebook.login.LoginManager;
-import com.facebook.share.ShareApi;
-import com.facebook.share.Sharer;
-import com.facebook.share.model.ShareContent;
-import com.facebook.share.model.ShareOpenGraphContent;
-import com.facebook.share.model.ShareOpenGraphObject;
-import com.facebook.share.model.SharePhoto;
-import com.facebook.share.model.ShareOpenGraphAction;
-import com.facebook.share.widget.MessageDialog;
-import com.facebook.share.widget.SendButton;
-import com.facebook.share.widget.ShareButton;
-import com.facebook.login.widget.ProfilePictureView;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.io.*;
-import java.net.URLEncoder;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Set;
-import java.util.UUID;
-
-/**
- * Fragment that represents the main selection screen for Scrumptious.
- */
-public class SelectionFragment extends Fragment {
-
-    private static final String TAG = "SelectionFragment";
-    private static final String MEAL_OBJECT_TYPE = "fb_sample_scrumps:meal";
-    private static final String EAT_ACTION_TYPE = "fb_sample_scrumps:eat";
-
-    private static final String PENDING_ANNOUNCE_KEY = "pendingAnnounce";
-    private static final int USER_GENERATED_MIN_SIZE = 480;
-    private static final float MAX_TEXTURE_SIZE = 1024f;
-
-    private static final String PERMISSION = "publish_actions";
-
-    private TextView announceButton;
-    private ShareButton shareButton;
-    private SendButton messageButton;
-    private ListView listView;
-    private List<BaseListElement> listElements;
-    private ProfilePictureView profilePictureView;
-    private boolean pendingAnnounce;
-    private MainActivity activity;
-    private ProgressDialog announceProgressDialog;
-
-    private Uri photoUri;
-    private ImageView photoThumbnail;
-    private ScaleAndSetImageTask runningImageTask;
-
-    private CallbackManager callbackManager;
-    private AccessTokenTracker accessTokenTracker;
-    private FacebookCallback<Sharer.Result> shareCallback =
-            new FacebookCallback<Sharer.Result>() {
-                @Override
-                public void onCancel() {
-                    processDialogResults(null, true);
-                }
-
-                @Override
-                public void onError(FacebookException error) {
-                    if (error instanceof FacebookGraphResponseException) {
-                        FacebookGraphResponseException graphError =
-                                (FacebookGraphResponseException) error;
-                        if (graphError.getGraphResponse() != null) {
-                            handleError(graphError.getGraphResponse());
-                            return;
-                        }
-                    }
-                    processDialogError(error);
-                }
-
-                @Override
-                public void onSuccess(Sharer.Result result) {
-                    processDialogResults(result.getPostId(), false);
-                }
-            };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        activity = (MainActivity) getActivity();
-        callbackManager = CallbackManager.Factory.create();
-
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken,
-                                                       AccessToken currentAccessToken) {
-                updateWithToken(currentAccessToken);
-            }
-        };
-    }
-
-    private void updateWithToken(AccessToken currentAccessToken) {
-        if (currentAccessToken != null) {
-            tokenUpdated(currentAccessToken);
-            profilePictureView.setProfileId(currentAccessToken.getUserId());
-            announceButton.setVisibility(View.VISIBLE);
-        } else {
-            profilePictureView.setProfileId(null);
-            announceButton.setVisibility(View.GONE);
-        }
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        super.onCreateView(inflater, container, savedInstanceState);
-        View view = inflater.inflate(R.layout.selection, container, false);
-
-        profilePictureView = (ProfilePictureView) view.findViewById(R.id.selection_profile_pic);
-        profilePictureView.setCropped(true);
-        announceButton = (TextView) view.findViewById(R.id.announce_text);
-        shareButton = (ShareButton) view.findViewById(R.id.share_button);
-        messageButton = (SendButton) view.findViewById(R.id.message_button);
-        listView = (ListView) view.findViewById(R.id.selection_list);
-        photoThumbnail = (ImageView) view.findViewById(R.id.selected_image);
-
-        announceProgressDialog = new ProgressDialog(getActivity());
-        announceProgressDialog.setMessage(getString(R.string.progress_dialog_text));
-
-        if (MessageDialog.canShow(ShareOpenGraphContent.class)) {
-            messageButton.setVisibility(View.VISIBLE);
-        }
-
-        announceButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                handleAnnounce();
-            }
-        });
-
-        messageButton.registerCallback(callbackManager, shareCallback);
-        messageButton.setFragment(this);
-        shareButton.registerCallback(callbackManager, shareCallback);
-        shareButton.setFragment(this);
-
-        profilePictureView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (AccessToken.getCurrentAccessToken() != null) {
-                    activity.showSettingsFragment();
-                } else {
-                    activity.showSplashFragment();
-                }
-            }
-        });
-
-        init(savedInstanceState);
-        updateWithToken(AccessToken.getCurrentAccessToken());
-
-        return view;
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        if (resultCode == Activity.RESULT_OK && requestCode >= 0 && requestCode < listElements.size()) {
-            listElements.get(requestCode).onActivityResult(data);
-        } else {
-            callbackManager.onActivityResult(requestCode, resultCode, data);
-        }
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle bundle) {
-        super.onSaveInstanceState(bundle);
-        for (BaseListElement listElement : listElements) {
-            listElement.onSaveInstanceState(bundle);
-        }
-        bundle.putBoolean(PENDING_ANNOUNCE_KEY, pendingAnnounce);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        accessTokenTracker.stopTracking();
-        activity = null;
-    }
-
-    private void processDialogError(FacebookException error) {
-        enableButtons();
-        announceProgressDialog.dismiss();
-
-        if (error != null) {
-            new AlertDialog.Builder(getActivity())
-                    .setPositiveButton(R.string.error_dialog_button_text, null)
-                    .setTitle(R.string.error_dialog_title)
-                    .setMessage(error.getLocalizedMessage())
-                    .show();
-        }
-    }
-
-    private void processDialogResults(String postId, boolean isCanceled) {
-        enableButtons();
-        announceProgressDialog.dismiss();
-
-        boolean resetSelections = true;
-        if (isCanceled) {
-            // Leave selections alone if user canceled.
-            resetSelections = false;
-            showCancelResponse();
-        } else {
-            showSuccessResponse(postId);
-        }
-
-        if (resetSelections) {
-            init(null);
-        }
-    }
-
-    private void showRejectedPermissionError() {
-        new AlertDialog.Builder(getActivity())
-                .setPositiveButton(R.string.error_dialog_button_text, null)
-                .setTitle(R.string.error_dialog_title)
-                .setMessage(R.string.rejected_publish_permission)
-                .show();
-    }
-
-    /**
-     * Notifies that the token has been updated.
-     */
-    private void tokenUpdated(AccessToken currentAccessToken) {
-        if (pendingAnnounce) {
-            Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
-            if (currentAccessToken == null
-                    || !currentAccessToken.getPermissions().contains(PERMISSION)) {
-                pendingAnnounce = false;
-                showRejectedPermissionError();
-                return;
-            }
-            handleAnnounce();
-        }
-    }
-
-    private void updateShareContent() {
-        ShareContent content = createOpenGraphContent();
-        if (content != null) {
-            enableButtons();
-        } else {
-            disableButtons();
-        }
-
-        shareButton.setShareContent(content);
-        messageButton.setShareContent(content);
-    }
-
-    private void disableButtons() {
-        announceButton.setEnabled(false);
-        shareButton.setEnabled(false);
-        messageButton.setEnabled(false);
-    }
-
-    private void enableButtons() {
-        announceButton.setEnabled(true);
-        shareButton.setEnabled(true);
-        messageButton.setEnabled(true);
-    }
-
-    /**
-     * Resets the view to the initial defaults.
-     */
-    private void init(Bundle savedInstanceState) {
-        disableButtons();
-
-        listElements = new ArrayList<BaseListElement>();
-
-        listElements.add(new EatListElement(0));
-        listElements.add(new LocationListElement(1));
-        listElements.add(new PeopleListElement(2));
-        listElements.add(new PhotoListElement(3));
-
-        if (savedInstanceState != null) {
-            for (BaseListElement listElement : listElements) {
-                listElement.restoreState(savedInstanceState);
-            }
-            pendingAnnounce = savedInstanceState.getBoolean(PENDING_ANNOUNCE_KEY, false);
-        }
-        ActionListAdapter listAdapter = new ActionListAdapter(
-                getActivity(),
-                R.id.selection_list,
-                listElements);
-        listAdapter.registerDataSetObserver(new DataSetObserver() {
-            @Override
-            public void onChanged() {
-                updateShareContent();
-            }
-        });
-        listView.setAdapter(listAdapter);
-
-        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null) {
-            profilePictureView.setProfileId(accessToken.getUserId());
-        }
-
-        updateShareContent();
-    }
-
-    private void handleAnnounce() {
-        Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
-        if (!permissions.contains(PERMISSION)) {
-            pendingAnnounce = true;
-            requestPublishPermissions();
-            return;
-        } else {
-            pendingAnnounce = false;
-        }
-
-        disableButtons();
-        announceProgressDialog.show();
-        ShareApi.share(createOpenGraphContent(), shareCallback);
-    }
-
-    private ShareOpenGraphContent createOpenGraphContent() {
-        ShareOpenGraphAction.Builder actionBuilder = createEatActionBuilder();
-
-        boolean userGenerated = false;
-        if (photoUri != null) {
-            String photoUriString = photoUri.toString();
-            Pair<File, Integer> fileAndMinDimension = getImageFileAndMinDimension();
-            userGenerated = fileAndMinDimension.second >= USER_GENERATED_MIN_SIZE;
-
-            if (fileAndMinDimension != null) {
-                final SharePhoto actionPhoto = new SharePhoto.Builder()
-                        .setImageUrl(Uri.parse(photoUriString))
-                        .setUserGenerated(userGenerated)
-                        .build();
-                actionBuilder.putPhotoArrayList("image", new ArrayList<SharePhoto>() {{
-                    add(actionPhoto);
-                }});
-            }
-        }
-
-        return new ShareOpenGraphContent.Builder()
-                .setAction(actionBuilder.build())
-                .setPreviewPropertyName("meal")
-                .build();
-    }
-
-    private File getTempPhotoStagingDirectory() {
-        File photoDir = new File(getActivity().getCacheDir(), "photoFiles");
-        photoDir.mkdirs();
-
-        return photoDir;
-    }
-
-    private Pair<File, Integer> getImageFileAndMinDimension() {
-        File photoFile = null;
-        String photoUriString = photoUri.toString();
-        if (photoUriString.startsWith("file://")) {
-            photoFile = new File(photoUri.getPath());
-        } else if (photoUriString.startsWith("content://")) {
-            FileOutputStream photoOutputStream = null;
-            InputStream contentInputStream = null;
-            try {
-                Uri photoUri = Uri.parse(photoUriString);
-                photoFile = new File(
-                        getTempPhotoStagingDirectory(),
-                        URLEncoder.encode(UUID.randomUUID().toString(), "UTF-8"));
-
-                photoOutputStream = new FileOutputStream(photoFile);
-                contentInputStream = getActivity()
-                        .getContentResolver().openInputStream(photoUri);
-
-                byte[] buffer = new byte[1024];
-                int len;
-                while ((len = contentInputStream.read(buffer)) > 0) {
-                    photoOutputStream.write(buffer, 0, len);
-                }
-            } catch (FileNotFoundException fnfe) {
-                Log.e(TAG, "photo not found", fnfe);
-            } catch (UnsupportedEncodingException uee) {
-                Log.e(TAG, "bad photo name", uee);
-            } catch (IOException ioe) {
-                Log.e(TAG, "can't copy photo", ioe);
-            } finally {
-                try {
-                    if (photoOutputStream != null) {
-                        photoOutputStream.close();
-                    }
-                    if (contentInputStream != null) {
-                        contentInputStream.close();
-                    }
-                } catch (IOException ioe) {
-                    Log.e(TAG, "can't close streams");
-                }
-            }
-        }
-
-        if (photoFile != null) {
-            InputStream is = null;
-            try {
-                is = new FileInputStream(photoFile);
-
-                // We only want to get the bounds of the image, rather than load the whole thing.
-                BitmapFactory.Options options = new BitmapFactory.Options();
-                options.inJustDecodeBounds = true;
-                BitmapFactory.decodeStream(is, null, options);
-
-                return new Pair<>(
-                        photoFile, Math.min(options.outWidth, options.outHeight));
-            } catch (Exception e) {
-                return null;
-            } finally {
-                Utility.closeQuietly(is);
-            }
-        }
-        return null;
-    }
-
-    private ShareOpenGraphAction.Builder createEatActionBuilder() {
-        ShareOpenGraphAction.Builder builder = new ShareOpenGraphAction.Builder()
-                .setActionType(EAT_ACTION_TYPE);
-        for (BaseListElement element : listElements) {
-            element.populateOpenGraphAction(builder);
-        }
-
-        return builder;
-    }
-
-    private void requestPublishPermissions() {
-        LoginManager.getInstance()
-                .setDefaultAudience(DefaultAudience.FRIENDS)
-                .logInWithPublishPermissions(this, Arrays.asList(PERMISSION));
-    }
-
-    private void showSuccessResponse(String postId) {
-        String dialogBody;
-        if (postId != null) {
-            dialogBody = String.format(getString(R.string.result_dialog_text_with_id), postId);
-        } else {
-            dialogBody = getString(R.string.result_dialog_text_default);
-        }
-        showResultDialog(dialogBody);
-    }
-
-    private void showCancelResponse() {
-        showResultDialog(getString(R.string.result_dialog_text_canceled));
-    }
-
-    private void showResultDialog(String dialogBody) {
-        new AlertDialog.Builder(getActivity())
-                .setPositiveButton(R.string.result_dialog_button_text, null)
-                .setTitle(R.string.result_dialog_title)
-                .setMessage(dialogBody)
-                .show();
-    }
-
-    private void handleError(GraphResponse response) {
-        FacebookRequestError error = response.getError();
-        DialogInterface.OnClickListener listener = null;
-        String dialogBody = null;
-
-        if (error == null) {
-            dialogBody = getString(R.string.error_dialog_default_text);
-        } else {
-            switch (error.getCategory()) {
-                case LOGIN_RECOVERABLE:
-                    // There is a login issue that can be resolved by the LoginManager.
-                    LoginManager.getInstance().resolveError(this, response);
-                    return;
-
-                case TRANSIENT:
-                    dialogBody = getString(R.string.error_transient);
-                    break;
-
-                case OTHER:
-                default:
-                    // an unknown issue occurred, this could be a code error, or
-                    // a server side issue, log the issue, and either ask the
-                    // user to retry, or file a bug
-                    dialogBody = getString(R.string.error_unknown, error.getErrorMessage());
-                    break;
-            }
-        }
-
-        String title = error.getErrorUserTitle();
-        String message = error.getErrorUserMessage();
-        if (message == null) {
-            message = dialogBody;
-        }
-        if (title == null) {
-            title = getResources().getString(R.string.error_dialog_title);
-        }
-
-        new AlertDialog.Builder(getActivity())
-                .setPositiveButton(R.string.error_dialog_button_text, listener)
-                .setTitle(title)
-                .setMessage(message)
-                .show();
-    }
-
-    private void startPickerActivity(Uri data, int requestCode) {
-        Intent intent = new Intent();
-        intent.setData(data);
-        intent.setClass(getActivity(), PickerActivity.class);
-        startActivityForResult(intent, requestCode);
-    }
-
-    private class EatListElement extends BaseListElement {
-
-        private static final String FOOD_KEY = "food";
-        private static final String FOOD_URL_KEY = "food_url";
-
-        private final String[] foodChoices;
-        private final String[] foodUrls;
-        private String foodChoiceUrl = null;
-        private String foodChoice = null;
-
-        public EatListElement(int requestCode) {
-            super(getActivity().getResources().getDrawable(R.drawable.add_food),
-                    getActivity().getResources().getString(R.string.action_eating),
-                    null,
-                    requestCode);
-            foodChoices = getActivity().getResources().getStringArray(R.array.food_types);
-            foodUrls = getActivity().getResources().getStringArray(R.array.food_og_urls);
-        }
-
-        @Override
-        protected View.OnClickListener getOnClickListener() {
-            return new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    showMealOptions();
-                }
-            };
-        }
-
-        @Override
-        protected void populateOpenGraphAction(ShareOpenGraphAction.Builder actionBuilder) {
-            if (foodChoice != null && foodChoice.length() > 0) {
-                if (foodChoiceUrl != null && foodChoiceUrl.length() > 0) {
-                    actionBuilder.putString("meal", foodChoiceUrl);
-                } else {
-                    ShareOpenGraphObject mealObject = new ShareOpenGraphObject.Builder()
-                            .putString("og:type", MEAL_OBJECT_TYPE)
-                            .putString("og:title", foodChoice)
-                            .build();
-                    actionBuilder.putObject("meal", mealObject);
-                }
-            }
-        }
-
-        @Override
-        protected void onSaveInstanceState(Bundle bundle) {
-            if (foodChoice != null && foodChoiceUrl != null) {
-                bundle.putString(FOOD_KEY, foodChoice);
-                bundle.putString(FOOD_URL_KEY, foodChoiceUrl);
-            }
-        }
-
-        @Override
-        protected boolean restoreState(Bundle savedState) {
-            String food = savedState.getString(FOOD_KEY);
-            String foodUrl = savedState.getString(FOOD_URL_KEY);
-            if (food != null && foodUrl != null) {
-                foodChoice = food;
-                foodChoiceUrl = foodUrl;
-                setFoodText();
-                return true;
-            }
-            return false;
-        }
-
-        private void showMealOptions() {
-            String title = getActivity().getResources().getString(R.string.select_meal);
-            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-            builder.setTitle(title).
-                    setCancelable(true).
-                    setItems(foodChoices, new DialogInterface.OnClickListener() {
-                        @Override
-                        public void onClick(DialogInterface dialogInterface, int i) {
-                            foodChoiceUrl = foodUrls[i];
-                            if (foodChoiceUrl.length() == 0) {
-                                getCustomFood();
-                            } else {
-                                foodChoice = foodChoices[i];
-                                setFoodText();
-                                notifyDataChanged();
-                            }
-                        }
-                    });
-            builder.show();
-        }
-
-        private void getCustomFood() {
-            String title = getActivity().getResources().getString(R.string.enter_meal);
-            final EditText input = new EditText(getActivity());
-
-            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-            builder.setTitle(title)
-                    .setCancelable(true)
-                    .setView(input)
-                    .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
-                        @Override
-                        public void onClick(DialogInterface dialogInterface, int i) {
-                            foodChoice = input.getText().toString();
-                            setFoodText();
-                            notifyDataChanged();
-                        }
-                    })
-                    .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-                        @Override
-                        public void onClick(DialogInterface dialogInterface, int i) {
-                        }
-                    });
-            AlertDialog dialog = builder.create();
-            // always popup the keyboard when the alert dialog shows
-            dialog.getWindow().setSoftInputMode(
-                    WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
-            dialog.show();
-        }
-
-        private void setFoodText() {
-            if (foodChoice != null && foodChoice.length() > 0) {
-                setText2(foodChoice);
-                enableButtons();
-            } else {
-                setText2(getActivity().getResources().getString(R.string.action_eating_default));
-                disableButtons();
-            }
-        }
-    }
-
-    private class PeopleListElement extends BaseListElement {
-
-        private static final String FRIENDS_KEY = "friends";
-
-        private List<JSONObject> selectedUsers;
-
-        public PeopleListElement(int requestCode) {
-            super(getActivity().getResources().getDrawable(R.drawable.add_friends),
-                    getActivity().getResources().getString(R.string.action_people),
-                    null,
-                    requestCode);
-        }
-
-        @Override
-        protected View.OnClickListener getOnClickListener() {
-            return new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    if (AccessToken.getCurrentAccessToken() != null) {
-                        startPickerActivity(PickerActivity.FRIEND_PICKER, getRequestCode());
-                    } else {
-                        activity.showSplashFragment();
-                    }
-                }
-            };
-        }
-
-        @Override
-        protected void onActivityResult(Intent data) {
-            selectedUsers = ((ScrumptiousApplication) getActivity().getApplication())
-                    .getSelectedUsers();
-            setUsersText();
-            notifyDataChanged();
-        }
-
-        @Override
-        protected void populateOpenGraphAction(ShareOpenGraphAction.Builder actionBuilder) {
-            if (selectedUsers != null && !selectedUsers.isEmpty()) {
-                ArrayList<String> tags = new ArrayList<>();
-                for (JSONObject user : selectedUsers) {
-                    tags.add(user.optString("id"));
-                }
-                actionBuilder.putStringArrayList("tags", tags);
-            }
-        }
-
-        @Override
-        protected void onSaveInstanceState(Bundle bundle) {
-            if (selectedUsers != null) {
-                bundle.putByteArray(FRIENDS_KEY, getByteArray(selectedUsers));
-            }
-        }
-
-        @Override
-        protected boolean restoreState(Bundle savedState) {
-            byte[] bytes = savedState.getByteArray(FRIENDS_KEY);
-            if (bytes != null) {
-                selectedUsers = restoreByteArray(bytes);
-                setUsersText();
-                return true;
-            }
-            return false;
-        }
-
-        private void setUsersText() {
-            String text = null;
-            if (selectedUsers != null) {
-                if (selectedUsers.size() == 1) {
-                    text = String.format(getResources().getString(R.string.single_user_selected),
-                            selectedUsers.get(0).optString("name"));
-                } else if (selectedUsers.size() == 2) {
-                    text = String.format(getResources().getString(R.string.two_users_selected),
-                            selectedUsers.get(0).optString("name"),
-                            selectedUsers.get(1).optString("name"));
-                } else if (selectedUsers.size() > 2) {
-                    text = String.format(getResources().getString(R.string.multiple_users_selected),
-                            selectedUsers.get(0).optString("name"), (selectedUsers.size() - 1));
-                }
-            }
-            if (text == null) {
-                text = getResources().getString(R.string.action_people_default);
-            }
-            setText2(text);
-        }
-
-        private byte[] getByteArray(List<JSONObject> users) {
-            // convert the list of GraphUsers to a list of String where each element is
-            // the JSON representation of the GraphUser so it can be stored in a Bundle
-            List<String> usersAsString = new ArrayList<String>(users.size());
-
-            for (JSONObject user : users) {
-                usersAsString.add(user.toString());
-            }
-            try {
-                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
-                new ObjectOutputStream(outputStream).writeObject(usersAsString);
-                return outputStream.toByteArray();
-            } catch (IOException e) {
-                Log.e(TAG, "Unable to serialize users.", e);
-            }
-            return null;
-        }
-
-        private List<JSONObject> restoreByteArray(byte[] bytes) {
-            try {
-                @SuppressWarnings("unchecked")
-                List<String> usersAsString =
-                        (List<String>) (new ObjectInputStream(
-                                new ByteArrayInputStream(bytes))).readObject();
-                if (usersAsString != null) {
-                    List<JSONObject> users = new ArrayList<JSONObject>(usersAsString.size());
-                    for (String user : usersAsString) {
-                        users.add(new JSONObject(user));
-                    }
-                    return users;
-                }
-            } catch (ClassNotFoundException e) {
-                Log.e(TAG, "Unable to deserialize users.", e);
-            } catch (IOException e) {
-                Log.e(TAG, "Unable to deserialize users.", e);
-            } catch (JSONException e) {
-                Log.e(TAG, "Unable to deserialize users.", e);
-            }
-            return null;
-        }
-    }
-
-    private class LocationListElement extends BaseListElement {
-        private static final String PLACE_KEY = "place";
-
-        private JSONObject selectedPlace = null;
-
-        public LocationListElement(int requestCode) {
-            super(getActivity().getResources().getDrawable(R.drawable.add_location),
-                    getActivity().getResources().getString(R.string.action_location),
-                    null,
-                    requestCode);
-        }
-
-        @Override
-        protected View.OnClickListener getOnClickListener() {
-            return new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    if (AccessToken.getCurrentAccessToken() != null) {
-                        startPickerActivity(PickerActivity.PLACE_PICKER, getRequestCode());
-                    } else {
-                        activity.showSplashFragment();
-                    }
-                }
-            };
-        }
-
-        @Override
-        protected void onActivityResult(Intent data) {
-            selectedPlace = ((ScrumptiousApplication) getActivity().getApplication())
-                    .getSelectedPlace();
-            setPlaceText();
-            notifyDataChanged();
-        }
-
-        @Override
-        protected void populateOpenGraphAction(ShareOpenGraphAction.Builder actionBuilder) {
-            if (selectedPlace != null) {
-                actionBuilder.putString("place", selectedPlace.optString("id"));
-            }
-        }
-
-        @Override
-        protected void onSaveInstanceState(Bundle bundle) {
-            if (selectedPlace != null) {
-                bundle.putString(PLACE_KEY, selectedPlace.toString());
-            }
-        }
-
-        @Override
-        protected boolean restoreState(Bundle savedState) {
-            String place = savedState.getString(PLACE_KEY);
-            if (place != null) {
-                try {
-                    selectedPlace = new JSONObject(place);
-                    setPlaceText();
-                    return true;
-                } catch (JSONException e) {
-                    Log.e(TAG, "Unable to deserialize place.", e);
-                }
-            }
-            return false;
-        }
-
-        private void setPlaceText() {
-            String text = selectedPlace != null ? selectedPlace.optString("name") : null;
-            if (text == null) {
-                text = getResources().getString(R.string.action_location_default);
-            }
-            setText2(text);
-        }
-
-    }
-
-    private class PhotoListElement extends BaseListElement {
-        private static final int CAMERA = 0;
-        private static final int GALLERY = 1;
-        private static final String PHOTO_URI_KEY = "photo_uri";
-        private static final String TEMP_URI_KEY = "temp_uri";
-        private static final String FILE_PREFIX = "scrumptious_img_";
-        private static final String FILE_SUFFIX = ".jpg";
-
-        private Uri tempUri = null;
-
-        public PhotoListElement(int requestCode) {
-            super(getActivity().getResources().getDrawable(R.drawable.add_photo),
-                    getActivity().getResources().getString(R.string.action_photo),
-                    null,
-                    requestCode);
-            photoUri = null;
-            photoThumbnail.setImageDrawable(
-                    getActivity().getResources().getDrawable(R.drawable.placeholder_image));
-            photoThumbnail.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    showPhotoChoice();
-                }
-            });
-        }
-
-        @Override
-        protected View.OnClickListener getOnClickListener() {
-            return new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    showPhotoChoice();
-                }
-            };
-        }
-
-        @Override
-        protected void onActivityResult(Intent data) {
-            if (tempUri != null) {
-                photoUri = tempUri;
-            } else if (data != null) {
-                photoUri = data.getData();
-            }
-            setPhotoThumbnail();
-            setPhotoText();
-        }
-
-        @Override
-        protected void populateOpenGraphAction(ShareOpenGraphAction.Builder actionBuilder) {
-        }
-
-        @Override
-        protected void onSaveInstanceState(Bundle bundle) {
-            if (photoUri != null) {
-                bundle.putParcelable(PHOTO_URI_KEY, photoUri);
-            }
-            if (tempUri != null) {
-                bundle.putParcelable(TEMP_URI_KEY, tempUri);
-            }
-        }
-
-        @Override
-        protected boolean restoreState(Bundle savedState) {
-            photoUri = savedState.getParcelable(PHOTO_URI_KEY);
-            tempUri = savedState.getParcelable(TEMP_URI_KEY);
-            setPhotoText();
-            return true;
-        }
-
-        private void showPhotoChoice() {
-            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-            CharSequence camera = getResources().getString(R.string.action_photo_camera);
-            CharSequence gallery = getResources().getString(R.string.action_photo_gallery);
-            builder.setCancelable(true).
-                    setItems(new CharSequence[]{camera, gallery},
-                            new DialogInterface.OnClickListener() {
-                                @Override
-                                public void onClick(DialogInterface dialogInterface, int i) {
-                                    if (i == CAMERA) {
-                                        startCameraActivity();
-                                    } else if (i == GALLERY) {
-                                        startGalleryActivity();
-                                    }
-                                }
-                            });
-            builder.show();
-        }
-
-        private void setPhotoText() {
-            if (photoUri == null) {
-                setText2(getResources().getString(R.string.action_photo_default));
-            } else {
-                setText2(getResources().getString(R.string.action_photo_ready));
-            }
-        }
-
-        private void setPhotoThumbnail() {
-            // The selected image may be too big so scale here
-            if (runningImageTask != null &&
-                    runningImageTask.getStatus() != AsyncTask.Status.FINISHED) {
-                runningImageTask.cancel(true);
-            }
-
-            runningImageTask = new ScaleAndSetImageTask(photoUri);
-            runningImageTask.execute();
-        }
-
-        private void startCameraActivity() {
-            Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
-            tempUri = getTempUri();
-            if (tempUri != null) {
-                intent.putExtra(MediaStore.EXTRA_OUTPUT, tempUri);
-            }
-            startActivityForResult(intent, getRequestCode());
-        }
-
-        private void startGalleryActivity() {
-            tempUri = null;
-            Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
-            intent.setType("image/*");
-            String selectPicture = getResources().getString(R.string.select_picture);
-            startActivityForResult(Intent.createChooser(intent, selectPicture), getRequestCode());
-        }
-
-        private Uri getTempUri() {
-            String imgFileName = FILE_PREFIX + System.currentTimeMillis() + FILE_SUFFIX;
-
-            // Note: on an emulator, you might need to create the "Pictures" directory in
-            //         /mnt/sdcard first
-            //       % adb shell
-            //       % mkdir /mnt/sdcard/Pictures
-            File image = new File(
-                    Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES),
-                    imgFileName);
-            return Uri.fromFile(image);
-        }
-    }
-
-    private class ActionListAdapter extends ArrayAdapter<BaseListElement> {
-        private List<BaseListElement> listElements;
-
-        public ActionListAdapter(
-                Context context, int resourceId, List<BaseListElement> listElements) {
-            super(context, resourceId, listElements);
-            this.listElements = listElements;
-            for (int i = 0; i < listElements.size(); i++) {
-                listElements.get(i).setAdapter(this);
-            }
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            View view = convertView;
-            if (view == null) {
-                LayoutInflater inflater =
-                        (LayoutInflater) getActivity().getSystemService(
-                                Context.LAYOUT_INFLATER_SERVICE);
-                view = inflater.inflate(R.layout.listitem, null);
-            }
-
-            BaseListElement listElement = listElements.get(position);
-            if (listElement != null) {
-                view.setOnClickListener(listElement.getOnClickListener());
-                ImageView icon = (ImageView) view.findViewById(R.id.icon);
-                TextView text1 = (TextView) view.findViewById(R.id.text1);
-                TextView text2 = (TextView) view.findViewById(R.id.text2);
-                if (icon != null) {
-                    icon.setImageDrawable(listElement.getIcon());
-                }
-                if (text1 != null) {
-                    text1.setText(listElement.getText1());
-                }
-                if (text2 != null) {
-                    if (listElement.getText2() != null) {
-                        text2.setVisibility(View.VISIBLE);
-                        text2.setText(listElement.getText2());
-                    } else {
-                        text2.setVisibility(View.GONE);
-                    }
-                }
-            }
-            return view;
-        }
-    }
-
-    private class ScaleAndSetImageTask extends AsyncTask<Void, Void, Bitmap> {
-        private final Uri uri;
-
-        public ScaleAndSetImageTask(Uri uri) {
-            this.uri = uri;
-        }
-
-        @Override
-        protected Bitmap doInBackground(Void... params) {
-            try {
-                Bitmap bitmap = MediaStore.Images.Media.getBitmap(
-                        FacebookSdk.getApplicationContext().getContentResolver(), uri);
-                if (bitmap.getHeight() > MAX_TEXTURE_SIZE || bitmap.getWidth() > MAX_TEXTURE_SIZE) {
-                    // We need to scale the image
-                    float scale = Math.min(
-                            MAX_TEXTURE_SIZE / bitmap.getHeight(),
-                            MAX_TEXTURE_SIZE / bitmap.getWidth());
-                    Matrix matrix = new Matrix();
-                    matrix.postScale(scale, scale);
-                    bitmap = Bitmap.createBitmap(
-                            bitmap,
-                            0,
-                            0,
-                            bitmap.getWidth(),
-                            bitmap.getHeight(),
-                            matrix,
-                            false);
-                }
-                return bitmap;
-            } catch (Exception ex) {
-                return null;
-            }
-        }
-
-        protected void onPostExecute(Bitmap result) {
-            if (result != null) {
-                photoThumbnail.setImageBitmap(result);
-            } else {
-                // If we fail just try to set the image from the uri
-                photoThumbnail.setImageURI(photoUri);
-            }
-        }
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
deleted file mode 100644
index ca271c2aa..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious;
-
-import android.app.Fragment;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.login.LoginResult;
-import com.facebook.login.widget.LoginButton;
-
-public class SplashFragment extends Fragment {
-
-    private LoginButton loginButton;
-    private TextView skipLoginButton;
-    private SkipLoginCallback skipLoginCallback;
-    private CallbackManager callbackManager;
-
-    public interface SkipLoginCallback {
-        void onSkipLoginPressed();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.splash, container, false);
-
-        callbackManager = CallbackManager.Factory.create();
-        loginButton = (LoginButton) view.findViewById(R.id.login_button);
-        loginButton.setReadPermissions("user_friends");
-        loginButton.setFragment(this);
-        loginButton.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {
-            @Override
-            public void onSuccess(LoginResult loginResult) {
-                Toast.makeText(getActivity(), "Login successful", Toast.LENGTH_SHORT).show();
-            }
-
-            @Override
-            public void onCancel() {
-                Toast.makeText(getActivity(), "Login canceled", Toast.LENGTH_SHORT).show();
-            }
-
-            @Override
-            public void onError(FacebookException exception) {
-                Toast.makeText(getActivity(), "Login error", Toast.LENGTH_SHORT).show();
-            }
-        });
-
-        skipLoginButton = (TextView) view.findViewById(R.id.skip_login_button);
-        skipLoginButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (skipLoginCallback != null) {
-                    skipLoginCallback.onSkipLoginPressed();
-                }
-            }
-        });
-
-        return view;
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    public void setSkipLoginCallback(SkipLoginCallback callback) {
-        skipLoginCallback = callback;
-    }
-
-}
-
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
deleted file mode 100644
index bc47b6e3a..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
+++ /dev/null
@@ -1,344 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.picker;
-
-import android.app.Activity;
-import android.content.res.TypedArray;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.AttributeSet;
-
-import com.facebook.AccessToken;
-import com.facebook.GraphRequest;
-import com.facebook.appevents.AppEventsLogger;
-import com.facebook.FacebookException;
-import com.example.scrumptious.R;
-import com.facebook.internal.AnalyticsEvents;
-import com.facebook.internal.Validate;
-
-import org.json.JSONObject;
-
-import java.util.*;
-
-/**
- * Provides a Fragment that displays a list of a user's friends and allows one or more of the
- * friends to be selected.
- */
-public class FriendPickerFragment extends PickerFragment {
-    /**
-     * The key for a String parameter in the fragment's Intent bundle to indicate what user's
-     * friends should be shown. The default is to display the currently authenticated user's friends.
-     */
-    public static final String USER_ID_BUNDLE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.UserId";
-    /**
-     * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
-     * picker should allow more than one friend to be selected or not.
-     */
-    public static final String MULTI_SELECT_BUNDLE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.MultiSelect";
-    /**
-     * The key for a String parameter in the fragment's Intent bundle to indicate the type of friend picker to use.
-     * This value is case sensitive, and must match the enum @{link FriendPickerType}
-     */
-    public static final String FRIEND_PICKER_TYPE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.FriendPickerType";
-
-    public enum FriendPickerType {
-        FRIENDS("/friends"),
-        TAGGABLE_FRIENDS("/taggable_friends"),
-        INVITABLE_FRIENDS("/invitable_friends");
-
-        private final String requestPath;
-
-        FriendPickerType(String path) {
-            this.requestPath = path;
-        }
-
-        String getRequestPath() {
-            return requestPath;
-        }
-    }
-
-    private static final String ID = "id";
-    private static final String NAME = "name";
-
-    private String userId;
-
-    private boolean multiSelect = true;
-
-    // default to Friends for backwards compatibility
-    private FriendPickerType friendPickerType = FriendPickerType.FRIENDS;
-
-    private List<String> preSelectedFriendIds = new ArrayList<String>();
-
-    /**
-     * Default constructor. Creates a Fragment with all default properties.
-     */
-    public FriendPickerFragment() {
-        super(R.layout.picker_friendpickerfragment);
-    }
-
-    /**
-     * Gets the ID of the user whose friends should be displayed. If null, the default is to
-     * show the currently authenticated user's friends.
-     * @return the user ID, or null
-     */
-    public String getUserId() {
-        return userId;
-    }
-
-    /**
-     * Sets the ID of the user whose friends should be displayed. If null, the default is to
-     * show the currently authenticated user's friends.
-     * @param userId     the user ID, or null
-     */
-    public void setUserId(String userId) {
-        this.userId = userId;
-    }
-
-    /**
-     * Gets whether the user can select multiple friends, or only one friend.
-     * @return true if the user can select multiple friends, false if only one friend
-     */
-    public boolean getMultiSelect() {
-        return multiSelect;
-    }
-
-    /**
-     * Sets whether the user can select multiple friends, or only one friend.
-     * @param multiSelect    true if the user can select multiple friends, false if only one friend
-     */
-    public void setMultiSelect(boolean multiSelect) {
-        if (this.multiSelect != multiSelect) {
-            this.multiSelect = multiSelect;
-            setSelectionStrategy(createSelectionStrategy());
-        }
-    }
-
-    /**
-     * Sets the friend picker type for this fragment.
-     * @param type the type of friend picker to use.
-     */
-    public void setFriendPickerType(FriendPickerType type) {
-        this.friendPickerType = type;
-    }
-
-    /**
-     * Sets the list of friends for pre selection. These friends will be selected by default.
-     * @param userIds list of friends as ids
-     */
-    public void setSelectionByIds(List<String> userIds) {
-        preSelectedFriendIds.addAll(userIds);
-    }
-
-    /**
-     * Sets the list of friends for pre selection. These friends will be selected by default.
-     * @param userIds list of friends as ids
-     */
-    public void setSelectionByIds(String... userIds) {
-        setSelectionByIds(Arrays.asList(userIds));
-    }
-
-    /**
-     * Sets the list of friends for pre selection. These friends will be selected by default.
-     * @param graphUsers list of friends as GraphUsers
-     */
-    public void setSelection(JSONObject... graphUsers) {
-        setSelection(Arrays.asList(graphUsers));
-    }
-
-    /**
-     * Sets the list of friends for pre selection. These friends will be selected by default.
-     * @param graphUsers list of friends as GraphUsers
-     */
-    public void setSelection(List<JSONObject> graphUsers) {
-        List<String> userIds = new ArrayList<String>();
-        for(JSONObject graphUser: graphUsers) {
-            String id = graphUser.optString("id");
-            Validate.notNullOrEmpty(id, "id");
-            userIds.add(id);
-        }
-        setSelectionByIds(userIds);
-    }
-
-    /**
-     * Gets the currently-selected list of users.
-     * @return the currently-selected list of users
-     */
-    public List<JSONObject> getSelection() {
-        return getSelectedGraphObjects();
-    }
-
-    @Override
-    public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState) {
-        super.onInflate(activity, attrs, savedInstanceState);
-        TypedArray a = activity.obtainStyledAttributes(attrs, R.styleable.picker_friend_picker_fragment);
-
-        setMultiSelect(a.getBoolean(R.styleable.picker_friend_picker_fragment_multi_select, multiSelect));
-
-        a.recycle();
-    }
-
-    @Override
-    public void setSettingsFromBundle(Bundle inState) {
-        super.setSettingsFromBundle(inState);
-        if (inState != null) {
-            if (inState.containsKey(USER_ID_BUNDLE_KEY)) {
-                setUserId(inState.getString(USER_ID_BUNDLE_KEY));
-            }
-            setMultiSelect(inState.getBoolean(MULTI_SELECT_BUNDLE_KEY, multiSelect));
-            if (inState.containsKey(FRIEND_PICKER_TYPE_KEY)) {
-                try {
-                    friendPickerType = FriendPickerType.valueOf(inState.getString(FRIEND_PICKER_TYPE_KEY));
-                } catch (Exception e) {
-                    // NOOP
-                }
-            }
-        }
-    }
-
-    void saveSettingsToBundle(Bundle outState) {
-        super.saveSettingsToBundle(outState);
-
-        outState.putString(USER_ID_BUNDLE_KEY, userId);
-        outState.putBoolean(MULTI_SELECT_BUNDLE_KEY, multiSelect);
-    }
-
-    @Override
-    PickerFragmentAdapter createAdapter() {
-        PickerFragmentAdapter adapter = new PickerFragmentAdapter(this.getActivity()) {
-            @Override
-            protected int getGraphObjectRowLayoutId(JSONObject graphObject) {
-                return R.layout.picker_list_row;
-            }
-
-            @Override
-            protected int getDefaultPicture() {
-                return R.drawable.profile_default_icon;
-            }
-
-        };
-        adapter.setShowCheckbox(true);
-        adapter.setShowPicture(getShowPictures());
-        adapter.setSortFields(Arrays.asList(new String[]{NAME}));
-        adapter.setGroupByField(NAME);
-
-        return adapter;
-    }
-
-    @Override
-    LoadingStrategy createLoadingStrategy() {
-        return new ImmediateLoadingStrategy();
-    }
-
-    @Override
-    SelectionStrategy createSelectionStrategy() {
-        return multiSelect ? new MultiSelectionStrategy() : new SingleSelectionStrategy();
-    }
-
-    @Override
-    GraphRequest getRequestForLoadData() {
-        if (adapter == null) {
-            throw new FacebookException("Can't issue requests until Fragment has been created.");
-        }
-
-        String userToFetch = (userId != null) ? userId : "me";
-        return createRequest(userToFetch, extraFields);
-    }
-
-    @Override
-    String getDefaultTitleText() {
-        return getResources().getString(R.string.choose_friends);
-    }
-
-    @Override
-    void logAppEvents(boolean doneButtonClicked) {
-        AppEventsLogger logger = AppEventsLogger.newLogger(this.getActivity(),
-                AccessToken.getCurrentAccessToken().getToken());
-        Bundle parameters = new Bundle();
-
-        // If Done was clicked, we know this completed successfully. If not, we don't know (caller might have
-        // dismissed us in response to selection changing, or user might have hit back button). Either way
-        // we'll log the number of selections.
-        String outcome = doneButtonClicked ? AnalyticsEvents.PARAMETER_DIALOG_OUTCOME_VALUE_COMPLETED :
-                AnalyticsEvents.PARAMETER_DIALOG_OUTCOME_VALUE_UNKNOWN;
-        parameters.putString(AnalyticsEvents.PARAMETER_DIALOG_OUTCOME, outcome);
-        parameters.putInt("num_friends_picked", getSelection().size());
-
-        logger.logSdkEvent(AnalyticsEvents.EVENT_FRIEND_PICKER_USAGE, null, parameters);
-    }
-
-    @Override
-    public void loadData(boolean forceReload) {
-        super.loadData(forceReload);
-        setSelectedGraphObjects(preSelectedFriendIds);
-    }
-
-    private GraphRequest createRequest(String userID, Set<String> extraFields) {
-        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        GraphRequest request = GraphRequest.newGraphPathRequest(
-                accessToken, userID + friendPickerType.getRequestPath(), null);
-
-        Set<String> fields = new HashSet<String>(extraFields);
-        String[] requiredFields = new String[]{
-                ID,
-                NAME
-        };
-        fields.addAll(Arrays.asList(requiredFields));
-
-        String pictureField = adapter.getPictureFieldSpecifier();
-        if (pictureField != null) {
-            fields.add(pictureField);
-        }
-
-        Bundle parameters = request.getParameters();
-        parameters.putString("fields", TextUtils.join(",", fields));
-        request.setParameters(parameters);
-
-        return request;
-    }
-
-    private class ImmediateLoadingStrategy extends LoadingStrategy {
-        @Override
-        protected void onLoadFinished(GraphObjectPagingLoader loader, GraphObjectCursor data) {
-            super.onLoadFinished(loader, data);
-
-            // We could be called in this state if we are clearing data or if we are being re-attached
-            // in the middle of a query.
-            if (data == null || loader.isLoading()) {
-                return;
-            }
-
-            if (data.areMoreObjectsAvailable()) {
-                // We got results, but more are available.
-                followNextLink();
-            } else {
-                // We finished loading results.
-                hideActivityCircle();
-            }
-        }
-
-        private void followNextLink() {
-            // This may look redundant, but this causes the circle to be alpha-dimmed if we have results.
-            displayActivityCircle();
-
-            loader.followNextLink();
-        }
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
deleted file mode 100644
index 235b4b6b6..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
+++ /dev/null
@@ -1,821 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.picker;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.net.Uri;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.ViewStub;
-import android.widget.*;
-import com.facebook.FacebookException;
-import com.example.scrumptious.R;
-import com.facebook.internal.ImageDownloader;
-import com.facebook.internal.ImageRequest;
-import com.facebook.internal.ImageResponse;
-import com.facebook.internal.Utility;
-
-import org.json.JSONObject;
-
-import java.text.Collator;
-import java.util.*;
-
-class GraphObjectAdapter extends BaseAdapter implements SectionIndexer {
-    private static final int DISPLAY_SECTIONS_THRESHOLD = 1;
-    private static final int HEADER_VIEW_TYPE = 0;
-    private static final int GRAPH_OBJECT_VIEW_TYPE = 1;
-    private static final int ACTIVITY_CIRCLE_VIEW_TYPE = 2;
-    private static final int MAX_PREFETCHED_PICTURES = 20;
-
-    private static final String ID = "id";
-    private static final String NAME = "name";
-    private static final String PICTURE = "picture";
-
-    private final Map<String, ImageRequest> pendingRequests = new HashMap<String, ImageRequest>();
-    private final LayoutInflater inflater;
-    private List<String> sectionKeys = new ArrayList<String>();
-    private Map<String, ArrayList<JSONObject>> graphObjectsBySection = new HashMap<String, ArrayList<JSONObject>>();
-    private Map<String, JSONObject> graphObjectsById = new HashMap<String, JSONObject>();
-    private boolean displaySections;
-    private List<String> sortFields;
-    private String groupByField;
-    private boolean showPicture;
-    private boolean showCheckbox;
-    private Filter filter;
-    private DataNeededListener dataNeededListener;
-    private GraphObjectCursor cursor;
-    private Context context;
-    private Map<String, ImageResponse> prefetchedPictureCache = new HashMap<String, ImageResponse>();
-    private ArrayList<String> prefetchedProfilePictureIds = new ArrayList<String>();
-    private OnErrorListener onErrorListener;
-
-    public interface DataNeededListener {
-        public void onDataNeeded();
-    }
-
-    public interface OnErrorListener {
-        void onError(GraphObjectAdapter adapter, FacebookException error);
-    }
-
-    public static class SectionAndItem {
-        public String sectionKey;
-        public JSONObject graphObject;
-
-        public enum Type {
-            GRAPH_OBJECT,
-            SECTION_HEADER,
-            ACTIVITY_CIRCLE
-        }
-
-        public SectionAndItem(String sectionKey, JSONObject graphObject) {
-            this.sectionKey = sectionKey;
-            this.graphObject = graphObject;
-        }
-
-        public Type getType() {
-            if (sectionKey == null) {
-                return Type.ACTIVITY_CIRCLE;
-            } else if (graphObject == null) {
-                return Type.SECTION_HEADER;
-            } else {
-                return Type.GRAPH_OBJECT;
-            }
-        }
-    }
-
-    interface Filter {
-        boolean includeItem(JSONObject graphObject);
-    }
-
-    public GraphObjectAdapter(Context context) {
-        this.context = context;
-        this.inflater = LayoutInflater.from(context);
-    }
-
-    public List<String> getSortFields() {
-        return sortFields;
-    }
-
-    public void setSortFields(List<String> sortFields) {
-        this.sortFields = sortFields;
-    }
-
-    public String getGroupByField() {
-        return groupByField;
-    }
-
-    public void setGroupByField(String groupByField) {
-        this.groupByField = groupByField;
-    }
-
-    public boolean getShowPicture() {
-        return showPicture;
-    }
-
-    public void setShowPicture(boolean showPicture) {
-        this.showPicture = showPicture;
-    }
-
-    public boolean getShowCheckbox() {
-        return showCheckbox;
-    }
-
-    public void setShowCheckbox(boolean showCheckbox) {
-        this.showCheckbox = showCheckbox;
-    }
-
-    public DataNeededListener getDataNeededListener() {
-        return dataNeededListener;
-    }
-
-    public void setDataNeededListener(DataNeededListener dataNeededListener) {
-        this.dataNeededListener = dataNeededListener;
-    }
-
-    public OnErrorListener getOnErrorListener() {
-        return onErrorListener;
-    }
-
-    public void setOnErrorListener(OnErrorListener onErrorListener) {
-        this.onErrorListener = onErrorListener;
-    }
-
-    public GraphObjectCursor getCursor() {
-        return cursor;
-    }
-
-    public boolean changeCursor(GraphObjectCursor cursor) {
-        if (this.cursor == cursor) {
-            return false;
-        }
-        if (this.cursor != null) {
-            this.cursor.close();
-        }
-        this.cursor = cursor;
-
-        rebuildAndNotify();
-        return true;
-    }
-
-    public void rebuildAndNotify() {
-        rebuildSections();
-        notifyDataSetChanged();
-    }
-
-    public void prioritizeViewRange(int firstVisibleItem, int lastVisibleItem, int prefetchBuffer) {
-        if ((lastVisibleItem < firstVisibleItem) || (sectionKeys.size() == 0)) {
-            return;
-        }
-
-        // We want to prioritize requests for items which are visible but do not have pictures
-        // loaded yet. We also want to pre-fetch pictures for items which are not yet visible
-        // but are within a buffer on either side of the visible items, on the assumption that
-        // they will be visible soon. For these latter items, we'll store the images in memory
-        // in the hopes we can immediately populate their image view when needed.
-
-        // Prioritize the requests in reverse order since each call to prioritizeRequest will just
-        // move it to the front of the queue. And we want the earliest ones in the range to be at
-        // the front of the queue, so all else being equal, the list will appear to populate from
-        // the top down.
-        for (int i = lastVisibleItem; i >= 0; i--) {
-            SectionAndItem sectionAndItem = getSectionAndItem(i);
-            if (sectionAndItem.graphObject != null) {
-                String id = getIdOfGraphObject(sectionAndItem.graphObject);
-                ImageRequest request = pendingRequests.get(id);
-                if (request != null) {
-                    ImageDownloader.prioritizeRequest(request);
-                }
-            }
-        }
-
-        // For items which are not visible, but within the buffer on either side, we want to
-        // fetch those items and store them in a small in-memory cache of bitmaps.
-        int start = Math.max(0, firstVisibleItem - prefetchBuffer);
-        int end = Math.min(lastVisibleItem + prefetchBuffer, getCount() - 1);
-        ArrayList<JSONObject> graphObjectsToPrefetchPicturesFor = new ArrayList<JSONObject>();
-        // Add the IDs before and after the visible range.
-        for (int i = start; i < firstVisibleItem; ++i) {
-            SectionAndItem sectionAndItem = getSectionAndItem(i);
-            if (sectionAndItem.graphObject != null) {
-                graphObjectsToPrefetchPicturesFor.add(sectionAndItem.graphObject);
-            }
-        }
-        for (int i = lastVisibleItem + 1; i <= end; ++i) {
-            SectionAndItem sectionAndItem = getSectionAndItem(i);
-            if (sectionAndItem.graphObject != null) {
-                graphObjectsToPrefetchPicturesFor.add(sectionAndItem.graphObject);
-            }
-        }
-        for (JSONObject graphObject : graphObjectsToPrefetchPicturesFor) {
-            Uri uri = getPictureUriOfGraphObject(graphObject);
-            final String id = getIdOfGraphObject(graphObject);
-
-            // This URL already have been requested for pre-fetching, but we want to act in an LRU manner, so move
-            // it to the end of the list regardless.
-            boolean alreadyPrefetching = prefetchedProfilePictureIds.remove(id);
-            prefetchedProfilePictureIds.add(id);
-
-            // If we've already requested it for pre-fetching, no need to do so again.
-            if (!alreadyPrefetching) {
-                downloadProfilePicture(id, uri, null);
-            }
-        }
-    }
-
-    protected String getSectionKeyOfGraphObject(JSONObject graphObject) {
-        String result = null;
-
-        if (groupByField != null) {
-            result = graphObject.optString(groupByField);
-            if (result != null && result.length() > 0) {
-                result = result.substring(0, 1).toUpperCase();
-            }
-        }
-
-        return (result != null) ? result : "";
-    }
-
-    protected CharSequence getTitleOfGraphObject(JSONObject graphObject) {
-        return graphObject.optString(NAME);
-    }
-
-    protected CharSequence getSubTitleOfGraphObject(JSONObject graphObject) {
-        return null;
-    }
-
-    protected Uri getPictureUriOfGraphObject(JSONObject graphObject) {
-        String uri = null;
-        Object o = graphObject.opt(PICTURE);
-        if (o instanceof String) {
-            uri = (String) o;
-        } else if (o instanceof JSONObject) {
-            JSONObject data = ((JSONObject) o).optJSONObject("data");
-            uri = data != null ? data.optString("url") : null;
-        }
-
-        if (uri != null) {
-            return Uri.parse(uri);
-        }
-        return null;
-    }
-
-    protected View getSectionHeaderView(String sectionHeader, View convertView, ViewGroup parent) {
-        TextView result = (TextView) convertView;
-
-        if (result == null) {
-            result = (TextView) inflater.inflate(R.layout.picker_list_section_header, null);
-        }
-
-        result.setText(sectionHeader);
-
-        return result;
-    }
-
-    protected View getGraphObjectView(JSONObject graphObject, View convertView, ViewGroup parent) {
-        View result = convertView;
-
-        if (result == null) {
-            result = createGraphObjectView(graphObject);
-        }
-
-        populateGraphObjectView(result, graphObject);
-        return result;
-    }
-
-    private View getActivityCircleView(View convertView, ViewGroup parent) {
-        View result = convertView;
-
-        if (result == null) {
-            result = inflater.inflate(R.layout.picker_activity_circle_row, null);
-        }
-        ProgressBar activityCircle = (ProgressBar) result.findViewById(R.id.com_facebook_picker_row_activity_circle);
-        activityCircle.setVisibility(View.VISIBLE);
-
-        return result;
-    }
-
-    protected int getGraphObjectRowLayoutId(JSONObject graphObject) {
-        return R.layout.picker_list_row;
-    }
-
-    protected int getDefaultPicture() {
-        return R.drawable.profile_default_icon;
-    }
-
-    protected View createGraphObjectView(JSONObject graphObject) {
-        View result = inflater.inflate(getGraphObjectRowLayoutId(graphObject), null);
-
-        ViewStub checkboxStub = (ViewStub) result.findViewById(R.id.com_facebook_picker_checkbox_stub);
-        if (checkboxStub != null) {
-            if (!getShowCheckbox()) {
-                checkboxStub.setVisibility(View.GONE);
-            } else {
-                CheckBox checkBox = (CheckBox) checkboxStub.inflate();
-                updateCheckboxState(checkBox, false);
-            }
-        }
-
-        ViewStub profilePicStub = (ViewStub) result.findViewById(R.id.com_facebook_picker_profile_pic_stub);
-        if (!getShowPicture()) {
-            profilePicStub.setVisibility(View.GONE);
-        } else {
-            ImageView imageView = (ImageView) profilePicStub.inflate();
-            imageView.setVisibility(View.VISIBLE);
-        }
-
-        return result;
-    }
-
-    protected void populateGraphObjectView(View view, JSONObject graphObject) {
-        String id = getIdOfGraphObject(graphObject);
-        view.setTag(id);
-
-        CharSequence title = getTitleOfGraphObject(graphObject);
-        TextView titleView = (TextView) view.findViewById(R.id.com_facebook_picker_title);
-        if (titleView != null) {
-            titleView.setText(title, TextView.BufferType.SPANNABLE);
-        }
-
-        CharSequence subtitle = getSubTitleOfGraphObject(graphObject);
-        TextView subtitleView = (TextView) view.findViewById(R.id.picker_subtitle);
-        if (subtitleView != null) {
-            if (subtitle != null) {
-                subtitleView.setText(subtitle, TextView.BufferType.SPANNABLE);
-                subtitleView.setVisibility(View.VISIBLE);
-            } else {
-                subtitleView.setVisibility(View.GONE);
-            }
-        }
-
-        if (getShowCheckbox()) {
-            CheckBox checkBox = (CheckBox) view.findViewById(R.id.com_facebook_picker_checkbox);
-            updateCheckboxState(checkBox, isGraphObjectSelected(id));
-        }
-
-        if (getShowPicture()) {
-            Uri pictureURI = getPictureUriOfGraphObject(graphObject);
-
-            if (pictureURI != null) {
-                ImageView profilePic = (ImageView) view.findViewById(R.id.com_facebook_picker_image);
-
-                // See if we have already pre-fetched this; if not, download it.
-                if (prefetchedPictureCache.containsKey(id)) {
-                    ImageResponse response = prefetchedPictureCache.get(id);
-                    profilePic.setImageBitmap(response.getBitmap());
-                    profilePic.setTag(response.getRequest().getImageUri());
-                } else {
-                    downloadProfilePicture(id, pictureURI, profilePic);
-                }
-            }
-        }
-    }
-
-    /**
-     * @throws FacebookException if the GraphObject doesn't have an ID.
-     */
-    String getIdOfGraphObject(JSONObject graphObject) {
-        String id = graphObject.optString(ID);
-        if (id != null) {
-            return id;
-        }
-        throw new FacebookException("Received an object without an ID.");
-    }
-
-    boolean filterIncludesItem(JSONObject graphObject) {
-        return filter == null || filter.includeItem(graphObject);
-    }
-
-    Filter getFilter() {
-        return filter;
-    }
-
-    void setFilter(Filter filter) {
-        this.filter = filter;
-    }
-
-    boolean isGraphObjectSelected(String graphObjectId) {
-        return false;
-    }
-
-    void updateCheckboxState(CheckBox checkBox, boolean graphObjectSelected) {
-        // Default is no-op
-    }
-
-    String getPictureFieldSpecifier() {
-        // How big is our image?
-        View view = createGraphObjectView(null);
-        ImageView picture = (ImageView) view.findViewById(R.id.com_facebook_picker_image);
-        if (picture == null) {
-            return null;
-        }
-
-        // Note: these dimensions are in pixels, not dips
-        ViewGroup.LayoutParams layoutParams = picture.getLayoutParams();
-        return String.format(Locale.US, "picture.height(%d).width(%d)", layoutParams.height, layoutParams.width);
-    }
-
-
-    private boolean shouldShowActivityCircleCell() {
-        // We show the "more data" activity circle cell if we have a listener to request more data,
-        // we are expecting more data, and we have some data already (i.e., not on a fresh query).
-        return (cursor != null) && cursor.areMoreObjectsAvailable() && (dataNeededListener != null) && !isEmpty();
-    }
-
-    private void rebuildSections() {
-        sectionKeys = new ArrayList<String>();
-        graphObjectsBySection = new HashMap<String, ArrayList<JSONObject>>();
-        graphObjectsById = new HashMap<String, JSONObject>();
-        displaySections = false;
-
-        if (cursor == null || cursor.getCount() == 0) {
-            return;
-        }
-
-        int objectsAdded = 0;
-        cursor.moveToFirst();
-        do {
-            JSONObject graphObject = cursor.getGraphObject();
-
-            if (!filterIncludesItem(graphObject)) {
-                continue;
-            }
-
-            objectsAdded++;
-
-            String sectionKeyOfItem = getSectionKeyOfGraphObject(graphObject);
-            if (!graphObjectsBySection.containsKey(sectionKeyOfItem)) {
-                sectionKeys.add(sectionKeyOfItem);
-                graphObjectsBySection.put(sectionKeyOfItem, new ArrayList<JSONObject>());
-            }
-            List<JSONObject> section = graphObjectsBySection.get(sectionKeyOfItem);
-            section.add(graphObject);
-
-            graphObjectsById.put(getIdOfGraphObject(graphObject), graphObject);
-        } while (cursor.moveToNext());
-
-        if (sortFields != null) {
-            final Collator collator = Collator.getInstance();
-            for (List<JSONObject> section : graphObjectsBySection.values()) {
-                Collections.sort(section, new Comparator<JSONObject>() {
-                    @Override
-                    public int compare(JSONObject a, JSONObject b) {
-                        return compareGraphObjects(a, b, sortFields, collator);
-                    }
-                });
-            }
-        }
-
-        Collections.sort(sectionKeys, Collator.getInstance());
-
-        displaySections = sectionKeys.size() > 1 && objectsAdded > DISPLAY_SECTIONS_THRESHOLD;
-    }
-
-    SectionAndItem getSectionAndItem(int position) {
-        if (sectionKeys.size() == 0) {
-            return null;
-        }
-        String sectionKey = null;
-        JSONObject graphObject = null;
-
-        if (!displaySections) {
-            sectionKey = sectionKeys.get(0);
-            List<JSONObject> section = graphObjectsBySection.get(sectionKey);
-            if (position >= 0 && position < section.size()) {
-                graphObject = graphObjectsBySection.get(sectionKey).get(position);
-            } else {
-                // We are off the end; we must be adding an activity circle to indicate more data is coming.
-                assert dataNeededListener != null && cursor.areMoreObjectsAvailable();
-                // We return null for both to indicate this.
-                return new SectionAndItem(null, null);
-            }
-        } else {
-            // Count through the sections; the "0" position in each section is the header. We decrement
-            // position each time we skip forward a certain number of elements, including the header.
-            for (String key : sectionKeys) {
-                // Decrement if we skip over the header
-                if (position-- == 0) {
-                    sectionKey = key;
-                    break;
-                }
-
-                List<JSONObject> section = graphObjectsBySection.get(key);
-                if (position < section.size()) {
-                    // The position is somewhere in this section. Get the corresponding graph object.
-                    sectionKey = key;
-                    graphObject = section.get(position);
-                    break;
-                }
-                // Decrement by as many items as we skipped over
-                position -= section.size();
-            }
-        }
-        if (sectionKey != null) {
-            // Note: graphObject will be null if this represents a section header.
-            return new SectionAndItem(sectionKey, graphObject);
-        } else {
-            throw new IndexOutOfBoundsException("position");
-        }
-    }
-
-    int getPosition(String sectionKey, JSONObject graphObject) {
-        int position = 0;
-        boolean found = false;
-
-        // First find the section key and increment position one for each header we will render;
-        // increment by the size of each section prior to the one we want.
-        for (String key : sectionKeys) {
-            if (displaySections) {
-                position++;
-            }
-            if (key.equals(sectionKey)) {
-                found = true;
-                break;
-            } else {
-                position += graphObjectsBySection.get(key).size();
-            }
-        }
-
-        if (!found) {
-            return -1;
-        } else if (graphObject == null) {
-            // null represents the header for a section; we counted this header in position earlier,
-            // so subtract it back out.
-            return position - (displaySections ? 1 : 0);
-        }
-
-        // Now find index of this item within that section.
-        for (JSONObject t : graphObjectsBySection.get(sectionKey)) {
-            if (Utility.hasSameId(t, graphObject)) {
-                return position;
-            }
-            position++;
-        }
-        return -1;
-    }
-
-    @Override
-    public boolean isEmpty() {
-        // We'll never populate sectionKeys unless we have at least one object.
-        return sectionKeys.size() == 0;
-    }
-
-    @Override
-    public int getCount() {
-        if (sectionKeys.size() == 0) {
-            return 0;
-        }
-
-        // If we are not displaying sections, we don't display a header; otherwise, we have one header per item in
-        // addition to the actual items.
-        int count = (displaySections) ? sectionKeys.size() : 0;
-        for (List<JSONObject> section : graphObjectsBySection.values()) {
-            count += section.size();
-        }
-
-        // If we should show a cell with an activity circle indicating more data is coming, add it to the count.
-        if (shouldShowActivityCircleCell()) {
-            ++count;
-        }
-
-        return count;
-    }
-
-    @Override
-    public boolean areAllItemsEnabled() {
-        return displaySections;
-    }
-
-    @Override
-    public boolean hasStableIds() {
-        return true;
-    }
-
-    @Override
-    public boolean isEnabled(int position) {
-        SectionAndItem sectionAndItem = getSectionAndItem(position);
-        return sectionAndItem.getType() == SectionAndItem.Type.GRAPH_OBJECT;
-    }
-
-    @Override
-    public Object getItem(int position) {
-        SectionAndItem sectionAndItem = getSectionAndItem(position);
-        return (sectionAndItem.getType() == SectionAndItem.Type.GRAPH_OBJECT) ? sectionAndItem.graphObject : null;
-    }
-
-    @Override
-    public long getItemId(int position) {
-        // We assume IDs that can be converted to longs. If this is not the case for certain types of
-        // GraphObjects, subclasses should override this to return, e.g., position, and override hasStableIds
-        // to return false.
-        SectionAndItem sectionAndItem = getSectionAndItem(position);
-        if (sectionAndItem != null && sectionAndItem.graphObject != null) {
-            String id = getIdOfGraphObject(sectionAndItem.graphObject);
-            if (id != null) {
-                try {
-                    return Long.parseLong(id);
-                } catch (NumberFormatException e) {
-                    // NOOP
-                }
-            }
-        }
-        return 0;
-    }
-
-    @Override
-    public int getViewTypeCount() {
-        return 3;
-    }
-
-    @Override
-    public int getItemViewType(int position) {
-        SectionAndItem sectionAndItem = getSectionAndItem(position);
-        switch (sectionAndItem.getType()) {
-            case SECTION_HEADER:
-                return HEADER_VIEW_TYPE;
-            case GRAPH_OBJECT:
-                return GRAPH_OBJECT_VIEW_TYPE;
-            case ACTIVITY_CIRCLE:
-                return ACTIVITY_CIRCLE_VIEW_TYPE;
-            default:
-                throw new FacebookException("Unexpected type of section and item.");
-        }
-    }
-
-    @Override
-    public View getView(int position, View convertView, ViewGroup parent) {
-        SectionAndItem sectionAndItem = getSectionAndItem(position);
-
-        switch (sectionAndItem.getType()) {
-            case SECTION_HEADER:
-                return getSectionHeaderView(sectionAndItem.sectionKey, convertView, parent);
-            case GRAPH_OBJECT:
-                return getGraphObjectView(sectionAndItem.graphObject, convertView, parent);
-            case ACTIVITY_CIRCLE:
-                // If we get a request for this view, it means we need more data.
-                assert cursor.areMoreObjectsAvailable() && (dataNeededListener != null);
-                dataNeededListener.onDataNeeded();
-                return getActivityCircleView(convertView, parent);
-            default:
-                throw new FacebookException("Unexpected type of section and item.");
-        }
-    }
-
-    @Override
-    public Object[] getSections() {
-        if (displaySections) {
-            return sectionKeys.toArray();
-        } else {
-            return new Object[0];
-        }
-    }
-
-    @Override
-    public int getPositionForSection(int section) {
-        if (displaySections) {
-            section = Math.max(0, Math.min(section, sectionKeys.size() - 1));
-            if (section < sectionKeys.size()) {
-                return getPosition(sectionKeys.get(section), null);
-            }
-        }
-        return 0;
-    }
-
-    @Override
-    public int getSectionForPosition(int position) {
-        SectionAndItem sectionAndItem = getSectionAndItem(position);
-        if (sectionAndItem != null &&
-                sectionAndItem.getType() != SectionAndItem.Type.ACTIVITY_CIRCLE) {
-            return Math.max(0, Math.min(sectionKeys.indexOf(sectionAndItem.sectionKey), sectionKeys.size() - 1));
-        }
-        return 0;
-    }
-
-    public List<JSONObject> getGraphObjectsById(Collection<String> ids) {
-        Set<String> idSet = new HashSet<String>();
-        idSet.addAll(ids);
-
-        ArrayList<JSONObject> result = new ArrayList<JSONObject>(idSet.size());
-        for (String id : idSet) {
-            JSONObject graphObject = graphObjectsById.get(id);
-            if (graphObject != null) {
-                result.add(graphObject);
-            }
-        }
-
-        return result;
-    }
-
-    private void downloadProfilePicture(
-            final String profileId,
-            Uri pictureUri,
-            final ImageView imageView) {
-        if (pictureUri == null) {
-            return;
-        }
-
-        // If we don't have an imageView, we are pre-fetching this image to store in-memory because we
-        // think the user might scroll to its corresponding list row. If we do have an imageView, we
-        // only want to queue a download if the view's tag isn't already set to the URL (which would mean
-        // it's already got the correct picture).
-        boolean prefetching = imageView == null;
-        if (prefetching || !pictureUri.equals(imageView.getTag())) {
-            if (!prefetching) {
-                // Setting the tag to the profile ID indicates that we're currently downloading the
-                // picture for this profile; we'll set it to the actual picture URL when complete.
-                imageView.setTag(profileId);
-                imageView.setImageResource(getDefaultPicture());
-            }
-
-            ImageRequest.Builder builder = new ImageRequest.Builder(
-                    context.getApplicationContext(),
-                    pictureUri)
-                    .setCallerTag(this)
-                    .setCallback(
-                            new ImageRequest.Callback() {
-                                @Override
-                                public void onCompleted(ImageResponse response) {
-                                    processImageResponse(response, profileId, imageView);
-                                }
-                            });
-
-            ImageRequest newRequest = builder.build();
-            pendingRequests.put(profileId, newRequest);
-
-            ImageDownloader.downloadAsync(newRequest);
-        }
-    }
-
-    private void callOnErrorListener(Exception exception) {
-        if (onErrorListener != null) {
-            if (!(exception instanceof FacebookException)) {
-                exception = new FacebookException(exception);
-            }
-            onErrorListener.onError(this, (FacebookException) exception);
-        }
-    }
-
-    private void processImageResponse(ImageResponse response, String graphObjectId, ImageView imageView) {
-        pendingRequests.remove(graphObjectId);
-        if (response.getError() != null) {
-            callOnErrorListener(response.getError());
-        }
-
-        if (imageView == null) {
-            // This was a pre-fetch request.
-            if (response.getBitmap() != null) {
-                // Is the cache too big?
-                if (prefetchedPictureCache.size() >= MAX_PREFETCHED_PICTURES) {
-                    // Find the oldest one and remove it.
-                    String oldestId = prefetchedProfilePictureIds.remove(0);
-                    prefetchedPictureCache.remove(oldestId);
-                }
-                prefetchedPictureCache.put(graphObjectId, response);
-            }
-        } else if (graphObjectId.equals(imageView.getTag())) {
-            Exception error = response.getError();
-            Bitmap bitmap = response.getBitmap();
-            if (error == null && bitmap != null) {
-                imageView.setImageBitmap(bitmap);
-                imageView.setTag(response.getRequest().getImageUri());
-            }
-        }
-    }
-
-    private static int compareGraphObjects(JSONObject a, JSONObject b, Collection<String> sortFields,
-            Collator collator) {
-        for (String sortField : sortFields) {
-            String sa = a.optString(sortField);
-            String sb = b.optString(sortField);
-
-            if (sa != null && sb != null) {
-                int result = collator.compare(sa, sb);
-                if (result != 0) {
-                    return result;
-                }
-            } else if (!(sa == null && sb == null)) {
-                return (sa == null) ? -1 : 1;
-            }
-        }
-        return 0;
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
deleted file mode 100644
index 4a8ee404d..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
+++ /dev/null
@@ -1,142 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.picker;
-
-import android.database.CursorIndexOutOfBoundsException;
-import org.json.JSONArray;
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-class GraphObjectCursor {
-    private int pos = -1;
-    private boolean closed = false;
-    private List<JSONObject> graphObjects = new ArrayList<JSONObject>();
-    private boolean moreObjectsAvailable = false;
-
-    GraphObjectCursor() {
-    }
-
-    GraphObjectCursor(GraphObjectCursor other) {
-        pos = other.pos;
-        closed = other.closed;
-        graphObjects = new ArrayList<JSONObject>();
-        graphObjects.addAll(other.graphObjects);
-
-        // We do not copy observers.
-    }
-
-    public void addGraphObjects(JSONArray graphObjects) {
-        for (int i = 0; i < graphObjects.length(); ++i) {
-            this.graphObjects.add(graphObjects.optJSONObject(i));
-        }
-    }
-
-    public boolean areMoreObjectsAvailable() {
-        return moreObjectsAvailable;
-    }
-
-    public void setMoreObjectsAvailable(boolean moreObjectsAvailable) {
-        this.moreObjectsAvailable = moreObjectsAvailable;
-    }
-
-    public int getCount() {
-        return graphObjects.size();
-    }
-
-    public int getPosition() {
-        return pos;
-    }
-
-    public boolean move(int offset) {
-        return moveToPosition(pos + offset);
-    }
-
-    public boolean moveToPosition(int position) {
-        final int count = getCount();
-        if (position >= count) {
-            pos = count;
-            return false;
-        }
-
-        if (position < 0) {
-            pos = -1;
-            return false;
-        }
-
-        pos = position;
-        return true;
-    }
-
-    public boolean moveToFirst() {
-        return moveToPosition(0);
-    }
-
-    public boolean moveToLast() {
-        return moveToPosition(getCount() - 1);
-    }
-
-    public boolean moveToNext() {
-        return moveToPosition(pos + 1);
-    }
-
-    public boolean moveToPrevious() {
-        return moveToPosition(pos - 1);
-    }
-
-    public boolean isFirst() {
-        return (pos == 0) && (getCount() != 0);
-    }
-
-    public boolean isLast() {
-        final int count = getCount();
-        return (pos == (count - 1)) && (count != 0);
-    }
-
-    public boolean isBeforeFirst() {
-        return (getCount() == 0) || (pos == -1);
-    }
-
-    public boolean isAfterLast() {
-        final int count = getCount();
-        return (count == 0) || (pos == count);
-    }
-
-    public JSONObject getGraphObject() {
-        if (pos < 0) {
-            throw new CursorIndexOutOfBoundsException("Before first object.");
-        }
-        if (pos >= graphObjects.size()) {
-            throw new CursorIndexOutOfBoundsException("After last object.");
-        }
-        return graphObjects.get(pos);
-    }
-
-    public void close() {
-        closed = true;
-    }
-
-    public boolean isClosed() {
-        return closed;
-    }
-
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
deleted file mode 100644
index a767628b5..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
+++ /dev/null
@@ -1,176 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.picker;
-
-import android.content.Context;
-import android.content.Loader;
-
-import com.facebook.*;
-import com.facebook.FacebookException;
-import com.facebook.FacebookRequestError;
-import com.facebook.GraphRequest;
-import com.facebook.GraphRequestBatch;
-import com.facebook.GraphResponse;
-
-import org.json.JSONArray;
-
-class GraphObjectPagingLoader extends Loader<GraphObjectCursor> {
-    private GraphRequest originalRequest;
-    private GraphRequest currentRequest;
-    private GraphRequest nextRequest;
-    private OnErrorListener onErrorListener;
-    private GraphObjectCursor cursor;
-    private boolean appendResults = false;
-    private boolean loading = false;
-
-    public interface OnErrorListener {
-        public void onError(FacebookException error, GraphObjectPagingLoader loader);
-    }
-
-    public GraphObjectPagingLoader(Context context) {
-        super(context);
-    }
-
-    public OnErrorListener getOnErrorListener() {
-        return onErrorListener;
-    }
-
-    public void setOnErrorListener(OnErrorListener listener) {
-        this.onErrorListener = listener;
-    }
-
-    public GraphObjectCursor getCursor() {
-        return cursor;
-    }
-
-    public void clearResults() {
-        nextRequest = null;
-        originalRequest = null;
-        currentRequest = null;
-
-        deliverResult(null);
-    }
-
-    public boolean isLoading() {
-        return loading;
-    }
-
-    public void startLoading(GraphRequest request) {
-        appendResults = false;
-        nextRequest = null;
-        currentRequest = request;
-        currentRequest.setCallback(new GraphRequest.Callback() {
-            @Override
-            public void onCompleted(GraphResponse response) {
-                requestCompleted(response);
-            }
-        });
-
-        loading = true;
-        final GraphRequestBatch batch = new GraphRequestBatch(request);
-        GraphRequest.executeBatchAsync(batch);
-    }
-
-    public void followNextLink() {
-        if (nextRequest != null) {
-            appendResults = true;
-            currentRequest = nextRequest;
-
-            currentRequest.setCallback(new GraphRequest.Callback() {
-                @Override
-                public void onCompleted(GraphResponse response) {
-                    requestCompleted(response);
-                }
-            });
-
-            loading = true;
-            GraphRequest.executeBatchAsync(new GraphRequestBatch(currentRequest));
-        }
-    }
-
-    @Override
-    public void deliverResult(GraphObjectCursor cursor) {
-        GraphObjectCursor oldCursor = this.cursor;
-        this.cursor = cursor;
-
-        if (isStarted()) {
-            super.deliverResult(cursor);
-
-            if (oldCursor != null && oldCursor != cursor && !oldCursor.isClosed()) {
-                oldCursor.close();
-            }
-        }
-    }
-
-    @Override
-    protected void onStartLoading() {
-        super.onStartLoading();
-
-        if (cursor != null) {
-            deliverResult(cursor);
-        }
-    }
-
-    private void requestCompleted(GraphResponse response) {
-        GraphRequest request = response.getRequest();
-        if (request != currentRequest) {
-            return;
-        }
-
-        loading = false;
-        currentRequest = null;
-
-        FacebookRequestError requestError = response.getError();
-        FacebookException exception = (requestError == null) ? null : requestError.getException();
-        if (response.getJSONObject() == null && exception == null) {
-            exception = new FacebookException("GraphObjectPagingLoader received neither a result nor an error.");
-        }
-
-        if (exception != null) {
-            nextRequest = null;
-
-            if (onErrorListener != null) {
-                onErrorListener.onError(exception, this);
-            }
-        } else {
-            addResults(response);
-        }
-    }
-
-    private void addResults(GraphResponse response) {
-        GraphObjectCursor cursorToModify = (cursor == null || !appendResults) ? new GraphObjectCursor() :
-                new GraphObjectCursor(cursor);
-
-        JSONArray data = response.getJSONObject().optJSONArray("data");
-
-        boolean haveData = data.length() > 0;
-
-        if (haveData) {
-            nextRequest = response.getRequestForPagedResults(GraphResponse.PagingDirection.NEXT);
-            cursorToModify.addGraphObjects(data);
-        } else {
-            nextRequest = null;
-        }
-        cursorToModify.setMoreObjectsAvailable(nextRequest != null);
-
-        deliverResult(cursorToModify);
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
deleted file mode 100644
index f2353a0d5..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
+++ /dev/null
@@ -1,1085 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.picker;
-
-import android.app.Activity;
-import android.app.Fragment;
-import android.app.LoaderManager;
-import android.content.Context;
-import android.content.Loader;
-import android.content.res.TypedArray;
-import android.graphics.drawable.Drawable;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.ViewStub;
-import android.view.animation.AlphaAnimation;
-import android.widget.*;
-
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenTracker;
-import com.facebook.FacebookException;
-import com.facebook.GraphRequest;
-import com.example.scrumptious.R;
-
-import org.json.JSONObject;
-
-import java.util.*;
-
-/**
- * Provides functionality common to SDK UI elements that allow the user to pick one or more
- * graph objects (e.g., places, friends) from a list of possibilities. The UI is exposed as a
- * Fragment to allow to it to be included in an Activity along with other Fragments. The Fragments
- * can be configured by passing parameters as part of their Intent bundle, or (for certain
- * properties) by specifying attributes in their XML layout files.
- * <br/>
- * PickerFragments support callbacks that will be called in the event of an error, when the
- * underlying data has been changed, or when the set of selected graph objects changes.
- */
-public abstract class PickerFragment extends Fragment {
-    /**
-     * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
-     * picker should show pictures (if available) for the graph objects.
-     */
-    public static final String SHOW_PICTURES_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ShowPictures";
-    /**
-     * The key for a String parameter in the fragment's Intent bundle to indicate which extra fields
-     * beyond the default fields should be retrieved for any graph objects in the results.
-     */
-    public static final String EXTRA_FIELDS_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ExtraFields";
-    /**
-     * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
-     * picker should display a title bar with a Done button.
-     */
-    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ShowTitleBar";
-    /**
-     * The key for a String parameter in the fragment's Intent bundle to indicate the text to
-     * display in the title bar.
-     */
-    public static final String TITLE_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.TitleText";
-    /**
-     * The key for a String parameter in the fragment's Intent bundle to indicate the text to
-     * display in the Done button.
-     */
-    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.DoneButtonText";
-
-    private static final String SELECTION_BUNDLE_KEY = "com.facebook.android.PickerFragment.Selection";
-    private static final String ACTIVITY_CIRCLE_SHOW_KEY = "com.facebook.android.PickerFragment.ActivityCircleShown";
-    private static final int PROFILE_PICTURE_PREFETCH_BUFFER = 5;
-
-    private final int layout;
-    private OnErrorListener onErrorListener;
-    private OnDataChangedListener onDataChangedListener;
-    private OnSelectionChangedListener onSelectionChangedListener;
-    private OnDoneButtonClickedListener onDoneButtonClickedListener;
-    private GraphObjectFilter filter;
-    private boolean showPictures = true;
-    private boolean showTitleBar = true;
-    private ListView listView;
-    HashSet<String> extraFields = new HashSet<String>();
-    GraphObjectAdapter adapter;
-    private LoadingStrategy loadingStrategy;
-    private SelectionStrategy selectionStrategy;
-    private Set<String> selectionHint;
-    private ProgressBar activityCircle;
-    private AccessTokenTracker accessTokenTracker;
-    private String titleText;
-    private String doneButtonText;
-    private TextView titleTextView;
-    private Button doneButton;
-    private Drawable titleBarBackground;
-    private Drawable doneButtonBackground;
-    private boolean appEventsLogged;
-
-    protected PickerFragment(int layout) {
-        this.layout = layout;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        adapter = createAdapter();
-        adapter.setFilter(new GraphObjectAdapter.Filter() {
-            @Override
-            public boolean includeItem(JSONObject graphObject) {
-                return filterIncludesItem(graphObject);
-            }
-        });
-    }
-
-    @Override
-    public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState) {
-        super.onInflate(activity, attrs, savedInstanceState);
-        TypedArray a = activity.obtainStyledAttributes(attrs, R.styleable.picker_fragment);
-
-        setShowPictures(a.getBoolean(R.styleable.picker_fragment_show_pictures, showPictures));
-        String extraFieldsString = a.getString(R.styleable.picker_fragment_extra_fields);
-        if (extraFieldsString != null) {
-            String[] strings = extraFieldsString.split(",");
-            setExtraFields(Arrays.asList(strings));
-        }
-
-        showTitleBar = a.getBoolean(R.styleable.picker_fragment_show_title_bar, showTitleBar);
-        titleText = a.getString(R.styleable.picker_fragment_title_text);
-        doneButtonText = a.getString(R.styleable.picker_fragment_done_button_text);
-        titleBarBackground = a.getDrawable(R.styleable.picker_fragment_title_bar_background);
-        doneButtonBackground = a.getDrawable(R.styleable.picker_fragment_done_button_background);
-
-        a.recycle();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        ViewGroup view = (ViewGroup) inflater.inflate(layout, container, false);
-
-        listView = (ListView) view.findViewById(R.id.com_facebook_picker_list_view);
-        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
-                onListItemClick((ListView) parent, v, position);
-            }
-        });
-        listView.setOnLongClickListener(new View.OnLongClickListener() {
-            @Override
-            public boolean onLongClick(View v) {
-                // We don't actually do anything differently on long-clicks, but setting the listener
-                // enables the selector transition that we have for visual consistency with the
-                // Facebook app's pickers.
-                return false;
-            }
-        });
-        listView.setOnScrollListener(onScrollListener);
-
-        activityCircle = (ProgressBar) view.findViewById(R.id.com_facebook_picker_activity_circle);
-
-        setupViews(view);
-
-        listView.setAdapter(adapter);
-
-        return view;
-    }
-
-    @Override
-    public void onActivityCreated(final Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken,
-                                                       AccessToken currentAccessToken) {
-                clearResults();
-            }
-        };
-
-        setSettingsFromBundle(savedInstanceState);
-
-        loadingStrategy = createLoadingStrategy();
-        loadingStrategy.attach(adapter);
-
-        selectionStrategy = createSelectionStrategy();
-        selectionStrategy.readSelectionFromBundle(savedInstanceState, SELECTION_BUNDLE_KEY);
-
-        // Should we display a title bar? (We need to do this after we've retrieved our bundle settings.)
-        if (showTitleBar) {
-            inflateTitleBar((ViewGroup) getView());
-        }
-
-        if (activityCircle != null && savedInstanceState != null) {
-            boolean shown = savedInstanceState.getBoolean(ACTIVITY_CIRCLE_SHOW_KEY, false);
-            if (shown) {
-                displayActivityCircle();
-            } else {
-                // Should be hidden already, but just to be sure.
-                hideActivityCircle();
-            }
-        }
-    }
-
-    @Override
-    public void onDetach() {
-        super.onDetach();
-
-        listView.setOnScrollListener(null);
-        listView.setAdapter(null);
-
-        loadingStrategy.detach();
-        accessTokenTracker.stopTracking();
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-
-        saveSettingsToBundle(outState);
-        selectionStrategy.saveSelectionToBundle(outState, SELECTION_BUNDLE_KEY);
-        if (activityCircle != null) {
-            outState.putBoolean(ACTIVITY_CIRCLE_SHOW_KEY, activityCircle.getVisibility() == View.VISIBLE);
-        }
-    }
-
-    @Override
-    public void onStop() {
-        if (!appEventsLogged) {
-            logAppEvents(false);
-        }
-        super.onStop();
-    }
-
-    @Override
-    public void setArguments(Bundle args) {
-        super.setArguments(args);
-        setSettingsFromBundle(args);
-    }
-
-    /**
-     * Gets the current OnDataChangedListener for this fragment, which will be called whenever
-     * the underlying data being displaying in the picker has changed.
-     *
-     * @return the OnDataChangedListener, or null if there is none
-     */
-    public OnDataChangedListener getOnDataChangedListener() {
-        return onDataChangedListener;
-    }
-
-    /**
-     * Sets the current OnDataChangedListener for this fragment, which will be called whenever
-     * the underlying data being displaying in the picker has changed.
-     *
-     * @param onDataChangedListener the OnDataChangedListener, or null if there is none
-     */
-    public void setOnDataChangedListener(OnDataChangedListener onDataChangedListener) {
-        this.onDataChangedListener = onDataChangedListener;
-    }
-
-    /**
-     * Gets the current OnSelectionChangedListener for this fragment, which will be called
-     * whenever the user selects or unselects a graph object in the list.
-     *
-     * @return the OnSelectionChangedListener, or null if there is none
-     */
-    public OnSelectionChangedListener getOnSelectionChangedListener() {
-        return onSelectionChangedListener;
-    }
-
-    /**
-     * Sets the current OnSelectionChangedListener for this fragment, which will be called
-     * whenever the user selects or unselects a graph object in the list.
-     *
-     * @param onSelectionChangedListener the OnSelectionChangedListener, or null if there is none
-     */
-    public void setOnSelectionChangedListener(
-            OnSelectionChangedListener onSelectionChangedListener) {
-        this.onSelectionChangedListener = onSelectionChangedListener;
-    }
-
-    /**
-     * Gets the current OnDoneButtonClickedListener for this fragment, which will be called
-     * when the user clicks the Done button.
-     *
-     * @return the OnDoneButtonClickedListener, or null if there is none
-     */
-    public OnDoneButtonClickedListener getOnDoneButtonClickedListener() {
-        return onDoneButtonClickedListener;
-    }
-
-    /**
-     * Sets the current OnDoneButtonClickedListener for this fragment, which will be called
-     * when the user clicks the Done button. This will only be possible if the title bar is
-     * being shown in this fragment.
-     *
-     * @param onDoneButtonClickedListener the OnDoneButtonClickedListener, or null if there is none
-     */
-    public void setOnDoneButtonClickedListener(OnDoneButtonClickedListener onDoneButtonClickedListener) {
-        this.onDoneButtonClickedListener = onDoneButtonClickedListener;
-    }
-
-    /**
-     * Gets the current OnErrorListener for this fragment, which will be called in the event
-     * of network or other errors encountered while populating the graph objects in the list.
-     *
-     * @return the OnErrorListener, or null if there is none
-     */
-    public OnErrorListener getOnErrorListener() {
-        return onErrorListener;
-    }
-
-    /**
-     * Sets the current OnErrorListener for this fragment, which will be called in the event
-     * of network or other errors encountered while populating the graph objects in the list.
-     *
-     * @param onErrorListener the OnErrorListener, or null if there is none
-     */
-    public void setOnErrorListener(OnErrorListener onErrorListener) {
-        this.onErrorListener = onErrorListener;
-    }
-
-    /**
-     * Gets the current filter for this fragment, which will be called for each graph object
-     * returned from the service to determine if it should be displayed in the list.
-     * If no filter is specified, all retrieved graph objects will be displayed.
-     *
-     * @return the GraphObjectFilter, or null if there is none
-     */
-    public GraphObjectFilter getFilter() {
-        return filter;
-    }
-
-    /**
-     * Sets the current filter for this fragment, which will be called for each graph object
-     * returned from the service to determine if it should be displayed in the list.
-     * If no filter is specified, all retrieved graph objects will be displayed.
-     *
-     * @param filter the GraphObjectFilter, or null if there is none
-     */
-    public void setFilter(GraphObjectFilter filter) {
-        this.filter = filter;
-    }
-
-    /**
-     * Gets whether to display pictures, if available, for displayed graph objects.
-     *
-     * @return true if pictures should be displayed, false if not
-     */
-    public boolean getShowPictures() {
-        return showPictures;
-    }
-
-    /**
-     * Sets whether to display pictures, if available, for displayed graph objects.
-     *
-     * @param showPictures true if pictures should be displayed, false if not
-     */
-    public void setShowPictures(boolean showPictures) {
-        this.showPictures = showPictures;
-    }
-
-    /**
-     * Gets the extra fields to request for the retrieved graph objects.
-     *
-     * @return the extra fields to request
-     */
-    public Set<String> getExtraFields() {
-        return new HashSet<String>(extraFields);
-    }
-
-    /**
-     * Sets the extra fields to request for the retrieved graph objects.
-     *
-     * @param fields the extra fields to request
-     */
-    public void setExtraFields(Collection<String> fields) {
-        extraFields = new HashSet<String>();
-        if (fields != null) {
-            extraFields.addAll(fields);
-        }
-    }
-
-    /**
-     * Sets whether to show a title bar with a Done button. This must be
-     * called prior to the Fragment going through its creation lifecycle to have an effect.
-     *
-     * @param showTitleBar true if a title bar should be displayed, false if not
-     */
-    public void setShowTitleBar(boolean showTitleBar) {
-        this.showTitleBar = showTitleBar;
-    }
-
-    /**
-     * Gets whether to show a title bar with a Done button. The default is true.
-     *
-     * @return true if a title bar will be shown, false if not.
-     */
-    public boolean getShowTitleBar() {
-        return showTitleBar;
-    }
-
-    /**
-     * Sets the text to show in the title bar, if a title bar is to be shown. This must be
-     * called prior to the Fragment going through its creation lifecycle to have an effect, or
-     * the default will be used.
-     *
-     * @param titleText the text to show in the title bar
-     */
-    public void setTitleText(String titleText) {
-        this.titleText = titleText;
-    }
-
-    /**
-     * Gets the text to show in the title bar, if a title bar is to be shown.
-     *
-     * @return the text to show in the title bar
-     */
-    public String getTitleText() {
-        if (titleText == null) {
-            titleText = getDefaultTitleText();
-        }
-        return titleText;
-    }
-
-    /**
-     * Sets the text to show in the Done button, if a title bar is to be shown. This must be
-     * called prior to the Fragment going through its creation lifecycle to have an effect, or
-     * the default will be used.
-     *
-     * @param doneButtonText the text to show in the Done button
-     */
-    public void setDoneButtonText(String doneButtonText) {
-        this.doneButtonText = doneButtonText;
-    }
-
-    /**
-     * Gets the text to show in the Done button, if a title bar is to be shown.
-     *
-     * @return the text to show in the Done button
-     */
-    public String getDoneButtonText() {
-        if (doneButtonText == null) {
-            doneButtonText = getDefaultDoneButtonText();
-        }
-        return doneButtonText;
-    }
-
-    /**
-     * Causes the picker to load data from the service and display it to the user.
-     *
-     * @param forceReload if true, data will be loaded even if there is already data being displayed (or loading);
-     *                    if false, data will not be re-loaded if it is already displayed (or loading)
-     */
-    public void loadData(boolean forceReload) {
-        loadData(forceReload, null);
-    }
-
-    /**
-     * Causes the picker to load data from the service and display it to the user.
-     *
-     * @param forceReload if true, data will be loaded even if there is already data being displayed (or loading);
-     *                    if false, data will not be re-loaded if it is already displayed (or loading)
-     * @param selectIds ids to select, if they are present in the loaded data
-     */
-    public void loadData(boolean forceReload, Set<String> selectIds) {
-        if (!forceReload && loadingStrategy.isDataPresentOrLoading()) {
-            return;
-        }
-        selectionHint = selectIds;
-        clearResults();
-
-        GraphRequest request = getRequestForLoadData();
-        if (request != null) {
-            onLoadingData();
-            loadingStrategy.startLoading(request);
-        }
-    }
-
-    /**
-     * Updates the properties of the PickerFragment based on the contents of the supplied Bundle;
-     * calling Activities may use this to pass additional configuration information to the
-     * PickerFragment beyond what is specified in its XML layout.
-     *
-     * @param inState a Bundle containing keys corresponding to properties of the PickerFragment
-     */
-    public void setSettingsFromBundle(Bundle inState) {
-        if (inState != null) {
-            showPictures = inState.getBoolean(SHOW_PICTURES_BUNDLE_KEY, showPictures);
-            String extraFieldsString = inState.getString(EXTRA_FIELDS_BUNDLE_KEY);
-            if (extraFieldsString != null) {
-                String[] strings = extraFieldsString.split(",");
-                setExtraFields(Arrays.asList(strings));
-            }
-            showTitleBar = inState.getBoolean(SHOW_TITLE_BAR_BUNDLE_KEY, showTitleBar);
-            String titleTextString = inState.getString(TITLE_TEXT_BUNDLE_KEY);
-            if (titleTextString != null) {
-                titleText = titleTextString;
-                if (titleTextView != null) {
-                    titleTextView.setText(titleText);
-                }
-            }
-            String doneButtonTextString = inState.getString(DONE_BUTTON_TEXT_BUNDLE_KEY);
-            if (doneButtonTextString != null) {
-                doneButtonText = doneButtonTextString;
-                if (doneButton != null) {
-                    doneButton.setText(doneButtonText);
-                }
-            }
-        }
-
-    }
-
-    void setupViews(ViewGroup view) {
-    }
-
-    boolean filterIncludesItem(JSONObject graphObject) {
-        if (filter != null) {
-            return filter.includeItem(graphObject);
-        }
-        return true;
-    }
-
-    List<JSONObject> getSelectedGraphObjects() {
-        return adapter.getGraphObjectsById(selectionStrategy.getSelectedIds());
-    }
-
-    void setSelectedGraphObjects(List<String> objectIds) {
-        for(String objectId : objectIds) {
-            if(!this.selectionStrategy.isSelected(objectId)) {
-                this.selectionStrategy.toggleSelection(objectId);
-            }
-        }
-    }
-
-    void saveSettingsToBundle(Bundle outState) {
-        outState.putBoolean(SHOW_PICTURES_BUNDLE_KEY, showPictures);
-        if (!extraFields.isEmpty()) {
-            outState.putString(EXTRA_FIELDS_BUNDLE_KEY, TextUtils.join(",", extraFields));
-        }
-        outState.putBoolean(SHOW_TITLE_BAR_BUNDLE_KEY, showTitleBar);
-        outState.putString(TITLE_TEXT_BUNDLE_KEY, titleText);
-        outState.putString(DONE_BUTTON_TEXT_BUNDLE_KEY, doneButtonText);
-    }
-
-    abstract GraphRequest getRequestForLoadData();
-
-    abstract PickerFragmentAdapter createAdapter();
-
-    abstract LoadingStrategy createLoadingStrategy();
-
-    abstract SelectionStrategy createSelectionStrategy();
-
-    void onLoadingData() {
-    }
-
-    String getDefaultTitleText() {
-        return null;
-    }
-
-    String getDefaultDoneButtonText() {
-        return getString(R.string.picker_picker_done_button_text);
-    }
-
-    void displayActivityCircle() {
-        if (activityCircle != null) {
-            layoutActivityCircle();
-            activityCircle.setVisibility(View.VISIBLE);
-        }
-    }
-
-    void layoutActivityCircle() {
-        // If we've got no data, make the activity circle full-opacity. Otherwise we'll dim it to avoid
-        //  cluttering the UI.
-        float alpha = (!adapter.isEmpty()) ? .25f : 1.0f;
-        setAlpha(activityCircle, alpha);
-    }
-
-    void hideActivityCircle() {
-        if (activityCircle != null) {
-            // We use an animation to dim the activity circle; need to clear this or it will remain visible.
-            activityCircle.clearAnimation();
-            activityCircle.setVisibility(View.INVISIBLE);
-        }
-    }
-
-    void setSelectionStrategy(SelectionStrategy selectionStrategy) {
-        if (selectionStrategy != this.selectionStrategy) {
-            this.selectionStrategy = selectionStrategy;
-            if (adapter != null) {
-                // Adapter should cause a re-render.
-                adapter.notifyDataSetChanged();
-            }
-        }
-    }
-
-    void logAppEvents(boolean doneButtonClicked) {
-    }
-
-    private static void setAlpha(View view, float alpha) {
-        // Set the alpha appropriately (setAlpha is API >= 11, this technique works on all API levels).
-        AlphaAnimation alphaAnimation = new AlphaAnimation(alpha, alpha);
-        alphaAnimation.setDuration(0);
-        alphaAnimation.setFillAfter(true);
-        view.startAnimation(alphaAnimation);
-    }
-
-    private void inflateTitleBar(ViewGroup view) {
-        ViewStub stub = (ViewStub) view.findViewById(R.id.com_facebook_picker_title_bar_stub);
-        if (stub != null) {
-            View titleBar = stub.inflate();
-
-            final RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(
-                    RelativeLayout.LayoutParams.MATCH_PARENT,
-                    RelativeLayout.LayoutParams.MATCH_PARENT);
-            layoutParams.addRule(RelativeLayout.BELOW, R.id.com_facebook_picker_title_bar);
-            listView.setLayoutParams(layoutParams);
-
-            if (titleBarBackground != null) {
-                titleBar.setBackgroundDrawable(titleBarBackground);
-            }
-
-            doneButton = (Button) view.findViewById(R.id.com_facebook_picker_done_button);
-            if (doneButton != null) {
-                doneButton.setOnClickListener(new View.OnClickListener() {
-                    @Override
-                    public void onClick(View v) {
-                        logAppEvents(true);
-                        appEventsLogged = true;
-
-                        if (onDoneButtonClickedListener != null) {
-                            onDoneButtonClickedListener.onDoneButtonClicked(PickerFragment.this);
-                        }
-                    }
-                });
-
-                if (getDoneButtonText() != null) {
-                    doneButton.setText(getDoneButtonText());
-                }
-
-                if (doneButtonBackground != null) {
-                    doneButton.setBackgroundDrawable(doneButtonBackground);
-                }
-            }
-
-            titleTextView = (TextView) view.findViewById(R.id.com_facebook_picker_title);
-            if (titleTextView != null) {
-                if (getTitleText() != null) {
-                    titleTextView.setText(getTitleText());
-                }
-            }
-        }
-    }
-
-    private void onListItemClick(ListView listView, View v, int position) {
-        @SuppressWarnings("unchecked")
-        JSONObject graphObject = (JSONObject) listView.getItemAtPosition(position);
-        String id = adapter.getIdOfGraphObject(graphObject);
-        selectionStrategy.toggleSelection(id);
-        adapter.notifyDataSetChanged();
-
-        if (onSelectionChangedListener != null) {
-            onSelectionChangedListener.onSelectionChanged(PickerFragment.this);
-        }
-    }
-
-    private void clearResults() {
-        if (adapter != null) {
-            boolean wasSelection = !selectionStrategy.isEmpty();
-            boolean wasData = !adapter.isEmpty();
-
-            loadingStrategy.clearResults();
-            selectionStrategy.clear();
-            adapter.notifyDataSetChanged();
-
-            // Tell anyone who cares the data and selection has changed, if they have.
-            if (wasData && onDataChangedListener != null) {
-                onDataChangedListener.onDataChanged(PickerFragment.this);
-            }
-            if (wasSelection && onSelectionChangedListener != null) {
-                onSelectionChangedListener.onSelectionChanged(PickerFragment.this);
-            }
-        }
-    }
-
-    void updateAdapter(GraphObjectCursor data) {
-        if (adapter != null) {
-            // As we fetch additional results and add them to the table, we do not
-            // want the items displayed jumping around seemingly at random, frustrating the user's
-            // attempts at scrolling, etc. Since results may be added anywhere in
-            // the table, we choose to try to keep the first visible row in a fixed
-            // position (from the user's perspective). We try to keep it positioned at
-            // the same offset from the top of the screen so adding new items seems
-            // smoother, as opposed to having it "snap" to a multiple of row height
-
-            // We use the second row, to give context above and below it and avoid
-            // cases where the first row is only barely visible, thus providing little context.
-            // The exception is where the very first row is visible, in which case we use that.
-            View view = listView.getChildAt(1);
-            int anchorPosition = listView.getFirstVisiblePosition();
-            if (anchorPosition > 0) {
-                anchorPosition++;
-            }
-            GraphObjectAdapter.SectionAndItem anchorItem = adapter.getSectionAndItem(anchorPosition);
-            final int top = (view != null &&
-                    anchorItem.getType() != GraphObjectAdapter.SectionAndItem.Type.ACTIVITY_CIRCLE) ?
-                    view.getTop() : 0;
-
-            // Now actually add the results.
-            boolean dataChanged = adapter.changeCursor(data);
-
-            if (view != null && anchorItem != null) {
-                // Put the item back in the same spot it was.
-                final int newPositionOfItem = adapter.getPosition(anchorItem.sectionKey, anchorItem.graphObject);
-                if (newPositionOfItem != -1) {
-                    listView.setSelectionFromTop(newPositionOfItem, top);
-                }
-            }
-
-            if (dataChanged && onDataChangedListener != null) {
-                onDataChangedListener.onDataChanged(PickerFragment.this);
-            }
-            if (selectionHint != null && !selectionHint.isEmpty() && data != null) {
-                data.moveToFirst();
-                boolean changed = false;
-                for (int i = 0; i < data.getCount(); i++) {
-                    data.moveToPosition(i);
-                    String id = data.getGraphObject().optString("id");
-                    if (id == null) {
-                        continue;
-                    }
-                    if (selectionHint.contains(id)) {
-                        selectionStrategy.toggleSelection(id);
-                        selectionHint.remove(id);
-                        changed = true;
-                    }
-                    if (selectionHint.isEmpty()) {
-                        break;
-                    }
-                }
-                if (onSelectionChangedListener != null && changed) {
-                    onSelectionChangedListener.onSelectionChanged(PickerFragment.this);
-                }
-            }
-        }
-    }
-
-    private void reprioritizeDownloads() {
-        int lastVisibleItem = listView.getLastVisiblePosition();
-        if (lastVisibleItem >= 0) {
-            int firstVisibleItem = listView.getFirstVisiblePosition();
-            adapter.prioritizeViewRange(firstVisibleItem, lastVisibleItem, PROFILE_PICTURE_PREFETCH_BUFFER);
-        }
-    }
-
-    private ListView.OnScrollListener onScrollListener = new ListView.OnScrollListener() {
-        @Override
-        public void onScrollStateChanged(AbsListView view, int scrollState) {
-        }
-
-        @Override
-        public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
-            reprioritizeDownloads();
-        }
-    };
-
-    /**
-     * Callback interface that will be called when a network or other error is encountered
-     * while retrieving graph objects.
-     */
-    public interface OnErrorListener {
-        /**
-         * Called when a network or other error is encountered.
-         *
-         * @param error a FacebookException representing the error that was encountered.
-         */
-        void onError(PickerFragment fragment, FacebookException error);
-    }
-
-    /**
-     * Callback interface that will be called when the underlying data being displayed in the
-     * picker has been updated.
-     */
-    public interface OnDataChangedListener {
-        /**
-         * Called when the set of data being displayed in the picker has changed.
-         */
-        void onDataChanged(PickerFragment fragment);
-    }
-
-    /**
-     * Callback interface that will be called when the user selects or unselects graph objects
-     * in the picker.
-     */
-    public interface OnSelectionChangedListener {
-        /**
-         * Called when the user selects or unselects graph objects in the picker.
-         */
-        void onSelectionChanged(PickerFragment fragment);
-    }
-
-    /**
-     * Callback interface that will be called when the user clicks the Done button on the
-     * title bar.
-     */
-    public interface OnDoneButtonClickedListener {
-        /**
-         * Called when the user clicks the Done button.
-         */
-        void onDoneButtonClicked(PickerFragment fragment);
-    }
-
-    /**
-     * Callback interface that will be called to determine if a graph object should be displayed.
-     */
-    public interface GraphObjectFilter {
-        /**
-         * Called to determine if a graph object should be displayed.
-         *
-         * @param graphObject the graph object
-         * @return true to display the graph object, false to hide it
-         */
-        boolean includeItem(JSONObject graphObject);
-    }
-
-    abstract class LoadingStrategy {
-        protected final static int CACHED_RESULT_REFRESH_DELAY = 2 * 1000;
-
-        protected GraphObjectPagingLoader loader;
-        protected GraphObjectAdapter adapter;
-
-        public void attach(GraphObjectAdapter adapter) {
-            loader = (GraphObjectPagingLoader) getLoaderManager().initLoader(0, null,
-                    new LoaderManager.LoaderCallbacks<GraphObjectCursor>() {
-                        @Override
-                        public Loader<GraphObjectCursor> onCreateLoader(int id, Bundle args) {
-                            return LoadingStrategy.this.onCreateLoader();
-                        }
-
-                        @Override
-                        public void onLoadFinished(Loader<GraphObjectCursor> loader,
-                                GraphObjectCursor data) {
-                            if (loader != LoadingStrategy.this.loader) {
-                                throw new FacebookException("Received callback for unknown loader.");
-                            }
-                            LoadingStrategy.this.onLoadFinished((GraphObjectPagingLoader) loader, data);
-                        }
-
-                        @Override
-                        public void onLoaderReset(Loader<GraphObjectCursor> loader) {
-                            if (loader != LoadingStrategy.this.loader) {
-                                throw new FacebookException("Received callback for unknown loader.");
-                            }
-                            LoadingStrategy.this.onLoadReset((GraphObjectPagingLoader) loader);
-                        }
-                    });
-
-            loader.setOnErrorListener(new GraphObjectPagingLoader.OnErrorListener() {
-                @Override
-                public void onError(FacebookException error, GraphObjectPagingLoader loader) {
-                    hideActivityCircle();
-                    if (onErrorListener != null) {
-                        onErrorListener.onError(PickerFragment.this, error);
-                    }
-                }
-            });
-
-            this.adapter = adapter;
-            // Tell the adapter about any data we might already have.
-            this.adapter.changeCursor(loader.getCursor());
-            this.adapter.setOnErrorListener(new GraphObjectAdapter.OnErrorListener() {
-                @Override
-                public void onError(GraphObjectAdapter adapter, FacebookException error) {
-                    if (onErrorListener != null) {
-                        onErrorListener.onError(PickerFragment.this, error);
-                    }
-                }
-            });
-        }
-
-        public void detach() {
-            adapter.setDataNeededListener(null);
-            adapter.setOnErrorListener(null);
-            loader.setOnErrorListener(null);
-
-            loader = null;
-            adapter = null;
-        }
-
-        public void clearResults() {
-            if (loader != null) {
-                loader.clearResults();
-            }
-        }
-
-        public void startLoading(GraphRequest request) {
-            if (loader != null) {
-                loader.startLoading(request);
-                onStartLoading(loader, request);
-            }
-        }
-
-        public boolean isDataPresentOrLoading() {
-            return !adapter.isEmpty() || loader.isLoading();
-        }
-
-        protected GraphObjectPagingLoader onCreateLoader() {
-            return new GraphObjectPagingLoader(getActivity());
-        }
-
-        protected void onStartLoading(GraphObjectPagingLoader loader, GraphRequest request) {
-            displayActivityCircle();
-        }
-
-        protected void onLoadReset(GraphObjectPagingLoader loader) {
-            adapter.changeCursor(null);
-        }
-
-        protected void onLoadFinished(GraphObjectPagingLoader loader, GraphObjectCursor data) {
-            updateAdapter(data);
-        }
-    }
-
-    abstract class SelectionStrategy {
-        abstract boolean isSelected(String id);
-
-        abstract void toggleSelection(String id);
-
-        abstract Collection<String> getSelectedIds();
-
-        abstract void clear();
-
-        abstract boolean isEmpty();
-
-        abstract boolean shouldShowCheckBoxIfUnselected();
-
-        abstract void saveSelectionToBundle(Bundle outBundle, String key);
-
-        abstract void readSelectionFromBundle(Bundle inBundle, String key);
-    }
-
-    class SingleSelectionStrategy extends SelectionStrategy {
-        private String selectedId;
-
-        public Collection<String> getSelectedIds() {
-            return Arrays.asList(new String[]{selectedId});
-        }
-
-        @Override
-        boolean isSelected(String id) {
-            return selectedId != null && id != null && selectedId.equals(id);
-        }
-
-        @Override
-        void toggleSelection(String id) {
-            if (selectedId != null && selectedId.equals(id)) {
-                selectedId = null;
-            } else {
-                selectedId = id;
-            }
-        }
-
-        @Override
-        void saveSelectionToBundle(Bundle outBundle, String key) {
-            if (!TextUtils.isEmpty(selectedId)) {
-                outBundle.putString(key, selectedId);
-            }
-        }
-
-        @Override
-        void readSelectionFromBundle(Bundle inBundle, String key) {
-            if (inBundle != null) {
-                selectedId = inBundle.getString(key);
-            }
-        }
-
-        @Override
-        public void clear() {
-            selectedId = null;
-        }
-
-        @Override
-        boolean isEmpty() {
-            return selectedId == null;
-        }
-
-        @Override
-        boolean shouldShowCheckBoxIfUnselected() {
-            return false;
-        }
-    }
-
-    class MultiSelectionStrategy extends SelectionStrategy {
-        private Set<String> selectedIds = new HashSet<String>();
-
-        public Collection<String> getSelectedIds() {
-            return selectedIds;
-        }
-
-        @Override
-        boolean isSelected(String id) {
-            return id != null && selectedIds.contains(id);
-        }
-
-        @Override
-        void toggleSelection(String id) {
-            if (id != null) {
-                if (selectedIds.contains(id)) {
-                    selectedIds.remove(id);
-                } else {
-                    selectedIds.add(id);
-                }
-            }
-        }
-
-        @Override
-        void saveSelectionToBundle(Bundle outBundle, String key) {
-            if (!selectedIds.isEmpty()) {
-                String ids = TextUtils.join(",", selectedIds);
-                outBundle.putString(key, ids);
-            }
-        }
-
-        @Override
-        void readSelectionFromBundle(Bundle inBundle, String key) {
-            if (inBundle != null) {
-                String ids = inBundle.getString(key);
-                if (ids != null) {
-                    String[] splitIds = TextUtils.split(ids, ",");
-                    selectedIds.clear();
-                    Collections.addAll(selectedIds, splitIds);
-                }
-            }
-        }
-
-        @Override
-        public void clear() {
-            selectedIds.clear();
-        }
-
-        @Override
-        boolean isEmpty() {
-            return selectedIds.isEmpty();
-        }
-
-        @Override
-        boolean shouldShowCheckBoxIfUnselected() {
-            return true;
-        }
-    }
-
-    abstract class PickerFragmentAdapter extends GraphObjectAdapter {
-        public PickerFragmentAdapter(Context context) {
-            super(context);
-        }
-
-        @Override
-        boolean isGraphObjectSelected(String graphObjectId) {
-            return selectionStrategy.isSelected(graphObjectId);
-        }
-
-        @Override
-        void updateCheckboxState(CheckBox checkBox, boolean graphObjectSelected) {
-            checkBox.setChecked(graphObjectSelected);
-            int visible = (graphObjectSelected || selectionStrategy.shouldShowCheckBoxIfUnselected())
-                    ? View.VISIBLE : View.GONE;
-            checkBox.setVisibility(visible);
-        }
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
deleted file mode 100644
index 97e53d4e9..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
+++ /dev/null
@@ -1,515 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.picker;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.res.TypedArray;
-import android.location.Location;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.text.Editable;
-import android.text.TextUtils;
-import android.text.TextWatcher;
-import android.util.AttributeSet;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.inputmethod.InputMethodManager;
-import android.widget.EditText;
-import android.widget.ListView;
-import com.facebook.AccessToken;
-import com.facebook.FacebookException;
-import com.facebook.GraphRequest;
-import com.facebook.LoggingBehavior;
-import com.facebook.appevents.AppEventsLogger;
-import com.example.scrumptious.R;
-import com.facebook.internal.AnalyticsEvents;
-import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
-
-import org.json.JSONObject;
-
-import java.util.*;
-
-public class PlacePickerFragment extends PickerFragment {
-    /**
-     * The key for an int parameter in the fragment's Intent bundle to indicate the radius in meters around
-     * the center point to search. The default is 1000 meters.
-     */
-    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.RadiusInMeters";
-    /**
-     * The key for an int parameter in the fragment's Intent bundle to indicate what how many results to
-     * return at a time. The default is 100 results.
-     */
-    public static final String RESULTS_LIMIT_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.ResultsLimit";
-    /**
-     * The key for a String parameter in the fragment's Intent bundle to indicate what search text should
-     * be sent to the service. The default is to have no search text.
-     */
-    public static final String SEARCH_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.SearchText";
-    /**
-     * The key for a Location parameter in the fragment's Intent bundle to indicate what geographical
-     * location should be the center of the search.
-     */
-    public static final String LOCATION_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.Location";
-    /**
-     * The key for a boolean parameter in the fragment's Intent bundle to indicate that the fragment
-     * should display a search box and automatically update the search text as it changes.
-     */
-    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.ShowSearchBox";
-
-    /**
-     * The default radius around the center point to search.
-     */
-    public static final int DEFAULT_RADIUS_IN_METERS = 1000;
-    /**
-     * The default number of results to retrieve.
-     */
-    public static final int DEFAULT_RESULTS_LIMIT = 100;
-
-    private static final int searchTextTimerDelayInMilliseconds = 2 * 1000;
-
-    private static final String ID = "id";
-    private static final String NAME = "name";
-    private static final String LOCATION = "location";
-    private static final String CATEGORY = "category";
-    private static final String WERE_HERE_COUNT = "were_here_count";
-    private static final String TAG = "PlacePickerFragment";
-
-    private Location location;
-    private int radiusInMeters = DEFAULT_RADIUS_IN_METERS;
-    private int resultsLimit = DEFAULT_RESULTS_LIMIT;
-    private String searchText;
-    private Timer searchTextTimer;
-    private boolean hasSearchTextChangedSinceLastQuery;
-    private boolean showSearchBox = true;
-    private EditText searchBox;
-
-    /**
-     * Default constructor. Creates a Fragment with all default properties.
-     */
-    public PlacePickerFragment() {
-        super(R.layout.picker_placepickerfragment);
-    }
-
-    /**
-     * Gets the location to search around. Either the location or the search text (or both) must be specified.
-     *
-     * @return the Location to search around
-     */
-    public Location getLocation() {
-        return location;
-    }
-
-    /**
-     * Sets the location to search around. Either the location or the search text (or both) must be specified.
-     *
-     * @param location the Location to search around
-     */
-    public void setLocation(Location location) {
-        this.location = location;
-    }
-
-    /**
-     * Gets the radius in meters around the location to search.
-     *
-     * @return the radius in meters
-     */
-    public int getRadiusInMeters() {
-        return radiusInMeters;
-    }
-
-    /**
-     * Sets the radius in meters around the location to search.
-     *
-     * @param radiusInMeters the radius in meters
-     */
-    public void setRadiusInMeters(int radiusInMeters) {
-        this.radiusInMeters = radiusInMeters;
-    }
-
-    /**
-     * Gets the number of results to retrieve.
-     *
-     * @return the number of results to retrieve
-     */
-    public int getResultsLimit() {
-        return resultsLimit;
-    }
-
-    /**
-     * Sets the number of results to retrieve.
-     *
-     * @param resultsLimit the number of results to retrieve
-     */
-    public void setResultsLimit(int resultsLimit) {
-        this.resultsLimit = resultsLimit;
-    }
-
-    /**
-     * Gets the search text (e.g., category, name) to search for. Either the location or the search
-     * text (or both) must be specified.
-     *
-     * @return the search text
-     */
-    public String getSearchText() {
-        return searchText;
-    }
-
-    /**
-     * Sets the search text (e.g., category, name) to search for. Either the location or the search
-     * text (or both) must be specified. If a search box is displayed, this will update its contents
-     * to the specified text.
-     *
-     * @param searchText the search text
-     */
-    public void setSearchText(String searchText) {
-        if (TextUtils.isEmpty(searchText)) {
-            searchText = null;
-        }
-        this.searchText = searchText;
-        if (this.searchBox != null) {
-            this.searchBox.setText(searchText);
-        }
-    }
-
-    /**
-     * Sets the search text and reloads the data in the control. This is used to provide search-box
-     * functionality where the user may be typing or editing text rapidly. It uses a timer to avoid repeated
-     * requerying, preferring to wait until the user pauses typing to refresh the data. Note that this
-     * method will NOT update the text in the search box, if any, as it is intended to be called as a result
-     * of changes to the search box (and is public to enable applications to provide their own search box
-     * UI instead of the default one).
-     *
-     * @param searchText                 the search text
-     * @param forceReloadEventIfSameText if true, will reload even if the search text has not changed; if false,
-     *                                   identical search text will not force a reload
-     */
-    public void onSearchBoxTextChanged(String searchText, boolean forceReloadEventIfSameText) {
-        if (!forceReloadEventIfSameText && Utility.stringsEqualOrEmpty(this.searchText, searchText)) {
-            return;
-        }
-
-        if (TextUtils.isEmpty(searchText)) {
-            searchText = null;
-        }
-        this.searchText = searchText;
-
-        // If search text is being set in response to user input, it is wasteful to send a new request
-        // with every keystroke. Send a request the first time the search text is set, then set up a 2-second timer
-        // and send whatever changes the user has made since then. (If nothing has changed
-        // in 2 seconds, we reset so the next change will cause an immediate re-query.)
-        hasSearchTextChangedSinceLastQuery = true;
-        if (searchTextTimer == null) {
-            searchTextTimer = createSearchTextTimer();
-        }
-    }
-
-    /**
-     * Gets the currently-selected place.
-     *
-     * @return the currently-selected place, or null if there is none
-     */
-    public JSONObject getSelection() {
-        Collection<JSONObject> selection = getSelectedGraphObjects();
-        return (selection != null && !selection.isEmpty()) ? selection.iterator().next() : null;
-    }
-
-    @Override
-    public void setSettingsFromBundle(Bundle inState) {
-        super.setSettingsFromBundle(inState);
-        if (inState != null) {
-            setRadiusInMeters(inState.getInt(RADIUS_IN_METERS_BUNDLE_KEY, radiusInMeters));
-            setResultsLimit(inState.getInt(RESULTS_LIMIT_BUNDLE_KEY, resultsLimit));
-            if (inState.containsKey(SEARCH_TEXT_BUNDLE_KEY)) {
-                setSearchText(inState.getString(SEARCH_TEXT_BUNDLE_KEY));
-            }
-            if (inState.containsKey(LOCATION_BUNDLE_KEY)) {
-                Location location = inState.getParcelable(LOCATION_BUNDLE_KEY);
-                setLocation(location);
-            }
-            showSearchBox = inState.getBoolean(SHOW_SEARCH_BOX_BUNDLE_KEY, showSearchBox);
-        }
-    }
-
-    @Override
-    public void onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState) {
-        super.onInflate(activity, attrs, savedInstanceState);
-        TypedArray a = activity.obtainStyledAttributes(attrs, R.styleable.picker_place_picker_fragment);
-
-        setRadiusInMeters(a.getInt(R.styleable.picker_place_picker_fragment_radius_in_meters, radiusInMeters));
-        setResultsLimit(a.getInt(R.styleable.picker_place_picker_fragment_results_limit, resultsLimit));
-        if (a.hasValue(R.styleable.picker_place_picker_fragment_results_limit)) {
-            setSearchText(a.getString(R.styleable.picker_place_picker_fragment_search_text));
-        }
-        showSearchBox = a.getBoolean(R.styleable.picker_place_picker_fragment_show_search_box, showSearchBox);
-
-        a.recycle();
-    }
-
-    @Override
-    void setupViews(ViewGroup view) {
-        if (showSearchBox) {
-            ListView listView = (ListView) view.findViewById(R.id.com_facebook_picker_list_view);
-
-            View searchHeaderView = getActivity().getLayoutInflater().inflate(
-                    R.layout.picker_search_box, listView, false);
-
-            listView.addHeaderView(searchHeaderView, null, false);
-
-            searchBox = (EditText) view.findViewById(R.id.com_facebook_picker_search_text);
-
-            searchBox.addTextChangedListener(new SearchTextWatcher());
-            if (!TextUtils.isEmpty(searchText)) {
-                searchBox.setText(searchText);
-            }
-        }
-    }
-
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-
-        if (searchBox != null) {
-            InputMethodManager imm = (InputMethodManager)getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);
-            imm.showSoftInput(searchBox, InputMethodManager.SHOW_IMPLICIT);
-        }
-    }
-
-    @Override
-    public void onDetach() {
-        super.onDetach();
-
-        if (searchBox != null) {
-            InputMethodManager imm = (InputMethodManager)getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);
-            imm.hideSoftInputFromWindow(searchBox.getWindowToken(), 0);
-        }
-    }
-
-    void saveSettingsToBundle(Bundle outState) {
-        super.saveSettingsToBundle(outState);
-
-        outState.putInt(RADIUS_IN_METERS_BUNDLE_KEY, radiusInMeters);
-        outState.putInt(RESULTS_LIMIT_BUNDLE_KEY, resultsLimit);
-        outState.putString(SEARCH_TEXT_BUNDLE_KEY, searchText);
-        outState.putParcelable(LOCATION_BUNDLE_KEY, location);
-        outState.putBoolean(SHOW_SEARCH_BOX_BUNDLE_KEY, showSearchBox);
-    }
-
-    @Override
-    void onLoadingData() {
-        hasSearchTextChangedSinceLastQuery = false;
-    }
-
-    @Override
-    GraphRequest getRequestForLoadData() {
-        return createRequest(location, radiusInMeters, resultsLimit, searchText, extraFields);
-    }
-
-    @Override
-    String getDefaultTitleText() {
-        return getResources().getString(R.string.nearby);
-    }
-
-    @Override
-    void logAppEvents(boolean doneButtonClicked) {
-        AppEventsLogger logger = AppEventsLogger.newLogger(this.getActivity(),
-                AccessToken.getCurrentAccessToken().getToken());
-        Bundle parameters = new Bundle();
-
-        // If Done was clicked, we know this completed successfully. If not, we don't know (caller might have
-        // dismissed us in response to selection changing, or user might have hit back button). Either way
-        // we'll log the number of selections.
-        String outcome = doneButtonClicked ? AnalyticsEvents.PARAMETER_DIALOG_OUTCOME_VALUE_COMPLETED :
-                AnalyticsEvents.PARAMETER_DIALOG_OUTCOME_VALUE_UNKNOWN;
-        parameters.putString(AnalyticsEvents.PARAMETER_DIALOG_OUTCOME, outcome);
-        parameters.putInt("num_places_picked", (getSelection() != null) ? 1 : 0);
-
-        logger.logSdkEvent(AnalyticsEvents.EVENT_PLACE_PICKER_USAGE, null, parameters);
-    }
-
-    @Override
-    PickerFragmentAdapter createAdapter() {
-        PickerFragmentAdapter adapter = new PickerFragmentAdapter(
-                this.getActivity()) {
-            @Override
-            protected CharSequence getSubTitleOfGraphObject(JSONObject graphObject) {
-                String category = graphObject.optString(CATEGORY);
-                int wereHereCount = graphObject.optInt(WERE_HERE_COUNT);
-
-                String result = null;
-                if (category != null && wereHereCount != 0) {
-                    result = getString(R.string.picker_placepicker_subtitle_format, category, wereHereCount);
-                } else if (category == null && wereHereCount != 0) {
-                    result = getString(R.string.picker_placepicker_subtitle_were_here_only_format, wereHereCount);
-                } else if (category != null && wereHereCount == 0) {
-                    result = getString(R.string.picker_placepicker_subtitle_catetory_only_format, category);
-                }
-                return result;
-            }
-
-            @Override
-            protected int getGraphObjectRowLayoutId(JSONObject graphObject) {
-                return R.layout.picker_placepickerfragment_list_row;
-            }
-
-            @Override
-            protected int getDefaultPicture() {
-                return R.drawable.picker_place_default_icon;
-            }
-
-        };
-        adapter.setShowCheckbox(false);
-        adapter.setShowPicture(getShowPictures());
-        return adapter;
-    }
-
-    @Override
-    LoadingStrategy createLoadingStrategy() {
-        return new AsNeededLoadingStrategy();
-    }
-
-    @Override
-    SelectionStrategy createSelectionStrategy() {
-        return new SingleSelectionStrategy();
-    }
-
-    private GraphRequest createRequest(Location location, int radiusInMeters, int resultsLimit,
-                                  String searchText, Set<String> extraFields) {
-        AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        GraphRequest request = GraphRequest.newPlacesSearchRequest(accessToken, location, radiusInMeters,
-                resultsLimit, searchText, null);
-
-        Set<String> fields = new HashSet<String>(extraFields);
-        String[] requiredFields = new String[]{
-                ID,
-                NAME,
-                LOCATION,
-                CATEGORY,
-                WERE_HERE_COUNT
-        };
-        fields.addAll(Arrays.asList(requiredFields));
-
-        String pictureField = adapter.getPictureFieldSpecifier();
-        if (pictureField != null) {
-            fields.add(pictureField);
-        }
-
-        Bundle parameters = request.getParameters();
-        parameters.putString("fields", TextUtils.join(",", fields));
-        request.setParameters(parameters);
-
-        return request;
-    }
-
-    private Timer createSearchTextTimer() {
-        Timer timer = new Timer();
-        timer.schedule(new TimerTask() {
-            @Override
-            public void run() {
-                onSearchTextTimerTriggered();
-            }
-        }, 0, searchTextTimerDelayInMilliseconds);
-
-        return timer;
-    }
-
-    private void onSearchTextTimerTriggered() {
-        if (hasSearchTextChangedSinceLastQuery) {
-            Handler handler = new Handler(Looper.getMainLooper());
-            handler.post(new Runnable() {
-                @Override
-                public void run() {
-                    FacebookException error = null;
-                    try {
-                        loadData(true);
-                    } catch (FacebookException fe) {
-                        error = fe;
-                    } catch (Exception e) {
-                        error = new FacebookException(e);
-                    } finally {
-                        if (error != null) {
-                            OnErrorListener onErrorListener = getOnErrorListener();
-                            if (onErrorListener != null) {
-                                onErrorListener.onError(PlacePickerFragment.this, error);
-                            } else {
-                                Logger.log(LoggingBehavior.REQUESTS, TAG, "Error loading data : %s", error);
-                            }
-                        }
-                    }
-                }
-            });
-        } else {
-            // Nothing has changed in 2 seconds. Invalidate and forget about this timer.
-            // Next time the user types, we will fire a query immediately again.
-            searchTextTimer.cancel();
-            searchTextTimer = null;
-        }
-    }
-
-    private class AsNeededLoadingStrategy extends LoadingStrategy {
-        @Override
-        public void attach(GraphObjectAdapter adapter) {
-            super.attach(adapter);
-
-            this.adapter.setDataNeededListener(new GraphObjectAdapter.DataNeededListener() {
-                @Override
-                public void onDataNeeded() {
-                    // Do nothing if we are currently loading data . We will get notified again when that load finishes
-                    // if the adapter still needs more data. Otherwise, follow the next link.
-                    if (!loader.isLoading()) {
-                        loader.followNextLink();
-                    }
-                }
-            });
-        }
-
-        @Override
-        protected void onLoadFinished(GraphObjectPagingLoader loader, GraphObjectCursor data) {
-            super.onLoadFinished(loader, data);
-
-            // We could be called in this state if we are clearing data or if we are being re-attached
-            // in the middle of a query.
-            if (data == null || loader.isLoading()) {
-                return;
-            }
-
-            hideActivityCircle();
-        }
-    }
-
-    private class SearchTextWatcher implements TextWatcher {
-
-        @Override
-        public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-        }
-
-        @Override
-        public void onTextChanged(CharSequence s, int start, int before, int count) {
-            onSearchBoxTextChanged(s.toString(), false);
-        }
-
-        @Override
-        public void afterTextChanged(Editable s) {
-        }
-    }
-}
diff --git a/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java b/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
deleted file mode 100644
index ce1db0857..000000000
--- a/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
+++ /dev/null
@@ -1,245 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.scrumptious.usersettings;
-
-import android.app.Fragment;
-import android.content.Intent;
-import android.graphics.Bitmap;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
-import android.net.Uri;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenTracker;
-import com.facebook.CallbackManager;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.internal.ImageDownloader;
-import com.facebook.internal.ImageRequest;
-import com.facebook.internal.ImageResponse;
-import com.example.scrumptious.R;
-import com.facebook.login.widget.LoginButton;
-
-import org.json.JSONObject;
-
-/**
- * A Fragment that displays a Login/Logout button as well as the user's
- * profile picture and name when logged in.
- */
-public final class UserSettingsFragment extends Fragment {
-
-    private static final String NAME = "name";
-    private static final String ID = "id";
-    private static final String PICTURE = "picture";
-    private static final String FIELDS = "fields";
-    
-    private static final String REQUEST_FIELDS =
-            TextUtils.join(",", new String[] {ID, NAME, PICTURE});
-
-    private AccessTokenTracker accessTokenTracker;
-    private CallbackManager callbackManager;
-
-    private LoginButton loginButton;
-    private TextView connectedStateLabel;
-    private JSONObject user;
-    private Drawable userProfilePic;
-    private String userProfilePicID;
-
-    @Override
-    public void onActivityCreated(Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken,
-                                                       AccessToken currentAccessToken) {
-                fetchUserInfo();
-                updateUI();
-
-            }
-        };
-        callbackManager = CallbackManager.Factory.create();
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        accessTokenTracker.stopTracking();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.usersettings_fragment, container, false);
-        loginButton = (LoginButton) view.findViewById(R.id.usersettings_fragment_login_button);
-        loginButton.setFragment(this);
-
-        connectedStateLabel = (TextView) view.findViewById(R.id.usersettings_fragment_profile_name);
-        
-        // if no background is set for some reason, then default to Facebook blue
-        if (view.getBackground() == null) {
-            view.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
-        } else {
-            view.getBackground().setDither(true);
-        }
-        return view;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setRetainInstance(true);
-    }
-
-    /**
-     * @throws com.facebook.FacebookException if errors occur during the loading of user information
-     */
-    @Override
-    public void onResume() {
-        super.onResume();
-        fetchUserInfo();
-        updateUI();
-    }
-
-    private void fetchUserInfo() {
-        final AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null) {
-            GraphRequest request = GraphRequest.newMeRequest(
-                    accessToken, new GraphRequest.GraphJSONObjectCallback() {
-                        @Override
-                        public void onCompleted(JSONObject me, GraphResponse response) {
-                            user = me;
-                            updateUI();
-                        }
-                    });
-            Bundle parameters = new Bundle();
-            parameters.putString(FIELDS, REQUEST_FIELDS);
-            request.setParameters(parameters);
-            GraphRequest.executeBatchAsync(request);
-        } else {
-            user = null;
-        }
-    }
-    
-    private void updateUI() {
-        if (!isAdded()) {
-            return;
-        }
-        if (AccessToken.getCurrentAccessToken() != null) {
-            connectedStateLabel.setTextColor(getResources().getColor(
-                    R.color.usersettings_fragment_connected_text_color));
-            connectedStateLabel.setShadowLayer(1f, 0f, -1f,
-                    getResources().getColor(
-                            R.color.usersettings_fragment_connected_shadow_color));
-            
-            if (user != null) {
-                ImageRequest request = getImageRequest();
-                if (request != null) {
-                    Uri requestUri = request.getImageUri();
-                    // Do we already have the right picture? If so, leave it alone.
-                    if (!requestUri.equals(connectedStateLabel.getTag())) {
-                        if (user.optString("id").equals(userProfilePicID)) {
-                            connectedStateLabel.setCompoundDrawables(
-                                    null, userProfilePic, null, null);
-                            connectedStateLabel.setTag(requestUri);
-                        } else {
-                            ImageDownloader.downloadAsync(request);
-                        }
-                    }
-                }
-                connectedStateLabel.setText(user.optString("name"));
-            } else {
-                connectedStateLabel.setText(getResources().getString(
-                        R.string.usersettings_fragment_logged_in));
-                Drawable noProfilePic = getResources().getDrawable(
-                        R.drawable.profile_default_icon);
-                noProfilePic.setBounds(0, 0,
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_height));
-                connectedStateLabel.setCompoundDrawables(null, noProfilePic, null, null);
-            }
-        } else {
-            int textColor = getResources().getColor(
-                    R.color.usersettings_fragment_not_connected_text_color);
-            connectedStateLabel.setTextColor(textColor);
-            connectedStateLabel.setShadowLayer(0f, 0f, 0f, textColor);
-            connectedStateLabel.setText(getResources().getString(
-                    R.string.usersettings_fragment_not_logged_in));
-            connectedStateLabel.setCompoundDrawables(null, null, null, null);
-            connectedStateLabel.setTag(null);
-        }
-    }
-
-    private ImageRequest getImageRequest() {
-        ImageRequest request = null;
-        ImageRequest.Builder requestBuilder = new ImageRequest.Builder(
-                getActivity(),
-                ImageRequest.getProfilePictureUri(
-                        user.optString("id"),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_height)));
-
-        request = requestBuilder.setCallerTag(this)
-                .setCallback(
-                        new ImageRequest.Callback() {
-                            @Override
-                            public void onCompleted(ImageResponse response) {
-                                processImageResponse(user.optString("id"), response);
-                            }
-                        })
-                .build();
-        return request;
-    }
-
-    private void processImageResponse(String id, ImageResponse response) {
-        if (response != null) {
-            Bitmap bitmap = response.getBitmap();
-            if (bitmap != null) {
-                BitmapDrawable drawable = new BitmapDrawable(
-                        UserSettingsFragment.this.getResources(), bitmap);
-                drawable.setBounds(0, 0,
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_width),
-                        getResources().getDimensionPixelSize(
-                                R.dimen.usersettings_fragment_profile_picture_height));
-                userProfilePic = drawable;
-                userProfilePicID = id;
-                connectedStateLabel.setCompoundDrawables(null, drawable, null, null);
-                connectedStateLabel.setTag(response.getRequest().getImageUri());
-            }
-        }
-    }
-}
diff --git a/samples/ShareIt/AndroidManifest.xml b/samples/ShareIt/AndroidManifest.xml
deleted file mode 100644
index 2c8f2fbf1..000000000
--- a/samples/ShareIt/AndroidManifest.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.shareit">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-
-    <application
-        android:allowBackup="true"
-        android:icon="@drawable/icon"
-        android:label="@string/app_name"
-        android:theme="@style/AppTheme">
-        <activity
-            android:name=".MainActivity"
-            android:label="@string/app_name"
-            android:theme="@style/Theme.AppCompat">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="fb620223481391648" />
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationName"
-            android:value="@string/app_name" />
-    </application>
-
-</manifest>
diff --git a/samples/ShareIt/build.gradle b/samples/ShareIt/build.gradle
deleted file mode 100644
index e018897cb..000000000
--- a/samples/ShareIt/build.gradle
+++ /dev/null
@@ -1,52 +0,0 @@
-apply plugin: 'com.android.application'
-
-repositories {
-    mavenCentral()
-}
-
-dependencies {
-    // Facebook Dependencies
-    implementation project(':facebook-share')
-    implementation project(':facebook-login')
-    // Support Dependencies
-    implementation "com.android.support:appcompat-v7:${project.ext.supportLibraryVersion}"
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId 'com.example.shareit'
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    buildTypes {
-        debug {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
-        }
-        release {
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
-        }
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
diff --git a/samples/ShareIt/proguard-project.txt b/samples/ShareIt/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/ShareIt/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/ShareIt/res/drawable-hdpi/goofy.png b/samples/ShareIt/res/drawable-hdpi/goofy.png
deleted file mode 100644
index b91571ce0..000000000
Binary files a/samples/ShareIt/res/drawable-hdpi/goofy.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-hdpi/icon.png b/samples/ShareIt/res/drawable-hdpi/icon.png
deleted file mode 100644
index ae01da1ea..000000000
Binary files a/samples/ShareIt/res/drawable-hdpi/icon.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-hdpi/liking.png b/samples/ShareIt/res/drawable-hdpi/liking.png
deleted file mode 100644
index cc54856a5..000000000
Binary files a/samples/ShareIt/res/drawable-hdpi/liking.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-hdpi/viking.png b/samples/ShareIt/res/drawable-hdpi/viking.png
deleted file mode 100644
index c26a9e3c0..000000000
Binary files a/samples/ShareIt/res/drawable-hdpi/viking.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-mdpi/goofy.png b/samples/ShareIt/res/drawable-mdpi/goofy.png
deleted file mode 100644
index 421f35a9b..000000000
Binary files a/samples/ShareIt/res/drawable-mdpi/goofy.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-mdpi/icon.png b/samples/ShareIt/res/drawable-mdpi/icon.png
deleted file mode 100644
index 50cdca5ee..000000000
Binary files a/samples/ShareIt/res/drawable-mdpi/icon.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-mdpi/liking.png b/samples/ShareIt/res/drawable-mdpi/liking.png
deleted file mode 100644
index 17899bf04..000000000
Binary files a/samples/ShareIt/res/drawable-mdpi/liking.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-mdpi/viking.png b/samples/ShareIt/res/drawable-mdpi/viking.png
deleted file mode 100644
index e9bb7492b..000000000
Binary files a/samples/ShareIt/res/drawable-mdpi/viking.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-xhdpi/goofy.png b/samples/ShareIt/res/drawable-xhdpi/goofy.png
deleted file mode 100644
index 92f774b90..000000000
Binary files a/samples/ShareIt/res/drawable-xhdpi/goofy.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-xhdpi/icon.png b/samples/ShareIt/res/drawable-xhdpi/icon.png
deleted file mode 100644
index 3775b0c2d..000000000
Binary files a/samples/ShareIt/res/drawable-xhdpi/icon.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-xhdpi/liking.png b/samples/ShareIt/res/drawable-xhdpi/liking.png
deleted file mode 100644
index 584654e82..000000000
Binary files a/samples/ShareIt/res/drawable-xhdpi/liking.png and /dev/null differ
diff --git a/samples/ShareIt/res/drawable-xhdpi/viking.png b/samples/ShareIt/res/drawable-xhdpi/viking.png
deleted file mode 100644
index ce21faecf..000000000
Binary files a/samples/ShareIt/res/drawable-xhdpi/viking.png and /dev/null differ
diff --git a/samples/ShareIt/res/layout/image_slide_view.xml b/samples/ShareIt/res/layout/image_slide_view.xml
deleted file mode 100644
index fcec40690..000000000
--- a/samples/ShareIt/res/layout/image_slide_view.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/content"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content" >
-
-    <ImageView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/share_image"
-        android:contentDescription="@string/likeable_image"/>
-</ScrollView>
diff --git a/samples/ShareIt/res/layout/main.xml b/samples/ShareIt/res/layout/main.xml
deleted file mode 100644
index f8102d7a3..000000000
--- a/samples/ShareIt/res/layout/main.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical" android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <fragment android:name="com.example.shareit.ShareFragment"
-        android:id="@+id/sharefragment"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-</LinearLayout>
diff --git a/samples/ShareIt/res/layout/share_it_view.xml b/samples/ShareIt/res/layout/share_it_view.xml
deleted file mode 100644
index 65faf509f..000000000
--- a/samples/ShareIt/res/layout/share_it_view.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:fb="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fillViewport="true">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <com.example.shareit.ImageViewPager
-            android:id="@+id/pager"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_margin="5dp" />
-
-        <com.example.shareit.PageSelector
-            android:id="@+id/page_selector"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal" />
-
-        <com.facebook.login.widget.LoginButton
-            android:id="@+id/login_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:layout_margin="5dp" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:layout_margin="5dp"
-            android:text="@string/main_page_text" />
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/ShareIt/res/menu/share_menu.xml b/samples/ShareIt/res/menu/share_menu.xml
deleted file mode 100644
index 3870ddb94..000000000
--- a/samples/ShareIt/res/menu/share_menu.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:shareit="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <item
-        android:id="@+id/menu_item_share"
-        shareit:showAsAction="ifRoom"
-        android:title="@string/share_menu_title"
-        shareit:actionProviderClass="android.support.v7.widget.ShareActionProvider" />
-
-</menu>
diff --git a/samples/ShareIt/res/values/strings.xml b/samples/ShareIt/res/values/strings.xml
deleted file mode 100644
index 9efc84df2..000000000
--- a/samples/ShareIt/res/values/strings.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="app_name">ShareIt</string>
-    <string name="main_page_text">Share It! App</string>
-    <string name="likeable_image">Likeable image</string>
-    <string name="share_menu_title">Share</string>
-    <string name="fb_login_protocol_scheme">fb620223481391648</string>
-</resources>
diff --git a/samples/ShareIt/res/values/styles.xml b/samples/ShareIt/res/values/styles.xml
deleted file mode 100644
index 1a1e4e0b2..000000000
--- a/samples/ShareIt/res/values/styles.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-
-    <!--
-        Base application theme, dependent on API level. This theme is replaced
-        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
-    -->
-    <style name="AppBaseTheme" parent="android:Theme.Light">
-        <!--
-            Theme customizations available in newer API levels can go in
-            res/values-vXX/styles.xml, while customizations related to
-            backward-compatibility can go here.
-        -->
-    </style>
-
-    <!-- Application theme. -->
-    <style name="AppTheme" parent="AppBaseTheme">
-        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
-    </style>
-
-</resources>
diff --git a/samples/ShareIt/src/com/example/shareit/ImageViewPager.java b/samples/ShareIt/src/com/example/shareit/ImageViewPager.java
deleted file mode 100644
index 80488e2ff..000000000
--- a/samples/ShareIt/src/com/example/shareit/ImageViewPager.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.shareit;
-
-import android.content.Context;
-import android.support.v4.view.ViewPager;
-import android.util.AttributeSet;
-import android.view.View;
-
-public class ImageViewPager extends ViewPager {
-    public ImageViewPager(Context context) {
-        super(context);
-    }
-
-    public ImageViewPager(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-
-        View view = getChildAt(0);
-        if (view != null) {
-            view.measure(widthMeasureSpec, heightMeasureSpec);
-            setMeasuredDimension(getMeasuredWidth(), view.getMeasuredHeight());
-        }
-    }
-}
diff --git a/samples/ShareIt/src/com/example/shareit/MainActivity.java b/samples/ShareIt/src/com/example/shareit/MainActivity.java
deleted file mode 100644
index fc6cb7954..000000000
--- a/samples/ShareIt/src/com/example/shareit/MainActivity.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.shareit;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.view.MenuItemCompat;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.ShareActionProvider;
-import android.view.Menu;
-import android.view.MenuItem;
-
-public class MainActivity extends AppCompatActivity {
-    private ShareActionProvider mShareActionProvider;
-    private ShareFragment mShareFragment;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.main);
-        FragmentManager fm = getSupportFragmentManager();
-        mShareFragment = (ShareFragment) fm.findFragmentById(R.id.sharefragment);
-        mShareFragment.setOnShareContentChangeListener(
-                new ShareFragment.OnShareContentChangedListener() {
-            @Override
-            public void onShareContentChanged(String content) {
-                setShareUrl(content);
-            }
-        });
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate menu resource file.
-        getMenuInflater().inflate(R.menu.share_menu, menu);
-
-        // Locate MenuItem with ShareActionProvider
-        MenuItem item = menu.findItem(R.id.menu_item_share);
-
-        // Fetch and store ShareActionProvider
-        mShareActionProvider = (ShareActionProvider) MenuItemCompat.getActionProvider(item);
-        setShareUrl(mShareFragment.getCurrentShareContent());
-
-        // Return true to display menu
-        return true;
-    }
-
-    private void setShareUrl(String shareUrl) {
-        // When using androids share built into the ActionBar app attribution will not be
-        // present when sharing to facebook and app events will not be logged.
-        if (mShareActionProvider != null) {
-            Intent shareIntent = new Intent(Intent.ACTION_SEND);
-            shareIntent.setType("text/plain");
-            shareIntent.putExtra(Intent.EXTRA_TEXT, shareUrl);
-            mShareActionProvider.setShareIntent(shareIntent);
-        }
-    }
-
-    @Override
-    protected void onSaveInstanceState(final Bundle outState) {
-        // Don't save any state
-    }
-}
diff --git a/samples/ShareIt/src/com/example/shareit/PageSelector.java b/samples/ShareIt/src/com/example/shareit/PageSelector.java
deleted file mode 100644
index ecc44fd12..000000000
--- a/samples/ShareIt/src/com/example/shareit/PageSelector.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.shareit;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.util.AttributeSet;
-import android.view.View;
-
-public class PageSelector extends View {
-    private static final int CIRCLE_RADIUS = 20;
-    private static final int CIRCLE_MARGIN = 20;
-    private static final int CIRCLE_SPACING = CIRCLE_RADIUS * 2 + CIRCLE_MARGIN;
-    private Paint paintGray;
-    private Paint paintWhite;
-
-    private int mPosition;
-    private int mImageCount;
-
-    public PageSelector(Context context) {
-        super(context);
-        init();
-    }
-
-    public PageSelector(Context context, AttributeSet attrs) {
-        super(context, attrs);
-        init();
-    }
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        int start_x = canvas.getWidth() / 2 - (CIRCLE_SPACING) * (mImageCount / 2);
-        if (mImageCount % 2 == 0) {
-            start_x += CIRCLE_SPACING / 2;
-        }
-
-        for (int i = 0; i < mImageCount; ++i) {
-            Paint paint = (i == mPosition) ? paintWhite : paintGray;
-            float x = start_x + i * CIRCLE_SPACING;
-            float y = canvas.getHeight() / 2;
-            canvas.drawCircle(x, y, CIRCLE_RADIUS, paint);
-        }
-    }
-
-    public void setPosition(int position) {
-        this.mPosition = position;
-        invalidate();
-    }
-
-    public void setImageCount(int imageCount) {
-        this.mImageCount = imageCount;
-        invalidate();
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        setMeasuredDimension(CIRCLE_SPACING * mImageCount, CIRCLE_SPACING);
-    }
-
-    private void init() {
-        paintGray = new Paint();
-        paintGray.setStyle(Paint.Style.FILL);
-        paintGray.setColor(Color.GRAY);
-
-        paintWhite = new Paint();
-        paintWhite.setStyle(Paint.Style.FILL);
-        paintWhite.setColor(Color.WHITE);
-    }
-
-}
diff --git a/samples/ShareIt/src/com/example/shareit/ShareFragment.java b/samples/ShareIt/src/com/example/shareit/ShareFragment.java
deleted file mode 100644
index 76ee90d48..000000000
--- a/samples/ShareIt/src/com/example/shareit/ShareFragment.java
+++ /dev/null
@@ -1,139 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.shareit;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentStatePagerAdapter;
-import android.support.v4.view.PagerAdapter;
-import android.support.v4.view.ViewPager;
-import android.util.Pair;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.facebook.CallbackManager;
-import com.facebook.login.widget.LoginButton;
-
-import java.util.ArrayList;
-
-public class ShareFragment extends Fragment {
-    private CallbackManager mCallbackManager;
-    private OnShareContentChangedListener mShareContentChangedListener;
-    private ViewPager mViewPage;
-
-    // The resource to url mapping
-    private static final ArrayList<Pair<Integer, String>> IMAGE_IDS =
-            new ArrayList<Pair<Integer, String>>() { {
-                add(new Pair<>(R.drawable.goofy,
-                  "https://d3uu10x6fsg06w.cloudfront.net/shareitexampleapp/goofy/index.html"));
-                add(new Pair<>(R.drawable.liking,
-                  "https://d3uu10x6fsg06w.cloudfront.net/shareitexampleapp/liking/index.html"));
-                add(new Pair<>(R.drawable.viking,
-                  "https://d3uu10x6fsg06w.cloudfront.net/shareitexampleapp/viking/index.html"));
-            }};
-
-    @Override
-    public View onCreateView(
-            LayoutInflater inflater,
-            ViewGroup container,
-            Bundle savedInstanceState) {
-        super.onCreateView(inflater, container, savedInstanceState);
-        mCallbackManager = CallbackManager.Factory.create();
-
-        View view = inflater.inflate(R.layout.share_it_view, container, false);
-
-        LoginButton loginButton = (LoginButton) view.findViewById(R.id.login_button);
-        loginButton.setFragment(this);
-        loginButton.setReadPermissions("public_profile");
-
-        setupViewPage(view);
-        return view;
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        mCallbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    public void setOnShareContentChangeListener(OnShareContentChangedListener listener) {
-        mShareContentChangedListener = listener;
-    }
-
-    public String getCurrentShareContent() {
-        return IMAGE_IDS.get(mViewPage.getCurrentItem()).second;
-    }
-
-    private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {
-        public ScreenSlidePagerAdapter(FragmentManager fm) {
-            super(fm);
-        }
-
-        @Override
-        public Fragment getItem(int position) {
-            ShareImageFragment imageFragment = new ShareImageFragment();
-            imageFragment.setImage(IMAGE_IDS.get(position).first);
-            return imageFragment;
-        }
-
-        @Override
-        public int getCount() {
-            return IMAGE_IDS.size();
-        }
-    }
-
-    private void setupViewPage(View view) {
-        mViewPage = (ViewPager) view.findViewById(R.id.pager);
-        PagerAdapter adapter = new ScreenSlidePagerAdapter(getFragmentManager());
-        mViewPage.setAdapter(adapter);
-
-        final PageSelector pageSelector = (PageSelector) view.findViewById(R.id.page_selector);
-        pageSelector.setImageCount(IMAGE_IDS.size());
-
-        mViewPage.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
-            @Override
-            public void onPageScrolled(
-                    int position,
-                    float positionOffset,
-                    int positionOffsetPixels) {
-                pageSelector.setPosition(position);
-                String shareContent = IMAGE_IDS.get(position).second;
-                mShareContentChangedListener.onShareContentChanged(shareContent);
-            }
-
-            @Override
-            public void onPageSelected(int position) {
-            }
-
-            @Override
-            public void onPageScrollStateChanged(int state) {
-
-            }
-        });
-    }
-
-    public interface OnShareContentChangedListener {
-        void onShareContentChanged(String content);
-    }
-}
diff --git a/samples/ShareIt/src/com/example/shareit/ShareImageFragment.java b/samples/ShareIt/src/com/example/shareit/ShareImageFragment.java
deleted file mode 100644
index f7bddff09..000000000
--- a/samples/ShareIt/src/com/example/shareit/ShareImageFragment.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.shareit;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-
-public class ShareImageFragment extends Fragment {
-    private int mImageId;
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        ViewGroup rootView = (ViewGroup) inflater.inflate(
-                R.layout.image_slide_view, container, false);
-        if (mImageId != 0) {
-            ImageView image = (ImageView) rootView.findViewById(R.id.share_image);
-            image.setImageDrawable(getResources().getDrawable(mImageId));
-        }
-
-        return rootView;
-    }
-
-    public void setImage(int imageId) {
-        mImageId = imageId;
-    }
-}
diff --git a/samples/SwitchUserSample/AndroidManifest.xml b/samples/SwitchUserSample/AndroidManifest.xml
deleted file mode 100644
index d13d8a46c..000000000
--- a/samples/SwitchUserSample/AndroidManifest.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.switchuser"
-    android:versionCode="1"
-    android:versionName="1.0">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <application
-        android:allowBackup="false"
-        android:icon="@drawable/icon"
-        android:label="@string/app_name">
-        <activity
-            android:name="com.example.switchuser.MainActivity"
-            android:label="@string/app_name"
-            android:theme="@style/Theme.AppCompat"
-            android:windowSoftInputMode="adjustResize">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name="com.facebook.CustomTabActivity">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
-
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/app_id" />
-        <meta-data
-            android:name="com.facebook.sdk.ApplicationName"
-            android:value="@string/app_name" />
-    </application>
-</manifest> 
diff --git a/samples/SwitchUserSample/build.gradle b/samples/SwitchUserSample/build.gradle
deleted file mode 100644
index 2d89ef97b..000000000
--- a/samples/SwitchUserSample/build.gradle
+++ /dev/null
@@ -1,40 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    // Facebook Dependencies
-    implementation project(':facebook-login')
-    // Support Dependencies
-    implementation "com.android.support:appcompat-v7:${project.ext.supportLibraryVersion}"
-}
-
-android {
-    compileSdkVersion project.ext.compileSdk
-    buildToolsVersion project.ext.buildTools
-
-    defaultConfig {
-        applicationId 'com.example.switchuser'
-        minSdkVersion project.ext.minSdk
-        targetSdkVersion project.ext.targetSdk
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-
-    splits {
-        abi {
-            enable true
-            reset()
-            include 'armeabi', 'armeabi-v7a', 'x86'
-            universalApk true
-        }
-    }
-}
diff --git a/samples/SwitchUserSample/proguard-project.txt b/samples/SwitchUserSample/proguard-project.txt
deleted file mode 100644
index f2fe1559a..000000000
--- a/samples/SwitchUserSample/proguard-project.txt
+++ /dev/null
@@ -1,20 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/samples/SwitchUserSample/res/drawable-hdpi/ic_action_discard.png b/samples/SwitchUserSample/res/drawable-hdpi/ic_action_discard.png
deleted file mode 100644
index 703b31f80..000000000
Binary files a/samples/SwitchUserSample/res/drawable-hdpi/ic_action_discard.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-hdpi/ic_action_settings.png b/samples/SwitchUserSample/res/drawable-hdpi/ic_action_settings.png
deleted file mode 100644
index 54eecded3..000000000
Binary files a/samples/SwitchUserSample/res/drawable-hdpi/ic_action_settings.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-hdpi/icon.png b/samples/SwitchUserSample/res/drawable-hdpi/icon.png
deleted file mode 100644
index dd6f7d77e..000000000
Binary files a/samples/SwitchUserSample/res/drawable-hdpi/icon.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-mdpi/ic_action_discard.png b/samples/SwitchUserSample/res/drawable-mdpi/ic_action_discard.png
deleted file mode 100644
index 248fb09cd..000000000
Binary files a/samples/SwitchUserSample/res/drawable-mdpi/ic_action_discard.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-mdpi/ic_action_settings.png b/samples/SwitchUserSample/res/drawable-mdpi/ic_action_settings.png
deleted file mode 100644
index 25c36db42..000000000
Binary files a/samples/SwitchUserSample/res/drawable-mdpi/ic_action_settings.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-mdpi/icon.png b/samples/SwitchUserSample/res/drawable-mdpi/icon.png
deleted file mode 100644
index e193802b2..000000000
Binary files a/samples/SwitchUserSample/res/drawable-mdpi/icon.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-xhdpi/ic_action_discard.png b/samples/SwitchUserSample/res/drawable-xhdpi/ic_action_discard.png
deleted file mode 100644
index 9eeeed124..000000000
Binary files a/samples/SwitchUserSample/res/drawable-xhdpi/ic_action_discard.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-xhdpi/ic_action_settings.png b/samples/SwitchUserSample/res/drawable-xhdpi/ic_action_settings.png
deleted file mode 100644
index 425a8bc8d..000000000
Binary files a/samples/SwitchUserSample/res/drawable-xhdpi/ic_action_settings.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable-xhdpi/icon.png b/samples/SwitchUserSample/res/drawable-xhdpi/icon.png
deleted file mode 100644
index 25270e1a9..000000000
Binary files a/samples/SwitchUserSample/res/drawable-xhdpi/icon.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/drawable/icon.png b/samples/SwitchUserSample/res/drawable/icon.png
deleted file mode 100644
index e193802b2..000000000
Binary files a/samples/SwitchUserSample/res/drawable/icon.png and /dev/null differ
diff --git a/samples/SwitchUserSample/res/layout/fragment_profile.xml b/samples/SwitchUserSample/res/layout/fragment_profile.xml
deleted file mode 100644
index 2f7359311..000000000
--- a/samples/SwitchUserSample/res/layout/fragment_profile.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:app="http://schemas.android.com/apk/res-auto"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-        >
-    <TextView
-            android:id="@+id/profileUserName"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="20dp"
-            android:text="@string/greeting_no_user"
-            android:freezesText="true"
-            />
-    <com.facebook.login.widget.ProfilePictureView
-            android:id="@+id/profilePic"
-            android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            app:com_facebook_preset_size="large"
-            />
-</LinearLayout>
-
diff --git a/samples/SwitchUserSample/res/layout/list_item_user.xml b/samples/SwitchUserSample/res/layout/list_item_user.xml
deleted file mode 100644
index 1c7bb99a3..000000000
--- a/samples/SwitchUserSample/res/layout/list_item_user.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:app="http://schemas.android.com/apk/res-auto"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:id="@+id/slot"
-        >
-
-    <com.facebook.login.widget.ProfilePictureView
-            android:id="@+id/slotPic"
-            android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            android:layout_weight="0"
-            android:layout_margin="10dp"
-            app:com_facebook_preset_size="small"
-            />
-
-    <TextView
-            android:id="@+id/slotUserName"
-            android:layout_height="wrap_content"
-            android:layout_width="0dp"
-            android:layout_weight="1"
-            android:layout_gravity="center_vertical"
-            />
-
-    <CheckBox
-            android:id="@+id/currentUserIndicator"
-            android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            android:layout_weight="0"
-            android:layout_gravity="center_vertical"
-            android:focusable="false"
-            android:enabled="false"
-            />
-
-</LinearLayout>
diff --git a/samples/SwitchUserSample/res/layout/main.xml b/samples/SwitchUserSample/res/layout/main.xml
deleted file mode 100644
index 88e3eea2b..000000000
--- a/samples/SwitchUserSample/res/layout/main.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:id="@+id/fragmentContainer"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent"
-        />
diff --git a/samples/SwitchUserSample/res/menu/context_settings.xml b/samples/SwitchUserSample/res/menu/context_settings.xml
deleted file mode 100644
index 6ceb4bdf9..000000000
--- a/samples/SwitchUserSample/res/menu/context_settings.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<menu
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item android:id="@+id/menu_item_clear_slot"
-          android:icon="@drawable/ic_action_discard"
-          android:title="@string/menu_item_clear_slot"
-          app:showAsAction="always" />
-</menu>
diff --git a/samples/SwitchUserSample/res/menu/options_profile.xml b/samples/SwitchUserSample/res/menu/options_profile.xml
deleted file mode 100644
index 04d4bca7a..000000000
--- a/samples/SwitchUserSample/res/menu/options_profile.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<menu
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item
-            android:icon="@drawable/ic_action_settings"
-            android:id="@+id/menu_item_switch"
-            android:title="@string/menu_item_switch_user"
-            app:showAsAction="always"/>
-</menu>
diff --git a/samples/SwitchUserSample/res/values/strings.xml b/samples/SwitchUserSample/res/values/strings.xml
deleted file mode 100644
index def6eb3ac..000000000
--- a/samples/SwitchUserSample/res/values/strings.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="app_name">SwitchUserSample</string>
-    <string name="empty_slot">Empty Slot</string>
-    <string name="greeting_format">Hello, %s!</string>
-    <string name="greeting_no_user">Please select a user via the options menu</string>
-    <string name="menu_item_switch_user">Select User</string>
-    <string name="menu_item_clear_slot">Clear this slot</string>
-    <string name="app_id">327842977278179</string>
-    <string name="fb_login_protocol_scheme">fb327842977278179</string>
-</resources>
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
deleted file mode 100644
index b2a035214..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
+++ /dev/null
@@ -1,151 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import android.os.Bundle;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.AppCompatActivity;
-import android.view.MenuItem;
-
-public class MainActivity extends AppCompatActivity {
-
-    private static final String SHOWING_SETTINGS_KEY = "Showing settings";
-
-    private ProfileFragment profileFragment;
-    private SettingsFragment settingsFragment;
-    private boolean isShowingSettings;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.main);
-
-        restoreFragments(savedInstanceState);
-
-        if (savedInstanceState != null) {
-            if (savedInstanceState.getBoolean(SHOWING_SETTINGS_KEY)) {
-                showSettings();
-            } else {
-                showProfile();
-            }
-        } else {
-            showProfile();
-        }
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (isShowingSettings()) {
-            // This back is from the settings fragment
-            showProfile();
-        } else {
-            // Allow the user to back out of the app as well.
-            super.onBackPressed();
-        }
-    }
-
-
-    @Override
-    protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        outState.putBoolean(SHOWING_SETTINGS_KEY, isShowingSettings());
-
-        FragmentManager manager = getSupportFragmentManager();
-        manager.putFragment(outState, SettingsFragment.TAG, settingsFragment);
-        manager.putFragment(outState, ProfileFragment.TAG, profileFragment);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-
-        profileFragment.setOnOptionsItemSelectedListener(new ProfileFragment.OnOptionsItemSelectedListener() {
-            @Override
-            public boolean onOptionsItemSelected(MenuItem item) {
-                return handleOptionsItemSelected(item);
-            }
-        });
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-
-        profileFragment.setOnOptionsItemSelectedListener(null);
-    }
-
-    private void restoreFragments(Bundle savedInstanceState) {
-        FragmentManager manager = getSupportFragmentManager();
-        FragmentTransaction transaction = manager.beginTransaction();
-
-        if (savedInstanceState != null) {
-            profileFragment = (ProfileFragment) manager.getFragment(savedInstanceState,
-                    ProfileFragment.TAG);
-            settingsFragment = (SettingsFragment) manager.getFragment(savedInstanceState,
-                    SettingsFragment.TAG);
-        }
-
-        if (profileFragment == null) {
-            profileFragment = new ProfileFragment();
-            transaction.add(R.id.fragmentContainer, profileFragment, ProfileFragment.TAG);
-        }
-
-        if (settingsFragment == null) {
-            settingsFragment = new SettingsFragment();
-            transaction.add(R.id.fragmentContainer, settingsFragment, SettingsFragment.TAG);
-        }
-
-        transaction.commit();
-    }
-
-    private void showSettings() {
-        isShowingSettings = true;
-
-        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-        transaction.hide(profileFragment)
-                .show(settingsFragment)
-                .commit();
-    }
-
-    private boolean isShowingSettings() {
-        return isShowingSettings;
-    }
-
-    private void showProfile() {
-        isShowingSettings = false;
-
-        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-        transaction.hide(settingsFragment)
-                .show(profileFragment)
-                .commit();
-    }
-
-    private boolean handleOptionsItemSelected(MenuItem item) {
-        if (item.getItemId() == R.id.menu_item_switch) {
-            showSettings();
-            return true;
-        } else {
-            return false;
-        }
-    }
-}
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java b/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
deleted file mode 100644
index 310e9ebe9..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
+++ /dev/null
@@ -1,151 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.*;
-import android.widget.TextView;
-
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenTracker;
-import com.facebook.CallbackManager;
-import com.facebook.Profile;
-import com.facebook.ProfileTracker;
-import com.facebook.login.widget.ProfilePictureView;
-
-public class ProfileFragment extends Fragment {
-
-    public static final String TAG = "ProfileFragment";
-
-    private TextView userNameView;
-    private ProfilePictureView profilePictureView;
-    private OnOptionsItemSelectedListener onOptionsItemSelectedListener;
-
-    private Profile pendingUpdateForUser;
-    private CallbackManager callbackManager;
-    private ProfileTracker profileTracker;
-    private AccessTokenTracker accessTokenTracker;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setHasOptionsMenu(true);
-        callbackManager = CallbackManager.Factory.create();
-        profileTracker = new ProfileTracker() {
-            @Override
-            protected void onCurrentProfileChanged(Profile oldProfile, Profile currentProfile) {
-                setProfile(currentProfile);
-            }
-        };
-
-        accessTokenTracker = new AccessTokenTracker() {
-            @Override
-            protected void onCurrentAccessTokenChanged(
-                    AccessToken oldAccessToken,
-                    AccessToken currentAccessToken) {
-                // On AccessToken changes fetch the new profile which fires the event on
-                // the ProfileTracker if the profile is different
-                Profile.fetchProfileForCurrentAccessToken();
-            }
-        };
-
-        // Ensure that our profile is up to date
-        Profile.fetchProfileForCurrentAccessToken();
-        setProfile(Profile.getCurrentProfile());
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        super.onCreateOptionsMenu(menu, inflater);
-        inflater.inflate(R.menu.options_profile, menu);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        boolean handled = false;
-        OnOptionsItemSelectedListener listener = onOptionsItemSelectedListener;
-        if (listener != null) {
-            handled = listener.onOptionsItemSelected(item);
-        }
-
-        if (!handled) {
-            handled = super.onOptionsItemSelected(item);
-        }
-
-        return handled;
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {
-        View v = inflater.inflate(R.layout.fragment_profile, parent, false);
-
-        userNameView = (TextView) v.findViewById(R.id.profileUserName);
-        profilePictureView = (ProfilePictureView) v.findViewById(R.id.profilePic);
-
-        if (pendingUpdateForUser != null) {
-            setProfile(pendingUpdateForUser);
-            pendingUpdateForUser = null;
-        }
-
-        return v;
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        profileTracker.stopTracking();
-        accessTokenTracker.stopTracking();
-    }
-
-    public void setOnOptionsItemSelectedListener(OnOptionsItemSelectedListener listener) {
-        this.onOptionsItemSelectedListener = listener;
-    }
-
-    private void setProfile(Profile profile) {
-        if (userNameView == null || profilePictureView == null || !isAdded()) {
-            // Fragment not yet added to the view. So let's store which user was intended
-            // for display.
-            pendingUpdateForUser = profile;
-            return;
-        }
-
-        if (profile == null) {
-            profilePictureView.setProfileId(null);
-            userNameView.setText(R.string.greeting_no_user);
-        } else {
-            profilePictureView.setProfileId(profile.getId());
-            userNameView.setText(String.format(getString(R.string.greeting_format),
-                    profile.getName()));
-        }
-    }
-
-    public interface OnOptionsItemSelectedListener {
-        boolean onOptionsItemSelected(MenuItem item);
-    }
-}
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java b/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
deleted file mode 100644
index 84ebb9292..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
+++ /dev/null
@@ -1,348 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.graphics.Color;
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.*;
-import android.widget.*;
-
-import com.facebook.AccessToken;
-import com.facebook.CallbackManager;
-import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
-import com.facebook.FacebookSdk;
-import com.facebook.Profile;
-import com.facebook.ProfileTracker;
-import com.facebook.login.LoginBehavior;
-import com.facebook.login.LoginManager;
-import com.facebook.login.LoginResult;
-import com.facebook.login.widget.ProfilePictureView;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-
-public class SettingsFragment extends ListFragment {
-
-    public static final String TAG = "SettingsFragment";
-    private static final String CURRENT_SLOT_KEY = "CurrentSlot";
-
-    private SlotManager slotManager;
-    private Menu optionsMenu;
-    private CallbackManager callbackManager;
-    private ProfileTracker profileTracker;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        slotManager = new SlotManager();
-        slotManager.restore(
-                getActivity(),
-                savedInstanceState != null ?
-                        savedInstanceState.getInt(CURRENT_SLOT_KEY, SlotManager.NO_SLOT) :
-                        SlotManager.NO_SLOT);
-        ArrayList<Slot> slotList = new ArrayList<Slot>(
-                Arrays.asList(slotManager.getAllSlots()));
-
-        Slot currentSlot = slotManager.getSelectedSlot();
-        if (currentSlot != null && currentSlot.getAccessToken() != null) {
-            AccessToken.setCurrentAccessToken(currentSlot.getAccessToken());
-        }
-
-        setListAdapter(new SlotAdapter(slotList));
-        setHasOptionsMenu(true);
-        setUpCallbacks();
-        currentUserChanged();
-    }
-
-    @Override
-    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        super.onCreateOptionsMenu(menu, inflater);
-        inflater.inflate(R.menu.context_settings, menu);
-        optionsMenu = menu;
-        updateMenuVisibility();
-    }
-
-    private void setUpCallbacks() {
-        callbackManager = CallbackManager.Factory.create();
-        LoginManager manager = LoginManager.getInstance();
-        manager.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {
-            @Override
-            public void onSuccess(LoginResult loginResult) {
-                Profile.fetchProfileForCurrentAccessToken();
-            }
-
-            @Override
-            public void onError(FacebookException exception) {
-                AccessToken.setCurrentAccessToken(null);
-                currentUserChanged();
-            }
-
-            @Override
-            public void onCancel() {
-                AccessToken.setCurrentAccessToken(null);
-                currentUserChanged();
-            }
-        });
-
-        profileTracker = new ProfileTracker() {
-            @Override
-            protected void onCurrentProfileChanged(Profile oldProfile, Profile currentProfile) {
-                Slot currentSlot = slotManager.getSelectedSlot();
-                AccessToken currentAccessToken = AccessToken.getCurrentAccessToken();
-                if(currentSlot != null && currentAccessToken != null && currentProfile != null) {
-                    currentSlot.setUserInfo(
-                            new UserInfo(currentProfile.getName(), currentAccessToken));
-                    currentUserChanged();
-                }
-            }
-        };
-    }
-
-    @Override
-    public void onListItemClick(ListView l, View view, int position, long id) {
-        slotManager.setCurrentUserSlot(position);
-        Slot newSlot = slotManager.getSelectedSlot();
-        if (newSlot.getAccessToken() == null) {
-            final LoginManager manager = LoginManager.getInstance();
-            manager.setLoginBehavior(newSlot.getLoginBehavior());
-            manager.logInWithReadPermissions(this, null);
-        } else {
-            AccessToken.setCurrentAccessToken(newSlot.getAccessToken());
-        }
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        Slot slot = slotManager.getSelectedSlot();
-
-        if (item.getItemId() == R.id.menu_item_clear_slot) {
-            if (slot.getUserId() != null) {
-                // Clear out data that this app stored in the cache
-                // Not calling Session.closeAndClearTokenInformation() because we have
-                // additional data stored in the cache.
-                slot.clear();
-                if (slot == slotManager.getSelectedSlot()) {
-                    slotManager.setCurrentUserSlot(SlotManager.NO_SLOT);
-                }
-
-                currentUserChanged();
-            }
-            return true;
-        }
-
-        return super.onContextItemSelected(item);
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        outState.putInt(CURRENT_SLOT_KEY, slotManager.getSelectedSlotNumber());
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        callbackManager.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        profileTracker.stopTracking();
-    }
-
-    private void updateMenuVisibility() {
-        if (optionsMenu != null) {
-            if (slotManager.getSelectedSlot() == null) {
-                optionsMenu.setGroupVisible(0, false);
-            } else if (optionsMenu != null) {
-                optionsMenu.setGroupVisible(0, true);
-            }
-        }
-    }
-
-    private void currentUserChanged() {
-        if (slotManager == null) {
-            // Fragment has not had onCreate called yet.
-            return;
-        }
-
-        updateMenuVisibility();
-        updateListView();
-        Slot currentSlot = slotManager.getSelectedSlot();
-        AccessToken currentToken = (currentSlot != null) ? currentSlot.getAccessToken() : null;
-        AccessToken.setCurrentAccessToken(currentToken);
-    }
-
-    private void updateListView() {
-        SlotAdapter adapter = (SlotAdapter) getListAdapter();
-
-        // Adapter will be null if the list is not shown
-        if (adapter != null) {
-            adapter.notifyDataSetChanged();
-        }
-    }
-
-    private class SlotManager {
-        static final int NO_SLOT = -1;
-
-        private final static int MAX_SLOTS = 4;
-
-        private static final String SETTINGS_CURRENT_SLOT_KEY = "CurrentSlot";
-        private static final String SETTINGS_NAME = "UserManagerSettings";
-
-        private SharedPreferences settings;
-        private int selectedSlotNumber = NO_SLOT;
-
-        private Slot[] slots;
-
-        public void restore(Context context, int oldSelectedSlot) {
-            if (context == null) {
-                throw new IllegalArgumentException("context cannot be null");
-            }
-
-            slots = new Slot[MAX_SLOTS];
-            for (int i = 0; i < MAX_SLOTS; i++) {
-                LoginBehavior loginBehavior = (i == 0) ?
-                        LoginBehavior.NATIVE_WITH_FALLBACK :
-                        LoginBehavior.WEB_ONLY;
-                slots[i] = new Slot(i, loginBehavior);
-            }
-
-            // Restore the last known state from when the app ran last.
-            settings = FacebookSdk.getApplicationContext().getSharedPreferences(
-                    SETTINGS_NAME, Context.MODE_PRIVATE);
-            int savedSlotNumber = settings.getInt(SETTINGS_CURRENT_SLOT_KEY, NO_SLOT);
-            if (savedSlotNumber != NO_SLOT && savedSlotNumber != oldSelectedSlot) {
-                // This will trigger the full flow of login
-                setCurrentUserSlot(savedSlotNumber);
-            } else {
-                // We already knew which slot was selected. So don't notify that a new slot was
-                // selected since that will log out and start login process. And
-                // doing so will have the effect of clearing out state like the profile pic.
-                setCurrentUserSlot(savedSlotNumber);
-            }
-        }
-
-        public Slot getSelectedSlot() {
-            if (selectedSlotNumber == NO_SLOT) {
-                return null;
-            } else {
-                return getSlot(selectedSlotNumber);
-            }
-        }
-
-        public int getSelectedSlotNumber() {
-            return selectedSlotNumber;
-        }
-
-        public void setCurrentUserSlot(int slot) {
-            if (slot != selectedSlotNumber) {
-                // Store the selected slot number for when the app is closed and restarted
-                settings.edit().putInt(SETTINGS_CURRENT_SLOT_KEY, slot).apply();
-                selectedSlotNumber = slot;
-                currentUserChanged();
-            }
-        }
-
-        private Slot[] getAllSlots() {
-            return slots;
-        }
-
-        private Slot getSlot(int slot) {
-            validateSlot(slot);
-            return slots[slot];
-        }
-
-        private void validateSlot(int slot) {
-            if (slot <= NO_SLOT || slot >= MAX_SLOTS) {
-                throw new IllegalArgumentException(
-                        String.format("Choose a slot between 0 and %d inclusively", MAX_SLOTS - 1));
-            }
-        }
-    }
-
-    private class SlotAdapter extends ArrayAdapter<Slot> {
-
-        public SlotAdapter(ArrayList<Slot> slots) {
-            super(getActivity(), android.R.layout.simple_list_item_1, slots);
-        }
-
-        @Override
-        public View getView(final int position, View convertView, ViewGroup parent) {
-            if (null == convertView) {
-                convertView = getActivity().getLayoutInflater()
-                        .inflate(R.layout.list_item_user, parent, false);
-            }
-
-            Slot slot = getItem(position);
-            if (slot.getLoginBehavior() != LoginBehavior.WEB_ONLY) {
-                convertView.setBackgroundColor(Color.argb(50, 255, 255, 255));
-            }
-
-            String userName = slot.getUserName();
-            if (userName == null) {
-                userName = getString(R.string.empty_slot);
-            }
-
-            String userId = slot.getUserId();
-            ProfilePictureView profilePic = (ProfilePictureView) convertView.findViewById(
-                    R.id.slotPic);
-            if (userId != null) {
-                profilePic.setProfileId(userId);
-            } else {
-                profilePic.setProfileId(null);
-            }
-
-            TextView userNameTextView = (TextView) convertView.findViewById(
-                    R.id.slotUserName);
-            userNameTextView.setText(userName);
-
-            final CheckBox currentUserCheckBox = (CheckBox) convertView.findViewById(
-                    R.id.currentUserIndicator);
-            currentUserCheckBox.setChecked(
-                    slotManager.getSelectedSlot() == slot
-                            && slot.getUserInfo() != null);
-            currentUserCheckBox.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (currentUserCheckBox.isChecked()) {
-                        slotManager.setCurrentUserSlot(position);
-                    } else {
-                        slotManager.setCurrentUserSlot(SlotManager.NO_SLOT);
-                    }
-                    SlotAdapter adapter = (SlotAdapter) getListAdapter();
-                    adapter.notifyDataSetChanged();
-                }
-            });
-
-            currentUserCheckBox.setEnabled(slot.getAccessToken() != null);
-
-            return convertView;
-        }
-
-    }
-}
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/Slot.java b/samples/SwitchUserSample/src/com/example/switchuser/Slot.java
deleted file mode 100644
index 2b1d549db..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/Slot.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import com.facebook.AccessToken;
-import com.facebook.login.LoginBehavior;
-
-public class Slot {
-    private UserInfo userInfo;
-    private final UserInfoCache userInfoCache;
-    private LoginBehavior loginBehavior;
-
-    public Slot(int slotNumber, LoginBehavior loginBehavior) {
-        this.loginBehavior = loginBehavior;
-        this.userInfoCache = new UserInfoCache(slotNumber);
-        this.userInfo = userInfoCache.get();
-    }
-
-    public LoginBehavior getLoginBehavior() {
-        return loginBehavior;
-    }
-
-    public String getUserName() {
-        return (userInfo != null) ? userInfo.getUserName() : null;
-    }
-
-    public AccessToken getAccessToken() {
-        return (userInfo != null) ? userInfo.getAccessToken() : null;
-    }
-
-    public String getUserId() {
-        return (userInfo != null) ? userInfo.getAccessToken().getUserId() : null;
-    }
-
-    public UserInfo getUserInfo() {
-        return userInfo;
-    }
-
-    public void setUserInfo(UserInfo user) {
-        userInfo = user;
-        if (user == null) {
-            return;
-        }
-
-        userInfoCache.put(user);
-    }
-
-    public void clear() {
-        userInfo = null;
-        userInfoCache.clear();
-    }
-}
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java b/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
deleted file mode 100644
index f81aa9949..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import android.os.Parcel;
-import android.os.Parcelable;
-
-import com.facebook.AccessToken;
-
-class UserInfo implements Parcelable {
-    private String userName;
-    private AccessToken accessToken;
-
-    public UserInfo(String userName, AccessToken accessToken) {
-        this.userName = userName;
-        this.accessToken = accessToken;
-    }
-
-    public String getUserName() {
-        return userName;
-    }
-
-    public AccessToken getAccessToken() {
-        return accessToken;
-    }
-
-    UserInfo(Parcel parcel) {
-        this.userName = parcel.readString();
-        this.accessToken = parcel.readParcelable(UserInfo.class.getClassLoader());
-    }
-
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
-    @Override
-    public void writeToParcel(Parcel dest, int flags) {
-        dest.writeString(userName);
-        dest.writeParcelable(accessToken, 0);
-    }
-
-    public static final Parcelable.Creator<UserInfo> CREATOR = new Parcelable.Creator() {
-
-        @Override
-        public UserInfo createFromParcel(Parcel source) {
-            return new UserInfo(source);
-        }
-
-        @Override
-        public UserInfo[] newArray(int size) {
-            return new UserInfo[size];
-        }
-    };
-}
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java b/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
deleted file mode 100644
index 2ac7fdb9a..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
+++ /dev/null
@@ -1,89 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Parcel;
-import android.util.Base64;
-
-import com.facebook.FacebookSdk;
-
-class UserInfoCache {
-    private static final String USER_INFO_CACHE_FORMAT = "userInfo%d";
-    private final String userInfoCacheKey;
-    private final int slot;
-
-    public UserInfoCache(int slotNumber) {
-        userInfoCacheKey = String.format(USER_INFO_CACHE_FORMAT, slotNumber);
-        slot = slotNumber;
-    }
-    public UserInfo get() {
-        SharedPreferences prefs = getSharedPrefs();
-        String encodedToken = prefs.getString(userInfoCacheKey, null);
-        if(encodedToken == null) {
-            return null;
-        }
-        UserInfo info = decodeUserInfo(encodedToken);
-        if (info.getAccessToken().isExpired()) {
-            clear();
-            return null;
-        }
-        return info;
-    }
-
-    public void put(UserInfo userInfo) {
-        SharedPreferences.Editor editor = getSharedPrefs().edit();
-        String encodedToken = encodeUserInfo(userInfo);
-        editor.putString(userInfoCacheKey, encodedToken);
-        editor.apply();
-    }
-
-    public void clear() {
-        SharedPreferences.Editor editor = getSharedPrefs().edit();
-        editor.remove(userInfoCacheKey);
-        editor.apply();
-    }
-
-    private static SharedPreferences getSharedPrefs() {
-        return FacebookSdk.getApplicationContext().getSharedPreferences(
-                "accessTokens",
-                Context.MODE_PRIVATE);
-    }
-
-    private static UserInfo decodeUserInfo(String base64EncodedToken) {
-        byte[] data = Base64.decode(base64EncodedToken, Base64.DEFAULT);
-        Parcel parcel = Parcel.obtain();
-        parcel.unmarshall(data, 0, data.length);
-        parcel.setDataPosition(0);
-        UserInfo userInfo = (UserInfo) parcel.readValue(UserInfo.class.getClassLoader());
-        parcel.recycle();
-        return userInfo;
-    }
-
-    private static String encodeUserInfo(UserInfo userInfo) {
-        Parcel parcel = Parcel.obtain();
-        parcel.writeValue(userInfo);
-        byte[] data = parcel.marshall();
-        parcel.recycle();
-        return Base64.encodeToString(data, Base64.DEFAULT);
-    }
-}
