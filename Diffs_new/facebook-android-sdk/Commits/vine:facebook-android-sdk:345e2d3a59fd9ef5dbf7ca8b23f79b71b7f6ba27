diff --git a/facebook/AndroidManifest.xml b/facebook/AndroidManifest.xml
index 2f9284fb0..d7e8d3e7e 100644
--- a/facebook/AndroidManifest.xml
+++ b/facebook/AndroidManifest.xml
@@ -18,5 +18,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.facebook.android">
     <application/>
-    <uses-sdk android:minSdkVersion="8" />
+    <uses-sdk android:minSdkVersion="14" />
 </manifest>
diff --git a/facebook/facebook.iml b/facebook/facebook.iml
new file mode 100644
index 000000000..3fefd16cf
--- /dev/null
+++ b/facebook/facebook.iml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="LIBRARY_PROJECT" value="true" />
+        <notImportedProperties>
+          <property>MANIFEST_FILE_PATH</property>
+          <property>RESOURCES_DIR_PATH</property>
+          <property>ASSETS_DIR_PATH</property>
+          <property>NATIVE_LIBS_DIR_PATH</property>
+        </notImportedProperties>
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/gen" isTestSource="false" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android 4.2.2" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="shared" level="project" />
+  </component>
+</module>
+
diff --git a/facebook/libs b/facebook/libs
deleted file mode 120000
index d4bda9b46..000000000
--- a/facebook/libs
+++ /dev/null
@@ -1 +0,0 @@
-../libs
\ No newline at end of file
diff --git a/facebook/project.properties b/facebook/project.properties
index cd0ca122a..4a46b9d1c 100644
--- a/facebook/project.properties
+++ b/facebook/project.properties
@@ -12,4 +12,4 @@
 
 android.library=true
 # Project target.
-target=android-8
+target=android-17
diff --git a/facebook/src/com/facebook/Session.java b/facebook/src/com/facebook/Session.java
index 8e3f4d410..fd6f85aa3 100644
--- a/facebook/src/com/facebook/Session.java
+++ b/facebook/src/com/facebook/Session.java
@@ -1546,7 +1546,7 @@ public Activity getActivityContext() {
             startActivityDelegate = new StartActivityDelegate() {
                 @Override
                 public void startActivityForResult(Intent intent, int requestCode) {
-                    fragment.startActivityForResult(intent, requestCode);
+                    fragment.getActivity().startActivityForResult(intent, requestCode);
                 }
 
                 @Override
diff --git a/facebook/src/com/facebook/android/Util.java b/facebook/src/com/facebook/android/Util.java
index 231c1e78c..8906777ee 100644
--- a/facebook/src/com/facebook/android/Util.java
+++ b/facebook/src/com/facebook/android/Util.java
@@ -45,54 +45,6 @@
 
     private final static String UTF8 = "UTF-8";
 
-    /**
-     * Generate the multi-part post body providing the parameters and boundary
-     * string
-     * 
-     * @param parameters the parameters need to be posted
-     * @param boundary the random string as boundary
-     * @return a string of the post body
-     */
-    @Deprecated
-    public static String encodePostBody(Bundle parameters, String boundary) {
-        if (parameters == null) return "";
-        StringBuilder sb = new StringBuilder();
-
-        for (String key : parameters.keySet()) {
-            Object parameter = parameters.get(key);
-            if (!(parameter instanceof String)) {
-                continue;
-            }
-
-            sb.append("Content-Disposition: form-data; name=\"" + key +
-                    "\"\r\n\r\n" + (String)parameter);
-            sb.append("\r\n" + "--" + boundary + "\r\n");
-        }
-
-        return sb.toString();
-    }
-
-    @Deprecated
-    public static String encodeUrl(Bundle parameters) {
-        if (parameters == null) {
-            return "";
-        }
-
-        StringBuilder sb = new StringBuilder();
-        boolean first = true;
-        for (String key : parameters.keySet()) {
-            Object parameter = parameters.get(key);
-            if (!(parameter instanceof String)) {
-                continue;
-            }
-
-            if (first) first = false; else sb.append("&");
-            sb.append(URLEncoder.encode(key) + "=" +
-                      URLEncoder.encode(parameters.getString(key)));
-        }
-        return sb.toString();
-    }
-
     @Deprecated
     public static Bundle decodeUrl(String s) {
         Bundle params = new Bundle();
@@ -135,175 +87,4 @@ public static Bundle parseUrl(String url) {
             return new Bundle();
         }
     }
-
-    
-    /**
-     * Connect to an HTTP URL and return the response as a string.
-     *
-     * Note that the HTTP method override is used on non-GET requests. (i.e.
-     * requests are made as "POST" with method specified in the body).
-     *
-     * @param url - the resource to open: must be a welformed URL
-     * @param method - the HTTP method to use ("GET", "POST", etc.)
-     * @param params - the query parameter for the URL (e.g. access_token=foo)
-     * @return the URL contents as a String
-     * @throws MalformedURLException - if the URL format is invalid
-     * @throws IOException - if a network problem occurs
-     */
-    @Deprecated
-    public static String openUrl(String url, String method, Bundle params)
-          throws MalformedURLException, IOException {
-        // random string as boundary for multi-part http post
-        String strBoundary = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
-        String endLine = "\r\n";
-
-        OutputStream os;
-
-        if (method.equals("GET")) {
-            url = url + "?" + encodeUrl(params);
-        }
-        Utility.logd("Facebook-Util", method + " URL: " + url);
-        HttpURLConnection conn =
-            (HttpURLConnection) new URL(url).openConnection();
-        conn.setRequestProperty("User-Agent", System.getProperties().
-                getProperty("http.agent") + " FacebookAndroidSDK");
-        if (!method.equals("GET")) {
-            Bundle dataparams = new Bundle();
-            for (String key : params.keySet()) {
-                Object parameter = params.get(key);
-                if (parameter instanceof byte[]) {
-                    dataparams.putByteArray(key, (byte[])parameter);
-                }
-            }
-
-            // use method override
-            if (!params.containsKey("method")) {
-                params.putString("method", method);
-            }
-
-            if (params.containsKey("access_token")) {
-                String decoded_token =
-                    URLDecoder.decode(params.getString("access_token"));
-                params.putString("access_token", decoded_token);
-            }
-
-            conn.setRequestMethod("POST");
-            conn.setRequestProperty(
-                    "Content-Type",
-                    "multipart/form-data;boundary="+strBoundary);
-            conn.setDoOutput(true);
-            conn.setDoInput(true);
-            conn.setRequestProperty("Connection", "Keep-Alive");
-            conn.connect();
-            os = new BufferedOutputStream(conn.getOutputStream());
-
-            os.write(("--" + strBoundary +endLine).getBytes());
-            os.write((encodePostBody(params, strBoundary)).getBytes());
-            os.write((endLine + "--" + strBoundary + endLine).getBytes());
-
-            if (!dataparams.isEmpty()) {
-
-                for (String key: dataparams.keySet()){
-                    os.write(("Content-Disposition: form-data; filename=\"" + key + "\"" + endLine).getBytes());
-                    os.write(("Content-Type: content/unknown" + endLine + endLine).getBytes());
-                    os.write(dataparams.getByteArray(key));
-                    os.write((endLine + "--" + strBoundary + endLine).getBytes());
-
-                }
-            }
-            os.flush();
-        }
-
-        String response = "";
-        try {
-            response = read(conn.getInputStream());
-        } catch (FileNotFoundException e) {
-            // Error Stream contains JSON that we can parse to a FB error
-            response = read(conn.getErrorStream());
-        }
-        return response;
-    }
-
-    @Deprecated
-    private static String read(InputStream in) throws IOException {
-        StringBuilder sb = new StringBuilder();
-        BufferedReader r = new BufferedReader(new InputStreamReader(in), 1000);
-        for (String line = r.readLine(); line != null; line = r.readLine()) {
-            sb.append(line);
-        }
-        in.close();
-        return sb.toString();
-    }
-
-    /**
-     * Parse a server response into a JSON Object. This is a basic
-     * implementation using org.json.JSONObject representation. More
-     * sophisticated applications may wish to do their own parsing.
-     *
-     * The parsed JSON is checked for a variety of error fields and
-     * a FacebookException is thrown if an error condition is set,
-     * populated with the error message and error type or code if
-     * available.
-     *
-     * @param response - string representation of the response
-     * @return the response as a JSON Object
-     * @throws JSONException - if the response is not valid JSON
-     * @throws FacebookError - if an error condition is set
-     */
-    @Deprecated
-    public static JSONObject parseJson(String response)
-          throws JSONException, FacebookError {
-        // Edge case: when sending a POST request to /[post_id]/likes
-        // the return value is 'true' or 'false'. Unfortunately
-        // these values cause the JSONObject constructor to throw
-        // an exception.
-        if (response.equals("false")) {
-            throw new FacebookError("request failed");
-        }
-        if (response.equals("true")) {
-            response = "{value : true}";
-        }
-        JSONObject json = new JSONObject(response);
-
-        // errors set by the server are not consistent
-        // they depend on the method and endpoint
-        if (json.has("error")) {
-            JSONObject error = json.getJSONObject("error");
-            throw new FacebookError(
-                    error.getString("message"), error.getString("type"), 0);
-        }
-        if (json.has("error_code") && json.has("error_msg")) {
-            throw new FacebookError(json.getString("error_msg"), "",
-                    Integer.parseInt(json.getString("error_code")));
-        }
-        if (json.has("error_code")) {
-            throw new FacebookError("request failed", "",
-                    Integer.parseInt(json.getString("error_code")));
-        }
-        if (json.has("error_msg")) {
-            throw new FacebookError(json.getString("error_msg"));
-        }
-        if (json.has("error_reason")) {
-            throw new FacebookError(json.getString("error_reason"));
-        }
-        return json;
-    }
-
-    /**
-     * Display a simple alert dialog with the given text and title.
-     *
-     * @param context
-     *          Android context in which the dialog should be displayed
-     * @param title
-     *          Alert dialog title
-     * @param text
-     *          Alert dialog message
-     */
-    @Deprecated
-    public static void showAlert(Context context, String title, String text) {
-        Builder alertBuilder = new Builder(context);
-        alertBuilder.setTitle(title);
-        alertBuilder.setMessage(text);
-        alertBuilder.create().show();
-    }
 }
diff --git a/facebook/src/com/facebook/widget/LoginButton.java b/facebook/src/com/facebook/widget/LoginButton.java
index 818f6f9b7..0000687ce 100644
--- a/facebook/src/com/facebook/widget/LoginButton.java
+++ b/facebook/src/com/facebook/widget/LoginButton.java
@@ -29,6 +29,9 @@
 import android.view.Gravity;
 import android.view.View;
 import android.widget.Button;
+import android.widget.CompoundButton;
+import android.widget.Switch;
+
 import com.facebook.*;
 import com.facebook.android.R;
 import com.facebook.model.GraphUser;
@@ -36,6 +39,7 @@
 import com.facebook.internal.SessionTracker;
 import com.facebook.internal.Utility;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
@@ -50,24 +54,19 @@
  * Developers can override the use of the active session by calling
  * the {@link #setSession(com.facebook.Session)} method.
  */
-public class LoginButton extends Button {
+public class LoginButton extends Switch {
 
     private static final String TAG = LoginButton.class.getName();
     private String applicationId = null;
     private SessionTracker sessionTracker;
-    private GraphUser user = null;
-    private Session userInfoSession = null; // the Session used to fetch the current user info
-    private boolean confirmLogout;
-    private boolean fetchUserInfo;
-    private String loginText;
-    private String logoutText;
     private UserInfoChangedCallback userInfoChangedCallback;
     private Fragment parentFragment;
     private LoginButtonProperties properties = new LoginButtonProperties();
+    private boolean isParentChecked = true;
 
     static class LoginButtonProperties {
         private SessionDefaultAudience defaultAudience = SessionDefaultAudience.FRIENDS;
-        private List<String> permissions = Collections.<String>emptyList();
+        private List<String> permissions = new ArrayList<String>();
         private SessionAuthorizationType authorizationType = null;
         private OnErrorListener onErrorListener;
         private SessionLoginBehavior loginBehavior = SessionLoginBehavior.SSO_WITH_FALLBACK;
@@ -197,31 +196,6 @@ public LoginButton(Context context) {
     public LoginButton(Context context, AttributeSet attrs) {
         super(context, attrs);
 
-        if (attrs.getStyleAttribute() == 0) {
-            // apparently there's no method of setting a default style in xml,
-            // so in case the users do not explicitly specify a style, we need
-            // to use sensible defaults.
-            this.setTextColor(getResources().getColor(R.color.com_facebook_loginview_text_color));
-            this.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                    getResources().getDimension(R.dimen.com_facebook_loginview_text_size));
-            this.setPadding(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_left),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_top),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_right),
-                    getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_padding_bottom));
-            this.setWidth(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_width));
-            this.setHeight(getResources().getDimensionPixelSize(R.dimen.com_facebook_loginview_height));
-            this.setGravity(Gravity.CENTER);
-            if (isInEditMode()) {
-                // cannot use a drawable in edit mode, so setting the background color instead
-                // of a background resource.
-                this.setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
-                // hardcoding in edit mode as getResources().getString() doesn't seem to work in IntelliJ
-                loginText = "Log in";
-            } else {
-                this.setBackgroundResource(R.drawable.com_facebook_loginbutton_blue);
-            }
-        }
-        parseAttributes(attrs);
         if (!isInEditMode()) {
             initializeActiveSessionWithCachedToken(context);
         }        
@@ -234,7 +208,6 @@ public LoginButton(Context context, AttributeSet attrs) {
      */
     public LoginButton(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
-        parseAttributes(attrs);
         initializeActiveSessionWithCachedToken(context);
     }
 
@@ -468,7 +441,7 @@ public void onFinishInflate() {
     }
 
     private void finishInit() {
-        setOnClickListener(new LoginClickListener());
+        setOnCheckedChangeListener(new LoginClickListener());
         setButtonText();
         if (!isInEditMode()) {
             sessionTracker = new SessionTracker(getContext(), new LoginButtonCallback(), null, false);
@@ -515,23 +488,8 @@ void setProperties(LoginButtonProperties properties) {
         this.properties = properties;
     }
 
-    private void parseAttributes(AttributeSet attrs) {
-        TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.com_facebook_login_view);
-        confirmLogout = a.getBoolean(R.styleable.com_facebook_login_view_confirm_logout, true);
-        fetchUserInfo = a.getBoolean(R.styleable.com_facebook_login_view_fetch_user_info, true);
-        loginText = a.getString(R.styleable.com_facebook_login_view_login_text);
-        logoutText = a.getString(R.styleable.com_facebook_login_view_logout_text);
-        a.recycle();
-    }
-
     private void setButtonText() {
-        if (sessionTracker != null && sessionTracker.getOpenSession() != null) {
-            setText((logoutText != null) ? logoutText :
-                    getResources().getString(R.string.com_facebook_loginview_log_out_button));
-        } else {
-            setText((loginText != null) ? loginText :
-                    getResources().getString(R.string.com_facebook_loginview_log_in_button));
-        }
+        //sessionTracker != null && sessionTracker.getOpenSession() != null;
     }
 
     private boolean initializeActiveSessionWithCachedToken(Context context) {
@@ -553,67 +511,16 @@ private boolean initializeActiveSessionWithCachedToken(Context context) {
     }
 
     private void fetchUserInfo() {
-        if (fetchUserInfo) {
-            final Session currentSession = sessionTracker.getOpenSession();
-            if (currentSession != null) {
-                if (currentSession != userInfoSession) {
-                    Request request = Request.newMeRequest(currentSession, new Request.GraphUserCallback() {
-                        @Override
-                        public void onCompleted(GraphUser me,  Response response) {
-                            if (currentSession == sessionTracker.getOpenSession()) {
-                                user = me;
-                                if (userInfoChangedCallback != null) {
-                                    userInfoChangedCallback.onUserInfoFetched(user);
-                                }
-                            }
-                            if (response.getError() != null) {
-                                handleError(response.getError().getException());
-                            }
-                        }
-                    });
-                    Request.executeBatchAsync(request);
-                    userInfoSession = currentSession;
-                }
-            } else {
-                user = null;
-                if (userInfoChangedCallback != null) {
-                    userInfoChangedCallback.onUserInfoFetched(user);
-                }
-            }
-        }
+        //null
     }
 
-    private class LoginClickListener implements OnClickListener {
+    private class LoginClickListener implements OnCheckedChangeListener {
 
-        @Override
-        public void onClick(View v) {
+        public void onClick() {
             Context context = getContext();
             final Session openSession = sessionTracker.getOpenSession();
             if (openSession != null) {
                 // If the Session is currently open, it must mean we need to log out
-                if (confirmLogout) {
-                    // Create a confirmation dialog
-                    String logout = getResources().getString(R.string.com_facebook_loginview_log_out_action);
-                    String cancel = getResources().getString(R.string.com_facebook_loginview_cancel_action);
-                    String message;
-                    if (user != null && user.getName() != null) {
-                        message = String.format(getResources().getString(R.string.com_facebook_loginview_logged_in_as), user.getName());
-                    } else {
-                        message = getResources().getString(R.string.com_facebook_loginview_logged_in_using_facebook);
-                    }
-                    AlertDialog.Builder builder = new AlertDialog.Builder(context);
-                    builder.setMessage(message)
-                           .setCancelable(true)
-                           .setPositiveButton(logout, new DialogInterface.OnClickListener() {
-                               public void onClick(DialogInterface dialog, int which) {
-                                   openSession.closeAndClearTokenInformation();
-                               }
-                           })
-                           .setNegativeButton(cancel, null);
-                    builder.create().show();
-                } else {
-                    openSession.closeAndClearTokenInformation();
-                }
             } else {
                 Session currentSession = sessionTracker.getSession();
                 if (currentSession == null || currentSession.getState().isClosed()) {
@@ -644,6 +551,18 @@ public void onClick(DialogInterface dialog, int which) {
                 }
             }
         }
+
+        @Override
+        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+            if(!isParentChecked){
+                setChecked(false);
+            }else{
+                ArrayList<String> permissions = new ArrayList<String>();
+                permissions.add("publish_actions");
+                setPublishPermissions(permissions);
+                onClick();
+            }
+        }
     }
 
     private class LoginButtonCallback implements Session.StatusCallback {
diff --git a/libs/android-support-v4.jar b/libs/android-support-v4.jar
deleted file mode 100644
index feaf44f80..000000000
Binary files a/libs/android-support-v4.jar and /dev/null differ
