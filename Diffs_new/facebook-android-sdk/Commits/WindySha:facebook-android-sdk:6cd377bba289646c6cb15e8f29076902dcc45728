diff --git a/facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java b/facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java
index dc1759fdf..84f4394fb 100644
--- a/facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java
+++ b/facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java
@@ -90,20 +90,8 @@ private static AttributionIdentifiers getAndroidIdViaReflection(Context context)
             if (Looper.myLooper() == Looper.getMainLooper()) {
               throw new FacebookException("getAndroidId cannot be called on the main thread.");
             }
-            Method isGooglePlayServicesAvailable = Utility.getMethodQuietly(
-                    "com.google.android.gms.common.GooglePlayServicesUtil",
-                    "isGooglePlayServicesAvailable",
-                    Context.class
-            );
-
-            if (isGooglePlayServicesAvailable == null) {
-                return null;
-            }
 
-            Object connectionResult = Utility.invokeMethodQuietly(
-                    null, isGooglePlayServicesAvailable, context);
-            if (!(connectionResult instanceof Integer)
-                    || (Integer) connectionResult != CONNECTION_RESULT_SUCCESS) {
+            if (!isGooglePlayServicesAvailable(context)) {
                 return null;
             }
 
@@ -143,7 +131,32 @@ private static AttributionIdentifiers getAndroidIdViaReflection(Context context)
         return null;
     }
 
+    private static boolean isGooglePlayServicesAvailable(Context context) {
+        Method method = Utility.getMethodQuietly(
+                "com.google.android.gms.common.GooglePlayServicesUtil",
+                "isGooglePlayServicesAvailable",
+                Context.class
+        );
+
+        if (method == null) {
+            return false;
+        }
+
+        Object connectionResult = Utility.invokeMethodQuietly(
+                null, method, context);
+        if (!(connectionResult instanceof Integer)
+                || (Integer) connectionResult != CONNECTION_RESULT_SUCCESS) {
+            return false;
+        }
+
+        return true;
+    }
+
     private static AttributionIdentifiers getAndroidIdViaService(Context context) {
+        if (!isGooglePlayServicesAvailable(context)) {
+            return null;
+        }
+
         GoogleAdServiceConnection connection = new GoogleAdServiceConnection();
         Intent intent = new Intent("com.google.android.gms.ads.identifier.service.START");
         intent.setPackage("com.google.android.gms");
