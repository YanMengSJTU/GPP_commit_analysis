diff --git a/java/dagger/internal/codegen/BindingMethodValidator.java b/java/dagger/internal/codegen/BindingMethodValidator.java
index 8854f13e5..5ee937f7b 100644
--- a/java/dagger/internal/codegen/BindingMethodValidator.java
+++ b/java/dagger/internal/codegen/BindingMethodValidator.java
@@ -45,6 +45,7 @@
 import java.util.Map;
 import javax.inject.Qualifier;
 import javax.lang.model.element.AnnotationMirror;
+import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
@@ -160,8 +161,15 @@ protected void checkMethod(ValidationReport.Builder<ExecutableElement> builder)
    * {@link #enclosingElementAnnotations}.
    */
   private void checkEnclosingElement(ValidationReport.Builder<ExecutableElement> builder) {
+    Element subject = builder.getSubject();
+    if (subject instanceof CompanionObjectExecutableElement) {
+      // Reach up and get the (inner companion object) enclosing class, as that's real module this
+      // is being processed in
+      subject = subject.getEnclosingElement();
+      // TODO(zsweers): This gets the class, but it doesn't see any new enclosing elements after
+    }
     if (!isAnyAnnotationPresent(
-        builder.getSubject().getEnclosingElement(), enclosingElementAnnotations)) {
+        subject.getEnclosingElement(), enclosingElementAnnotations)) {
       builder.addError(
           bindingMethods(
               "can only be present within a @%s",
