diff --git a/dagger-1-migration.md b/dagger-1-migration.md
index 20880bfb7..1a76a1702 100644
--- a/dagger-1-migration.md
+++ b/dagger-1-migration.md
@@ -154,8 +154,7 @@ scope to a component.
 ## Subgraphs
 
 Dagger 1 provided `ObjectGraph.plus` as the mechanism for creating new graphs
-from existing ones.  Dagger 2 has
-[two mechanisms](/api/latest/dagger/Component.html#component-relationships) for
+from existing ones.  Dagger 2 has [two mechanisms][component-relationships] for
 composing graphs - each with its own advantages - but
 [subcomponents][Subcomponent] is the most direct analog.  Defining a
 subcomponent is very similar to defining a component and the component is
@@ -179,7 +178,7 @@ MySubcomponent mySubcomponent = myComponent.plus(new ChildGraphModule("child!"))
 ```
 
 Subcomponents are further described in the [`@Subcomponent`][Subcomponent] and
-the [`@Component`](/api/latest/dagger/Component.html#subcomponents) javadoc.
+the [`@Component`][component-subcomponents] javadoc.
 
 ## Nullability
 
@@ -189,15 +188,17 @@ have to annotate injection sites and provides methods with the `@Nullable` of
 their choice. Any mismatch in nullability will be reported as a compile-time
 error.
 
-[Component]: </api/latest/dagger/Component.html>
-[Component-modules]: </api/latest/dagger/Component.html#modules()>
-[Lazy]: </api/latest/dagger/Lazy.html>
-[MembersInjector]: </api/latest/dagger/MembersInjector.html>
-[Module]: </api/latest/dagger/Module.html>
-[Provides]: </api/latest/dagger/Provides.html>
-[Subcomponent]: </api/latest/dagger/Subcomponent.html>
+[Component]: /api/latest/dagger/Component.html
+[Component-modules]: /api/latest/dagger/Component.html#modules()
+[component-relationships]: /api/latest/dagger/Component.html#component-relationships
+[component-subcomponents]: /api/latest/dagger/Component.html#subcomponents
+[Lazy]: /api/latest/dagger/Lazy.html
+[MembersInjector]: /api/latest/dagger/MembersInjector.html
+[Module]: /api/latest/dagger/Module.html
+[Provides]: /api/latest/dagger/Provides.html
+[Subcomponent]: /api/latest/dagger/Subcomponent.html
 
 
-[Provider]: <http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html>
-[Scope]: <http://docs.oracle.com/javaee/7/api/javax/inject/Scope.html>
-[Singleton]: <http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html>
+[Provider]: http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html
+[Scope]: http://docs.oracle.com/javaee/7/api/javax/inject/Scope.html
+[Singleton]: http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html
diff --git a/producers.md b/producers.md
index eb0eee1f6..6ded8b2da 100644
--- a/producers.md
+++ b/producers.md
@@ -117,8 +117,8 @@ component will fail with an exception.
 
 ### Lazy execution
 
-Producer methods can request a [Producer&lt;T>][Producer], which is analogous to a
-[Provider<T>][Provider]: it delays the computation of the associated binding
+Producer methods can request a [`Producer<T>`][Producer], which is analogous to
+a [`Provider<T>`][Provider]: it delays the computation of the associated binding
 until a `get()` method is called. `Producer<T>` is non-blocking; its `get()`
 method returns a `ListenableFuture`, which can then be fed to the framework. For
 example:
@@ -143,7 +143,7 @@ graphs.
 ### Multibindings
 
 Several bindings of the same type can be collected into a set or map, just like
-in [ordinary Dagger](multibindings). For example:
+in [ordinary Dagger](multibindings.md). For example:
 
 ```java
 @ProducerModule
diff --git a/subcomponents.md b/subcomponents.md
index 34d036d26..af7e654f4 100644
--- a/subcomponents.md
+++ b/subcomponents.md
@@ -232,7 +232,7 @@ some conflicting bindings.
 
 ### Extending multibindings
 
-Like other bindings, [multibindings](multibindings) in a parent component are
+Like other bindings, [multibindings](multibindings.md) in a parent component are
 visible to bindings in subcomponents. But subcomponents can also add
 multibindings to maps and sets bound in their parent. Any such additional
 contributions are visible only to bindings within the subcomponent or its
diff --git a/users-guide.md b/users-guide.md
index bfb5276d3..2758dccb0 100644
--- a/users-guide.md
+++ b/users-guide.md
@@ -225,8 +225,8 @@ all of its clients.
 ```
 
 The `@Singleton` annotation on an injectable class also serves as
-[documentation](http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Documented.html). It
-reminds potential maintainers that this class may be shared by multiple threads.
+[documentation][Documented]. It reminds potential maintainers that this class
+may be shared by multiple threads.
 
 ```java
 @Singleton
@@ -441,18 +441,17 @@ See the License for the specific language governing permissions and
 limitations under the License.
 ```
 
-[DI]: <http://en.wikipedia.org/wiki/Dependency_injection>
+[Component]: /api/latest/dagger/Component.html
+[DI]: http://en.wikipedia.org/wiki/Dependency_injection
+[Lazy]: /api/latest/dagger/Lazy.html
+[Module]: /api/latest/dagger/Module.html
+[Provides]: /api/latest/dagger/Provides.html
 
-[Component]: </api/latest/dagger/Component.html>
-[Lazy]: </api/latest/dagger/Lazy.html>
-[Module]: </api/latest/dagger/Module.html>
-[Provides]: </api/latest/dagger/Provides.html>
 
 
-
-
-[Named]: <http://docs.oracle.com/javaee/7/api/javax/inject/Named.html>
-[Provider]: <http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html>
-[Qualifier]: <http://docs.oracle.com/javaee/7/api/javax/inject/Qualifier.html>
-[Scope]: <http://docs.oracle.com/javaee/7/api/javax/inject/Scope.html>
-[Singleton]: <http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html>
+[Documented]: http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Documented.html
+[Named]: http://docs.oracle.com/javaee/7/api/javax/inject/Named.html
+[Provider]: http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html
+[Qualifier]: http://docs.oracle.com/javaee/7/api/javax/inject/Qualifier.html
+[Scope]: http://docs.oracle.com/javaee/7/api/javax/inject/Scope.html
+[Singleton]: http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html
