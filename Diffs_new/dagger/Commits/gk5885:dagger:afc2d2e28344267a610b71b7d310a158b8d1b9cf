diff --git a/bower_components/core-component-page/demo.html b/bower_components/core-component-page/demo.html
index fb80e5fbc..1f5a7b025 100644
--- a/bower_components/core-component-page/demo.html
+++ b/bower_components/core-component-page/demo.html
@@ -1,23 +1,23 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
-The complete set of authors may be found at http://polymer.github.io/AUTHORS
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
--->
-<html>
-<head>
-
-  <script src="../platform/platform.js"></script>
-  <link rel="import" href="../polymer/polymer.html">
-  <link rel="import" href="core-component-page.html">
-
-</head>
-<body unresolved>
-
-  <core-component-page></core-component-page>
-
-</body>
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
+The complete set of authors may be found at http://polymer.github.io/AUTHORS
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
+-->
+<html>
+<head>
+
+  <script src="../platform/platform.js"></script>
+  <link rel="import" href="../polymer/polymer.html">
+  <link rel="import" href="core-component-page.html">
+
+</head>
+<body unresolved>
+
+  <core-component-page></core-component-page>
+
+</body>
+</html>
diff --git a/bower_components/core-doc-viewer/elements/core-doc-toc.css b/bower_components/core-doc-viewer/elements/core-doc-toc.css
index 0e6b6b3f8..2c1ff49f8 100644
--- a/bower_components/core-doc-viewer/elements/core-doc-toc.css
+++ b/bower_components/core-doc-viewer/elements/core-doc-toc.css
@@ -19,9 +19,9 @@ core-header-panel {
   top: 0;
   left: 0;
   height: 100%;
-  width: 100%;
+  width: 100%;
 }
 
-core-toolbar {
-  background-color: #eeeeee;
+core-toolbar {
+  background-color: #eeeeee;
 }
diff --git a/bower_components/core-doc-viewer/elements/core-doc-toc.html b/bower_components/core-doc-viewer/elements/core-doc-toc.html
index b80b078fd..b16c49678 100644
--- a/bower_components/core-doc-viewer/elements/core-doc-toc.html
+++ b/bower_components/core-doc-viewer/elements/core-doc-toc.html
@@ -1,67 +1,67 @@
-<!--
-    @license
-    Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-    This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-    The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-    The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-    Code distributed by Google as part of the polymer project is also
-    subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<link rel="import" href="../../core-toolbar/core-toolbar.html">
-<link rel="import" href="../../core-header-panel/core-header-panel.html">
-<link rel="import" href="../../core-icon-button/core-icon-button.html">
-<link rel="import" href="../../core-menu/core-menu.html">
-<link rel="import" href="../../core-item/core-item.html">
-
-<!--
-@class core-doc-toc
--->
-
-<polymer-element name="core-doc-toc" attributes="data selected">
-
-  <template>
-
-    <link rel="stylesheet" href="core-doc-toc.css">
-
-    <core-header-panel mode="waterfall">
-
-<!--      <core-toolbar theme="core-light-theme">
-        <core-icon-button icon="menu"></core-icon-button>
-        <span core-flex>Topics</span>
-        <core-icon-button icon="search" on-tap="{{searchAction}}"></core-icon-button>
-      </core-toolbar>
-
-      <core-toolbar id="searchBar" style="background-color: #C2185B; position: absolute; top: 0; left: 0; right: 0; opacity: 0; display: none;" class="seamed" theme="core-dark-theme">
-        <core-icon-button icon="search"></core-icon-button>
-        <core-icon-button icon="close" on-tap="{{closeSearchAction}}"></core-icon-button>
-      </core-toolbar>-->
-
-      <core-menu selected="{{selected}}">
-        <template repeat="{{data}}">
-          <core-item><a href="#{{name}}">{{name}}</a></core-item>
-        </template>
-      </core-menu>
-
-    </core-header-panel>
-
-  </template>
-
-  <script>
-
-    Polymer('core-doc-toc', {
-
-      searchAction: function() {
-        this.$.searchBar.style.opacity = 1;
-        this.$.searchBar.style.display = '';
-      },
-
-      closeSearchAction: function() {
-        this.$.searchBar.style.opacity = 0;
-        this.$.searchBar.style.display = 'none';
-      }
-
-    });
-
-  </script>
-
-</polymer-element>
+<!--
+    @license
+    Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+    This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+    The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+    The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+    Code distributed by Google as part of the polymer project is also
+    subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<link rel="import" href="../../core-toolbar/core-toolbar.html">
+<link rel="import" href="../../core-header-panel/core-header-panel.html">
+<link rel="import" href="../../core-icon-button/core-icon-button.html">
+<link rel="import" href="../../core-menu/core-menu.html">
+<link rel="import" href="../../core-item/core-item.html">
+
+<!--
+@class core-doc-toc
+-->
+
+<polymer-element name="core-doc-toc" attributes="data selected">
+
+  <template>
+
+    <link rel="stylesheet" href="core-doc-toc.css">
+
+    <core-header-panel mode="waterfall">
+
+<!--      <core-toolbar theme="core-light-theme">
+        <core-icon-button icon="menu"></core-icon-button>
+        <span core-flex>Topics</span>
+        <core-icon-button icon="search" on-tap="{{searchAction}}"></core-icon-button>
+      </core-toolbar>
+
+      <core-toolbar id="searchBar" style="background-color: #C2185B; position: absolute; top: 0; left: 0; right: 0; opacity: 0; display: none;" class="seamed" theme="core-dark-theme">
+        <core-icon-button icon="search"></core-icon-button>
+        <core-icon-button icon="close" on-tap="{{closeSearchAction}}"></core-icon-button>
+      </core-toolbar>-->
+
+      <core-menu selected="{{selected}}">
+        <template repeat="{{data}}">
+          <core-item><a href="#{{name}}">{{name}}</a></core-item>
+        </template>
+      </core-menu>
+
+    </core-header-panel>
+
+  </template>
+
+  <script>
+
+    Polymer('core-doc-toc', {
+
+      searchAction: function() {
+        this.$.searchBar.style.opacity = 1;
+        this.$.searchBar.style.display = '';
+      },
+
+      closeSearchAction: function() {
+        this.$.searchBar.style.opacity = 0;
+        this.$.searchBar.style.display = 'none';
+      }
+
+    });
+
+  </script>
+
+</polymer-element>
diff --git a/bower_components/core-drag-drop/demo.html b/bower_components/core-drag-drop/demo.html
index c1aeefb9a..3dfac3129 100644
--- a/bower_components/core-drag-drop/demo.html
+++ b/bower_components/core-drag-drop/demo.html
@@ -24,28 +24,28 @@
 
     html {
       font-family: 'Helvetica Neue', 'Roboto', 'Arial', sans-serif;
-    }
-
-    body {
-      height: 100vh;
-      margin: 0;
-      -webkit-user-select: none;
-      -moz-user-select: none;
-      -ms-user-select: none;
     }
 
-    .box {
-      display: inline-block;
-      width: 100px;
-      height: 100px;
-      margin: 16px;
+    body {
+      height: 100vh;
+      margin: 0;
+      -webkit-user-select: none;
+      -moz-user-select: none;
+      -ms-user-select: none;
     }
 
-    .dropped {
-      position: absolute;
-      border: 1px solid black;
-      width: 5px;
-      height: 5px;
+    .box {
+      display: inline-block;
+      width: 100px;
+      height: 100px;
+      margin: 16px;
+    }
+
+    .dropped {
+      position: absolute;
+      border: 1px solid black;
+      width: 5px;
+      height: 5px;
     }
 
   </style>
diff --git a/bower_components/core-elements/index.html b/bower_components/core-elements/index.html
index a0033793c..58856f33a 100644
--- a/bower_components/core-elements/index.html
+++ b/bower_components/core-elements/index.html
@@ -1,22 +1,22 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
-The complete set of authors may be found at http://polymer.github.io/AUTHORS
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
--->
-<html>
-<head>
-
-  <script src="../platform/platform.js"></script>
-  <link rel="import" href="../core-component-page/core-component-page.html">
-
-</head>
-<body unresolved>
-
-  <core-component-page></core-component-page>
-
-</body>
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
+The complete set of authors may be found at http://polymer.github.io/AUTHORS
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
+-->
+<html>
+<head>
+
+  <script src="../platform/platform.js"></script>
+  <link rel="import" href="../core-component-page/core-component-page.html">
+
+</head>
+<body unresolved>
+
+  <core-component-page></core-component-page>
+
+</body>
+</html>
diff --git a/bower_components/core-iconset-svg/core-iconset-svg.html b/bower_components/core-iconset-svg/core-iconset-svg.html
index 700696da3..0312d0b29 100644
--- a/bower_components/core-iconset-svg/core-iconset-svg.html
+++ b/bower_components/core-iconset-svg/core-iconset-svg.html
@@ -87,7 +87,7 @@
           var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
           svg.setAttribute('viewBox', '0 0 ' + this.iconSize + ' ' +
               this.iconSize);
-          // NOTE(dfreedm): work around https://crbug.com/370136
+          // NOTE(user): work around https://crbug.com/370136
           svg.style.pointerEvents = 'none';
           svg.appendChild(content);
           return svg;
diff --git a/bower_components/core-layout-trbl/demo.html b/bower_components/core-layout-trbl/demo.html
index 082709d3a..c6eeab8d0 100644
--- a/bower_components/core-layout-trbl/demo.html
+++ b/bower_components/core-layout-trbl/demo.html
@@ -1,58 +1,58 @@
-<!DOCTYPE html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-
-<html>
-<head>
-
-  <title>core-layout-trbl demo</title>
-
-  <script src="../platform/platform.js"></script>
-  <link rel="import" href="core-layout-trbl.html">
-  <link rel="import" href="core-slide.html">
-
-  <style>
-    div {
-      padding: 8px;
-      border: 3px solid lightblue;
-      -webkit-transition: all 0.3s;
-    }
-    [vertical] ~ div {
-      border: 3px solid orange;
-    }
-  </style>
-
-</head>
-<body unresolved>
-
-  <div style="height: 600px; overflow: hidden;">
-    <core-layout-trbl></core-layout-trbl>
-    <div id="left">Hi I'm some content</div>
-    <div id="left2" onclick="leftSlide.closed = !leftSlide.closed;">Click Me First</div>
-    <div onclick="leftSlide2.closed = !leftSlide2.closed;">Click Me Second</div>
-    <div fit>
-      <core-layout-trbl vertical></core-layout-trbl>
-      <div id="top">Gribble gribble</div>
-      <div onclick="topSlide.closed = !topSlide.closed;">Click Me</div>
-      <div fit>Squids!</div>
-      <div onclick="bottomSlide.closed = !bottomSlide.closed;">Click Me</div>
-      <div>More is more</div>
-      <div id="bottom">Squids are larger than they appear.</div>
-    </div>
-    <div onclick="rightSlide.closed = !rightSlide.closed;">Click me</div>
-    <div id="right">A last bit, like a panel</div>
-  </div>
-  <core-slide id="leftSlide" targetid="left"></core-slide>
-  <core-slide id="leftSlide2" targetid="left2"></core-slide>
-  <core-slide id="rightSlide" targetid="right"></core-slide>
-  <core-slide id="topSlide" vertical targetid="top"></core-slide>
-  <core-slide id="bottomSlide" vertical targetid="bottom"></core-slide>
-  
-</body>
-</html>
+<!DOCTYPE html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+
+<html>
+<head>
+
+  <title>core-layout-trbl demo</title>
+
+  <script src="../platform/platform.js"></script>
+  <link rel="import" href="core-layout-trbl.html">
+  <link rel="import" href="core-slide.html">
+
+  <style>
+    div {
+      padding: 8px;
+      border: 3px solid lightblue;
+      -webkit-transition: all 0.3s;
+    }
+    [vertical] ~ div {
+      border: 3px solid orange;
+    }
+  </style>
+
+</head>
+<body unresolved>
+
+  <div style="height: 600px; overflow: hidden;">
+    <core-layout-trbl></core-layout-trbl>
+    <div id="left">Hi I'm some content</div>
+    <div id="left2" onclick="leftSlide.closed = !leftSlide.closed;">Click Me First</div>
+    <div onclick="leftSlide2.closed = !leftSlide2.closed;">Click Me Second</div>
+    <div fit>
+      <core-layout-trbl vertical></core-layout-trbl>
+      <div id="top">Gribble gribble</div>
+      <div onclick="topSlide.closed = !topSlide.closed;">Click Me</div>
+      <div fit>Squids!</div>
+      <div onclick="bottomSlide.closed = !bottomSlide.closed;">Click Me</div>
+      <div>More is more</div>
+      <div id="bottom">Squids are larger than they appear.</div>
+    </div>
+    <div onclick="rightSlide.closed = !rightSlide.closed;">Click me</div>
+    <div id="right">A last bit, like a panel</div>
+  </div>
+  <core-slide id="leftSlide" targetid="left"></core-slide>
+  <core-slide id="leftSlide2" targetid="left2"></core-slide>
+  <core-slide id="rightSlide" targetid="right"></core-slide>
+  <core-slide id="topSlide" vertical targetid="top"></core-slide>
+  <core-slide id="bottomSlide" vertical targetid="bottom"></core-slide>
+  
+</body>
+</html>
diff --git a/bower_components/core-list/bower.json b/bower_components/core-list/bower.json
old mode 100755
new mode 100644
diff --git a/bower_components/core-list/core-list.css b/bower_components/core-list/core-list.css
old mode 100755
new mode 100644
index a59d64611..d50f11039
--- a/bower_components/core-list/core-list.css
+++ b/bower_components/core-list/core-list.css
@@ -8,28 +8,28 @@
  * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
 
-:host {
-  display: block;
-  overflow: auto;
-  outline: none;
-}
-
-.core-list-viewport > * {
-  overflow: hidden;
-}
-
-.core-list-viewport.horizontal {
-  height: 100%;
-  white-space: nowrap;
-}
-
-.core-list-viewport.horizontal > * {
-  display: inline-block;
-}
-
-/* Setting will-change: transform on the #viewport makes the viewport a
-   stacking context, which causes all the composited layers inside the
-   viewport to actually be stacked underneath the viewport. */
-#viewport {
-  will-change: transform;
-}
+:host {
+  display: block;
+  overflow: auto;
+  outline: none;
+}
+
+.core-list-viewport > * {
+  overflow: hidden;
+}
+
+.core-list-viewport.horizontal {
+  height: 100%;
+  white-space: nowrap;
+}
+
+.core-list-viewport.horizontal > * {
+  display: inline-block;
+}
+
+/* Setting will-change: transform on the #viewport makes the viewport a
+   stacking context, which causes all the composited layers inside the
+   viewport to actually be stacked underneath the viewport. */
+#viewport {
+  will-change: transform;
+}
diff --git a/bower_components/core-list/core-list.html b/bower_components/core-list/core-list.html
index d97d05bcc..da9855785 100644
--- a/bower_components/core-list/core-list.html
+++ b/bower_components/core-list/core-list.html
@@ -1,479 +1,479 @@
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-
-<!--
-`core-list` displays a virtual, 'infinite' list. The template inside the 
-`core-list` element represents the dom to create for each list item. The
-`data` property specifies an array of list item data. The `height` property
-represents the fixed height of a list item (variable height list items are
-not yet supported).
-
-`core-list` manages a viewport of data based on the current scroll position.
-For performance reasons, not every item in the list is rendered at once.
-
-List item templates should bind to template models of the following structure
-
-    {
-      index: 0,         // list index for this item
-      selected: false,  // selection state for this item
-      model: {          // user data corresponding to data[index]
-        /* user data  */
-      }
-    }
-
-For example, given the following data array:
-
-    [
-      {name: 'Bob', checked: true},
-      {name: 'Tim', checked: false},
-      ...
-    ]
-
-The following code would render the list (note the `name` and `checked`
-properties are bound from the `model` object provided to the template
-scope):
-
-    <core-list data="{{data}}" height="80">
-      <template>
-        <div class="{{ {selected: selected} | tokenList }}">
-          List row: {{index}}, User data from model: {{model.name}}
-          <input type="checkbox" checked="{{model.checked}}">
-        </div>
-      </template>
-    </core-list>
-
-By default, the list supports selection via tapping. Styling the selection 
-should be done via binding to the `selected` property of each model.
-
-@group Polymer Core Elements
-@element core-list
--->
-<link rel="import" href="../polymer/polymer.html">
-<link rel="import" href="../core-selection/core-selection.html">
-
-<polymer-element name="core-list" on-tap="{{tapHandler}}" tabindex="-1">
-<template>
-  <core-selection id="selection" multi="{{multi}}" on-core-select="{{selectedHandler}}"></core-selection>
-  <link rel="stylesheet" href="core-list.css">
-  <div id="viewport" class="core-list-viewport"><content></content></div>
-</template>
-<script>
-(function() {
-
-  Polymer('core-list', {
-    
-    publish: {
-      /**
-       * Fired when an item element is tapped.
-       * 
-       * @event core-activate
-       * @param {Object} detail
-       *   @param {Object} detail.item the item element
-       */
-
-      /**
-       * 
-       * An array of source data for the list to display.
-       *
-       * @attribute data
-       * @type array
-       * @default null
-       */
-      data: null,
-
-      /**
-       * 
-       * An optional element on which to listen for scroll events.
-       *
-       * @attribute scrollTarget
-       * @type Element
-       * @default core-list
-       */
-      scrollTarget: null,
-
-      /**
-       * 
-       * The height of a list item. `core-list` currently supports only fixed-height
-       * list items. This height must be specified via the height property.
-       *
-       * @attribute height
-       * @type number
-       * @default 80
-       */
-      height: 80,
-
-      /**
-       * 
-       * The number of extra items rendered above the minimum set required to
-       * fill the list's height.
-       *
-       * @attribute extraItems
-       * @type number
-       * @default 30
-       */
-      extraItems: 30,
-
-      /**
-       * 
-       * When true, tapping a row will select the item, placing its data model
-       * in the set of selected items retrievable via the `selection` property.
-       *
-       * Note that tapping focusable elements within the list item will not
-       * result in selection, since they are presumed to have their own action.
-       *
-       * @attribute selectionEnabled
-       * @type {boolean}
-       * @default true
-       */
-      selectionEnabled: true,
-
-      /**
-       * 
-       * Set to true to support multiple selection.  Note, existing selection
-       * state is maintained only when changing `multi` from `false` to `true`;
-       * it is cleared when changing from `true` to `false`.
-       *
-       * @attribute multi
-       * @type boolean
-       * @default false
-       */
-      multi: false,
-
-      /**
-       * 
-       * Data record (or array of records, if `multi: true`) corresponding to
-       * the currently selected set of items.
-       *
-       * @attribute selection
-       * @type {any}
-       * @default null
-       */
-       selection: null
-    },
-
-    // Local cache of scrollTop
-    _scrollTop: 0,
-    
-    observe: {
-      'data template scrollTarget': 'initialize',
-      'multi selectionEnabled': '_resetSelection'
-    },
-
-    ready: function() {
-      this._boundScrollHandler = this.scrollHandler.bind(this);
-      this._oldMulti = this.multi;
-      this._oldSelectionEnabled = this.selectionEnabled;
-    },
-
-    attached: function() {
-      this.template = this.querySelector('template');
-      if (!this.template.bindingDelegate) {
-        this.template.bindingDelegate = this.element.syntax;
-      }
-    },
-
-    _resetSelection: function() {
-      if (((this._oldMulti != this.multi) && !this.multi) || 
-          ((this._oldSelectionEnabled != this.selectionEnabled) && 
-            !this.selectionEnabled)) {
-        this._clearSelection();
-        this.refresh(true);
-      } else {
-        this.selection = this.$.selection.getSelection();
-      }
-      this._oldMulti = this.multi;
-      this._oldSelectionEnabled = this.selectionEnabled;
-    },
-
-    // TODO(sorvell): it'd be nice to dispense with 'data' and just use 
-    // template repeat's model. However, we need tighter integration
-    // with TemplateBinding for this.
-    initialize: function() {
-      if (!this.template) {
-        return;
-      }
-      
-      // TODO(kschaaf): This is currently the only way to know that the array
-      // was mutated as opposed to newly assigned; to be updated with better API
-      if (arguments.length == 1) {
-        var splices = arguments[0];
-        for (var i=0; i<splices.length; i++) {
-          var s = splices[i];
-          for (var j=0; j<s.removed.length; j++) {
-            var d = s.removed[j];
-            this.$.selection.setItemSelected(d, false);
-          }
-        }
-      } else {
-        this._clearSelection();
-      }
-
-      var target = this.scrollTarget || this;
-      if (this._target !== target) {
-        if (this._target) {
-          this._target.removeEventListener('scroll', this._boundScrollHandler, false);
-        }
-        this._target = target;
-        this._target.addEventListener('scroll', this._boundScrollHandler, false);
-      }
-      // Only use -webkit-overflow-touch from iOS8+, where scroll events are fired
-      var ios = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\d+)/);
-      if (ios && ios[1] >= 8) {
-        target.style.webkitOverflowScrolling = 'touch';
-      }
-
-      this.initializeData();
-    },
-
-    initializeData: function() {
-      var currentCount = this._physicalCount || 0;
-      var dataLen = this.data && this.data.length || 0;
-      this._visibleCount = Math.ceil(this._target.offsetHeight / this.height);
-      this._physicalCount = Math.min(this._visibleCount + this.extraItems, dataLen);
-      this._physicalCount = Math.max(currentCount, this._physicalCount);
-      this._physicalData = this._physicalData || new Array(this._physicalCount);
-      var needItemInit = false;
-      while (currentCount < this._physicalCount) {
-        this._physicalData[currentCount++] = {};
-        needItemInit = true;
-      }
-      this.template.model = this._physicalData;
-      this.template.setAttribute('repeat', '');
-      if (needItemInit) {
-        this.onMutation(this, this.initializeItems);
-      } else {
-        this.refresh(true);
-      }
-    },
-
-    initializeItems: function() {
-      var currentCount = this._physicalItems && this._physicalItems.length || 0;
-      this._physicalItems = this._physicalItems || new Array(this._physicalCount);
-      for (var i = 0, item = this.template.nextElementSibling;
-           item && i < this._physicalCount;
-           ++i, item = item.nextElementSibling) {
-        this._physicalItems[i] = item;
-        item._transformValue = 0;
-      }
-      this.refresh(true);
-    },
-
-    updateItem: function(virtualIndex, physicalIndex) {
-      var virtualDatum = this.data && this.data[virtualIndex];
-      var physicalDatum = this._physicalData[physicalIndex];
-      physicalDatum.model = virtualDatum;
-      physicalDatum.physicalIndex = physicalIndex;
-      physicalDatum.index = virtualIndex;
-      physicalDatum.selected = this.selectionEnabled && virtualDatum ? 
-          this._selectedData.get(virtualDatum) : null;
-      var physicalItem = this._physicalItems[physicalIndex];
-      physicalItem.hidden = !virtualDatum;
-    },
-
-    scrollHandler: function(e, detail) {
-      this._scrollTop = e.detail ? e.detail.target.scrollTop : e.target.scrollTop;
-      this.refresh(false);
-    },
-
-    /**
-     * Refresh the list at the current scroll position.
-     *
-     * @method refresh
-     */
-    refresh: function(force) {
-      // Check that the array hasn't gotten longer since data was initialized
-      var dataLen = this.data && this.data.length || 0;
-      if (force) {
-        if (this._physicalCount < 
-            Math.min(this._visibleCount + this.extraItems, dataLen)) {
-          // Need to add more items; once new data & items are initialized,
-          // refresh will be run again
-          this.initializeData();
-          return;
-        }
-        this._physicalHeight = this.height * this._physicalCount;
-        this.$.viewport.style.height = this.height * dataLen + 'px';
-      }
-
-      var firstVisibleIndex = Math.floor(this._scrollTop / this.height);
-      var visibleMidpoint = firstVisibleIndex + this._visibleCount / 2;
-
-      var firstReifiedIndex = Math.max(0, Math.floor(visibleMidpoint - 
-          this._physicalCount / 2));
-      firstReifiedIndex = Math.min(firstReifiedIndex, dataLen - 
-          this._physicalCount);
-      firstReifiedIndex = (firstReifiedIndex < 0) ? 0 : firstReifiedIndex;
-
-      var firstPhysicalIndex = firstReifiedIndex % this._physicalCount;
-      var baseVirtualIndex = firstReifiedIndex - firstPhysicalIndex;
-
-      var baseTransformValue = Math.floor(this.height * baseVirtualIndex);
-      var nextTransformValue = Math.floor(baseTransformValue + 
-          this._physicalHeight);
-
-      var baseTransformString = 'translate3d(0,' + baseTransformValue + 'px,0)';
-      var nextTransformString = 'translate3d(0,' + nextTransformValue + 'px,0)';
-
-      this.firstPhysicalIndex = firstPhysicalIndex;
-      this.baseVirtualIndex = baseVirtualIndex;
-
-      for (var i = 0; i < firstPhysicalIndex; ++i) {
-        var item = this._physicalItems[i];
-        if (force || item._transformValue != nextTransformValue) {
-          this.updateItem(baseVirtualIndex + this._physicalCount + i, i);
-          setTransform(item, nextTransformString, nextTransformValue);
-        }
-      }
-      for (var i = firstPhysicalIndex; i < this._physicalCount; ++i) {
-        var item = this._physicalItems[i];
-        if (force || item._transformValue != baseTransformValue) {
-          this.updateItem(baseVirtualIndex + i, i);
-          setTransform(item, baseTransformString, baseTransformValue);
-        }
-      }
-    },
-
-    // list selection
-    tapHandler: function(e) {
-      var n = e.target;
-      var p = e.path;
-      if (!this.selectionEnabled || (n === this)) {
-        return;
-      }
-      requestAnimationFrame(function() {
-        // Gambit: only select the item if the tap wasn't on a focusable child
-        // of the list (since anything with its own action should be focusable
-        // and not result in result in list selection).  To check this, we
-        // asynchronously check that shadowRoot.activeElement is null, which 
-        // means the tapped item wasn't focusable. On polyfill where
-        // activeElement doesn't follow the data-hinding part of the spec, we
-        // can check that document.activeElement is the list itself, which will
-        // catch focus in lieu of the tapped item being focusable, as we make
-        // the list focusable (tabindex="-1") for this purpose.  Note we also
-        // allow the list items themselves to be focusable if desired, so those
-        // are excluded as well.
-        var active = window.ShadowDOMPolyfill ? 
-            wrap(document.activeElement) : this.shadowRoot.activeElement;
-        if (active && (active != this) && (active.parentElement != this) && 
-            (document.activeElement != document.body)) {
-          return;
-        }
-        // Unfortunately, Safari does not focus certain form controls via mouse,
-        // so we also blacklist input, button, & select
-        // (https://bugs.webkit.org/show_bug.cgi?id=118043)
-        if ((p[0].localName == 'input') || 
-            (p[0].localName == 'button') || 
-            (p[0].localName == 'select')) {
-          return;
-        }
-
-        var model = n.templateInstance && n.templateInstance.model;
-        if (model) {
-          var vi = model.index, pi = model.physicalIndex;
-          var data = this.data[vi], item = this._physicalItems[pi];
-          this.$.selection.select(data);
-          this.asyncFire('core-activate', {data: data, item: item});
-        }
-      }.bind(this));
-    },
-
-    selectedHandler: function(e, detail) {
-      this.selection = this.$.selection.getSelection();
-      var i$ = this.indexesForData(detail.item);
-      // TODO(sorvell): we should be relying on selection to store the
-      // selected data but we want to optimize for lookup.
-      this._selectedData.set(detail.item, detail.isSelected);
-      if (i$.physical >= 0) {
-        this.updateItem(i$.virtual, i$.physical);
-      }
-    },
-
-    /**
-     * Select the list item at the given index.
-     *
-     * @method selectItem
-     * @param {number} index 
-     */
-    selectItem: function(index) {
-      if (!this.selectionEnabled) {
-        return;
-      }
-      var data = this.data[index];
-      if (data) {
-        this.$.selection.select(data);
-      }
-    },
-
-    /**
-     * Set the selected state of the list item at the given index.
-     *
-     * @method setItemSelected
-     * @param {number} index 
-     * @param {boolean} isSelected 
-     */
-    setItemSelected: function(index, isSelected) {
-      var data = this.data[index];
-      if (data) {
-        this.$.selection.setItemSelected(data, isSelected);
-      }
-    },
-
-    indexesForData: function(data) {
-      var virtual = this.data.indexOf(data);
-      var physical = this.virtualToPhysicalIndex(virtual);
-      return { virtual: virtual, physical: physical };
-    },
-
-    virtualToPhysicalIndex: function(index) {
-      for (var i=0, l=this._physicalData.length; i<l; i++) {
-        if (this._physicalData[i].index === index) {
-          return i;
-        }
-      }
-      return -1;
-    },
-
-    /**
-     * Clears the current selection state of the list.
-     *
-     * @method clearSelection
-     */
-    clearSelection: function() {
-      this._clearSelection();
-      this.refresh(true);
-    },
-
-    _clearSelection: function() {
-      this._selectedData = new WeakMap();
-      this.$.selection.clear();
-      this.selection = this.$.selection.getSelection();
-    },
-
-    scrollToItem: function(index) {
-      this.scrollTop = index * this.height;
-    }
-
-  });
-
-  // determine proper transform mechanizm
-  if (document.documentElement.style.transform !== undefined) {
-    var setTransform = function(element, string, value) {
-      element.style.transform = string;
-      element._transformValue = value;
-    }
-  } else {
-    var setTransform = function(element, string, value) {
-      element.style.webkitTransform = string;
-      element._transformValue = value;
-    }
-  }
-
-})();
-</script>
-</polymer-element>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+
+<!--
+`core-list` displays a virtual, 'infinite' list. The template inside the 
+`core-list` element represents the dom to create for each list item. The
+`data` property specifies an array of list item data. The `height` property
+represents the fixed height of a list item (variable height list items are
+not yet supported).
+
+`core-list` manages a viewport of data based on the current scroll position.
+For performance reasons, not every item in the list is rendered at once.
+
+List item templates should bind to template models of the following structure
+
+    {
+      index: 0,         // list index for this item
+      selected: false,  // selection state for this item
+      model: {          // user data corresponding to data[index]
+        /* user data  */
+      }
+    }
+
+For example, given the following data array:
+
+    [
+      {name: 'Bob', checked: true},
+      {name: 'Tim', checked: false},
+      ...
+    ]
+
+The following code would render the list (note the `name` and `checked`
+properties are bound from the `model` object provided to the template
+scope):
+
+    <core-list data="{{data}}" height="80">
+      <template>
+        <div class="{{ {selected: selected} | tokenList }}">
+          List row: {{index}}, User data from model: {{model.name}}
+          <input type="checkbox" checked="{{model.checked}}">
+        </div>
+      </template>
+    </core-list>
+
+By default, the list supports selection via tapping. Styling the selection 
+should be done via binding to the `selected` property of each model.
+
+@group Polymer Core Elements
+@element core-list
+-->
+<link rel="import" href="../polymer/polymer.html">
+<link rel="import" href="../core-selection/core-selection.html">
+
+<polymer-element name="core-list" on-tap="{{tapHandler}}" tabindex="-1">
+<template>
+  <core-selection id="selection" multi="{{multi}}" on-core-select="{{selectedHandler}}"></core-selection>
+  <link rel="stylesheet" href="core-list.css">
+  <div id="viewport" class="core-list-viewport"><content></content></div>
+</template>
+<script>
+(function() {
+
+  Polymer('core-list', {
+    
+    publish: {
+      /**
+       * Fired when an item element is tapped.
+       * 
+       * @event core-activate
+       * @param {Object} detail
+       *   @param {Object} detail.item the item element
+       */
+
+      /**
+       * 
+       * An array of source data for the list to display.
+       *
+       * @attribute data
+       * @type array
+       * @default null
+       */
+      data: null,
+
+      /**
+       * 
+       * An optional element on which to listen for scroll events.
+       *
+       * @attribute scrollTarget
+       * @type Element
+       * @default core-list
+       */
+      scrollTarget: null,
+
+      /**
+       * 
+       * The height of a list item. `core-list` currently supports only fixed-height
+       * list items. This height must be specified via the height property.
+       *
+       * @attribute height
+       * @type number
+       * @default 80
+       */
+      height: 80,
+
+      /**
+       * 
+       * The number of extra items rendered above the minimum set required to
+       * fill the list's height.
+       *
+       * @attribute extraItems
+       * @type number
+       * @default 30
+       */
+      extraItems: 30,
+
+      /**
+       * 
+       * When true, tapping a row will select the item, placing its data model
+       * in the set of selected items retrievable via the `selection` property.
+       *
+       * Note that tapping focusable elements within the list item will not
+       * result in selection, since they are presumed to have their own action.
+       *
+       * @attribute selectionEnabled
+       * @type {boolean}
+       * @default true
+       */
+      selectionEnabled: true,
+
+      /**
+       * 
+       * Set to true to support multiple selection.  Note, existing selection
+       * state is maintained only when changing `multi` from `false` to `true`;
+       * it is cleared when changing from `true` to `false`.
+       *
+       * @attribute multi
+       * @type boolean
+       * @default false
+       */
+      multi: false,
+
+      /**
+       * 
+       * Data record (or array of records, if `multi: true`) corresponding to
+       * the currently selected set of items.
+       *
+       * @attribute selection
+       * @type {any}
+       * @default null
+       */
+       selection: null
+    },
+
+    // Local cache of scrollTop
+    _scrollTop: 0,
+    
+    observe: {
+      'data template scrollTarget': 'initialize',
+      'multi selectionEnabled': '_resetSelection'
+    },
+
+    ready: function() {
+      this._boundScrollHandler = this.scrollHandler.bind(this);
+      this._oldMulti = this.multi;
+      this._oldSelectionEnabled = this.selectionEnabled;
+    },
+
+    attached: function() {
+      this.template = this.querySelector('template');
+      if (!this.template.bindingDelegate) {
+        this.template.bindingDelegate = this.element.syntax;
+      }
+    },
+
+    _resetSelection: function() {
+      if (((this._oldMulti != this.multi) && !this.multi) || 
+          ((this._oldSelectionEnabled != this.selectionEnabled) && 
+            !this.selectionEnabled)) {
+        this._clearSelection();
+        this.refresh(true);
+      } else {
+        this.selection = this.$.selection.getSelection();
+      }
+      this._oldMulti = this.multi;
+      this._oldSelectionEnabled = this.selectionEnabled;
+    },
+
+    // TODO(sorvell): it'd be nice to dispense with 'data' and just use 
+    // template repeat's model. However, we need tighter integration
+    // with TemplateBinding for this.
+    initialize: function() {
+      if (!this.template) {
+        return;
+      }
+      
+      // TODO(user): This is currently the only way to know that the array
+      // was mutated as opposed to newly assigned; to be updated with better API
+      if (arguments.length == 1) {
+        var splices = arguments[0];
+        for (var i=0; i<splices.length; i++) {
+          var s = splices[i];
+          for (var j=0; j<s.removed.length; j++) {
+            var d = s.removed[j];
+            this.$.selection.setItemSelected(d, false);
+          }
+        }
+      } else {
+        this._clearSelection();
+      }
+
+      var target = this.scrollTarget || this;
+      if (this._target !== target) {
+        if (this._target) {
+          this._target.removeEventListener('scroll', this._boundScrollHandler, false);
+        }
+        this._target = target;
+        this._target.addEventListener('scroll', this._boundScrollHandler, false);
+      }
+      // Only use -webkit-overflow-touch from iOS8+, where scroll events are fired
+      var ios = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\d+)/);
+      if (ios && ios[1] >= 8) {
+        target.style.webkitOverflowScrolling = 'touch';
+      }
+
+      this.initializeData();
+    },
+
+    initializeData: function() {
+      var currentCount = this._physicalCount || 0;
+      var dataLen = this.data && this.data.length || 0;
+      this._visibleCount = Math.ceil(this._target.offsetHeight / this.height);
+      this._physicalCount = Math.min(this._visibleCount + this.extraItems, dataLen);
+      this._physicalCount = Math.max(currentCount, this._physicalCount);
+      this._physicalData = this._physicalData || new Array(this._physicalCount);
+      var needItemInit = false;
+      while (currentCount < this._physicalCount) {
+        this._physicalData[currentCount++] = {};
+        needItemInit = true;
+      }
+      this.template.model = this._physicalData;
+      this.template.setAttribute('repeat', '');
+      if (needItemInit) {
+        this.onMutation(this, this.initializeItems);
+      } else {
+        this.refresh(true);
+      }
+    },
+
+    initializeItems: function() {
+      var currentCount = this._physicalItems && this._physicalItems.length || 0;
+      this._physicalItems = this._physicalItems || new Array(this._physicalCount);
+      for (var i = 0, item = this.template.nextElementSibling;
+           item && i < this._physicalCount;
+           ++i, item = item.nextElementSibling) {
+        this._physicalItems[i] = item;
+        item._transformValue = 0;
+      }
+      this.refresh(true);
+    },
+
+    updateItem: function(virtualIndex, physicalIndex) {
+      var virtualDatum = this.data && this.data[virtualIndex];
+      var physicalDatum = this._physicalData[physicalIndex];
+      physicalDatum.model = virtualDatum;
+      physicalDatum.physicalIndex = physicalIndex;
+      physicalDatum.index = virtualIndex;
+      physicalDatum.selected = this.selectionEnabled && virtualDatum ? 
+          this._selectedData.get(virtualDatum) : null;
+      var physicalItem = this._physicalItems[physicalIndex];
+      physicalItem.hidden = !virtualDatum;
+    },
+
+    scrollHandler: function(e, detail) {
+      this._scrollTop = e.detail ? e.detail.target.scrollTop : e.target.scrollTop;
+      this.refresh(false);
+    },
+
+    /**
+     * Refresh the list at the current scroll position.
+     *
+     * @method refresh
+     */
+    refresh: function(force) {
+      // Check that the array hasn't gotten longer since data was initialized
+      var dataLen = this.data && this.data.length || 0;
+      if (force) {
+        if (this._physicalCount < 
+            Math.min(this._visibleCount + this.extraItems, dataLen)) {
+          // Need to add more items; once new data & items are initialized,
+          // refresh will be run again
+          this.initializeData();
+          return;
+        }
+        this._physicalHeight = this.height * this._physicalCount;
+        this.$.viewport.style.height = this.height * dataLen + 'px';
+      }
+
+      var firstVisibleIndex = Math.floor(this._scrollTop / this.height);
+      var visibleMidpoint = firstVisibleIndex + this._visibleCount / 2;
+
+      var firstReifiedIndex = Math.max(0, Math.floor(visibleMidpoint - 
+          this._physicalCount / 2));
+      firstReifiedIndex = Math.min(firstReifiedIndex, dataLen - 
+          this._physicalCount);
+      firstReifiedIndex = (firstReifiedIndex < 0) ? 0 : firstReifiedIndex;
+
+      var firstPhysicalIndex = firstReifiedIndex % this._physicalCount;
+      var baseVirtualIndex = firstReifiedIndex - firstPhysicalIndex;
+
+      var baseTransformValue = Math.floor(this.height * baseVirtualIndex);
+      var nextTransformValue = Math.floor(baseTransformValue + 
+          this._physicalHeight);
+
+      var baseTransformString = 'translate3d(0,' + baseTransformValue + 'px,0)';
+      var nextTransformString = 'translate3d(0,' + nextTransformValue + 'px,0)';
+
+      this.firstPhysicalIndex = firstPhysicalIndex;
+      this.baseVirtualIndex = baseVirtualIndex;
+
+      for (var i = 0; i < firstPhysicalIndex; ++i) {
+        var item = this._physicalItems[i];
+        if (force || item._transformValue != nextTransformValue) {
+          this.updateItem(baseVirtualIndex + this._physicalCount + i, i);
+          setTransform(item, nextTransformString, nextTransformValue);
+        }
+      }
+      for (var i = firstPhysicalIndex; i < this._physicalCount; ++i) {
+        var item = this._physicalItems[i];
+        if (force || item._transformValue != baseTransformValue) {
+          this.updateItem(baseVirtualIndex + i, i);
+          setTransform(item, baseTransformString, baseTransformValue);
+        }
+      }
+    },
+
+    // list selection
+    tapHandler: function(e) {
+      var n = e.target;
+      var p = e.path;
+      if (!this.selectionEnabled || (n === this)) {
+        return;
+      }
+      requestAnimationFrame(function() {
+        // Gambit: only select the item if the tap wasn't on a focusable child
+        // of the list (since anything with its own action should be focusable
+        // and not result in result in list selection).  To check this, we
+        // asynchronously check that shadowRoot.activeElement is null, which 
+        // means the tapped item wasn't focusable. On polyfill where
+        // activeElement doesn't follow the data-hinding part of the spec, we
+        // can check that document.activeElement is the list itself, which will
+        // catch focus in lieu of the tapped item being focusable, as we make
+        // the list focusable (tabindex="-1") for this purpose.  Note we also
+        // allow the list items themselves to be focusable if desired, so those
+        // are excluded as well.
+        var active = window.ShadowDOMPolyfill ? 
+            wrap(document.activeElement) : this.shadowRoot.activeElement;
+        if (active && (active != this) && (active.parentElement != this) && 
+            (document.activeElement != document.body)) {
+          return;
+        }
+        // Unfortunately, Safari does not focus certain form controls via mouse,
+        // so we also blacklist input, button, & select
+        // (https://bugs.webkit.org/show_bug.cgi?id=118043)
+        if ((p[0].localName == 'input') || 
+            (p[0].localName == 'button') || 
+            (p[0].localName == 'select')) {
+          return;
+        }
+
+        var model = n.templateInstance && n.templateInstance.model;
+        if (model) {
+          var vi = model.index, pi = model.physicalIndex;
+          var data = this.data[vi], item = this._physicalItems[pi];
+          this.$.selection.select(data);
+          this.asyncFire('core-activate', {data: data, item: item});
+        }
+      }.bind(this));
+    },
+
+    selectedHandler: function(e, detail) {
+      this.selection = this.$.selection.getSelection();
+      var i$ = this.indexesForData(detail.item);
+      // TODO(sorvell): we should be relying on selection to store the
+      // selected data but we want to optimize for lookup.
+      this._selectedData.set(detail.item, detail.isSelected);
+      if (i$.physical >= 0) {
+        this.updateItem(i$.virtual, i$.physical);
+      }
+    },
+
+    /**
+     * Select the list item at the given index.
+     *
+     * @method selectItem
+     * @param {number} index 
+     */
+    selectItem: function(index) {
+      if (!this.selectionEnabled) {
+        return;
+      }
+      var data = this.data[index];
+      if (data) {
+        this.$.selection.select(data);
+      }
+    },
+
+    /**
+     * Set the selected state of the list item at the given index.
+     *
+     * @method setItemSelected
+     * @param {number} index 
+     * @param {boolean} isSelected 
+     */
+    setItemSelected: function(index, isSelected) {
+      var data = this.data[index];
+      if (data) {
+        this.$.selection.setItemSelected(data, isSelected);
+      }
+    },
+
+    indexesForData: function(data) {
+      var virtual = this.data.indexOf(data);
+      var physical = this.virtualToPhysicalIndex(virtual);
+      return { virtual: virtual, physical: physical };
+    },
+
+    virtualToPhysicalIndex: function(index) {
+      for (var i=0, l=this._physicalData.length; i<l; i++) {
+        if (this._physicalData[i].index === index) {
+          return i;
+        }
+      }
+      return -1;
+    },
+
+    /**
+     * Clears the current selection state of the list.
+     *
+     * @method clearSelection
+     */
+    clearSelection: function() {
+      this._clearSelection();
+      this.refresh(true);
+    },
+
+    _clearSelection: function() {
+      this._selectedData = new WeakMap();
+      this.$.selection.clear();
+      this.selection = this.$.selection.getSelection();
+    },
+
+    scrollToItem: function(index) {
+      this.scrollTop = index * this.height;
+    }
+
+  });
+
+  // determine proper transform mechanizm
+  if (document.documentElement.style.transform !== undefined) {
+    var setTransform = function(element, string, value) {
+      element.style.transform = string;
+      element._transformValue = value;
+    }
+  } else {
+    var setTransform = function(element, string, value) {
+      element.style.webkitTransform = string;
+      element._transformValue = value;
+    }
+  }
+
+})();
+</script>
+</polymer-element>
diff --git a/bower_components/core-overlay/core-overlay-layer.html b/bower_components/core-overlay/core-overlay-layer.html
index c75ce3abd..8efea091d 100644
--- a/bower_components/core-overlay/core-overlay-layer.html
+++ b/bower_components/core-overlay/core-overlay-layer.html
@@ -1,112 +1,112 @@
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-
-<polymer-element name="core-overlay-layer">
-<template>
-  <style>
-    :host {
-      position: fixed;
-      top: 0;
-      left: 0;
-      z-index: 1000;
-      display: none;
-    }
-
-    :host(.core-opened) {
-      display: block;
-    }
-  </style>
-  <content></content>
-</template>
-<script>
-(function() {
-
-  Polymer('core-overlay-layer', {
-    publish: {
-      opened: false
-    },
-    openedChanged: function() {
-      this.classList.toggle('core-opened', this.opened);
-    },
-    /**
-     * Adds an element to the overlay layer
-     */
-    addElement: function(element) {
-      if (!this.parentNode) {
-        document.querySelector('body').appendChild(this);
-      }
-      if (element.parentNode !== this) {
-        element.__contents = [];
-        var ip$ = element.querySelectorAll('content');
-        for (var i=0, l=ip$.length, n; (i<l) && (n = ip$[i]); i++) {
-          this.moveInsertedElements(n);
-          this.cacheDomLocation(n);
-          n.parentNode.removeChild(n);
-          element.__contents.push(n);
-        }
-        this.cacheDomLocation(element);
-        this.updateEventController(element);
-        var h = this.makeHost();
-        h.shadowRoot.appendChild(element);
-        element.__host = h;
-      }
-    },
-    makeHost: function() {
-      var h = document.createElement('overlay-host');
-      h.createShadowRoot();
-      this.appendChild(h);
-      return h;
-    },
-    moveInsertedElements: function(insertionPoint) {
-      var n$ = insertionPoint.getDistributedNodes();
-      var parent = insertionPoint.parentNode;
-      insertionPoint.__contents = [];
-      for (var i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {
-        this.cacheDomLocation(n);
-        this.updateEventController(n);
-        insertionPoint.__contents.push(n);
-        parent.appendChild(n);  
-      }
-    },
-    updateEventController: function(element) {
-      element.eventController = this.element.findController(element);
-    },
-    /**
-     * Removes an element from the overlay layer
-     */
-    removeElement: function(element) {
-      element.eventController = null;
-      this.replaceElement(element);
-      var h = element.__host;
-      if (h) {
-        h.parentNode.removeChild(h);
-      }
-    },
-    replaceElement: function(element) {
-      if (element.__contents) {
-        for (var i=0, c$=element.__contents, c; (c=c$[i]); i++) {
-          this.replaceElement(c);
-        }
-        element.__contents = null;
-      }
-      if (element.__parentNode) {
-        var n = element.__nextElementSibling && element.__nextElementSibling 
-            === element.__parentNode ? element.__nextElementSibling : null;
-        element.__parentNode.insertBefore(element, n);
-      }
-    },
-    cacheDomLocation: function(element) {
-      element.__nextElementSibling = element.nextElementSibling;
-      element.__parentNode = element.parentNode;
-    }
-  });
-  
-})();
-</script>
-</polymer-element>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+
+<polymer-element name="core-overlay-layer">
+<template>
+  <style>
+    :host {
+      position: fixed;
+      top: 0;
+      left: 0;
+      z-index: 1000;
+      display: none;
+    }
+
+    :host(.core-opened) {
+      display: block;
+    }
+  </style>
+  <content></content>
+</template>
+<script>
+(function() {
+
+  Polymer('core-overlay-layer', {
+    publish: {
+      opened: false
+    },
+    openedChanged: function() {
+      this.classList.toggle('core-opened', this.opened);
+    },
+    /**
+     * Adds an element to the overlay layer
+     */
+    addElement: function(element) {
+      if (!this.parentNode) {
+        document.querySelector('body').appendChild(this);
+      }
+      if (element.parentNode !== this) {
+        element.__contents = [];
+        var ip$ = element.querySelectorAll('content');
+        for (var i=0, l=ip$.length, n; (i<l) && (n = ip$[i]); i++) {
+          this.moveInsertedElements(n);
+          this.cacheDomLocation(n);
+          n.parentNode.removeChild(n);
+          element.__contents.push(n);
+        }
+        this.cacheDomLocation(element);
+        this.updateEventController(element);
+        var h = this.makeHost();
+        h.shadowRoot.appendChild(element);
+        element.__host = h;
+      }
+    },
+    makeHost: function() {
+      var h = document.createElement('overlay-host');
+      h.createShadowRoot();
+      this.appendChild(h);
+      return h;
+    },
+    moveInsertedElements: function(insertionPoint) {
+      var n$ = insertionPoint.getDistributedNodes();
+      var parent = insertionPoint.parentNode;
+      insertionPoint.__contents = [];
+      for (var i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {
+        this.cacheDomLocation(n);
+        this.updateEventController(n);
+        insertionPoint.__contents.push(n);
+        parent.appendChild(n);  
+      }
+    },
+    updateEventController: function(element) {
+      element.eventController = this.element.findController(element);
+    },
+    /**
+     * Removes an element from the overlay layer
+     */
+    removeElement: function(element) {
+      element.eventController = null;
+      this.replaceElement(element);
+      var h = element.__host;
+      if (h) {
+        h.parentNode.removeChild(h);
+      }
+    },
+    replaceElement: function(element) {
+      if (element.__contents) {
+        for (var i=0, c$=element.__contents, c; (c=c$[i]); i++) {
+          this.replaceElement(c);
+        }
+        element.__contents = null;
+      }
+      if (element.__parentNode) {
+        var n = element.__nextElementSibling && element.__nextElementSibling 
+            === element.__parentNode ? element.__nextElementSibling : null;
+        element.__parentNode.insertBefore(element, n);
+      }
+    },
+    cacheDomLocation: function(element) {
+      element.__nextElementSibling = element.nextElementSibling;
+      element.__parentNode = element.parentNode;
+    }
+  });
+  
+})();
+</script>
+</polymer-element>
diff --git a/bower_components/core-overlay/gulpfile.js b/bower_components/core-overlay/gulpfile.js
index 354f251dc..93ec2aeb5 100644
--- a/bower_components/core-overlay/gulpfile.js
+++ b/bower_components/core-overlay/gulpfile.js
@@ -1,2 +1,2 @@
-var gulp = require('gulp');
-require('gulp-web-component-tester').init(gulp);
+var gulp = require('gulp');
+require('gulp-web-component-tester').init(gulp);
diff --git a/bower_components/core-overlay/tests/html/core-overlay-basic.html b/bower_components/core-overlay/tests/html/core-overlay-basic.html
index 65609ac70..2170120fb 100644
--- a/bower_components/core-overlay/tests/html/core-overlay-basic.html
+++ b/bower_components/core-overlay/tests/html/core-overlay-basic.html
@@ -1,127 +1,127 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<html>
-<head>
-  <title>core-overlay</title>
-  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
-  <script src="../../../platform/platform.js"></script>
-  <script src="../../../polymer-test-tools/chai/chai.js"></script>
-  <script src="../../../polymer-test-tools/htmltest.js"></script>
-  <link rel="import" href="../../../core-transition/core-transition-css.html">
-  <link rel="import" href="../../core-overlay.html">
-  <style>
-    body {
-      margin: 0;
-      height: 100%;
-    }
-    
-    #basic {
-      height: 200px;
-      width: 300px;
-      border: 1px solid black;
-      padding: 10px;
-    }
-  </style>
-</head>
-<body fit unresolved>
-
-<core-overlay id="basic">
-  Basic Overlay
-</core-overlay>
-
-<div id="target">Targeted Overlay</div>
-<core-overlay id="targeted"></core-overlay>
-
-<core-overlay layered id="layered">
-  <style no-shim>
-    #layered {
-      height: 200px;
-      width: 300px;
-      border: 1px solid black;
-      padding: 10px;
-    }
-  </style>
-  Layered Overlay
-</core-overlay>
-
-<core-overlay layered backdrop id="backdrop">
-  <style no-shim>
-    #backdrop {
-      height: 200px;
-      width: 300px;
-      border: 1px solid black;
-      padding: 10px;
-      background-color: white;
-    }
-  </style>
-  Layered backdrop Overlay
-</core-overlay>
-
-<script>
-  document.addEventListener('polymer-ready', function() {
-    // setup
-    // basic
-    var basic = document.querySelector('#basic');
-    // targeted
-    var target = document.querySelector('#target');
-    var targeted = document.querySelector('#targeted');
-    targeted.target = target;
-    // 
-    var layered = document.querySelector('#layered');
-    var backdrop = document.querySelector('#backdrop');
-
-    function testOpenEvents(element, next) {
-      var openingEvents = 0;
-      element.addEventListener('core-overlay-open', function() {
-        openingEvents++;
-      });
-      element.addEventListener('core-overlay-open-completed', function() {
-        openingEvents++;
-        element.async(function() {
-          this.opened = false;
-        }, 1);
-      });
-      element.addEventListener('core-overlay-close-completed', function() {
-        openingEvents++;
-        chai.assert.equal(openingEvents, 4, 'open and open-completed events fired');
-        next();
-      });
-      element.opened = true;
-    }
-
-    asyncSeries([
-      // basic overlay events
-      function(next) {
-        chai.assert.equal(basic.opened, false, 'overlay starts closed');
-        chai.assert.equal(getComputedStyle(basic).display, 'none', 'overlay starts hidden');
-        testOpenEvents(basic, next);
-        
-      },
-      // targeted overlay events
-      function(next) {
-        chai.assert.equal(targeted.opened, false, 'targeted overlay starts closed');
-        chai.assert.equal(getComputedStyle(target).display, 'none', 'targeted overlay target starts hidden');
-        testOpenEvents(targeted, next);
-      },
-      // layered overlay events
-      function(next) {
-        testOpenEvents(layered, next);
-      },
-      // backdrop overlay events
-      function(next) {
-        testOpenEvents(backdrop, next);
-      }
-    ], done);
-  });
-
-</script>
-
-</body>
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<html>
+<head>
+  <title>core-overlay</title>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
+  <script src="../../../platform/platform.js"></script>
+  <script src="../../../polymer-test-tools/chai/chai.js"></script>
+  <script src="../../../polymer-test-tools/htmltest.js"></script>
+  <link rel="import" href="../../../core-transition/core-transition-css.html">
+  <link rel="import" href="../../core-overlay.html">
+  <style>
+    body {
+      margin: 0;
+      height: 100%;
+    }
+    
+    #basic {
+      height: 200px;
+      width: 300px;
+      border: 1px solid black;
+      padding: 10px;
+    }
+  </style>
+</head>
+<body fit unresolved>
+
+<core-overlay id="basic">
+  Basic Overlay
+</core-overlay>
+
+<div id="target">Targeted Overlay</div>
+<core-overlay id="targeted"></core-overlay>
+
+<core-overlay layered id="layered">
+  <style no-shim>
+    #layered {
+      height: 200px;
+      width: 300px;
+      border: 1px solid black;
+      padding: 10px;
+    }
+  </style>
+  Layered Overlay
+</core-overlay>
+
+<core-overlay layered backdrop id="backdrop">
+  <style no-shim>
+    #backdrop {
+      height: 200px;
+      width: 300px;
+      border: 1px solid black;
+      padding: 10px;
+      background-color: white;
+    }
+  </style>
+  Layered backdrop Overlay
+</core-overlay>
+
+<script>
+  document.addEventListener('polymer-ready', function() {
+    // setup
+    // basic
+    var basic = document.querySelector('#basic');
+    // targeted
+    var target = document.querySelector('#target');
+    var targeted = document.querySelector('#targeted');
+    targeted.target = target;
+    // 
+    var layered = document.querySelector('#layered');
+    var backdrop = document.querySelector('#backdrop');
+
+    function testOpenEvents(element, next) {
+      var openingEvents = 0;
+      element.addEventListener('core-overlay-open', function() {
+        openingEvents++;
+      });
+      element.addEventListener('core-overlay-open-completed', function() {
+        openingEvents++;
+        element.async(function() {
+          this.opened = false;
+        }, 1);
+      });
+      element.addEventListener('core-overlay-close-completed', function() {
+        openingEvents++;
+        chai.assert.equal(openingEvents, 4, 'open and open-completed events fired');
+        next();
+      });
+      element.opened = true;
+    }
+
+    asyncSeries([
+      // basic overlay events
+      function(next) {
+        chai.assert.equal(basic.opened, false, 'overlay starts closed');
+        chai.assert.equal(getComputedStyle(basic).display, 'none', 'overlay starts hidden');
+        testOpenEvents(basic, next);
+        
+      },
+      // targeted overlay events
+      function(next) {
+        chai.assert.equal(targeted.opened, false, 'targeted overlay starts closed');
+        chai.assert.equal(getComputedStyle(target).display, 'none', 'targeted overlay target starts hidden');
+        testOpenEvents(targeted, next);
+      },
+      // layered overlay events
+      function(next) {
+        testOpenEvents(layered, next);
+      },
+      // backdrop overlay events
+      function(next) {
+        testOpenEvents(backdrop, next);
+      }
+    ], done);
+  });
+
+</script>
+
+</body>
+</html>
diff --git a/bower_components/core-overlay/tests/html/core-overlay-positioning-margin.html b/bower_components/core-overlay/tests/html/core-overlay-positioning-margin.html
index 7f914b8ee..52055877b 100644
--- a/bower_components/core-overlay/tests/html/core-overlay-positioning-margin.html
+++ b/bower_components/core-overlay/tests/html/core-overlay-positioning-margin.html
@@ -1,153 +1,153 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<html>
-<head>
-  <title>core-overlay</title>
-  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
-  <script src="../../../platform/platform.js"></script>
-  <script src="../../../polymer-test-tools/chai/chai.js"></script>
-  <script src="../../../polymer-test-tools/htmltest.js"></script>
-  <link rel="import" href="../../../core-transition/core-transition-css.html">
-  <link rel="import" href="../../core-overlay.html">
-  <style>
-    body {
-      margin: 0;
-      height: 100%;
-    }
-    
-    .sized {
-      height: 200px;
-      width: 300px;
-      border: 1px solid black;
-      padding: 10px;
-      margin: 16px;
-    }
-
-    .positioned {
-      top: 0;
-      left: 0;
-    }
-  </style>
-</head>
-<body unresolved>
-
-<core-overlay class="sized" id="basic">
-  Sized Overlay
-</core-overlay>
-
-<core-overlay class="sized positioned" id="overlay">
-  Positioned Overlay
-</core-overlay>
-
-<template>
-  <div>"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?"</div>
-</template>
-
-<script>
-  document.addEventListener('polymer-ready', function() {
-    // setup
-    var basic = document.querySelector('#basic');
-    var overlay = document.querySelector('#overlay');
-    var template = document.querySelector('template');
-
-    function testWhenOpen(element, test, next) {
-      var l1 = function() {
-        test();
-        element.async(function() {
-          element.opened = false;
-        }, 1);
-      };
-      var l2 = function() {
-        element.removeEventListener('core-overlay-open-completed', l1);
-        element.removeEventListener('core-overlay-close-completed', l2);
-        next();
-      };
-      element.addEventListener('core-overlay-open-completed', l1);
-      element.addEventListener('core-overlay-close-completed', l2);
-      element.opened = true;
-    }
-
-    asyncSeries([
-      // centered overlay
-      function(next) {
-        testWhenOpen(basic, function() {
-          var rect = basic.getBoundingClientRect();
-          chai.assert.ok(Math.abs(rect.left - (window.innerWidth - rect.right)) < 5, 'overlay centered horizontally');
-          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) < 5, 'overlay centered vertically');
-        }, next);
-      },
-      // css positioned overlay
-      function(next) {
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.equal(rect.left, 16, 'positions via css');
-          chai.assert.equal(rect.top, 16, 'positions via css');
-        }, next);
-      },
-      // manual positioned overlay
-      function(next) {
-        overlay.style.left = overlay.style.top = 'auto';
-        overlay.style.right = '0px';
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.equal(rect.right, window.innerWidth - 16, 'positioned manually');
-          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) <= 16, 'overlay centered vertically');
-        }, next);
-      },
-      // overflow, position top, left
-      function(next) {
-        overlay.style.left = overlay.style.top = '0px';
-        overlay.style.right = 'auto';
-        overlay.style.width = overlay.style.height = 'auto';
-        for (var i=0; i<20; i++) {
-          overlay.appendChild(template.content.cloneNode(true));  
-        }
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-      // overflow, position, bottom, right
-      function(next) {
-        overlay.style.right = overlay.style.bottom = '0px';
-        overlay.style.left = overlay.style.top = 'auto';
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-      // overflow, unpositioned
-      function(next) {
-        overlay.style.right = overlay.style.bottom = 'auto';
-        overlay.style.left = overlay.style.top = 'auto';
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-      // overflow, unpositioned, layered
-      function(next) {
-        overlay.layered = true;
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-    ], done);
-  });
-
-</script>
-
-</body>
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<html>
+<head>
+  <title>core-overlay</title>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
+  <script src="../../../platform/platform.js"></script>
+  <script src="../../../polymer-test-tools/chai/chai.js"></script>
+  <script src="../../../polymer-test-tools/htmltest.js"></script>
+  <link rel="import" href="../../../core-transition/core-transition-css.html">
+  <link rel="import" href="../../core-overlay.html">
+  <style>
+    body {
+      margin: 0;
+      height: 100%;
+    }
+    
+    .sized {
+      height: 200px;
+      width: 300px;
+      border: 1px solid black;
+      padding: 10px;
+      margin: 16px;
+    }
+
+    .positioned {
+      top: 0;
+      left: 0;
+    }
+  </style>
+</head>
+<body unresolved>
+
+<core-overlay class="sized" id="basic">
+  Sized Overlay
+</core-overlay>
+
+<core-overlay class="sized positioned" id="overlay">
+  Positioned Overlay
+</core-overlay>
+
+<template>
+  <div>"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?"</div>
+</template>
+
+<script>
+  document.addEventListener('polymer-ready', function() {
+    // setup
+    var basic = document.querySelector('#basic');
+    var overlay = document.querySelector('#overlay');
+    var template = document.querySelector('template');
+
+    function testWhenOpen(element, test, next) {
+      var l1 = function() {
+        test();
+        element.async(function() {
+          element.opened = false;
+        }, 1);
+      };
+      var l2 = function() {
+        element.removeEventListener('core-overlay-open-completed', l1);
+        element.removeEventListener('core-overlay-close-completed', l2);
+        next();
+      };
+      element.addEventListener('core-overlay-open-completed', l1);
+      element.addEventListener('core-overlay-close-completed', l2);
+      element.opened = true;
+    }
+
+    asyncSeries([
+      // centered overlay
+      function(next) {
+        testWhenOpen(basic, function() {
+          var rect = basic.getBoundingClientRect();
+          chai.assert.ok(Math.abs(rect.left - (window.innerWidth - rect.right)) < 5, 'overlay centered horizontally');
+          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) < 5, 'overlay centered vertically');
+        }, next);
+      },
+      // css positioned overlay
+      function(next) {
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.equal(rect.left, 16, 'positions via css');
+          chai.assert.equal(rect.top, 16, 'positions via css');
+        }, next);
+      },
+      // manual positioned overlay
+      function(next) {
+        overlay.style.left = overlay.style.top = 'auto';
+        overlay.style.right = '0px';
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.equal(rect.right, window.innerWidth - 16, 'positioned manually');
+          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) <= 16, 'overlay centered vertically');
+        }, next);
+      },
+      // overflow, position top, left
+      function(next) {
+        overlay.style.left = overlay.style.top = '0px';
+        overlay.style.right = 'auto';
+        overlay.style.width = overlay.style.height = 'auto';
+        for (var i=0; i<20; i++) {
+          overlay.appendChild(template.content.cloneNode(true));  
+        }
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+      // overflow, position, bottom, right
+      function(next) {
+        overlay.style.right = overlay.style.bottom = '0px';
+        overlay.style.left = overlay.style.top = 'auto';
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+      // overflow, unpositioned
+      function(next) {
+        overlay.style.right = overlay.style.bottom = 'auto';
+        overlay.style.left = overlay.style.top = 'auto';
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+      // overflow, unpositioned, layered
+      function(next) {
+        overlay.layered = true;
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+    ], done);
+  });
+
+</script>
+
+</body>
+</html>
diff --git a/bower_components/core-overlay/tests/html/core-overlay-positioning.html b/bower_components/core-overlay/tests/html/core-overlay-positioning.html
index 00813897e..cead7006e 100644
--- a/bower_components/core-overlay/tests/html/core-overlay-positioning.html
+++ b/bower_components/core-overlay/tests/html/core-overlay-positioning.html
@@ -1,152 +1,152 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<html>
-<head>
-  <title>core-overlay</title>
-  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
-  <script src="../../../platform/platform.js"></script>
-  <script src="../../../polymer-test-tools/chai/chai.js"></script>
-  <script src="../../../polymer-test-tools/htmltest.js"></script>
-  <link rel="import" href="../../../core-transition/core-transition-css.html">
-  <link rel="import" href="../../core-overlay.html">
-  <style>
-    body {
-      margin: 0;
-      height: 100%;
-    }
-    
-    .sized {
-      height: 200px;
-      width: 300px;
-      border: 1px solid black;
-      padding: 10px;
-    }
-
-    .positioned {
-      top: 0;
-      left: 0;
-    }
-  </style>
-</head>
-<body unresolved>
-
-<core-overlay class="sized" id="basic">
-  Sized Overlay
-</core-overlay>
-
-<core-overlay class="sized positioned" id="overlay">
-  Positioned Overlay
-</core-overlay>
-
-<template>
-  <div>"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?"</div>
-</template>
-
-<script>
-  document.addEventListener('polymer-ready', function() {
-    // setup
-    var basic = document.querySelector('#basic');
-    var overlay = document.querySelector('#overlay');
-    var template = document.querySelector('template');
-
-    function testWhenOpen(element, test, next) {
-      var l1 = function() {
-        test();
-        element.async(function() {
-          element.opened = false;
-        }, 1);
-      };
-      var l2 = function() {
-        element.removeEventListener('core-overlay-open-completed', l1);
-        element.removeEventListener('core-overlay-close-completed', l2);
-        next();
-      };
-      element.addEventListener('core-overlay-open-completed', l1);
-      element.addEventListener('core-overlay-close-completed', l2);
-      element.opened = true;
-    }
-
-    asyncSeries([
-      // centered overlay
-      function(next) {
-        testWhenOpen(basic, function() {
-          var rect = basic.getBoundingClientRect();
-          chai.assert.ok(Math.abs(rect.left - (window.innerWidth - rect.right)) < 5, 'overlay centered horizontally');
-          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) < 5, 'overlay centered vertically');
-        }, next);
-      },
-      // css positioned overlay
-      function(next) {
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.equal(rect.left, 0, 'positions via css');
-          chai.assert.equal(rect.top, 0, 'positions via css');
-        }, next);
-      },
-      // manual positioned overlay
-      function(next) {
-        overlay.style.left = overlay.style.top = 'auto';
-        overlay.style.right = '0px';
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.equal(rect.right, window.innerWidth, 'positioned manually');
-          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) < 5, 'overlay centered vertically');
-        }, next);
-      },
-      // overflow, position top, left
-      function(next) {
-        overlay.style.left = overlay.style.top = '0px';
-        overlay.style.right = 'auto';
-        overlay.style.width = overlay.style.height = 'auto';
-        for (var i=0; i<20; i++) {
-          overlay.appendChild(template.content.cloneNode(true));  
-        }
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-      // overflow, position, bottom, right
-      function(next) {
-        overlay.style.right = overlay.style.bottom = '0px';
-        overlay.style.left = overlay.style.top = 'auto';
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-      // overflow, unpositioned
-      function(next) {
-        overlay.style.right = overlay.style.bottom = 'auto';
-        overlay.style.left = overlay.style.top = 'auto';
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-      // overflow, unpositioned, layered
-      function(next) {
-        overlay.layered = true;
-        testWhenOpen(overlay, function() {
-          var rect = overlay.getBoundingClientRect();
-          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
-          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
-        }, next);
-      },
-    ], done);
-  });
-
-</script>
-
-</body>
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<html>
+<head>
+  <title>core-overlay</title>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
+  <script src="../../../platform/platform.js"></script>
+  <script src="../../../polymer-test-tools/chai/chai.js"></script>
+  <script src="../../../polymer-test-tools/htmltest.js"></script>
+  <link rel="import" href="../../../core-transition/core-transition-css.html">
+  <link rel="import" href="../../core-overlay.html">
+  <style>
+    body {
+      margin: 0;
+      height: 100%;
+    }
+    
+    .sized {
+      height: 200px;
+      width: 300px;
+      border: 1px solid black;
+      padding: 10px;
+    }
+
+    .positioned {
+      top: 0;
+      left: 0;
+    }
+  </style>
+</head>
+<body unresolved>
+
+<core-overlay class="sized" id="basic">
+  Sized Overlay
+</core-overlay>
+
+<core-overlay class="sized positioned" id="overlay">
+  Positioned Overlay
+</core-overlay>
+
+<template>
+  <div>"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?"</div>
+</template>
+
+<script>
+  document.addEventListener('polymer-ready', function() {
+    // setup
+    var basic = document.querySelector('#basic');
+    var overlay = document.querySelector('#overlay');
+    var template = document.querySelector('template');
+
+    function testWhenOpen(element, test, next) {
+      var l1 = function() {
+        test();
+        element.async(function() {
+          element.opened = false;
+        }, 1);
+      };
+      var l2 = function() {
+        element.removeEventListener('core-overlay-open-completed', l1);
+        element.removeEventListener('core-overlay-close-completed', l2);
+        next();
+      };
+      element.addEventListener('core-overlay-open-completed', l1);
+      element.addEventListener('core-overlay-close-completed', l2);
+      element.opened = true;
+    }
+
+    asyncSeries([
+      // centered overlay
+      function(next) {
+        testWhenOpen(basic, function() {
+          var rect = basic.getBoundingClientRect();
+          chai.assert.ok(Math.abs(rect.left - (window.innerWidth - rect.right)) < 5, 'overlay centered horizontally');
+          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) < 5, 'overlay centered vertically');
+        }, next);
+      },
+      // css positioned overlay
+      function(next) {
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.equal(rect.left, 0, 'positions via css');
+          chai.assert.equal(rect.top, 0, 'positions via css');
+        }, next);
+      },
+      // manual positioned overlay
+      function(next) {
+        overlay.style.left = overlay.style.top = 'auto';
+        overlay.style.right = '0px';
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.equal(rect.right, window.innerWidth, 'positioned manually');
+          chai.assert.ok(Math.abs(rect.top - (window.innerHeight - rect.bottom)) < 5, 'overlay centered vertically');
+        }, next);
+      },
+      // overflow, position top, left
+      function(next) {
+        overlay.style.left = overlay.style.top = '0px';
+        overlay.style.right = 'auto';
+        overlay.style.width = overlay.style.height = 'auto';
+        for (var i=0; i<20; i++) {
+          overlay.appendChild(template.content.cloneNode(true));  
+        }
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+      // overflow, position, bottom, right
+      function(next) {
+        overlay.style.right = overlay.style.bottom = '0px';
+        overlay.style.left = overlay.style.top = 'auto';
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+      // overflow, unpositioned
+      function(next) {
+        overlay.style.right = overlay.style.bottom = 'auto';
+        overlay.style.left = overlay.style.top = 'auto';
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+      // overflow, unpositioned, layered
+      function(next) {
+        overlay.layered = true;
+        testWhenOpen(overlay, function() {
+          var rect = overlay.getBoundingClientRect();
+          chai.assert.ok(window.innerWidth >= rect.right, 'overlay constrained to window size');
+          chai.assert.ok(window.innerHeight >= rect.bottom, 'overlay constrained to window size');
+        }, next);
+      },
+    ], done);
+  });
+
+</script>
+
+</body>
+</html>
diff --git a/bower_components/core-overlay/tests/html/core-overlay-scroll.html b/bower_components/core-overlay/tests/html/core-overlay-scroll.html
index 2c2f1ec67..4b7fd98eb 100644
--- a/bower_components/core-overlay/tests/html/core-overlay-scroll.html
+++ b/bower_components/core-overlay/tests/html/core-overlay-scroll.html
@@ -1,130 +1,130 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<html>
-<head>
-  <title>core-overlay</title>
-  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
-  <script src="../../../platform/platform.js"></script>
-  <script src="../../../polymer-test-tools/chai/chai.js"></script>
-  <script src="../../../polymer-test-tools/htmltest.js"></script>
-  <link rel="import" href="../../../core-transition/core-transition-css.html">
-  <link rel="import" href="../../core-overlay.html">
-  <style>
-    core-overlay {
-      width: 300px;
-      border: 1px solid black;
-      margin: 10px;
-      overflow: auto !important;
-    }
-    
-    #content {
-      overflow: auto;
-    }
-  </style>
-</head>
-<body fullbleed unresolved>
-  <template is="auto-binding">
-    <core-overlay id="simple">
-        <div>Lots of Content that might overflow the overlay!</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-    </core-overlay>
-
-    <core-overlay id="sectioned" vertical layout sizingTarget="{{$.content}}">
-      <header>Stuff on top</header>
-      <section id="content">
-        <div>Lots of Content that might overflow the overlay!</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
-      </section>
-      <footer>Stuff on bottom</footer>
-    </core-overlay>
-  </template>
-  <script>
-    addEventListener('template-bound', function(e) {
-      // setup
-      var simple = document.querySelector('#simple');
-      var sectioned = document.querySelector('#sectioned');
-
-      function testWhenOpen(element, test, next) {
-        var l1 = function() {
-          test();
-          element.async(function() {
-            element.opened = false;
-          }, null, 1);
-        };
-        var l2 = function() {
-          element.removeEventListener('core-overlay-open-completed', l1);
-          element.removeEventListener('core-overlay-close-completed', l2);
-          next();
-        };
-        element.addEventListener('core-overlay-open-completed', l1);
-        element.addEventListener('core-overlay-close-completed', l2);
-        element.opened = true;
-      }
-
-      asyncSeries([
-        // scrolling overlay does not overflow
-        function(next) {
-          testWhenOpen(simple, function() {
-            var rect = simple.getBoundingClientRect();
-            chai.assert.ok(0 < rect.top + 10, 'overlay constrained to window size');
-            chai.assert.ok(0 < rect.left + 10, 'overlay constrained to window size');
-            chai.assert.ok(window.innerWidth >= rect.right + 10, 'overlay constrained to window size');
-            chai.assert.ok(window.innerHeight >= rect.bottom + 10, 'overlay constrained to window size');
-          }, next);
-        },
-        // scrolling overlay does not overflow
-        function(next) {
-          testWhenOpen(sectioned, function() {
-            var rect = sectioned.getBoundingClientRect();
-            chai.assert.ok(0 < rect.top + 10, 'overlay constrained to window size');
-            chai.assert.ok(0 < rect.left + 10, 'overlay constrained to window size');
-            chai.assert.ok(window.innerWidth >= rect.right + 10, 'overlay constrained to window size');
-            chai.assert.ok(window.innerHeight >= rect.bottom + 10, 'overlay constrained to window size');
-          }, next);
-        },
-        // positioned scrolling overlay does not overflow
-        function(next) {
-          sectioned.style.top = sectioned.style.right = '';
-          sectioned.style.left = '300px';
-          sectioned.style.bottom = '200px'
-          testWhenOpen(sectioned, function() {
-            var rect = sectioned.getBoundingClientRect();
-            chai.assert.ok(0 < rect.top + 10, 'overlay constrained to window size');
-            chai.assert.ok(0 < rect.left + 10, 'overlay constrained to window size');
-            chai.assert.ok(window.innerWidth >= rect.right + 10, 'overlay constrained to window size');
-            chai.assert.ok(window.innerHeight >= rect.bottom + 10, 'overlay constrained to window size');
-          }, next);
-        }
-      ], done);
-    });
-  </script>
-</body>
-
-</html>
-
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<html>
+<head>
+  <title>core-overlay</title>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
+  <script src="../../../platform/platform.js"></script>
+  <script src="../../../polymer-test-tools/chai/chai.js"></script>
+  <script src="../../../polymer-test-tools/htmltest.js"></script>
+  <link rel="import" href="../../../core-transition/core-transition-css.html">
+  <link rel="import" href="../../core-overlay.html">
+  <style>
+    core-overlay {
+      width: 300px;
+      border: 1px solid black;
+      margin: 10px;
+      overflow: auto !important;
+    }
+    
+    #content {
+      overflow: auto;
+    }
+  </style>
+</head>
+<body fullbleed unresolved>
+  <template is="auto-binding">
+    <core-overlay id="simple">
+        <div>Lots of Content that might overflow the overlay!</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+    </core-overlay>
+
+    <core-overlay id="sectioned" vertical layout sizingTarget="{{$.content}}">
+      <header>Stuff on top</header>
+      <section id="content">
+        <div>Lots of Content that might overflow the overlay!</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+        <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
+      </section>
+      <footer>Stuff on bottom</footer>
+    </core-overlay>
+  </template>
+  <script>
+    addEventListener('template-bound', function(e) {
+      // setup
+      var simple = document.querySelector('#simple');
+      var sectioned = document.querySelector('#sectioned');
+
+      function testWhenOpen(element, test, next) {
+        var l1 = function() {
+          test();
+          element.async(function() {
+            element.opened = false;
+          }, null, 1);
+        };
+        var l2 = function() {
+          element.removeEventListener('core-overlay-open-completed', l1);
+          element.removeEventListener('core-overlay-close-completed', l2);
+          next();
+        };
+        element.addEventListener('core-overlay-open-completed', l1);
+        element.addEventListener('core-overlay-close-completed', l2);
+        element.opened = true;
+      }
+
+      asyncSeries([
+        // scrolling overlay does not overflow
+        function(next) {
+          testWhenOpen(simple, function() {
+            var rect = simple.getBoundingClientRect();
+            chai.assert.ok(0 < rect.top + 10, 'overlay constrained to window size');
+            chai.assert.ok(0 < rect.left + 10, 'overlay constrained to window size');
+            chai.assert.ok(window.innerWidth >= rect.right + 10, 'overlay constrained to window size');
+            chai.assert.ok(window.innerHeight >= rect.bottom + 10, 'overlay constrained to window size');
+          }, next);
+        },
+        // scrolling overlay does not overflow
+        function(next) {
+          testWhenOpen(sectioned, function() {
+            var rect = sectioned.getBoundingClientRect();
+            chai.assert.ok(0 < rect.top + 10, 'overlay constrained to window size');
+            chai.assert.ok(0 < rect.left + 10, 'overlay constrained to window size');
+            chai.assert.ok(window.innerWidth >= rect.right + 10, 'overlay constrained to window size');
+            chai.assert.ok(window.innerHeight >= rect.bottom + 10, 'overlay constrained to window size');
+          }, next);
+        },
+        // positioned scrolling overlay does not overflow
+        function(next) {
+          sectioned.style.top = sectioned.style.right = '';
+          sectioned.style.left = '300px';
+          sectioned.style.bottom = '200px'
+          testWhenOpen(sectioned, function() {
+            var rect = sectioned.getBoundingClientRect();
+            chai.assert.ok(0 < rect.top + 10, 'overlay constrained to window size');
+            chai.assert.ok(0 < rect.left + 10, 'overlay constrained to window size');
+            chai.assert.ok(window.innerWidth >= rect.right + 10, 'overlay constrained to window size');
+            chai.assert.ok(window.innerHeight >= rect.bottom + 10, 'overlay constrained to window size');
+          }, next);
+        }
+      ], done);
+    });
+  </script>
+</body>
+
+</html>
+
+</html>
diff --git a/bower_components/core-overlay/tests/js/htmltests.js b/bower_components/core-overlay/tests/js/htmltests.js
index 2c050c771..6cedcde4d 100644
--- a/bower_components/core-overlay/tests/js/htmltests.js
+++ b/bower_components/core-overlay/tests/js/htmltests.js
@@ -1,6 +1,6 @@
-htmlSuite('core-overlay', function() {
-  htmlTest('html/core-overlay-basic.html');
-  htmlTest('html/core-overlay-positioning.html');
-  htmlTest('html/core-overlay-positioning-margin.html');
-  htmlTest('html/core-overlay-scroll.html');
-});
+htmlSuite('core-overlay', function() {
+  htmlTest('html/core-overlay-basic.html');
+  htmlTest('html/core-overlay-positioning.html');
+  htmlTest('html/core-overlay-positioning-margin.html');
+  htmlTest('html/core-overlay-scroll.html');
+});
diff --git a/bower_components/core-overlay/tests/runner.html b/bower_components/core-overlay/tests/runner.html
index 0d9889372..26829de76 100644
--- a/bower_components/core-overlay/tests/runner.html
+++ b/bower_components/core-overlay/tests/runner.html
@@ -1,14 +1,14 @@
-<!doctype htmlz>
-<html>
-<head>
-  <meta charset="UTF-8">
-  <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes">
-  <title>Web Component Test Runner</title>
-  <script src="../../polymer-test-tools/ci-support.js"></script>
-</head>
-<body>
-  <script>
-    runTests('tests.json');
-  </script>
-</body>
-</html>
+<!doctype htmlz>
+<html>
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes">
+  <title>Web Component Test Runner</title>
+  <script src="../../polymer-test-tools/ci-support.js"></script>
+</head>
+<body>
+  <script>
+    runTests('tests.json');
+  </script>
+</body>
+</html>
diff --git a/bower_components/core-overlay/tests/tests.json b/bower_components/core-overlay/tests/tests.json
index 9e8e99b0b..3233617d7 100644
--- a/bower_components/core-overlay/tests/tests.json
+++ b/bower_components/core-overlay/tests/tests.json
@@ -1,6 +1,6 @@
-{
-	"tools": ["chai", "mocha-tdd"],
-	"tests": [
-		"js/htmltests.js"
-	]
+{
+	"tools": ["chai", "mocha-tdd"],
+	"tests": [
+		"js/htmltests.js"
+	]
 }
\ No newline at end of file
diff --git a/bower_components/core-pages/demo.html b/bower_components/core-pages/demo.html
index 5d46c9f7a..5eda98ec6 100644
--- a/bower_components/core-pages/demo.html
+++ b/bower_components/core-pages/demo.html
@@ -7,130 +7,130 @@
     Code distributed by Google as part of the polymer project is also
     subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 -->
-<!doctype html>
-<html>
-<head>
-
-  <meta charset="utf-8">
-  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
-
-  <title>core-pages</title>
-
-  <script src="../platform/platform.js"></script>
-
-  <link rel="import" href="core-pages.html">
-
-  <style>
-
-    html, body {
-      height: 100%;
-    }
-
-    body {
-      font-family: sans-serif;
-    }
-
-    core-pages {
-      width: 300px;
-      height: 300px;
-      border: 1px solid black;
-      -webkit-user-select: none;
-      border-radius: 5px;
-    }
-
-    core-pages > div {
-      display: flex;
-      justify-content: center;
-      align-items: center;
-      border-radius: inherit;
-    }
-
-    core-pages.fancy {
-      border: none;
-      margin-left: 2em;
-    }
-
-    core-pages.fancy > div {
-      opacity: 0;
-      -webkit-transform: translate3d(-100px, 0, 0) scale(0.9);
-      transform: translate3d(-100px, 0, 0) scale(0.9);
-      transition: all 1s cubic-bezier(.03,.56,.7,.98);
-      color: white;
-    }
-
-    core-pages.fancy > .one {
-      background-color: red;
-    }
-
-    core-pages.fancy > .two {
-      background-color: green;
-    }
-
-    core-pages.fancy > .three {
-      background-color: blue;
-    }
-
-    core-pages.fancy > .four {
-      background-color: purple;
-    }
-
-    core-pages.fancy > .five {
-      background-color: black;
-    }
-
-    core-pages.fancy .core-selected + div {
-      -webkit-transform: translate3d(100px, 0, 0) scale(0.9);
-      transform: translate3d(100px, 0, 0) scale(1);
-    }
-
-    core-pages.fancy .core-selected {
-      opacity: 1;
-      -webkit-transform: translateX(0);
-      transform: translateX(0);
-    }
-
-    core-pages.fancy div.begin {
-      -webkit-transform: translate3d(100px, 0, 0) scale(0.9);
-      transform: translate3d(100px, 0, 0) scale(0.9);
-    }
-
-  </style>
-
-</head>
-<body unresolved fullbleed horizontal center center-justified layout>
-
-  <core-pages id="first" selected="0">
-    <div>One</div>
-    <div>Two</div>
-    <div>Three</div>
-    <div>Four</div>
-    <div>Five</div>
-  </core-pages>
-
-  <core-pages class="fancy" selected="0">
-    <div class="one">One</div>
-    <div class="two">Two</div>
-    <div class="three">Three</div>
-    <div class="four">Four</div>
-    <div class="five">Five</div>
-  </core-pages>
-
-  <script>
-    document.querySelector('#first').onclick = function(e) {
-      this.selected = (this.selected + 1) % this.items.length;      
-    };
-
-    document.querySelector('core-pages.fancy').onclick = function(e) {
-      this.selected = (this.selected + 1) % this.items.length;
-      this.async(function() {
-        if (this.selectedIndex == 0) {
-          this.selectedItem.classList.remove('begin');
-        } else if (this.selectedIndex == this.items.length - 1) {
-          this.items[0].classList.add('begin');
-        }
-      });
-    };
-  </script>
-
-</body>
-</html>
+<!doctype html>
+<html>
+<head>
+
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
+
+  <title>core-pages</title>
+
+  <script src="../platform/platform.js"></script>
+
+  <link rel="import" href="core-pages.html">
+
+  <style>
+
+    html, body {
+      height: 100%;
+    }
+
+    body {
+      font-family: sans-serif;
+    }
+
+    core-pages {
+      width: 300px;
+      height: 300px;
+      border: 1px solid black;
+      -webkit-user-select: none;
+      border-radius: 5px;
+    }
+
+    core-pages > div {
+      display: flex;
+      justify-content: center;
+      align-items: center;
+      border-radius: inherit;
+    }
+
+    core-pages.fancy {
+      border: none;
+      margin-left: 2em;
+    }
+
+    core-pages.fancy > div {
+      opacity: 0;
+      -webkit-transform: translate3d(-100px, 0, 0) scale(0.9);
+      transform: translate3d(-100px, 0, 0) scale(0.9);
+      transition: all 1s cubic-bezier(.03,.56,.7,.98);
+      color: white;
+    }
+
+    core-pages.fancy > .one {
+      background-color: red;
+    }
+
+    core-pages.fancy > .two {
+      background-color: green;
+    }
+
+    core-pages.fancy > .three {
+      background-color: blue;
+    }
+
+    core-pages.fancy > .four {
+      background-color: purple;
+    }
+
+    core-pages.fancy > .five {
+      background-color: black;
+    }
+
+    core-pages.fancy .core-selected + div {
+      -webkit-transform: translate3d(100px, 0, 0) scale(0.9);
+      transform: translate3d(100px, 0, 0) scale(1);
+    }
+
+    core-pages.fancy .core-selected {
+      opacity: 1;
+      -webkit-transform: translateX(0);
+      transform: translateX(0);
+    }
+
+    core-pages.fancy div.begin {
+      -webkit-transform: translate3d(100px, 0, 0) scale(0.9);
+      transform: translate3d(100px, 0, 0) scale(0.9);
+    }
+
+  </style>
+
+</head>
+<body unresolved fullbleed horizontal center center-justified layout>
+
+  <core-pages id="first" selected="0">
+    <div>One</div>
+    <div>Two</div>
+    <div>Three</div>
+    <div>Four</div>
+    <div>Five</div>
+  </core-pages>
+
+  <core-pages class="fancy" selected="0">
+    <div class="one">One</div>
+    <div class="two">Two</div>
+    <div class="three">Three</div>
+    <div class="four">Four</div>
+    <div class="five">Five</div>
+  </core-pages>
+
+  <script>
+    document.querySelector('#first').onclick = function(e) {
+      this.selected = (this.selected + 1) % this.items.length;      
+    };
+
+    document.querySelector('core-pages.fancy').onclick = function(e) {
+      this.selected = (this.selected + 1) % this.items.length;
+      this.async(function() {
+        if (this.selectedIndex == 0) {
+          this.selectedItem.classList.remove('begin');
+        } else if (this.selectedIndex == this.items.length - 1) {
+          this.items[0].classList.add('begin');
+        }
+      });
+    };
+  </script>
+
+</body>
+</html>
diff --git a/bower_components/core-signals/index.html b/bower_components/core-signals/index.html
index a0033793c..58856f33a 100644
--- a/bower_components/core-signals/index.html
+++ b/bower_components/core-signals/index.html
@@ -1,22 +1,22 @@
-<!doctype html>
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
-The complete set of authors may be found at http://polymer.github.io/AUTHORS
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
--->
-<html>
-<head>
-
-  <script src="../platform/platform.js"></script>
-  <link rel="import" href="../core-component-page/core-component-page.html">
-
-</head>
-<body unresolved>
-
-  <core-component-page></core-component-page>
-
-</body>
-</html>
+<!doctype html>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
+The complete set of authors may be found at http://polymer.github.io/AUTHORS
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
+-->
+<html>
+<head>
+
+  <script src="../platform/platform.js"></script>
+  <link rel="import" href="../core-component-page/core-component-page.html">
+
+</head>
+<body unresolved>
+
+  <core-component-page></core-component-page>
+
+</body>
+</html>
diff --git a/bower_components/core-style/core-style.html b/bower_components/core-style/core-style.html
index d0aaf5295..7f10392b8 100644
--- a/bower_components/core-style/core-style.html
+++ b/bower_components/core-style/core-style.html
@@ -1,387 +1,387 @@
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<!--
-
-The `core-style` element helps manage styling inside other elements and can 
-be used to make themes. The `core-style` element can be either a producer 
-or consumer of styling. If it has its `id` property set, it's a producer. 
-Elements that are producers should include css styling as their text content.
-If a `core-style` has its `ref` property set, it's a consumer. A `core-style`
-typically sets its `ref` property to the value of the `id` property of the
-`core-style` it wants to use. This allows a single producer to be used in 
-multiple places, for example, in many different elements.
-
-It's common to place `core-style` producer elements inside HTMLImports.
-Remote stylesheets should be included this way, the &#64;import css mechanism is
-not currently supported.
-
-Here's a basic example:
-
-    <polymer-element name="x-test" noscript>
-      <template>
-        <core-style ref="x-test"></core-style>
-        <content></content>
-      </template>
-    </polymer-element>
-
-The `x-test` element above will be styled by any `core-style` elements that have
-`id` set to `x-test`. These `core-style` producers are separate from the element
-definition, allowing a user of the element to style it independent of the author's 
-styling. For example:
-
-    <core-style id="x-test">
-      :host {
-        backgound-color: steelblue;
-      }
-    </core-style>
-
-The content of the `x-test` `core-style` producer gets included inside the
-shadowRoot of the `x-test` element. If the content of the `x-test` producer
-`core-style` changes, all consumers of it are automatically kept in sync. This
-allows updating styling on the fly.
-
-The `core-style` element also supports bindings and it is the producer 
-`core-style` element is the model for its content. Here's an example:
-
-    <core-style id="x-test">
-      :host {
-        background-color: {{myColor}};
-      }
-    </core-style>
-    <script>
-      document._currentScript.ownerDocument.getElementById('x-test').myColor = 'orange';
-    </script>
-
-Finally, to facilitate sharing data between `core-style` elements, all
-`core-style` elements have a `g` property which is set to the global 
-`CoreStyle.g`. Here's an example:
-
-    <core-style id="x-test">
-      :host {
-        background-color: {{g.myColor}};
-      }
-    </core-style>
-    <script>
-      CoreStyle.g.myColor = 'tomato';
-    </script>
-
-Finally, one `core-style` can be nested inside another. The `core-style`
-element has a `list` property which is a map of all the `core-style` producers.
-A `core-style` producer's content is available via its `cssText` property. 
-Putting this together:
-
-    <core-style id="common">
-      :host {
-        font-family: sans-serif;
-      }
-    </core-style>
-
-    <core-style id="x-test">
-      {{list.common.cssText}}
-
-      :host {
-        background-color: {{g.myColor}};
-      }
-    </core-style>
-
-
-@group Polymer Core Elements
-@element core-style
-@homepage github.io
--->
-
-<link rel="import" href="../polymer/polymer.html">
-
-<polymer-element name="core-style" hidden>
-<script>
-(function() {
-
-window.CoreStyle = window.CoreStyle || {
-  g: {},
-  list: {},
-  refMap: {}
-};
-
-Polymer('core-style', {
-  /**
-   * The `id` property should be set if the `core-style` is a producer
-   * of styles. In this case, the `core-style` should have text content
-   * that is cssText.
-   *
-   * @attribute id
-   * @type string
-   * @default ''
-   */
-
-
-  publish: {
-    /**
-     * The `ref` property should be set if the `core-style` element is a 
-     * consumer of styles. Set it to the `id` of the desired `core-style`
-     * element.
-     *
-     * @attribute ref
-     * @type string
-     * @default ''
-     */
-    ref: ''
-  },
-
-  // static
-  g: CoreStyle.g,
-  refMap: CoreStyle.refMap,
-
-  /**
-   * The `list` is a map of all `core-style` producers stored by `id`. It 
-   * should be considered readonly. It's useful for nesting one `core-style`
-   * inside another.
-   *
-   * @attribute list
-   * @type object (readonly)
-   * @default {map of all `core-style` producers}
-   */
-  list: CoreStyle.list,
-
-  // if we have an id, we provide style
-  // if we have a ref, we consume/require style
-  ready: function() {
-    if (this.id) {
-      this.provide();
-    } else {
-      this.registerRef(this.ref);
-      if (!window.ShadowDOMPolyfill) {
-        this.require();
-      }  
-    }
-  },
-
-  // can't shim until attached if using SD polyfill because need to find host
-  attached: function() {
-    if (!this.id && window.ShadowDOMPolyfill) {
-      this.require();
-    }
-  },
-
-  /****** producer stuff *******/
-
-  provide: function() {
-    this.register();
-    // we want to do this asap, especially so we can do so before definitions
-    // that use this core-style are registered.
-    if (this.textContent) {
-      this._completeProvide();
-    } else {
-      this.async(this._completeProvide);
-    }
-  },
-
-  register: function() {
-    var i = this.list[this.id];
-    if (i) {
-      if (!Array.isArray(i)) {
-        this.list[this.id] = [i];
-      }
-      this.list[this.id].push(this);
-    } else {
-      this.list[this.id] = this;  
-    }
-  },
-
-  // stamp into a shadowRoot so we can monitor dom of the bound output
-  _completeProvide: function() {
-    this.createShadowRoot();
-    this.domObserver = new MutationObserver(this.domModified.bind(this))
-        .observe(this.shadowRoot, {subtree: true, 
-        characterData: true, childList: true});
-    this.provideContent();
-  },
-
-  provideContent: function() {
-    this.ensureTemplate();
-    this.shadowRoot.textContent = '';
-    this.shadowRoot.appendChild(this.instanceTemplate(this.template));
-    this.cssText = this.shadowRoot.textContent;
-  },
-
-  ensureTemplate: function() {
-    if (!this.template) {
-      this.template = this.querySelector('template:not([repeat]):not([bind])');
-      // move content into the template
-      if (!this.template) {
-        this.template = document.createElement('template');
-        var n = this.firstChild;
-        while (n) {
-          this.template.content.appendChild(n.cloneNode(true));
-          n = n.nextSibling;
-        }
-      }
-    }
-  },
-
-  domModified: function() {
-    this.cssText = this.shadowRoot.textContent;
-    this.notify();
-  },
-
-  // notify instances that reference this element
-  notify: function() {
-    var s$ = this.refMap[this.id];
-    if (s$) {
-      for (var i=0, s; (s=s$[i]); i++) {
-        s.require();
-      }
-    }
-  },
-
-  /****** consumer stuff *******/
-
-  registerRef: function(ref) {
-    //console.log('register', ref);
-    this.refMap[this.ref] = this.refMap[this.ref] || [];
-    this.refMap[this.ref].push(this);
-  },
-
-  applyRef: function(ref) {
-    this.ref = ref;
-    this.registerRef(this.ref);
-    this.require();
-  },
-
-  require: function() {
-    var cssText = this.cssTextForRef(this.ref);
-    //console.log('require', this.ref, cssText);
-    if (cssText) {
-      this.ensureStyleElement();
-      // do nothing if cssText has not changed
-      if (this.styleElement._cssText === cssText) {
-        return;
-      }
-      this.styleElement._cssText = cssText;
-      if (window.ShadowDOMPolyfill) {
-        this.styleElement.textContent = cssText;
-        cssText = Platform.ShadowCSS.shimStyle(this.styleElement,
-            this.getScopeSelector());
-      }
-      this.styleElement.textContent = cssText;
-    }
-  },
-
-  cssTextForRef: function(ref) {
-    var s$ = this.byId(ref);
-    var cssText = '';
-    if (s$) {
-      if (Array.isArray(s$)) {
-        var p = [];
-        for (var i=0, l=s$.length, s; (i<l) && (s=s$[i]); i++) {
-          p.push(s.cssText);
-        }
-        cssText = p.join('\n\n');
-      } else {
-        cssText = s$.cssText;
-      }
-    }
-    if (s$ && !cssText) {
-      console.warn('No styles provided for ref:', ref);
-    }
-    return cssText;
-  },
-
-  byId: function(id) {
-    return this.list[id];
-  },
-
-  ensureStyleElement: function() {
-    if (!this.styleElement) {
-      this.styleElement = window.ShadowDOMPolyfill ? 
-          this.makeShimStyle() :
-          this.makeRootStyle();
-    }
-    if (!this.styleElement) {
-      console.warn(this.localName, 'could not setup style.');
-    }
-  },
-
-  makeRootStyle: function() {
-    var style = document.createElement('style');
-    this.appendChild(style);
-    return style;
-  },
-
-  makeShimStyle: function() {
-    var host = this.findHost(this);
-    if (host) {
-      var name = host.localName;
-      var style = document.querySelector('style[' + name + '=' + this.ref +']');
-      if (!style) {
-        style = document.createElement('style');
-        style.setAttribute(name, this.ref);
-        document.head.appendChild(style);
-      }
-      return style;
-    }
-  },
-
-  getScopeSelector: function() {
-    if (!this._scopeSelector) {
-      var selector = '', host = this.findHost(this);
-      if (host) {
-        var typeExtension = host.hasAttribute('is');
-        var name = typeExtension ? host.getAttribute('is') : host.localName;
-        selector = Platform.ShadowCSS.makeScopeSelector(name, 
-            typeExtension);
-      }
-      this._scopeSelector = selector;
-    }
-    return this._scopeSelector;
-  },
-
-  findHost: function(node) {
-    while (node.parentNode) {
-      node = node.parentNode;
-    }
-    return node.host || wrap(document.documentElement);
-  },
-
-  /* filters! */
-  // TODO(dfreedm): add more filters!
-
-  cycle: function(rgb, amount) {
-    if (rgb.match('#')) {
-      var o = this.hexToRgb(rgb);
-      if (!o) {
-        return rgb;
-      }
-      rgb = 'rgb(' + o.r + ',' + o.b + ',' + o.g + ')';
-    }
-
-    function cycleChannel(v) {
-      return Math.abs((Number(v) - amount) % 255);
-    }
-
-    return rgb.replace(/rgb\(([^,]*),([^,]*),([^,]*)\)/, function(m, a, b, c) {
-      return 'rgb(' + cycleChannel(a) + ',' + cycleChannel(b) + ', ' 
-          + cycleChannel(c) + ')';
-    });
-  },
-
-  hexToRgb: function(hex) {
-    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
-    return result ? {
-        r: parseInt(result[1], 16),
-        g: parseInt(result[2], 16),
-        b: parseInt(result[3], 16)
-    } : null;
-  }
-
-});
-
-
-})();
-</script>
-</polymer-element>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<!--
+
+The `core-style` element helps manage styling inside other elements and can 
+be used to make themes. The `core-style` element can be either a producer 
+or consumer of styling. If it has its `id` property set, it's a producer. 
+Elements that are producers should include css styling as their text content.
+If a `core-style` has its `ref` property set, it's a consumer. A `core-style`
+typically sets its `ref` property to the value of the `id` property of the
+`core-style` it wants to use. This allows a single producer to be used in 
+multiple places, for example, in many different elements.
+
+It's common to place `core-style` producer elements inside HTMLImports.
+Remote stylesheets should be included this way, the &#64;import css mechanism is
+not currently supported.
+
+Here's a basic example:
+
+    <polymer-element name="x-test" noscript>
+      <template>
+        <core-style ref="x-test"></core-style>
+        <content></content>
+      </template>
+    </polymer-element>
+
+The `x-test` element above will be styled by any `core-style` elements that have
+`id` set to `x-test`. These `core-style` producers are separate from the element
+definition, allowing a user of the element to style it independent of the author's 
+styling. For example:
+
+    <core-style id="x-test">
+      :host {
+        backgound-color: steelblue;
+      }
+    </core-style>
+
+The content of the `x-test` `core-style` producer gets included inside the
+shadowRoot of the `x-test` element. If the content of the `x-test` producer
+`core-style` changes, all consumers of it are automatically kept in sync. This
+allows updating styling on the fly.
+
+The `core-style` element also supports bindings and it is the producer 
+`core-style` element is the model for its content. Here's an example:
+
+    <core-style id="x-test">
+      :host {
+        background-color: {{myColor}};
+      }
+    </core-style>
+    <script>
+      document._currentScript.ownerDocument.getElementById('x-test').myColor = 'orange';
+    </script>
+
+Finally, to facilitate sharing data between `core-style` elements, all
+`core-style` elements have a `g` property which is set to the global 
+`CoreStyle.g`. Here's an example:
+
+    <core-style id="x-test">
+      :host {
+        background-color: {{g.myColor}};
+      }
+    </core-style>
+    <script>
+      CoreStyle.g.myColor = 'tomato';
+    </script>
+
+Finally, one `core-style` can be nested inside another. The `core-style`
+element has a `list` property which is a map of all the `core-style` producers.
+A `core-style` producer's content is available via its `cssText` property. 
+Putting this together:
+
+    <core-style id="common">
+      :host {
+        font-family: sans-serif;
+      }
+    </core-style>
+
+    <core-style id="x-test">
+      {{list.common.cssText}}
+
+      :host {
+        background-color: {{g.myColor}};
+      }
+    </core-style>
+
+
+@group Polymer Core Elements
+@element core-style
+@homepage github.io
+-->
+
+<link rel="import" href="../polymer/polymer.html">
+
+<polymer-element name="core-style" hidden>
+<script>
+(function() {
+
+window.CoreStyle = window.CoreStyle || {
+  g: {},
+  list: {},
+  refMap: {}
+};
+
+Polymer('core-style', {
+  /**
+   * The `id` property should be set if the `core-style` is a producer
+   * of styles. In this case, the `core-style` should have text content
+   * that is cssText.
+   *
+   * @attribute id
+   * @type string
+   * @default ''
+   */
+
+
+  publish: {
+    /**
+     * The `ref` property should be set if the `core-style` element is a 
+     * consumer of styles. Set it to the `id` of the desired `core-style`
+     * element.
+     *
+     * @attribute ref
+     * @type string
+     * @default ''
+     */
+    ref: ''
+  },
+
+  // static
+  g: CoreStyle.g,
+  refMap: CoreStyle.refMap,
+
+  /**
+   * The `list` is a map of all `core-style` producers stored by `id`. It 
+   * should be considered readonly. It's useful for nesting one `core-style`
+   * inside another.
+   *
+   * @attribute list
+   * @type object (readonly)
+   * @default {map of all `core-style` producers}
+   */
+  list: CoreStyle.list,
+
+  // if we have an id, we provide style
+  // if we have a ref, we consume/require style
+  ready: function() {
+    if (this.id) {
+      this.provide();
+    } else {
+      this.registerRef(this.ref);
+      if (!window.ShadowDOMPolyfill) {
+        this.require();
+      }  
+    }
+  },
+
+  // can't shim until attached if using SD polyfill because need to find host
+  attached: function() {
+    if (!this.id && window.ShadowDOMPolyfill) {
+      this.require();
+    }
+  },
+
+  /****** producer stuff *******/
+
+  provide: function() {
+    this.register();
+    // we want to do this asap, especially so we can do so before definitions
+    // that use this core-style are registered.
+    if (this.textContent) {
+      this._completeProvide();
+    } else {
+      this.async(this._completeProvide);
+    }
+  },
+
+  register: function() {
+    var i = this.list[this.id];
+    if (i) {
+      if (!Array.isArray(i)) {
+        this.list[this.id] = [i];
+      }
+      this.list[this.id].push(this);
+    } else {
+      this.list[this.id] = this;  
+    }
+  },
+
+  // stamp into a shadowRoot so we can monitor dom of the bound output
+  _completeProvide: function() {
+    this.createShadowRoot();
+    this.domObserver = new MutationObserver(this.domModified.bind(this))
+        .observe(this.shadowRoot, {subtree: true, 
+        characterData: true, childList: true});
+    this.provideContent();
+  },
+
+  provideContent: function() {
+    this.ensureTemplate();
+    this.shadowRoot.textContent = '';
+    this.shadowRoot.appendChild(this.instanceTemplate(this.template));
+    this.cssText = this.shadowRoot.textContent;
+  },
+
+  ensureTemplate: function() {
+    if (!this.template) {
+      this.template = this.querySelector('template:not([repeat]):not([bind])');
+      // move content into the template
+      if (!this.template) {
+        this.template = document.createElement('template');
+        var n = this.firstChild;
+        while (n) {
+          this.template.content.appendChild(n.cloneNode(true));
+          n = n.nextSibling;
+        }
+      }
+    }
+  },
+
+  domModified: function() {
+    this.cssText = this.shadowRoot.textContent;
+    this.notify();
+  },
+
+  // notify instances that reference this element
+  notify: function() {
+    var s$ = this.refMap[this.id];
+    if (s$) {
+      for (var i=0, s; (s=s$[i]); i++) {
+        s.require();
+      }
+    }
+  },
+
+  /****** consumer stuff *******/
+
+  registerRef: function(ref) {
+    //console.log('register', ref);
+    this.refMap[this.ref] = this.refMap[this.ref] || [];
+    this.refMap[this.ref].push(this);
+  },
+
+  applyRef: function(ref) {
+    this.ref = ref;
+    this.registerRef(this.ref);
+    this.require();
+  },
+
+  require: function() {
+    var cssText = this.cssTextForRef(this.ref);
+    //console.log('require', this.ref, cssText);
+    if (cssText) {
+      this.ensureStyleElement();
+      // do nothing if cssText has not changed
+      if (this.styleElement._cssText === cssText) {
+        return;
+      }
+      this.styleElement._cssText = cssText;
+      if (window.ShadowDOMPolyfill) {
+        this.styleElement.textContent = cssText;
+        cssText = Platform.ShadowCSS.shimStyle(this.styleElement,
+            this.getScopeSelector());
+      }
+      this.styleElement.textContent = cssText;
+    }
+  },
+
+  cssTextForRef: function(ref) {
+    var s$ = this.byId(ref);
+    var cssText = '';
+    if (s$) {
+      if (Array.isArray(s$)) {
+        var p = [];
+        for (var i=0, l=s$.length, s; (i<l) && (s=s$[i]); i++) {
+          p.push(s.cssText);
+        }
+        cssText = p.join('\n\n');
+      } else {
+        cssText = s$.cssText;
+      }
+    }
+    if (s$ && !cssText) {
+      console.warn('No styles provided for ref:', ref);
+    }
+    return cssText;
+  },
+
+  byId: function(id) {
+    return this.list[id];
+  },
+
+  ensureStyleElement: function() {
+    if (!this.styleElement) {
+      this.styleElement = window.ShadowDOMPolyfill ? 
+          this.makeShimStyle() :
+          this.makeRootStyle();
+    }
+    if (!this.styleElement) {
+      console.warn(this.localName, 'could not setup style.');
+    }
+  },
+
+  makeRootStyle: function() {
+    var style = document.createElement('style');
+    this.appendChild(style);
+    return style;
+  },
+
+  makeShimStyle: function() {
+    var host = this.findHost(this);
+    if (host) {
+      var name = host.localName;
+      var style = document.querySelector('style[' + name + '=' + this.ref +']');
+      if (!style) {
+        style = document.createElement('style');
+        style.setAttribute(name, this.ref);
+        document.head.appendChild(style);
+      }
+      return style;
+    }
+  },
+
+  getScopeSelector: function() {
+    if (!this._scopeSelector) {
+      var selector = '', host = this.findHost(this);
+      if (host) {
+        var typeExtension = host.hasAttribute('is');
+        var name = typeExtension ? host.getAttribute('is') : host.localName;
+        selector = Platform.ShadowCSS.makeScopeSelector(name, 
+            typeExtension);
+      }
+      this._scopeSelector = selector;
+    }
+    return this._scopeSelector;
+  },
+
+  findHost: function(node) {
+    while (node.parentNode) {
+      node = node.parentNode;
+    }
+    return node.host || wrap(document.documentElement);
+  },
+
+  /* filters! */
+  // TODO(user): add more filters!
+
+  cycle: function(rgb, amount) {
+    if (rgb.match('#')) {
+      var o = this.hexToRgb(rgb);
+      if (!o) {
+        return rgb;
+      }
+      rgb = 'rgb(' + o.r + ',' + o.b + ',' + o.g + ')';
+    }
+
+    function cycleChannel(v) {
+      return Math.abs((Number(v) - amount) % 255);
+    }
+
+    return rgb.replace(/rgb\(([^,]*),([^,]*),([^,]*)\)/, function(m, a, b, c) {
+      return 'rgb(' + cycleChannel(a) + ',' + cycleChannel(b) + ', ' 
+          + cycleChannel(c) + ')';
+    });
+  },
+
+  hexToRgb: function(hex) {
+    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
+    return result ? {
+        r: parseInt(result[1], 16),
+        g: parseInt(result[2], 16),
+        b: parseInt(result[3], 16)
+    } : null;
+  }
+
+});
+
+
+})();
+</script>
+</polymer-element>
diff --git a/bower_components/core-toolbar/README.md b/bower_components/core-toolbar/README.md
index f1600d83f..a6bdcab40 100644
--- a/bower_components/core-toolbar/README.md
+++ b/bower_components/core-toolbar/README.md
@@ -1,4 +1,4 @@
-core-toolbar
-============
-
-See the [component page](http://polymer-project.org/docs/elements/core-elements.html#core-toolbar) for more information.
+core-toolbar
+============
+
+See the [component page](http://polymer-project.org/docs/elements/core-elements.html#core-toolbar) for more information.
diff --git a/bower_components/core-tooltip/metadata.html b/bower_components/core-tooltip/metadata.html
index ae4088bb6..91574f05a 100644
--- a/bower_components/core-tooltip/metadata.html
+++ b/bower_components/core-tooltip/metadata.html
@@ -7,12 +7,12 @@
     Code distributed by Google as part of the polymer project is also
     subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 -->
-<x-meta id="core-tooltip" label="Tooltip" group="Core">
-  <template>
-    <core-tooltip></core-tooltip>
-  </template>
-  <template id="imports">
-    <link rel="import" href="core-tooltip.html">
-  </template>
-</x-meta>
-
+<x-meta id="core-tooltip" label="Tooltip" group="Core">
+  <template>
+    <core-tooltip></core-tooltip>
+  </template>
+  <template id="imports">
+    <link rel="import" href="core-tooltip.html">
+  </template>
+</x-meta>
+
diff --git a/bower_components/google-code-prettify/README-zh-Hans.html b/bower_components/google-code-prettify/README-zh-Hans.html
index 69bf7aedb..b92e3c0fb 100644
--- a/bower_components/google-code-prettify/README-zh-Hans.html
+++ b/bower_components/google-code-prettify/README-zh-Hans.html
@@ -58,7 +58,7 @@ <h2>使用方法<br></h2>
 }</pre>
     </table>
 
-    
+    
     <h2>常见问题</h2>
     <h3 id="langs">它是为什么语言工作的?</h3>
     <p><tt>prettify.js中的注释是权威的,但是它的语法分析程序可以在很多语言中使用</tt>,包括 C ,
diff --git a/bower_components/google-code-prettify/styles/desert.css b/bower_components/google-code-prettify/styles/desert.css
index 3723668d7..b2b73cd86 100644
--- a/bower_components/google-code-prettify/styles/desert.css
+++ b/bower_components/google-code-prettify/styles/desert.css
@@ -1,34 +1,34 @@
-/* desert scheme ported from vim to google prettify */
-pre.prettyprint { display: block; background-color: #333 }
-pre .nocode { background-color: none; color: #000 }
-pre .str { color: #ffa0a0 } /* string  - pink */
-pre .kwd { color: #f0e68c; font-weight: bold }
-pre .com { color: #87ceeb } /* comment - skyblue */
-pre .typ { color: #98fb98 } /* type    - lightgreen */
-pre .lit { color: #cd5c5c } /* literal - darkred */
-pre .pun { color: #fff }    /* punctuation */
-pre .pln { color: #fff }    /* plaintext */
-pre .tag { color: #f0e68c; font-weight: bold } /* html/xml tag    - lightyellow */
-pre .atn { color: #bdb76b; font-weight: bold } /* attribute name  - khaki */
-pre .atv { color: #ffa0a0 } /* attribute value - pink */
-pre .dec { color: #98fb98 } /* decimal         - lightgreen */
-
-/* Specify class=linenums on a pre to get line numbering */
-ol.linenums { margin-top: 0; margin-bottom: 0; color: #AEAEAE } /* IE indents via margin-left */
-li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8 { list-style-type: none }
-/* Alternate shading for lines */
-li.L1,li.L3,li.L5,li.L7,li.L9 { }
-
-@media print {
-  pre.prettyprint { background-color: none }
-  pre .str, code .str { color: #060 }
-  pre .kwd, code .kwd { color: #006; font-weight: bold }
-  pre .com, code .com { color: #600; font-style: italic }
-  pre .typ, code .typ { color: #404; font-weight: bold }
-  pre .lit, code .lit { color: #044 }
-  pre .pun, code .pun { color: #440 }
-  pre .pln, code .pln { color: #000 }
-  pre .tag, code .tag { color: #006; font-weight: bold }
-  pre .atn, code .atn { color: #404 }
-  pre .atv, code .atv { color: #060 }
-}
+/* desert scheme ported from vim to google prettify */
+pre.prettyprint { display: block; background-color: #333 }
+pre .nocode { background-color: none; color: #000 }
+pre .str { color: #ffa0a0 } /* string  - pink */
+pre .kwd { color: #f0e68c; font-weight: bold }
+pre .com { color: #87ceeb } /* comment - skyblue */
+pre .typ { color: #98fb98 } /* type    - lightgreen */
+pre .lit { color: #cd5c5c } /* literal - darkred */
+pre .pun { color: #fff }    /* punctuation */
+pre .pln { color: #fff }    /* plaintext */
+pre .tag { color: #f0e68c; font-weight: bold } /* html/xml tag    - lightyellow */
+pre .atn { color: #bdb76b; font-weight: bold } /* attribute name  - khaki */
+pre .atv { color: #ffa0a0 } /* attribute value - pink */
+pre .dec { color: #98fb98 } /* decimal         - lightgreen */
+
+/* Specify class=linenums on a pre to get line numbering */
+ol.linenums { margin-top: 0; margin-bottom: 0; color: #AEAEAE } /* IE indents via margin-left */
+li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8 { list-style-type: none }
+/* Alternate shading for lines */
+li.L1,li.L3,li.L5,li.L7,li.L9 { }
+
+@media print {
+  pre.prettyprint { background-color: none }
+  pre .str, code .str { color: #060 }
+  pre .kwd, code .kwd { color: #006; font-weight: bold }
+  pre .com, code .com { color: #600; font-style: italic }
+  pre .typ, code .typ { color: #404; font-weight: bold }
+  pre .lit, code .lit { color: #044 }
+  pre .pun, code .pun { color: #440 }
+  pre .pln, code .pln { color: #000 }
+  pre .tag, code .tag { color: #006; font-weight: bold }
+  pre .atn, code .atn { color: #404 }
+  pre .atv, code .atv { color: #060 }
+}
diff --git a/bower_components/google-code-prettify/styles/sons-of-obsidian.css b/bower_components/google-code-prettify/styles/sons-of-obsidian.css
index 7d24f3b47..8553db65d 100644
--- a/bower_components/google-code-prettify/styles/sons-of-obsidian.css
+++ b/bower_components/google-code-prettify/styles/sons-of-obsidian.css
@@ -1,118 +1,118 @@
-/*
- * Derived from einaros's Sons of Obsidian theme at
- * http://studiostyl.es/schemes/son-of-obsidian by
- * Alex Ford of CodeTunnel:
- * http://CodeTunnel.com/blog/post/71/google-code-prettify-obsidian-theme
- */
-
-.str
-{
-    color: #EC7600;
-}
-.kwd
-{
-    color: #93C763;
-}
-.com
-{
-    color: #66747B;
-}
-.typ
-{
-    color: #678CB1;
-}
-.lit
-{
-    color: #FACD22;
-}
-.pun
-{
-    color: #F1F2F3;
-}
-.pln
-{
-    color: #F1F2F3;
-}
-.tag
-{
-    color: #8AC763;
-}
-.atn
-{
-    color: #E0E2E4;
-}
-.atv
-{
-    color: #EC7600;
-}
-.dec
-{
-    color: purple;
-}
-pre.prettyprint
-{
-    border: 0px solid #888;
-}
-ol.linenums
-{
-    margin-top: 0;
-    margin-bottom: 0;
-}
-.prettyprint {
-    background: #000;
-}
-li.L0, li.L1, li.L2, li.L3, li.L4, li.L5, li.L6, li.L7, li.L8, li.L9
-{
-    color: #555;
-    list-style-type: decimal;
-}
-li.L1, li.L3, li.L5, li.L7, li.L9 {
-    background: #111;
-}
-@media print
-{
-    .str
-    {
-        color: #060;
-    }
-    .kwd
-    {
-        color: #006;
-        font-weight: bold;
-    }
-    .com
-    {
-        color: #600;
-        font-style: italic;
-    }
-    .typ
-    {
-        color: #404;
-        font-weight: bold;
-    }
-    .lit
-    {
-        color: #044;
-    }
-    .pun
-    {
-        color: #440;
-    }
-    .pln
-    {
-        color: #000;
-    }
-    .tag
-    {
-        color: #006;
-        font-weight: bold;
-    }
-    .atn
-    {
-        color: #404;
-    }
-    .atv
-    {
-        color: #060;
-    }
-}
+/*
+ * Derived from einaros's Sons of Obsidian theme at
+ * http://studiostyl.es/schemes/son-of-obsidian by
+ * Alex Ford of CodeTunnel:
+ * http://CodeTunnel.com/blog/post/71/google-code-prettify-obsidian-theme
+ */
+
+.str
+{
+    color: #EC7600;
+}
+.kwd
+{
+    color: #93C763;
+}
+.com
+{
+    color: #66747B;
+}
+.typ
+{
+    color: #678CB1;
+}
+.lit
+{
+    color: #FACD22;
+}
+.pun
+{
+    color: #F1F2F3;
+}
+.pln
+{
+    color: #F1F2F3;
+}
+.tag
+{
+    color: #8AC763;
+}
+.atn
+{
+    color: #E0E2E4;
+}
+.atv
+{
+    color: #EC7600;
+}
+.dec
+{
+    color: purple;
+}
+pre.prettyprint
+{
+    border: 0px solid #888;
+}
+ol.linenums
+{
+    margin-top: 0;
+    margin-bottom: 0;
+}
+.prettyprint {
+    background: #000;
+}
+li.L0, li.L1, li.L2, li.L3, li.L4, li.L5, li.L6, li.L7, li.L8, li.L9
+{
+    color: #555;
+    list-style-type: decimal;
+}
+li.L1, li.L3, li.L5, li.L7, li.L9 {
+    background: #111;
+}
+@media print
+{
+    .str
+    {
+        color: #060;
+    }
+    .kwd
+    {
+        color: #006;
+        font-weight: bold;
+    }
+    .com
+    {
+        color: #600;
+        font-style: italic;
+    }
+    .typ
+    {
+        color: #404;
+        font-weight: bold;
+    }
+    .lit
+    {
+        color: #044;
+    }
+    .pun
+    {
+        color: #440;
+    }
+    .pln
+    {
+        color: #000;
+    }
+    .tag
+    {
+        color: #006;
+        font-weight: bold;
+    }
+    .atn
+    {
+        color: #404;
+    }
+    .atv
+    {
+        color: #060;
+    }
+}
diff --git a/bower_components/marked-element/demo.html b/bower_components/marked-element/demo.html
index 5f6ed9903..054d9e4f5 100644
--- a/bower_components/marked-element/demo.html
+++ b/bower_components/marked-element/demo.html
@@ -29,12 +29,12 @@ <h3>Inline Text</h3>
 
 Example:
 
-    <div>
-      <polymer-overlay></polymer-overlay>
-      <h2>Dialog</h2>
-      <input placeholder="say something..." autofocus>
-      <div>I agree with this wholeheartedly.</div>
-      <button overlay-toggle>OK</button>
+    <div>
+      <polymer-overlay></polymer-overlay>
+      <h2>Dialog</h2>
+      <input placeholder="say something..." autofocus>
+      <div>I agree with this wholeheartedly.</div>
+      <button overlay-toggle>OK</button>
     </div>
 
 _Nifty_ features.
diff --git a/bower_components/marked-element/marked-import.html b/bower_components/marked-element/marked-import.html
index 762111279..22a2e9a82 100644
--- a/bower_components/marked-element/marked-import.html
+++ b/bower_components/marked-element/marked-import.html
@@ -7,4 +7,4 @@
     Code distributed by Google as part of the polymer project is also
     subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 -->
-<script src='../marked/lib/marked.js'></script>
+<script src='../marked/lib/marked.js'></script>
diff --git a/bower_components/paper-checkbox/paper-checkbox.css b/bower_components/paper-checkbox/paper-checkbox.css
index e01c1ef38..cce7dcdb0 100644
--- a/bower_components/paper-checkbox/paper-checkbox.css
+++ b/bower_components/paper-checkbox/paper-checkbox.css
@@ -1,14 +1,14 @@
-/*
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
+/*
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
 
 :host {
-  display: inline-block;
+  display: inline-block;
   white-space: nowrap;
 }
 
@@ -19,9 +19,9 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
 #checkboxContainer {
   position: relative;
   width: 18px;
-  height: 18px;
-  cursor: pointer;
-  -webkit-transform: translateZ(0);
+  height: 18px;
+  cursor: pointer;
+  -webkit-transform: translateZ(0);
   transform: translateZ(0);
 }
 
@@ -35,12 +35,12 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
   top: -15px;
   left: -15px;
   width: 48px;
-  height: 48px;
+  height: 48px;
   color: #5a5f5a;
-}
-
-#ink[checked] {
-  color: #0f9d58;
+}
+
+#ink[checked] {
+  color: #0f9d58;
 }
 
 #checkbox {
@@ -50,13 +50,13 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
   left: 0px; 
   width: 18px;
   height: 18px;
-  border: solid 2px;
-  border-color: #5a5a5a;
-  pointer-events: none;
-}
-
+  border: solid 2px;
+  border-color: #5a5a5a;
+  pointer-events: none;
+}
+
 /* checkbox checked animations */
-#checkbox.checked.box {
+#checkbox.checked.box {
   border: solid 2px;
   -webkit-animation: box-shrink 140ms ease-out forwards;
   animation: box-shrink 140ms ease-out forwards;
@@ -98,7 +98,7 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
 
 #checkbox.checked.checkmark {
   border-left: none;
-  border-top: none;
+  border-top: none;
   -webkit-animation: checkmark-expand 140ms ease-out forwards;
   animation: checkmark-expand 140ms ease-out forwards;
 }
@@ -136,7 +136,7 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
     left: 6px; 
     width: 10px;
     height: 21px;
-    border-right-width: 2px;
+    border-right-width: 2px;
     border-bottom-width: 2px;
   }
 }
@@ -149,9 +149,9 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
   width: 10px;
   height: 21px;
   border-top: none;
-  border-left: none;
+  border-left: none;
   border-right-width: 2px;
-  border-bottom-width: 2px;
+  border-bottom-width: 2px;
   border-color: #0f9d58;
 }
 
@@ -171,7 +171,7 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
     left: 6px; 
     width: 10px;
     height: 21px;
-    border-right-width: 2px;
+    border-right-width: 2px;
     border-bottom-width: 2px;
   }
   100% {
@@ -188,7 +188,7 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
     left: 6px; 
     width: 10px;
     height: 21px;
-    border-right-width: 2px;
+    border-right-width: 2px;
     border-bottom-width: 2px;
   }
   100% {
@@ -241,23 +241,23 @@ subject to an additional IP rights grant found at http://polymer.github.io/PATEN
 /* label */
 #checkboxLabel {
   position: relative;
-  display: inline-block;
+  display: inline-block;
   vertical-align: middle;
-  padding-left: 8px;
-  white-space: normal;
+  padding-left: 8px;
+  white-space: normal;
   pointer-events: none;
 }
 
 #checkboxLabel[hidden] {
   display: none;
-}
-
-/* disabled state */
-:host([disabled]) {
-  pointer-events: none;
-}
-
-:host([disabled]) #checkbox {
-  opacity: 0.33;
-  border-color: #5a5a5a;
-}
+}
+
+/* disabled state */
+:host([disabled]) {
+  pointer-events: none;
+}
+
+:host([disabled]) #checkbox {
+  opacity: 0.33;
+  border-color: #5a5a5a;
+}
diff --git a/bower_components/paper-checkbox/paper-checkbox.html b/bower_components/paper-checkbox/paper-checkbox.html
index e3217106a..5a7f93c86 100644
--- a/bower_components/paper-checkbox/paper-checkbox.html
+++ b/bower_components/paper-checkbox/paper-checkbox.html
@@ -1,110 +1,110 @@
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-
-<!--
-`paper-checkbox` is a button that can be either checked or unchecked.  User
-can tap the checkbox to check or uncheck it.  Usually you use checkboxes
-to allow user to select multiple options from a set.  If you have a single
-ON/OFF option, avoid using a single checkbox and use `paper-toggle-button`
-instead.
-
-Example:
-
-    <paper-checkbox></paper-checkbox>
-
-    <paper-checkbox checked></paper-checkbox>
-    
-Styling checkbox:
-
-To change the ink color for checked state:
-
-    paper-checkbox::shadow #ink[checked] {
-      color: #4285f4;
-    }
-    
-To change the checkbox checked color:
-
-    paper-checkbox::shadow #checkbox.checked {
-      border-color: #4285f4;
-    }
-
-To change the ink color for unchecked state:
-
-    paper-checkbox::shadow #ink {
-      color: #b5b5b5;
-    }
-
-To change the checbox unchecked color:
-
-    paper-checkbox::shadow #checkbox {
-      border-color: #b5b5b5;
-    }
-
-@group Paper Elements
-@element paper-checkbox
-@extends paper-radio-button
-@homepage github.io
--->
-
-<link rel="import" href="../paper-radio-button/paper-radio-button.html">
-
-<polymer-element name="paper-checkbox" extends="paper-radio-button" role="checkbox">
-<template>
-
-  <link rel="stylesheet" href="paper-checkbox.css">
-
-  <div id="checkboxContainer" class="{{ {labeled: label} | tokenList }}" >
-  
-    <paper-ripple id="ink" class="circle recenteringTouch" checked?="{{!checked}}"></paper-ripple>
-     
-    <div id="checkbox" on-animationend="{{checkboxAnimationEnd}}" on-webkitAnimationEnd="{{checkboxAnimationEnd}}"></div>
-    
-  </div>
-  
-  <div id="checkboxLabel" hidden?="{{!label}}">{{label}}<content></content></div>
-
-</template>
-<script>
-
-  Polymer('paper-checkbox', {
-    
-    /**
-     * Fired when the checked state changes due to user interaction.
-     *
-     * @event change
-     */
-     
-    /**
-     * Fired when the checked state changes.
-     *
-     * @event core-change
-     */
-    
-    toggles: true,
-
-    checkedChanged: function() {
-      var cl = this.$.checkbox.classList;
-      cl.toggle('checked', this.checked);
-      cl.toggle('unchecked', !this.checked);
-      cl.toggle('checkmark', !this.checked);
-      cl.toggle('box', this.checked);
-      this.setAttribute('aria-checked', this.checked ? 'true': 'false');
-      this.fire('core-change');
-    },
-
-    checkboxAnimationEnd: function() {
-      var cl = this.$.checkbox.classList;
-      cl.toggle('checkmark', this.checked && !cl.contains('checkmark'));
-      cl.toggle('box', !this.checked && !cl.contains('box'));
-    }
-
-  });
-  
-</script>
-</polymer-element>
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+
+<!--
+`paper-checkbox` is a button that can be either checked or unchecked.  User
+can tap the checkbox to check or uncheck it.  Usually you use checkboxes
+to allow user to select multiple options from a set.  If you have a single
+ON/OFF option, avoid using a single checkbox and use `paper-toggle-button`
+instead.
+
+Example:
+
+    <paper-checkbox></paper-checkbox>
+
+    <paper-checkbox checked></paper-checkbox>
+    
+Styling checkbox:
+
+To change the ink color for checked state:
+
+    paper-checkbox::shadow #ink[checked] {
+      color: #4285f4;
+    }
+    
+To change the checkbox checked color:
+
+    paper-checkbox::shadow #checkbox.checked {
+      border-color: #4285f4;
+    }
+
+To change the ink color for unchecked state:
+
+    paper-checkbox::shadow #ink {
+      color: #b5b5b5;
+    }
+
+To change the checbox unchecked color:
+
+    paper-checkbox::shadow #checkbox {
+      border-color: #b5b5b5;
+    }
+
+@group Paper Elements
+@element paper-checkbox
+@extends paper-radio-button
+@homepage github.io
+-->
+
+<link rel="import" href="../paper-radio-button/paper-radio-button.html">
+
+<polymer-element name="paper-checkbox" extends="paper-radio-button" role="checkbox">
+<template>
+
+  <link rel="stylesheet" href="paper-checkbox.css">
+
+  <div id="checkboxContainer" class="{{ {labeled: label} | tokenList }}" >
+  
+    <paper-ripple id="ink" class="circle recenteringTouch" checked?="{{!checked}}"></paper-ripple>
+     
+    <div id="checkbox" on-animationend="{{checkboxAnimationEnd}}" on-webkitAnimationEnd="{{checkboxAnimationEnd}}"></div>
+    
+  </div>
+  
+  <div id="checkboxLabel" hidden?="{{!label}}">{{label}}<content></content></div>
+
+</template>
+<script>
+
+  Polymer('paper-checkbox', {
+    
+    /**
+     * Fired when the checked state changes due to user interaction.
+     *
+     * @event change
+     */
+     
+    /**
+     * Fired when the checked state changes.
+     *
+     * @event core-change
+     */
+    
+    toggles: true,
+
+    checkedChanged: function() {
+      var cl = this.$.checkbox.classList;
+      cl.toggle('checked', this.checked);
+      cl.toggle('unchecked', !this.checked);
+      cl.toggle('checkmark', !this.checked);
+      cl.toggle('box', this.checked);
+      this.setAttribute('aria-checked', this.checked ? 'true': 'false');
+      this.fire('core-change');
+    },
+
+    checkboxAnimationEnd: function() {
+      var cl = this.$.checkbox.classList;
+      cl.toggle('checkmark', this.checked && !cl.contains('checkmark'));
+      cl.toggle('box', !this.checked && !cl.contains('box'));
+    }
+
+  });
+  
+</script>
+</polymer-element>
diff --git a/bower_components/polymer-test-tools/mocha/media/logo.svg b/bower_components/polymer-test-tools/mocha/media/logo.svg
index 88d371308..8770b08d5 100644
--- a/bower_components/polymer-test-tools/mocha/media/logo.svg
+++ b/bower_components/polymer-test-tools/mocha/media/logo.svg
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Generator: Adobe Illustrator 17.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
-	 width="612px" height="792px" viewBox="0 0 612 792" enable-background="new 0 0 612 792" xml:space="preserve">
-<circle fill="#8A6343" cx="306" cy="396" r="306"/>
-<text transform="matrix(1 0 0 1 72.1431 424.7633)" fill="#FFFFFF" font-family="'HelveticaNeue'" font-size="153">mocha</text>
-</svg>
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 17.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 width="612px" height="792px" viewBox="0 0 612 792" enable-background="new 0 0 612 792" xml:space="preserve">
+<circle fill="#8A6343" cx="306" cy="396" r="306"/>
+<text transform="matrix(1 0 0 1 72.1431 424.7633)" fill="#FFFFFF" font-family="'HelveticaNeue'" font-size="153">mocha</text>
+</svg>
diff --git a/bower_components/polymer/layout.html b/bower_components/polymer/layout.html
index 55d4d2f0b..c9d8cba5d 100644
--- a/bower_components/polymer/layout.html
+++ b/bower_components/polymer/layout.html
@@ -1,286 +1,286 @@
-<!--
-Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
-This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
-The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
-The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
-Code distributed by Google as part of the polymer project is also
-subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
--->
-<style shim-shadowdom>
-/*******************************
-          Flex Layout
-*******************************/
-
-html /deep/ [layout][horizontal], html /deep/ [layout][vertical] {
-  display: -ms-flexbox;
-  display: -webkit-flex;
-  display: flex;
-}
-
-html /deep/ [layout][horizontal][inline], html /deep/ [layout][vertical][inline] {
-  display: -ms-inline-flexbox;
-  display: -webkit-inline-flex;
-  display: inline-flex;
-}
-
-html /deep/ [layout][horizontal] {
-  -ms-flex-direction: row;
-  -webkit-flex-direction: row;
-  flex-direction: row;
-}
-
-html /deep/ [layout][horizontal][reverse] {
-  -ms-flex-direction: row-reverse;
-  -webkit-flex-direction: row-reverse;
-  flex-direction: row-reverse;
-}
-
-html /deep/ [layout][vertical] {
-  -ms-flex-direction: column;
-  -webkit-flex-direction: column;
-  flex-direction: column;
-}
-
-html /deep/ [layout][vertical][reverse] {
-  -ms-flex-direction: column-reverse;
-  -webkit-flex-direction: column-reverse;
-  flex-direction: column-reverse;
-}
-
-html /deep/ [layout][wrap] {
-  -ms-flex-wrap: wrap;
-  -webkit-flex-wrap: wrap;
-  flex-wrap: wrap;
-}
-
-html /deep/ [layout][wrap-reverse] {
-  -ms-flex-wrap: wrap-reverse;
-  -webkit-flex-wrap: wrap-reverse;
-  flex-wrap: wrap-reverse;
-}
-
-html /deep/ [flex] {
-  -ms-flex: 1 1 0.000000001px;
-  -webkit-flex: 1;
-  flex: 1;
-  -webkit-flex-basis: 0.000000001px;
-  flex-basis: 0.000000001px;
-}
-
-html /deep/ [vertical][layout] > [flex][auto-vertical], html /deep/ [vertical][layout]::shadow [flex][auto-vertical] {
-  -ms-flex: 1 1 auto;
-  -webkit-flex-basis: auto;
-  flex-basis: auto;
-}
-
-html /deep/ [flex][auto] {
-  -ms-flex: 1 1 auto;
-  -webkit-flex-basis: auto;
-  flex-basis: auto;
-}
-
-html /deep/ [flex][none] {
-  -ms-flex: none;
-  -webkit-flex: none;
-  flex: none;
-}
-
-html /deep/ [flex][one] {
-  -ms-flex: 1;
-  -webkit-flex: 1;
-  flex: 1;
-}
-
-html /deep/ [flex][two] {
-  -ms-flex: 2;
-  -webkit-flex: 2;
-  flex: 2;
-}
-
-html /deep/ [flex][three] {
-  -ms-flex: 3;
-  -webkit-flex: 3;
-  flex: 3;
-}
-
-html /deep/ [flex][four] {
-  -ms-flex: 4;
-  -webkit-flex: 4;
-  flex: 4;
-}
-
-html /deep/ [flex][five] {
-  -ms-flex: 5;
-  -webkit-flex: 5;
-  flex: 5;
-}
-
-html /deep/ [flex][six] {
-  -ms-flex: 6;
-  -webkit-flex: 6;
-  flex: 6;
-}
-
-html /deep/ [flex][seven] {
-  -ms-flex: 7;
-  -webkit-flex: 7;
-  flex: 7;
-}
-
-html /deep/ [flex][eight] {
-  -ms-flex: 8;
-  -webkit-flex: 8;
-  flex: 8;
-}
-
-html /deep/ [flex][nine] {
-  -ms-flex: 9;
-  -webkit-flex: 9;
-  flex: 9;
-}
-
-html /deep/ [flex][ten] {
-  -ms-flex: 10;
-  -webkit-flex: 10;
-  flex: 10;
-}
-
-html /deep/ [flex][eleven] {
-  -ms-flex: 11;
-  -webkit-flex: 11;
-  flex: 11;
-}
-
-html /deep/ [flex][twelve] {
-  -ms-flex: 12;
-  -webkit-flex: 12;
-  flex: 12;
-}
-
-/* alignment in cross axis */
-
-html /deep/ [layout][start] {
-  -ms-flex-align: start;
-  -webkit-align-items: flex-start;
-  align-items: flex-start;
-}
-
-html /deep/ [layout][center], html /deep/ [layout][center-center] {
-  -ms-flex-align: center;
-  -webkit-align-items: center;
-  align-items: center;
-}
-
-html /deep/ [layout][end] {
-  -ms-flex-align: end;
-  -webkit-align-items: flex-end;
-  align-items: flex-end;
-}
-
-/* alignment in main axis */
-
-html /deep/ [layout][start-justified] {
-  -ms-flex-pack: start;
-  -webkit-justify-content: flex-start;
-  justify-content: flex-start;
-}
-
-html /deep/ [layout][center-justified], html /deep/ [layout][center-center] {
-  -ms-flex-pack: center;
-  -webkit-justify-content: center;
-  justify-content: center;
-}
-
-html /deep/ [layout][end-justified] {
-  -ms-flex-pack: end;
-  -webkit-justify-content: flex-end;
-  justify-content: flex-end;
-}
-
-html /deep/ [layout][around-justified] {
-  -ms-flex-pack: distribute;
-  -webkit-justify-content: space-around;
-  justify-content: space-around;
-}
-
-html /deep/ [layout][justified] {
-  -ms-flex-pack: justify;
-  -webkit-justify-content: space-between;
-  justify-content: space-between;
-}
-
-/* self alignment */
-
-html /deep/ [self-start] {
-  -ms-align-self: flex-start;
-  -webkit-align-self: flex-start;
-  align-self: flex-start;
-}
-
-html /deep/ [self-center] {
-  -ms-align-self: center;
-  -webkit-align-self: center;
-  align-self: center;
-}
-
-html /deep/ [self-end] {
-  -ms-align-self: flex-end;
-  -webkit-align-self: flex-end;
-  align-self: flex-end;
-}
-
-html /deep/ [self-stretch] {
-  -ms-align-self: stretch;
-  -webkit-align-self: stretch;
-  align-self: stretch;
-}
-
-/*******************************
-          Other Layout
-*******************************/
-
-html /deep/ [block] {
-  display: block;
-}
-
-/* ie support for hidden */
-html /deep/ [hidden] {
-  display: none !important;
-}
-
-html /deep/ [relative] {
-  position: relative;
-}
-
-html /deep/ [fit] {
-  position: absolute;
-  top: 0;
-  right: 0;
-  bottom: 0;
-  left: 0;
-}
-
-body[fullbleed] {
-  margin: 0;
-  height: 100vh;
-}
-
-/*******************************
-            Other
-*******************************/
-
-html /deep/ [segment], html /deep/ segment {
-  display: block;
-  position: relative;
-  -webkit-box-sizing: border-box;
-  -ms-box-sizing: border-box;
-  box-sizing: border-box;
-  margin: 1em 0.5em;
-  padding: 1em;
-  background-color: white;
-  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);
-  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);
-  border-radius: 5px 5px 5px 5px;
-}
-
+<!--
+Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
+This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
+The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
+The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
+Code distributed by Google as part of the polymer project is also
+subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
+-->
+<style shim-shadowdom>
+/*******************************
+          Flex Layout
+*******************************/
+
+html /deep/ [layout][horizontal], html /deep/ [layout][vertical] {
+  display: -ms-flexbox;
+  display: -webkit-flex;
+  display: flex;
+}
+
+html /deep/ [layout][horizontal][inline], html /deep/ [layout][vertical][inline] {
+  display: -ms-inline-flexbox;
+  display: -webkit-inline-flex;
+  display: inline-flex;
+}
+
+html /deep/ [layout][horizontal] {
+  -ms-flex-direction: row;
+  -webkit-flex-direction: row;
+  flex-direction: row;
+}
+
+html /deep/ [layout][horizontal][reverse] {
+  -ms-flex-direction: row-reverse;
+  -webkit-flex-direction: row-reverse;
+  flex-direction: row-reverse;
+}
+
+html /deep/ [layout][vertical] {
+  -ms-flex-direction: column;
+  -webkit-flex-direction: column;
+  flex-direction: column;
+}
+
+html /deep/ [layout][vertical][reverse] {
+  -ms-flex-direction: column-reverse;
+  -webkit-flex-direction: column-reverse;
+  flex-direction: column-reverse;
+}
+
+html /deep/ [layout][wrap] {
+  -ms-flex-wrap: wrap;
+  -webkit-flex-wrap: wrap;
+  flex-wrap: wrap;
+}
+
+html /deep/ [layout][wrap-reverse] {
+  -ms-flex-wrap: wrap-reverse;
+  -webkit-flex-wrap: wrap-reverse;
+  flex-wrap: wrap-reverse;
+}
+
+html /deep/ [flex] {
+  -ms-flex: 1 1 0.000000001px;
+  -webkit-flex: 1;
+  flex: 1;
+  -webkit-flex-basis: 0.000000001px;
+  flex-basis: 0.000000001px;
+}
+
+html /deep/ [vertical][layout] > [flex][auto-vertical], html /deep/ [vertical][layout]::shadow [flex][auto-vertical] {
+  -ms-flex: 1 1 auto;
+  -webkit-flex-basis: auto;
+  flex-basis: auto;
+}
+
+html /deep/ [flex][auto] {
+  -ms-flex: 1 1 auto;
+  -webkit-flex-basis: auto;
+  flex-basis: auto;
+}
+
+html /deep/ [flex][none] {
+  -ms-flex: none;
+  -webkit-flex: none;
+  flex: none;
+}
+
+html /deep/ [flex][one] {
+  -ms-flex: 1;
+  -webkit-flex: 1;
+  flex: 1;
+}
+
+html /deep/ [flex][two] {
+  -ms-flex: 2;
+  -webkit-flex: 2;
+  flex: 2;
+}
+
+html /deep/ [flex][three] {
+  -ms-flex: 3;
+  -webkit-flex: 3;
+  flex: 3;
+}
+
+html /deep/ [flex][four] {
+  -ms-flex: 4;
+  -webkit-flex: 4;
+  flex: 4;
+}
+
+html /deep/ [flex][five] {
+  -ms-flex: 5;
+  -webkit-flex: 5;
+  flex: 5;
+}
+
+html /deep/ [flex][six] {
+  -ms-flex: 6;
+  -webkit-flex: 6;
+  flex: 6;
+}
+
+html /deep/ [flex][seven] {
+  -ms-flex: 7;
+  -webkit-flex: 7;
+  flex: 7;
+}
+
+html /deep/ [flex][eight] {
+  -ms-flex: 8;
+  -webkit-flex: 8;
+  flex: 8;
+}
+
+html /deep/ [flex][nine] {
+  -ms-flex: 9;
+  -webkit-flex: 9;
+  flex: 9;
+}
+
+html /deep/ [flex][ten] {
+  -ms-flex: 10;
+  -webkit-flex: 10;
+  flex: 10;
+}
+
+html /deep/ [flex][eleven] {
+  -ms-flex: 11;
+  -webkit-flex: 11;
+  flex: 11;
+}
+
+html /deep/ [flex][twelve] {
+  -ms-flex: 12;
+  -webkit-flex: 12;
+  flex: 12;
+}
+
+/* alignment in cross axis */
+
+html /deep/ [layout][start] {
+  -ms-flex-align: start;
+  -webkit-align-items: flex-start;
+  align-items: flex-start;
+}
+
+html /deep/ [layout][center], html /deep/ [layout][center-center] {
+  -ms-flex-align: center;
+  -webkit-align-items: center;
+  align-items: center;
+}
+
+html /deep/ [layout][end] {
+  -ms-flex-align: end;
+  -webkit-align-items: flex-end;
+  align-items: flex-end;
+}
+
+/* alignment in main axis */
+
+html /deep/ [layout][start-justified] {
+  -ms-flex-pack: start;
+  -webkit-justify-content: flex-start;
+  justify-content: flex-start;
+}
+
+html /deep/ [layout][center-justified], html /deep/ [layout][center-center] {
+  -ms-flex-pack: center;
+  -webkit-justify-content: center;
+  justify-content: center;
+}
+
+html /deep/ [layout][end-justified] {
+  -ms-flex-pack: end;
+  -webkit-justify-content: flex-end;
+  justify-content: flex-end;
+}
+
+html /deep/ [layout][around-justified] {
+  -ms-flex-pack: distribute;
+  -webkit-justify-content: space-around;
+  justify-content: space-around;
+}
+
+html /deep/ [layout][justified] {
+  -ms-flex-pack: justify;
+  -webkit-justify-content: space-between;
+  justify-content: space-between;
+}
+
+/* self alignment */
+
+html /deep/ [self-start] {
+  -ms-align-self: flex-start;
+  -webkit-align-self: flex-start;
+  align-self: flex-start;
+}
+
+html /deep/ [self-center] {
+  -ms-align-self: center;
+  -webkit-align-self: center;
+  align-self: center;
+}
+
+html /deep/ [self-end] {
+  -ms-align-self: flex-end;
+  -webkit-align-self: flex-end;
+  align-self: flex-end;
+}
+
+html /deep/ [self-stretch] {
+  -ms-align-self: stretch;
+  -webkit-align-self: stretch;
+  align-self: stretch;
+}
+
+/*******************************
+          Other Layout
+*******************************/
+
+html /deep/ [block] {
+  display: block;
+}
+
+/* ie support for hidden */
+html /deep/ [hidden] {
+  display: none !important;
+}
+
+html /deep/ [relative] {
+  position: relative;
+}
+
+html /deep/ [fit] {
+  position: absolute;
+  top: 0;
+  right: 0;
+  bottom: 0;
+  left: 0;
+}
+
+body[fullbleed] {
+  margin: 0;
+  height: 100vh;
+}
+
+/*******************************
+            Other
+*******************************/
+
+html /deep/ [segment], html /deep/ segment {
+  display: block;
+  position: relative;
+  -webkit-box-sizing: border-box;
+  -ms-box-sizing: border-box;
+  box-sizing: border-box;
+  margin: 1em 0.5em;
+  padding: 1em;
+  background-color: white;
+  -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);
+  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.1);
+  border-radius: 5px 5px 5px 5px;
+}
+
 </style>
\ No newline at end of file
diff --git a/bower_components/prettify-element/README.md b/bower_components/prettify-element/README.md
index bed84e78b..50180b259 100644
--- a/bower_components/prettify-element/README.md
+++ b/bower_components/prettify-element/README.md
@@ -1,14 +1,14 @@
-prettify-element
-===================
-
-See the [component page](http://polymer.github.io/prettify-element) for more information.
-
-prettify-import
-==================
-
-Import files are a new invention, so libraries like [`prettify`](https://code.google.com/p/prettify/) do not yet provide them.
-
-`prettify-import` is an intermediary that provides an import file for the `prettify` component. 
-`prettify-import` depends on `prettify`.
-
-Components that want to use `prettify` standalone should depend on `prettify-import`.  Such components need not use Polymer or `prettify-element`, but we put the import and the element in one package for convenience.
+prettify-element
+===================
+
+See the [component page](http://polymer.github.io/prettify-element) for more information.
+
+prettify-import
+==================
+
+Import files are a new invention, so libraries like [`prettify`](https://code.google.com/p/prettify/) do not yet provide them.
+
+`prettify-import` is an intermediary that provides an import file for the `prettify` component. 
+`prettify-import` depends on `prettify`.
+
+Components that want to use `prettify` standalone should depend on `prettify-import`.  Such components need not use Polymer or `prettify-element`, but we put the import and the element in one package for convenience.
diff --git a/bower_components/prettify-element/prettify-import.html b/bower_components/prettify-element/prettify-import.html
index a3d69316b..8a9b892a9 100644
--- a/bower_components/prettify-element/prettify-import.html
+++ b/bower_components/prettify-element/prettify-import.html
@@ -7,4 +7,4 @@
     Code distributed by Google as part of the polymer project is also
     subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 -->
-<script src="../google-code-prettify/src/prettify.js"></script>
+<script src="../google-code-prettify/src/prettify.js"></script>
