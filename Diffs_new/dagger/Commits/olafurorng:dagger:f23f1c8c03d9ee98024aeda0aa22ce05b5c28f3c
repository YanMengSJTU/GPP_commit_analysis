diff --git a/README.md b/README.md
index 21787737c..e2891c109 100644
--- a/README.md
+++ b/README.md
@@ -15,12 +15,12 @@ with the upgrade.
 Download Dagger 1
 -----------------
 
-You will need to include the `dagger-${dagger.version}.jar` in your
+You will need to include the `dagger-${dagger1.version}.jar` in your
 application's runtime.  In order to activate code generation you will need to
-include `dagger-compiler-${dagger.version}.jar` in your build at compile time.
+include `dagger-compiler-${dagger1.version}.jar` in your build at compile time.
 
 In a Maven project, one would include the runtime in the dependencies section
-of your `pom.xml` (replacing `${dagger.version}` with the appropriate current
+of your `pom.xml` (replacing `${dagger1.version}` with the appropriate current
 release), and the `dagger-compiler` artifact as an "optional" or "provided"
 dependency:
 
@@ -29,12 +29,12 @@ dependency:
   <dependency>
     <groupId>com.squareup.dagger</groupId>
     <artifactId>dagger</artifactId>
-    <version>${dagger.version}</version>
+    <version>${dagger1.version}</version>
   </dependency>
   <dependency>
     <groupId>com.squareup.dagger</groupId>
     <artifactId>dagger-compiler</artifactId>
-    <version>${dagger.version}</version>
+    <version>${dagger1.version}</version>
     <optional>true</optional>
   </dependency>
 </dependencies>
diff --git a/compiler/pom.xml b/compiler/pom.xml
index 7b46abd50..296c6972a 100644
--- a/compiler/pom.xml
+++ b/compiler/pom.xml
@@ -93,10 +93,10 @@
             <goals><goal>testCompile</goal></goals>
             <configuration>
               <annotationProcessors>
-                <annotationProcessor>dagger.internal.codegen.ValidationProcessor</annotationProcessor>
-                <annotationProcessor>dagger.internal.codegen.InjectAdapterProcessor</annotationProcessor>
-                <annotationProcessor>dagger.internal.codegen.ModuleAdapterProcessor</annotationProcessor>
-                <annotationProcessor>dagger.internal.codegen.GraphAnalysisProcessor</annotationProcessor>
+                <annotationProcessor>dagger1.internal.codegen.ValidationProcessor</annotationProcessor>
+                <annotationProcessor>dagger1.internal.codegen.InjectAdapterProcessor</annotationProcessor>
+                <annotationProcessor>dagger1.internal.codegen.ModuleAdapterProcessor</annotationProcessor>
+                <annotationProcessor>dagger1.internal.codegen.GraphAnalysisProcessor</annotationProcessor>
               </annotationProcessors>
             </configuration>
           </execution>
@@ -115,8 +115,8 @@
           <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
           <postBuildHookScript>verify</postBuildHookScript>
           <filterProperties>
-            <dagger.version>${project.version}</dagger.version>
-            <dagger.groupId>${project.groupId}</dagger.groupId>
+            <dagger1.version>${project.version}</dagger1.version>
+            <dagger1.groupId>${project.groupId}</dagger1.groupId>
           </filterProperties>
         </configuration>
         <executions>
diff --git a/compiler/src/it/default-package-injected-type/pom.xml b/compiler/src/it/default-package-injected-type/pom.xml
index eaab5f1c9..3735ada67 100644
--- a/compiler/src/it/default-package-injected-type/pom.xml
+++ b/compiler/src/it/default-package-injected-type/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>default-package-injected-type</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Default Package Injected Type</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/default-package-injected-type/src/main/java/TestApp.java b/compiler/src/it/default-package-injected-type/src/main/java/TestApp.java
index ec414b45b..e5f1b0037 100644
--- a/compiler/src/it/default-package-injected-type/src/main/java/TestApp.java
+++ b/compiler/src/it/default-package-injected-type/src/main/java/TestApp.java
@@ -15,8 +15,8 @@
  * limitations under the License.
  */
 
-import dagger.ObjectGraph;
-import dagger.Module;
+import dagger1.ObjectGraph;
+import dagger1.Module;
 import javax.inject.Inject;
 import javax.inject.Singleton;
 
diff --git a/compiler/src/it/extension-graph-setvalues/pom.xml b/compiler/src/it/extension-graph-setvalues/pom.xml
index 3d308ca11..c8ccf7ceb 100644
--- a/compiler/src/it/extension-graph-setvalues/pom.xml
+++ b/compiler/src/it/extension-graph-setvalues/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>extension-graph-setvalues</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/extension-graph-setvalues/src/main/java/test/TestApp.java b/compiler/src/it/extension-graph-setvalues/src/main/java/test/TestApp.java
index 9ad18af99..091f77170 100644
--- a/compiler/src/it/extension-graph-setvalues/src/main/java/test/TestApp.java
+++ b/compiler/src/it/extension-graph-setvalues/src/main/java/test/TestApp.java
@@ -16,17 +16,17 @@
  */
 package test;
 
-import dagger.ObjectGraph;
-import dagger.Module;
-import dagger.Provides;
+import dagger1.ObjectGraph;
+import dagger1.Module;
+import dagger1.Provides;
 import java.util.HashSet;
 import java.util.Set;
 import javax.inject.Inject;
 import javax.inject.Provider;
 import javax.inject.Singleton;
 
-import static dagger.Provides.Type.SET;
-import static dagger.Provides.Type.SET_VALUES;
+import static dagger1.Provides.Type.SET;
+import static dagger1.Provides.Type.SET_VALUES;
 
 /**
  * Contributions to {@code SET_VALUES} binding do not affect Set of providers.
diff --git a/compiler/src/it/extension-graph/pom.xml b/compiler/src/it/extension-graph/pom.xml
index 3c0190b03..8ea5a9c9b 100644
--- a/compiler/src/it/extension-graph/pom.xml
+++ b/compiler/src/it/extension-graph/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>extension-graph</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/extension-graph/src/main/java/test/TestApp.java b/compiler/src/it/extension-graph/src/main/java/test/TestApp.java
index 5850d6ce4..15d14c364 100644
--- a/compiler/src/it/extension-graph/src/main/java/test/TestApp.java
+++ b/compiler/src/it/extension-graph/src/main/java/test/TestApp.java
@@ -16,8 +16,8 @@
  */
 package test;
 
-import dagger.ObjectGraph;
-import dagger.Module;
+import dagger1.ObjectGraph;
+import dagger1.Module;
 import javax.inject.Inject;
 import javax.inject.Singleton;
 
diff --git a/compiler/src/it/final-field-inject/pom.xml b/compiler/src/it/final-field-inject/pom.xml
index 83aa81fb7..ad100c947 100644
--- a/compiler/src/it/final-field-inject/pom.xml
+++ b/compiler/src/it/final-field-inject/pom.xml
@@ -20,19 +20,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>final-field-inject</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/final-field-inject/verify.bsh b/compiler/src/it/final-field-inject/verify.bsh
index 1c30652d4..e2171f8bb 100644
--- a/compiler/src/it/final-field-inject/verify.bsh
+++ b/compiler/src/it/final-field-inject/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/include-non-module/pom.xml b/compiler/src/it/include-non-module/pom.xml
index 871f53851..9ad9bae7f 100644
--- a/compiler/src/it/include-non-module/pom.xml
+++ b/compiler/src/it/include-non-module/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>include-non-module</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/include-non-module/src/main/java/test/TestApp.java b/compiler/src/it/include-non-module/src/main/java/test/TestApp.java
index f658f4289..15a26b00c 100644
--- a/compiler/src/it/include-non-module/src/main/java/test/TestApp.java
+++ b/compiler/src/it/include-non-module/src/main/java/test/TestApp.java
@@ -15,9 +15,9 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 import java.lang.String;
 
diff --git a/compiler/src/it/inject-on-class/pom.xml b/compiler/src/it/inject-on-class/pom.xml
index e0f80c4bc..7d723f964 100644
--- a/compiler/src/it/inject-on-class/pom.xml
+++ b/compiler/src/it/inject-on-class/pom.xml
@@ -19,19 +19,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>method-injection</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/inject-on-class/verify.bsh b/compiler/src/it/inject-on-class/verify.bsh
index 03031dd45..4c92e28b6 100644
--- a/compiler/src/it/inject-on-class/verify.bsh
+++ b/compiler/src/it/inject-on-class/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/inject-parameterized-type/pom.xml b/compiler/src/it/inject-parameterized-type/pom.xml
index 0437e26f3..6d55a0479 100644
--- a/compiler/src/it/inject-parameterized-type/pom.xml
+++ b/compiler/src/it/inject-parameterized-type/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>inject-parameterized-type</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/inject-parameterized-type/src/main/java/test/TestApp.java b/compiler/src/it/inject-parameterized-type/src/main/java/test/TestApp.java
index b22dd6f62..d0d5e2019 100644
--- a/compiler/src/it/inject-parameterized-type/src/main/java/test/TestApp.java
+++ b/compiler/src/it/inject-parameterized-type/src/main/java/test/TestApp.java
@@ -15,9 +15,9 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 
 class TestApp {
diff --git a/compiler/src/it/inner-classes-complaint-injection/pom.xml b/compiler/src/it/inner-classes-complaint-injection/pom.xml
index d8ceecb8a..52b2e342e 100644
--- a/compiler/src/it/inner-classes-complaint-injection/pom.xml
+++ b/compiler/src/it/inner-classes-complaint-injection/pom.xml
@@ -19,20 +19,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>inner-classes-complaint-injection</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/inner-classes-complaint-injection/src/main/java/test/TestApp.java b/compiler/src/it/inner-classes-complaint-injection/src/main/java/test/TestApp.java
index ab3ce3c14..4a10a77f7 100644
--- a/compiler/src/it/inner-classes-complaint-injection/src/main/java/test/TestApp.java
+++ b/compiler/src/it/inner-classes-complaint-injection/src/main/java/test/TestApp.java
@@ -15,10 +15,10 @@
  */
 package test;
 
-import dagger.Module;
+import dagger1.Module;
 
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 
 import javax.inject.Inject;
 import java.lang.Override;
diff --git a/compiler/src/it/inner-classes-complaint-injection/verify.bsh b/compiler/src/it/inner-classes-complaint-injection/verify.bsh
index 0b02b8022..63bc36b14 100644
--- a/compiler/src/it/inner-classes-complaint-injection/verify.bsh
+++ b/compiler/src/it/inner-classes-complaint-injection/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/method-injection/pom.xml b/compiler/src/it/method-injection/pom.xml
index e0f80c4bc..7d723f964 100644
--- a/compiler/src/it/method-injection/pom.xml
+++ b/compiler/src/it/method-injection/pom.xml
@@ -19,19 +19,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>method-injection</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/method-injection/verify.bsh b/compiler/src/it/method-injection/verify.bsh
index 002cfbfdf..bbe367195 100644
--- a/compiler/src/it/method-injection/verify.bsh
+++ b/compiler/src/it/method-injection/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/missing-at-inject-constructor/pom.xml b/compiler/src/it/missing-at-inject-constructor/pom.xml
index ea8134772..41f168a20 100644
--- a/compiler/src/it/missing-at-inject-constructor/pom.xml
+++ b/compiler/src/it/missing-at-inject-constructor/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>missing-at-inject-constructor</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/missing-at-inject-constructor/src/main/java/test/TestApp.java b/compiler/src/it/missing-at-inject-constructor/src/main/java/test/TestApp.java
index 935218f8f..6169a6756 100644
--- a/compiler/src/it/missing-at-inject-constructor/src/main/java/test/TestApp.java
+++ b/compiler/src/it/missing-at-inject-constructor/src/main/java/test/TestApp.java
@@ -16,9 +16,9 @@
  */
 package test;
 
-import dagger.Module;
+import dagger1.Module;
 
-import dagger.ObjectGraph;
+import dagger1.ObjectGraph;
 import javax.inject.Inject;
 
 class TestApp implements Runnable {
diff --git a/compiler/src/it/missing-at-inject-constructor/verify.bsh b/compiler/src/it/missing-at-inject-constructor/verify.bsh
index f1a4c7601..fb041d935 100644
--- a/compiler/src/it/missing-at-inject-constructor/verify.bsh
+++ b/compiler/src/it/missing-at-inject-constructor/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/module-type-validation/pom.xml b/compiler/src/it/module-type-validation/pom.xml
index cc510b24b..39969b9a2 100644
--- a/compiler/src/it/module-type-validation/pom.xml
+++ b/compiler/src/it/module-type-validation/pom.xml
@@ -19,19 +19,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>module-type-validation</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/module-type-validation/src/main/java/test/TestModule.java b/compiler/src/it/module-type-validation/src/main/java/test/TestModule.java
index ed5520839..ceba45e3d 100644
--- a/compiler/src/it/module-type-validation/src/main/java/test/TestModule.java
+++ b/compiler/src/it/module-type-validation/src/main/java/test/TestModule.java
@@ -15,7 +15,7 @@
  */
 package test;
 
-import dagger.Module;
+import dagger1.Module;
 
 @Module
 class ThreadModule extends Thread {
diff --git a/compiler/src/it/module-type-validation/verify.bsh b/compiler/src/it/module-type-validation/verify.bsh
index ce3f6a7e4..e8465e6d4 100644
--- a/compiler/src/it/module-type-validation/verify.bsh
+++ b/compiler/src/it/module-type-validation/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/multiple-modules-setvalues/pom.xml b/compiler/src/it/multiple-modules-setvalues/pom.xml
index bb49416c9..7a88bc4ca 100644
--- a/compiler/src/it/multiple-modules-setvalues/pom.xml
+++ b/compiler/src/it/multiple-modules-setvalues/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>multiple-modules-setvalues</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/multiple-modules-setvalues/src/main/java/test/TestApp.java b/compiler/src/it/multiple-modules-setvalues/src/main/java/test/TestApp.java
index edeeae08a..9a389055e 100644
--- a/compiler/src/it/multiple-modules-setvalues/src/main/java/test/TestApp.java
+++ b/compiler/src/it/multiple-modules-setvalues/src/main/java/test/TestApp.java
@@ -16,17 +16,17 @@
  */
 package test;
 
-import dagger.ObjectGraph;
-import dagger.Module;
-import dagger.Provides;
+import dagger1.ObjectGraph;
+import dagger1.Module;
+import dagger1.Provides;
 import java.util.HashSet;
 import java.util.Set;
 import javax.inject.Inject;
 import javax.inject.Provider;
 import javax.inject.Singleton;
 
-import static dagger.Provides.Type.SET;
-import static dagger.Provides.Type.SET_VALUES;
+import static dagger1.Provides.Type.SET;
+import static dagger1.Provides.Type.SET_VALUES;
 
 /**
  * Contributions to {@code SET_VALUES} binding do not affect Set of providers.
diff --git a/compiler/src/it/multiple-provides-methods/pom.xml b/compiler/src/it/multiple-provides-methods/pom.xml
index ea11d6e0d..471ec3eff 100644
--- a/compiler/src/it/multiple-provides-methods/pom.xml
+++ b/compiler/src/it/multiple-provides-methods/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>multiple-provides-methods</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/multiple-provides-methods/src/main/java/test/TestApp.java b/compiler/src/it/multiple-provides-methods/src/main/java/test/TestApp.java
index 31823d107..475668173 100644
--- a/compiler/src/it/multiple-provides-methods/src/main/java/test/TestApp.java
+++ b/compiler/src/it/multiple-provides-methods/src/main/java/test/TestApp.java
@@ -16,8 +16,8 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Inject;
 
 class TestApp {
diff --git a/compiler/src/it/multiple-qualifiers/pom.xml b/compiler/src/it/multiple-qualifiers/pom.xml
index 655be009c..25ae009dc 100644
--- a/compiler/src/it/multiple-qualifiers/pom.xml
+++ b/compiler/src/it/multiple-qualifiers/pom.xml
@@ -20,19 +20,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>multiple-qualifiers</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/multiple-qualifiers/src/main/java/test/TestApp.java b/compiler/src/it/multiple-qualifiers/src/main/java/test/TestApp.java
index 55a51f4e1..80a70c84b 100644
--- a/compiler/src/it/multiple-qualifiers/src/main/java/test/TestApp.java
+++ b/compiler/src/it/multiple-qualifiers/src/main/java/test/TestApp.java
@@ -16,8 +16,8 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import java.lang.annotation.Retention;
 import javax.inject.Inject;
 import javax.inject.Singleton;
diff --git a/compiler/src/it/multiple-qualifiers/verify.bsh b/compiler/src/it/multiple-qualifiers/verify.bsh
index b3fc2a850..9a23c4316 100644
--- a/compiler/src/it/multiple-qualifiers/verify.bsh
+++ b/compiler/src/it/multiple-qualifiers/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/private-inject/pom.xml b/compiler/src/it/private-inject/pom.xml
index cc5673ede..0d9f67abb 100644
--- a/compiler/src/it/private-inject/pom.xml
+++ b/compiler/src/it/private-inject/pom.xml
@@ -19,19 +19,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>private-inject</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/private-inject/verify.bsh b/compiler/src/it/private-inject/verify.bsh
index c327478d9..f2be40e6c 100644
--- a/compiler/src/it/private-inject/verify.bsh
+++ b/compiler/src/it/private-inject/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/provide-provider-or-lazy/pom.xml b/compiler/src/it/provide-provider-or-lazy/pom.xml
index 40b760099..36851e300 100644
--- a/compiler/src/it/provide-provider-or-lazy/pom.xml
+++ b/compiler/src/it/provide-provider-or-lazy/pom.xml
@@ -19,19 +19,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>provide-provider-or-lazy</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/provide-provider-or-lazy/src/main/java/test/TestModule.java b/compiler/src/it/provide-provider-or-lazy/src/main/java/test/TestModule.java
index 0a80aee57..8deafa24f 100644
--- a/compiler/src/it/provide-provider-or-lazy/src/main/java/test/TestModule.java
+++ b/compiler/src/it/provide-provider-or-lazy/src/main/java/test/TestModule.java
@@ -15,9 +15,9 @@
  */
 package test;
 
-import dagger.Lazy;
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Lazy;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Provider;
 
 @Module class TestModule {
diff --git a/compiler/src/it/provide-provider-or-lazy/verify.bsh b/compiler/src/it/provide-provider-or-lazy/verify.bsh
index 7a5cfd088..5aa1eba5f 100644
--- a/compiler/src/it/provide-provider-or-lazy/verify.bsh
+++ b/compiler/src/it/provide-provider-or-lazy/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
@@ -7,6 +7,6 @@ new BuildLogValidator().assertHasText(buildLog, new String[]{
 new BuildLogValidator().assertHasText(buildLog, new String[]{
     "@Provides method must not return javax.inject.Provider directly: test.TestModule.provideRawProvider"});
 new BuildLogValidator().assertHasText(buildLog, new String[]{
-    "@Provides method must not return dagger.Lazy directly: test.TestModule.provideLazy"});
+    "@Provides method must not return dagger1.Lazy directly: test.TestModule.provideLazy"});
 new BuildLogValidator().assertHasText(buildLog, new String[]{
-    "@Provides method must not return dagger.Lazy directly: test.TestModule.provideRawLazy"});
+    "@Provides method must not return dagger1.Lazy directly: test.TestModule.provideRawLazy"});
diff --git a/compiler/src/it/provides-method-not-in-module/pom.xml b/compiler/src/it/provides-method-not-in-module/pom.xml
index 89f527d9b..e48ef5c70 100644
--- a/compiler/src/it/provides-method-not-in-module/pom.xml
+++ b/compiler/src/it/provides-method-not-in-module/pom.xml
@@ -20,19 +20,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>provides-method-not-in-module</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/provides-method-not-in-module/src/main/java/test/TestApp.java b/compiler/src/it/provides-method-not-in-module/src/main/java/test/TestApp.java
index 8748d3784..a9fceaa70 100644
--- a/compiler/src/it/provides-method-not-in-module/src/main/java/test/TestApp.java
+++ b/compiler/src/it/provides-method-not-in-module/src/main/java/test/TestApp.java
@@ -16,7 +16,7 @@
  */
 package test;
 
-import dagger.Provides;
+import dagger1.Provides;
 
 class TestApp {
 
diff --git a/compiler/src/it/provides-method-not-in-module/verify.bsh b/compiler/src/it/provides-method-not-in-module/verify.bsh
index 22cdec585..ba2306210 100644
--- a/compiler/src/it/provides-method-not-in-module/verify.bsh
+++ b/compiler/src/it/provides-method-not-in-module/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/provides-method-with-throws-clause/pom.xml b/compiler/src/it/provides-method-with-throws-clause/pom.xml
index 7e268d34f..79732be42 100644
--- a/compiler/src/it/provides-method-with-throws-clause/pom.xml
+++ b/compiler/src/it/provides-method-with-throws-clause/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>provides-method-with-throws-clause</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/provides-method-with-throws-clause/src/main/java/test/TestApp.java b/compiler/src/it/provides-method-with-throws-clause/src/main/java/test/TestApp.java
index 51718621a..b34248ae3 100644
--- a/compiler/src/it/provides-method-with-throws-clause/src/main/java/test/TestApp.java
+++ b/compiler/src/it/provides-method-with-throws-clause/src/main/java/test/TestApp.java
@@ -16,10 +16,10 @@
  */
 package test;
 
-import dagger.Module;
+import dagger1.Module;
 
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 
 import javax.inject.Inject;
 import java.io.IOException;
diff --git a/compiler/src/it/provides-method-with-throws-clause/verify.bsh b/compiler/src/it/provides-method-with-throws-clause/verify.bsh
index ab61c03ea..b20ee310d 100644
--- a/compiler/src/it/provides-method-with-throws-clause/verify.bsh
+++ b/compiler/src/it/provides-method-with-throws-clause/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/qualifiers-on-invalid-elements-errors/pom.xml b/compiler/src/it/qualifiers-on-invalid-elements-errors/pom.xml
index adb65c262..932d1082a 100644
--- a/compiler/src/it/qualifiers-on-invalid-elements-errors/pom.xml
+++ b/compiler/src/it/qualifiers-on-invalid-elements-errors/pom.xml
@@ -20,19 +20,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>qualifiers-on-invalid-elements-errors</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/qualifiers-on-invalid-elements-errors/src/main/java/test/TestApp.java b/compiler/src/it/qualifiers-on-invalid-elements-errors/src/main/java/test/TestApp.java
index ae7caf1ea..0fa2237fb 100644
--- a/compiler/src/it/qualifiers-on-invalid-elements-errors/src/main/java/test/TestApp.java
+++ b/compiler/src/it/qualifiers-on-invalid-elements-errors/src/main/java/test/TestApp.java
@@ -16,8 +16,8 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import java.lang.annotation.Retention;
 import javax.inject.Inject;
 import javax.inject.Qualifier;
diff --git a/compiler/src/it/qualifiers-on-invalid-elements-errors/verify.bsh b/compiler/src/it/qualifiers-on-invalid-elements-errors/verify.bsh
index 814ff8b54..6fd0e7833 100644
--- a/compiler/src/it/qualifiers-on-invalid-elements-errors/verify.bsh
+++ b/compiler/src/it/qualifiers-on-invalid-elements-errors/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/qualifiers-on-invalid-elements-warnings/pom.xml b/compiler/src/it/qualifiers-on-invalid-elements-warnings/pom.xml
index ca4cb327b..35ffe0e90 100644
--- a/compiler/src/it/qualifiers-on-invalid-elements-warnings/pom.xml
+++ b/compiler/src/it/qualifiers-on-invalid-elements-warnings/pom.xml
@@ -20,19 +20,19 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>qualifiers-on-invalid-elements-warnings</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/qualifiers-on-invalid-elements-warnings/src/main/java/test/TestApp.java b/compiler/src/it/qualifiers-on-invalid-elements-warnings/src/main/java/test/TestApp.java
index 83ffa307b..a89a7d513 100644
--- a/compiler/src/it/qualifiers-on-invalid-elements-warnings/src/main/java/test/TestApp.java
+++ b/compiler/src/it/qualifiers-on-invalid-elements-warnings/src/main/java/test/TestApp.java
@@ -16,8 +16,8 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import java.lang.annotation.Retention;
 import javax.inject.Inject;
 import javax.inject.Qualifier;
diff --git a/compiler/src/it/qualifiers-on-invalid-elements-warnings/verify.bsh b/compiler/src/it/qualifiers-on-invalid-elements-warnings/verify.bsh
index 82afe08a1..c7cbfe5d9 100644
--- a/compiler/src/it/qualifiers-on-invalid-elements-warnings/verify.bsh
+++ b/compiler/src/it/qualifiers-on-invalid-elements-warnings/verify.bsh
@@ -1,4 +1,4 @@
-import dagger.testing.it.BuildLogValidator;
+import dagger1.testing.it.BuildLogValidator;
 import java.io.File;
 
 File buildLog = new File(basedir, "build.log");
diff --git a/compiler/src/it/same-provides-method-name/pom.xml b/compiler/src/it/same-provides-method-name/pom.xml
index 938165e9a..7976a0816 100644
--- a/compiler/src/it/same-provides-method-name/pom.xml
+++ b/compiler/src/it/same-provides-method-name/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>same-provides-method-name</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/same-provides-method-name/src/main/java/test/TestApp.java b/compiler/src/it/same-provides-method-name/src/main/java/test/TestApp.java
index 6af417cb0..7e8691592 100644
--- a/compiler/src/it/same-provides-method-name/src/main/java/test/TestApp.java
+++ b/compiler/src/it/same-provides-method-name/src/main/java/test/TestApp.java
@@ -16,10 +16,10 @@
  */
 package test;
 
-import dagger.Module;
+import dagger1.Module;
 
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 
 import javax.inject.Inject;
 import java.lang.Override;
diff --git a/compiler/src/it/static-injected-binding-doesnt-fail-providers/pom.xml b/compiler/src/it/static-injected-binding-doesnt-fail-providers/pom.xml
index b93d3bf64..84e2e449a 100644
--- a/compiler/src/it/static-injected-binding-doesnt-fail-providers/pom.xml
+++ b/compiler/src/it/static-injected-binding-doesnt-fail-providers/pom.xml
@@ -19,21 +19,21 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.squareup.dagger.tests</groupId>
+  <groupId>com.squareup.dagger1.tests</groupId>
   <artifactId>static-injected-binding-doesnt-fail-providers</artifactId>
-  <version>@dagger.version@</version>
+  <version>@dagger1.version@</version>
   <packaging>jar</packaging>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/static-injected-binding-doesnt-fail-providers/src/main/java/test/Test.java b/compiler/src/it/static-injected-binding-doesnt-fail-providers/src/main/java/test/Test.java
index 450f7948a..1fcd28b94 100644
--- a/compiler/src/it/static-injected-binding-doesnt-fail-providers/src/main/java/test/Test.java
+++ b/compiler/src/it/static-injected-binding-doesnt-fail-providers/src/main/java/test/Test.java
@@ -15,10 +15,10 @@
  */
 package test;
 
-import dagger.Module;
+import dagger1.Module;
 
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 
 import java.lang.Override;
diff --git a/compiler/src/it/uninjectable-supertype/pom.xml b/compiler/src/it/uninjectable-supertype/pom.xml
index 84f323f4c..335a803db 100644
--- a/compiler/src/it/uninjectable-supertype/pom.xml
+++ b/compiler/src/it/uninjectable-supertype/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>uninjectable-supertype</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/uninjectable-supertype/src/main/java/test/TestApp.java b/compiler/src/it/uninjectable-supertype/src/main/java/test/TestApp.java
index fa6d4cb17..5f20c0624 100644
--- a/compiler/src/it/uninjectable-supertype/src/main/java/test/TestApp.java
+++ b/compiler/src/it/uninjectable-supertype/src/main/java/test/TestApp.java
@@ -15,8 +15,8 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Inject;
 
 class TestApp {
diff --git a/compiler/src/it/valid-use-of-qualifiers/pom.xml b/compiler/src/it/valid-use-of-qualifiers/pom.xml
index 50bac37d5..57f949f52 100644
--- a/compiler/src/it/valid-use-of-qualifiers/pom.xml
+++ b/compiler/src/it/valid-use-of-qualifiers/pom.xml
@@ -20,20 +20,20 @@
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.example.dagger.tests</groupId>
+  <groupId>com.example.dagger1.tests</groupId>
   <artifactId>valid-use-ofqualifiers</artifactId>
   <version>HEAD-SNAPSHOT</version>
   <name>Dagger Integration Test Basic</name>
   <dependencies>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
     </dependency>
     <dependency>
-      <groupId>@dagger.groupId@</groupId>
+      <groupId>@dagger1.groupId@</groupId>
       <artifactId>dagger-compiler</artifactId>
-      <version>@dagger.version@</version>
+      <version>@dagger1.version@</version>
       <optional>true</optional>
     </dependency>
   </dependencies>
diff --git a/compiler/src/it/valid-use-of-qualifiers/src/main/java/test/TestApp.java b/compiler/src/it/valid-use-of-qualifiers/src/main/java/test/TestApp.java
index da21df53d..a93978b0c 100644
--- a/compiler/src/it/valid-use-of-qualifiers/src/main/java/test/TestApp.java
+++ b/compiler/src/it/valid-use-of-qualifiers/src/main/java/test/TestApp.java
@@ -16,8 +16,8 @@
  */
 package test;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import java.lang.annotation.Retention;
 import javax.inject.Inject;
 import javax.inject.Qualifier;
diff --git a/compiler/src/main/java/dagger/internal/codegen/AdapterJavadocs.java b/compiler/src/main/java/dagger1/internal/codegen/AdapterJavadocs.java
similarity index 98%
rename from compiler/src/main/java/dagger/internal/codegen/AdapterJavadocs.java
rename to compiler/src/main/java/dagger1/internal/codegen/AdapterJavadocs.java
index 33c73aa39..a41940494 100644
--- a/compiler/src/main/java/dagger/internal/codegen/AdapterJavadocs.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/AdapterJavadocs.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.squareup.javapoet.CodeBlock;
 import com.squareup.javapoet.TypeName;
diff --git a/compiler/src/main/java/dagger/internal/codegen/GeneratorKeys.java b/compiler/src/main/java/dagger1/internal/codegen/GeneratorKeys.java
similarity index 96%
rename from compiler/src/main/java/dagger/internal/codegen/GeneratorKeys.java
rename to compiler/src/main/java/dagger1/internal/codegen/GeneratorKeys.java
index 17f1800b5..135156759 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GeneratorKeys.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GeneratorKeys.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import java.util.List;
 import java.util.Map;
@@ -25,8 +25,8 @@
 import javax.lang.model.element.VariableElement;
 import javax.lang.model.type.TypeMirror;
 
-import static dagger.internal.codegen.Util.rawTypeToString;
-import static dagger.internal.codegen.Util.typeToString;
+import static dagger1.internal.codegen.Util.rawTypeToString;
+import static dagger1.internal.codegen.Util.typeToString;
 
 /**
  * Creates keys using javac's mirror APIs. Unlike {@code Keys}, this class uses
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisErrorHandler.java b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisErrorHandler.java
similarity index 95%
rename from compiler/src/main/java/dagger/internal/codegen/GraphAnalysisErrorHandler.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisErrorHandler.java
index 121bbaebd..66cfbaf45 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisErrorHandler.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisErrorHandler.java
@@ -13,9 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
-import dagger.internal.Linker;
+import dagger1.internal.Linker;
 import java.util.List;
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.TypeElement;
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisInjectBinding.java b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisInjectBinding.java
similarity index 96%
rename from compiler/src/main/java/dagger/internal/codegen/GraphAnalysisInjectBinding.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisInjectBinding.java
index 2d8350157..82669c5a4 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisInjectBinding.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisInjectBinding.java
@@ -13,10 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
-import dagger.internal.Binding;
-import dagger.internal.Linker;
+import dagger1.internal.Binding;
+import dagger1.internal.Linker;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
@@ -30,7 +30,7 @@
 import javax.lang.model.element.VariableElement;
 import javax.lang.model.type.TypeMirror;
 
-import static dagger.internal.codegen.Util.getApplicationSupertype;
+import static dagger1.internal.codegen.Util.getApplicationSupertype;
 
 /**
  * A build time binding that injects the constructor and fields of a class.
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisLoader.java b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisLoader.java
similarity index 96%
rename from compiler/src/main/java/dagger/internal/codegen/GraphAnalysisLoader.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisLoader.java
index fe81458de..b59878cec 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisLoader.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisLoader.java
@@ -13,13 +13,13 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.google.common.annotations.VisibleForTesting;
-import dagger.internal.Binding;
-import dagger.internal.Loader;
-import dagger.internal.ModuleAdapter;
-import dagger.internal.StaticInjection;
+import dagger1.internal.Binding;
+import dagger1.internal.Loader;
+import dagger1.internal.ModuleAdapter;
+import dagger1.internal.StaticInjection;
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.ElementKind;
 import javax.lang.model.element.TypeElement;
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisProcessor.java
similarity index 94%
rename from compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisProcessor.java
index d009f75da..92bd251ae 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisProcessor.java
@@ -13,18 +13,18 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
-
-import dagger.Module;
-import dagger.Provides;
-import dagger.internal.Binding;
-import dagger.internal.Binding.InvalidBindingException;
-import dagger.internal.BindingsGroup;
-import dagger.internal.Linker;
-import dagger.internal.ProblemDetector;
-import dagger.internal.ProvidesBinding;
-import dagger.internal.SetBinding;
-import dagger.internal.codegen.Util.CodeGenerationIncompleteException;
+package dagger1.internal.codegen;
+
+import dagger1.Module;
+import dagger1.Provides;
+import dagger1.internal.Binding;
+import dagger1.internal.Binding.InvalidBindingException;
+import dagger1.internal.BindingsGroup;
+import dagger1.internal.Linker;
+import dagger1.internal.ProblemDetector;
+import dagger1.internal.ProvidesBinding;
+import dagger1.internal.SetBinding;
+import dagger1.internal.codegen.Util.CodeGenerationIncompleteException;
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.io.StringWriter;
@@ -56,18 +56,18 @@
 import javax.tools.JavaFileManager;
 import javax.tools.StandardLocation;
 
-import static dagger.Provides.Type.SET;
-import static dagger.Provides.Type.SET_VALUES;
-import static dagger.internal.codegen.Util.className;
-import static dagger.internal.codegen.Util.getAnnotation;
-import static dagger.internal.codegen.Util.getPackage;
-import static dagger.internal.codegen.Util.isInterface;
+import static dagger1.Provides.Type.SET;
+import static dagger1.Provides.Type.SET_VALUES;
+import static dagger1.internal.codegen.Util.className;
+import static dagger1.internal.codegen.Util.getAnnotation;
+import static dagger1.internal.codegen.Util.getPackage;
+import static dagger1.internal.codegen.Util.isInterface;
 import static java.util.Arrays.asList;
 
 /**
  * Performs full graph analysis on a module.
  */
-@SupportedAnnotationTypes("dagger.Module")
+@SupportedAnnotationTypes("dagger1.Module")
 public final class GraphAnalysisProcessor extends AbstractProcessor {
   private static final Set<String> ERROR_NAMES_TO_PROPAGATE = new LinkedHashSet<String>(asList(
       "com.sun.tools.javac.code.Symbol$CompletionFailure"));
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisStaticInjection.java b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisStaticInjection.java
similarity index 90%
rename from compiler/src/main/java/dagger/internal/codegen/GraphAnalysisStaticInjection.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisStaticInjection.java
index dee437651..cbf0494b2 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisStaticInjection.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphAnalysisStaticInjection.java
@@ -13,14 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
-import dagger.internal.Linker;
-import dagger.internal.StaticInjection;
+import dagger1.internal.Linker;
+import dagger1.internal.StaticInjection;
 import javax.inject.Inject;
 import javax.lang.model.element.Element;
 
-import static dagger.internal.codegen.Util.isStatic;
+import static dagger1.internal.codegen.Util.isStatic;
 
 public final class GraphAnalysisStaticInjection extends StaticInjection {
 
@@ -46,4 +46,4 @@ public GraphAnalysisStaticInjection(Element enclosingClass) {
   @Override public void inject() {
     throw new UnsupportedOperationException();
   }
-}
\ No newline at end of file
+}
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphVisualizer.java b/compiler/src/main/java/dagger1/internal/codegen/GraphVisualizer.java
similarity index 98%
rename from compiler/src/main/java/dagger/internal/codegen/GraphVisualizer.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphVisualizer.java
index a0fe29ce7..53473d2cb 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphVisualizer.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphVisualizer.java
@@ -13,9 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
-import dagger.internal.Binding;
+import dagger1.internal.Binding;
 import java.io.IOException;
 import java.util.Comparator;
 import java.util.HashSet;
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphVizWriter.java b/compiler/src/main/java/dagger1/internal/codegen/GraphVizWriter.java
similarity index 99%
rename from compiler/src/main/java/dagger/internal/codegen/GraphVizWriter.java
rename to compiler/src/main/java/dagger1/internal/codegen/GraphVizWriter.java
index fcfd25202..702b3affb 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphVizWriter.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/GraphVizWriter.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.squareup.javapoet.CodeBlock;
 import java.io.Closeable;
diff --git a/compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java b/compiler/src/main/java/dagger1/internal/codegen/InjectAdapterProcessor.java
similarity index 94%
rename from compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java
rename to compiler/src/main/java/dagger1/internal/codegen/InjectAdapterProcessor.java
index 320ef87c2..2059be298 100644
--- a/compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/InjectAdapterProcessor.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.FieldSpec;
@@ -22,10 +22,10 @@
 import com.squareup.javapoet.MethodSpec;
 import com.squareup.javapoet.ParameterizedTypeName;
 import com.squareup.javapoet.TypeSpec;
-import dagger.ObjectGraph;
-import dagger.internal.Binding;
-import dagger.internal.Linker;
-import dagger.internal.StaticInjection;
+import dagger1.ObjectGraph;
+import dagger1.internal.Binding;
+import dagger1.internal.Linker;
+import dagger1.internal.StaticInjection;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -48,19 +48,19 @@
 import javax.lang.model.type.TypeMirror;
 import javax.tools.Diagnostic;
 
-import static dagger.internal.codegen.AdapterJavadocs.bindingTypeDocs;
-import static dagger.internal.codegen.Util.SET_OF_BINDINGS;
-import static dagger.internal.codegen.Util.adapterName;
-import static dagger.internal.codegen.Util.bindingOf;
-import static dagger.internal.codegen.Util.elementToString;
-import static dagger.internal.codegen.Util.getApplicationSupertype;
-import static dagger.internal.codegen.Util.getNoArgsConstructor;
-import static dagger.internal.codegen.Util.getPackage;
-import static dagger.internal.codegen.Util.injectableType;
-import static dagger.internal.codegen.Util.isCallableConstructor;
-import static dagger.internal.codegen.Util.rawTypeToString;
-import static dagger.internal.loaders.GeneratedAdapters.INJECT_ADAPTER_SUFFIX;
-import static dagger.internal.loaders.GeneratedAdapters.STATIC_INJECTION_SUFFIX;
+import static dagger1.internal.codegen.AdapterJavadocs.bindingTypeDocs;
+import static dagger1.internal.codegen.Util.SET_OF_BINDINGS;
+import static dagger1.internal.codegen.Util.adapterName;
+import static dagger1.internal.codegen.Util.bindingOf;
+import static dagger1.internal.codegen.Util.elementToString;
+import static dagger1.internal.codegen.Util.getApplicationSupertype;
+import static dagger1.internal.codegen.Util.getNoArgsConstructor;
+import static dagger1.internal.codegen.Util.getPackage;
+import static dagger1.internal.codegen.Util.injectableType;
+import static dagger1.internal.codegen.Util.isCallableConstructor;
+import static dagger1.internal.codegen.Util.rawTypeToString;
+import static dagger1.internal.loaders.GeneratedAdapters.INJECT_ADAPTER_SUFFIX;
+import static dagger1.internal.loaders.GeneratedAdapters.STATIC_INJECTION_SUFFIX;
 import static javax.lang.model.element.Modifier.ABSTRACT;
 import static javax.lang.model.element.Modifier.FINAL;
 import static javax.lang.model.element.Modifier.PRIVATE;
diff --git a/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java b/compiler/src/main/java/dagger1/internal/codegen/ModuleAdapterProcessor.java
similarity index 95%
rename from compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
rename to compiler/src/main/java/dagger1/internal/codegen/ModuleAdapterProcessor.java
index d204d4a9c..79a103974 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/ModuleAdapterProcessor.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.CodeBlock;
@@ -23,15 +23,15 @@
 import com.squareup.javapoet.ParameterizedTypeName;
 import com.squareup.javapoet.TypeName;
 import com.squareup.javapoet.TypeSpec;
-import dagger.Lazy;
-import dagger.Module;
-import dagger.Provides;
-import dagger.internal.BindingsGroup;
-import dagger.internal.Linker;
-import dagger.internal.ModuleAdapter;
-import dagger.internal.ProvidesBinding;
-import dagger.internal.SetBinding;
-import dagger.internal.codegen.Util.CodeGenerationIncompleteException;
+import dagger1.Lazy;
+import dagger1.Module;
+import dagger1.Provides;
+import dagger1.internal.BindingsGroup;
+import dagger1.internal.Linker;
+import dagger1.internal.ModuleAdapter;
+import dagger1.internal.ProvidesBinding;
+import dagger1.internal.SetBinding;
+import dagger1.internal.codegen.Util.CodeGenerationIncompleteException;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -61,16 +61,16 @@
 import javax.lang.model.util.Types;
 import javax.tools.Diagnostic;
 
-import static dagger.internal.codegen.AdapterJavadocs.bindingTypeDocs;
-import static dagger.internal.codegen.Util.ARRAY_OF_CLASS;
-import static dagger.internal.codegen.Util.bindingOf;
-import static dagger.internal.codegen.Util.elementToString;
-import static dagger.internal.codegen.Util.getAnnotation;
-import static dagger.internal.codegen.Util.getNoArgsConstructor;
-import static dagger.internal.codegen.Util.isCallableConstructor;
-import static dagger.internal.codegen.Util.isInterface;
-import static dagger.internal.codegen.Util.typeToString;
-import static dagger.internal.loaders.GeneratedAdapters.MODULE_ADAPTER_SUFFIX;
+import static dagger1.internal.codegen.AdapterJavadocs.bindingTypeDocs;
+import static dagger1.internal.codegen.Util.ARRAY_OF_CLASS;
+import static dagger1.internal.codegen.Util.bindingOf;
+import static dagger1.internal.codegen.Util.elementToString;
+import static dagger1.internal.codegen.Util.getAnnotation;
+import static dagger1.internal.codegen.Util.getNoArgsConstructor;
+import static dagger1.internal.codegen.Util.isCallableConstructor;
+import static dagger1.internal.codegen.Util.isInterface;
+import static dagger1.internal.codegen.Util.typeToString;
+import static dagger1.internal.loaders.GeneratedAdapters.MODULE_ADAPTER_SUFFIX;
 import static javax.lang.model.element.Modifier.ABSTRACT;
 import static javax.lang.model.element.Modifier.FINAL;
 import static javax.lang.model.element.Modifier.PRIVATE;
diff --git a/compiler/src/main/java/dagger/internal/codegen/Util.java b/compiler/src/main/java/dagger1/internal/codegen/Util.java
similarity index 99%
rename from compiler/src/main/java/dagger/internal/codegen/Util.java
rename to compiler/src/main/java/dagger1/internal/codegen/Util.java
index 112fb8da8..63600bab8 100644
--- a/compiler/src/main/java/dagger/internal/codegen/Util.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/Util.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.google.common.base.Joiner;
 import com.squareup.javapoet.AnnotationSpec;
@@ -23,8 +23,8 @@
 import com.squareup.javapoet.ParameterizedTypeName;
 import com.squareup.javapoet.TypeName;
 import com.squareup.javapoet.WildcardTypeName;
-import dagger.internal.Binding;
-import dagger.internal.Keys;
+import dagger1.internal.Binding;
+import dagger1.internal.Keys;
 import java.lang.reflect.Method;
 import java.util.Arrays;
 import java.util.LinkedHashMap;
diff --git a/compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java b/compiler/src/main/java/dagger1/internal/codegen/ValidationProcessor.java
similarity index 97%
rename from compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java
rename to compiler/src/main/java/dagger1/internal/codegen/ValidationProcessor.java
index 578bdb3b9..5f35ac4bf 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java
+++ b/compiler/src/main/java/dagger1/internal/codegen/ValidationProcessor.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
-import dagger.Module;
-import dagger.Provides;
-import dagger.internal.codegen.Util.CodeGenerationIncompleteException;
+import dagger1.Module;
+import dagger1.Provides;
+import dagger1.internal.codegen.Util.CodeGenerationIncompleteException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.LinkedHashMap;
@@ -38,7 +38,7 @@
 import javax.lang.model.element.TypeElement;
 import javax.tools.Diagnostic;
 
-import static dagger.internal.codegen.Util.elementToString;
+import static dagger1.internal.codegen.Util.elementToString;
 import static javax.lang.model.element.ElementKind.CONSTRUCTOR;
 import static javax.lang.model.element.ElementKind.METHOD;
 import static javax.lang.model.element.Modifier.ABSTRACT;
diff --git a/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor b/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor
index 97f5f1471..0b21793fc 100644
--- a/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor
+++ b/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor
@@ -1,4 +1,4 @@
-dagger.internal.codegen.ValidationProcessor
-dagger.internal.codegen.InjectAdapterProcessor
-dagger.internal.codegen.ModuleAdapterProcessor
-dagger.internal.codegen.GraphAnalysisProcessor
+dagger1.internal.codegen.ValidationProcessor
+dagger1.internal.codegen.InjectAdapterProcessor
+dagger1.internal.codegen.ModuleAdapterProcessor
+dagger1.internal.codegen.GraphAnalysisProcessor
diff --git a/compiler/src/test/java/dagger/internal/codegen/DotWriterTest.java b/compiler/src/test/java/dagger/internal/codegen/DotWriterTest.java
index cb17fc612..84f0fb97c 100644
--- a/compiler/src/test/java/dagger/internal/codegen/DotWriterTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/DotWriterTest.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import java.io.IOException;
 import java.io.StringWriter;
diff --git a/compiler/src/test/java/dagger1/internal/codegen/DotWriterTest.java b/compiler/src/test/java/dagger1/internal/codegen/DotWriterTest.java
new file mode 100644
index 000000000..84f0fb97c
--- /dev/null
+++ b/compiler/src/test/java/dagger1/internal/codegen/DotWriterTest.java
@@ -0,0 +1,97 @@
+/**
+ * Copyright (C) 2012 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package dagger1.internal.codegen;
+
+import java.io.IOException;
+import java.io.StringWriter;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.JUnit4;
+
+import static com.google.common.truth.Truth.assertThat;
+
+@RunWith(JUnit4.class)
+public final class DotWriterTest {
+  private final StringWriter stringWriter = new StringWriter();
+  private final GraphVizWriter dotWriter = new GraphVizWriter(stringWriter);
+
+  @Test public void graphWithAttributes() throws IOException {
+    dotWriter.beginGraph();
+    dotWriter.edge("CoffeeMaker", "Heater", "style", "dotted", "color", "red");
+    dotWriter.edge("CoffeeMaker", "Pump");
+    dotWriter.node("CoffeeMaker", "shape", "box");
+    dotWriter.endGraph();
+    assertGraph(""
+        + "digraph G1 {\n"
+        + "  CoffeeMaker -> Heater [style=dotted;color=red];\n"
+        + "  CoffeeMaker -> Pump;\n"
+        + "  CoffeeMaker [shape=box];\n"
+        + "}\n");
+  }
+
+  @Test public void subgraph() throws IOException {
+    dotWriter.beginGraph("label", "10\" tall");
+    dotWriter.beginGraph("style", "filled", "color", "lightgrey");
+    dotWriter.edge("ElectricHeater", "Heater");
+    dotWriter.endGraph();
+    dotWriter.edge("CoffeeMaker", "Heater");
+    dotWriter.edge("CoffeeMaker", "Pump");
+    dotWriter.endGraph();
+    assertGraph(""
+        + "digraph G1 {\n"
+        + "  label = \"10\\\" tall\";\n"
+        + "  subgraph cluster2 {\n"
+        + "    style = filled;\n"
+        + "    color = lightgrey;\n"
+        + "    ElectricHeater -> Heater;\n"
+        + "  }\n"
+        + "  CoffeeMaker -> Heater;\n"
+        + "  CoffeeMaker -> Pump;\n"
+        + "}\n");
+  }
+
+  @Test public void defaultAttributes() throws IOException {
+    dotWriter.beginGraph();
+    dotWriter.nodeDefaults("color", "red");
+    dotWriter.edgeDefaults("style", "dotted");
+    dotWriter.edge("CoffeeMaker", "Heater");
+    dotWriter.endGraph();
+    assertGraph(""
+        + "digraph G1 {\n"
+        + "  node [color=red];\n"
+        + "  edge [style=dotted];\n"
+        + "  CoffeeMaker -> Heater;\n"
+        + "}\n");
+  }
+
+  @Test public void invalidNodeNames() throws IOException {
+    dotWriter.beginGraph();
+    dotWriter.edge("a.b", "a c");
+    dotWriter.edge("a c", "a_d");
+    dotWriter.endGraph();
+    assertGraph(""
+        + "digraph G1 {\n"
+        + "  n2 [label=\"a.b\"];\n"
+        + "  n3 [label=\"a c\"];\n"
+        + "  n2 -> n3;\n"
+        + "  n3 -> a_d;\n"
+        + "}\n");
+  }
+
+  private void assertGraph(String expected) {
+    assertThat(stringWriter.toString()).isEqualTo(expected);
+  }
+}
diff --git a/compiler/src/test/java/dagger/internal/codegen/GraphAnalysisLoaderTest.java b/compiler/src/test/java/dagger1/internal/codegen/GraphAnalysisLoaderTest.java
similarity index 99%
rename from compiler/src/test/java/dagger/internal/codegen/GraphAnalysisLoaderTest.java
rename to compiler/src/test/java/dagger1/internal/codegen/GraphAnalysisLoaderTest.java
index 4a258bd53..7ca4f5bf2 100644
--- a/compiler/src/test/java/dagger/internal/codegen/GraphAnalysisLoaderTest.java
+++ b/compiler/src/test/java/dagger1/internal/codegen/GraphAnalysisLoaderTest.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
 import com.google.common.collect.ImmutableList;
 import java.util.ArrayList;
@@ -99,5 +99,5 @@
     Mockito.validateMockitoUsage();
   }
 
-  
+
 }
diff --git a/compiler/src/test/java/dagger/internal/codegen/GraphVisualizerTest.java b/compiler/src/test/java/dagger1/internal/codegen/GraphVisualizerTest.java
similarity index 97%
rename from compiler/src/test/java/dagger/internal/codegen/GraphVisualizerTest.java
rename to compiler/src/test/java/dagger1/internal/codegen/GraphVisualizerTest.java
index 319c15c11..bd587b225 100644
--- a/compiler/src/test/java/dagger/internal/codegen/GraphVisualizerTest.java
+++ b/compiler/src/test/java/dagger1/internal/codegen/GraphVisualizerTest.java
@@ -13,9 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.codegen;
+package dagger1.internal.codegen;
 
-import dagger.internal.Keys;
+import dagger1.internal.Keys;
 import java.lang.reflect.Field;
 import java.util.Map;
 import java.util.Set;
diff --git a/compiler/src/test/java/dagger/testing/it/BuildLogValidator.java b/compiler/src/test/java/dagger1/testing/it/BuildLogValidator.java
similarity index 99%
rename from compiler/src/test/java/dagger/testing/it/BuildLogValidator.java
rename to compiler/src/test/java/dagger1/testing/it/BuildLogValidator.java
index 9eb15cfe4..7511440e1 100644
--- a/compiler/src/test/java/dagger/testing/it/BuildLogValidator.java
+++ b/compiler/src/test/java/dagger1/testing/it/BuildLogValidator.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.testing.it;
+package dagger1.testing.it;
 
 import java.io.File;
 import java.io.FileInputStream;
diff --git a/compiler/src/test/java/dagger/tests/integration/ProcessorTestUtils.java b/compiler/src/test/java/dagger1/tests/integration/ProcessorTestUtils.java
similarity index 79%
rename from compiler/src/test/java/dagger/tests/integration/ProcessorTestUtils.java
rename to compiler/src/test/java/dagger1/tests/integration/ProcessorTestUtils.java
index 12ff02dda..2f03eb5dc 100644
--- a/compiler/src/test/java/dagger/tests/integration/ProcessorTestUtils.java
+++ b/compiler/src/test/java/dagger1/tests/integration/ProcessorTestUtils.java
@@ -14,12 +14,12 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration;
+package dagger1.tests.integration;
 
-import dagger.internal.codegen.GraphAnalysisProcessor;
-import dagger.internal.codegen.InjectAdapterProcessor;
-import dagger.internal.codegen.ModuleAdapterProcessor;
-import dagger.internal.codegen.ValidationProcessor;
+import dagger1.internal.codegen.GraphAnalysisProcessor;
+import dagger1.internal.codegen.InjectAdapterProcessor;
+import dagger1.internal.codegen.ModuleAdapterProcessor;
+import dagger1.internal.codegen.ValidationProcessor;
 import java.util.Arrays;
 import javax.annotation.processing.Processor;
 
diff --git a/compiler/src/test/java/dagger/tests/integration/codegen/GenericInjectAdapterGenerationTest.java b/compiler/src/test/java/dagger1/tests/integration/codegen/GenericInjectAdapterGenerationTest.java
similarity index 93%
rename from compiler/src/test/java/dagger/tests/integration/codegen/GenericInjectAdapterGenerationTest.java
rename to compiler/src/test/java/dagger1/tests/integration/codegen/GenericInjectAdapterGenerationTest.java
index 90e85c6af..2f12a4184 100644
--- a/compiler/src/test/java/dagger/tests/integration/codegen/GenericInjectAdapterGenerationTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/codegen/GenericInjectAdapterGenerationTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.codegen;
+package dagger1.tests.integration.codegen;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -24,13 +24,13 @@
 
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 @RunWith(JUnit4.class)
 public final class GenericInjectAdapterGenerationTest {
 
   @Test public void basicInjectAdapter() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Basic", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Inject;\n"
         + "class Basic {\n"
         + "  static class Simple {\n"
@@ -50,8 +50,8 @@
 
     JavaFileObject expectedInjectAdapterC =
         JavaFileObjects.forSourceString("Basic$B$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
-            + "import dagger.internal.Linker;\n"
+            + "import dagger1.internal.Binding;\n"
+            + "import dagger1.internal.Linker;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.SuppressWarnings;\n"
             + "import java.util.Set;\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/codegen/InjectAdapterGenerationTest.java b/compiler/src/test/java/dagger1/tests/integration/codegen/InjectAdapterGenerationTest.java
similarity index 93%
rename from compiler/src/test/java/dagger/tests/integration/codegen/InjectAdapterGenerationTest.java
rename to compiler/src/test/java/dagger1/tests/integration/codegen/InjectAdapterGenerationTest.java
index 1fc8cb29f..273209e20 100644
--- a/compiler/src/test/java/dagger/tests/integration/codegen/InjectAdapterGenerationTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/codegen/InjectAdapterGenerationTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.codegen;
+package dagger1.tests.integration.codegen;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -24,13 +24,13 @@
 
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 
 @RunWith(JUnit4.class)
 public final class InjectAdapterGenerationTest {
   @Test public void basicInjectAdapter() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Basic", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Inject;\n"
         + "class Basic {\n"
         + "  static class A { @Inject A() { } }\n"
@@ -45,7 +45,7 @@
 
     JavaFileObject expectedModuleAdapter =
         JavaFileObjects.forSourceString("Basic$AModule$$ModuleAdapter", ""
-            + "import dagger.internal.ModuleAdapter;\n"
+            + "import dagger1.internal.ModuleAdapter;\n"
             + "import java.lang.Class;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.String;\n"
@@ -67,7 +67,7 @@
 
     JavaFileObject expectedInjectAdapterA =
         JavaFileObjects.forSourceString("Basic$A$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
+            + "import dagger1.internal.Binding;\n"
             + "import java.lang.Override;\n"
             + "public final class Basic$A$$InjectAdapter\n"
             + "    extends Binding<Basic.A> {\n"
@@ -83,7 +83,7 @@
 
     JavaFileObject expectedInjectAdapterFooBar =
         JavaFileObjects.forSourceString("Basic$Foo$Bar$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
+            + "import dagger1.internal.Binding;\n"
             + "import java.lang.Override;\n"
             + "public final class Basic$Foo$Bar$$InjectAdapter\n"
             + "    extends Binding<Basic.Foo$Bar> {\n"
@@ -100,7 +100,7 @@
 
     JavaFileObject expectedInjectAdapterFooBarBaz =
         JavaFileObjects.forSourceString("Basic$Foo$Bar$Baz$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
+            + "import dagger1.internal.Binding;\n"
             + "import java.lang.Override;\n"
             + "public final class Basic$Foo$Bar$Baz$$InjectAdapter\n"
             + "    extends Binding<Basic.Foo$Bar.Baz> {\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/codegen/ModuleAdapterGenerationTest.java b/compiler/src/test/java/dagger1/tests/integration/codegen/ModuleAdapterGenerationTest.java
similarity index 91%
rename from compiler/src/test/java/dagger/tests/integration/codegen/ModuleAdapterGenerationTest.java
rename to compiler/src/test/java/dagger1/tests/integration/codegen/ModuleAdapterGenerationTest.java
index a5ab919d9..871dfccc0 100644
--- a/compiler/src/test/java/dagger/tests/integration/codegen/ModuleAdapterGenerationTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/codegen/ModuleAdapterGenerationTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.codegen;
+package dagger1.tests.integration.codegen;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -25,13 +25,13 @@
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 import static java.util.Arrays.asList;
 
 @RunWith(JUnit4.class)
 public final class ModuleAdapterGenerationTest {
   /**
-   * Shows current behavior for a {@link dagger.Provides provides method}
+   * Shows current behavior for a {@link dagger1.Provides provides method}
    * used to supply an injected ctor parameter.
    *
    * <ul>
@@ -42,13 +42,13 @@
    *   <li>{@code InjectAdapter} contains a field for the parameter binding,
    *   referenced in {@code getDependencies} and set on {@code attach}</li>
    *   <li>On {@code get}, the injected constructor is called with the value of
-   *   {@link dagger.internal.Binding#get}</li>
+   *   {@link dagger1.internal.Binding#get}</li>
    * </ul>
    */
   @Test public void providerForCtorInjection() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Field", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Inject;\n"
         + "class Field {\n"
         + "  static class A { final String name; @Inject A(String name) { this.name = name; }}\n"
@@ -59,9 +59,9 @@
 
     JavaFileObject expectedModuleAdapter =
         JavaFileObjects.forSourceString("Field$AModule$$ModuleAdapter", ""
-            + "import dagger.internal.BindingsGroup;\n"
-            + "import dagger.internal.ModuleAdapter;\n"
-            + "import dagger.internal.ProvidesBinding;\n"
+            + "import dagger1.internal.BindingsGroup;\n"
+            + "import dagger1.internal.ModuleAdapter;\n"
+            + "import dagger1.internal.ProvidesBinding;\n"
             + "import java.lang.Class;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.String;\n"
@@ -98,8 +98,8 @@
 
     JavaFileObject expectedInjectAdapter =
         JavaFileObjects.forSourceString("Field$A$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
-            + "import dagger.internal.Linker;\n"
+            + "import dagger1.internal.Binding;\n"
+            + "import dagger1.internal.Linker;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.String;\n"
             + "import java.lang.SuppressWarnings;\n"
@@ -137,8 +137,8 @@
 
   @Test public void injectsMembersInjectedAndProvidedAndConstructedTypes() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Field", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Inject;\n"
         + "class Field {\n"
         + "  static class A { final String name; @Inject A(String name) { this.name = name; }}\n"
@@ -150,9 +150,9 @@
 
     JavaFileObject expectedModuleAdapter =
         JavaFileObjects.forSourceString("Field$AModule$$ModuleAdapter", ""
-            + "import dagger.internal.BindingsGroup;\n"
-            + "import dagger.internal.ModuleAdapter;\n"
-            + "import dagger.internal.ProvidesBinding;\n"
+            + "import dagger1.internal.BindingsGroup;\n"
+            + "import dagger1.internal.ModuleAdapter;\n"
+            + "import dagger1.internal.ProvidesBinding;\n"
             + "import java.lang.Class;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.String;\n"
@@ -188,8 +188,8 @@
 
     JavaFileObject expectedInjectAdapterA =
         JavaFileObjects.forSourceString("Field$A$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
-            + "import dagger.internal.Linker;\n"
+            + "import dagger1.internal.Binding;\n"
+            + "import dagger1.internal.Linker;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.String;\n"
             + "import java.lang.SuppressWarnings;\n"
@@ -218,8 +218,8 @@
 
     JavaFileObject expectedInjectAdapterB =
         JavaFileObjects.forSourceString("Field$B$$InjectAdapter", ""
-            + "import dagger.internal.Binding;\n"
-            + "import dagger.internal.Linker;\n"
+            + "import dagger1.internal.Binding;\n"
+            + "import dagger1.internal.Linker;\n"
             + "import java.lang.Override;\n"
             + "import java.lang.String;\n"
             + "import java.lang.SuppressWarnings;\n"
@@ -272,8 +272,8 @@
     );
 
     JavaFileObject module = JavaFileObjects.forSourceString("BModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Inject;\n"
         + "@Module(injects = B.class)\n"
         + "class BModule {\n"
@@ -291,8 +291,8 @@
 
   @Test public void duplicateInjectsFails() {
     JavaFileObject module = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Inject;\n"
         + "class A {}\n"
         + "@Module(injects = { A.class, A.class })\n"
@@ -309,8 +309,8 @@
 
   @Test public void duplicateIncludesFails() {
     JavaFileObject module = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Inject;\n"
         + "@Module\n"
         + "class AModule {}\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/operation/FailureModeErrorsTest.java b/compiler/src/test/java/dagger1/tests/integration/operation/FailureModeErrorsTest.java
similarity index 86%
rename from compiler/src/test/java/dagger/tests/integration/operation/FailureModeErrorsTest.java
rename to compiler/src/test/java/dagger1/tests/integration/operation/FailureModeErrorsTest.java
index 4938470c5..5a6599db5 100644
--- a/compiler/src/test/java/dagger/tests/integration/operation/FailureModeErrorsTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/operation/FailureModeErrorsTest.java
@@ -14,10 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.operation;
+package dagger1.tests.integration.operation;
 
-import dagger.Module;
-import dagger.ObjectGraph;
+import dagger1.Module;
+import dagger1.ObjectGraph;
 import javax.inject.Inject;
 import javax.inject.Qualifier;
 import org.junit.Test;
@@ -49,7 +49,7 @@
       assertThat(e.getMessage()).contains(
           "java.lang.String[] is a generic class or an array and can only be bound with "
           + "concrete type parameter(s) in a @Provides method. required by class "
-          + "dagger.tests.integration.operation.FailureModeErrorsTest$ArrayFoo");
+          + "dagger1.tests.integration.operation.FailureModeErrorsTest$ArrayFoo");
     }
   }
 
@@ -68,9 +68,9 @@
       fail("Should have thrown.");
     } catch (IllegalStateException e) {
       assertThat(e.getMessage()).contains(
-          "@dagger.tests.integration.operation.FailureModeErrorsTest$MyFoo()/java.lang.String "
+          "@dagger1.tests.integration.operation.FailureModeErrorsTest$MyFoo()/java.lang.String "
           + "is a @Qualifier-annotated type and must be bound by a @Provides method. required by "
-          + "class dagger.tests.integration.operation.FailureModeErrorsTest$QualifyingFoo");
+          + "class dagger1.tests.integration.operation.FailureModeErrorsTest$QualifyingFoo");
     }
   }
 }
diff --git a/compiler/src/test/java/dagger/tests/integration/operation/PrimitiveInjectionTest.java b/compiler/src/test/java/dagger1/tests/integration/operation/PrimitiveInjectionTest.java
similarity index 95%
rename from compiler/src/test/java/dagger/tests/integration/operation/PrimitiveInjectionTest.java
rename to compiler/src/test/java/dagger1/tests/integration/operation/PrimitiveInjectionTest.java
index 569a4a0ca..660705cf6 100644
--- a/compiler/src/test/java/dagger/tests/integration/operation/PrimitiveInjectionTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/operation/PrimitiveInjectionTest.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.operation;
+package dagger1.tests.integration.operation;
 
-import dagger.Module;
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/compiler/src/test/java/dagger/tests/integration/operation/SimpleInjectionTest.java b/compiler/src/test/java/dagger1/tests/integration/operation/SimpleInjectionTest.java
similarity index 95%
rename from compiler/src/test/java/dagger/tests/integration/operation/SimpleInjectionTest.java
rename to compiler/src/test/java/dagger1/tests/integration/operation/SimpleInjectionTest.java
index 46274f876..59705f3c3 100644
--- a/compiler/src/test/java/dagger/tests/integration/operation/SimpleInjectionTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/operation/SimpleInjectionTest.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.operation;
+package dagger1.tests.integration.operation;
 
-import dagger.Module;
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/compiler/src/test/java/dagger/tests/integration/validation/CyclicDependencyTest.java b/compiler/src/test/java/dagger1/tests/integration/validation/CyclicDependencyTest.java
similarity index 92%
rename from compiler/src/test/java/dagger/tests/integration/validation/CyclicDependencyTest.java
rename to compiler/src/test/java/dagger1/tests/integration/validation/CyclicDependencyTest.java
index 881f3b47d..20a830abc 100644
--- a/compiler/src/test/java/dagger/tests/integration/validation/CyclicDependencyTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/validation/CyclicDependencyTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.validation;
+package dagger1.tests.integration.validation;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -24,14 +24,14 @@
 
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 
 @RunWith(JUnit4.class)
 public class CyclicDependencyTest {
 
   @Test public void cyclicDepsWithInjectables() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("CyclicDeps", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Inject;\n"
         + "class CyclicDeps {\n"
         + "  static class Foo {\n"
@@ -57,8 +57,8 @@
 
   @Test public void cyclicDepsWithProvidesMethods() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("CyclicDeps", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "class CyclicDeps {\n"
         + "  static class A { }\n"
         + "  static class B { }\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/validation/CyclicModuleIncludesTest.java b/compiler/src/test/java/dagger1/tests/integration/validation/CyclicModuleIncludesTest.java
similarity index 95%
rename from compiler/src/test/java/dagger/tests/integration/validation/CyclicModuleIncludesTest.java
rename to compiler/src/test/java/dagger1/tests/integration/validation/CyclicModuleIncludesTest.java
index fbfe5b5ef..43f62bb65 100644
--- a/compiler/src/test/java/dagger/tests/integration/validation/CyclicModuleIncludesTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/validation/CyclicModuleIncludesTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.validation;
+package dagger1.tests.integration.validation;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -24,13 +24,13 @@
 
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 
 @RunWith(JUnit4.class)
 public class CyclicModuleIncludesTest {
   private final JavaFileObject javaFile =
       JavaFileObjects.forSourceString("CyclicModules", ""
-          + "import dagger.Module;\n"
+          + "import dagger1.Module;\n"
           + "class CyclicModules {\n"
           + "  @Module(includes = SelfReferencingModule.class)\n"
           + "  static class SelfReferencingModule { }\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/validation/GeneratedTypesNotReadyTest.java b/compiler/src/test/java/dagger1/tests/integration/validation/GeneratedTypesNotReadyTest.java
similarity index 93%
rename from compiler/src/test/java/dagger/tests/integration/validation/GeneratedTypesNotReadyTest.java
rename to compiler/src/test/java/dagger1/tests/integration/validation/GeneratedTypesNotReadyTest.java
index 5042b2f05..cc7bf6537 100644
--- a/compiler/src/test/java/dagger/tests/integration/validation/GeneratedTypesNotReadyTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/validation/GeneratedTypesNotReadyTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.validation;
+package dagger1.tests.integration.validation;
 
 import com.google.common.base.Joiner;
 import com.google.testing.compile.JavaFileObjects;
@@ -33,7 +33,7 @@
 
 import static com.google.common.collect.Iterables.concat;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 import static java.util.Arrays.asList;
 import static com.google.common.truth.Truth.assertAbout;
 
@@ -59,8 +59,8 @@
   @Test public void withstandsMissingTypeReferencedInInjects() {
     // TODO(cgruber): remove Foo (interface) from this when injects= analysis is fixed.
     JavaFileObject module = JavaFileObjects.forSourceString("FooModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import myPackage.Foo;\n"
         + "@Module(injects = { Main.class, myPackage.FooImpl.class })\n"
         + "class FooModule {\n"
@@ -78,8 +78,8 @@
 
   @Test public void withstandsMissingTypeReferencedInsideModule() {
     JavaFileObject module = JavaFileObjects.forSourceString("FooModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import myPackage.Foo;\n"
         + "@Module(injects = { Main.class })\n"
         + "class FooModule {\n"
@@ -103,8 +103,8 @@
         + "}\n"
     );
     JavaFileObject module = JavaFileObjects.forSourceString("FooModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "@Module(injects = { Main.class })\n"
         + "class FooModule {\n"
         + "  @Provides myPackage.FooImpl provideFoo() {\n"
@@ -126,8 +126,8 @@
         "  @Inject myPackage.FooImpl2<String> f;",
         "}"));
     JavaFileObject module = JavaFileObjects.forSourceString("FooModule", Joiner.on("\n").join(
-        "import dagger.Module;",
-        "import dagger.Provides;",
+        "import dagger1.Module;",
+        "import dagger1.Provides;",
         "@Module(injects = { Main.class })",
         "class FooModule {",
         "  @Provides myPackage.FooImpl2<String> provideFoo() {",
@@ -155,8 +155,8 @@
         + "}\n"
     );
     JavaFileObject module = JavaFileObjects.forSourceString("FooModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "@Module(injects = { Main.class })\n"
         + "class FooModule {\n"
         + "}\n"
@@ -170,8 +170,8 @@
 
   @Test public void verifyFooImplGeneratorIsCompilingWithoutDagger() {
     JavaFileObject module = JavaFileObjects.forSourceString("FooModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import myPackage.Foo;\n"
         + "@Module(injects = { Main.class })\n"
         + "class FooModule {\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/validation/LibraryModuleTest.java b/compiler/src/test/java/dagger1/tests/integration/validation/LibraryModuleTest.java
similarity index 89%
rename from compiler/src/test/java/dagger/tests/integration/validation/LibraryModuleTest.java
rename to compiler/src/test/java/dagger1/tests/integration/validation/LibraryModuleTest.java
index de55a7807..7f167a3d7 100644
--- a/compiler/src/test/java/dagger/tests/integration/validation/LibraryModuleTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/validation/LibraryModuleTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.validation;
+package dagger1.tests.integration.validation;
 
 import com.google.testing.compile.JavaFileObjects;
 import java.util.Arrays;
@@ -26,14 +26,14 @@
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 
 @RunWith(JUnit4.class)
 public final class LibraryModuleTest {
   @Test public void unusedProviderMethodsPassOnLibrary() {
     JavaFileObject source = JavaFileObjects.forSourceString("Library", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import java.lang.Override;\n"
         + "@Module(library = true)\n"
         + "class TestModule {\n"
@@ -50,8 +50,8 @@
 
   @Test public void unusedProviderMethodsFailOnNonLibrary() {
     JavaFileObject source = JavaFileObjects.forSourceString("Library", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import java.lang.Override;\n"
         + "@Module(library = false)\n"
         + "class TestModule {\n"
@@ -73,8 +73,8 @@
   @Test public void injectsOfInterfaceMakesProvidesBindingNotAnOrphan() {
     JavaFileObject foo = JavaFileObjects.forSourceString("Foo", "interface Foo {}");
     JavaFileObject module = JavaFileObjects.forSourceString("TestModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Singleton;\n"
         + "@Module(injects = Foo.class, library = false)\n"
         + "class TestModule {\n"
@@ -92,8 +92,8 @@
   @Test public void injectsOfClassMakesProvidesBindingNotAnOrphan() {
     JavaFileObject foo = JavaFileObjects.forSourceString("Foo", "class Foo {}");
     JavaFileObject module = JavaFileObjects.forSourceString("TestModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Singleton;\n"
         + "@Module(injects = Foo.class, library = false)\n"
         + "class TestModule {\n"
diff --git a/compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java b/compiler/src/test/java/dagger1/tests/integration/validation/ScopeAnnotationUseTest.java
similarity index 95%
rename from compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java
rename to compiler/src/test/java/dagger1/tests/integration/validation/ScopeAnnotationUseTest.java
index 54886e598..2f56a19da 100644
--- a/compiler/src/test/java/dagger/tests/integration/validation/ScopeAnnotationUseTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/validation/ScopeAnnotationUseTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.validation;
+package dagger1.tests.integration.validation;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -25,7 +25,7 @@
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 import static java.util.Arrays.asList;
 
 /**
@@ -63,8 +63,8 @@
 
   @Test public void compileSucceedsScopeOnProvidesMethod() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Singleton;\n"
         + "@Module(library = true, injects = String.class)\n"
         + "class Test {\n"
@@ -151,7 +151,7 @@
 
   @Test public void compileFailsWithScopeOnInterface() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Singleton;\n"
         + "class Test {\n"
         + "  @Module(injects = TestType.class) class TestModule { }\n"
@@ -171,7 +171,7 @@
 
   @Test public void compileFailsWithScopeOnAbstractClass() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Singleton;\n"
         + "class Test {\n"
         + "  @Module(injects = TestType.class) class TestModule { }\n"
@@ -191,7 +191,7 @@
 
   @Test public void compileFailsWithScopeOnField() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Inject;\n"
         + "import javax.inject.Singleton;\n"
         + "class Test {\n"
@@ -213,8 +213,8 @@
 
   @Test public void compileFailsWithScopeOnMethodParameter() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Singleton;\n"
         + "@Module(library = true, injects = String.class)\n"
         + "class Test {\n"
@@ -243,8 +243,8 @@
     );
 
     JavaFileObject module = JavaFileObjects.forSourceString("MyModule", ""
-        + "import dagger.Module;\n"
-        + "import dagger.Provides;\n"
+        + "import dagger1.Module;\n"
+        + "import dagger1.Provides;\n"
         + "import javax.inject.Singleton;\n"
         + "@Module(library = true, injects = Injectable.class)\n"
         + "class MyModule {\n"
@@ -275,7 +275,7 @@
 
   @Test public void compileFailsWithScopeOnConstructor() {
     JavaFileObject sourceFile = JavaFileObjects.forSourceString("Test", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Inject;\n"
         + "import javax.inject.Singleton;\n"
         + "class Test {\n"
@@ -300,4 +300,3 @@
         .in(sourceFile).onLine(6).atColumn(33);
   }
 }
-
diff --git a/compiler/src/test/java/dagger/tests/integration/validation/SimpleMissingDependencyTest.java b/compiler/src/test/java/dagger1/tests/integration/validation/SimpleMissingDependencyTest.java
similarity index 92%
rename from compiler/src/test/java/dagger/tests/integration/validation/SimpleMissingDependencyTest.java
rename to compiler/src/test/java/dagger1/tests/integration/validation/SimpleMissingDependencyTest.java
index 4cb8e70b8..9d4706170 100644
--- a/compiler/src/test/java/dagger/tests/integration/validation/SimpleMissingDependencyTest.java
+++ b/compiler/src/test/java/dagger1/tests/integration/validation/SimpleMissingDependencyTest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.tests.integration.validation;
+package dagger1.tests.integration.validation;
 
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
@@ -24,14 +24,14 @@
 
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
-import static dagger.tests.integration.ProcessorTestUtils.daggerProcessors;
+import static dagger1.tests.integration.ProcessorTestUtils.daggerProcessors;
 
 @RunWith(JUnit4.class)
 public class SimpleMissingDependencyTest {
 
   @Test public void missingDependency() {
     JavaFileObject file = JavaFileObjects.forSourceString("MissingDep", ""
-        + "import dagger.Module;\n"
+        + "import dagger1.Module;\n"
         + "import javax.inject.Inject;\n"
         + "class MissingDep {\n"
         + "  @Inject Dependency dep;\n"
diff --git a/core/pom.xml b/core/pom.xml
index f89a10761..13a0bacd9 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -68,7 +68,7 @@
       <plugin>
         <artifactId>maven-javadoc-plugin</artifactId>
         <configuration>
-          <excludePackageNames>dagger.internal:dagger.internal.*</excludePackageNames>
+          <excludePackageNames>dagger1.internal:dagger1.internal.*</excludePackageNames>
         </configuration>
       </plugin>
       <plugin>
diff --git a/core/src/main/java/dagger/Lazy.java b/core/src/main/java/dagger1/Lazy.java
similarity index 100%
rename from core/src/main/java/dagger/Lazy.java
rename to core/src/main/java/dagger1/Lazy.java
diff --git a/core/src/main/java/dagger/MembersInjector.java b/core/src/main/java/dagger1/MembersInjector.java
similarity index 100%
rename from core/src/main/java/dagger/MembersInjector.java
rename to core/src/main/java/dagger1/MembersInjector.java
diff --git a/core/src/main/java/dagger/Module.java b/core/src/main/java/dagger1/Module.java
similarity index 100%
rename from core/src/main/java/dagger/Module.java
rename to core/src/main/java/dagger1/Module.java
diff --git a/core/src/main/java/dagger/ObjectGraph.java b/core/src/main/java/dagger1/ObjectGraph.java
similarity index 96%
rename from core/src/main/java/dagger/ObjectGraph.java
rename to core/src/main/java/dagger1/ObjectGraph.java
index d8b8f5a7e..7c0e3d30e 100644
--- a/core/src/main/java/dagger/ObjectGraph.java
+++ b/core/src/main/java/dagger1/ObjectGraph.java
@@ -16,18 +16,18 @@
  */
 package dagger;
 
-import dagger.internal.Binding;
-import dagger.internal.BindingsGroup;
-import dagger.internal.FailoverLoader;
-import dagger.internal.Keys;
-import dagger.internal.Linker;
-import dagger.internal.Loader;
-import dagger.internal.ModuleAdapter;
-import dagger.internal.Modules;
-import dagger.internal.ProblemDetector;
-import dagger.internal.SetBinding;
-import dagger.internal.StaticInjection;
-import dagger.internal.ThrowingErrorHandler;
+import dagger1.internal.Binding;
+import dagger1.internal.BindingsGroup;
+import dagger1.internal.FailoverLoader;
+import dagger1.internal.Keys;
+import dagger1.internal.Linker;
+import dagger1.internal.Loader;
+import dagger1.internal.ModuleAdapter;
+import dagger1.internal.Modules;
+import dagger1.internal.ProblemDetector;
+import dagger1.internal.SetBinding;
+import dagger1.internal.StaticInjection;
+import dagger1.internal.ThrowingErrorHandler;
 import java.util.ArrayList;
 import java.util.LinkedHashMap;
 import java.util.List;
diff --git a/core/src/main/java/dagger/Provides.java b/core/src/main/java/dagger1/Provides.java
similarity index 100%
rename from core/src/main/java/dagger/Provides.java
rename to core/src/main/java/dagger1/Provides.java
diff --git a/core/src/main/java/dagger/internal/ArrayQueue.java b/core/src/main/java/dagger1/internal/ArrayQueue.java
similarity index 99%
rename from core/src/main/java/dagger/internal/ArrayQueue.java
rename to core/src/main/java/dagger1/internal/ArrayQueue.java
index 690b6d9e5..f6bbd7c95 100644
--- a/core/src/main/java/dagger/internal/ArrayQueue.java
+++ b/core/src/main/java/dagger1/internal/ArrayQueue.java
@@ -5,7 +5,7 @@
  * Adapted from https://android.googlesource.com/platform/libcore/+
  *     android-4.2.2_r1/luni/src/main/java/java/util/ArrayDeque.java
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.lang.reflect.Array;
 import java.util.AbstractCollection;
diff --git a/core/src/main/java/dagger/internal/Binding.java b/core/src/main/java/dagger1/internal/Binding.java
similarity index 98%
rename from core/src/main/java/dagger/internal/Binding.java
rename to core/src/main/java/dagger1/internal/Binding.java
index 7fb062dd3..ccd0c3ff3 100644
--- a/core/src/main/java/dagger/internal/Binding.java
+++ b/core/src/main/java/dagger1/internal/Binding.java
@@ -13,9 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.MembersInjector;
+import dagger1.MembersInjector;
 import java.util.Set;
 import javax.inject.Provider;
 
diff --git a/core/src/main/java/dagger/internal/BindingsGroup.java b/core/src/main/java/dagger1/internal/BindingsGroup.java
similarity index 98%
rename from core/src/main/java/dagger/internal/BindingsGroup.java
rename to core/src/main/java/dagger1/internal/BindingsGroup.java
index 861f7de86..480a12539 100644
--- a/core/src/main/java/dagger/internal/BindingsGroup.java
+++ b/core/src/main/java/dagger1/internal/BindingsGroup.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.util.LinkedHashMap;
 import java.util.Map;
diff --git a/core/src/main/java/dagger/internal/BuiltInBinding.java b/core/src/main/java/dagger1/internal/BuiltInBinding.java
similarity index 98%
rename from core/src/main/java/dagger/internal/BuiltInBinding.java
rename to core/src/main/java/dagger1/internal/BuiltInBinding.java
index 0991c7a97..fc54c75e8 100644
--- a/core/src/main/java/dagger/internal/BuiltInBinding.java
+++ b/core/src/main/java/dagger1/internal/BuiltInBinding.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 
 /**
diff --git a/core/src/main/java/dagger/internal/FailoverLoader.java b/core/src/main/java/dagger1/internal/FailoverLoader.java
similarity index 89%
rename from core/src/main/java/dagger/internal/FailoverLoader.java
rename to core/src/main/java/dagger1/internal/FailoverLoader.java
index a9fb26031..61d595ed8 100644
--- a/core/src/main/java/dagger/internal/FailoverLoader.java
+++ b/core/src/main/java/dagger1/internal/FailoverLoader.java
@@ -14,15 +14,15 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 
-import dagger.internal.loaders.ReflectiveAtInjectBinding;
-import dagger.internal.loaders.ReflectiveStaticInjection;
+import dagger1.internal.loaders.ReflectiveAtInjectBinding;
+import dagger1.internal.loaders.ReflectiveStaticInjection;
 
-import static dagger.internal.loaders.GeneratedAdapters.INJECT_ADAPTER_SUFFIX;
-import static dagger.internal.loaders.GeneratedAdapters.MODULE_ADAPTER_SUFFIX;
-import static dagger.internal.loaders.GeneratedAdapters.STATIC_INJECTION_SUFFIX;
+import static dagger1.internal.loaders.GeneratedAdapters.INJECT_ADAPTER_SUFFIX;
+import static dagger1.internal.loaders.GeneratedAdapters.MODULE_ADAPTER_SUFFIX;
+import static dagger1.internal.loaders.GeneratedAdapters.STATIC_INJECTION_SUFFIX;
 
 /**
  * Handles loading/finding of modules, injection bindings, and static injections by use of a
diff --git a/core/src/main/java/dagger/internal/Keys.java b/core/src/main/java/dagger1/internal/Keys.java
similarity index 99%
rename from core/src/main/java/dagger/internal/Keys.java
rename to core/src/main/java/dagger1/internal/Keys.java
index fb65cc67b..f427932d1 100644
--- a/core/src/main/java/dagger/internal/Keys.java
+++ b/core/src/main/java/dagger1/internal/Keys.java
@@ -14,10 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.Lazy;
-import dagger.MembersInjector;
+import dagger1.Lazy;
+import dagger1.MembersInjector;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.GenericArrayType;
 import java.lang.reflect.ParameterizedType;
diff --git a/core/src/main/java/dagger/internal/LazyBinding.java b/core/src/main/java/dagger1/internal/LazyBinding.java
similarity index 97%
rename from core/src/main/java/dagger/internal/LazyBinding.java
rename to core/src/main/java/dagger1/internal/LazyBinding.java
index bac8fb49f..3bb8876ef 100644
--- a/core/src/main/java/dagger/internal/LazyBinding.java
+++ b/core/src/main/java/dagger1/internal/LazyBinding.java
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.Lazy;
+import dagger1.Lazy;
 
 /**
  * Injects a Lazy wrapper for a type T
diff --git a/core/src/main/java/dagger/internal/Linker.java b/core/src/main/java/dagger1/internal/Linker.java
similarity index 99%
rename from core/src/main/java/dagger/internal/Linker.java
rename to core/src/main/java/dagger1/internal/Linker.java
index b5cf55e1b..d103b3e43 100644
--- a/core/src/main/java/dagger/internal/Linker.java
+++ b/core/src/main/java/dagger1/internal/Linker.java
@@ -13,9 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.internal.Binding.InvalidBindingException;
+import dagger1.internal.Binding.InvalidBindingException;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
diff --git a/core/src/main/java/dagger/internal/Loader.java b/core/src/main/java/dagger1/internal/Loader.java
similarity index 99%
rename from core/src/main/java/dagger/internal/Loader.java
rename to core/src/main/java/dagger1/internal/Loader.java
index 35b5e6775..a4705352c 100644
--- a/core/src/main/java/dagger/internal/Loader.java
+++ b/core/src/main/java/dagger1/internal/Loader.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.lang.reflect.AccessibleObject;
 
diff --git a/core/src/main/java/dagger/internal/Memoizer.java b/core/src/main/java/dagger1/internal/Memoizer.java
similarity index 98%
rename from core/src/main/java/dagger/internal/Memoizer.java
rename to core/src/main/java/dagger1/internal/Memoizer.java
index a168aabfc..dc92d53b3 100644
--- a/core/src/main/java/dagger/internal/Memoizer.java
+++ b/core/src/main/java/dagger1/internal/Memoizer.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.util.LinkedHashMap;
 import java.util.Map;
diff --git a/core/src/main/java/dagger/internal/ModuleAdapter.java b/core/src/main/java/dagger1/internal/ModuleAdapter.java
similarity index 98%
rename from core/src/main/java/dagger/internal/ModuleAdapter.java
rename to core/src/main/java/dagger1/internal/ModuleAdapter.java
index 2986ad66a..21ad1c301 100644
--- a/core/src/main/java/dagger/internal/ModuleAdapter.java
+++ b/core/src/main/java/dagger1/internal/ModuleAdapter.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 
 /**
diff --git a/core/src/main/java/dagger/internal/Modules.java b/core/src/main/java/dagger1/internal/Modules.java
similarity index 99%
rename from core/src/main/java/dagger/internal/Modules.java
rename to core/src/main/java/dagger1/internal/Modules.java
index 8b269f57f..28c08d4f5 100644
--- a/core/src/main/java/dagger/internal/Modules.java
+++ b/core/src/main/java/dagger1/internal/Modules.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 
 import java.util.LinkedHashMap;
diff --git a/core/src/main/java/dagger/internal/ProblemDetector.java b/core/src/main/java/dagger1/internal/ProblemDetector.java
similarity index 99%
rename from core/src/main/java/dagger/internal/ProblemDetector.java
rename to core/src/main/java/dagger1/internal/ProblemDetector.java
index 8df091558..c992aa90a 100644
--- a/core/src/main/java/dagger/internal/ProblemDetector.java
+++ b/core/src/main/java/dagger1/internal/ProblemDetector.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.util.AbstractSet;
 import java.util.ArrayList;
diff --git a/core/src/main/java/dagger/internal/ProvidesBinding.java b/core/src/main/java/dagger1/internal/ProvidesBinding.java
similarity index 98%
rename from core/src/main/java/dagger/internal/ProvidesBinding.java
rename to core/src/main/java/dagger1/internal/ProvidesBinding.java
index 2e6f98922..66f03babf 100644
--- a/core/src/main/java/dagger/internal/ProvidesBinding.java
+++ b/core/src/main/java/dagger1/internal/ProvidesBinding.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 /**
  * A {@code Binding<T>} which delegates to a module method.
diff --git a/core/src/main/java/dagger/internal/SetBinding.java b/core/src/main/java/dagger1/internal/SetBinding.java
similarity index 99%
rename from core/src/main/java/dagger/internal/SetBinding.java
rename to core/src/main/java/dagger1/internal/SetBinding.java
index af3729061..e8c80b936 100644
--- a/core/src/main/java/dagger/internal/SetBinding.java
+++ b/core/src/main/java/dagger1/internal/SetBinding.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.util.ArrayList;
 import java.util.Collections;
diff --git a/core/src/main/java/dagger/internal/StaticInjection.java b/core/src/main/java/dagger1/internal/StaticInjection.java
similarity index 96%
rename from core/src/main/java/dagger/internal/StaticInjection.java
rename to core/src/main/java/dagger1/internal/StaticInjection.java
index 92a73a48a..9301ad736 100644
--- a/core/src/main/java/dagger/internal/StaticInjection.java
+++ b/core/src/main/java/dagger1/internal/StaticInjection.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 
 /**
diff --git a/core/src/main/java/dagger/internal/ThrowingErrorHandler.java b/core/src/main/java/dagger1/internal/ThrowingErrorHandler.java
similarity index 97%
rename from core/src/main/java/dagger/internal/ThrowingErrorHandler.java
rename to core/src/main/java/dagger1/internal/ThrowingErrorHandler.java
index d17ae7a92..e9af662e4 100644
--- a/core/src/main/java/dagger/internal/ThrowingErrorHandler.java
+++ b/core/src/main/java/dagger1/internal/ThrowingErrorHandler.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 import java.util.List;
 
diff --git a/core/src/main/java/dagger/internal/loaders/GeneratedAdapters.java b/core/src/main/java/dagger1/internal/loaders/GeneratedAdapters.java
similarity index 96%
rename from core/src/main/java/dagger/internal/loaders/GeneratedAdapters.java
rename to core/src/main/java/dagger1/internal/loaders/GeneratedAdapters.java
index 72a825aaf..208d69520 100644
--- a/core/src/main/java/dagger/internal/loaders/GeneratedAdapters.java
+++ b/core/src/main/java/dagger1/internal/loaders/GeneratedAdapters.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.loaders;
+package dagger1.internal.loaders;
 
 
 /**
diff --git a/core/src/main/java/dagger/internal/loaders/ReflectiveAtInjectBinding.java b/core/src/main/java/dagger1/internal/loaders/ReflectiveAtInjectBinding.java
similarity index 98%
rename from core/src/main/java/dagger/internal/loaders/ReflectiveAtInjectBinding.java
rename to core/src/main/java/dagger1/internal/loaders/ReflectiveAtInjectBinding.java
index 08f0264c3..278db3cd2 100644
--- a/core/src/main/java/dagger/internal/loaders/ReflectiveAtInjectBinding.java
+++ b/core/src/main/java/dagger1/internal/loaders/ReflectiveAtInjectBinding.java
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.loaders;
+package dagger1.internal.loaders;
 
-import dagger.internal.Binding;
-import dagger.internal.Keys;
-import dagger.internal.Linker;
+import dagger1.internal.Binding;
+import dagger1.internal.Keys;
+import dagger1.internal.Linker;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Field;
diff --git a/core/src/main/java/dagger/internal/loaders/ReflectiveStaticInjection.java b/core/src/main/java/dagger1/internal/loaders/ReflectiveStaticInjection.java
similarity index 93%
rename from core/src/main/java/dagger/internal/loaders/ReflectiveStaticInjection.java
rename to core/src/main/java/dagger1/internal/loaders/ReflectiveStaticInjection.java
index 1150eed5d..df38e0a50 100644
--- a/core/src/main/java/dagger/internal/loaders/ReflectiveStaticInjection.java
+++ b/core/src/main/java/dagger1/internal/loaders/ReflectiveStaticInjection.java
@@ -13,12 +13,12 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal.loaders;
+package dagger1.internal.loaders;
 
-import dagger.internal.Binding;
-import dagger.internal.Keys;
-import dagger.internal.Linker;
-import dagger.internal.StaticInjection;
+import dagger1.internal.Binding;
+import dagger1.internal.Keys;
+import dagger1.internal.Linker;
+import dagger1.internal.StaticInjection;
 import java.lang.reflect.Field;
 import java.lang.reflect.Modifier;
 import java.util.ArrayList;
diff --git a/core/src/test/java/dagger/ExtensionTest.java b/core/src/test/java/dagger/ExtensionTest.java
index 5b2fc29ab..232918bfd 100644
--- a/core/src/test/java/dagger/ExtensionTest.java
+++ b/core/src/test/java/dagger/ExtensionTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import java.util.Arrays;
 import javax.inject.Inject;
 import javax.inject.Singleton;
diff --git a/core/src/test/java/dagger/ExtensionWithSetBindingsTest.java b/core/src/test/java/dagger/ExtensionWithSetBindingsTest.java
index 7b81631db..c121aa4f4 100644
--- a/core/src/test/java/dagger/ExtensionWithSetBindingsTest.java
+++ b/core/src/test/java/dagger/ExtensionWithSetBindingsTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
 import javax.inject.Inject;
@@ -26,7 +26,7 @@
 import org.junit.runners.JUnit4;
 
 import static com.google.common.truth.Truth.assertThat;
-import static dagger.Provides.Type.SET;
+import static dagger1.Provides.Type.SET;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
diff --git a/core/src/test/java/dagger/ExtensionWithStateTest.java b/core/src/test/java/dagger/ExtensionWithStateTest.java
index 31af585bd..98c5905c8 100644
--- a/core/src/test/java/dagger/ExtensionWithStateTest.java
+++ b/core/src/test/java/dagger/ExtensionWithStateTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import javax.inject.Inject;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/core/src/test/java/dagger/InjectStaticsTest.java b/core/src/test/java/dagger/InjectStaticsTest.java
index 1eb025047..cc02e461c 100644
--- a/core/src/test/java/dagger/InjectStaticsTest.java
+++ b/core/src/test/java/dagger/InjectStaticsTest.java
@@ -15,7 +15,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import javax.inject.Inject;
 import org.junit.Before;
 import org.junit.Test;
diff --git a/core/src/test/java/dagger/InjectionOfLazyTest.java b/core/src/test/java/dagger/InjectionOfLazyTest.java
index 7156c968c..8e69a00a6 100644
--- a/core/src/test/java/dagger/InjectionOfLazyTest.java
+++ b/core/src/test/java/dagger/InjectionOfLazyTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import java.util.concurrent.atomic.AtomicInteger;
 import javax.inject.Inject;
 import javax.inject.Provider;
diff --git a/core/src/test/java/dagger/InjectionTest.java b/core/src/test/java/dagger/InjectionTest.java
index b3c7b1114..ae84e9c48 100644
--- a/core/src/test/java/dagger/InjectionTest.java
+++ b/core/src/test/java/dagger/InjectionTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import java.util.AbstractList;
 import java.util.ArrayList;
 import java.util.Arrays;
diff --git a/core/src/test/java/dagger/LazyInjectionTest.java b/core/src/test/java/dagger/LazyInjectionTest.java
index 44b17a03d..a707476d4 100644
--- a/core/src/test/java/dagger/LazyInjectionTest.java
+++ b/core/src/test/java/dagger/LazyInjectionTest.java
@@ -15,7 +15,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import javax.inject.Inject;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/core/src/test/java/dagger/MembersInjectorTest.java b/core/src/test/java/dagger/MembersInjectorTest.java
index 00072f0d2..6e4a52787 100644
--- a/core/src/test/java/dagger/MembersInjectorTest.java
+++ b/core/src/test/java/dagger/MembersInjectorTest.java
@@ -15,7 +15,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import javax.inject.Inject;
 import javax.inject.Provider;
 import javax.inject.Singleton;
diff --git a/core/src/test/java/dagger/ModuleTest.java b/core/src/test/java/dagger/ModuleTest.java
index 9d17a9da5..6a7f53f53 100644
--- a/core/src/test/java/dagger/ModuleTest.java
+++ b/core/src/test/java/dagger/ModuleTest.java
@@ -15,7 +15,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import javax.inject.Inject;
 import javax.inject.Provider;
 import org.junit.Test;
@@ -187,7 +187,7 @@ public void childModuleMissingModuleAnnotation() {
       ObjectGraph.createWith(new TestingLoader(), new ChildModuleMissingModuleAnnotation());
     } catch (IllegalArgumentException e) {
       assertThat(e.getMessage())
-          .contains("No @Module on dagger.ModuleTest$ModuleMissingModuleAnnotation");
+          .contains("No @Module on dagger1.ModuleTest$ModuleMissingModuleAnnotation");
     }
   }
 
diff --git a/core/src/test/java/dagger/ProblemDetectorTest.java b/core/src/test/java/dagger/ProblemDetectorTest.java
index a6b7c43c1..9ccd26777 100644
--- a/core/src/test/java/dagger/ProblemDetectorTest.java
+++ b/core/src/test/java/dagger/ProblemDetectorTest.java
@@ -15,7 +15,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import javax.inject.Inject;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/core/src/test/java/dagger/SetBindingTest.java b/core/src/test/java/dagger/SetBindingTest.java
index c94c983b3..cafbc5eb5 100644
--- a/core/src/test/java/dagger/SetBindingTest.java
+++ b/core/src/test/java/dagger/SetBindingTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.util.Arrays;
@@ -32,8 +32,8 @@
 import org.junit.runners.JUnit4;
 
 import static com.google.common.truth.Truth.assertThat;
-import static dagger.Provides.Type.SET;
-import static dagger.Provides.Type.SET_VALUES;
+import static dagger1.Provides.Type.SET;
+import static dagger1.Provides.Type.SET_VALUES;
 import static java.util.Collections.emptySet;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
diff --git a/core/src/test/java/dagger/ThreadSafetyTest.java b/core/src/test/java/dagger/ThreadSafetyTest.java
index 1f5fd1a30..9eb95f630 100644
--- a/core/src/test/java/dagger/ThreadSafetyTest.java
+++ b/core/src/test/java/dagger/ThreadSafetyTest.java
@@ -16,7 +16,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.Callable;
diff --git a/core/src/test/java/dagger/UnusedProviderTest.java b/core/src/test/java/dagger/UnusedProviderTest.java
index 7fa59d9ff..e097cc957 100644
--- a/core/src/test/java/dagger/UnusedProviderTest.java
+++ b/core/src/test/java/dagger/UnusedProviderTest.java
@@ -15,7 +15,7 @@
  */
 package dagger;
 
-import dagger.internal.TestingLoader;
+import dagger1.internal.TestingLoader;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
diff --git a/core/src/test/java/dagger/internal/FailoverLoaderTest.java b/core/src/test/java/dagger/internal/FailoverLoaderTest.java
index 7721159d2..5527e2f9b 100644
--- a/core/src/test/java/dagger/internal/FailoverLoaderTest.java
+++ b/core/src/test/java/dagger/internal/FailoverLoaderTest.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.Module;
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 import org.junit.Test;
 import org.junit.runner.RunWith;
diff --git a/core/src/test/java/dagger/internal/KeysTest.java b/core/src/test/java/dagger/internal/KeysTest.java
index 1ac9ca4d4..aa4f43470 100644
--- a/core/src/test/java/dagger/internal/KeysTest.java
+++ b/core/src/test/java/dagger/internal/KeysTest.java
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.Lazy;
-import dagger.MembersInjector;
-import dagger.Provides;
+import dagger1.Lazy;
+import dagger1.MembersInjector;
+import dagger1.Provides;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.util.List;
@@ -29,7 +29,7 @@
 import org.junit.runners.JUnit4;
 
 import static com.google.common.truth.Truth.assertThat;
-import static dagger.Provides.Type.SET;
+import static dagger1.Provides.Type.SET;
 
 @RunWith(JUnit4.class)
 public final class KeysTest {
diff --git a/core/src/test/java/dagger/internal/SingletonBindingTest.java b/core/src/test/java/dagger/internal/SingletonBindingTest.java
index 3b265ca48..7d8bd73d6 100644
--- a/core/src/test/java/dagger/internal/SingletonBindingTest.java
+++ b/core/src/test/java/dagger/internal/SingletonBindingTest.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.internal;
+package dagger1.internal;
 
 import org.junit.Before;
 import org.junit.Test;
diff --git a/core/src/test/java/dagger/internal/TestingLoader.java b/core/src/test/java/dagger/internal/TestingLoader.java
index b364cde05..2ced1d20c 100644
--- a/core/src/test/java/dagger/internal/TestingLoader.java
+++ b/core/src/test/java/dagger/internal/TestingLoader.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
 
-import dagger.internal.loaders.ReflectiveAtInjectBinding;
-import dagger.internal.loaders.ReflectiveStaticInjection;
+import dagger1.internal.loaders.ReflectiveAtInjectBinding;
+import dagger1.internal.loaders.ReflectiveStaticInjection;
 
 /**
  * A test-only loader that merely uses reflection to test internals.
diff --git a/core/src/test/java/dagger/internal/TestingModuleAdapter.java b/core/src/test/java/dagger/internal/TestingModuleAdapter.java
index b5d54f095..25e6a7be0 100644
--- a/core/src/test/java/dagger/internal/TestingModuleAdapter.java
+++ b/core/src/test/java/dagger/internal/TestingModuleAdapter.java
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger.internal;
+package dagger1.internal;
 
-import dagger.Lazy;
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Lazy;
+import dagger1.Module;
+import dagger1.Provides;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.InvocationTargetException;
diff --git a/deploy_website.sh b/deploy_website.sh
index b0005fdca..7d0a31b6d 100755
--- a/deploy_website.sh
+++ b/deploy_website.sh
@@ -6,7 +6,7 @@
 
 set -ex
 
-REPO="git@github.com:square/dagger.git"
+REPO="git@github.com:square/dagger1.git"
 DIR=temp-dagger-clone
 
 # Delete any existing temporary website clone
diff --git a/examples/android-activity-graphs/pom.xml b/examples/android-activity-graphs/pom.xml
index 2fcc864a3..134561de9 100644
--- a/examples/android-activity-graphs/pom.xml
+++ b/examples/android-activity-graphs/pom.xml
@@ -18,7 +18,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.dagger.example</groupId>
+    <groupId>com.squareup.dagger1.example</groupId>
     <artifactId>dagger-example-parent</artifactId>
     <version>1.2.6-SNAPSHOT</version>
   </parent>
diff --git a/examples/android-activity-graphs/src/main/AndroidManifest.xml b/examples/android-activity-graphs/src/main/AndroidManifest.xml
index e80464f4a..e8b95ac84 100644
--- a/examples/android-activity-graphs/src/main/AndroidManifest.xml
+++ b/examples/android-activity-graphs/src/main/AndroidManifest.xml
@@ -3,7 +3,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     android:versionCode="1"
     android:versionName="1.0.0"
-    package="com.example.dagger.activitygraphs">
+    package="com.example.dagger1.activitygraphs">
 
   <uses-sdk android:minSdkVersion="4" android:targetSdkVersion="17"/>
 
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
index 6fd695ce4..1767537af 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
@@ -13,14 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import android.content.Context;
-import com.example.dagger.activitygraphs.ui.ActivityTitleController;
-import com.example.dagger.activitygraphs.ui.HomeActivity;
-import com.example.dagger.activitygraphs.ui.HomeFragment;
-import dagger.Module;
-import dagger.Provides;
+import com.example.dagger1.activitygraphs.ui.ActivityTitleController;
+import com.example.dagger1.activitygraphs.ui.HomeActivity;
+import com.example.dagger1.activitygraphs.ui.HomeFragment;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Singleton;
 
 /**
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AndroidModule.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AndroidModule.java
index d31f738b6..eb047b50e 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AndroidModule.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AndroidModule.java
@@ -13,12 +13,12 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import android.content.Context;
 import android.location.LocationManager;
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Singleton;
 
 import static android.content.Context.LOCATION_SERVICE;
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
index 56e1ab440..972a7bf7c 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
@@ -13,10 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import android.app.Application;
-import dagger.ObjectGraph;
+import dagger1.ObjectGraph;
 import java.util.Arrays;
 import java.util.List;
 
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseActivity.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseActivity.java
index 44693dcc6..636d25730 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseActivity.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseActivity.java
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import android.os.Bundle;
 import android.support.v4.app.FragmentActivity;
-import dagger.ObjectGraph;
+import dagger1.ObjectGraph;
 import java.util.Arrays;
 import java.util.List;
 
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseFragment.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseFragment.java
index f2e1fda4e..689a33772 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseFragment.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoBaseFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForActivity.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForActivity.java
index abd423b03..feeccdfff 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForActivity.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import java.lang.annotation.Retention;
 import javax.inject.Qualifier;
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForApplication.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForApplication.java
index 585d46b1c..5d8ec2ea5 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForApplication.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ForApplication.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs;
+package com.example.dagger1.activitygraphs;
 
 import java.lang.annotation.Retention;
 import javax.inject.Qualifier;
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java
index f42dbee70..e132214be 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs.ui;
+package com.example.dagger1.activitygraphs.ui;
 
 import android.app.Activity;
 
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java
index 36125cf66..7338d4c14 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs.ui;
+package com.example.dagger1.activitygraphs.ui;
 
 import android.location.LocationManager;
 import android.os.Bundle;
-import com.example.dagger.activitygraphs.DemoBaseActivity;
+import com.example.dagger1.activitygraphs.DemoBaseActivity;
 import javax.inject.Inject;
 
 public class HomeActivity extends DemoBaseActivity {
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java
index 56bbd583c..13c880d38 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java
@@ -13,14 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.activitygraphs.ui;
+package com.example.dagger1.activitygraphs.ui;
 
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
-import com.example.dagger.activitygraphs.DemoBaseFragment;
+import com.example.dagger1.activitygraphs.DemoBaseFragment;
 import javax.inject.Inject;
 
 import static android.view.Gravity.CENTER;
diff --git a/examples/android-simple/pom.xml b/examples/android-simple/pom.xml
index 403ca1aa0..ff1750db4 100644
--- a/examples/android-simple/pom.xml
+++ b/examples/android-simple/pom.xml
@@ -18,7 +18,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.dagger.example</groupId>
+    <groupId>com.squareup.dagger1.example</groupId>
     <artifactId>dagger-example-parent</artifactId>
     <version>1.2.6-SNAPSHOT</version>
   </parent>
diff --git a/examples/android-simple/src/main/AndroidManifest.xml b/examples/android-simple/src/main/AndroidManifest.xml
index cdf2399b9..e597b236c 100644
--- a/examples/android-simple/src/main/AndroidManifest.xml
+++ b/examples/android-simple/src/main/AndroidManifest.xml
@@ -3,7 +3,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     android:versionCode="1"
     android:versionName="1.0.0"
-    package="com.example.dagger.simple">
+    package="com.example.dagger1.simple">
 
   <uses-sdk android:minSdkVersion="4" android:targetSdkVersion="17"/>
 
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java b/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java
index e6b8aa57c..afc02c213 100644
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java
+++ b/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java
@@ -13,12 +13,12 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.simple;
+package com.example.dagger1.simple;
 
 import android.content.Context;
 import android.location.LocationManager;
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Singleton;
 
 import static android.content.Context.LOCATION_SERVICE;
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java
index e082c0f6f..e471d6a9c 100644
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java
+++ b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java
@@ -13,10 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.simple;
+package com.example.dagger1.simple;
 
 import android.app.Application;
-import dagger.ObjectGraph;
+import dagger1.ObjectGraph;
 import java.util.Arrays;
 import java.util.List;
 
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoBaseActivity.java b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoBaseActivity.java
index c037ac02b..8b8017bec 100644
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoBaseActivity.java
+++ b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoBaseActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.simple;
+package com.example.dagger1.simple;
 
 import android.app.Activity;
 import android.os.Bundle;
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoModule.java b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoModule.java
index 33d7278ac..c0a3de47d 100644
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoModule.java
+++ b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoModule.java
@@ -13,10 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.simple;
+package com.example.dagger1.simple;
 
-import com.example.dagger.simple.ui.HomeActivity;
-import dagger.Module;
+import com.example.dagger1.simple.ui.HomeActivity;
+import dagger1.Module;
 
 @Module(
     injects = HomeActivity.class,
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java b/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java
index 84d224740..e9bfa7f86 100644
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java
+++ b/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.simple;
+package com.example.dagger1.simple;
 
 import java.lang.annotation.Retention;
 import javax.inject.Qualifier;
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java b/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java
index 5c2212725..51ebeed46 100644
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java
+++ b/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.dagger.simple.ui;
+package com.example.dagger1.simple.ui;
 
 import android.location.LocationManager;
 import android.os.Bundle;
-import com.example.dagger.simple.DemoBaseActivity;
+import com.example.dagger1.simple.DemoBaseActivity;
 import javax.inject.Inject;
 
 public class HomeActivity extends DemoBaseActivity {
diff --git a/examples/pom.xml b/examples/pom.xml
index dbea3cddd..a758626ea 100644
--- a/examples/pom.xml
+++ b/examples/pom.xml
@@ -24,7 +24,7 @@
     <version>1.2.6-SNAPSHOT</version>
   </parent>
 
-  <groupId>com.squareup.dagger.example</groupId>
+  <groupId>com.squareup.dagger1.example</groupId>
   <artifactId>dagger-example-parent</artifactId>
   <packaging>pom</packaging>
   <name>Examples</name>
diff --git a/examples/simple/pom.xml b/examples/simple/pom.xml
index a610956fe..8d2b5daf3 100644
--- a/examples/simple/pom.xml
+++ b/examples/simple/pom.xml
@@ -18,7 +18,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.dagger.example</groupId>
+    <groupId>com.squareup.dagger1.example</groupId>
     <artifactId>dagger-example-parent</artifactId>
     <version>1.2.6-SNAPSHOT</version>
   </parent>
diff --git a/examples/simple/src/main/java/coffee/CoffeeApp.java b/examples/simple/src/main/java/coffee/CoffeeApp.java
index b6be33a31..6a138b05f 100644
--- a/examples/simple/src/main/java/coffee/CoffeeApp.java
+++ b/examples/simple/src/main/java/coffee/CoffeeApp.java
@@ -2,7 +2,7 @@
 
 import javax.inject.Inject;
 
-import dagger.ObjectGraph;
+import dagger1.ObjectGraph;
 
 public class CoffeeApp implements Runnable {
   @Inject CoffeeMaker coffeeMaker;
diff --git a/examples/simple/src/main/java/coffee/CoffeeMaker.java b/examples/simple/src/main/java/coffee/CoffeeMaker.java
index a4e818012..818eace60 100644
--- a/examples/simple/src/main/java/coffee/CoffeeMaker.java
+++ b/examples/simple/src/main/java/coffee/CoffeeMaker.java
@@ -1,6 +1,6 @@
 package coffee;
 
-import dagger.Lazy;
+import dagger1.Lazy;
 import javax.inject.Inject;
 
 class CoffeeMaker {
diff --git a/examples/simple/src/main/java/coffee/DripCoffeeModule.java b/examples/simple/src/main/java/coffee/DripCoffeeModule.java
index da0bbaafa..609eb0223 100644
--- a/examples/simple/src/main/java/coffee/DripCoffeeModule.java
+++ b/examples/simple/src/main/java/coffee/DripCoffeeModule.java
@@ -1,7 +1,7 @@
 package coffee;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 import javax.inject.Singleton;
 
 @Module(
diff --git a/examples/simple/src/main/java/coffee/PumpModule.java b/examples/simple/src/main/java/coffee/PumpModule.java
index b064cea65..76b67144d 100644
--- a/examples/simple/src/main/java/coffee/PumpModule.java
+++ b/examples/simple/src/main/java/coffee/PumpModule.java
@@ -1,7 +1,7 @@
 package coffee;
 
-import dagger.Module;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.Provides;
 
 @Module(complete = false, library = true)
 class PumpModule {
diff --git a/examples/simple/src/test/java/coffee/CoffeeMakerTest.java b/examples/simple/src/test/java/coffee/CoffeeMakerTest.java
index 310a188a1..dae28650b 100644
--- a/examples/simple/src/test/java/coffee/CoffeeMakerTest.java
+++ b/examples/simple/src/test/java/coffee/CoffeeMakerTest.java
@@ -15,9 +15,9 @@
  */
 package coffee;
 
-import dagger.Module;
-import dagger.ObjectGraph;
-import dagger.Provides;
+import dagger1.Module;
+import dagger1.ObjectGraph;
+import dagger1.Provides;
 import javax.inject.Inject;
 import javax.inject.Singleton;
 import org.junit.Before;
diff --git a/pom.xml b/pom.xml
index 3c5d53358..37b76da3b 100644
--- a/pom.xml
+++ b/pom.xml
@@ -55,8 +55,8 @@
 
   <scm>
     <url>http://github.com/square/dagger/</url>
-    <connection>scm:git:git://github.com/square/dagger.git</connection>
-    <developerConnection>scm:git:ssh://git@github.com/square/dagger.git</developerConnection>
+    <connection>scm:git:git://github.com/square/dagger1.git</connection>
+    <developerConnection>scm:git:ssh://git@github.com/square/dagger1.git</developerConnection>
     <tag>HEAD</tag>
   </scm>
 
