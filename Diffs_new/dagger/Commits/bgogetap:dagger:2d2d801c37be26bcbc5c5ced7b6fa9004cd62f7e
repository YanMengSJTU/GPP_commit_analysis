diff --git a/javatests/dagger/functional/tck/BUILD b/javatests/dagger/functional/tck/BUILD
index e20228275..f971e3a37 100644
--- a/javatests/dagger/functional/tck/BUILD
+++ b/javatests/dagger/functional/tck/BUILD
@@ -27,7 +27,8 @@ load("//:test_defs.bzl", "GenJavaTests")
 GenJavaTests(
     name = "tck_tests",
     srcs = glob(["*.java"]),
-    javacopts = DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES + [
+    javacopts = DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
+    lib_javacopts = [
         "-Adagger.privateMemberValidation=warning",
         "-Adagger.staticMemberValidation=warning",
         "-Adagger.ignorePrivateAndStaticInjectionForComponent=enabled",
diff --git a/test_defs.bzl b/test_defs.bzl
index 9e076e2d4..cee81b3d9 100644
--- a/test_defs.bzl
+++ b/test_defs.bzl
@@ -36,14 +36,13 @@ def _GenTests(library_rule_type, test_rule_type, name, srcs, deps, test_only_dep
              plugins, javacopts, lib_javacopts, test_javacopts)
 
   if functional:
-    for (variant_name, extra_javacopts) in BUILD_VARIANTS.items():
+    for (variant_name, extra_lib_javacopts) in BUILD_VARIANTS.items():
+      lib_javacopts = (lib_javacopts or []) + extra_lib_javacopts
       _gen_tests(library_rule_type, test_rule_type, name, srcs, deps, test_only_deps,
-                 plugins, javacopts, lib_javacopts, test_javacopts, variant_name,
-                 extra_javacopts)
+                 plugins, javacopts, lib_javacopts, test_javacopts, variant_name)
 
 def _gen_tests(library_rule_type, test_rule_type, name, srcs, deps, test_only_deps,
-               plugins, javacopts, lib_javacopts, test_javacopts, variant_name=None,
-               extra_javacopts=None):
+               plugins, javacopts, lib_javacopts, test_javacopts, variant_name=None):
   if variant_name:
     suffix = "_" + variant_name
     tags = [variant_name]
@@ -66,9 +65,6 @@ def _gen_tests(library_rule_type, test_rule_type, name, srcs, deps, test_only_de
   if not test_only_deps:
     test_only_deps = []
 
-  if not extra_javacopts:
-    extra_javacopts = []
-
   test_deps = test_only_deps + deps
   if supporting_files:
     supporting_files_name = name + suffix + "_lib"
@@ -78,7 +74,7 @@ def _gen_tests(library_rule_type, test_rule_type, name, srcs, deps, test_only_de
         deps = deps,
         srcs = supporting_files,
         plugins = plugins,
-        javacopts = extra_javacopts + (javacopts or []) + (lib_javacopts or []),
+        javacopts = (javacopts or []) + (lib_javacopts or []),
         tags = tags,
         testonly = 1,
     )
@@ -94,7 +90,7 @@ def _gen_tests(library_rule_type, test_rule_type, name, srcs, deps, test_only_de
         deps = test_deps,
         srcs = [test_file],
         plugins = plugins,
-        javacopts = extra_javacopts + (javacopts or []) + (test_javacopts or []),
+        javacopts = (javacopts or []) + (test_javacopts or []),
         jvm_flags = jvm_flags,
         tags = tags,
         test_class = test_class,
