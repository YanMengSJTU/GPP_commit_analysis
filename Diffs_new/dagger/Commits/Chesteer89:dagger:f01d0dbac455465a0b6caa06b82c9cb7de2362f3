diff --git a/java/dagger/android/DaggerActivity.java b/java/dagger/android/DaggerActivity.java
index 1fd9b9d12..269c3119b 100644
--- a/java/dagger/android/DaggerActivity.java
+++ b/java/dagger/android/DaggerActivity.java
@@ -20,6 +20,7 @@
 import android.app.Fragment;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.view.View;
 import dagger.internal.Beta;
 import javax.inject.Inject;
 
@@ -28,10 +29,12 @@
  * inject {@link Fragment}s attached to it.
  */
 @Beta
-public abstract class DaggerActivity extends Activity implements HasFragmentInjector {
+public abstract class DaggerActivity extends Activity implements HasFragmentInjector, HasViewInjector {
 
   @Inject DispatchingAndroidInjector<Fragment> fragmentInjector;
 
+  @Inject DispatchingAndroidInjector<View> viewInjector;
+
   @Override
   protected void onCreate(@Nullable Bundle savedInstanceState) {
     AndroidInjection.inject(this);
@@ -42,4 +45,9 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
   public AndroidInjector<Fragment> fragmentInjector() {
     return fragmentInjector;
   }
+
+  @Override
+  public AndroidInjector<View> viewInjector() {
+    return viewInjector;
+  }
 }
diff --git a/java/dagger/android/support/AndroidSupportInjection.java b/java/dagger/android/support/AndroidSupportInjection.java
index f5e206e60..ee772470c 100644
--- a/java/dagger/android/support/AndroidSupportInjection.java
+++ b/java/dagger/android/support/AndroidSupportInjection.java
@@ -20,9 +20,13 @@
 import static dagger.internal.Preconditions.checkNotNull;
 
 import android.app.Activity;
+import android.content.Context;
+import android.content.ContextWrapper;
+import android.view.View;
 import android.support.v4.app.Fragment;
 import android.util.Log;
 import dagger.android.AndroidInjector;
+import dagger.android.HasViewInjector;
 import dagger.internal.Beta;
 
 /** Injects core Android types from support libraries. */
@@ -92,5 +96,42 @@ private static HasSupportFragmentInjector findHasFragmentInjector(Fragment fragm
         String.format("No injector was found for %s", fragment.getClass().getCanonicalName()));
   }
 
+  /**
+   * Injects {@code view} if an associated {@link AndroidInjector} implementation can be found,
+   * otherwise throws an {@link IllegalArgumentException}.
+   *
+   * @throws RuntimeException if the {@link View} doesn't implement {@link
+   *     HasActivityInjector}.
+   */
+  public static void inject(View view) {
+    checkNotNull(view, "view");
+    Activity activity = getViewActivity(view);
+    if (!(activity instanceof HasViewInjector)) {
+      throw new RuntimeException(
+              String.format(
+                      "%s does not implement %s",
+                      activity.getClass().getCanonicalName(),
+                      HasViewInjector.class.getCanonicalName()));
+    }
+
+    AndroidInjector<View> viewInjector =
+            ((HasViewInjector) activity).viewInjector();
+    checkNotNull(viewInjector, "%s.viewInjector() returned null", activity.getClass());
+
+    viewInjector.inject(view);
+  }
+
+  public static Activity getViewActivity(View view) {
+    // https://android.googlesource.com/platform/frameworks/support/+/03e0f3daf3c97ee95cd78b2f07bc9c1be05d43db/v7/mediarouter/src/android/support/v7/app/MediaRouteButton.java#276
+    Context context = view.getContext();
+    while (context instanceof ContextWrapper) {
+      if (context instanceof Activity) {
+        return (Activity)context;
+      }
+      context = ((ContextWrapper) context).getBaseContext();
+    }
+    throw new IllegalStateException("Context does not stem from an activity: " + view.getContext());
+  }
+
   private AndroidSupportInjection() {}
 }
diff --git a/java/dagger/android/support/DaggerAppCompatActivity.java b/java/dagger/android/support/DaggerAppCompatActivity.java
index 4621e9a6d..32000ec72 100644
--- a/java/dagger/android/support/DaggerAppCompatActivity.java
+++ b/java/dagger/android/support/DaggerAppCompatActivity.java
@@ -17,6 +17,7 @@
 package dagger.android.support;
 
 import android.os.Bundle;
+import android.view.View;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.AppCompatActivity;
@@ -24,6 +25,7 @@
 import dagger.android.AndroidInjector;
 import dagger.android.DispatchingAndroidInjector;
 import dagger.android.HasFragmentInjector;
+import dagger.android.HasViewInjector;
 import dagger.internal.Beta;
 import javax.inject.Inject;
 
@@ -33,10 +35,11 @@
  */
 @Beta
 public abstract class DaggerAppCompatActivity extends AppCompatActivity
-    implements HasFragmentInjector, HasSupportFragmentInjector {
+    implements HasFragmentInjector, HasSupportFragmentInjector, HasViewInjector {
 
   @Inject DispatchingAndroidInjector<Fragment> supportFragmentInjector;
   @Inject DispatchingAndroidInjector<android.app.Fragment> frameworkFragmentInjector;
+  @Inject DispatchingAndroidInjector<View> viewInjector;
 
   @Override
   protected void onCreate(@Nullable Bundle savedInstanceState) {
@@ -53,4 +56,9 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
   public AndroidInjector<android.app.Fragment> fragmentInjector() {
     return frameworkFragmentInjector;
   }
+
+  @Override
+  public AndroidInjector<View> viewInjector() {
+    return viewInjector;
+  }
 }
