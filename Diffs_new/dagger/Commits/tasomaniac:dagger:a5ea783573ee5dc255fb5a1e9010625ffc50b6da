diff --git a/_config.yml b/_config.yml
index 24cf145da..afcfa3f2c 100644
--- a/_config.yml
+++ b/_config.yml
@@ -3,4 +3,4 @@ url: "http://google.github.io/dagger/"
 markdown: kramdown
 dagger:
   groupId: com.google.dagger
-  version: 2.0
+  version: 2.2
diff --git a/_layouts/default.html b/_layouts/default.html
index 8d230cb2a..e6e0d87a6 100644
--- a/_layouts/default.html
+++ b/_layouts/default.html
@@ -6,7 +6,7 @@
       <title>Dagger &#x2021; A fast dependency injector for Android and Java.</title>
       <meta name="viewport" content="width=device-width, initial-scale=1.0">
       <meta name="description" content="A fast dependency injector for Android and Java." />
-      <link href="bower-components/normalize.css/normalize.css" rel="stylesheet"/>
+      <link href="bower_components/normalize.css/normalize.css" rel="stylesheet"/>
       <script src="bower_components/platform/platform.js"></script>
       <link rel="import"
         href="bower_components/core-icon-button/core-icon-button.html">
diff --git a/multibindings.md b/multibindings.md
index 14bca2fb0..4cc2020de 100644
--- a/multibindings.md
+++ b/multibindings.md
@@ -39,7 +39,7 @@ that returns a subset and is annotated with [`@Provides(type = SET_VALUES)`]:
 class MyModuleB {
   @Provides(type = SET_VALUES)
   static Set<String> provideSomeStrings(DepA depA, DepB depB) {
-    return new HashSet<Foo>(Arrays.asList("DEF", "GHI"));
+    return new HashSet<String>(Arrays.asList("DEF", "GHI"));
   }
 }
 ```
@@ -48,10 +48,10 @@ Now a binding in that component can depend on the set:
 
 ```java
 class Bar {
-  @Inject Bar(Set<Foo> foos) {
-    assert foos.contains("ABC");
-    assert foos.contains("DEF");
-    assert foos.contains("GHI");
+  @Inject Bar(Set<String> strings) {
+    assert strings.contains("ABC");
+    assert strings.contains("DEF");
+    assert strings.contains("GHI");
   }
 }
 ```
@@ -61,12 +61,12 @@ Or the component can provide the set:
 ```java
 @Component(modules = {MyModuleA.class, MyModuleB.class})
 interface MyComponent {
-  Set<Foo> foos();
+  Set<String> strings();
 }
 
 @Test void testMyComponent() {
   MyComponent myComponent = DaggerMyComponent.create();
-  assertThat(myComponent.foos()).containsExactly("ABC", "DEF", "GHI");
+  assertThat(myComponent.strings()).containsExactly("ABC", "DEF", "GHI");
 }
 ```
 
diff --git a/users-guide.md b/users-guide.md
index a1a08cfb6..6f239ddb5 100644
--- a/users-guide.md
+++ b/users-guide.md
@@ -481,9 +481,9 @@ limitations under the License.
 [Annotation Processor]: http://docs.oracle.com/javase/6/docs/api/javax/annotation/processing/package-summary.html
 [Builder Pattern]: http://en.wikipedia.org/wiki/Builder_pattern
 [CoffeeMaker Example]: https://github.com/google/dagger/tree/master/examples/simple/src/main/java/coffee
-[Component]: /api/latest/dagger/Component.html
-[Component#provision-methods]: </api/latest/dagger/Component.html#provision-methods>
-[Component#dependencies]: <api/latest/dagger/Component.html#dependencies()>
+[Component]: http://google.github.io/dagger/api/latest/dagger/Component.html
+[Component#provision-methods]: http://google.github.io/dagger/api/latest/dagger/Component.html#provision-methods
+[Component#dependencies]: http://google.github.io/dagger/api/latest/dagger/Component.html#dependencies()
 [Dagger Talk Slides]: https://docs.google.com/presentation/d/1fby5VeGU9CN8zjw4lAb2QPPsKRxx6mSwCe9q7ECNSJQ/pub?start=false&loop=false&delayms=3000
 [DI]: http://en.wikipedia.org/wiki/Dependency_injection
 [Documented]: http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Documented.html
@@ -491,16 +491,16 @@ limitations under the License.
 [JSR 330]: https://jcp.org/en/jsr/detail?id=330
 [`javax.inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/package-summary.html
 [`javax.inject.Inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html
-[Lazy]: /api/latest/dagger/Lazy.html
-[Module]: /api/latest/dagger/Module.html
+[Lazy]: http://google.github.io/dagger/api/latest/dagger/Lazy.html
+[Module]: http://google.github.io/dagger/api/latest/dagger/Module.html
 [Named]: http://docs.oracle.com/javaee/7/api/javax/inject/Named.html
 [Provider]: http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html
-[Provides]: /api/latest/dagger/Provides.htm
+[Provides]: http://google.github.io/dagger/api/latest/dagger/Provides.html
 [Qualifier]: http://docs.oracle.com/javaee/7/api/javax/inject/Qualifier.html
 [Scope]: http://docs.oracle.com/javaee/7/api/javax/inject/Scope.html
 [Singleton]: http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html
-[Subcomponent]: /api/latest/dagger/Subcomponent.html
-[Subcomponent.Builder]: /api/latest/dagger/Subcomponent.Builder.html
+[Subcomponent]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.html
+[Subcomponent.Builder]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.Builder.html
 [+Gregory Kick]: https://google.com/+GregoryKick/
 
 
