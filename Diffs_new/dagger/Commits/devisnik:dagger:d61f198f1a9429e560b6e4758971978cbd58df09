diff --git a/java/dagger/internal/MembersInjectors.java b/java/dagger/internal/MembersInjectors.java
index c90e2ab22..08038cee6 100644
--- a/java/dagger/internal/MembersInjectors.java
+++ b/java/dagger/internal/MembersInjectors.java
@@ -28,16 +28,6 @@
  * @since 2.0
  */
 public final class MembersInjectors {
-  /**
-   * Injects members into {@code instance} using {@code membersInjector}.  This method is a
-   * convenience for cases in which you would want to chain members injection, but can't because
-   * {@link MembersInjector#injectMembers} returns {@code void}.
-   */
-  public static <T> T injectMembers(MembersInjector<T> membersInjector, T instance) {
-    membersInjector.injectMembers(instance);
-    return instance;
-  }
-
   /**
    * Returns a {@link MembersInjector} implementation that injects no members
    *
@@ -53,13 +43,9 @@
     INSTANCE;
 
     @Override public void injectMembers(Object instance) {
-      checkInstanceNotNull(instance);
+      checkNotNull(instance, "Cannot inject members into a null reference");
     }
   }
 
-  public static void checkInstanceNotNull(Object instance) {
-    checkNotNull(instance, "Cannot inject members into a null reference");
-  }
-
   private MembersInjectors() {}
 }
