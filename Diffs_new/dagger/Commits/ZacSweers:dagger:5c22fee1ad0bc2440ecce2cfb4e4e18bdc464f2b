diff --git a/java/dagger/internal/codegen/MissingBindingValidator.java b/java/dagger/internal/codegen/MissingBindingValidator.java
index dd2f6e3b1..f927294c0 100644
--- a/java/dagger/internal/codegen/MissingBindingValidator.java
+++ b/java/dagger/internal/codegen/MissingBindingValidator.java
@@ -54,8 +54,10 @@ public String pluginName() {
 
   @Override
   public void visitGraph(BindingGraph graph, DiagnosticReporter diagnosticReporter) {
-    if (graph.isModuleBindingGraph() || graph.isPartialBindingGraph()) {
-      return; // Don't report missing bindings when validating a module or a partial binding graph
+    // Don't report missing bindings when validating a binding graph based on a subcomponent or
+    // module.
+    if (graph.isModuleBindingGraph() || graph.rootComponentNode().isSubcomponent()) {
+      return;
     }
     graph
         .missingBindings()
diff --git a/java/dagger/internal/codegen/SubcomponentFactoryMethodValidator.java b/java/dagger/internal/codegen/SubcomponentFactoryMethodValidator.java
index c29aa69e5..2f79b0157 100644
--- a/java/dagger/internal/codegen/SubcomponentFactoryMethodValidator.java
+++ b/java/dagger/internal/codegen/SubcomponentFactoryMethodValidator.java
@@ -61,7 +61,7 @@ public String pluginName() {
 
   @Override
   public void visitGraph(BindingGraph bindingGraph, DiagnosticReporter diagnosticReporter) {
-    if (bindingGraph.isModuleBindingGraph() || bindingGraph.isPartialBindingGraph()) {
+    if (bindingGraph.isModuleBindingGraph() || bindingGraph.rootComponentNode().isSubcomponent()) {
       // We don't know all the modules that might be owned by the child until we know the root.
       return;
     }
diff --git a/java/dagger/model/BindingGraph.java b/java/dagger/model/BindingGraph.java
index 6c89ba452..0f82b31b4 100644
--- a/java/dagger/model/BindingGraph.java
+++ b/java/dagger/model/BindingGraph.java
@@ -109,14 +109,16 @@ public final String toString() {
    * @see <a href="https://google.github.io/dagger/compiler-options#module-binding-validation">Module binding
    *     validation</a>
    */
-  // TODO(dpb): Figure out the relationship between this and isPartialBindingGraph(). Maybe this
-  // implies that?
   public abstract boolean isModuleBindingGraph();
 
   /**
    * Returns {@code true} if the {@link #rootComponentNode()} is a subcomponent. This occurs in
    * ahead-of-time-subcomponents mode.
+   *
+   * @deprecated use {@link ComponentNode#isSubcomponent() rootComponentNode().isSubcomponent()}
+   *     instead
    */
+  @Deprecated
   public final boolean isPartialBindingGraph() {
     return rootComponentNode().isSubcomponent();
   }
