diff --git a/users-guide.md b/users-guide.md
index a1f9a1269..696ddc6b5 100644
--- a/users-guide.md
+++ b/users-guide.md
@@ -327,6 +327,7 @@ class CashRegisterModule {
   }
 }
 
+  
 @Reusable // DON'T DO THIS! You really do want a new filter each time, so this
           // should be unscoped.
 class CoffeeFilter {
@@ -335,7 +336,6 @@ class CoffeeFilter {
 
 ```
 
-
 ### Lazy injections
 
 Sometimes you need an object to be instantiated lazily.  For any binding `T`,
@@ -540,7 +540,6 @@ limitations under the License.
 [DI]: http://en.wikipedia.org/wiki/Dependency_injection
 [Documented]: http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Documented.html
 [Factory Pattern]: https://en.wikipedia.org/wiki/Factory_(object-oriented_programming)
-[+Gregory Kick]: https://google.com/+GregoryKick/
 [JSR 330]: https://jcp.org/en/jsr/detail?id=330
 [`javax.inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/package-summary.html
 [`javax.inject.Inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html
@@ -555,5 +554,5 @@ limitations under the License.
 [Singleton]: http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html
 [Subcomponent]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.html
 [Subcomponent.Builder]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.Builder.html
-[`WeakReference`]: https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html
+[+Gregory Kick]: https://google.com/+GregoryKick/
 
