diff --git a/README.md b/README.md
index f9d182f6a..81bb0be3d 100644
--- a/README.md
+++ b/README.md
@@ -46,6 +46,8 @@ In order to activate code generation and generate implementations to manage
 your graph you will need to include `dagger-compiler-2.0.2.jar` in your build
 at compile time.
 
+### Maven
+
 In a Maven project, include the `dagger` artifact in the dependencies section
 of your `pom.xml` and the `dagger-compiler` artifact as either an `optional` or
 `provided` dependency:
@@ -79,6 +81,34 @@ then add this to your maven configuration:
 </dependencies>
 ```
 
+### Gradle and Android Studio
+
+By default, Android Studio will not be able to find and index the sources
+generated by the `dagger-compiler` if it is a `provided` dependency.
+Various `apt` (think Annotation Processing Tool, not Advanced Packaging Tool)
+plugins have been developed to address this. An `apt` dependency will 
+- be included at compile-time only, not in the final APK or library, and
+- set up source paths so that Android Studio will find and index the generated code
+    
+To add Dagger and android-apt to your project, add the following to your `build.gradle`: 
+
+```diff
+  buildscript {
+      dependencies {
++         classpath 'com.neenbedankt.gradle.plugins:android-apt:X.Y' // Pull in the latest version of the plugin
+          ...
+      }
+  }
+  ...
++ apply plugin: 'com.neenbedankt.android-apt' // Apply the plugin after "apply plugin: 'com.android.application'"
+  ...
+  dependencies {
++     compile 'com.google.dagger:dagger:2.0.2'      // Add dagger as a compile dependency
++     apt 'com.google.dagger:dagger-compiler:2.0.2' // Add the dagger-compiler as an apt dependency
++     provided 'javax.annotation:jsr250-api:1.0'    // You may need to add this to support the dagger-compiler's compile-time-only use of the @Generated annotation 
+      ...
+  }
+```
 
 ### Download 
 
