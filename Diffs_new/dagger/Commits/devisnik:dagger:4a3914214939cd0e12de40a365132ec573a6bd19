diff --git a/examples/android-activity-graphs/README.md b/examples/android-activity-graphs/README.md
deleted file mode 100644
index ac3680bb5..000000000
--- a/examples/android-activity-graphs/README.md
+++ /dev/null
@@ -1,24 +0,0 @@
-Example: Android Activity Graphs
-================================
-
-Building on top of the simple Android example, this example demonstrates how it is possible to
-create child graphs for each activity which extend from the global graph.
-
-Some of the advantages of the activity scope:
-
- * Provides the ability to inject objects which require the activity to be constructed.
- * Allows for the use of singletons on a per-activity basis. This is a great way to manage a
-   resource that is shared by a bunch of fragments in an activity.
- * Keeps the global object graph clear of things that can be used only by activities.
-
-While this example only shows the presence of an activity scope, you should be able to see the
-potential for other useful scopes that can be used. For example, having a dedicated object graph
-for the current user session is a great way to manage data that is tied to the currently logged-in
-user.
-
-_Note: The app does not actually do anything when it is run. It is only to show how you can
- structure Dagger within an Android app_
-
-_Note: The app is in transition to Dagger 2 and may not reflect recommended patterns.  Before
- we release Dagger 2.0 it will, but until this note is removed, please do not rely on this
- example as a strong recommendation._
diff --git a/examples/android-activity-graphs/pom.xml b/examples/android-activity-graphs/pom.xml
deleted file mode 100644
index 83247d6e5..000000000
--- a/examples/android-activity-graphs/pom.xml
+++ /dev/null
@@ -1,67 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright (C) 2013 The Dagger Authors.
-
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-
-  <parent>
-    <groupId>com.google.dagger.example</groupId>
-    <artifactId>dagger-example-parent</artifactId>
-    <version>HEAD-SNAPSHOT</version>
-  </parent>
-
-  <artifactId>android-activity-graphs</artifactId>
-  <name>Examples: Android - Activity Graphs</name>
-  <packaging>apk</packaging>
-
-  <dependencies>
-    <dependency>
-      <!-- Force the correct version of Guava to be on the classpath. -->
-      <groupId>com.google.guava</groupId>
-      <artifactId>guava</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.google.dagger</groupId>
-      <artifactId>dagger</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.google.dagger</groupId>
-      <artifactId>dagger-compiler</artifactId>
-      <scope>provided</scope>
-      <optional>true</optional>
-    </dependency>
-
-    <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>android</artifactId>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>support-v4</artifactId>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>com.simpligility.maven.plugins</groupId>
-        <artifactId>android-maven-plugin</artifactId>
-        <extensions>true</extensions>
-      </plugin>
-    </plugins>
-  </build>
-</project>
diff --git a/examples/android-activity-graphs/src/main/AndroidManifest.xml b/examples/android-activity-graphs/src/main/AndroidManifest.xml
deleted file mode 100644
index 234406dfa..000000000
--- a/examples/android-activity-graphs/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    android:versionCode="1"
-    android:versionName="1.0.0"
-    package="com.example.dagger.activitygraphs">
-
-  <uses-sdk android:minSdkVersion="4" android:targetSdkVersion="17"/>
-
-  <application
-      android:label="app_name"
-      android:name=".DemoApplication">
-    <activity
-        android:label="app_name"
-        android:name=".ui.HomeActivity">
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN"/>
-        <category android:name="android.intent.category.LAUNCHER"/>
-        <category android:name="android.intent.category.DEFAULT"/>
-      </intent-filter>
-    </activity>
-  </application>
-</manifest>
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java
deleted file mode 100644
index 35f578d6c..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs;
-
-import android.app.Activity;
-import dagger.Component;
-
-/**
- * A base component upon which fragment's components may depend.  Activity-level components
- * should extend this component.
- */
-@PerActivity // Subtypes of AbstractActivityComponent should be decorated with @PerActivity.
-@Component(dependencies = ApplicationComponent.class, modules = ActivityModule.class)
-public interface AbstractActivityComponent {
-  Activity activity(); // Expose the activity to sub-graphs.
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
deleted file mode 100644
index 1a2a5945e..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs;
-
-import android.app.Activity;
-import dagger.Module;
-import dagger.Provides;
-
-/**
- * A module to wrap the Activity state and expose it to the graph.
- */
-@Module
-public class ActivityModule {
-  private final Activity activity;
-
-  public ActivityModule(Activity activity) {
-    this.activity = activity;
-  }
-
-  /**
-   * Expose the activity to dependents in the graph.
-   */
-  @Provides @PerActivity Activity activity() {
-    return activity;
-  }
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ApplicationComponent.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ApplicationComponent.java
deleted file mode 100644
index 37629ee3b..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ApplicationComponent.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs;
-
-import android.app.Application;
-import android.location.LocationManager;
-import dagger.Component;
-import javax.inject.Singleton;
-
-/**
- * A component whose lifetime is the life of the application.
- */
-@Singleton // Constraints this component to one-per-application or unscoped bindings.
-@Component(modules = DemoApplicationModule.class)
-public interface ApplicationComponent {
-  // Field injections of any dependencies of the DemoApplication
-  void inject(DemoApplication application);
-
-  // Exported for child-components.
-  Application application();
-  LocationManager locationManager();
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
deleted file mode 100644
index 1174a62bf..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs;
-
-import android.app.Application;
-import android.location.LocationManager;
-import javax.inject.Inject;
-
-public class DemoApplication extends Application {
-  private ApplicationComponent applicationComponent;
-
-  // TODO(cgruber): Figure out a better example of something one might inject into the app.
-  @Inject LocationManager locationManager; // to illustrate injecting something into the app.
-
-  @Override public void onCreate() {
-    super.onCreate();
-    applicationComponent = DaggerApplicationComponent.builder()
-        .demoApplicationModule(new DemoApplicationModule(this))
-        .build();
-  }
-
-  public ApplicationComponent component() {
-    return applicationComponent;
-  }
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplicationModule.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplicationModule.java
deleted file mode 100644
index e3f4634ad..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplicationModule.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs;
-
-import static android.content.Context.LOCATION_SERVICE;
-
-import android.app.Application;
-import android.location.LocationManager;
-import dagger.Module;
-import dagger.Provides;
-import javax.inject.Singleton;
-
-/**
- * A module for Android-specific dependencies which require a {@link Context} or
- * {@link android.app.Application} to create.
- */
-@Module
-public class DemoApplicationModule {
-  private final Application application;
-
-  public DemoApplicationModule(Application application) {
-    this.application = application;
-  }
-
-  /**
-   * Expose the application to the graph.
-   */
-  @Provides @Singleton Application application() {
-    return application;
-  }
-
-  @Provides @Singleton LocationManager provideLocationManager() {
-    return (LocationManager) application.getSystemService(LOCATION_SERVICE);
-  }
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/PerActivity.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/PerActivity.java
deleted file mode 100644
index f4700161c..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/PerActivity.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs;
-
-import static java.lang.annotation.RetentionPolicy.RUNTIME;
-
-import java.lang.annotation.Retention;
-import javax.inject.Scope;
-
-/**
- * A scoping annotation to permit objects whose lifetime should
- * conform to the life of the activity to be memoized in the
- * correct component.
- */
-@Scope
-@Retention(RUNTIME)
-public @interface PerActivity {
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java
deleted file mode 100644
index 6352d837f..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/ActivityTitleController.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs.ui;
-
-import android.app.Activity;
-import com.example.dagger.activitygraphs.PerActivity;
-import javax.inject.Inject;
-
-/**
- * A simple abstraction which provides the ability to set the title on an activity.
- * <p>
- * Fragments should not directly modify any part of an activity outside of the view or dialog that
- * it creates. This class provides a way for fragments to inject a controller that will allow for
- * control of the activity title. While not exceedingly useful in practice, this concept could be
- * expanded to things like facilitating control over the action bar, dialogs, notifications, etc.
- */
-@PerActivity
-public class ActivityTitleController {
-  private final Activity activity;
-
-  @Inject public ActivityTitleController(Activity activity) {
-    this.activity = activity;
-  }
-
-  public void setTitle(CharSequence title) {
-    activity.setTitle(title);
-  }
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java
deleted file mode 100644
index dcdb1b885..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeActivity.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs.ui;
-
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.support.v4.app.FragmentActivity;
-import com.example.dagger.activitygraphs.ActivityModule;
-import com.example.dagger.activitygraphs.DemoApplication;
-import javax.inject.Inject;
-
-public class HomeActivity extends FragmentActivity {
-  @Inject LocationManager locationManager;
-  private HomeComponent component;
-
-  HomeComponent component() {
-    if (component == null) {
-      component = DaggerHomeComponent.builder()
-          .applicationComponent(((DemoApplication) getApplication()).component())
-          .activityModule(new ActivityModule(this))
-          .build();
-    }
-    return component;
-  }
-
-  @Override protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    component().inject(this);
-
-    if (savedInstanceState == null) {
-      getSupportFragmentManager().beginTransaction()
-          .add(android.R.id.content, new HomeFragment())
-          .commit();
-    }
-
-    // TODO do something with the injected dependencies here!
-  }
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeComponent.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeComponent.java
deleted file mode 100644
index 57b9b894b..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeComponent.java
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs.ui;
-
-import com.example.dagger.activitygraphs.AbstractActivityComponent;
-import com.example.dagger.activitygraphs.ActivityModule;
-import com.example.dagger.activitygraphs.ApplicationComponent;
-import com.example.dagger.activitygraphs.PerActivity;
-import dagger.Component;
-
-@PerActivity
-@Component(dependencies = ApplicationComponent.class, modules = ActivityModule.class)
-public interface HomeComponent extends AbstractActivityComponent {
-  void inject(HomeActivity homeActivity);
-  void inject(HomeFragment homeFragment);
-}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java
deleted file mode 100644
index 37d6383c2..000000000
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ui/HomeFragment.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.activitygraphs.ui;
-
-import static android.view.Gravity.CENTER;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-import javax.inject.Inject;
-
-public class HomeFragment extends Fragment {
-  @Inject ActivityTitleController titleController;
-
-  @Override public void onActivityCreated(Bundle savedInstanceState) {
-    super.onActivityCreated(savedInstanceState);
-    ((HomeActivity) getActivity()).component().inject(this);
-  }
-
-  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container,
-      Bundle savedInstanceState) {
-    TextView tv = new TextView(getActivity());
-    tv.setGravity(CENTER);
-    tv.setText("Hello, World");
-    return tv;
-  }
-
-  @Override public void onResume() {
-    super.onResume();
-
-    // Fragments should not modify things outside of their own view. Use an external controller to
-    // ask the activity to change its title.
-    titleController.setTitle("Home Fragment");
-  }
-}
diff --git a/examples/android-simple/README.md b/examples/android-simple/README.md
deleted file mode 100644
index 944d01533..000000000
--- a/examples/android-simple/README.md
+++ /dev/null
@@ -1,17 +0,0 @@
-Example: Android Simple
-=======================
-
-This example demonstrates how to structure an Android application with Dagger.
-
-A custom `Application` class is used to manage a global object graph of objects. Modules are
-assembled with a `getModules` method on the application that can be overridden to add additional
-modules in development versions of your applications or in tests.
-
-Injection of activities is done automatically in a base activity.
-
-_Note: The app does not actually do anything when it is run. It is only to show how you can
- structure Dagger within an Android app_
-
-_Note: The app is in transition to Dagger 2 and may not reflect recommended patterns.  Before
- we release Dagger 2.0 it will, but until this note is removed, please do not rely on this
- example as a strong recommendation._
diff --git a/examples/android-simple/pom.xml b/examples/android-simple/pom.xml
deleted file mode 100644
index 75183cdef..000000000
--- a/examples/android-simple/pom.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright (C) 2013 The Dagger Authors.
-
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-
-  <parent>
-    <groupId>com.google.dagger.example</groupId>
-    <artifactId>dagger-example-parent</artifactId>
-    <version>HEAD-SNAPSHOT</version>
-  </parent>
-
-  <artifactId>android-simple</artifactId>
-  <name>Examples: Android - Simple</name>
-  <packaging>apk</packaging>
-
-  <dependencies>
-    <dependency>
-      <!-- Force the correct version of Guava to be on the classpath. -->
-      <groupId>com.google.guava</groupId>
-      <artifactId>guava</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.google.dagger</groupId>
-      <artifactId>dagger</artifactId>
-    </dependency>
-    <dependency>
-      <groupId>com.google.dagger</groupId>
-      <artifactId>dagger-compiler</artifactId>
-      <scope>provided</scope>
-      <optional>true</optional>
-    </dependency>
-
-    <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>android</artifactId>
-      <scope>provided</scope>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>com.simpligility.maven.plugins</groupId>
-        <artifactId>android-maven-plugin</artifactId>
-        <extensions>true</extensions>
-      </plugin>
-    </plugins>
-  </build>
-</project>
diff --git a/examples/android-simple/src/main/AndroidManifest.xml b/examples/android-simple/src/main/AndroidManifest.xml
deleted file mode 100644
index 53c83bfd3..000000000
--- a/examples/android-simple/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    android:versionCode="1"
-    android:versionName="1.0.0"
-    package="com.example.dagger.simple">
-
-  <uses-sdk android:minSdkVersion="4" android:targetSdkVersion="17"/>
-
-  <application
-      android:label="app_name"
-      android:name=".DemoApplication">
-    <activity
-        android:label="app_name"
-        android:name=".ui.HomeActivity">
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN"/>
-        <category android:name="android.intent.category.LAUNCHER"/>
-        <category android:name="android.intent.category.DEFAULT"/>
-      </intent-filter>
-    </activity>
-  </application>
-</manifest>
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java b/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java
deleted file mode 100644
index 574fa727c..000000000
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/AndroidModule.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.simple;
-
-import static android.content.Context.LOCATION_SERVICE;
-
-import android.content.Context;
-import android.location.LocationManager;
-import dagger.Module;
-import dagger.Provides;
-import javax.inject.Singleton;
-
-/**
- * A module for Android-specific dependencies which require a {@link Context} or
- * {@link android.app.Application} to create.
- */
-@Module
-public class AndroidModule {
-  private final DemoApplication application;
-
-  public AndroidModule(DemoApplication application) {
-    this.application = application;
-  }
-
-  /**
-   * Allow the application context to be injected but require that it be annotated with
-   * {@link ForApplication @Annotation} to explicitly differentiate it from an activity context.
-   */
-  @Provides @Singleton @ForApplication Context provideApplicationContext() {
-    return application;
-  }
-
-  @Provides @Singleton LocationManager provideLocationManager() {
-    return (LocationManager) application.getSystemService(LOCATION_SERVICE);
-  }
-}
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoActivity.java b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoActivity.java
deleted file mode 100644
index 4847b101c..000000000
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoActivity.java
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.simple;
-
-import android.app.Activity;
-import android.os.Bundle;
-
-public abstract class DemoActivity extends Activity {
-  @Override protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    // Perform injection so that when this call returns all dependencies will be available for use.
-    ((DemoApplication) getApplication()).component().inject(this);
-  }
-}
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java b/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java
deleted file mode 100644
index d6b3868f5..000000000
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/DemoApplication.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.simple;
-
-import android.app.Application;
-import android.location.LocationManager;
-import com.example.dagger.simple.ui.HomeActivity;
-import dagger.Component;
-import javax.inject.Inject;
-import javax.inject.Singleton;
-
-public class DemoApplication extends Application {
-  
-  @Singleton
-  @Component(modules = AndroidModule.class)
-  public interface ApplicationComponent {
-    void inject(DemoApplication application);
-    void inject(HomeActivity homeActivity);
-    void inject(DemoActivity demoActivity);
-  }
-  
-  @Inject LocationManager locationManager; // for some reason.
-  
-  private ApplicationComponent component;
-
-  @Override public void onCreate() {
-    super.onCreate();
-    component = DaggerDemoApplication_ApplicationComponent.builder()
-        .androidModule(new AndroidModule(this))
-        .build();
-    component().inject(this); // As of now, LocationManager should be injected into this.
-  }
-
-  public ApplicationComponent component() {
-    return component;
-  }
-}
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java b/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java
deleted file mode 100644
index 517843efd..000000000
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/ForApplication.java
+++ /dev/null
@@ -1,26 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.simple;
-
-import static java.lang.annotation.RetentionPolicy.RUNTIME;
-
-import java.lang.annotation.Retention;
-import javax.inject.Qualifier;
-
-@Qualifier @Retention(RUNTIME)
-public @interface ForApplication {
-}
diff --git a/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java b/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java
deleted file mode 100644
index f0669c61d..000000000
--- a/examples/android-simple/src/main/java/com/example/dagger/simple/ui/HomeActivity.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Copyright (C) 2013 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.example.dagger.simple.ui;
-
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.util.Log;
-import com.example.dagger.simple.DemoActivity;
-import com.example.dagger.simple.DemoApplication;
-import javax.inject.Inject;
-
-public class HomeActivity extends DemoActivity {
-  @Inject LocationManager locationManager;
-
-  @Override protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    ((DemoApplication) getApplication()).component().inject(this);
-
-    // TODO do something with the injected dependencies here!
-    Log.d("HomeActivity", locationManager.toString());
-  }
-}
diff --git a/java/dagger/example/android/simple/MainActivity.java b/java/dagger/example/android/simple/MainActivity.java
index 8ba224f75..8a51ae07f 100644
--- a/java/dagger/example/android/simple/MainActivity.java
+++ b/java/dagger/example/android/simple/MainActivity.java
@@ -53,7 +53,7 @@
   @Inject @Model String model;
 
   @Inject
-  void logInjnection() {
+  void logInjection() {
     Log.i(TAG, "Injecting " + MainActivity.class.getSimpleName());
   }
 
