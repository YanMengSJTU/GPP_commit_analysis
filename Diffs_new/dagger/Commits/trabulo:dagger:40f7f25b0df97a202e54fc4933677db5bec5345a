diff --git a/java/dagger/internal/codegen/BUILD b/java/dagger/internal/codegen/BUILD
index fd952ef94..f2e41396e 100644
--- a/java/dagger/internal/codegen/BUILD
+++ b/java/dagger/internal/codegen/BUILD
@@ -199,8 +199,8 @@ java_library(
 java_library(
     name = "binding_graph_validation",
     srcs = [
-        "BindingCycleValidation.java",
         "BindingGraphValidationModule.java",
+        "DependencyCycleValidation.java",
         "DependsOnProductionExecutorValidator.java",
         "DuplicateBindingsValidation.java",
         "IncompatiblyScopedBindingsValidation.java",
@@ -209,7 +209,7 @@ java_library(
         "MapMultibindingValidation.java",
         "MembersInjectionBindingValidation.java",
         "MissingBindingValidation.java",
-        "NonNullableRequestForNullableBindingValidation.java",
+        "NullableBindingValidation.java",
         "ProvisionDependencyOnProducerBindingValidation.java",
         "SubcomponentFactoryMethodValidation.java",
         "Validation.java",
diff --git a/java/dagger/internal/codegen/BindingGraphValidationModule.java b/java/dagger/internal/codegen/BindingGraphValidationModule.java
index 7ed179f63..9dfa285a9 100644
--- a/java/dagger/internal/codegen/BindingGraphValidationModule.java
+++ b/java/dagger/internal/codegen/BindingGraphValidationModule.java
@@ -28,7 +28,7 @@
   @Binds
   @IntoSet
   @Validation
-  BindingGraphPlugin bindingCycle(BindingCycleValidation validation);
+  BindingGraphPlugin dependencyCycle(DependencyCycleValidation validation);
 
   @Binds
   @IntoSet
@@ -68,12 +68,12 @@
   @Binds
   @IntoSet
   @Validation
-  BindingGraphPlugin nullable(NonNullableRequestForNullableBindingValidation validation);
+  BindingGraphPlugin nullableBinding(NullableBindingValidation validation);
 
   @Binds
   @IntoSet
   @Validation
-  BindingGraphPlugin providerDependsOnProducer(
+  BindingGraphPlugin provisionDependencyOnProducerBinding(
       ProvisionDependencyOnProducerBindingValidation validation);
 
   @Binds
diff --git a/java/dagger/internal/codegen/BindingCycleValidation.java b/java/dagger/internal/codegen/DependencyCycleValidation.java
similarity index 96%
rename from java/dagger/internal/codegen/BindingCycleValidation.java
rename to java/dagger/internal/codegen/DependencyCycleValidation.java
index ed61c36b6..5e91fac1a 100644
--- a/java/dagger/internal/codegen/BindingCycleValidation.java
+++ b/java/dagger/internal/codegen/DependencyCycleValidation.java
@@ -55,19 +55,19 @@
 import javax.inject.Provider;
 import javax.lang.model.type.TypeMirror;
 
-/** Reports errors for binding cycles. */
-final class BindingCycleValidation implements BindingGraphPlugin {
+/** Reports errors for dependency cycles. */
+final class DependencyCycleValidation implements BindingGraphPlugin {
 
   private final DependencyRequestFormatter dependencyRequestFormatter;
 
   @Inject
-  BindingCycleValidation(DependencyRequestFormatter dependencyRequestFormatter) {
+  DependencyCycleValidation(DependencyRequestFormatter dependencyRequestFormatter) {
     this.dependencyRequestFormatter = dependencyRequestFormatter;
   }
 
   @Override
   public String pluginName() {
-    return "Dagger/BindingCycle";
+    return "Dagger/DependencyCycle";
   }
 
   @Override
@@ -291,7 +291,7 @@ int size() {
       ImmutableSet.Builder<EndpointPair<N>> shifted = ImmutableSet.builder();
       shifted.addAll(skip(endpointPairs(), startIndex));
       shifted.addAll(limit(endpointPairs(), size() - startIndex));
-      return new AutoValue_BindingCycleValidation_Cycle<>(shifted.build());
+      return new AutoValue_DependencyCycleValidation_Cycle<>(shifted.build());
     }
 
     @Override
@@ -310,7 +310,7 @@ public final String toString() {
       for (int i = 0; i < nodes.size() - 1; i++) {
         cycle.add(EndpointPair.ordered(nodes.get(i), nodes.get(i + 1)));
       }
-      return new AutoValue_BindingCycleValidation_Cycle<>(cycle.build());
+      return new AutoValue_DependencyCycleValidation_Cycle<>(cycle.build());
     }
   }
 }
diff --git a/java/dagger/internal/codegen/NonNullableRequestForNullableBindingValidation.java b/java/dagger/internal/codegen/NullableBindingValidation.java
similarity index 94%
rename from java/dagger/internal/codegen/NonNullableRequestForNullableBindingValidation.java
rename to java/dagger/internal/codegen/NullableBindingValidation.java
index 6734824fd..9ff791f62 100644
--- a/java/dagger/internal/codegen/NonNullableRequestForNullableBindingValidation.java
+++ b/java/dagger/internal/codegen/NullableBindingValidation.java
@@ -32,12 +32,12 @@
  * Reports errors or warnings (depending on the {@code -Adagger.nullableValidation} value) for each
  * non-nullable dependency request that is satisfied by a nullable binding.
  */
-final class NonNullableRequestForNullableBindingValidation implements BindingGraphPlugin {
+final class NullableBindingValidation implements BindingGraphPlugin {
 
   private final CompilerOptions compilerOptions;
 
   @Inject
-  NonNullableRequestForNullableBindingValidation(CompilerOptions compilerOptions) {
+  NullableBindingValidation(CompilerOptions compilerOptions) {
     this.compilerOptions = compilerOptions;
   }
 
diff --git a/javatests/dagger/internal/codegen/GraphValidationTest.java b/javatests/dagger/internal/codegen/GraphValidationTest.java
index 94281b446..48a8c8c17 100644
--- a/javatests/dagger/internal/codegen/GraphValidationTest.java
+++ b/javatests/dagger/internal/codegen/GraphValidationTest.java
@@ -19,7 +19,7 @@
 import static com.google.testing.compile.CompilationSubject.assertThat;
 import static com.google.testing.compile.Compiler.javac;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
-import static dagger.internal.codegen.NonNullableRequestForNullableBindingValidation.nullableToNonNullable;
+import static dagger.internal.codegen.NullableBindingValidation.nullableToNonNullable;
 import static dagger.internal.codegen.TestUtils.message;
 
 import com.google.testing.compile.Compilation;
