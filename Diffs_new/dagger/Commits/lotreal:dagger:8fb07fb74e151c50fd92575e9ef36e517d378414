diff --git a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
index db890b246..fff31e569 100644
--- a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
+++ b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
@@ -467,11 +467,11 @@ private void addField(ResolvedBindings resolvedBindings) {
     }
     
     // No field needed for bindings with no dependencies or state.
-    Optional<MemberSelect> staticMemberSelect = staticMemberSelect(resolvedBindings);
-    if (staticMemberSelect.isPresent()) {
-      memberSelectSnippets.put(bindingKey, staticMemberSelect.get());
-      return;
-    }
+//    Optional<MemberSelect> staticMemberSelect = staticMemberSelect(resolvedBindings);
+//    if (staticMemberSelect.isPresent()) {
+//      memberSelectSnippets.put(bindingKey, staticMemberSelect.get());
+//      return;
+//    }
 
     Optional<String> bindingPackage = bindingPackageFor(resolvedBindings.bindings());
     boolean useRawType = bindingPackage.isPresent()
diff --git a/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java b/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java
index 7fbcf115d..47949fb55 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java
@@ -74,7 +74,8 @@
   }
 
   Strategy injectionStrategy() {
-    return injectionSites().isEmpty() ? Strategy.NO_OP : Strategy.INJECT_MEMBERS;
+    return Strategy.INJECT_MEMBERS;
+    // return injectionSites().isEmpty() ? Strategy.NO_OP : Strategy.INJECT_MEMBERS;
   }
 
   MembersInjectionBinding withoutParentInjectorRequest() {
diff --git a/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java b/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java
index 3694d2e81..2112d4d8c 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java
@@ -110,7 +110,7 @@ ClassName nameGeneratedType(MembersInjectionBinding binding) {
   @Override
   ImmutableSet<JavaWriter> write(ClassName generatedTypeName, MembersInjectionBinding binding) {
     // Empty members injection bindings are special and don't need source files.
-    if (binding.injectionSites().isEmpty()) {
+    if (binding.injectionStrategy().equals(MembersInjectionBinding.Strategy.NO_OP)) {
       return ImmutableSet.of();
     }
     Set<String> delegateMethods = new HashSet<>();
@@ -229,6 +229,11 @@ ClassName nameGeneratedType(MembersInjectionBinding binding) {
       injectMembersWriter.annotate(SuppressWarnings.class).setValue("unchecked");
     }
 
+    injectMembersWriter.body().addSnippet(Joiner.on('\n').join(
+        "// instance.injectExtra = (Config) instance.getIntent().getSerializableExtra(\"config\");",
+        "// ButterKnife.bind(instance);"
+    ));
+
     return ImmutableSet.of(writer);
   }
 
