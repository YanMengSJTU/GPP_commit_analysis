diff --git a/java/dagger/internal/codegen/ComponentModelBuilder.java b/java/dagger/internal/codegen/ComponentModelBuilder.java
index 5bd3fb697..1ecc92ed7 100644
--- a/java/dagger/internal/codegen/ComponentModelBuilder.java
+++ b/java/dagger/internal/codegen/ComponentModelBuilder.java
@@ -297,7 +297,7 @@ private MethodSignature getMethodSignature(ComponentMethodDescriptor method) {
 
   private void addSubcomponents() {
     for (BindingGraph subgraph : graph.subgraphs()) {
-      // TODO(b/72748365): Can an abstract inner subcomponent implementation be elided if it's
+      // TODO(b/117833324): Can an abstract inner subcomponent implementation be elided if it's
       // totally empty?
       generatedComponentModel.addSubcomponent(
           subgraph.componentDescriptor(), buildSubcomponentModel(subgraph));
diff --git a/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java b/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
index 48ded6b8a..395de0436 100644
--- a/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
+++ b/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
@@ -702,9 +702,6 @@ public void generatedInstanceBinding() {
             "",
             "@Subcomponent",
             "interface Leaf {",
-            // "  Leaf leaf();", // TODO(b/72748365): enable this (and fix the bug that's causing
-            // this to stack overflow
-            "",
             "  @Subcomponent.Builder",
             "  interface Builder {",
             "    Leaf build();",
