diff --git a/users-guide.md b/users-guide.md
index f6c7ffaef..93b914cbb 100644
--- a/users-guide.md
+++ b/users-guide.md
@@ -439,6 +439,36 @@ Supply qualified values by annotating the corresponding `@Provides` method.
 
 Dependencies may not have multiple qualifier annotations.
 
+### Optional bindings
+
+If you want a binding to work even if some dependency is not bound in the
+component, you can add a [`@BindsOptionalOf`] method to a module:
+
+```java
+@BindsOptionalOf abstract CoffeeCozy optionalCozy();
+```
+
+That means that `@Inject` constructors and members and `@Provides` methods can
+depend on an `Optional<CoffeeCozy>` object. If there is a binding for
+`CoffeeCozy` in the component, the `Optional` will be present; if there is no
+binding for `CoffeeCozy`, the `Optional` will be absent.
+
+Specifically, you can inject any of the following:
+
+*   `Optional<CoffeeCozy>`
+*   `Optional<Provider<CoffeeCozy>>`
+*   `Optional<Lazy<CoffeeCozy>>`
+*   `Optional<Provider<Lazy<CoffeeCozy>>>`
+
+(You could also inject a `Provider` or `Lazy` or `Provider` of `Lazy` of any of
+those, but that isn't very useful.)
+
+An optional binding that is absent in one component can be present in a
+subcomponent if the subcomponent includes a binding for the underlying type.
+
+At the moment, only Guava's [`Optional`][guava-optional] works, although we are
+planning to support Java 8's [`Optional`][jdk-optional] as well.
+
 ### Compile-time Validation
 
 The Dagger [annotation processor][Annotation Processor] is strict and will cause
@@ -530,29 +560,32 @@ limitations under the License.
 
 [Android Application]: http://developer.android.com/reference/android/app/Application.html
 [Annotation Processor]: http://docs.oracle.com/javase/6/docs/api/javax/annotation/processing/package-summary.html
+[`@BindsOptionalOf`]: http://google.github.io/dagger/api/latest/dagger/BindsOptionalOf.html
 [Builder Pattern]: http://en.wikipedia.org/wiki/Builder_pattern
 [CoffeeMaker Example]: https://github.com/google/dagger/tree/master/examples/simple/src/main/java/coffee
-[Component]: http://google.github.io/dagger/api/latest/dagger/Component.html
-[Component#provision-methods]: http://google.github.io/dagger/api/latest/dagger/Component.html#provision-methods
 [Component#dependencies]: http://google.github.io/dagger/api/latest/dagger/Component.html#dependencies()
+[Component#provision-methods]: http://google.github.io/dagger/api/latest/dagger/Component.html#provision-methods
+[Component]: http://google.github.io/dagger/api/latest/dagger/Component.html
 [Dagger Talk Slides]: https://docs.google.com/presentation/d/1fby5VeGU9CN8zjw4lAb2QPPsKRxx6mSwCe9q7ECNSJQ/pub?start=false&loop=false&delayms=3000
 [DI]: http://en.wikipedia.org/wiki/Dependency_injection
 [Documented]: http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Documented.html
 [Factory Pattern]: https://en.wikipedia.org/wiki/Factory_(object-oriented_programming)
 [+Gregory Kick]: https://google.com/+GregoryKick/
-[JSR 330]: https://jcp.org/en/jsr/detail?id=330
-[`javax.inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/package-summary.html
+[guava-optional]: https://google.github.io/guava/releases/19.0/api/docs/com/google/common/base/Optional.html
 [`javax.inject.Inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html
+[`javax.inject`]: http://docs.oracle.com/javaee/7/api/javax/inject/package-summary.html
+[jdk-optional]: https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html
+[JSR 330]: https://jcp.org/en/jsr/detail?id=330
 [Lazy]: http://google.github.io/dagger/api/latest/dagger/Lazy.html
 [Module]: http://google.github.io/dagger/api/latest/dagger/Module.html
 [Named]: http://docs.oracle.com/javaee/7/api/javax/inject/Named.html
 [Provider]: http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html
 [Provides]: http://google.github.io/dagger/api/latest/dagger/Provides.html
-[`@Reusable`]: http://google.github.io/dagger/api/latest/dagger/Reusable.html
 [Qualifier]: http://docs.oracle.com/javaee/7/api/javax/inject/Qualifier.html
+[`@Reusable`]: http://google.github.io/dagger/api/latest/dagger/Reusable.html
 [Scope]: http://docs.oracle.com/javaee/7/api/javax/inject/Scope.html
 [Singleton]: http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html
-[Subcomponent]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.html
 [Subcomponent.Builder]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.Builder.html
+[Subcomponent]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.html
 [`WeakReference`]: https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html
 
