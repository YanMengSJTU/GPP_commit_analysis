diff --git a/java/dagger/internal/codegen/FrameworkField.java b/java/dagger/internal/codegen/FrameworkField.java
index 6d29c5e0e..de2ada047 100644
--- a/java/dagger/internal/codegen/FrameworkField.java
+++ b/java/dagger/internal/codegen/FrameworkField.java
@@ -28,8 +28,9 @@
 import javax.lang.model.element.ElementVisitor;
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.TypeElement;
+import javax.lang.model.element.VariableElement;
 import javax.lang.model.type.TypeMirror;
-import javax.lang.model.util.ElementKindVisitor6;
+import javax.lang.model.util.ElementKindVisitor8;
 
 /**
  * A value object that represents a field in the generated Component class.
@@ -96,7 +97,7 @@ private static String frameworkFieldName(ResolvedBindings resolvedBindings) {
   }
 
   private static final ElementVisitor<String, Binding> BINDING_ELEMENT_NAME =
-      new ElementKindVisitor6<String, Binding>() {
+      new ElementKindVisitor8<String, Binding>() {
 
         @Override
         protected String defaultAction(Element e, Binding p) {
@@ -117,6 +118,11 @@ public String visitExecutableAsMethod(ExecutableElement e, Binding p) {
         public String visitType(TypeElement e, Binding p) {
           return CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_CAMEL, e.getSimpleName().toString());
         }
+
+        @Override
+        public String visitVariableAsParameter(VariableElement e, Binding p) {
+          return e.getSimpleName().toString();
+        }
       };
 
   abstract ParameterizedTypeName type();
