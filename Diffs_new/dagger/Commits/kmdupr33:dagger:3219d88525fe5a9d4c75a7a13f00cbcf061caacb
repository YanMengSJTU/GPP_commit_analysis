diff --git a/java/dagger/example/android/espresso/main/AndroidManifest.xml b/java/dagger/example/android/espresso/main/AndroidManifest.xml
new file mode 100644
index 000000000..060e37422
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/AndroidManifest.xml
@@ -0,0 +1,20 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+  package="com.example.android.espresso">
+
+  <uses-sdk
+    android:minSdkVersion="14"
+    android:targetSdkVersion="24"/>
+
+  <application
+    android:label="Espresso Dagger"
+    android:name="dagger.example.android.espresso.main.MainApplication"
+    android:theme="@style/Theme.AppCompat.Light.NoActionBar">
+    <activity android:name="dagger.example.android.espresso.main.MainActivity">
+      <intent-filter>
+        <action android:name="android.intent.action.MAIN" />
+        <category android:name="android.intent.category.LAUNCHER" />
+      </intent-filter>
+    </activity>
+  </application>
+
+</manifest>
diff --git a/java/dagger/example/android/espresso/main/ApiClient.java b/java/dagger/example/android/espresso/main/ApiClient.java
new file mode 100644
index 000000000..e95fb8479
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/ApiClient.java
@@ -0,0 +1,5 @@
+package dagger.example.android.espresso.main;
+
+public interface ApiClient {
+  String getRemoteResource();
+}
diff --git a/java/dagger/example/android/espresso/main/BUILD b/java/dagger/example/android/espresso/main/BUILD
new file mode 100644
index 000000000..8c261a313
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/BUILD
@@ -0,0 +1,24 @@
+package(default_visibility = ["//:src"])
+
+android_library(
+    name = "main_lib",
+    srcs = glob(["*.java"]),
+    manifest = "AndroidManifest.xml",
+    resource_files = glob(["res/**"]),
+    deps = [
+        "//:android",
+        "//:android-support",
+        "//:dagger_with_compiler",
+        "@androidsdk//com.android.support:appcompat-v7-25.0.0",
+        "@androidsdk//com.android.support:support-annotations-25.0.0",
+        "@androidsdk//com.android.support:support-v4-25.0.0",
+    ],
+)
+
+android_binary(
+    name = "espresso_main",
+    manifest = "AndroidManifest.xml",
+    deps = [
+        "//java/dagger/example/android/espresso/main:main_lib"
+    ]
+)
\ No newline at end of file
diff --git a/java/dagger/example/android/espresso/main/MainActivity.java b/java/dagger/example/android/espresso/main/MainActivity.java
new file mode 100644
index 000000000..f19b584ef
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/MainActivity.java
@@ -0,0 +1,50 @@
+package dagger.example.android.espresso.main;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.TextView;
+import dagger.Binds;
+import dagger.android.ActivityKey;
+import dagger.android.AndroidInjector;
+import dagger.android.support.DaggerAppCompatActivity;
+import dagger.multibindings.IntoMap;
+import javax.inject.Inject;
+
+public class MainActivity extends DaggerAppCompatActivity {
+
+  private static final String TAG = MainActivity.class.getSimpleName();
+
+  @dagger.Subcomponent
+  public interface Component extends AndroidInjector<MainActivity> {
+
+    @dagger.Subcomponent.Builder
+    abstract class Builder extends AndroidInjector.Builder<MainActivity> {}
+  }
+
+  @dagger.Module(subcomponents = Component.class)
+  public abstract class Module {
+
+    @Binds
+    @IntoMap
+    @ActivityKey(MainActivity.class)
+    abstract AndroidInjector.Factory<? extends Activity> bind(
+        MainActivity.Component.Builder builder);
+  }
+
+  @Inject
+  ApiClient apiClient;
+
+  @Inject
+  void logInjection() {
+    Log.i(TAG, "Injecting " + MainActivity.class.getSimpleName());
+  }
+
+  @Override
+  protected void onCreate(Bundle savedInstanceState) {
+    super.onCreate(savedInstanceState);
+    setContentView(R.layout.activity_main);
+    TextView textView = (TextView) findViewById(R.id.textView);
+    textView.setText(apiClient.getRemoteResource());
+  }
+}
diff --git a/java/dagger/example/android/espresso/main/MainApplication.java b/java/dagger/example/android/espresso/main/MainApplication.java
new file mode 100644
index 000000000..617d477fe
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/MainApplication.java
@@ -0,0 +1,33 @@
+package dagger.example.android.espresso.main;
+
+import android.util.Log;
+import dagger.android.AndroidInjector;
+import dagger.android.DaggerApplication;
+import dagger.android.support.AndroidSupportInjectionModule;
+import javax.inject.Inject;
+
+public class MainApplication extends DaggerApplication {
+
+  private static final String TAG = MainApplication.class.getSimpleName();
+
+  @dagger.Component(
+      modules = {AndroidSupportInjectionModule.class, MainActivity.Module.class, NetworkingModule.class}
+  )
+  /* @ApplicationScoped and/or @Singleton */
+  public interface Component extends AndroidInjector<MainApplication> {
+
+    @dagger.Component.Builder
+    abstract class Builder extends AndroidInjector.Builder<MainApplication> {
+    }
+  }
+
+  @Inject
+  void logInjection() {
+    Log.i(TAG, "Injecting " + MainApplication.class.getSimpleName());
+  }
+
+  @Override
+  protected AndroidInjector<MainApplication> applicationInjector() {
+    return DaggerMainApplication_Component.builder().create(this);
+  }
+}
diff --git a/java/dagger/example/android/espresso/main/NetworkingModule.java b/java/dagger/example/android/espresso/main/NetworkingModule.java
new file mode 100644
index 000000000..7a8dc3a2a
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/NetworkingModule.java
@@ -0,0 +1,16 @@
+package dagger.example.android.espresso.main;
+
+import dagger.Module;
+import dagger.Provides;
+
+@Module
+public class NetworkingModule {
+  @Provides ApiClient provideApiClient() {
+    return new ApiClient() {
+      @Override
+      public String getRemoteResource() {
+        return "remote resource";
+      }
+    };
+  }
+}
diff --git a/java/dagger/example/android/espresso/main/res/layout/activity_main.xml b/java/dagger/example/android/espresso/main/res/layout/activity_main.xml
new file mode 100644
index 000000000..70cc52319
--- /dev/null
+++ b/java/dagger/example/android/espresso/main/res/layout/activity_main.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+  android:id="@+id/textView"
+  android:textColor="@android:color/primary_text_light"
+  style="@style/TextAppearance.AppCompat.Display4"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent">
+</TextView>
\ No newline at end of file
diff --git a/java/dagger/example/android/espresso/package-info.java b/java/dagger/example/android/espresso/package-info.java
new file mode 100644
index 000000000..6ab788033
--- /dev/null
+++ b/java/dagger/example/android/espresso/package-info.java
@@ -0,0 +1,25 @@
+/*
+ * Copyright (C) 2017 The Dagger Authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+/**
+ * An application (with a build variant) that demonstrates how to swap out dependencies for testing
+ * purposes. The main package holds the code for the stubbable application and the stubbed package holds
+ * the code for the stubbed build variant of the application.
+ *
+ * This example follows the testing guidelines outlined in <a href="https://google.github.io/dagger/testing.html">
+ *   the Testing section of the documentation</a>.
+ */
+package dagger.example.android.espresso;
+
diff --git a/java/dagger/example/android/espresso/stubbed/AndroidManifest.xml b/java/dagger/example/android/espresso/stubbed/AndroidManifest.xml
new file mode 100644
index 000000000..0c706af91
--- /dev/null
+++ b/java/dagger/example/android/espresso/stubbed/AndroidManifest.xml
@@ -0,0 +1,18 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+  package="com.example.android.espresso.stubbed">
+
+  <uses-sdk
+    android:minSdkVersion="14"
+    android:targetSdkVersion="24" />
+  <application
+    android:name="dagger.example.android.espresso.stubbed.StubbedApplication"
+    android:label="Stubbed Espresso Dagger"
+    android:theme="@style/Theme.AppCompat.Light.NoActionBar">
+    <activity android:name="dagger.example.android.espresso.main.MainActivity">
+      <intent-filter>
+        <action android:name="android.intent.action.MAIN" />
+        <category android:name="android.intent.category.LAUNCHER" />
+      </intent-filter>
+    </activity>
+  </application>
+</manifest>
diff --git a/java/dagger/example/android/espresso/stubbed/BUILD b/java/dagger/example/android/espresso/stubbed/BUILD
new file mode 100644
index 000000000..dc20721cb
--- /dev/null
+++ b/java/dagger/example/android/espresso/stubbed/BUILD
@@ -0,0 +1,25 @@
+package(default_visibility = ["//:src"])
+
+android_library(
+    name = "stubbed_lib",
+    srcs = glob(["*.java"]),
+    manifest = 'AndroidManifest.xml',
+    deps = [
+        "//:android",
+        "//:android-support",
+        "//:dagger_with_compiler",
+        "@androidsdk//com.android.support:appcompat-v7-25.0.0",
+        "@androidsdk//com.android.support:support-annotations-25.0.0",
+        "@androidsdk//com.android.support:support-v4-25.0.0",
+        "//java/dagger/example/android/espresso/main:main_lib"
+    ],
+)
+
+android_binary(
+    name = "espresso_stubbed",    
+    manifest = 'AndroidManifest.xml',
+    manifest_merger = "android",
+    deps = [
+        "//java/dagger/example/android/espresso/stubbed:stubbed_lib",
+    ]
+)
\ No newline at end of file
diff --git a/java/dagger/example/android/espresso/stubbed/StubNetworkingModule.java b/java/dagger/example/android/espresso/stubbed/StubNetworkingModule.java
new file mode 100644
index 000000000..59551dd2b
--- /dev/null
+++ b/java/dagger/example/android/espresso/stubbed/StubNetworkingModule.java
@@ -0,0 +1,18 @@
+package dagger.example.android.espresso.stubbed;
+
+import dagger.Module;
+import dagger.Provides;
+import dagger.example.android.espresso.main.ApiClient;
+
+@Module
+public class StubNetworkingModule {
+  @Provides
+  ApiClient provideApiClient() {
+    return new ApiClient() {
+      @Override
+      public String getRemoteResource() {
+        return "stub remote resource";
+      }
+    };
+  }
+}
diff --git a/java/dagger/example/android/espresso/stubbed/StubbedApplication.java b/java/dagger/example/android/espresso/stubbed/StubbedApplication.java
new file mode 100644
index 000000000..cceef4511
--- /dev/null
+++ b/java/dagger/example/android/espresso/stubbed/StubbedApplication.java
@@ -0,0 +1,20 @@
+package dagger.example.android.espresso.stubbed;
+
+import dagger.android.AndroidInjector;
+import dagger.android.support.AndroidSupportInjectionModule;
+import dagger.example.android.espresso.main.MainActivity;
+import dagger.example.android.espresso.main.MainApplication;
+
+public class StubbedApplication extends MainApplication {
+
+  @dagger.Component(modules = {AndroidSupportInjectionModule.class, MainActivity.Module.class, StubNetworkingModule.class}) interface Component extends MainApplication.Component {
+    @dagger.Component.Builder
+    abstract class Builder extends AndroidInjector.Builder<MainApplication> {
+    }
+  }
+
+  @Override
+  protected AndroidInjector<MainApplication> applicationInjector() {
+    return DaggerStubbedApplication_Component.builder().create(this);
+  }
+}
