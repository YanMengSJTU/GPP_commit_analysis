diff --git a/java/dagger/internal/codegen/BindingDeclarationFormatter.java b/java/dagger/internal/codegen/BindingDeclarationFormatter.java
index 0652b4d3c..334298dad 100644
--- a/java/dagger/internal/codegen/BindingDeclarationFormatter.java
+++ b/java/dagger/internal/codegen/BindingDeclarationFormatter.java
@@ -48,12 +48,9 @@
               SYNTHETIC_RELEASABLE_REFERENCE_MANAGER, SYNTHETIC_RELEASABLE_REFERENCE_MANAGERS);
 
   private final MethodSignatureFormatter methodSignatureFormatter;
-  private final KeyFormatter keyFormatter;
 
-  BindingDeclarationFormatter(
-      MethodSignatureFormatter methodSignatureFormatter, KeyFormatter keyFormatter) {
+  BindingDeclarationFormatter(MethodSignatureFormatter methodSignatureFormatter) {
     this.methodSignatureFormatter = methodSignatureFormatter;
-    this.keyFormatter = keyFormatter;
   }
 
   /**
@@ -93,11 +90,11 @@ public String format(BindingDeclaration bindingDeclaration) {
         case SYNTHETIC_RELEASABLE_REFERENCE_MANAGER:
           return String.format(
               "binding for %s from the scope declaration",
-              stripCommonTypePrefixes(keyFormatter.format(binding.key())));
+              stripCommonTypePrefixes(binding.key().toString()));
         case SYNTHETIC_RELEASABLE_REFERENCE_MANAGERS:
           return String.format(
               "Dagger-generated binding for %s",
-              stripCommonTypePrefixes(keyFormatter.format(binding.key())));
+              stripCommonTypePrefixes(binding.key().toString()));
         default:
           break;
       }
diff --git a/java/dagger/internal/codegen/BindingGraphValidator.java b/java/dagger/internal/codegen/BindingGraphValidator.java
index d68d86975..8f5ac605e 100644
--- a/java/dagger/internal/codegen/BindingGraphValidator.java
+++ b/java/dagger/internal/codegen/BindingGraphValidator.java
@@ -134,7 +134,6 @@
   private final BindingDeclarationFormatter bindingDeclarationFormatter;
   private final MethodSignatureFormatter methodSignatureFormatter;
   private final DependencyRequestFormatter dependencyRequestFormatter;
-  private final KeyFormatter keyFormatter;
   private final Key.Factory keyFactory;
 
   BindingGraphValidator(
@@ -146,7 +145,6 @@
       BindingDeclarationFormatter bindingDeclarationFormatter,
       MethodSignatureFormatter methodSignatureFormatter,
       DependencyRequestFormatter dependencyRequestFormatter,
-      KeyFormatter keyFormatter,
       Key.Factory keyFactory) {
     this.elements = elements;
     this.types = types;
@@ -156,7 +154,6 @@
     this.bindingDeclarationFormatter = bindingDeclarationFormatter;
     this.methodSignatureFormatter = methodSignatureFormatter;
     this.dependencyRequestFormatter = dependencyRequestFormatter;
-    this.keyFormatter = keyFormatter;
     this.keyFactory = keyFactory;
   }
 
@@ -1165,7 +1162,7 @@ private boolean doesPathRequireProvisionOnly() {
       }
 
       private String formatCurrentDependencyRequestKey() {
-        return keyFormatter.format(dependencyRequest().key());
+        return dependencyRequest().key().toString();
       }
     }
   }
diff --git a/java/dagger/internal/codegen/ComponentProcessor.java b/java/dagger/internal/codegen/ComponentProcessor.java
index b0a852702..f140bc7b5 100644
--- a/java/dagger/internal/codegen/ComponentProcessor.java
+++ b/java/dagger/internal/codegen/ComponentProcessor.java
@@ -65,10 +65,9 @@ public SourceVersion getSupportedSourceVersion() {
     CompilerOptions compilerOptions = CompilerOptions.create(processingEnv, elements);
     Filer filer =  new FormattingFiler(processingEnv.getFiler());
 
-    KeyFormatter keyFormatter = new KeyFormatter();
     MethodSignatureFormatter methodSignatureFormatter = new MethodSignatureFormatter(types);
     BindingDeclarationFormatter bindingDeclarationFormatter =
-        new BindingDeclarationFormatter(methodSignatureFormatter, keyFormatter);
+        new BindingDeclarationFormatter(methodSignatureFormatter);
     DependencyRequestFormatter dependencyRequestFormatter =
         new DependencyRequestFormatter(types, elements);
 
@@ -187,7 +186,6 @@ public SourceVersion getSupportedSourceVersion() {
             bindingDeclarationFormatter,
             methodSignatureFormatter,
             dependencyRequestFormatter,
-            keyFormatter,
             keyFactory);
 
     return ImmutableList.of(
diff --git a/java/dagger/internal/codegen/KeyFormatter.java b/java/dagger/internal/codegen/KeyFormatter.java
deleted file mode 100644
index e5d391f63..000000000
--- a/java/dagger/internal/codegen/KeyFormatter.java
+++ /dev/null
@@ -1,25 +0,0 @@
-/*
- * Copyright (C) 2014 The Dagger Authors.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package dagger.internal.codegen;
-
-/** Formats a {@link Key} into a {@link String} suitable for use in error messages. */
-final class KeyFormatter extends Formatter<Key> {
-  @Override
-  public String format(Key key) {
-    return key.toString();
-  }
-}
