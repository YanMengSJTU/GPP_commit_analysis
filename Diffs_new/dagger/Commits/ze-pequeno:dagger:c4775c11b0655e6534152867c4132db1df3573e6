diff --git a/java/dagger/internal/codegen/DelegateBindingExpression.java b/java/dagger/internal/codegen/DelegateBindingExpression.java
index 8cdf6d16c..2249f800f 100644
--- a/java/dagger/internal/codegen/DelegateBindingExpression.java
+++ b/java/dagger/internal/codegen/DelegateBindingExpression.java
@@ -65,8 +65,8 @@ static boolean isBindsScopeStrongerThanDependencyScope(
             .contributionBindings()
             .get(getOnlyElement(bindsBinding.dependencies()).key())
             .binding();
-    ScopeKind bindsScope = ScopeKind.get(bindsBinding, graph);
-    ScopeKind dependencyScope = ScopeKind.get(dependencyBinding, graph);
+    ScopeKind bindsScope = ScopeKind.get(bindsBinding);
+    ScopeKind dependencyScope = ScopeKind.get(dependencyBinding);
     return bindsScope.isStrongerScopeThan(dependencyScope);
   }
 
@@ -119,7 +119,7 @@ private Expression castToRawTypeIfNecessary(
     DOUBLE_CHECK,
     ;
 
-    static ScopeKind get(Binding binding, BindingGraph graph) {
+    static ScopeKind get(Binding binding) {
       return binding
           .scope()
           .map(scope -> scope.isReusable() ? SINGLE_CHECK : DOUBLE_CHECK)
