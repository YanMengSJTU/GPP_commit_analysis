diff --git a/WORKSPACE b/WORKSPACE
index 1a6665900..8758b38f4 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -16,8 +16,8 @@ load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 
 http_archive(
     name = "google_bazel_common",
-    strip_prefix = "bazel-common-f3dc1a775d21f74fc6f4bbcf076b8af2f6261a69",
-    urls = ["https://github.com/google/bazel-common/archive/f3dc1a775d21f74fc6f4bbcf076b8af2f6261a69.zip"],
+    strip_prefix = "bazel-common-26011657fee96a949c66500b1662c4c7288a4968",
+    urls = ["https://github.com/google/bazel-common/archive/26011657fee96a949c66500b1662c4c7288a4968.zip"],
 )
 
 load("@google_bazel_common//:workspace_defs.bzl", "google_common_workspace_rules")
diff --git a/java/dagger/android/processor/AndroidProcessor.java b/java/dagger/android/processor/AndroidProcessor.java
index 0cd7e6cae..5c173413f 100644
--- a/java/dagger/android/processor/AndroidProcessor.java
+++ b/java/dagger/android/processor/AndroidProcessor.java
@@ -18,6 +18,7 @@
 
 import static javax.tools.Diagnostic.Kind.ERROR;
 import static javax.tools.StandardLocation.CLASS_OUTPUT;
+import static net.ltgt.gradle.incap.IncrementalAnnotationProcessorType.ISOLATING;
 
 import com.google.auto.common.BasicAnnotationProcessor;
 import com.google.auto.service.AutoService;
@@ -36,6 +37,7 @@
 import javax.lang.model.SourceVersion;
 import javax.lang.model.util.Elements;
 import javax.lang.model.util.Types;
+import net.ltgt.gradle.incap.IncrementalAnnotationProcessor;
 
 /**
  * An {@linkplain javax.annotation.processing.Processor annotation processor} to verify usage of
@@ -51,6 +53,7 @@
  * R8 in <a href="https://r8.googlesource.com/r8/+/389123dfcc11e6dda0eec31ab62e1b7eb0da80d2">May
  * 2018</a>.
  */
+@IncrementalAnnotationProcessor(ISOLATING)
 @AutoService(Processor.class)
 public final class AndroidProcessor extends BasicAnnotationProcessor {
   private static final String FLAG_EXPERIMENTAL_USE_STRING_KEYS =
diff --git a/java/dagger/android/processor/BUILD b/java/dagger/android/processor/BUILD
index 00c10211c..5754143a3 100644
--- a/java/dagger/android/processor/BUILD
+++ b/java/dagger/android/processor/BUILD
@@ -22,8 +22,7 @@ load(
     "DOCLINT_HTML_AND_SYNTAX",
     "DOCLINT_REFERENCES",
 )
-load("//tools:maven.bzl", "pom_file", "POM_VERSION")
-load("//tools:simple_jar.bzl", "simple_jar")
+load("//tools:maven.bzl", "POM_VERSION", "pom_file")
 
 filegroup(
     name = "srcs",
@@ -34,13 +33,13 @@ java_library(
     name = "processor",
     srcs = [":srcs"],
     javacopts = DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
-    resource_jars = [":processor_manifest_files.jar"],
     tags = ["maven_coordinates=com.google.dagger:dagger-android-processor:" + POM_VERSION],
     deps = [
         "@google_bazel_common//third_party/java/guava",
         "@google_bazel_common//third_party/java/auto:service",
         "@google_bazel_common//third_party/java/auto:value",
         "@google_bazel_common//third_party/java/auto:common",
+        "@google_bazel_common//third_party/java/incap",
         "@google_bazel_common//third_party/java/javapoet",
         "@google_bazel_common//third_party/java/google_java_format",
         "//java/dagger:core",
@@ -65,11 +64,6 @@ java_import(
     visibility = ["//visibility:private"],
 )
 
-simple_jar(
-    name = "processor_manifest_files",
-    srcs = glob(["META-INF/**"]),
-)
-
 pom_file(
     name = "pom",
     artifact_id = "dagger-android-processor",
diff --git a/java/dagger/android/processor/META-INF/gradle/incremental.annotation.processors b/java/dagger/android/processor/META-INF/gradle/incremental.annotation.processors
deleted file mode 100644
index 22b8a9509..000000000
--- a/java/dagger/android/processor/META-INF/gradle/incremental.annotation.processors
+++ /dev/null
@@ -1 +0,0 @@
-dagger.android.processor.AndroidProcessor,isolating
diff --git a/java/dagger/internal/codegen/BUILD b/java/dagger/internal/codegen/BUILD
index ce3bd336f..824a72ef6 100644
--- a/java/dagger/internal/codegen/BUILD
+++ b/java/dagger/internal/codegen/BUILD
@@ -19,7 +19,6 @@ package(default_visibility = ["//:src"])
 
 load("//:build_defs.bzl", "DOCLINT_HTML_AND_SYNTAX", "DOCLINT_REFERENCES")
 load("//tools:maven.bzl", "POM_VERSION", "pom_file")
-load("//tools:simple_jar.bzl", "simple_jar")
 
 EXPERIMENTAL_VISUALIZER_SRCS = ["BindingNetworkVisualizer.java"]
 
@@ -352,11 +351,6 @@ java_library(
     ],
 )
 
-simple_jar(
-    name = "processor_manifest_files",
-    srcs = glob(["META-INF/**"]),
-)
-
 # The processor's "main", if you will
 java_library(
     name = "processor",
@@ -386,7 +380,6 @@ java_library(
         "TopLevelImplementationComponent.java",
     ],
     plugins = CODEGEN_PLUGINS,
-    resource_jars = [":processor_manifest_files.jar"],
     tags = ["maven_coordinates=com.google.dagger:dagger-compiler:" + POM_VERSION],
     deps = CODEGEN_DEPS + [
         ":base",
@@ -396,6 +389,7 @@ java_library(
         ":validation",
         "//java/dagger/internal/codegen/javapoet",
         "//java/dagger/internal/codegen/langmodel",
+        "@google_bazel_common//third_party/java/incap",
     ],
 )
 
@@ -498,6 +492,7 @@ java_library(
     deps = CODEGEN_DEPS + [
         "//java/dagger/internal/codegen/langmodel",
         "//java/dagger/internal/codegen/javapoet",
+        "@google_bazel_common//third_party/java/incap",
     ],
 )
 
diff --git a/java/dagger/internal/codegen/ComponentProcessor.java b/java/dagger/internal/codegen/ComponentProcessor.java
index cb3ff9ca4..541a4ab10 100644
--- a/java/dagger/internal/codegen/ComponentProcessor.java
+++ b/java/dagger/internal/codegen/ComponentProcessor.java
@@ -16,6 +16,8 @@
 
 package dagger.internal.codegen;
 
+import static net.ltgt.gradle.incap.IncrementalAnnotationProcessorType.DYNAMIC;
+
 import com.google.auto.common.BasicAnnotationProcessor;
 import com.google.auto.service.AutoService;
 import com.google.common.annotations.VisibleForTesting;
@@ -38,6 +40,7 @@
 import javax.inject.Inject;
 import javax.inject.Singleton;
 import javax.lang.model.SourceVersion;
+import net.ltgt.gradle.incap.IncrementalAnnotationProcessor;
 
 /**
  * The annotation processor responsible for generating the classes that drive the Dagger 2.0
@@ -45,6 +48,7 @@
  *
  * <p>TODO(gak): give this some better documentation
  */
+@IncrementalAnnotationProcessor(DYNAMIC)
 @AutoService(Processor.class)
 public class ComponentProcessor extends BasicAnnotationProcessor {
   private final Optional<ImmutableSet<BindingGraphPlugin>> testingPlugins;
diff --git a/java/dagger/internal/codegen/META-INF/gradle/incremental.annotation.processors b/java/dagger/internal/codegen/META-INF/gradle/incremental.annotation.processors
deleted file mode 100644
index db550fe97..000000000
--- a/java/dagger/internal/codegen/META-INF/gradle/incremental.annotation.processors
+++ /dev/null
@@ -1 +0,0 @@
-dagger.internal.codegen.ComponentProcessor,dynamic
diff --git a/tools/simple_jar.bzl b/tools/simple_jar.bzl
deleted file mode 100644
index 77070ac91..000000000
--- a/tools/simple_jar.bzl
+++ /dev/null
@@ -1,34 +0,0 @@
-# Copyright (C) 2018 The Dagger Authors.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-"""Macro for creating a jar from a set of flat files"""
-
-def simple_jar(name, srcs):
-    """Creates a jar out of a set of flat files.
-
-    Currently, this rule is limited to a single input argument.
-
-    Args:
-      name: The name of the target
-      srcs: Sources to be included in the jar
-    """
-    if len(srcs) > 1:
-        fail("More than one directory is not supported by simple_jar yet", attr = srcs)
-    native.genrule(
-        name = name,
-        srcs = srcs,
-        outs = ["%s.jar" % name],
-        cmd = "$(location @bazel_tools//tools/zip:zipper) c $(OUTS) $(SRCS)",
-        tools = ["@bazel_tools//tools/zip:zipper"],
-    )
