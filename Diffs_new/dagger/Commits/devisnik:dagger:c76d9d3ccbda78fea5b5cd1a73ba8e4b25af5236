diff --git a/java/dagger/internal/codegen/ComponentBindingExpressions.java b/java/dagger/internal/codegen/ComponentBindingExpressions.java
index bd6db68f8..3093c8d02 100644
--- a/java/dagger/internal/codegen/ComponentBindingExpressions.java
+++ b/java/dagger/internal/codegen/ComponentBindingExpressions.java
@@ -442,7 +442,7 @@ private BindingExpression inlineProvisionBindingExpression(
           return DelegateBindingExpression.create(
               graph, bindingExpression, componentBindingExpressions, types, elements);
 
-        case BUILDER_BINDING:
+        case BOUND_INSTANCE:
           return new BoundInstanceBindingExpression(
               bindingExpression,
               ComponentRequirement.forBinding(provisionBinding),
diff --git a/java/dagger/internal/codegen/ComponentRequirement.java b/java/dagger/internal/codegen/ComponentRequirement.java
index 5c3e72922..9a22c1220 100644
--- a/java/dagger/internal/codegen/ComponentRequirement.java
+++ b/java/dagger/internal/codegen/ComponentRequirement.java
@@ -19,6 +19,7 @@
 import static com.google.auto.common.MoreElements.getLocalAndInheritedMethods;
 import static com.google.common.base.Preconditions.checkArgument;
 import static com.google.common.base.Preconditions.checkNotNull;
+import static dagger.internal.codegen.ContributionBinding.Kind.BOUND_INSTANCE;
 import static dagger.internal.codegen.DaggerElements.isAnyAnnotationPresent;
 import static dagger.internal.codegen.SourceFiles.simpleVariableName;
 import static dagger.internal.codegen.Util.componentCanMakeNewInstances;
@@ -179,7 +180,7 @@ static ComponentRequirement forBinding(Key key, boolean nullable, String variabl
   }
 
   static ComponentRequirement forBinding(ContributionBinding binding) {
-    checkArgument(binding.bindingKind().equals(ContributionBinding.Kind.BUILDER_BINDING));
+    checkArgument(binding.bindingKind().equals(BOUND_INSTANCE));
     return forBinding(
         binding.key(),
         binding.nullableType().isPresent(),
diff --git a/java/dagger/internal/codegen/ContributionBinding.java b/java/dagger/internal/codegen/ContributionBinding.java
index bba475bb9..15eee20e9 100644
--- a/java/dagger/internal/codegen/ContributionBinding.java
+++ b/java/dagger/internal/codegen/ContributionBinding.java
@@ -133,8 +133,8 @@
      */
     SUBCOMPONENT_BUILDER,
 
-    /** A builder binding method. */
-    BUILDER_BINDING,
+    /** A {@link dagger.BindsInstance @BindsInstance} builder method. */
+    BOUND_INSTANCE,
 
     // Production kinds
 
diff --git a/java/dagger/internal/codegen/ProviderOrProducerFieldInitializer.java b/java/dagger/internal/codegen/ProviderOrProducerFieldInitializer.java
index 30dc37dad..21a3aea92 100644
--- a/java/dagger/internal/codegen/ProviderOrProducerFieldInitializer.java
+++ b/java/dagger/internal/codegen/ProviderOrProducerFieldInitializer.java
@@ -218,7 +218,7 @@ private CodeBlock factoryForContributionBindingInitialization(ContributionBindin
                         .build())
                 .build());
 
-      case BUILDER_BINDING:
+      case BOUND_INSTANCE:
         return CodeBlock.of(
             "$T.$L($L)",
             InstanceFactory.class,
diff --git a/java/dagger/internal/codegen/ProvisionBinding.java b/java/dagger/internal/codegen/ProvisionBinding.java
index 342040715..d11522378 100644
--- a/java/dagger/internal/codegen/ProvisionBinding.java
+++ b/java/dagger/internal/codegen/ProvisionBinding.java
@@ -299,7 +299,7 @@ ProvisionBinding forBuilderBinding(BuilderRequirementMethod method) {
           .bindingElement(builderMethod)
           .key(method.requirement().key().get())
           .nullableType(ConfigurationAnnotations.getNullableType(parameterElement))
-          .bindingKind(Kind.BUILDER_BINDING)
+          .bindingKind(Kind.BOUND_INSTANCE)
           .build();
     }
 
