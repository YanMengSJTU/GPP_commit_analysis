diff --git a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
index 0a7828496..db186c3ac 100644
--- a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
+++ b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
@@ -409,11 +409,11 @@ private void addBuildMethod(
           break;
         case THROW:
           buildMethod.addCode(
-              "if ($N == null) { throw new $T($T.class.getCanonicalName() + $S); }",
+              "if ($N == null) { throw new $T($S); }",
               builderField,
               IllegalStateException.class,
-              TypeNames.rawTypeName(builderField.type),
-              " must be set");
+              String.format("%s must be set", builderField.type.toString())
+          );
           break;
         case ALLOW:
           break;
diff --git a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
index b095819e5..2706a0cfd 100644
--- a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
@@ -1708,8 +1708,7 @@ public void testDefaultPackage() {
             "",
             "    public BComponent build() {",
             "      if (aComponent == null) {",
-            "        throw new IllegalStateException(AComponent.class.getCanonicalName()",
-            "            + \" must be set\");",
+            "        throw new IllegalStateException(\"test.AComponent must be set\");",
             "      }",
             "      return new DaggerBComponent(this);",
             "    }",
