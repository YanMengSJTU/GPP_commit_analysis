diff --git a/_layouts/default.html b/_layouts/default.html
index f7e710716..019d8a317 100644
--- a/_layouts/default.html
+++ b/_layouts/default.html
@@ -52,6 +52,9 @@
         <paper-item label="Testing">
           <a href="http://google.github.io/dagger/testing.html"></a>
         </paper-item>
+        <paper-item label="FAQ">
+          <a href="http://google.github.io/dagger/faq.html"></a>
+        </paper-item>
         <h4>Project Pages</h4>
         <paper-item label="GitHub" icon="open-in-browser">
           <a href="https://github.com/google/dagger" target="_blank"></a>
diff --git a/faq.md b/faq.md
index 1302cf546..76bcf3e1d 100644
--- a/faq.md
+++ b/faq.md
@@ -3,9 +3,12 @@ layout: default
 title: Frequently Asked Questions
 ---
 
-# [`@Binds`]
+* auto-gen TOC:
+{:toc}
 
-## Why is `@Binds` different from `@Provides`?
+## [`@Binds`]
+
+### Why is `@Binds` different from `@Provides`?
 
 `@Provides`, the most common construct for configuring a binding, serves three
 functions:
@@ -45,7 +48,7 @@ that implements those methods.  However, instance `@Provides` methods _require_
 a concrete class in order to construct an instance on which the method can be
 invoked.
 
-### What do I do instead?
+#### What do I do instead?
 
 The easiest change is to make the provides method `static`.  In addition to
 being compatible with `@Binds`, they often perform better than instance provides
@@ -72,9 +75,9 @@ final class HttpServletRequestModule {
 }
 ```
 
-# Performance & Monitoring
+## Performance & Monitoring
 
-## How do I add tracing to my components?
+### How do I add tracing to my components?
 
 Dagger does not include a tracing mechnamism for `@Component` implementations â€”
 the runtime cost of monitoring relative to the runtime cost of simple provisions
@@ -86,11 +89,28 @@ after compilation using [AOP] bytecode transformations.
 `@ProductionComponent`, on the other hand, does have a monitoring API in
 [`dagger.producers.monitoring`].
 
+## How do I see generated code in my IDE?
+
+### Eclipse with Maven
+
+M2E is the maven-eclipse integration, and is included in the latest
+versions of eclipse.  It does not have annotation-processing enabled by
+default. To do this, you must install m2e-apt from the eclipse marketplace,
+and [this blog post has a great walkthrough of how to set it up][m2e-apt].
+
+
+### IntelliJ + Android Studio
+
+Whether you use Maven or Gradle with IntelliJ or Android Studio, the generated
+code should be available when you sync/build your project using the same tools
+as handwritten code. If you experience any weirdness, file a bug!
+
 <!-- References -->
 
 [`@Binds`]: http://google.github.io/dagger/api/latest/dagger/Binds.html
 [`@Provides`]: http://google.github.io/dagger/api/latest/dagger/Provides.html
 [`dagger.producers.monitoring`]: http://google.github.io/dagger/api/latest/dagger/producers/monitoring/package-summary.html
 [AOP]: https://en.wikipedia.org/wiki/Aspect-oriented_programming
+[m2e-apt]: https://immutables.github.io/apt.html
 
 
