diff --git a/java/dagger/internal/codegen/MapBindingExpression.java b/java/dagger/internal/codegen/MapBindingExpression.java
index 7521b4428..674ed8dec 100644
--- a/java/dagger/internal/codegen/MapBindingExpression.java
+++ b/java/dagger/internal/codegen/MapBindingExpression.java
@@ -100,7 +100,7 @@ Expression getDependencyExpression(ClassName requestingClass) {
             .add(maybeTypeParameters(requestingClass));
         if (isImmutableMapAvailable) {
           // TODO(ronshapiro): builderWithExpectedSize
-          instantiation.add("builder()");
+          instantiation.add("builderWithExpectedSize($L)", dependencies.size());
         } else {
           instantiation.add("newMapBuilder($L)", dependencies.size());
         }
diff --git a/java/dagger/internal/codegen/SetBindingExpression.java b/java/dagger/internal/codegen/SetBindingExpression.java
index 860df769b..19c8c5e33 100644
--- a/java/dagger/internal/codegen/SetBindingExpression.java
+++ b/java/dagger/internal/codegen/SetBindingExpression.java
@@ -98,7 +98,7 @@ Expression getDependencyExpression(ClassName requestingClass) {
             .add("$T.", isImmutableSetAvailable ? ImmutableSet.class : SetBuilder.class)
             .add(maybeTypeParameter(requestingClass));
         if (isImmutableSetAvailable) {
-          instantiation.add("builder()");
+          instantiation.add("builderWithExpectedSize($L)", binding.dependencies().size());
         } else {
           instantiation.add("newSetBuilder($L)", binding.dependencies().size());
         }
diff --git a/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java b/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java
index 0d0e050fa..b17472914 100644
--- a/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java
+++ b/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java
@@ -173,7 +173,7 @@ public void mapBindings() {
                 "",
                 "    @Override",
                 "    public Map<Long, Long> longs() {",
-                "      return ImmutableMap.<Long, Long>builder()",
+                "      return ImmutableMap.<Long, Long>builderWithExpectedSize(6)",
                 "          .put(0L, MapModule.provideLong0())",
                 "          .put(1L, MapModule.provideLong1())",
                 "          .put(2L, MapModule.provideLong2())",
@@ -185,7 +185,7 @@ public void mapBindings() {
                 "",
                 "    @Override",
                 "    public Map<Long, Provider<Long>> providerLongs() {",
-                "      return ImmutableMap.<Long, Provider<Long>>builder()",
+                "      return ImmutableMap.<Long, Provider<Long>>builderWithExpectedSize(6)",
                 "          .put(0L, MapModule_ProvideLong0Factory.create())",
                 "          .put(1L, MapModule_ProvideLong1Factory.create())",
                 "          .put(2L, MapModule_ProvideLong2Factory.create())",
diff --git a/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java b/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java
index d321f48bd..32ddf8d52 100644
--- a/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java
+++ b/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java
@@ -107,7 +107,7 @@ public void setBindings() {
             "public final class DaggerTestComponent implements TestComponent {",
             "  @Override",
             "  public Set<String> strings() {",
-            "    return ImmutableSet.<String>builder()",
+            "    return ImmutableSet.<String>builderWithExpectedSize(2)",
             "        .addAll(EmptySetModule_EmptySetFactory.proxyEmptySet())",
             "        .add(SetModule_StringFactory.proxyString())",
             "        .build();",
