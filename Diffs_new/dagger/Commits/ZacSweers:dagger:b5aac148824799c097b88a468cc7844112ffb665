diff --git a/java/dagger/internal/codegen/ComponentModelBuilder.java b/java/dagger/internal/codegen/ComponentModelBuilder.java
index 86b560d9e..dc826e049 100644
--- a/java/dagger/internal/codegen/ComponentModelBuilder.java
+++ b/java/dagger/internal/codegen/ComponentModelBuilder.java
@@ -255,6 +255,12 @@ private void addCancellationListenerImplementation() {
     }
 
     ImmutableList<CodeBlock> cancellationStatements = cancellationStatements();
+    if (cancellationStatements.isEmpty() && generatedComponentModel.supermodel().isPresent()) {
+      // Partial subcomponent implementations that have no new cancellations don't need to override
+      // the method just to call super().
+      return;
+    }
+
     if (cancellationStatements.size() < STATEMENTS_PER_METHOD) {
       methodBuilder.addCode(CodeBlocks.concat(cancellationStatements)).build();
     } else {
diff --git a/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java b/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
index 49274d24b..d8a09cd5f 100644
--- a/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
+++ b/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
@@ -3436,13 +3436,6 @@ public void productionSubcomponentAndModifiableFrameworkInstance() {
             "    public Producer<ResponseDependency> getResponseDependencyProducer() {",
             "      return DaggerRoot.this.responseDependencyProducer;",
             "    }",
-            "",
-            "    @Override",
-            "    public void onProducerFutureCancelled(boolean mayInterruptIfRunning) {",
-            // TODO(b/72748365): if this onProducerFutureCancelled method is just a super call, omit
-            // the method
-            "      super.onProducerFutureCancelled(mayInterruptIfRunning);",
-            "    }",
             "  }",
             "}");
     compilation = compile(filesToCompile.build());
