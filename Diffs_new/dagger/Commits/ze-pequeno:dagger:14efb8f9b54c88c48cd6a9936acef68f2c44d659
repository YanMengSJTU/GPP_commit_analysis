diff --git a/javatests/dagger/functional/BasicTest.java b/javatests/dagger/functional/BasicTest.java
index 39dee307d..0745cb652 100644
--- a/javatests/dagger/functional/BasicTest.java
+++ b/javatests/dagger/functional/BasicTest.java
@@ -130,9 +130,9 @@ public void providerOfLazy(BasicComponent basicComponent) {
         basicComponent.lazyInjectedThingProvider();
     Lazy<InjectedThing> lazyInjectedThing1 = lazyInjectedThingProvider.get();
     Lazy<InjectedThing> lazyInjectedThing2 = lazyInjectedThingProvider.get();
-    assertThat(lazyInjectedThing2).isNotSameAs(lazyInjectedThing1);
+    assertThat(lazyInjectedThing2).isNotSameInstanceAs(lazyInjectedThing1);
     assertThat(lazyInjectedThing1.get()).isSameAs(lazyInjectedThing1.get());
     assertThat(lazyInjectedThing2.get()).isSameAs(lazyInjectedThing2.get());
-    assertThat(lazyInjectedThing2.get()).isNotSameAs(lazyInjectedThing1.get());
+    assertThat(lazyInjectedThing2.get()).isNotSameInstanceAs(lazyInjectedThing1.get());
   }
 }
diff --git a/javatests/dagger/functional/GenericTest.java b/javatests/dagger/functional/GenericTest.java
index be17446ef..d1a09de39 100644
--- a/javatests/dagger/functional/GenericTest.java
+++ b/javatests/dagger/functional/GenericTest.java
@@ -137,7 +137,7 @@
     assertThat(b).isSameAs(component.scopedGenericB());
     assertThat(b.t).isNotNull();
 
-    assertThat(a).isNotSameAs(b);
+    assertThat(a).isNotSameInstanceAs(b);
   }
 
   @Test // See https://github.com/google/dagger/issues/671
@@ -149,7 +149,7 @@ public void scopedSimpleGenerics() {
     ScopedSimpleGeneric<B> b = component.scopedSimpleGenericB();
     assertThat(b).isSameAs(component.scopedSimpleGenericB());
 
-    assertThat(a).isNotSameAs(b);
+    assertThat(a).isNotSameInstanceAs(b);
   }
   
   @Test public void genericModules() {
diff --git a/javatests/dagger/functional/ReusableTest.java b/javatests/dagger/functional/ReusableTest.java
index 8149ff46f..3c0f91a32 100644
--- a/javatests/dagger/functional/ReusableTest.java
+++ b/javatests/dagger/functional/ReusableTest.java
@@ -43,6 +43,6 @@ public void testReusable() {
     Object reusableFromChildTwo = childTwo.reusableInChild();
     assertThat(childTwo.reusableInChild()).isSameAs(reusableFromChildTwo);
 
-    assertThat(reusableFromChildTwo).isNotSameAs(reusableFromChildOne);
+    assertThat(reusableFromChildTwo).isNotSameInstanceAs(reusableFromChildOne);
   }
 }
