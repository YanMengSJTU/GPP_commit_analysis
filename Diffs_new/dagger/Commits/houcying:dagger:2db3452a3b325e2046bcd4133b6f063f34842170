diff --git a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
index 57074893e..89a8fc613 100644
--- a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
@@ -308,7 +308,7 @@
   }
 
   @Test public void mapBindings() {
-    System.out.println("Entering map");
+    System.out.println("entering mapbinding");
     JavaFileObject emptyMapModuleFile = JavaFileObjects.forSourceLines("test.EmptyMapModule",
         "package test;",
         "",
@@ -326,17 +326,13 @@
     JavaFileObject mapModuleFile = JavaFileObjects.forSourceLines("test.MapModule",
         "package test;",
         "",
-        "import java.util.Map;",  
-        "import java.util.HashMap;",
         "import static dagger.Provides.Type.MAP;",
+        "",
         "import dagger.Module;",
         "import dagger.Provides;",
         "",
         "@Module",
         "final class MapModule {",
-        "Map<String, String> map = new HashMap<String, String>();",
-        "map.put(\"hello\", \"world\")",
-        "Map.Entry<String, String> e = map.entrySet().iterator().next();",
         "  @Provides(type = MAP) Map.Entry<String, String> string() { return null; }",
         "}");
     JavaFileObject componentFile = JavaFileObjects.forSourceLines("test.TestComponent",
@@ -384,13 +380,13 @@
         "    return mapOfStringProvider.get();",
         "  }",
         "}");
-    //, mapModuleFile, componentFile
     ASSERT.about(javaSources())
         .that(ImmutableList.of(emptyMapModuleFile, mapModuleFile, componentFile))
         .processedWith(new ComponentProcessor())
         .compilesWithoutError()
         .and().generatesSources(generatedComponent);
-  }  
+  }
+ 
   
 
 }
