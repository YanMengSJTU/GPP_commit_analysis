diff --git a/core/.gradle/2.14.1/taskArtifacts/cache.properties.lock b/core/.gradle/2.14.1/taskArtifacts/cache.properties.lock
index d36920ea9..2fe1c69a2 100644
Binary files a/core/.gradle/2.14.1/taskArtifacts/cache.properties.lock and b/core/.gradle/2.14.1/taskArtifacts/cache.properties.lock differ
diff --git a/core/.gradle/2.14.1/taskArtifacts/fileHashes.bin b/core/.gradle/2.14.1/taskArtifacts/fileHashes.bin
index d0e2c79e2..75ce341fa 100644
Binary files a/core/.gradle/2.14.1/taskArtifacts/fileHashes.bin and b/core/.gradle/2.14.1/taskArtifacts/fileHashes.bin differ
diff --git a/core/.gradle/2.14.1/taskArtifacts/fileSnapshots.bin b/core/.gradle/2.14.1/taskArtifacts/fileSnapshots.bin
index ce17b57df..69a547279 100644
Binary files a/core/.gradle/2.14.1/taskArtifacts/fileSnapshots.bin and b/core/.gradle/2.14.1/taskArtifacts/fileSnapshots.bin differ
diff --git a/core/.gradle/2.14.1/taskArtifacts/fileSnapshotsToTreeSnapshotsIndex.bin b/core/.gradle/2.14.1/taskArtifacts/fileSnapshotsToTreeSnapshotsIndex.bin
index 34d1c6edf..ad95d5f55 100644
Binary files a/core/.gradle/2.14.1/taskArtifacts/fileSnapshotsToTreeSnapshotsIndex.bin and b/core/.gradle/2.14.1/taskArtifacts/fileSnapshotsToTreeSnapshotsIndex.bin differ
diff --git a/core/.gradle/2.14.1/taskArtifacts/taskArtifacts.bin b/core/.gradle/2.14.1/taskArtifacts/taskArtifacts.bin
index 58c99f5b0..5aefc5d40 100644
Binary files a/core/.gradle/2.14.1/taskArtifacts/taskArtifacts.bin and b/core/.gradle/2.14.1/taskArtifacts/taskArtifacts.bin differ
diff --git a/core/build.gradle b/core/build.gradle
index b7743165e..253a38977 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -1,71 +1,63 @@
-apply from: '../../dopplversions.gradle'
-
 buildscript {
     repositories {
         jcenter()
         maven { url 'https://plugins.gradle.org/m2/' }
-        ivy { url dopplIvyDeploy }
+        maven { url dopplMavenDeploy }
+        maven { url dopplRepo }
     }
     dependencies {
         classpath 'net.ltgt.gradle:gradle-apt-plugin:0.9'
-        classpath "co.touchlab.doppl:gradle:"+ dopplPluginVersion
+        classpath 'co.doppl:gradle:0.7.0'
+        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
     }
 }
 
 allprojects {
     repositories {
         jcenter()
-        ivy { url dopplIvyDeploy }
+        maven { url dopplMavenDeploy }
+        maven { url dopplRepo }
     }
 }
 
 apply plugin: 'java'
-apply plugin: 'ivy-publish'
+apply plugin: 'co.doppl.gradle'
+apply plugin: 'maven-publish'
 apply plugin: 'net.ltgt.apt'
-apply plugin: 'co.touchlab.doppl.gradle'
 
 sourceCompatibility = 1.7
 targetCompatibility = 1.7
 
+def dopplCoreVersion = '0.7.1'
+def dopplTruthVersion = '0.0.1'
+
 dependencies {
     compile 'junit:junit:4.11'
 
-    provided "co.touchlab.doppl:androidbase:$dopplCoreVersion"
-    testCompile "co.touchlab.doppl:androidbasetest:$dopplCoreVersion"
+    provided "co.doppl.lib:androidbase:$dopplCoreVersion"
+    testCompile "co.doppl.lib:androidbasetest:$dopplCoreVersion"
 
-    doppl "co.touchlab.doppl:androidbase:$dopplCoreVersion:doppl"
-    testDoppl "co.touchlab.doppl:androidbasetest:$dopplCoreVersion:doppl"
+    doppl "co.doppl.lib:androidbase:$dopplCoreVersion:doppl"
+    testDoppl "co.doppl.lib:androidbasetest:$dopplCoreVersion:doppl"
 
     testCompile 'org.mockito:mockito-core:1.9.5'
-    testApt "co.touchlab.doppl:testapt:$dopplCoreVersion"
+    testApt "co.doppl.lib:testapt:$dopplCoreVersion"
 
     testCompile "com.google.truth:truth:$dopplTruthVersion"
-    testDoppl "com.google.truth:truth:$dopplTruthVersion:doppl"
+    testDoppl "co.doppl.com.google.truth:truth:$dopplTruthVersion:doppl"
 
     provided 'javax.inject:javax.inject:1'
 
     testCompile 'com.google.guava:guava:19.0'
 }
 
-group = 'com.google.dagger'
-version = dopplDaggerVersion
-
-publishing {
-    publications {
-        ivy(IvyPublication) {
-            from components.java
-            module 'dagger'
-            artifact(dopplArchive) {
-                classifier 'doppl'
-                extension 'jar'
-            }
-        }
-    }
+group = 'co.doppl.com.google.dagger'
+version = '2.5.0'
 
-    repositories {
-        ivy { url dopplIvyDeploy }
-    }
-}
+ext.bintrayGitUrl = 'https://github.com/doppllib/dagger.git'
+
+apply from: "$dopplSharedScriptHome/doppllibpublish.gradle"
+apply from: "$dopplSharedScriptHome/bintray.gradle"
 
 test{
     enabled = false
@@ -73,8 +65,8 @@ test{
 
 dopplConfig {
 
-    copyMainOutput="iostest/daggerframework/main"
-    copyTestOutput="iostest/daggerframework/test"
+    copyMainOutput "iostest/daggerframework/main"
+    copyTestOutput "iostest/daggerframework/test"
     copyDependencies true
 
 }
\ No newline at end of file
diff --git a/core/iostest/.gitignore b/core/iostest/.gitignore
new file mode 100644
index 000000000..345d88be0
--- /dev/null
+++ b/core/iostest/.gitignore
@@ -0,0 +1,2 @@
+main
+test
\ No newline at end of file
diff --git a/core/iostest/daggerframework/main/DaggerBinds.h b/core/iostest/daggerframework/main/DaggerBinds.h
deleted file mode 100644
index 5ee14be1e..000000000
--- a/core/iostest/daggerframework/main/DaggerBinds.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerBinds")
-#ifdef RESTRICT_DaggerBinds
-#define INCLUDE_ALL_DaggerBinds 0
-#else
-#define INCLUDE_ALL_DaggerBinds 1
-#endif
-#undef RESTRICT_DaggerBinds
-
-#if !defined (DaggerBinds_) && (INCLUDE_ALL_DaggerBinds || defined(INCLUDE_DaggerBinds))
-#define DaggerBinds_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerBinds < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface DaggerBinds : NSObject < DaggerBinds >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerBinds)
-
-FOUNDATION_EXPORT id<DaggerBinds> create_DaggerBinds();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerBinds)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerBinds")
diff --git a/core/iostest/daggerframework/main/DaggerBinds.m b/core/iostest/daggerframework/main/DaggerBinds.m
deleted file mode 100644
index 197bd9082..000000000
--- a/core/iostest/daggerframework/main/DaggerBinds.m
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerBinds.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerBinds__Annotations$0();
-
-@implementation DaggerBinds
-
-- (IOSClass *)annotationType {
-  return DaggerBinds_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.Binds()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerBinds__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerBinds = { "Binds", "dagger", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerBinds;
-}
-
-@end
-
-id<DaggerBinds> create_DaggerBinds() {
-  DaggerBinds *self = AUTORELEASE([[DaggerBinds alloc] init]);
-  return self;
-}
-
-IOSObjectArray *DaggerBinds__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerBinds)
diff --git a/core/iostest/daggerframework/main/DaggerComponent.h b/core/iostest/daggerframework/main/DaggerComponent.h
deleted file mode 100644
index 7c1692b33..000000000
--- a/core/iostest/daggerframework/main/DaggerComponent.h
+++ /dev/null
@@ -1,65 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerComponent")
-#ifdef RESTRICT_DaggerComponent
-#define INCLUDE_ALL_DaggerComponent 0
-#else
-#define INCLUDE_ALL_DaggerComponent 1
-#endif
-#undef RESTRICT_DaggerComponent
-
-#if !defined (DaggerComponent_) && (INCLUDE_ALL_DaggerComponent || defined(INCLUDE_DaggerComponent))
-#define DaggerComponent_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-@class IOSObjectArray;
-
-@protocol DaggerComponent < JavaLangAnnotationAnnotation >
-
-@property (readonly) IOSObjectArray *modules;
-@property (readonly) IOSObjectArray *dependencies;
-
-@end
-
-@interface DaggerComponent : NSObject < DaggerComponent > {
- @public
-  IOSObjectArray *modules_;
-  IOSObjectArray *dependencies_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerComponent)
-
-FOUNDATION_EXPORT id<DaggerComponent> create_DaggerComponent(IOSObjectArray *dependencies, IOSObjectArray *modules);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerComponent)
-
-#endif
-
-#if !defined (DaggerComponent_Builder_) && (INCLUDE_ALL_DaggerComponent || defined(INCLUDE_DaggerComponent_Builder))
-#define DaggerComponent_Builder_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerComponent_Builder < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerComponent_Builder)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerComponent_Builder)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerComponent")
diff --git a/core/iostest/daggerframework/main/DaggerComponent.m b/core/iostest/daggerframework/main/DaggerComponent.m
deleted file mode 100644
index 03ad7f975..000000000
--- a/core/iostest/daggerframework/main/DaggerComponent.m
+++ /dev/null
@@ -1,99 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerComponent.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerComponent__Annotations$0();
-
-@interface DaggerComponent_Builder : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerComponent_Builder__Annotations$0();
-
-@implementation DaggerComponent
-
-@synthesize modules = modules_;
-@synthesize dependencies = dependencies_;
-
-+ (IOSObjectArray *)modulesDefault {
-  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
-}
-
-+ (IOSObjectArray *)dependenciesDefault {
-  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
-}
-
-- (IOSClass *)annotationType {
-  return DaggerComponent_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.Component()";
-}
-
-- (void)dealloc {
-  RELEASE_(modules_);
-  RELEASE_(dependencies_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(modules);
-  methods[1].selector = @selector(dependencies);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "modules_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
-    { "dependencies_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
-  };
-  static const void *ptrTable[] = { "[Ljava/lang/Class<*>;", "LDaggerComponent_Builder;", (void *)&DaggerComponent__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerComponent = { "Component", "dagger", ptrTable, methods, fields, 7, 0x2609, 2, 2, -1, 1, -1, -1, 2 };
-  return &_DaggerComponent;
-}
-
-@end
-
-id<DaggerComponent> create_DaggerComponent(IOSObjectArray *dependencies, IOSObjectArray *modules) {
-  DaggerComponent *self = AUTORELEASE([[DaggerComponent alloc] init]);
-  self->dependencies_ = RETAIN_(dependencies);
-  self->modules_ = RETAIN_(modules);
-  return self;
-}
-
-IOSObjectArray *DaggerComponent__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationDocumented() } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerComponent)
-
-@implementation DaggerComponent_Builder
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { "LDaggerComponent;", (void *)&DaggerComponent_Builder__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerComponent_Builder = { "Builder", "dagger", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, 0, -1, -1, -1, 1 };
-  return &_DaggerComponent_Builder;
-}
-
-@end
-
-IOSObjectArray *DaggerComponent_Builder__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationDocumented() } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerComponent_Builder)
diff --git a/core/iostest/daggerframework/main/DaggerInternalBeta.h b/core/iostest/daggerframework/main/DaggerInternalBeta.h
deleted file mode 100644
index 4141dc362..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalBeta.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalBeta")
-#ifdef RESTRICT_DaggerInternalBeta
-#define INCLUDE_ALL_DaggerInternalBeta 0
-#else
-#define INCLUDE_ALL_DaggerInternalBeta 1
-#endif
-#undef RESTRICT_DaggerInternalBeta
-
-#if !defined (DaggerInternalBeta_) && (INCLUDE_ALL_DaggerInternalBeta || defined(INCLUDE_DaggerInternalBeta))
-#define DaggerInternalBeta_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerInternalBeta < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalBeta)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalBeta)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalBeta")
diff --git a/core/iostest/daggerframework/main/DaggerInternalBeta.m b/core/iostest/daggerframework/main/DaggerInternalBeta.m
deleted file mode 100644
index 985cecf35..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalBeta.m
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalBeta.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-
-@interface DaggerInternalBeta : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalBeta__Annotations$0();
-
-@implementation DaggerInternalBeta
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerInternalBeta__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerInternalBeta = { "Beta", "dagger.internal", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerInternalBeta;
-}
-
-@end
-
-IOSObjectArray *DaggerInternalBeta__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerInternalBeta)
diff --git a/core/iostest/daggerframework/main/DaggerInternalDaggerCollections.h b/core/iostest/daggerframework/main/DaggerInternalDaggerCollections.h
deleted file mode 100644
index 806fde158..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalDaggerCollections.h
+++ /dev/null
@@ -1,52 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalDaggerCollections")
-#ifdef RESTRICT_DaggerInternalDaggerCollections
-#define INCLUDE_ALL_DaggerInternalDaggerCollections 0
-#else
-#define INCLUDE_ALL_DaggerInternalDaggerCollections 1
-#endif
-#undef RESTRICT_DaggerInternalDaggerCollections
-
-#if !defined (DaggerInternalDaggerCollections_) && (INCLUDE_ALL_DaggerInternalDaggerCollections || defined(INCLUDE_DaggerInternalDaggerCollections))
-#define DaggerInternalDaggerCollections_
-
-@class JavaUtilHashSet;
-@class JavaUtilLinkedHashMap;
-@protocol JavaUtilList;
-
-@interface DaggerInternalDaggerCollections : NSObject
-
-#pragma mark Public
-
-+ (jboolean)hasDuplicatesWithJavaUtilList:(id<JavaUtilList>)list;
-
-+ (id<JavaUtilList>)presizedListWithInt:(jint)size;
-
-#pragma mark Package-Private
-
-+ (JavaUtilHashSet *)newHashSetWithExpectedSizeWithInt:(jint)expectedSize OBJC_METHOD_FAMILY_NONE;
-
-+ (JavaUtilLinkedHashMap *)newLinkedHashMapWithExpectedSizeWithInt:(jint)expectedSize OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDaggerCollections)
-
-FOUNDATION_EXPORT id<JavaUtilList> DaggerInternalDaggerCollections_presizedListWithInt_(jint size);
-
-FOUNDATION_EXPORT jboolean DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(id<JavaUtilList> list);
-
-FOUNDATION_EXPORT JavaUtilHashSet *DaggerInternalDaggerCollections_newHashSetWithExpectedSizeWithInt_(jint expectedSize);
-
-FOUNDATION_EXPORT JavaUtilLinkedHashMap *DaggerInternalDaggerCollections_newLinkedHashMapWithExpectedSizeWithInt_(jint expectedSize);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalDaggerCollections)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalDaggerCollections")
diff --git a/core/iostest/daggerframework/main/DaggerInternalDaggerCollections.m b/core/iostest/daggerframework/main/DaggerInternalDaggerCollections.m
deleted file mode 100644
index 9d6718a16..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalDaggerCollections.m
+++ /dev/null
@@ -1,142 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDaggerCollections.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Integer.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collections.h"
-#include "java/util/HashSet.h"
-#include "java/util/LinkedHashMap.h"
-#include "java/util/List.h"
-#include "java/util/Set.h"
-
-@interface DaggerInternalDaggerCollections ()
-
-- (instancetype)init;
-
-+ (jint)calculateInitialCapacityWithInt:(jint)expectedSize;
-
-@end
-
-inline jint DaggerInternalDaggerCollections_get_MAX_POWER_OF_TWO();
-#define DaggerInternalDaggerCollections_MAX_POWER_OF_TWO 1073741824
-J2OBJC_STATIC_FIELD_CONSTANT(DaggerInternalDaggerCollections, MAX_POWER_OF_TWO, jint)
-
-__attribute__((unused)) static void DaggerInternalDaggerCollections_init(DaggerInternalDaggerCollections *self);
-
-__attribute__((unused)) static DaggerInternalDaggerCollections *new_DaggerInternalDaggerCollections_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDaggerCollections *create_DaggerInternalDaggerCollections_init();
-
-__attribute__((unused)) static jint DaggerInternalDaggerCollections_calculateInitialCapacityWithInt_(jint expectedSize);
-
-@implementation DaggerInternalDaggerCollections
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalDaggerCollections_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id<JavaUtilList>)presizedListWithInt:(jint)size {
-  return DaggerInternalDaggerCollections_presizedListWithInt_(size);
-}
-
-+ (jboolean)hasDuplicatesWithJavaUtilList:(id<JavaUtilList>)list {
-  return DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(list);
-}
-
-+ (JavaUtilHashSet *)newHashSetWithExpectedSizeWithInt:(jint)expectedSize {
-  return DaggerInternalDaggerCollections_newHashSetWithExpectedSizeWithInt_(expectedSize);
-}
-
-+ (JavaUtilLinkedHashMap *)newLinkedHashMapWithExpectedSizeWithInt:(jint)expectedSize {
-  return DaggerInternalDaggerCollections_newLinkedHashMapWithExpectedSizeWithInt_(expectedSize);
-}
-
-+ (jint)calculateInitialCapacityWithInt:(jint)expectedSize {
-  return DaggerInternalDaggerCollections_calculateInitialCapacityWithInt_(expectedSize);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "Z", 0x9, 3, 4, -1, 5, -1, -1 },
-    { NULL, "LJavaUtilHashSet;", 0x8, 6, 1, -1, 7, -1, -1 },
-    { NULL, "LJavaUtilLinkedHashMap;", 0x8, 8, 1, -1, 9, -1, -1 },
-    { NULL, "I", 0xa, 10, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(presizedListWithInt:);
-  methods[2].selector = @selector(hasDuplicatesWithJavaUtilList:);
-  methods[3].selector = @selector(newHashSetWithExpectedSizeWithInt:);
-  methods[4].selector = @selector(newLinkedHashMapWithExpectedSizeWithInt:);
-  methods[5].selector = @selector(calculateInitialCapacityWithInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "MAX_POWER_OF_TWO", "I", .constantValue.asInt = DaggerInternalDaggerCollections_MAX_POWER_OF_TWO, 0x1a, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "presizedList", "I", "<T:Ljava/lang/Object;>(I)Ljava/util/List<TT;>;", "hasDuplicates", "LJavaUtilList;", "(Ljava/util/List<*>;)Z", "newHashSetWithExpectedSize", "<T:Ljava/lang/Object;>(I)Ljava/util/HashSet<TT;>;", "newLinkedHashMapWithExpectedSize", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(I)Ljava/util/LinkedHashMap<TK;TV;>;", "calculateInitialCapacity" };
-  static const J2ObjcClassInfo _DaggerInternalDaggerCollections = { "DaggerCollections", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 6, 1, -1, -1, -1, -1, -1 };
-  return &_DaggerInternalDaggerCollections;
-}
-
-@end
-
-void DaggerInternalDaggerCollections_init(DaggerInternalDaggerCollections *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalDaggerCollections *new_DaggerInternalDaggerCollections_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalDaggerCollections, init)
-}
-
-DaggerInternalDaggerCollections *create_DaggerInternalDaggerCollections_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalDaggerCollections, init)
-}
-
-id<JavaUtilList> DaggerInternalDaggerCollections_presizedListWithInt_(jint size) {
-  DaggerInternalDaggerCollections_initialize();
-  if (size == 0) {
-    return JavaUtilCollections_emptyList();
-  }
-  return create_JavaUtilArrayList_initWithInt_(size);
-}
-
-jboolean DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(id<JavaUtilList> list) {
-  DaggerInternalDaggerCollections_initialize();
-  if ([((id<JavaUtilList>) nil_chk(list)) size] < 2) {
-    return false;
-  }
-  id<JavaUtilSet> asSet = create_JavaUtilHashSet_initWithJavaUtilCollection_(list);
-  return [list size] != [asSet size];
-}
-
-JavaUtilHashSet *DaggerInternalDaggerCollections_newHashSetWithExpectedSizeWithInt_(jint expectedSize) {
-  DaggerInternalDaggerCollections_initialize();
-  return create_JavaUtilHashSet_initWithInt_(DaggerInternalDaggerCollections_calculateInitialCapacityWithInt_(expectedSize));
-}
-
-JavaUtilLinkedHashMap *DaggerInternalDaggerCollections_newLinkedHashMapWithExpectedSizeWithInt_(jint expectedSize) {
-  DaggerInternalDaggerCollections_initialize();
-  return create_JavaUtilLinkedHashMap_initWithInt_(DaggerInternalDaggerCollections_calculateInitialCapacityWithInt_(expectedSize));
-}
-
-jint DaggerInternalDaggerCollections_calculateInitialCapacityWithInt_(jint expectedSize) {
-  DaggerInternalDaggerCollections_initialize();
-  if (expectedSize < 3) {
-    return expectedSize + 1;
-  }
-  if (expectedSize < DaggerInternalDaggerCollections_MAX_POWER_OF_TWO) {
-    return JreFpToInt((expectedSize / 0.75f + 1.0f));
-  }
-  return JavaLangInteger_MAX_VALUE;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalDaggerCollections)
diff --git a/core/iostest/daggerframework/main/DaggerInternalDelegateFactory.h b/core/iostest/daggerframework/main/DaggerInternalDelegateFactory.h
deleted file mode 100644
index 8e33f198f..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalDelegateFactory.h
+++ /dev/null
@@ -1,48 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalDelegateFactory")
-#ifdef RESTRICT_DaggerInternalDelegateFactory
-#define INCLUDE_ALL_DaggerInternalDelegateFactory 0
-#else
-#define INCLUDE_ALL_DaggerInternalDelegateFactory 1
-#endif
-#undef RESTRICT_DaggerInternalDelegateFactory
-
-#if !defined (DaggerInternalDelegateFactory_) && (INCLUDE_ALL_DaggerInternalDelegateFactory || defined(INCLUDE_DaggerInternalDelegateFactory))
-#define DaggerInternalDelegateFactory_
-
-#define RESTRICT_DaggerInternalFactory 1
-#define INCLUDE_DaggerInternalFactory 1
-#include "DaggerInternalFactory.h"
-
-@protocol JavaxInjectProvider;
-
-@interface DaggerInternalDelegateFactory : NSObject < DaggerInternalFactory >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (id)get;
-
-- (void)setDelegatedProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)delegate;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDelegateFactory)
-
-FOUNDATION_EXPORT void DaggerInternalDelegateFactory_init(DaggerInternalDelegateFactory *self);
-
-FOUNDATION_EXPORT DaggerInternalDelegateFactory *new_DaggerInternalDelegateFactory_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT DaggerInternalDelegateFactory *create_DaggerInternalDelegateFactory_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalDelegateFactory)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalDelegateFactory")
diff --git a/core/iostest/daggerframework/main/DaggerInternalDelegateFactory.m b/core/iostest/daggerframework/main/DaggerInternalDelegateFactory.m
deleted file mode 100644
index 5de09c59a..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalDelegateFactory.m
+++ /dev/null
@@ -1,85 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDelegateFactory.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalDelegateFactory () {
- @public
-  id<JavaxInjectProvider> delegate_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalDelegateFactory, delegate_, id<JavaxInjectProvider>)
-
-@implementation DaggerInternalDelegateFactory
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalDelegateFactory_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (id)get {
-  if (delegate_ == nil) {
-    @throw create_JavaLangIllegalStateException_init();
-  }
-  return [delegate_ get];
-}
-
-- (void)setDelegatedProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)delegate {
-  if (delegate == nil) {
-    @throw create_JavaLangIllegalArgumentException_init();
-  }
-  if (self->delegate_ != nil) {
-    @throw create_JavaLangIllegalStateException_init();
-  }
-  JreStrongAssign(&self->delegate_, delegate);
-}
-
-- (void)dealloc {
-  RELEASE_(delegate_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(get);
-  methods[2].selector = @selector(setDelegatedProviderWithJavaxInjectProvider:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "delegate_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x2, -1, -1, 4, -1 },
-  };
-  static const void *ptrTable[] = { "()TT;", "setDelegatedProvider", "LJavaxInjectProvider;", "(Ljavax/inject/Provider<TT;>;)V", "Ljavax/inject/Provider<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<TT;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDelegateFactory = { "DelegateFactory", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, 5, -1 };
-  return &_DaggerInternalDelegateFactory;
-}
-
-@end
-
-void DaggerInternalDelegateFactory_init(DaggerInternalDelegateFactory *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalDelegateFactory *new_DaggerInternalDelegateFactory_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalDelegateFactory, init)
-}
-
-DaggerInternalDelegateFactory *create_DaggerInternalDelegateFactory_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalDelegateFactory, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalDelegateFactory)
diff --git a/core/iostest/daggerframework/main/DaggerInternalDoubleCheck.h b/core/iostest/daggerframework/main/DaggerInternalDoubleCheck.h
deleted file mode 100644
index 4313e3fa4..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalDoubleCheck.h
+++ /dev/null
@@ -1,48 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalDoubleCheck")
-#ifdef RESTRICT_DaggerInternalDoubleCheck
-#define INCLUDE_ALL_DaggerInternalDoubleCheck 0
-#else
-#define INCLUDE_ALL_DaggerInternalDoubleCheck 1
-#endif
-#undef RESTRICT_DaggerInternalDoubleCheck
-
-#if !defined (DaggerInternalDoubleCheck_) && (INCLUDE_ALL_DaggerInternalDoubleCheck || defined(INCLUDE_DaggerInternalDoubleCheck))
-#define DaggerInternalDoubleCheck_
-
-#define RESTRICT_JavaxInjectProvider 1
-#define INCLUDE_JavaxInjectProvider 1
-#include "javax/inject/Provider.h"
-
-#define RESTRICT_DaggerLazy 1
-#define INCLUDE_DaggerLazy 1
-#include "DaggerLazy.h"
-
-@interface DaggerInternalDoubleCheck : NSObject < JavaxInjectProvider, DaggerLazy >
-
-#pragma mark Public
-
-- (id)get;
-
-+ (id<DaggerLazy>)lazyWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider;
-
-+ (id<JavaxInjectProvider>)providerWithJavaxInjectProvider:(id<JavaxInjectProvider>)delegate;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerInternalDoubleCheck)
-
-FOUNDATION_EXPORT id<JavaxInjectProvider> DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(id<JavaxInjectProvider> delegate);
-
-FOUNDATION_EXPORT id<DaggerLazy> DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(id<JavaxInjectProvider> provider);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalDoubleCheck)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalDoubleCheck")
diff --git a/core/iostest/daggerframework/main/DaggerInternalDoubleCheck.m b/core/iostest/daggerframework/main/DaggerInternalDoubleCheck.m
deleted file mode 100644
index a69a75fab..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalDoubleCheck.m
+++ /dev/null
@@ -1,150 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDoubleCheck.h"
-#include "DaggerInternalPreconditions.h"
-#include "DaggerLazy.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalStateException.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalDoubleCheck () {
- @public
-  volatile_id provider_;
-  volatile_id instance_;
-}
-
-- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider;
-
-@end
-
-J2OBJC_VOLATILE_FIELD_SETTER(DaggerInternalDoubleCheck, provider_, id<JavaxInjectProvider>)
-J2OBJC_VOLATILE_FIELD_SETTER(DaggerInternalDoubleCheck, instance_, id)
-
-inline id DaggerInternalDoubleCheck_get_UNINITIALIZED();
-static id DaggerInternalDoubleCheck_UNINITIALIZED;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalDoubleCheck, UNINITIALIZED, id)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(DaggerInternalDoubleCheck *self, id<JavaxInjectProvider> provider);
-
-__attribute__((unused)) static DaggerInternalDoubleCheck *new_DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheck *create_DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider);
-
-J2OBJC_INITIALIZED_DEFN(DaggerInternalDoubleCheck)
-
-@implementation DaggerInternalDoubleCheck
-
-- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider {
-  DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(self, provider);
-  return self;
-}
-
-- (id)get {
-  id result = JreLoadVolatileId(&instance_);
-  if (result == DaggerInternalDoubleCheck_UNINITIALIZED) {
-    @synchronized(self) {
-      result = JreLoadVolatileId(&instance_);
-      if (result == DaggerInternalDoubleCheck_UNINITIALIZED) {
-        result = [((id<JavaxInjectProvider>) nil_chk(JreLoadVolatileId(&provider_))) get];
-        id currentInstance = JreLoadVolatileId(&instance_);
-        if (currentInstance != DaggerInternalDoubleCheck_UNINITIALIZED && currentInstance != result) {
-          @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@", @"Scoped provider was invoked recursively returning different results: ", currentInstance, @" & ", result));
-        }
-        JreVolatileStrongAssign(&instance_, result);
-        JreVolatileStrongAssign(&provider_, nil);
-      }
-    }
-  }
-  return result;
-}
-
-+ (id<JavaxInjectProvider>)providerWithJavaxInjectProvider:(id<JavaxInjectProvider>)delegate {
-  return DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(delegate);
-}
-
-+ (id<DaggerLazy>)lazyWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider {
-  return DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(provider);
-}
-
-- (void)__javaClone:(DaggerInternalDoubleCheck *)original {
-  [super __javaClone:original];
-  JreCloneVolatileStrong(&provider_, &original->provider_);
-  JreCloneVolatileStrong(&instance_, &original->instance_);
-}
-
-- (void)dealloc {
-  JreReleaseVolatile(&provider_);
-  JreReleaseVolatile(&instance_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
-    { NULL, "LJavaxInjectProvider;", 0x9, 3, 0, -1, 4, -1, -1 },
-    { NULL, "LDaggerLazy;", 0x9, 5, 0, -1, 6, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaxInjectProvider:);
-  methods[1].selector = @selector(get);
-  methods[2].selector = @selector(providerWithJavaxInjectProvider:);
-  methods[3].selector = @selector(lazyWithJavaxInjectProvider:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "UNINITIALIZED", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
-    { "provider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x42, -1, -1, 8, -1 },
-    { "instance_", "LNSObject;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaxInjectProvider;", "(Ljavax/inject/Provider<TT;>;)V", "()TT;", "provider", "<T:Ljava/lang/Object;>(Ljavax/inject/Provider<TT;>;)Ljavax/inject/Provider<TT;>;", "lazy", "<T:Ljava/lang/Object;>(Ljavax/inject/Provider<TT;>;)Ldagger/Lazy<TT;>;", &DaggerInternalDoubleCheck_UNINITIALIZED, "Ljavax/inject/Provider<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljavax/inject/Provider<TT;>;Ldagger/Lazy<TT;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheck = { "DoubleCheck", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 4, 3, -1, -1, -1, 9, -1 };
-  return &_DaggerInternalDoubleCheck;
-}
-
-+ (void)initialize {
-  if (self == [DaggerInternalDoubleCheck class]) {
-    JreStrongAssignAndConsume(&DaggerInternalDoubleCheck_UNINITIALIZED, new_NSObject_init());
-    J2OBJC_SET_INITIALIZED(DaggerInternalDoubleCheck)
-  }
-}
-
-@end
-
-void DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(DaggerInternalDoubleCheck *self, id<JavaxInjectProvider> provider) {
-  NSObject_init(self);
-  JreVolatileStrongAssign(&self->instance_, DaggerInternalDoubleCheck_UNINITIALIZED);
-  JreAssert((provider != nil), (@"dagger/internal/DoubleCheck.java:34 condition failed: assert provider != null;"));
-  JreVolatileStrongAssign(&self->provider_, provider);
-}
-
-DaggerInternalDoubleCheck *new_DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheck, initWithJavaxInjectProvider_, provider)
-}
-
-DaggerInternalDoubleCheck *create_DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheck, initWithJavaxInjectProvider_, provider)
-}
-
-id<JavaxInjectProvider> DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(id<JavaxInjectProvider> delegate) {
-  DaggerInternalDoubleCheck_initialize();
-  DaggerInternalPreconditions_checkNotNullWithId_(delegate);
-  if ([delegate isKindOfClass:[DaggerInternalDoubleCheck class]]) {
-    return delegate;
-  }
-  return create_DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(delegate);
-}
-
-id<DaggerLazy> DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) {
-  DaggerInternalDoubleCheck_initialize();
-  if ([DaggerLazy_class_() isInstance:provider]) {
-    id<DaggerLazy> lazy = (id<DaggerLazy>) cast_check(provider, DaggerLazy_class_());
-    return lazy;
-  }
-  return create_DaggerInternalDoubleCheck_initWithJavaxInjectProvider_(DaggerInternalPreconditions_checkNotNullWithId_(provider));
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalDoubleCheck)
diff --git a/core/iostest/daggerframework/main/DaggerInternalFactory.h b/core/iostest/daggerframework/main/DaggerInternalFactory.h
deleted file mode 100644
index fbec78c55..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalFactory.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalFactory")
-#ifdef RESTRICT_DaggerInternalFactory
-#define INCLUDE_ALL_DaggerInternalFactory 0
-#else
-#define INCLUDE_ALL_DaggerInternalFactory 1
-#endif
-#undef RESTRICT_DaggerInternalFactory
-
-#if !defined (DaggerInternalFactory_) && (INCLUDE_ALL_DaggerInternalFactory || defined(INCLUDE_DaggerInternalFactory))
-#define DaggerInternalFactory_
-
-#define RESTRICT_JavaxInjectProvider 1
-#define INCLUDE_JavaxInjectProvider 1
-#include "javax/inject/Provider.h"
-
-@protocol DaggerInternalFactory < JavaxInjectProvider, JavaObject >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalFactory)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalFactory)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalFactory")
diff --git a/core/iostest/daggerframework/main/DaggerInternalFactory.m b/core/iostest/daggerframework/main/DaggerInternalFactory.m
deleted file mode 100644
index cd8eb4722..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalFactory.m
+++ /dev/null
@@ -1,22 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalFactory.h"
-#include "J2ObjC_source.h"
-
-@interface DaggerInternalFactory : NSObject
-
-@end
-
-@implementation DaggerInternalFactory
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljavax/inject/Provider<TT;>;" };
-  static const J2ObjcClassInfo _DaggerInternalFactory = { "Factory", "dagger.internal", ptrTable, NULL, NULL, 7, 0x609, 0, 0, -1, -1, -1, 0, -1 };
-  return &_DaggerInternalFactory;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerInternalFactory)
diff --git a/core/iostest/daggerframework/main/DaggerInternalInstanceFactory.h b/core/iostest/daggerframework/main/DaggerInternalInstanceFactory.h
deleted file mode 100644
index 53822cdbc..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalInstanceFactory.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalInstanceFactory")
-#ifdef RESTRICT_DaggerInternalInstanceFactory
-#define INCLUDE_ALL_DaggerInternalInstanceFactory 0
-#else
-#define INCLUDE_ALL_DaggerInternalInstanceFactory 1
-#endif
-#undef RESTRICT_DaggerInternalInstanceFactory
-
-#if !defined (DaggerInternalInstanceFactory_) && (INCLUDE_ALL_DaggerInternalInstanceFactory || defined(INCLUDE_DaggerInternalInstanceFactory))
-#define DaggerInternalInstanceFactory_
-
-#define RESTRICT_DaggerInternalFactory 1
-#define INCLUDE_DaggerInternalFactory 1
-#include "DaggerInternalFactory.h"
-
-@interface DaggerInternalInstanceFactory : NSObject < DaggerInternalFactory >
-
-#pragma mark Public
-
-+ (id<DaggerInternalFactory>)createWithId:(id)instance;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalInstanceFactory)
-
-FOUNDATION_EXPORT id<DaggerInternalFactory> DaggerInternalInstanceFactory_createWithId_(id instance);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalInstanceFactory)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalInstanceFactory")
diff --git a/core/iostest/daggerframework/main/DaggerInternalInstanceFactory.m b/core/iostest/daggerframework/main/DaggerInternalInstanceFactory.m
deleted file mode 100644
index de3bd8911..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalInstanceFactory.m
+++ /dev/null
@@ -1,90 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalInstanceFactory.h"
-#include "J2ObjC_source.h"
-#include "java/lang/NullPointerException.h"
-
-@interface DaggerInternalInstanceFactory () {
- @public
-  id instance_;
-}
-
-- (instancetype)initWithId:(id)instance;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalInstanceFactory, instance_, id)
-
-__attribute__((unused)) static void DaggerInternalInstanceFactory_initWithId_(DaggerInternalInstanceFactory *self, id instance);
-
-__attribute__((unused)) static DaggerInternalInstanceFactory *new_DaggerInternalInstanceFactory_initWithId_(id instance) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalInstanceFactory *create_DaggerInternalInstanceFactory_initWithId_(id instance);
-
-@implementation DaggerInternalInstanceFactory
-
-+ (id<DaggerInternalFactory>)createWithId:(id)instance {
-  return DaggerInternalInstanceFactory_createWithId_(instance);
-}
-
-- (instancetype)initWithId:(id)instance {
-  DaggerInternalInstanceFactory_initWithId_(self, instance);
-  return self;
-}
-
-- (id)get {
-  return instance_;
-}
-
-- (void)dealloc {
-  RELEASE_(instance_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LDaggerInternalFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 4, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(createWithId:);
-  methods[1].selector = @selector(initWithId:);
-  methods[2].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "instance_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
-  };
-  static const void *ptrTable[] = { "create", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Ldagger/internal/Factory<TT;>;", "(TT;)V", "()TT;", "TT;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<TT;>;" };
-  static const J2ObjcClassInfo _DaggerInternalInstanceFactory = { "InstanceFactory", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, 6, -1 };
-  return &_DaggerInternalInstanceFactory;
-}
-
-@end
-
-id<DaggerInternalFactory> DaggerInternalInstanceFactory_createWithId_(id instance) {
-  DaggerInternalInstanceFactory_initialize();
-  if (instance == nil) {
-    @throw create_JavaLangNullPointerException_init();
-  }
-  return create_DaggerInternalInstanceFactory_initWithId_(instance);
-}
-
-void DaggerInternalInstanceFactory_initWithId_(DaggerInternalInstanceFactory *self, id instance) {
-  NSObject_init(self);
-  JreStrongAssign(&self->instance_, instance);
-}
-
-DaggerInternalInstanceFactory *new_DaggerInternalInstanceFactory_initWithId_(id instance) {
-  J2OBJC_NEW_IMPL(DaggerInternalInstanceFactory, initWithId_, instance)
-}
-
-DaggerInternalInstanceFactory *create_DaggerInternalInstanceFactory_initWithId_(id instance) {
-  J2OBJC_CREATE_IMPL(DaggerInternalInstanceFactory, initWithId_, instance)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalInstanceFactory)
diff --git a/core/iostest/daggerframework/main/DaggerInternalMapFactory.h b/core/iostest/daggerframework/main/DaggerInternalMapFactory.h
deleted file mode 100644
index 5c286493e..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalMapFactory.h
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalMapFactory")
-#ifdef RESTRICT_DaggerInternalMapFactory
-#define INCLUDE_ALL_DaggerInternalMapFactory 0
-#else
-#define INCLUDE_ALL_DaggerInternalMapFactory 1
-#endif
-#undef RESTRICT_DaggerInternalMapFactory
-
-#if !defined (DaggerInternalMapFactory_) && (INCLUDE_ALL_DaggerInternalMapFactory || defined(INCLUDE_DaggerInternalMapFactory))
-#define DaggerInternalMapFactory_
-
-#define RESTRICT_DaggerInternalFactory 1
-#define INCLUDE_DaggerInternalFactory 1
-#include "DaggerInternalFactory.h"
-
-@protocol JavaUtilMap;
-@protocol JavaxInjectProvider;
-
-@interface DaggerInternalMapFactory : NSObject < DaggerInternalFactory >
-
-#pragma mark Public
-
-+ (DaggerInternalMapFactory *)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)mapProviderFactory;
-
-- (id<JavaUtilMap>)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalMapFactory)
-
-FOUNDATION_EXPORT DaggerInternalMapFactory *DaggerInternalMapFactory_createWithJavaxInjectProvider_(id<JavaxInjectProvider> mapProviderFactory);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalMapFactory)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalMapFactory")
diff --git a/core/iostest/daggerframework/main/DaggerInternalMapFactory.m b/core/iostest/daggerframework/main/DaggerInternalMapFactory.m
deleted file mode 100644
index 3e5616ff0..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalMapFactory.m
+++ /dev/null
@@ -1,96 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDaggerCollections.h"
-#include "DaggerInternalMapFactory.h"
-#include "J2ObjC_source.h"
-#include "java/util/Collections.h"
-#include "java/util/LinkedHashMap.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalMapFactory () {
- @public
-  id<JavaUtilMap> contributingMap_;
-}
-
-- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalMapFactory, contributingMap_, id<JavaUtilMap>)
-
-__attribute__((unused)) static void DaggerInternalMapFactory_initWithJavaUtilMap_(DaggerInternalMapFactory *self, id<JavaUtilMap> map);
-
-__attribute__((unused)) static DaggerInternalMapFactory *new_DaggerInternalMapFactory_initWithJavaUtilMap_(id<JavaUtilMap> map) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalMapFactory *create_DaggerInternalMapFactory_initWithJavaUtilMap_(id<JavaUtilMap> map);
-
-@implementation DaggerInternalMapFactory
-
-- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
-  DaggerInternalMapFactory_initWithJavaUtilMap_(self, map);
-  return self;
-}
-
-+ (DaggerInternalMapFactory *)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)mapProviderFactory {
-  return DaggerInternalMapFactory_createWithJavaxInjectProvider_(mapProviderFactory);
-}
-
-- (id<JavaUtilMap>)get {
-  id<JavaUtilMap> result = DaggerInternalDaggerCollections_newLinkedHashMapWithExpectedSizeWithInt_([((id<JavaUtilMap>) nil_chk(contributingMap_)) size]);
-  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([contributingMap_ entrySet])) {
-    [((id<JavaUtilMap>) nil_chk(result)) putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[((id<JavaxInjectProvider>) nil_chk([entry_ getValue])) get]];
-  }
-  return JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(result);
-}
-
-- (void)dealloc {
-  RELEASE_(contributingMap_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LDaggerInternalMapFactory;", 0x9, 2, 3, -1, 4, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 5, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilMap:);
-  methods[1].selector = @selector(createWithJavaxInjectProvider:);
-  methods[2].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "contributingMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;)V", "create", "LJavaxInjectProvider;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljavax/inject/Provider<Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;>;)Ldagger/internal/MapFactory<TK;TV;>;", "()Ljava/util/Map<TK;TV;>;", "Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Map<TK;TV;>;>;" };
-  static const J2ObjcClassInfo _DaggerInternalMapFactory = { "MapFactory", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, 7, -1 };
-  return &_DaggerInternalMapFactory;
-}
-
-@end
-
-void DaggerInternalMapFactory_initWithJavaUtilMap_(DaggerInternalMapFactory *self, id<JavaUtilMap> map) {
-  NSObject_init(self);
-  JreStrongAssign(&self->contributingMap_, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(map));
-}
-
-DaggerInternalMapFactory *new_DaggerInternalMapFactory_initWithJavaUtilMap_(id<JavaUtilMap> map) {
-  J2OBJC_NEW_IMPL(DaggerInternalMapFactory, initWithJavaUtilMap_, map)
-}
-
-DaggerInternalMapFactory *create_DaggerInternalMapFactory_initWithJavaUtilMap_(id<JavaUtilMap> map) {
-  J2OBJC_CREATE_IMPL(DaggerInternalMapFactory, initWithJavaUtilMap_, map)
-}
-
-DaggerInternalMapFactory *DaggerInternalMapFactory_createWithJavaxInjectProvider_(id<JavaxInjectProvider> mapProviderFactory) {
-  DaggerInternalMapFactory_initialize();
-  id<JavaUtilMap> map = [((id<JavaxInjectProvider>) nil_chk(mapProviderFactory)) get];
-  return create_DaggerInternalMapFactory_initWithJavaUtilMap_(map);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalMapFactory)
diff --git a/core/iostest/daggerframework/main/DaggerInternalMapProviderFactory.h b/core/iostest/daggerframework/main/DaggerInternalMapProviderFactory.h
deleted file mode 100644
index 7ce75419f..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalMapProviderFactory.h
+++ /dev/null
@@ -1,70 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalMapProviderFactory")
-#ifdef RESTRICT_DaggerInternalMapProviderFactory
-#define INCLUDE_ALL_DaggerInternalMapProviderFactory 0
-#else
-#define INCLUDE_ALL_DaggerInternalMapProviderFactory 1
-#endif
-#undef RESTRICT_DaggerInternalMapProviderFactory
-
-#if !defined (DaggerInternalMapProviderFactory_) && (INCLUDE_ALL_DaggerInternalMapProviderFactory || defined(INCLUDE_DaggerInternalMapProviderFactory))
-#define DaggerInternalMapProviderFactory_
-
-#define RESTRICT_DaggerInternalFactory 1
-#define INCLUDE_DaggerInternalFactory 1
-#include "DaggerInternalFactory.h"
-
-@class DaggerInternalMapProviderFactory_Builder;
-@protocol JavaUtilMap;
-
-@interface DaggerInternalMapProviderFactory : NSObject < DaggerInternalFactory >
-
-#pragma mark Public
-
-+ (DaggerInternalMapProviderFactory_Builder *)builderWithInt:(jint)size;
-
-+ (DaggerInternalMapProviderFactory *)empty;
-
-- (id<JavaUtilMap>)get;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerInternalMapProviderFactory)
-
-FOUNDATION_EXPORT DaggerInternalMapProviderFactory_Builder *DaggerInternalMapProviderFactory_builderWithInt_(jint size);
-
-FOUNDATION_EXPORT DaggerInternalMapProviderFactory *DaggerInternalMapProviderFactory_empty();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalMapProviderFactory)
-
-#endif
-
-#if !defined (DaggerInternalMapProviderFactory_Builder_) && (INCLUDE_ALL_DaggerInternalMapProviderFactory || defined(INCLUDE_DaggerInternalMapProviderFactory_Builder))
-#define DaggerInternalMapProviderFactory_Builder_
-
-@class DaggerInternalMapProviderFactory;
-@protocol JavaxInjectProvider;
-
-@interface DaggerInternalMapProviderFactory_Builder : NSObject
-
-#pragma mark Public
-
-- (DaggerInternalMapProviderFactory *)build;
-
-- (DaggerInternalMapProviderFactory_Builder *)putWithId:(id)key
-                                withJavaxInjectProvider:(id<JavaxInjectProvider>)providerOfValue;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalMapProviderFactory_Builder)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalMapProviderFactory_Builder)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalMapProviderFactory")
diff --git a/core/iostest/daggerframework/main/DaggerInternalMapProviderFactory.m b/core/iostest/daggerframework/main/DaggerInternalMapProviderFactory.m
deleted file mode 100644
index 501d491e9..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalMapProviderFactory.m
+++ /dev/null
@@ -1,198 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDaggerCollections.h"
-#include "DaggerInternalMapProviderFactory.h"
-#include "J2ObjC_source.h"
-#include "java/lang/NullPointerException.h"
-#include "java/util/Collections.h"
-#include "java/util/LinkedHashMap.h"
-#include "java/util/Map.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalMapProviderFactory () {
- @public
-  id<JavaUtilMap> contributingMap_;
-}
-
-- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)contributingMap;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalMapProviderFactory, contributingMap_, id<JavaUtilMap>)
-
-inline DaggerInternalMapProviderFactory *DaggerInternalMapProviderFactory_get_EMPTY();
-static DaggerInternalMapProviderFactory *DaggerInternalMapProviderFactory_EMPTY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalMapProviderFactory, EMPTY, DaggerInternalMapProviderFactory *)
-
-__attribute__((unused)) static void DaggerInternalMapProviderFactory_initWithJavaUtilMap_(DaggerInternalMapProviderFactory *self, id<JavaUtilMap> contributingMap);
-
-__attribute__((unused)) static DaggerInternalMapProviderFactory *new_DaggerInternalMapProviderFactory_initWithJavaUtilMap_(id<JavaUtilMap> contributingMap) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalMapProviderFactory *create_DaggerInternalMapProviderFactory_initWithJavaUtilMap_(id<JavaUtilMap> contributingMap);
-
-@interface DaggerInternalMapProviderFactory_Builder () {
- @public
-  JavaUtilLinkedHashMap *mapBuilder_;
-}
-
-- (instancetype)initWithInt:(jint)size;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalMapProviderFactory_Builder, mapBuilder_, JavaUtilLinkedHashMap *)
-
-__attribute__((unused)) static void DaggerInternalMapProviderFactory_Builder_initWithInt_(DaggerInternalMapProviderFactory_Builder *self, jint size);
-
-__attribute__((unused)) static DaggerInternalMapProviderFactory_Builder *new_DaggerInternalMapProviderFactory_Builder_initWithInt_(jint size) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalMapProviderFactory_Builder *create_DaggerInternalMapProviderFactory_Builder_initWithInt_(jint size);
-
-J2OBJC_INITIALIZED_DEFN(DaggerInternalMapProviderFactory)
-
-@implementation DaggerInternalMapProviderFactory
-
-+ (DaggerInternalMapProviderFactory_Builder *)builderWithInt:(jint)size {
-  return DaggerInternalMapProviderFactory_builderWithInt_(size);
-}
-
-+ (DaggerInternalMapProviderFactory *)empty {
-  return DaggerInternalMapProviderFactory_empty();
-}
-
-- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)contributingMap {
-  DaggerInternalMapProviderFactory_initWithJavaUtilMap_(self, contributingMap);
-  return self;
-}
-
-- (id<JavaUtilMap>)get {
-  return self->contributingMap_;
-}
-
-- (void)dealloc {
-  RELEASE_(contributingMap_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LDaggerInternalMapProviderFactory_Builder;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "LDaggerInternalMapProviderFactory;", 0x9, -1, -1, -1, 3, -1, -1 },
-    { NULL, NULL, 0x2, -1, 4, -1, 5, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 6, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(builderWithInt:);
-  methods[1].selector = @selector(empty);
-  methods[2].selector = @selector(initWithJavaUtilMap:);
-  methods[3].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EMPTY", "LDaggerInternalMapProviderFactory;", .constantValue.asLong = 0, 0x1a, -1, 7, 8, -1 },
-    { "contributingMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
-  };
-  static const void *ptrTable[] = { "builder", "I", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(I)Ldagger/internal/MapProviderFactory$Builder<TK;TV;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ldagger/internal/MapProviderFactory<TK;TV;>;", "LJavaUtilMap;", "(Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;)V", "()Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;", &DaggerInternalMapProviderFactory_EMPTY, "Ldagger/internal/MapProviderFactory<Ljava/lang/Object;Ljava/lang/Object;>;", "Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;", "LDaggerInternalMapProviderFactory_Builder;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Map<TK;Ljavax/inject/Provider<TV;>;>;>;" };
-  static const J2ObjcClassInfo _DaggerInternalMapProviderFactory = { "MapProviderFactory", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 4, 2, -1, 10, -1, 11, -1 };
-  return &_DaggerInternalMapProviderFactory;
-}
-
-+ (void)initialize {
-  if (self == [DaggerInternalMapProviderFactory class]) {
-    JreStrongAssignAndConsume(&DaggerInternalMapProviderFactory_EMPTY, new_DaggerInternalMapProviderFactory_initWithJavaUtilMap_(JavaUtilCollections_emptyMap()));
-    J2OBJC_SET_INITIALIZED(DaggerInternalMapProviderFactory)
-  }
-}
-
-@end
-
-DaggerInternalMapProviderFactory_Builder *DaggerInternalMapProviderFactory_builderWithInt_(jint size) {
-  DaggerInternalMapProviderFactory_initialize();
-  return create_DaggerInternalMapProviderFactory_Builder_initWithInt_(size);
-}
-
-DaggerInternalMapProviderFactory *DaggerInternalMapProviderFactory_empty() {
-  DaggerInternalMapProviderFactory_initialize();
-  return DaggerInternalMapProviderFactory_EMPTY;
-}
-
-void DaggerInternalMapProviderFactory_initWithJavaUtilMap_(DaggerInternalMapProviderFactory *self, id<JavaUtilMap> contributingMap) {
-  NSObject_init(self);
-  JreStrongAssign(&self->contributingMap_, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(contributingMap));
-}
-
-DaggerInternalMapProviderFactory *new_DaggerInternalMapProviderFactory_initWithJavaUtilMap_(id<JavaUtilMap> contributingMap) {
-  J2OBJC_NEW_IMPL(DaggerInternalMapProviderFactory, initWithJavaUtilMap_, contributingMap)
-}
-
-DaggerInternalMapProviderFactory *create_DaggerInternalMapProviderFactory_initWithJavaUtilMap_(id<JavaUtilMap> contributingMap) {
-  J2OBJC_CREATE_IMPL(DaggerInternalMapProviderFactory, initWithJavaUtilMap_, contributingMap)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalMapProviderFactory)
-
-@implementation DaggerInternalMapProviderFactory_Builder
-
-- (instancetype)initWithInt:(jint)size {
-  DaggerInternalMapProviderFactory_Builder_initWithInt_(self, size);
-  return self;
-}
-
-- (DaggerInternalMapProviderFactory *)build {
-  return create_DaggerInternalMapProviderFactory_initWithJavaUtilMap_(self->mapBuilder_);
-}
-
-- (DaggerInternalMapProviderFactory_Builder *)putWithId:(id)key
-                                withJavaxInjectProvider:(id<JavaxInjectProvider>)providerOfValue {
-  if (key == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"The key is null");
-  }
-  if (providerOfValue == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"The provider of the value is null");
-  }
-  [((JavaUtilLinkedHashMap *) nil_chk(self->mapBuilder_)) putWithId:key withId:providerOfValue];
-  return self;
-}
-
-- (void)dealloc {
-  RELEASE_(mapBuilder_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LDaggerInternalMapProviderFactory;", 0x1, -1, -1, -1, 1, -1, -1 },
-    { NULL, "LDaggerInternalMapProviderFactory_Builder;", 0x1, 2, 3, -1, 4, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithInt:);
-  methods[1].selector = @selector(build);
-  methods[2].selector = @selector(putWithId:withJavaxInjectProvider:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mapBuilder_", "LJavaUtilLinkedHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
-  };
-  static const void *ptrTable[] = { "I", "()Ldagger/internal/MapProviderFactory<TK;TV;>;", "put", "LNSObject;LJavaxInjectProvider;", "(TK;Ljavax/inject/Provider<TV;>;)Ldagger/internal/MapProviderFactory$Builder<TK;TV;>;", "Ljava/util/LinkedHashMap<TK;Ljavax/inject/Provider<TV;>;>;", "LDaggerInternalMapProviderFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _DaggerInternalMapProviderFactory_Builder = { "Builder", "dagger.internal", ptrTable, methods, fields, 7, 0x19, 3, 1, 6, -1, -1, 7, -1 };
-  return &_DaggerInternalMapProviderFactory_Builder;
-}
-
-@end
-
-void DaggerInternalMapProviderFactory_Builder_initWithInt_(DaggerInternalMapProviderFactory_Builder *self, jint size) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mapBuilder_, DaggerInternalDaggerCollections_newLinkedHashMapWithExpectedSizeWithInt_(size));
-}
-
-DaggerInternalMapProviderFactory_Builder *new_DaggerInternalMapProviderFactory_Builder_initWithInt_(jint size) {
-  J2OBJC_NEW_IMPL(DaggerInternalMapProviderFactory_Builder, initWithInt_, size)
-}
-
-DaggerInternalMapProviderFactory_Builder *create_DaggerInternalMapProviderFactory_Builder_initWithInt_(jint size) {
-  J2OBJC_CREATE_IMPL(DaggerInternalMapProviderFactory_Builder, initWithInt_, size)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalMapProviderFactory_Builder)
diff --git a/core/iostest/daggerframework/main/DaggerInternalMembersInjectors.h b/core/iostest/daggerframework/main/DaggerInternalMembersInjectors.h
deleted file mode 100644
index 98e4967b0..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalMembersInjectors.h
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalMembersInjectors")
-#ifdef RESTRICT_DaggerInternalMembersInjectors
-#define INCLUDE_ALL_DaggerInternalMembersInjectors 0
-#else
-#define INCLUDE_ALL_DaggerInternalMembersInjectors 1
-#endif
-#undef RESTRICT_DaggerInternalMembersInjectors
-
-#if !defined (DaggerInternalMembersInjectors_) && (INCLUDE_ALL_DaggerInternalMembersInjectors || defined(INCLUDE_DaggerInternalMembersInjectors))
-#define DaggerInternalMembersInjectors_
-
-@protocol DaggerMembersInjector;
-
-@interface DaggerInternalMembersInjectors : NSObject
-
-#pragma mark Public
-
-+ (id<DaggerMembersInjector>)delegatingToWithDaggerMembersInjector:(id<DaggerMembersInjector>)delegate;
-
-+ (id)injectMembersWithDaggerMembersInjector:(id<DaggerMembersInjector>)membersInjector
-                                      withId:(id)instance;
-
-+ (id<DaggerMembersInjector>)noOp;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalMembersInjectors)
-
-FOUNDATION_EXPORT id DaggerInternalMembersInjectors_injectMembersWithDaggerMembersInjector_withId_(id<DaggerMembersInjector> membersInjector, id instance);
-
-FOUNDATION_EXPORT id<DaggerMembersInjector> DaggerInternalMembersInjectors_noOp();
-
-FOUNDATION_EXPORT id<DaggerMembersInjector> DaggerInternalMembersInjectors_delegatingToWithDaggerMembersInjector_(id<DaggerMembersInjector> delegate);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalMembersInjectors)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalMembersInjectors")
diff --git a/core/iostest/daggerframework/main/DaggerInternalMembersInjectors.m b/core/iostest/daggerframework/main/DaggerInternalMembersInjectors.m
deleted file mode 100644
index 45b514b0d..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalMembersInjectors.m
+++ /dev/null
@@ -1,222 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalMembersInjectors.h"
-#include "DaggerInternalPreconditions.h"
-#include "DaggerMembersInjector.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-
-@interface DaggerInternalMembersInjectors ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void DaggerInternalMembersInjectors_init(DaggerInternalMembersInjectors *self);
-
-__attribute__((unused)) static DaggerInternalMembersInjectors *new_DaggerInternalMembersInjectors_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalMembersInjectors *create_DaggerInternalMembersInjectors_init();
-
-typedef NS_ENUM(NSUInteger, DaggerInternalMembersInjectors_NoOpMembersInjector_Enum) {
-  DaggerInternalMembersInjectors_NoOpMembersInjector_Enum_INSTANCE = 0,
-};
-
-@interface DaggerInternalMembersInjectors_NoOpMembersInjector : JavaLangEnum < NSCopying, DaggerMembersInjector >
-
-- (void)injectMembersWithId:(id)instance;
-
-+ (IOSObjectArray *)values;
-
-+ (DaggerInternalMembersInjectors_NoOpMembersInjector *)valueOfWithNSString:(NSString *)name;
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerInternalMembersInjectors_NoOpMembersInjector)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_values_[];
-
-inline DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_get_INSTANCE();
-J2OBJC_ENUM_CONSTANT(DaggerInternalMembersInjectors_NoOpMembersInjector, INSTANCE)
-
-__attribute__((unused)) static void DaggerInternalMembersInjectors_NoOpMembersInjector_initWithNSString_withInt_(DaggerInternalMembersInjectors_NoOpMembersInjector *self, NSString *__name, jint __ordinal);
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalMembersInjectors_NoOpMembersInjector_values();
-
-__attribute__((unused)) static DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalMembersInjectors_NoOpMembersInjector)
-
-@implementation DaggerInternalMembersInjectors
-
-+ (id)injectMembersWithDaggerMembersInjector:(id<DaggerMembersInjector>)membersInjector
-                                      withId:(id)instance {
-  return DaggerInternalMembersInjectors_injectMembersWithDaggerMembersInjector_withId_(membersInjector, instance);
-}
-
-+ (id<DaggerMembersInjector>)noOp {
-  return DaggerInternalMembersInjectors_noOp();
-}
-
-+ (id<DaggerMembersInjector>)delegatingToWithDaggerMembersInjector:(id<DaggerMembersInjector>)delegate {
-  return DaggerInternalMembersInjectors_delegatingToWithDaggerMembersInjector_(delegate);
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalMembersInjectors_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSObject;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "LDaggerMembersInjector;", 0x9, -1, -1, -1, 3, -1, -1 },
-    { NULL, "LDaggerMembersInjector;", 0x9, 4, 5, -1, 6, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(injectMembersWithDaggerMembersInjector:withId:);
-  methods[1].selector = @selector(noOp);
-  methods[2].selector = @selector(delegatingToWithDaggerMembersInjector:);
-  methods[3].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "injectMembers", "LDaggerMembersInjector;LNSObject;", "<T:Ljava/lang/Object;>(Ldagger/MembersInjector<TT;>;TT;)TT;", "<T:Ljava/lang/Object;>()Ldagger/MembersInjector<TT;>;", "delegatingTo", "LDaggerMembersInjector;", "<T:Ljava/lang/Object;>(Ldagger/MembersInjector<-TT;>;)Ldagger/MembersInjector<TT;>;", "LDaggerInternalMembersInjectors_NoOpMembersInjector;" };
-  static const J2ObjcClassInfo _DaggerInternalMembersInjectors = { "MembersInjectors", "dagger.internal", ptrTable, methods, NULL, 7, 0x11, 4, 0, -1, 7, -1, -1, -1 };
-  return &_DaggerInternalMembersInjectors;
-}
-
-@end
-
-id DaggerInternalMembersInjectors_injectMembersWithDaggerMembersInjector_withId_(id<DaggerMembersInjector> membersInjector, id instance) {
-  DaggerInternalMembersInjectors_initialize();
-  [((id<DaggerMembersInjector>) nil_chk(membersInjector)) injectMembersWithId:instance];
-  return instance;
-}
-
-id<DaggerMembersInjector> DaggerInternalMembersInjectors_noOp() {
-  DaggerInternalMembersInjectors_initialize();
-  return JreLoadEnum(DaggerInternalMembersInjectors_NoOpMembersInjector, INSTANCE);
-}
-
-id<DaggerMembersInjector> DaggerInternalMembersInjectors_delegatingToWithDaggerMembersInjector_(id<DaggerMembersInjector> delegate) {
-  DaggerInternalMembersInjectors_initialize();
-  return DaggerInternalPreconditions_checkNotNullWithId_(delegate);
-}
-
-void DaggerInternalMembersInjectors_init(DaggerInternalMembersInjectors *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalMembersInjectors *new_DaggerInternalMembersInjectors_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalMembersInjectors, init)
-}
-
-DaggerInternalMembersInjectors *create_DaggerInternalMembersInjectors_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalMembersInjectors, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalMembersInjectors)
-
-J2OBJC_INITIALIZED_DEFN(DaggerInternalMembersInjectors_NoOpMembersInjector)
-
-DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_values_[1];
-
-@implementation DaggerInternalMembersInjectors_NoOpMembersInjector
-
-- (void)injectMembersWithId:(id)instance {
-  DaggerInternalPreconditions_checkNotNullWithId_(instance);
-}
-
-+ (IOSObjectArray *)values {
-  return DaggerInternalMembersInjectors_NoOpMembersInjector_values();
-}
-
-+ (DaggerInternalMembersInjectors_NoOpMembersInjector *)valueOfWithNSString:(NSString *)name {
-  return DaggerInternalMembersInjectors_NoOpMembersInjector_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "[LDaggerInternalMembersInjectors_NoOpMembersInjector;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LDaggerInternalMembersInjectors_NoOpMembersInjector;", 0x9, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(injectMembersWithId:);
-  methods[1].selector = @selector(values);
-  methods[2].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "INSTANCE", "LDaggerInternalMembersInjectors_NoOpMembersInjector;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
-  };
-  static const void *ptrTable[] = { "injectMembers", "LNSObject;", "valueOf", "LNSString;", &JreEnum(DaggerInternalMembersInjectors_NoOpMembersInjector, INSTANCE), "LDaggerInternalMembersInjectors;", "Ljava/lang/Enum<Ldagger/internal/MembersInjectors$NoOpMembersInjector;>;Ldagger/MembersInjector<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalMembersInjectors_NoOpMembersInjector = { "NoOpMembersInjector", "dagger.internal", ptrTable, methods, fields, 7, 0x401a, 3, 1, 5, -1, -1, 6, -1 };
-  return &_DaggerInternalMembersInjectors_NoOpMembersInjector;
-}
-
-+ (void)initialize {
-  if (self == [DaggerInternalMembersInjectors_NoOpMembersInjector class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 1 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"INSTANCE",
-    };
-    for (jint i = 0; i < 1; i++) {
-      (DaggerInternalMembersInjectors_NoOpMembersInjector_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      DaggerInternalMembersInjectors_NoOpMembersInjector_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(DaggerInternalMembersInjectors_NoOpMembersInjector)
-  }
-}
-
-@end
-
-void DaggerInternalMembersInjectors_NoOpMembersInjector_initWithNSString_withInt_(DaggerInternalMembersInjectors_NoOpMembersInjector *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *DaggerInternalMembersInjectors_NoOpMembersInjector_values() {
-  DaggerInternalMembersInjectors_NoOpMembersInjector_initialize();
-  return [IOSObjectArray arrayWithObjects:DaggerInternalMembersInjectors_NoOpMembersInjector_values_ count:1 type:DaggerInternalMembersInjectors_NoOpMembersInjector_class_()];
-}
-
-DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_valueOfWithNSString_(NSString *name) {
-  DaggerInternalMembersInjectors_NoOpMembersInjector_initialize();
-  for (int i = 0; i < 1; i++) {
-    DaggerInternalMembersInjectors_NoOpMembersInjector *e = DaggerInternalMembersInjectors_NoOpMembersInjector_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-DaggerInternalMembersInjectors_NoOpMembersInjector *DaggerInternalMembersInjectors_NoOpMembersInjector_fromOrdinal(NSUInteger ordinal) {
-  DaggerInternalMembersInjectors_NoOpMembersInjector_initialize();
-  if (ordinal >= 1) {
-    return nil;
-  }
-  return DaggerInternalMembersInjectors_NoOpMembersInjector_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalMembersInjectors_NoOpMembersInjector)
diff --git a/core/iostest/daggerframework/main/DaggerInternalPreconditions.h b/core/iostest/daggerframework/main/DaggerInternalPreconditions.h
deleted file mode 100644
index f4e22a006..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalPreconditions.h
+++ /dev/null
@@ -1,39 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalPreconditions")
-#ifdef RESTRICT_DaggerInternalPreconditions
-#define INCLUDE_ALL_DaggerInternalPreconditions 0
-#else
-#define INCLUDE_ALL_DaggerInternalPreconditions 1
-#endif
-#undef RESTRICT_DaggerInternalPreconditions
-
-#if !defined (DaggerInternalPreconditions_) && (INCLUDE_ALL_DaggerInternalPreconditions || defined(INCLUDE_DaggerInternalPreconditions))
-#define DaggerInternalPreconditions_
-
-@interface DaggerInternalPreconditions : NSObject
-
-#pragma mark Public
-
-+ (id)checkNotNullWithId:(id)reference;
-
-+ (id)checkNotNullWithId:(id)reference
-            withNSString:(NSString *)errorMessage;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalPreconditions)
-
-FOUNDATION_EXPORT id DaggerInternalPreconditions_checkNotNullWithId_(id reference);
-
-FOUNDATION_EXPORT id DaggerInternalPreconditions_checkNotNullWithId_withNSString_(id reference, NSString *errorMessage);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalPreconditions)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalPreconditions")
diff --git a/core/iostest/daggerframework/main/DaggerInternalPreconditions.m b/core/iostest/daggerframework/main/DaggerInternalPreconditions.m
deleted file mode 100644
index 70bd796bc..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalPreconditions.m
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalPreconditions.h"
-#include "J2ObjC_source.h"
-#include "java/lang/NullPointerException.h"
-
-@interface DaggerInternalPreconditions ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void DaggerInternalPreconditions_init(DaggerInternalPreconditions *self);
-
-__attribute__((unused)) static DaggerInternalPreconditions *new_DaggerInternalPreconditions_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalPreconditions *create_DaggerInternalPreconditions_init();
-
-@implementation DaggerInternalPreconditions
-
-+ (id)checkNotNullWithId:(id)reference {
-  return DaggerInternalPreconditions_checkNotNullWithId_(reference);
-}
-
-+ (id)checkNotNullWithId:(id)reference
-            withNSString:(NSString *)errorMessage {
-  return DaggerInternalPreconditions_checkNotNullWithId_withNSString_(reference, errorMessage);
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalPreconditions_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSObject;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "LNSObject;", 0x9, 0, 3, -1, 4, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(checkNotNullWithId:);
-  methods[1].selector = @selector(checkNotNullWithId:withNSString:);
-  methods[2].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "checkNotNull", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)TT;", "LNSObject;LNSString;", "<T:Ljava/lang/Object;>(TT;Ljava/lang/String;)TT;" };
-  static const J2ObjcClassInfo _DaggerInternalPreconditions = { "Preconditions", "dagger.internal", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
-  return &_DaggerInternalPreconditions;
-}
-
-@end
-
-id DaggerInternalPreconditions_checkNotNullWithId_(id reference) {
-  DaggerInternalPreconditions_initialize();
-  if (reference == nil) {
-    @throw create_JavaLangNullPointerException_init();
-  }
-  return reference;
-}
-
-id DaggerInternalPreconditions_checkNotNullWithId_withNSString_(id reference, NSString *errorMessage) {
-  DaggerInternalPreconditions_initialize();
-  if (reference == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(errorMessage);
-  }
-  return reference;
-}
-
-void DaggerInternalPreconditions_init(DaggerInternalPreconditions *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalPreconditions *new_DaggerInternalPreconditions_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalPreconditions, init)
-}
-
-DaggerInternalPreconditions *create_DaggerInternalPreconditions_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalPreconditions, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalPreconditions)
diff --git a/core/iostest/daggerframework/main/DaggerInternalProviderOfLazy.h b/core/iostest/daggerframework/main/DaggerInternalProviderOfLazy.h
deleted file mode 100644
index 788b2181e..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalProviderOfLazy.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalProviderOfLazy")
-#ifdef RESTRICT_DaggerInternalProviderOfLazy
-#define INCLUDE_ALL_DaggerInternalProviderOfLazy 0
-#else
-#define INCLUDE_ALL_DaggerInternalProviderOfLazy 1
-#endif
-#undef RESTRICT_DaggerInternalProviderOfLazy
-
-#if !defined (DaggerInternalProviderOfLazy_) && (INCLUDE_ALL_DaggerInternalProviderOfLazy || defined(INCLUDE_DaggerInternalProviderOfLazy))
-#define DaggerInternalProviderOfLazy_
-
-#define RESTRICT_JavaxInjectProvider 1
-#define INCLUDE_JavaxInjectProvider 1
-#include "javax/inject/Provider.h"
-
-@protocol DaggerLazy;
-
-@interface DaggerInternalProviderOfLazy : NSObject < JavaxInjectProvider >
-
-#pragma mark Public
-
-+ (id<JavaxInjectProvider>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider;
-
-- (id<DaggerLazy>)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalProviderOfLazy)
-
-FOUNDATION_EXPORT id<JavaxInjectProvider> DaggerInternalProviderOfLazy_createWithJavaxInjectProvider_(id<JavaxInjectProvider> provider);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalProviderOfLazy)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalProviderOfLazy")
diff --git a/core/iostest/daggerframework/main/DaggerInternalProviderOfLazy.m b/core/iostest/daggerframework/main/DaggerInternalProviderOfLazy.m
deleted file mode 100644
index f07707234..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalProviderOfLazy.m
+++ /dev/null
@@ -1,90 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDoubleCheck.h"
-#include "DaggerInternalPreconditions.h"
-#include "DaggerInternalProviderOfLazy.h"
-#include "DaggerLazy.h"
-#include "J2ObjC_source.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalProviderOfLazy () {
- @public
-  id<JavaxInjectProvider> provider_;
-}
-
-- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalProviderOfLazy, provider_, id<JavaxInjectProvider>)
-
-__attribute__((unused)) static void DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(DaggerInternalProviderOfLazy *self, id<JavaxInjectProvider> provider);
-
-__attribute__((unused)) static DaggerInternalProviderOfLazy *new_DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalProviderOfLazy *create_DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider);
-
-@implementation DaggerInternalProviderOfLazy
-
-- (instancetype)initWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider {
-  DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(self, provider);
-  return self;
-}
-
-- (id<DaggerLazy>)get {
-  return DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(provider_);
-}
-
-+ (id<JavaxInjectProvider>)createWithJavaxInjectProvider:(id<JavaxInjectProvider>)provider {
-  return DaggerInternalProviderOfLazy_createWithJavaxInjectProvider_(provider);
-}
-
-- (void)dealloc {
-  RELEASE_(provider_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LDaggerLazy;", 0x1, -1, -1, -1, 2, -1, -1 },
-    { NULL, "LJavaxInjectProvider;", 0x9, 3, 0, -1, 4, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaxInjectProvider:);
-  methods[1].selector = @selector(get);
-  methods[2].selector = @selector(createWithJavaxInjectProvider:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "provider_", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaxInjectProvider;", "(Ljavax/inject/Provider<TT;>;)V", "()Ldagger/Lazy<TT;>;", "create", "<T:Ljava/lang/Object;>(Ljavax/inject/Provider<TT;>;)Ljavax/inject/Provider<Ldagger/Lazy<TT;>;>;", "Ljavax/inject/Provider<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljavax/inject/Provider<Ldagger/Lazy<TT;>;>;" };
-  static const J2ObjcClassInfo _DaggerInternalProviderOfLazy = { "ProviderOfLazy", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, 6, -1 };
-  return &_DaggerInternalProviderOfLazy;
-}
-
-@end
-
-void DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(DaggerInternalProviderOfLazy *self, id<JavaxInjectProvider> provider) {
-  NSObject_init(self);
-  JreAssert((provider != nil), (@"dagger/internal/ProviderOfLazy.java:31 condition failed: assert provider != null;"));
-  JreStrongAssign(&self->provider_, provider);
-}
-
-DaggerInternalProviderOfLazy *new_DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) {
-  J2OBJC_NEW_IMPL(DaggerInternalProviderOfLazy, initWithJavaxInjectProvider_, provider)
-}
-
-DaggerInternalProviderOfLazy *create_DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) {
-  J2OBJC_CREATE_IMPL(DaggerInternalProviderOfLazy, initWithJavaxInjectProvider_, provider)
-}
-
-id<JavaxInjectProvider> DaggerInternalProviderOfLazy_createWithJavaxInjectProvider_(id<JavaxInjectProvider> provider) {
-  DaggerInternalProviderOfLazy_initialize();
-  return create_DaggerInternalProviderOfLazy_initWithJavaxInjectProvider_(DaggerInternalPreconditions_checkNotNullWithId_(provider));
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalProviderOfLazy)
diff --git a/core/iostest/daggerframework/main/DaggerInternalSetFactory.h b/core/iostest/daggerframework/main/DaggerInternalSetFactory.h
deleted file mode 100644
index 2d762a814..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalSetFactory.h
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalSetFactory")
-#ifdef RESTRICT_DaggerInternalSetFactory
-#define INCLUDE_ALL_DaggerInternalSetFactory 0
-#else
-#define INCLUDE_ALL_DaggerInternalSetFactory 1
-#endif
-#undef RESTRICT_DaggerInternalSetFactory
-
-#if !defined (DaggerInternalSetFactory_) && (INCLUDE_ALL_DaggerInternalSetFactory || defined(INCLUDE_DaggerInternalSetFactory))
-#define DaggerInternalSetFactory_
-
-#define RESTRICT_DaggerInternalFactory 1
-#define INCLUDE_DaggerInternalFactory 1
-#include "DaggerInternalFactory.h"
-
-@class DaggerInternalSetFactory_Builder;
-@protocol JavaUtilSet;
-
-@interface DaggerInternalSetFactory : NSObject < DaggerInternalFactory >
-
-#pragma mark Public
-
-+ (DaggerInternalSetFactory_Builder *)builderWithInt:(jint)individualProviderSize
-                                             withInt:(jint)collectionProviderSize;
-
-+ (id<DaggerInternalFactory>)empty;
-
-- (id<JavaUtilSet>)get;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerInternalSetFactory)
-
-FOUNDATION_EXPORT id<DaggerInternalFactory> DaggerInternalSetFactory_empty();
-
-FOUNDATION_EXPORT DaggerInternalSetFactory_Builder *DaggerInternalSetFactory_builderWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSetFactory)
-
-#endif
-
-#if !defined (DaggerInternalSetFactory_Builder_) && (INCLUDE_ALL_DaggerInternalSetFactory || defined(INCLUDE_DaggerInternalSetFactory_Builder))
-#define DaggerInternalSetFactory_Builder_
-
-@class DaggerInternalSetFactory;
-@protocol JavaxInjectProvider;
-
-@interface DaggerInternalSetFactory_Builder : NSObject
-
-#pragma mark Public
-
-- (DaggerInternalSetFactory_Builder *)addCollectionProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)collectionProvider;
-
-- (DaggerInternalSetFactory_Builder *)addProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)individualProvider;
-
-- (DaggerInternalSetFactory *)build;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactory_Builder)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSetFactory_Builder)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalSetFactory")
diff --git a/core/iostest/daggerframework/main/DaggerInternalSetFactory.m b/core/iostest/daggerframework/main/DaggerInternalSetFactory.m
deleted file mode 100644
index 69175fb21..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalSetFactory.m
+++ /dev/null
@@ -1,295 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalDaggerCollections.h"
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalPreconditions.h"
-#include "DaggerInternalSetFactory.h"
-#include "J2ObjC_source.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collection.h"
-#include "java/util/Collections.h"
-#include "java/util/HashSet.h"
-#include "java/util/List.h"
-#include "java/util/Set.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalSetFactory () {
- @public
-  id<JavaUtilList> individualProviders_;
-  id<JavaUtilList> collectionProviders_;
-}
-
-- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)individualProviders
-                    withJavaUtilList:(id<JavaUtilList>)collectionProviders;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalSetFactory, individualProviders_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(DaggerInternalSetFactory, collectionProviders_, id<JavaUtilList>)
-
-inline id<DaggerInternalFactory> DaggerInternalSetFactory_get_EMPTY_FACTORY();
-static id<DaggerInternalFactory> DaggerInternalSetFactory_EMPTY_FACTORY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalSetFactory, EMPTY_FACTORY, id<DaggerInternalFactory>)
-
-__attribute__((unused)) static void DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(DaggerInternalSetFactory *self, id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders);
-
-__attribute__((unused)) static DaggerInternalSetFactory *new_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSetFactory *create_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders);
-
-@interface DaggerInternalSetFactory_1 : NSObject < DaggerInternalFactory >
-
-- (instancetype)init;
-
-- (id<JavaUtilSet>)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactory_1)
-
-__attribute__((unused)) static void DaggerInternalSetFactory_1_init(DaggerInternalSetFactory_1 *self);
-
-__attribute__((unused)) static DaggerInternalSetFactory_1 *new_DaggerInternalSetFactory_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSetFactory_1 *create_DaggerInternalSetFactory_1_init();
-
-@interface DaggerInternalSetFactory_Builder () {
- @public
-  id<JavaUtilList> individualProviders_;
-  id<JavaUtilList> collectionProviders_;
-}
-
-- (instancetype)initWithInt:(jint)individualProviderSize
-                    withInt:(jint)collectionProviderSize;
-
-@end
-
-J2OBJC_FIELD_SETTER(DaggerInternalSetFactory_Builder, individualProviders_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(DaggerInternalSetFactory_Builder, collectionProviders_, id<JavaUtilList>)
-
-__attribute__((unused)) static void DaggerInternalSetFactory_Builder_initWithInt_withInt_(DaggerInternalSetFactory_Builder *self, jint individualProviderSize, jint collectionProviderSize);
-
-__attribute__((unused)) static DaggerInternalSetFactory_Builder *new_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSetFactory_Builder *create_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize);
-
-J2OBJC_INITIALIZED_DEFN(DaggerInternalSetFactory)
-
-@implementation DaggerInternalSetFactory
-
-+ (id<DaggerInternalFactory>)empty {
-  return DaggerInternalSetFactory_empty();
-}
-
-+ (DaggerInternalSetFactory_Builder *)builderWithInt:(jint)individualProviderSize
-                                             withInt:(jint)collectionProviderSize {
-  return DaggerInternalSetFactory_builderWithInt_withInt_(individualProviderSize, collectionProviderSize);
-}
-
-- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)individualProviders
-                    withJavaUtilList:(id<JavaUtilList>)collectionProviders {
-  DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(self, individualProviders, collectionProviders);
-  return self;
-}
-
-- (id<JavaUtilSet>)get {
-  jint size = [((id<JavaUtilList>) nil_chk(individualProviders_)) size];
-  id<JavaUtilList> providedCollections = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(collectionProviders_)) size]);
-  for (jint i = 0, c = [collectionProviders_ size]; i < c; i++) {
-    id<JavaUtilCollection> providedCollection = [((id<JavaxInjectProvider>) nil_chk([collectionProviders_ getWithInt:i])) get];
-    size += [((id<JavaUtilCollection>) nil_chk(providedCollection)) size];
-    [providedCollections addWithId:providedCollection];
-  }
-  id<JavaUtilSet> providedValues = DaggerInternalDaggerCollections_newHashSetWithExpectedSizeWithInt_(size);
-  for (jint i = 0, c = [individualProviders_ size]; i < c; i++) {
-    [((id<JavaUtilSet>) nil_chk(providedValues)) addWithId:DaggerInternalPreconditions_checkNotNullWithId_([((id<JavaxInjectProvider>) nil_chk([individualProviders_ getWithInt:i])) get])];
-  }
-  for (jint i = 0, c = [providedCollections size]; i < c; i++) {
-    for (id __strong element in nil_chk([providedCollections getWithInt:i])) {
-      [((id<JavaUtilSet>) nil_chk(providedValues)) addWithId:DaggerInternalPreconditions_checkNotNullWithId_(element)];
-    }
-  }
-  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(providedValues);
-}
-
-- (void)dealloc {
-  RELEASE_(individualProviders_);
-  RELEASE_(collectionProviders_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LDaggerInternalFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
-    { NULL, "LDaggerInternalSetFactory_Builder;", 0x9, 1, 2, -1, 3, -1, -1 },
-    { NULL, NULL, 0x2, -1, 4, -1, 5, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 6, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(empty);
-  methods[1].selector = @selector(builderWithInt:withInt:);
-  methods[2].selector = @selector(initWithJavaUtilList:withJavaUtilList:);
-  methods[3].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EMPTY_FACTORY", "LDaggerInternalFactory;", .constantValue.asLong = 0, 0x1a, -1, 7, 8, -1 },
-    { "individualProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
-    { "collectionProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
-  };
-  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>()Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;", "builder", "II", "<T:Ljava/lang/Object;>(II)Ldagger/internal/SetFactory$Builder<TT;>;", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<Ljavax/inject/Provider<TT;>;>;Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Collection<TT;>;>;>;)V", "()Ljava/util/Set<TT;>;", &DaggerInternalSetFactory_EMPTY_FACTORY, "Ldagger/internal/Factory<Ljava/util/Set<Ljava/lang/Object;>;>;", "Ljava/util/List<Ljavax/inject/Provider<TT;>;>;", "Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Collection<TT;>;>;>;", "LDaggerInternalSetFactory_Builder;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSetFactory = { "SetFactory", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 4, 3, -1, 11, -1, 12, -1 };
-  return &_DaggerInternalSetFactory;
-}
-
-+ (void)initialize {
-  if (self == [DaggerInternalSetFactory class]) {
-    JreStrongAssignAndConsume(&DaggerInternalSetFactory_EMPTY_FACTORY, new_DaggerInternalSetFactory_1_init());
-    J2OBJC_SET_INITIALIZED(DaggerInternalSetFactory)
-  }
-}
-
-@end
-
-id<DaggerInternalFactory> DaggerInternalSetFactory_empty() {
-  DaggerInternalSetFactory_initialize();
-  return DaggerInternalSetFactory_EMPTY_FACTORY;
-}
-
-DaggerInternalSetFactory_Builder *DaggerInternalSetFactory_builderWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) {
-  DaggerInternalSetFactory_initialize();
-  return create_DaggerInternalSetFactory_Builder_initWithInt_withInt_(individualProviderSize, collectionProviderSize);
-}
-
-void DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(DaggerInternalSetFactory *self, id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) {
-  NSObject_init(self);
-  JreStrongAssign(&self->individualProviders_, individualProviders);
-  JreStrongAssign(&self->collectionProviders_, collectionProviders);
-}
-
-DaggerInternalSetFactory *new_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactory, initWithJavaUtilList_withJavaUtilList_, individualProviders, collectionProviders)
-}
-
-DaggerInternalSetFactory *create_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> individualProviders, id<JavaUtilList> collectionProviders) {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactory, initWithJavaUtilList_withJavaUtilList_, individualProviders, collectionProviders)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactory)
-
-@implementation DaggerInternalSetFactory_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalSetFactory_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (id<JavaUtilSet>)get {
-  return JavaUtilCollections_emptySet();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 0, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "()Ljava/util/Set<Ljava/lang/Object;>;", "LDaggerInternalSetFactory;", "Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Set<Ljava/lang/Object;>;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSetFactory_1 = { "", "dagger.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, -1, 2, -1 };
-  return &_DaggerInternalSetFactory_1;
-}
-
-@end
-
-void DaggerInternalSetFactory_1_init(DaggerInternalSetFactory_1 *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalSetFactory_1 *new_DaggerInternalSetFactory_1_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactory_1, init)
-}
-
-DaggerInternalSetFactory_1 *create_DaggerInternalSetFactory_1_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactory_1, init)
-}
-
-@implementation DaggerInternalSetFactory_Builder
-
-- (instancetype)initWithInt:(jint)individualProviderSize
-                    withInt:(jint)collectionProviderSize {
-  DaggerInternalSetFactory_Builder_initWithInt_withInt_(self, individualProviderSize, collectionProviderSize);
-  return self;
-}
-
-- (DaggerInternalSetFactory_Builder *)addProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)individualProvider {
-  JreAssert((individualProvider != nil), (@"Codegen error? Null provider"));
-  [((id<JavaUtilList>) nil_chk(individualProviders_)) addWithId:individualProvider];
-  return self;
-}
-
-- (DaggerInternalSetFactory_Builder *)addCollectionProviderWithJavaxInjectProvider:(id<JavaxInjectProvider>)collectionProvider {
-  JreAssert((collectionProvider != nil), (@"Codegen error? Null provider"));
-  [((id<JavaUtilList>) nil_chk(collectionProviders_)) addWithId:collectionProvider];
-  return self;
-}
-
-- (DaggerInternalSetFactory *)build {
-  JreAssert((!DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(individualProviders_)), (@"Codegen error?  Duplicates in the provider list"));
-  JreAssert((!DaggerInternalDaggerCollections_hasDuplicatesWithJavaUtilList_(collectionProviders_)), (@"Codegen error?  Duplicates in the provider list"));
-  return create_DaggerInternalSetFactory_initWithJavaUtilList_withJavaUtilList_(individualProviders_, collectionProviders_);
-}
-
-- (void)dealloc {
-  RELEASE_(individualProviders_);
-  RELEASE_(collectionProviders_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LDaggerInternalSetFactory_Builder;", 0x1, 1, 2, -1, 3, -1, -1 },
-    { NULL, "LDaggerInternalSetFactory_Builder;", 0x1, 4, 2, -1, 5, -1, -1 },
-    { NULL, "LDaggerInternalSetFactory;", 0x1, -1, -1, -1, 6, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithInt:withInt:);
-  methods[1].selector = @selector(addProviderWithJavaxInjectProvider:);
-  methods[2].selector = @selector(addCollectionProviderWithJavaxInjectProvider:);
-  methods[3].selector = @selector(build);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "individualProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
-    { "collectionProviders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
-  };
-  static const void *ptrTable[] = { "II", "addProvider", "LJavaxInjectProvider;", "(Ljavax/inject/Provider<+TT;>;)Ldagger/internal/SetFactory$Builder<TT;>;", "addCollectionProvider", "(Ljavax/inject/Provider<+Ljava/util/Collection<+TT;>;>;)Ldagger/internal/SetFactory$Builder<TT;>;", "()Ldagger/internal/SetFactory<TT;>;", "Ljava/util/List<Ljavax/inject/Provider<TT;>;>;", "Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Collection<TT;>;>;>;", "LDaggerInternalSetFactory;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _DaggerInternalSetFactory_Builder = { "Builder", "dagger.internal", ptrTable, methods, fields, 7, 0x19, 4, 2, 9, -1, -1, 10, -1 };
-  return &_DaggerInternalSetFactory_Builder;
-}
-
-@end
-
-void DaggerInternalSetFactory_Builder_initWithInt_withInt_(DaggerInternalSetFactory_Builder *self, jint individualProviderSize, jint collectionProviderSize) {
-  NSObject_init(self);
-  JreStrongAssign(&self->individualProviders_, DaggerInternalDaggerCollections_presizedListWithInt_(individualProviderSize));
-  JreStrongAssign(&self->collectionProviders_, DaggerInternalDaggerCollections_presizedListWithInt_(collectionProviderSize));
-}
-
-DaggerInternalSetFactory_Builder *new_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactory_Builder, initWithInt_withInt_, individualProviderSize, collectionProviderSize)
-}
-
-DaggerInternalSetFactory_Builder *create_DaggerInternalSetFactory_Builder_initWithInt_withInt_(jint individualProviderSize, jint collectionProviderSize) {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactory_Builder, initWithInt_withInt_, individualProviderSize, collectionProviderSize)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactory_Builder)
diff --git a/core/iostest/daggerframework/main/DaggerInternalSingleCheck.h b/core/iostest/daggerframework/main/DaggerInternalSingleCheck.h
deleted file mode 100644
index e341627d3..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalSingleCheck.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalSingleCheck")
-#ifdef RESTRICT_DaggerInternalSingleCheck
-#define INCLUDE_ALL_DaggerInternalSingleCheck 0
-#else
-#define INCLUDE_ALL_DaggerInternalSingleCheck 1
-#endif
-#undef RESTRICT_DaggerInternalSingleCheck
-
-#if !defined (DaggerInternalSingleCheck_) && (INCLUDE_ALL_DaggerInternalSingleCheck || defined(INCLUDE_DaggerInternalSingleCheck))
-#define DaggerInternalSingleCheck_
-
-#define RESTRICT_JavaxInjectProvider 1
-#define INCLUDE_JavaxInjectProvider 1
-#include "javax/inject/Provider.h"
-
-#define RESTRICT_DaggerLazy 1
-#define INCLUDE_DaggerLazy 1
-#include "DaggerLazy.h"
-
-@protocol DaggerInternalFactory;
-
-@interface DaggerInternalSingleCheck : NSObject < JavaxInjectProvider, DaggerLazy >
-
-#pragma mark Public
-
-- (id)get;
-
-+ (id<JavaxInjectProvider>)providerWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerInternalSingleCheck)
-
-FOUNDATION_EXPORT id<JavaxInjectProvider> DaggerInternalSingleCheck_providerWithDaggerInternalFactory_(id<DaggerInternalFactory> factory);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSingleCheck)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalSingleCheck")
diff --git a/core/iostest/daggerframework/main/DaggerInternalSingleCheck.m b/core/iostest/daggerframework/main/DaggerInternalSingleCheck.m
deleted file mode 100644
index 96e7ba7ba..000000000
--- a/core/iostest/daggerframework/main/DaggerInternalSingleCheck.m
+++ /dev/null
@@ -1,119 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalPreconditions.h"
-#include "DaggerInternalSingleCheck.h"
-#include "J2ObjC_source.h"
-#include "javax/inject/Provider.h"
-
-@interface DaggerInternalSingleCheck () {
- @public
-  volatile_id factory_;
-  volatile_id instance_;
-}
-
-- (instancetype)initWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory;
-
-@end
-
-J2OBJC_VOLATILE_FIELD_SETTER(DaggerInternalSingleCheck, factory_, id<DaggerInternalFactory>)
-J2OBJC_VOLATILE_FIELD_SETTER(DaggerInternalSingleCheck, instance_, id)
-
-inline id DaggerInternalSingleCheck_get_UNINITIALIZED();
-static id DaggerInternalSingleCheck_UNINITIALIZED;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalSingleCheck, UNINITIALIZED, id)
-
-__attribute__((unused)) static void DaggerInternalSingleCheck_initWithDaggerInternalFactory_(DaggerInternalSingleCheck *self, id<DaggerInternalFactory> factory);
-
-__attribute__((unused)) static DaggerInternalSingleCheck *new_DaggerInternalSingleCheck_initWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSingleCheck *create_DaggerInternalSingleCheck_initWithDaggerInternalFactory_(id<DaggerInternalFactory> factory);
-
-J2OBJC_INITIALIZED_DEFN(DaggerInternalSingleCheck)
-
-@implementation DaggerInternalSingleCheck
-
-- (instancetype)initWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory {
-  DaggerInternalSingleCheck_initWithDaggerInternalFactory_(self, factory);
-  return self;
-}
-
-- (id)get {
-  id<DaggerInternalFactory> factoryReference = JreLoadVolatileId(&factory_);
-  if (JreLoadVolatileId(&instance_) == DaggerInternalSingleCheck_UNINITIALIZED) {
-    JreVolatileStrongAssign(&instance_, [((id<DaggerInternalFactory>) nil_chk(factoryReference)) get]);
-    JreVolatileStrongAssign(&factory_, nil);
-  }
-  return JreLoadVolatileId(&instance_);
-}
-
-+ (id<JavaxInjectProvider>)providerWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory {
-  return DaggerInternalSingleCheck_providerWithDaggerInternalFactory_(factory);
-}
-
-- (void)__javaClone:(DaggerInternalSingleCheck *)original {
-  [super __javaClone:original];
-  JreCloneVolatileStrong(&factory_, &original->factory_);
-  JreCloneVolatileStrong(&instance_, &original->instance_);
-}
-
-- (void)dealloc {
-  JreReleaseVolatile(&factory_);
-  JreReleaseVolatile(&instance_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
-    { NULL, "LJavaxInjectProvider;", 0x9, 3, 0, -1, 4, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithDaggerInternalFactory:);
-  methods[1].selector = @selector(get);
-  methods[2].selector = @selector(providerWithDaggerInternalFactory:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "UNINITIALIZED", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
-    { "factory_", "LDaggerInternalFactory;", .constantValue.asLong = 0, 0x42, -1, -1, 6, -1 },
-    { "instance_", "LNSObject;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LDaggerInternalFactory;", "(Ldagger/internal/Factory<TT;>;)V", "()TT;", "provider", "<T:Ljava/lang/Object;>(Ldagger/internal/Factory<TT;>;)Ljavax/inject/Provider<TT;>;", &DaggerInternalSingleCheck_UNINITIALIZED, "Ldagger/internal/Factory<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljavax/inject/Provider<TT;>;Ldagger/Lazy<TT;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSingleCheck = { "SingleCheck", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, -1, -1, 7, -1 };
-  return &_DaggerInternalSingleCheck;
-}
-
-+ (void)initialize {
-  if (self == [DaggerInternalSingleCheck class]) {
-    JreStrongAssignAndConsume(&DaggerInternalSingleCheck_UNINITIALIZED, new_NSObject_init());
-    J2OBJC_SET_INITIALIZED(DaggerInternalSingleCheck)
-  }
-}
-
-@end
-
-void DaggerInternalSingleCheck_initWithDaggerInternalFactory_(DaggerInternalSingleCheck *self, id<DaggerInternalFactory> factory) {
-  NSObject_init(self);
-  JreVolatileStrongAssign(&self->instance_, DaggerInternalSingleCheck_UNINITIALIZED);
-  JreAssert((factory != nil), (@"dagger/internal/SingleCheck.java:34 condition failed: assert factory != null;"));
-  JreVolatileStrongAssign(&self->factory_, factory);
-}
-
-DaggerInternalSingleCheck *new_DaggerInternalSingleCheck_initWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) {
-  J2OBJC_NEW_IMPL(DaggerInternalSingleCheck, initWithDaggerInternalFactory_, factory)
-}
-
-DaggerInternalSingleCheck *create_DaggerInternalSingleCheck_initWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) {
-  J2OBJC_CREATE_IMPL(DaggerInternalSingleCheck, initWithDaggerInternalFactory_, factory)
-}
-
-id<JavaxInjectProvider> DaggerInternalSingleCheck_providerWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) {
-  DaggerInternalSingleCheck_initialize();
-  return create_DaggerInternalSingleCheck_initWithDaggerInternalFactory_(DaggerInternalPreconditions_checkNotNullWithId_(factory));
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSingleCheck)
diff --git a/core/iostest/daggerframework/main/DaggerLazy.h b/core/iostest/daggerframework/main/DaggerLazy.h
deleted file mode 100644
index 66355b57e..000000000
--- a/core/iostest/daggerframework/main/DaggerLazy.h
+++ /dev/null
@@ -1,30 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerLazy")
-#ifdef RESTRICT_DaggerLazy
-#define INCLUDE_ALL_DaggerLazy 0
-#else
-#define INCLUDE_ALL_DaggerLazy 1
-#endif
-#undef RESTRICT_DaggerLazy
-
-#if !defined (DaggerLazy_) && (INCLUDE_ALL_DaggerLazy || defined(INCLUDE_DaggerLazy))
-#define DaggerLazy_
-
-@protocol DaggerLazy < JavaObject >
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerLazy)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerLazy)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerLazy")
diff --git a/core/iostest/daggerframework/main/DaggerLazy.m b/core/iostest/daggerframework/main/DaggerLazy.m
deleted file mode 100644
index 303889d03..000000000
--- a/core/iostest/daggerframework/main/DaggerLazy.m
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerLazy.h"
-#include "J2ObjC_source.h"
-
-@interface DaggerLazy : NSObject
-
-@end
-
-@implementation DaggerLazy
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSObject;", 0x401, -1, -1, -1, 0, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "()TT;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _DaggerLazy = { "Lazy", "dagger", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, 1, -1 };
-  return &_DaggerLazy;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerLazy)
diff --git a/core/iostest/daggerframework/main/DaggerMapKey.h b/core/iostest/daggerframework/main/DaggerMapKey.h
deleted file mode 100644
index 2e4c157ad..000000000
--- a/core/iostest/daggerframework/main/DaggerMapKey.h
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMapKey")
-#ifdef RESTRICT_DaggerMapKey
-#define INCLUDE_ALL_DaggerMapKey 0
-#else
-#define INCLUDE_ALL_DaggerMapKey 1
-#endif
-#undef RESTRICT_DaggerMapKey
-
-#if !defined (DaggerMapKey_) && (INCLUDE_ALL_DaggerMapKey || defined(INCLUDE_DaggerMapKey))
-#define DaggerMapKey_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerMapKey < JavaLangAnnotationAnnotation >
-
-@property (readonly) jboolean unwrapValue;
-
-@end
-
-@interface DaggerMapKey : NSObject < DaggerMapKey > {
- @public
-  jboolean unwrapValue_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMapKey)
-
-FOUNDATION_EXPORT id<DaggerMapKey> create_DaggerMapKey(jboolean unwrapValue);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMapKey)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMapKey")
diff --git a/core/iostest/daggerframework/main/DaggerMapKey.m b/core/iostest/daggerframework/main/DaggerMapKey.m
deleted file mode 100644
index ec6daefc5..000000000
--- a/core/iostest/daggerframework/main/DaggerMapKey.m
+++ /dev/null
@@ -1,62 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMapKey.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerMapKey__Annotations$0();
-
-@implementation DaggerMapKey
-
-@synthesize unwrapValue = unwrapValue_;
-
-+ (jboolean)unwrapValueDefault {
-  return true;
-}
-
-- (IOSClass *)annotationType {
-  return DaggerMapKey_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.MapKey()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(unwrapValue);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "unwrapValue_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { (void *)&DaggerMapKey__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMapKey = { "MapKey", "dagger", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, -1, -1, -1, 0 };
-  return &_DaggerMapKey;
-}
-
-@end
-
-id<DaggerMapKey> create_DaggerMapKey(jboolean unwrapValue) {
-  DaggerMapKey *self = AUTORELEASE([[DaggerMapKey alloc] init]);
-  self->unwrapValue_ = unwrapValue;
-  return self;
-}
-
-IOSObjectArray *DaggerMapKey__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMapKey)
diff --git a/core/iostest/daggerframework/main/DaggerMembersInjector.h b/core/iostest/daggerframework/main/DaggerMembersInjector.h
deleted file mode 100644
index d927b734d..000000000
--- a/core/iostest/daggerframework/main/DaggerMembersInjector.h
+++ /dev/null
@@ -1,30 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMembersInjector")
-#ifdef RESTRICT_DaggerMembersInjector
-#define INCLUDE_ALL_DaggerMembersInjector 0
-#else
-#define INCLUDE_ALL_DaggerMembersInjector 1
-#endif
-#undef RESTRICT_DaggerMembersInjector
-
-#if !defined (DaggerMembersInjector_) && (INCLUDE_ALL_DaggerMembersInjector || defined(INCLUDE_DaggerMembersInjector))
-#define DaggerMembersInjector_
-
-@protocol DaggerMembersInjector < JavaObject >
-
-- (void)injectMembersWithId:(id)instance;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMembersInjector)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMembersInjector)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMembersInjector")
diff --git a/core/iostest/daggerframework/main/DaggerMembersInjector.m b/core/iostest/daggerframework/main/DaggerMembersInjector.m
deleted file mode 100644
index 894bbf35e..000000000
--- a/core/iostest/daggerframework/main/DaggerMembersInjector.m
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMembersInjector.h"
-#include "J2ObjC_source.h"
-
-@interface DaggerMembersInjector : NSObject
-
-@end
-
-@implementation DaggerMembersInjector
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(injectMembersWithId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "injectMembers", "LNSObject;", "(TT;)V", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _DaggerMembersInjector = { "MembersInjector", "dagger", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, 3, -1 };
-  return &_DaggerMembersInjector;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMembersInjector)
diff --git a/core/iostest/daggerframework/main/DaggerModule.h b/core/iostest/daggerframework/main/DaggerModule.h
deleted file mode 100644
index e0c2f4faf..000000000
--- a/core/iostest/daggerframework/main/DaggerModule.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerModule")
-#ifdef RESTRICT_DaggerModule
-#define INCLUDE_ALL_DaggerModule 0
-#else
-#define INCLUDE_ALL_DaggerModule 1
-#endif
-#undef RESTRICT_DaggerModule
-
-#if !defined (DaggerModule_) && (INCLUDE_ALL_DaggerModule || defined(INCLUDE_DaggerModule))
-#define DaggerModule_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-@class IOSObjectArray;
-
-@protocol DaggerModule < JavaLangAnnotationAnnotation >
-
-@property (readonly) IOSObjectArray *includes;
-
-@end
-
-@interface DaggerModule : NSObject < DaggerModule > {
- @public
-  IOSObjectArray *includes_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerModule)
-
-FOUNDATION_EXPORT id<DaggerModule> create_DaggerModule(IOSObjectArray *includes);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerModule)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerModule")
diff --git a/core/iostest/daggerframework/main/DaggerModule.m b/core/iostest/daggerframework/main/DaggerModule.m
deleted file mode 100644
index b265d6344..000000000
--- a/core/iostest/daggerframework/main/DaggerModule.m
+++ /dev/null
@@ -1,66 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerModule.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerModule__Annotations$0();
-
-@implementation DaggerModule
-
-@synthesize includes = includes_;
-
-+ (IOSObjectArray *)includesDefault {
-  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
-}
-
-- (IOSClass *)annotationType {
-  return DaggerModule_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.Module()";
-}
-
-- (void)dealloc {
-  RELEASE_(includes_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(includes);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "includes_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
-  };
-  static const void *ptrTable[] = { "[Ljava/lang/Class<*>;", (void *)&DaggerModule__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerModule = { "Module", "dagger", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, -1, -1, -1, 1 };
-  return &_DaggerModule;
-}
-
-@end
-
-id<DaggerModule> create_DaggerModule(IOSObjectArray *includes) {
-  DaggerModule *self = AUTORELEASE([[DaggerModule alloc] init]);
-  self->includes_ = RETAIN_(includes);
-  return self;
-}
-
-IOSObjectArray *DaggerModule__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerModule)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindings.h b/core/iostest/daggerframework/main/DaggerMultibindings.h
deleted file mode 100644
index 0df07818c..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindings.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindings")
-#ifdef RESTRICT_DaggerMultibindings
-#define INCLUDE_ALL_DaggerMultibindings 0
-#else
-#define INCLUDE_ALL_DaggerMultibindings 1
-#endif
-#undef RESTRICT_DaggerMultibindings
-
-#if !defined (DaggerMultibindings_) && (INCLUDE_ALL_DaggerMultibindings || defined(INCLUDE_DaggerMultibindings))
-#define DaggerMultibindings_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerMultibindings < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindings)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindings)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindings")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindings.m b/core/iostest/daggerframework/main/DaggerMultibindings.m
deleted file mode 100644
index 126a7508d..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindings.m
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMultibindings.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface DaggerMultibindings : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindings__Annotations$0();
-
-@implementation DaggerMultibindings
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerMultibindings__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindings = { "Multibindings", "dagger", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindings;
-}
-
-@end
-
-IOSObjectArray *DaggerMultibindings__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindings)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsClassKey.h b/core/iostest/daggerframework/main/DaggerMultibindingsClassKey.h
deleted file mode 100644
index 333375beb..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsClassKey.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsClassKey")
-#ifdef RESTRICT_DaggerMultibindingsClassKey
-#define INCLUDE_ALL_DaggerMultibindingsClassKey 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsClassKey 1
-#endif
-#undef RESTRICT_DaggerMultibindingsClassKey
-
-#if !defined (DaggerMultibindingsClassKey_) && (INCLUDE_ALL_DaggerMultibindingsClassKey || defined(INCLUDE_DaggerMultibindingsClassKey))
-#define DaggerMultibindingsClassKey_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerMultibindingsClassKey < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsClassKey)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsClassKey)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsClassKey")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsClassKey.m b/core/iostest/daggerframework/main/DaggerMultibindingsClassKey.m
deleted file mode 100644
index 632be769f..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsClassKey.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMapKey.h"
-#include "DaggerMultibindingsClassKey.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface DaggerMultibindingsClassKey : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsClassKey__Annotations$0();
-
-@implementation DaggerMultibindingsClassKey
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsClassKey__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsClassKey = { "ClassKey", "dagger.multibindings", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsClassKey;
-}
-
-@end
-
-IOSObjectArray *DaggerMultibindingsClassKey__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_DaggerMapKey(true) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsClassKey)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsElementsIntoSet.h b/core/iostest/daggerframework/main/DaggerMultibindingsElementsIntoSet.h
deleted file mode 100644
index 774fdcb71..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsElementsIntoSet.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsElementsIntoSet")
-#ifdef RESTRICT_DaggerMultibindingsElementsIntoSet
-#define INCLUDE_ALL_DaggerMultibindingsElementsIntoSet 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsElementsIntoSet 1
-#endif
-#undef RESTRICT_DaggerMultibindingsElementsIntoSet
-
-#if !defined (DaggerMultibindingsElementsIntoSet_) && (INCLUDE_ALL_DaggerMultibindingsElementsIntoSet || defined(INCLUDE_DaggerMultibindingsElementsIntoSet))
-#define DaggerMultibindingsElementsIntoSet_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerMultibindingsElementsIntoSet < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface DaggerMultibindingsElementsIntoSet : NSObject < DaggerMultibindingsElementsIntoSet >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsElementsIntoSet)
-
-FOUNDATION_EXPORT id<DaggerMultibindingsElementsIntoSet> create_DaggerMultibindingsElementsIntoSet();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsElementsIntoSet)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsElementsIntoSet")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsElementsIntoSet.m b/core/iostest/daggerframework/main/DaggerMultibindingsElementsIntoSet.m
deleted file mode 100644
index dfaaae50f..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsElementsIntoSet.m
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMultibindingsElementsIntoSet.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsElementsIntoSet__Annotations$0();
-
-@implementation DaggerMultibindingsElementsIntoSet
-
-- (IOSClass *)annotationType {
-  return DaggerMultibindingsElementsIntoSet_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.multibindings.ElementsIntoSet()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsElementsIntoSet__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsElementsIntoSet = { "ElementsIntoSet", "dagger.multibindings", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsElementsIntoSet;
-}
-
-@end
-
-id<DaggerMultibindingsElementsIntoSet> create_DaggerMultibindingsElementsIntoSet() {
-  DaggerMultibindingsElementsIntoSet *self = AUTORELEASE([[DaggerMultibindingsElementsIntoSet alloc] init]);
-  return self;
-}
-
-IOSObjectArray *DaggerMultibindingsElementsIntoSet__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsElementsIntoSet)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsIntKey.h b/core/iostest/daggerframework/main/DaggerMultibindingsIntKey.h
deleted file mode 100644
index 57f34203b..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsIntKey.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsIntKey")
-#ifdef RESTRICT_DaggerMultibindingsIntKey
-#define INCLUDE_ALL_DaggerMultibindingsIntKey 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsIntKey 1
-#endif
-#undef RESTRICT_DaggerMultibindingsIntKey
-
-#if !defined (DaggerMultibindingsIntKey_) && (INCLUDE_ALL_DaggerMultibindingsIntKey || defined(INCLUDE_DaggerMultibindingsIntKey))
-#define DaggerMultibindingsIntKey_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerMultibindingsIntKey < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsIntKey)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsIntKey)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsIntKey")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsIntKey.m b/core/iostest/daggerframework/main/DaggerMultibindingsIntKey.m
deleted file mode 100644
index 479e52afc..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsIntKey.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMapKey.h"
-#include "DaggerMultibindingsIntKey.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface DaggerMultibindingsIntKey : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsIntKey__Annotations$0();
-
-@implementation DaggerMultibindingsIntKey
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsIntKey__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsIntKey = { "IntKey", "dagger.multibindings", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsIntKey;
-}
-
-@end
-
-IOSObjectArray *DaggerMultibindingsIntKey__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_DaggerMapKey(true) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsIntKey)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsIntoMap.h b/core/iostest/daggerframework/main/DaggerMultibindingsIntoMap.h
deleted file mode 100644
index abc0ab548..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsIntoMap.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsIntoMap")
-#ifdef RESTRICT_DaggerMultibindingsIntoMap
-#define INCLUDE_ALL_DaggerMultibindingsIntoMap 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsIntoMap 1
-#endif
-#undef RESTRICT_DaggerMultibindingsIntoMap
-
-#if !defined (DaggerMultibindingsIntoMap_) && (INCLUDE_ALL_DaggerMultibindingsIntoMap || defined(INCLUDE_DaggerMultibindingsIntoMap))
-#define DaggerMultibindingsIntoMap_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerMultibindingsIntoMap < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface DaggerMultibindingsIntoMap : NSObject < DaggerMultibindingsIntoMap >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsIntoMap)
-
-FOUNDATION_EXPORT id<DaggerMultibindingsIntoMap> create_DaggerMultibindingsIntoMap();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsIntoMap)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsIntoMap")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsIntoMap.m b/core/iostest/daggerframework/main/DaggerMultibindingsIntoMap.m
deleted file mode 100644
index 1fab21928..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsIntoMap.m
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMultibindingsIntoMap.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsIntoMap__Annotations$0();
-
-@implementation DaggerMultibindingsIntoMap
-
-- (IOSClass *)annotationType {
-  return DaggerMultibindingsIntoMap_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.multibindings.IntoMap()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsIntoMap__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsIntoMap = { "IntoMap", "dagger.multibindings", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsIntoMap;
-}
-
-@end
-
-id<DaggerMultibindingsIntoMap> create_DaggerMultibindingsIntoMap() {
-  DaggerMultibindingsIntoMap *self = AUTORELEASE([[DaggerMultibindingsIntoMap alloc] init]);
-  return self;
-}
-
-IOSObjectArray *DaggerMultibindingsIntoMap__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsIntoMap)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsIntoSet.h b/core/iostest/daggerframework/main/DaggerMultibindingsIntoSet.h
deleted file mode 100644
index a5aa24c3e..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsIntoSet.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsIntoSet")
-#ifdef RESTRICT_DaggerMultibindingsIntoSet
-#define INCLUDE_ALL_DaggerMultibindingsIntoSet 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsIntoSet 1
-#endif
-#undef RESTRICT_DaggerMultibindingsIntoSet
-
-#if !defined (DaggerMultibindingsIntoSet_) && (INCLUDE_ALL_DaggerMultibindingsIntoSet || defined(INCLUDE_DaggerMultibindingsIntoSet))
-#define DaggerMultibindingsIntoSet_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerMultibindingsIntoSet < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface DaggerMultibindingsIntoSet : NSObject < DaggerMultibindingsIntoSet >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsIntoSet)
-
-FOUNDATION_EXPORT id<DaggerMultibindingsIntoSet> create_DaggerMultibindingsIntoSet();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsIntoSet)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsIntoSet")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsIntoSet.m b/core/iostest/daggerframework/main/DaggerMultibindingsIntoSet.m
deleted file mode 100644
index 673af2179..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsIntoSet.m
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMultibindingsIntoSet.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsIntoSet__Annotations$0();
-
-@implementation DaggerMultibindingsIntoSet
-
-- (IOSClass *)annotationType {
-  return DaggerMultibindingsIntoSet_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.multibindings.IntoSet()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsIntoSet__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsIntoSet = { "IntoSet", "dagger.multibindings", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsIntoSet;
-}
-
-@end
-
-id<DaggerMultibindingsIntoSet> create_DaggerMultibindingsIntoSet() {
-  DaggerMultibindingsIntoSet *self = AUTORELEASE([[DaggerMultibindingsIntoSet alloc] init]);
-  return self;
-}
-
-IOSObjectArray *DaggerMultibindingsIntoSet__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsIntoSet)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsLongKey.h b/core/iostest/daggerframework/main/DaggerMultibindingsLongKey.h
deleted file mode 100644
index de0b1cba0..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsLongKey.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsLongKey")
-#ifdef RESTRICT_DaggerMultibindingsLongKey
-#define INCLUDE_ALL_DaggerMultibindingsLongKey 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsLongKey 1
-#endif
-#undef RESTRICT_DaggerMultibindingsLongKey
-
-#if !defined (DaggerMultibindingsLongKey_) && (INCLUDE_ALL_DaggerMultibindingsLongKey || defined(INCLUDE_DaggerMultibindingsLongKey))
-#define DaggerMultibindingsLongKey_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerMultibindingsLongKey < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsLongKey)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsLongKey)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsLongKey")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsLongKey.m b/core/iostest/daggerframework/main/DaggerMultibindingsLongKey.m
deleted file mode 100644
index c98c87238..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsLongKey.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMapKey.h"
-#include "DaggerMultibindingsLongKey.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface DaggerMultibindingsLongKey : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsLongKey__Annotations$0();
-
-@implementation DaggerMultibindingsLongKey
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsLongKey__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsLongKey = { "LongKey", "dagger.multibindings", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsLongKey;
-}
-
-@end
-
-IOSObjectArray *DaggerMultibindingsLongKey__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_DaggerMapKey(true) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsLongKey)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsMultibinds.h b/core/iostest/daggerframework/main/DaggerMultibindingsMultibinds.h
deleted file mode 100644
index 970e20030..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsMultibinds.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsMultibinds")
-#ifdef RESTRICT_DaggerMultibindingsMultibinds
-#define INCLUDE_ALL_DaggerMultibindingsMultibinds 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsMultibinds 1
-#endif
-#undef RESTRICT_DaggerMultibindingsMultibinds
-
-#if !defined (DaggerMultibindingsMultibinds_) && (INCLUDE_ALL_DaggerMultibindingsMultibinds || defined(INCLUDE_DaggerMultibindingsMultibinds))
-#define DaggerMultibindingsMultibinds_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerMultibindingsMultibinds < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsMultibinds)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsMultibinds)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsMultibinds")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsMultibinds.m b/core/iostest/daggerframework/main/DaggerMultibindingsMultibinds.m
deleted file mode 100644
index 75286d0e4..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsMultibinds.m
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMultibindingsMultibinds.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface DaggerMultibindingsMultibinds : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsMultibinds__Annotations$0();
-
-@implementation DaggerMultibindingsMultibinds
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsMultibinds__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsMultibinds = { "Multibinds", "dagger.multibindings", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsMultibinds;
-}
-
-@end
-
-IOSObjectArray *DaggerMultibindingsMultibinds__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsMultibinds)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsStringKey.h b/core/iostest/daggerframework/main/DaggerMultibindingsStringKey.h
deleted file mode 100644
index fd0e44d21..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsStringKey.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingsStringKey")
-#ifdef RESTRICT_DaggerMultibindingsStringKey
-#define INCLUDE_ALL_DaggerMultibindingsStringKey 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingsStringKey 1
-#endif
-#undef RESTRICT_DaggerMultibindingsStringKey
-
-#if !defined (DaggerMultibindingsStringKey_) && (INCLUDE_ALL_DaggerMultibindingsStringKey || defined(INCLUDE_DaggerMultibindingsStringKey))
-#define DaggerMultibindingsStringKey_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerMultibindingsStringKey < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerMultibindingsStringKey)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerMultibindingsStringKey)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingsStringKey")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingsStringKey.m b/core/iostest/daggerframework/main/DaggerMultibindingsStringKey.m
deleted file mode 100644
index ad059ed7a..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingsStringKey.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMapKey.h"
-#include "DaggerMultibindingsStringKey.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface DaggerMultibindingsStringKey : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerMultibindingsStringKey__Annotations$0();
-
-@implementation DaggerMultibindingsStringKey
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&DaggerMultibindingsStringKey__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerMultibindingsStringKey = { "StringKey", "dagger.multibindings", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerMultibindingsStringKey;
-}
-
-@end
-
-IOSObjectArray *DaggerMultibindingsStringKey__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_DaggerMapKey(true) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerMultibindingsStringKey)
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingspackage-info.h b/core/iostest/daggerframework/main/DaggerMultibindingspackage-info.h
deleted file mode 100644
index a138fc69d..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingspackage-info.h
+++ /dev/null
@@ -1,15 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerMultibindingspackage_info")
-#ifdef RESTRICT_DaggerMultibindingspackage_info
-#define INCLUDE_ALL_DaggerMultibindingspackage_info 0
-#else
-#define INCLUDE_ALL_DaggerMultibindingspackage_info 1
-#endif
-#undef RESTRICT_DaggerMultibindingspackage_info
-
-#pragma pop_macro("INCLUDE_ALL_DaggerMultibindingspackage_info")
diff --git a/core/iostest/daggerframework/main/DaggerMultibindingspackage-info.m b/core/iostest/daggerframework/main/DaggerMultibindingspackage-info.m
deleted file mode 100644
index 75a45592a..000000000
--- a/core/iostest/daggerframework/main/DaggerMultibindingspackage-info.m
+++ /dev/null
@@ -1,6 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerMultibindingspackage-info.h"
-#include "J2ObjC_source.h"
diff --git a/core/iostest/daggerframework/main/DaggerProvides.h b/core/iostest/daggerframework/main/DaggerProvides.h
deleted file mode 100644
index ae322d4ca..000000000
--- a/core/iostest/daggerframework/main/DaggerProvides.h
+++ /dev/null
@@ -1,103 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerProvides")
-#ifdef RESTRICT_DaggerProvides
-#define INCLUDE_ALL_DaggerProvides 0
-#else
-#define INCLUDE_ALL_DaggerProvides 1
-#endif
-#undef RESTRICT_DaggerProvides
-
-#if !defined (DaggerProvides_) && (INCLUDE_ALL_DaggerProvides || defined(INCLUDE_DaggerProvides))
-#define DaggerProvides_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class DaggerProvides_Type;
-@class IOSClass;
-
-@protocol DaggerProvides < JavaLangAnnotationAnnotation >
-
-@property (readonly) DaggerProvides_Type *type;
-
-@end
-
-@interface DaggerProvides : NSObject < DaggerProvides > {
- @public
-  DaggerProvides_Type *type_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerProvides)
-
-FOUNDATION_EXPORT id<DaggerProvides> create_DaggerProvides(DaggerProvides_Type *type);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerProvides)
-
-#endif
-
-#if !defined (DaggerProvides_Type_) && (INCLUDE_ALL_DaggerProvides || defined(INCLUDE_DaggerProvides_Type))
-#define DaggerProvides_Type_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, DaggerProvides_Type_Enum) {
-  DaggerProvides_Type_Enum_UNIQUE = 0,
-  DaggerProvides_Type_Enum_SET = 1,
-  DaggerProvides_Type_Enum_SET_VALUES = 2,
-  DaggerProvides_Type_Enum_MAP = 3,
-};
-
-@interface DaggerProvides_Type : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (DaggerProvides_Type *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerProvides_Type)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT DaggerProvides_Type *DaggerProvides_Type_values_[];
-
-inline DaggerProvides_Type *DaggerProvides_Type_get_UNIQUE();
-J2OBJC_ENUM_CONSTANT(DaggerProvides_Type, UNIQUE)
-
-inline DaggerProvides_Type *DaggerProvides_Type_get_SET();
-J2OBJC_ENUM_CONSTANT(DaggerProvides_Type, SET)
-
-inline DaggerProvides_Type *DaggerProvides_Type_get_SET_VALUES();
-J2OBJC_ENUM_CONSTANT(DaggerProvides_Type, SET_VALUES)
-
-inline DaggerProvides_Type *DaggerProvides_Type_get_MAP();
-J2OBJC_ENUM_CONSTANT(DaggerProvides_Type, MAP)
-
-FOUNDATION_EXPORT IOSObjectArray *DaggerProvides_Type_values();
-
-FOUNDATION_EXPORT DaggerProvides_Type *DaggerProvides_Type_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT DaggerProvides_Type *DaggerProvides_Type_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerProvides_Type)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerProvides")
diff --git a/core/iostest/daggerframework/main/DaggerProvides.m b/core/iostest/daggerframework/main/DaggerProvides.m
deleted file mode 100644
index bfb1b5bcd..000000000
--- a/core/iostest/daggerframework/main/DaggerProvides.m
+++ /dev/null
@@ -1,160 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerProvides.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerProvides__Annotations$0();
-
-__attribute__((unused)) static void DaggerProvides_Type_initWithNSString_withInt_(DaggerProvides_Type *self, NSString *__name, jint __ordinal);
-
-@implementation DaggerProvides
-
-@synthesize type = type_;
-
-+ (DaggerProvides_Type *)typeDefault {
-  return JreLoadEnum(DaggerProvides_Type, UNIQUE);
-}
-
-- (IOSClass *)annotationType {
-  return DaggerProvides_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.Provides()";
-}
-
-- (void)dealloc {
-  RELEASE_(type_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LDaggerProvides_Type;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(type);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "type_", "LDaggerProvides_Type;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LDaggerProvides_Type;", (void *)&DaggerProvides__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerProvides = { "Provides", "dagger", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, 0, -1, -1, 1 };
-  return &_DaggerProvides;
-}
-
-@end
-
-id<DaggerProvides> create_DaggerProvides(DaggerProvides_Type *type) {
-  DaggerProvides *self = AUTORELEASE([[DaggerProvides alloc] init]);
-  self->type_ = RETAIN_(type);
-  return self;
-}
-
-IOSObjectArray *DaggerProvides__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerProvides)
-
-J2OBJC_INITIALIZED_DEFN(DaggerProvides_Type)
-
-DaggerProvides_Type *DaggerProvides_Type_values_[4];
-
-@implementation DaggerProvides_Type
-
-+ (IOSObjectArray *)values {
-  return DaggerProvides_Type_values();
-}
-
-+ (DaggerProvides_Type *)valueOfWithNSString:(NSString *)name {
-  return DaggerProvides_Type_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LDaggerProvides_Type;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LDaggerProvides_Type;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "UNIQUE", "LDaggerProvides_Type;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "SET", "LDaggerProvides_Type;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-    { "SET_VALUES", "LDaggerProvides_Type;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
-    { "MAP", "LDaggerProvides_Type;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(DaggerProvides_Type, UNIQUE), &JreEnum(DaggerProvides_Type, SET), &JreEnum(DaggerProvides_Type, SET_VALUES), &JreEnum(DaggerProvides_Type, MAP), "LDaggerProvides;", "Ljava/lang/Enum<Ldagger/Provides$Type;>;" };
-  static const J2ObjcClassInfo _DaggerProvides_Type = { "Type", "dagger", ptrTable, methods, fields, 7, 0x4019, 2, 4, 6, -1, -1, 7, -1 };
-  return &_DaggerProvides_Type;
-}
-
-+ (void)initialize {
-  if (self == [DaggerProvides_Type class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 4 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"UNIQUE", @"SET", @"SET_VALUES", @"MAP",
-    };
-    for (jint i = 0; i < 4; i++) {
-      (DaggerProvides_Type_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      DaggerProvides_Type_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(DaggerProvides_Type)
-  }
-}
-
-@end
-
-void DaggerProvides_Type_initWithNSString_withInt_(DaggerProvides_Type *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *DaggerProvides_Type_values() {
-  DaggerProvides_Type_initialize();
-  return [IOSObjectArray arrayWithObjects:DaggerProvides_Type_values_ count:4 type:DaggerProvides_Type_class_()];
-}
-
-DaggerProvides_Type *DaggerProvides_Type_valueOfWithNSString_(NSString *name) {
-  DaggerProvides_Type_initialize();
-  for (int i = 0; i < 4; i++) {
-    DaggerProvides_Type *e = DaggerProvides_Type_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-DaggerProvides_Type *DaggerProvides_Type_fromOrdinal(NSUInteger ordinal) {
-  DaggerProvides_Type_initialize();
-  if (ordinal >= 4) {
-    return nil;
-  }
-  return DaggerProvides_Type_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerProvides_Type)
diff --git a/core/iostest/daggerframework/main/DaggerReusable.h b/core/iostest/daggerframework/main/DaggerReusable.h
deleted file mode 100644
index c7a3d43ac..000000000
--- a/core/iostest/daggerframework/main/DaggerReusable.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerReusable")
-#ifdef RESTRICT_DaggerReusable
-#define INCLUDE_ALL_DaggerReusable 0
-#else
-#define INCLUDE_ALL_DaggerReusable 1
-#endif
-#undef RESTRICT_DaggerReusable
-
-#if !defined (DaggerReusable_) && (INCLUDE_ALL_DaggerReusable || defined(INCLUDE_DaggerReusable))
-#define DaggerReusable_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol DaggerReusable < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface DaggerReusable : NSObject < DaggerReusable >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerReusable)
-
-FOUNDATION_EXPORT id<DaggerReusable> create_DaggerReusable();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerReusable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerReusable")
diff --git a/core/iostest/daggerframework/main/DaggerReusable.m b/core/iostest/daggerframework/main/DaggerReusable.m
deleted file mode 100644
index cb95619fd..000000000
--- a/core/iostest/daggerframework/main/DaggerReusable.m
+++ /dev/null
@@ -1,44 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerReusable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "javax/inject/Scope.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerReusable__Annotations$0();
-
-@implementation DaggerReusable
-
-- (IOSClass *)annotationType {
-  return DaggerReusable_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.Reusable()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&DaggerReusable__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerReusable = { "Reusable", "dagger", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_DaggerReusable;
-}
-
-@end
-
-id<DaggerReusable> create_DaggerReusable() {
-  DaggerReusable *self = AUTORELEASE([[DaggerReusable alloc] init]);
-  return self;
-}
-
-IOSObjectArray *DaggerReusable__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaxInjectScope() } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerReusable)
diff --git a/core/iostest/daggerframework/main/DaggerSubcomponent.h b/core/iostest/daggerframework/main/DaggerSubcomponent.h
deleted file mode 100644
index e409dfcda..000000000
--- a/core/iostest/daggerframework/main/DaggerSubcomponent.h
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerSubcomponent")
-#ifdef RESTRICT_DaggerSubcomponent
-#define INCLUDE_ALL_DaggerSubcomponent 0
-#else
-#define INCLUDE_ALL_DaggerSubcomponent 1
-#endif
-#undef RESTRICT_DaggerSubcomponent
-
-#if !defined (DaggerSubcomponent_) && (INCLUDE_ALL_DaggerSubcomponent || defined(INCLUDE_DaggerSubcomponent))
-#define DaggerSubcomponent_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-@class IOSObjectArray;
-
-@protocol DaggerSubcomponent < JavaLangAnnotationAnnotation >
-
-@property (readonly) IOSObjectArray *modules;
-
-@end
-
-@interface DaggerSubcomponent : NSObject < DaggerSubcomponent > {
- @public
-  IOSObjectArray *modules_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerSubcomponent)
-
-FOUNDATION_EXPORT id<DaggerSubcomponent> create_DaggerSubcomponent(IOSObjectArray *modules);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerSubcomponent)
-
-#endif
-
-#if !defined (DaggerSubcomponent_Builder_) && (INCLUDE_ALL_DaggerSubcomponent || defined(INCLUDE_DaggerSubcomponent_Builder))
-#define DaggerSubcomponent_Builder_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol DaggerSubcomponent_Builder < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerSubcomponent_Builder)
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerSubcomponent_Builder)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerSubcomponent")
diff --git a/core/iostest/daggerframework/main/DaggerSubcomponent.m b/core/iostest/daggerframework/main/DaggerSubcomponent.m
deleted file mode 100644
index 794cb3652..000000000
--- a/core/iostest/daggerframework/main/DaggerSubcomponent.m
+++ /dev/null
@@ -1,89 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "DaggerSubcomponent.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerSubcomponent__Annotations$0();
-
-@interface DaggerSubcomponent_Builder : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *DaggerSubcomponent_Builder__Annotations$0();
-
-@implementation DaggerSubcomponent
-
-@synthesize modules = modules_;
-
-+ (IOSObjectArray *)modulesDefault {
-  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
-}
-
-- (IOSClass *)annotationType {
-  return DaggerSubcomponent_class_();
-}
-
-- (NSString *)description {
-  return @"@dagger.Subcomponent()";
-}
-
-- (void)dealloc {
-  RELEASE_(modules_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(modules);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "modules_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
-  };
-  static const void *ptrTable[] = { "[Ljava/lang/Class<*>;", "LDaggerSubcomponent_Builder;", (void *)&DaggerSubcomponent__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerSubcomponent = { "Subcomponent", "dagger", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, 1, -1, -1, 2 };
-  return &_DaggerSubcomponent;
-}
-
-@end
-
-id<DaggerSubcomponent> create_DaggerSubcomponent(IOSObjectArray *modules) {
-  DaggerSubcomponent *self = AUTORELEASE([[DaggerSubcomponent alloc] init]);
-  self->modules_ = RETAIN_(modules);
-  return self;
-}
-
-IOSObjectArray *DaggerSubcomponent__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationDocumented() } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerSubcomponent)
-
-@implementation DaggerSubcomponent_Builder
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { "LDaggerSubcomponent;", (void *)&DaggerSubcomponent_Builder__Annotations$0 };
-  static const J2ObjcClassInfo _DaggerSubcomponent_Builder = { "Builder", "dagger", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, 0, -1, -1, -1, 1 };
-  return &_DaggerSubcomponent_Builder;
-}
-
-@end
-
-IOSObjectArray *DaggerSubcomponent_Builder__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationDocumented() } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerSubcomponent_Builder)
diff --git a/core/iostest/daggerframework/main/Daggerpackage-info.h b/core/iostest/daggerframework/main/Daggerpackage-info.h
deleted file mode 100644
index 234ff5160..000000000
--- a/core/iostest/daggerframework/main/Daggerpackage-info.h
+++ /dev/null
@@ -1,15 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_Daggerpackage_info")
-#ifdef RESTRICT_Daggerpackage_info
-#define INCLUDE_ALL_Daggerpackage_info 0
-#else
-#define INCLUDE_ALL_Daggerpackage_info 1
-#endif
-#undef RESTRICT_Daggerpackage_info
-
-#pragma pop_macro("INCLUDE_ALL_Daggerpackage_info")
diff --git a/core/iostest/daggerframework/main/Daggerpackage-info.m b/core/iostest/daggerframework/main/Daggerpackage-info.m
deleted file mode 100644
index 78d19731c..000000000
--- a/core/iostest/daggerframework/main/Daggerpackage-info.m
+++ /dev/null
@@ -1,6 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "Daggerpackage-info.h"
-#include "J2ObjC_source.h"
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNonNull.h b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNonNull.h
deleted file mode 100644
index bbc0233d5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNonNull.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAnnotationNonNull")
-#ifdef RESTRICT_AndroidAnnotationNonNull
-#define INCLUDE_ALL_AndroidAnnotationNonNull 0
-#else
-#define INCLUDE_ALL_AndroidAnnotationNonNull 1
-#endif
-#undef RESTRICT_AndroidAnnotationNonNull
-
-#if !defined (AndroidAnnotationNonNull_) && (INCLUDE_ALL_AndroidAnnotationNonNull || defined(INCLUDE_AndroidAnnotationNonNull))
-#define AndroidAnnotationNonNull_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidAnnotationNonNull < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAnnotationNonNull)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAnnotationNonNull)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAnnotationNonNull")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNonNull.m b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNonNull.m
deleted file mode 100644
index 3c60834c9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNonNull.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAnnotationNonNull.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidAnnotationNonNull : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidAnnotationNonNull__Annotations$0();
-
-@implementation AndroidAnnotationNonNull
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&AndroidAnnotationNonNull__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidAnnotationNonNull = { "NonNull", "android.annotation", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidAnnotationNonNull;
-}
-
-@end
-
-IOSObjectArray *AndroidAnnotationNonNull__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER), JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:3 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidAnnotationNonNull)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNullable.h b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNullable.h
deleted file mode 100644
index af169a341..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNullable.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAnnotationNullable")
-#ifdef RESTRICT_AndroidAnnotationNullable
-#define INCLUDE_ALL_AndroidAnnotationNullable 0
-#else
-#define INCLUDE_ALL_AndroidAnnotationNullable 1
-#endif
-#undef RESTRICT_AndroidAnnotationNullable
-
-#if !defined (AndroidAnnotationNullable_) && (INCLUDE_ALL_AndroidAnnotationNullable || defined(INCLUDE_AndroidAnnotationNullable))
-#define AndroidAnnotationNullable_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidAnnotationNullable < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAnnotationNullable)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAnnotationNullable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAnnotationNullable")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNullable.m b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNullable.m
deleted file mode 100644
index 18d86483f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationNullable.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAnnotationNullable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidAnnotationNullable : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidAnnotationNullable__Annotations$0();
-
-@implementation AndroidAnnotationNullable
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&AndroidAnnotationNullable__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidAnnotationNullable = { "Nullable", "android.annotation", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidAnnotationNullable;
-}
-
-@end
-
-IOSObjectArray *AndroidAnnotationNullable__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER), JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:3 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidAnnotationNullable)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationSuppressLint.h b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationSuppressLint.h
deleted file mode 100644
index 9b6133185..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationSuppressLint.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAnnotationSuppressLint")
-#ifdef RESTRICT_AndroidAnnotationSuppressLint
-#define INCLUDE_ALL_AndroidAnnotationSuppressLint 0
-#else
-#define INCLUDE_ALL_AndroidAnnotationSuppressLint 1
-#endif
-#undef RESTRICT_AndroidAnnotationSuppressLint
-
-#if !defined (AndroidAnnotationSuppressLint_) && (INCLUDE_ALL_AndroidAnnotationSuppressLint || defined(INCLUDE_AndroidAnnotationSuppressLint))
-#define AndroidAnnotationSuppressLint_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol AndroidAnnotationSuppressLint < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAnnotationSuppressLint)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAnnotationSuppressLint)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAnnotationSuppressLint")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationSuppressLint.m b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationSuppressLint.m
deleted file mode 100644
index 581ad5876..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationSuppressLint.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAnnotationSuppressLint.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidAnnotationSuppressLint : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidAnnotationSuppressLint__Annotations$0();
-
-@implementation AndroidAnnotationSuppressLint
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&AndroidAnnotationSuppressLint__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidAnnotationSuppressLint = { "SuppressLint", "android.annotation", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidAnnotationSuppressLint;
-}
-
-@end
-
-IOSObjectArray *AndroidAnnotationSuppressLint__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER), JreLoadEnum(JavaLangAnnotationElementType, CONSTRUCTOR), JreLoadEnum(JavaLangAnnotationElementType, LOCAL_VARIABLE) } count:6 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidAnnotationSuppressLint)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationTargetApi.h b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationTargetApi.h
deleted file mode 100644
index 414c0454f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationTargetApi.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAnnotationTargetApi")
-#ifdef RESTRICT_AndroidAnnotationTargetApi
-#define INCLUDE_ALL_AndroidAnnotationTargetApi 0
-#else
-#define INCLUDE_ALL_AndroidAnnotationTargetApi 1
-#endif
-#undef RESTRICT_AndroidAnnotationTargetApi
-
-#if !defined (AndroidAnnotationTargetApi_) && (INCLUDE_ALL_AndroidAnnotationTargetApi || defined(INCLUDE_AndroidAnnotationTargetApi))
-#define AndroidAnnotationTargetApi_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidAnnotationTargetApi < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAnnotationTargetApi)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAnnotationTargetApi)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAnnotationTargetApi")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationTargetApi.m b/core/iostest/daggerframework/main/androidbase/AndroidAnnotationTargetApi.m
deleted file mode 100644
index 40572a8ba..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAnnotationTargetApi.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAnnotationTargetApi.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidAnnotationTargetApi : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidAnnotationTargetApi__Annotations$0();
-
-@implementation AndroidAnnotationTargetApi
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&AndroidAnnotationTargetApi__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidAnnotationTargetApi = { "TargetApi", "android.annotation", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidAnnotationTargetApi;
-}
-
-@end
-
-IOSObjectArray *AndroidAnnotationTargetApi__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, CONSTRUCTOR) } count:3 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidAnnotationTargetApi)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAppApplication.h b/core/iostest/daggerframework/main/androidbase/AndroidAppApplication.h
deleted file mode 100644
index f3688f588..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAppApplication.h
+++ /dev/null
@@ -1,38 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAppApplication")
-#ifdef RESTRICT_AndroidAppApplication
-#define INCLUDE_ALL_AndroidAppApplication 0
-#else
-#define INCLUDE_ALL_AndroidAppApplication 1
-#endif
-#undef RESTRICT_AndroidAppApplication
-
-#if !defined (AndroidAppApplication_) && (INCLUDE_ALL_AndroidAppApplication || defined(INCLUDE_AndroidAppApplication))
-#define AndroidAppApplication_
-
-#define RESTRICT_AndroidContentContext 1
-#define INCLUDE_AndroidContentContext 1
-#include "AndroidContentContext.h"
-
-@interface AndroidAppApplication : AndroidContentContext
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppApplication)
-
-FOUNDATION_EXPORT void AndroidAppApplication_init(AndroidAppApplication *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAppApplication)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAppApplication")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAppApplication.m b/core/iostest/daggerframework/main/androidbase/AndroidAppApplication.m
deleted file mode 100644
index 9a2a80c39..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAppApplication.m
+++ /dev/null
@@ -1,36 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppApplication.h"
-#include "AndroidContentContext.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidAppApplication
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidAppApplication_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _AndroidAppApplication = { "Application", "android.app", NULL, methods, NULL, 7, 0x401, 1, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidAppApplication;
-}
-
-@end
-
-void AndroidAppApplication_init(AndroidAppApplication *self) {
-  AndroidContentContext_init(self);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppApplication)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAppQueuedWork.h b/core/iostest/daggerframework/main/androidbase/AndroidAppQueuedWork.h
deleted file mode 100644
index 56f5af2bb..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAppQueuedWork.h
+++ /dev/null
@@ -1,57 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAppQueuedWork")
-#ifdef RESTRICT_AndroidAppQueuedWork
-#define INCLUDE_ALL_AndroidAppQueuedWork 0
-#else
-#define INCLUDE_ALL_AndroidAppQueuedWork 1
-#endif
-#undef RESTRICT_AndroidAppQueuedWork
-
-#if !defined (AndroidAppQueuedWork_) && (INCLUDE_ALL_AndroidAppQueuedWork || defined(INCLUDE_AndroidAppQueuedWork))
-#define AndroidAppQueuedWork_
-
-@protocol JavaLangRunnable;
-@protocol JavaUtilConcurrentExecutorService;
-
-@interface AndroidAppQueuedWork : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (void)addWithJavaLangRunnable:(id<JavaLangRunnable>)finisher;
-
-+ (void)removeWithJavaLangRunnable:(id<JavaLangRunnable>)finisher;
-
-+ (id<JavaUtilConcurrentExecutorService>)singleThreadExecutor;
-
-+ (void)waitToFinish;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidAppQueuedWork)
-
-FOUNDATION_EXPORT void AndroidAppQueuedWork_init(AndroidAppQueuedWork *self);
-
-FOUNDATION_EXPORT AndroidAppQueuedWork *new_AndroidAppQueuedWork_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidAppQueuedWork *create_AndroidAppQueuedWork_init();
-
-FOUNDATION_EXPORT id<JavaUtilConcurrentExecutorService> AndroidAppQueuedWork_singleThreadExecutor();
-
-FOUNDATION_EXPORT void AndroidAppQueuedWork_addWithJavaLangRunnable_(id<JavaLangRunnable> finisher);
-
-FOUNDATION_EXPORT void AndroidAppQueuedWork_removeWithJavaLangRunnable_(id<JavaLangRunnable> finisher);
-
-FOUNDATION_EXPORT void AndroidAppQueuedWork_waitToFinish();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAppQueuedWork)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAppQueuedWork")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAppQueuedWork.m b/core/iostest/daggerframework/main/androidbase/AndroidAppQueuedWork.m
deleted file mode 100644
index db9505714..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAppQueuedWork.m
+++ /dev/null
@@ -1,123 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppQueuedWork.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Runnable.h"
-#include "java/util/concurrent/ConcurrentLinkedQueue.h"
-#include "java/util/concurrent/ExecutorService.h"
-#include "java/util/concurrent/Executors.h"
-
-inline JavaUtilConcurrentConcurrentLinkedQueue *AndroidAppQueuedWork_get_sPendingWorkFinishers();
-static JavaUtilConcurrentConcurrentLinkedQueue *AndroidAppQueuedWork_sPendingWorkFinishers;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidAppQueuedWork, sPendingWorkFinishers, JavaUtilConcurrentConcurrentLinkedQueue *)
-
-inline id<JavaUtilConcurrentExecutorService> AndroidAppQueuedWork_get_sSingleThreadExecutor();
-inline id<JavaUtilConcurrentExecutorService> AndroidAppQueuedWork_set_sSingleThreadExecutor(id<JavaUtilConcurrentExecutorService> value);
-static id<JavaUtilConcurrentExecutorService> AndroidAppQueuedWork_sSingleThreadExecutor;
-J2OBJC_STATIC_FIELD_OBJ(AndroidAppQueuedWork, sSingleThreadExecutor, id<JavaUtilConcurrentExecutorService>)
-
-J2OBJC_INITIALIZED_DEFN(AndroidAppQueuedWork)
-
-@implementation AndroidAppQueuedWork
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidAppQueuedWork_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id<JavaUtilConcurrentExecutorService>)singleThreadExecutor {
-  return AndroidAppQueuedWork_singleThreadExecutor();
-}
-
-+ (void)addWithJavaLangRunnable:(id<JavaLangRunnable>)finisher {
-  AndroidAppQueuedWork_addWithJavaLangRunnable_(finisher);
-}
-
-+ (void)removeWithJavaLangRunnable:(id<JavaLangRunnable>)finisher {
-  AndroidAppQueuedWork_removeWithJavaLangRunnable_(finisher);
-}
-
-+ (void)waitToFinish {
-  AndroidAppQueuedWork_waitToFinish();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilConcurrentExecutorService;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(singleThreadExecutor);
-  methods[2].selector = @selector(addWithJavaLangRunnable:);
-  methods[3].selector = @selector(removeWithJavaLangRunnable:);
-  methods[4].selector = @selector(waitToFinish);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "sPendingWorkFinishers", "LJavaUtilConcurrentConcurrentLinkedQueue;", .constantValue.asLong = 0, 0x1a, -1, 3, 4, -1 },
-    { "sSingleThreadExecutor", "LJavaUtilConcurrentExecutorService;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
-  };
-  static const void *ptrTable[] = { "add", "LJavaLangRunnable;", "remove", &AndroidAppQueuedWork_sPendingWorkFinishers, "Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/Runnable;>;", &AndroidAppQueuedWork_sSingleThreadExecutor };
-  static const J2ObjcClassInfo _AndroidAppQueuedWork = { "QueuedWork", "android.app", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidAppQueuedWork;
-}
-
-+ (void)initialize {
-  if (self == [AndroidAppQueuedWork class]) {
-    JreStrongAssignAndConsume(&AndroidAppQueuedWork_sPendingWorkFinishers, new_JavaUtilConcurrentConcurrentLinkedQueue_init());
-    JreStrongAssign(&AndroidAppQueuedWork_sSingleThreadExecutor, nil);
-    J2OBJC_SET_INITIALIZED(AndroidAppQueuedWork)
-  }
-}
-
-@end
-
-void AndroidAppQueuedWork_init(AndroidAppQueuedWork *self) {
-  NSObject_init(self);
-}
-
-AndroidAppQueuedWork *new_AndroidAppQueuedWork_init() {
-  J2OBJC_NEW_IMPL(AndroidAppQueuedWork, init)
-}
-
-AndroidAppQueuedWork *create_AndroidAppQueuedWork_init() {
-  J2OBJC_CREATE_IMPL(AndroidAppQueuedWork, init)
-}
-
-id<JavaUtilConcurrentExecutorService> AndroidAppQueuedWork_singleThreadExecutor() {
-  AndroidAppQueuedWork_initialize();
-  @synchronized(AndroidAppQueuedWork_class_()) {
-    if (AndroidAppQueuedWork_sSingleThreadExecutor == nil) {
-      JreStrongAssign(&AndroidAppQueuedWork_sSingleThreadExecutor, JavaUtilConcurrentExecutors_newSingleThreadExecutor());
-    }
-    return AndroidAppQueuedWork_sSingleThreadExecutor;
-  }
-}
-
-void AndroidAppQueuedWork_addWithJavaLangRunnable_(id<JavaLangRunnable> finisher) {
-  AndroidAppQueuedWork_initialize();
-  [((JavaUtilConcurrentConcurrentLinkedQueue *) nil_chk(AndroidAppQueuedWork_sPendingWorkFinishers)) addWithId:finisher];
-}
-
-void AndroidAppQueuedWork_removeWithJavaLangRunnable_(id<JavaLangRunnable> finisher) {
-  AndroidAppQueuedWork_initialize();
-  [((JavaUtilConcurrentConcurrentLinkedQueue *) nil_chk(AndroidAppQueuedWork_sPendingWorkFinishers)) removeWithId:finisher];
-}
-
-void AndroidAppQueuedWork_waitToFinish() {
-  AndroidAppQueuedWork_initialize();
-  id<JavaLangRunnable> toFinish;
-  while ((toFinish = [((JavaUtilConcurrentConcurrentLinkedQueue *) nil_chk(AndroidAppQueuedWork_sPendingWorkFinishers)) poll]) != nil) {
-    [((id<JavaLangRunnable>) nil_chk(toFinish)) run];
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppQueuedWork)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAppSharedPreferencesImpl.h b/core/iostest/daggerframework/main/androidbase/AndroidAppSharedPreferencesImpl.h
deleted file mode 100644
index ed87e0275..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAppSharedPreferencesImpl.h
+++ /dev/null
@@ -1,136 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidAppSharedPreferencesImpl")
-#ifdef RESTRICT_AndroidAppSharedPreferencesImpl
-#define INCLUDE_ALL_AndroidAppSharedPreferencesImpl 0
-#else
-#define INCLUDE_ALL_AndroidAppSharedPreferencesImpl 1
-#endif
-#undef RESTRICT_AndroidAppSharedPreferencesImpl
-
-#if !defined (AndroidAppSharedPreferencesImpl_) && (INCLUDE_ALL_AndroidAppSharedPreferencesImpl || defined(INCLUDE_AndroidAppSharedPreferencesImpl))
-#define AndroidAppSharedPreferencesImpl_
-
-#define RESTRICT_AndroidContentSharedPreferences 1
-#define INCLUDE_AndroidContentSharedPreferences 1
-#include "AndroidContentSharedPreferences.h"
-
-@class AndroidOsFileUtils_FileStatus;
-@class AndroidOsHandler;
-@class JavaIoFile;
-@protocol AndroidContentSharedPreferences_Editor;
-@protocol AndroidContentSharedPreferences_OnSharedPreferenceChangeListener;
-@protocol JavaUtilMap;
-
-@interface AndroidAppSharedPreferencesImpl : NSObject < AndroidContentSharedPreferences >
-
-#pragma mark Public
-
-- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
-                           withInt:(jint)mode
-                   withJavaUtilMap:(id<JavaUtilMap>)initialContents
-              withAndroidOsHandler:(AndroidOsHandler *)mainHandler;
-
-- (jboolean)containsWithNSString:(NSString *)key;
-
-- (id<AndroidContentSharedPreferences_Editor>)edit;
-
-- (id<JavaUtilMap>)getAll;
-
-- (jboolean)getBooleanWithNSString:(NSString *)key
-                       withBoolean:(jboolean)defValue;
-
-- (jfloat)getFloatWithNSString:(NSString *)key
-                     withFloat:(jfloat)defValue;
-
-- (jint)getIntWithNSString:(NSString *)key
-                   withInt:(jint)defValue;
-
-- (jlong)getLongWithNSString:(NSString *)key
-                    withLong:(jlong)defValue;
-
-- (NSString *)getStringWithNSString:(NSString *)key
-                       withNSString:(NSString *)defValue;
-
-- (jboolean)hasFileChangedUnexpectedly;
-
-- (jboolean)isLoaded;
-
-- (void)registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener;
-
-- (void)replaceWithJavaUtilMap:(id<JavaUtilMap>)newContents
-withAndroidOsFileUtils_FileStatus:(AndroidOsFileUtils_FileStatus *)stat;
-
-- (void)unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidAppSharedPreferencesImpl)
-
-FOUNDATION_EXPORT void AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(AndroidAppSharedPreferencesImpl *self, JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler);
-
-FOUNDATION_EXPORT AndroidAppSharedPreferencesImpl *new_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidAppSharedPreferencesImpl *create_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAppSharedPreferencesImpl)
-
-#endif
-
-#if !defined (AndroidAppSharedPreferencesImpl_EditorImpl_) && (INCLUDE_ALL_AndroidAppSharedPreferencesImpl || defined(INCLUDE_AndroidAppSharedPreferencesImpl_EditorImpl))
-#define AndroidAppSharedPreferencesImpl_EditorImpl_
-
-#define RESTRICT_AndroidContentSharedPreferences 1
-#define INCLUDE_AndroidContentSharedPreferences_Editor 1
-#include "AndroidContentSharedPreferences.h"
-
-@class AndroidAppSharedPreferencesImpl;
-
-@interface AndroidAppSharedPreferencesImpl_EditorImpl : NSObject < AndroidContentSharedPreferences_Editor >
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$;
-
-- (void)apply;
-
-- (id<AndroidContentSharedPreferences_Editor>)clear;
-
-- (jboolean)commit;
-
-- (id<AndroidContentSharedPreferences_Editor>)putBooleanWithNSString:(NSString *)key
-                                                         withBoolean:(jboolean)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putFloatWithNSString:(NSString *)key
-                                                         withFloat:(jfloat)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putIntWithNSString:(NSString *)key
-                                                         withInt:(jint)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putLongWithNSString:(NSString *)key
-                                                         withLong:(jlong)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putStringWithNSString:(NSString *)key
-                                                       withNSString:(NSString *)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)removeWithNSString:(NSString *)key;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl)
-
-FOUNDATION_EXPORT void AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl *outer$);
-
-FOUNDATION_EXPORT AndroidAppSharedPreferencesImpl_EditorImpl *new_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl *outer$) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidAppSharedPreferencesImpl_EditorImpl *create_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl *outer$);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAppSharedPreferencesImpl_EditorImpl)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidAppSharedPreferencesImpl")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidAppSharedPreferencesImpl.m b/core/iostest/daggerframework/main/androidbase/AndroidAppSharedPreferencesImpl.m
deleted file mode 100644
index b65c769b0..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidAppSharedPreferencesImpl.m
+++ /dev/null
@@ -1,1096 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppQueuedWork.h"
-#include "AndroidAppSharedPreferencesImpl.h"
-#include "AndroidContentContext.h"
-#include "AndroidContentSharedPreferences.h"
-#include "AndroidInternalUtilXmlUtils.h"
-#include "AndroidOsFileUtils.h"
-#include "AndroidOsHandler.h"
-#include "AndroidOsLooper.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "com/google/android/collect/Maps.h"
-#include "java/io/File.h"
-#include "java/io/FileNotFoundException.h"
-#include "java/io/FileOutputStream.h"
-#include "java/io/IOException.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/InterruptedException.h"
-#include "java/lang/Long.h"
-#include "java/lang/Runnable.h"
-#include "java/util/ArrayList.h"
-#include "java/util/HashMap.h"
-#include "java/util/HashSet.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/WeakHashMap.h"
-#include "java/util/concurrent/CountDownLatch.h"
-#include "java/util/concurrent/ExecutorService.h"
-#include "org/xmlpull/v1/XmlPullParserException.h"
-
-@class AndroidAppSharedPreferencesImpl_MemoryCommitResult;
-
-@interface AndroidAppSharedPreferencesImpl () {
- @public
-  JavaIoFile *mFile_;
-  AndroidOsHandler *mainHandler_;
-  JavaIoFile *mBackupFile_;
-  jint mMode_;
-  id<JavaUtilMap> mMap_;
-  jint mDiskWritesInFlight_;
-  jboolean mLoaded_;
-  jlong mStatTimestamp_;
-  jlong mStatSize_;
-  id mWritingToDiskLock_;
-  JavaUtilWeakHashMap *mListeners_;
-}
-
-+ (JavaIoFile *)makeBackupFileWithJavaIoFile:(JavaIoFile *)prefsFile;
-
-- (void)enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr
-                                                          withJavaLangRunnable:(id<JavaLangRunnable>)postWriteRunnable;
-
-+ (JavaIoFileOutputStream *)createFileOutputStreamWithJavaIoFile:(JavaIoFile *)file;
-
-- (void)writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr;
-
-+ (void)setFilePermissionsFromModeWithNSString:(NSString *)name
-                                       withInt:(jint)mode
-                                       withInt:(jint)extraPermissions;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mFile_, JavaIoFile *)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mainHandler_, AndroidOsHandler *)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mBackupFile_, JavaIoFile *)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mMap_, id<JavaUtilMap>)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mWritingToDiskLock_, id)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl, mListeners_, JavaUtilWeakHashMap *)
-
-inline NSString *AndroidAppSharedPreferencesImpl_get_TAG();
-static NSString *AndroidAppSharedPreferencesImpl_TAG = @"ApplicationContext";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidAppSharedPreferencesImpl, TAG, NSString *)
-
-inline jboolean AndroidAppSharedPreferencesImpl_get_DEBUG();
-#define AndroidAppSharedPreferencesImpl_DEBUG false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidAppSharedPreferencesImpl, DEBUG, jboolean)
-
-inline id AndroidAppSharedPreferencesImpl_get_mContent();
-static id AndroidAppSharedPreferencesImpl_mContent;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidAppSharedPreferencesImpl, mContent, id)
-
-__attribute__((unused)) static JavaIoFile *AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(JavaIoFile *prefsFile);
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr, id<JavaLangRunnable> postWriteRunnable);
-
-__attribute__((unused)) static JavaIoFileOutputStream *AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(JavaIoFile *file);
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr);
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_(NSString *name, jint mode, jint extraPermissions);
-
-@interface AndroidAppSharedPreferencesImpl_MemoryCommitResult : NSObject {
- @public
-  jboolean changesMade_;
-  id<JavaUtilList> keysModified_;
-  id<JavaUtilSet> listeners_;
-  id<JavaUtilMap> mapToWriteToDisk_;
-  JavaUtilConcurrentCountDownLatch *writtenToDiskLatch_;
-  volatile_jboolean writeToDiskResult_;
-}
-
-- (instancetype)init;
-
-- (void)setDiskWriteResultWithBoolean:(jboolean)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_MemoryCommitResult)
-
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, keysModified_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, listeners_, id<JavaUtilSet>)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, mapToWriteToDisk_, id<JavaUtilMap>)
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_MemoryCommitResult, writtenToDiskLatch_, JavaUtilConcurrentCountDownLatch *)
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_MemoryCommitResult_init(AndroidAppSharedPreferencesImpl_MemoryCommitResult *self);
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_MemoryCommitResult *new_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_MemoryCommitResult *create_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidAppSharedPreferencesImpl_MemoryCommitResult)
-
-@interface AndroidAppSharedPreferencesImpl_EditorImpl () {
- @public
-  AndroidAppSharedPreferencesImpl *this$0_;
-  id<JavaUtilMap> mModified_;
-  jboolean mClear_;
-}
-
-- (AndroidAppSharedPreferencesImpl_MemoryCommitResult *)commitToMemory;
-
-- (void)notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidAppSharedPreferencesImpl_EditorImpl, mModified_, id<JavaUtilMap>)
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_MemoryCommitResult *AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(AndroidAppSharedPreferencesImpl_EditorImpl *self);
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr);
-
-@interface AndroidAppSharedPreferencesImpl_EditorImpl_1 : NSObject < JavaLangRunnable > {
- @public
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult *val$mcr_;
-}
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0;
-
-- (void)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl_1)
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_1 *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_1 *new_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_1 *create_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);
-
-@interface AndroidAppSharedPreferencesImpl_EditorImpl_2 : NSObject < JavaLangRunnable > {
- @public
-  id<JavaLangRunnable> val$awaitCommit_;
-}
-
-- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0;
-
-- (void)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl_2)
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(AndroidAppSharedPreferencesImpl_EditorImpl_2 *self, id<JavaLangRunnable> capture$0);
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_2 *new_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_2 *create_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0);
-
-@interface AndroidAppSharedPreferencesImpl_EditorImpl_3 : NSObject < JavaLangRunnable > {
- @public
-  AndroidAppSharedPreferencesImpl_EditorImpl *this$0_;
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult *val$mcr_;
-}
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl_EditorImpl:(AndroidAppSharedPreferencesImpl_EditorImpl *)outer$
-            withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0;
-
-- (void)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_EditorImpl_3)
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_3 *self, AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_3 *new_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_EditorImpl_3 *create_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0);
-
-@interface AndroidAppSharedPreferencesImpl_1 : NSObject < JavaLangRunnable > {
- @public
-  AndroidAppSharedPreferencesImpl *this$0_;
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult *val$mcr_;
-  id<JavaLangRunnable> val$postWriteRunnable_;
-}
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$
- withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0
-                                   withJavaLangRunnable:(id<JavaLangRunnable>)capture$1;
-
-- (void)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidAppSharedPreferencesImpl_1)
-
-__attribute__((unused)) static void AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl_1 *self, AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1);
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_1 *new_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidAppSharedPreferencesImpl_1 *create_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1);
-
-J2OBJC_INITIALIZED_DEFN(AndroidAppSharedPreferencesImpl)
-
-@implementation AndroidAppSharedPreferencesImpl
-
-- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
-                           withInt:(jint)mode
-                   withJavaUtilMap:(id<JavaUtilMap>)initialContents
-              withAndroidOsHandler:(AndroidOsHandler *)mainHandler {
-  AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(self, file, mode, initialContents, mainHandler);
-  return self;
-}
-
-+ (JavaIoFile *)makeBackupFileWithJavaIoFile:(JavaIoFile *)prefsFile {
-  return AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(prefsFile);
-}
-
-- (jboolean)isLoaded {
-  @synchronized(self) {
-    return mLoaded_;
-  }
-}
-
-- (jboolean)hasFileChangedUnexpectedly {
-  @synchronized(self) {
-    if (mDiskWritesInFlight_ > 0) {
-      return false;
-    }
-  }
-  AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
-  if (!AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([((JavaIoFile *) nil_chk(mFile_)) getPath], stat)) {
-    return true;
-  }
-  @synchronized(self) {
-    return mStatTimestamp_ != stat->mtime_ || mStatSize_ != stat->size_;
-  }
-}
-
-- (void)replaceWithJavaUtilMap:(id<JavaUtilMap>)newContents
-withAndroidOsFileUtils_FileStatus:(AndroidOsFileUtils_FileStatus *)stat {
-  @synchronized(self) {
-    mLoaded_ = true;
-    if (newContents != nil) {
-      JreStrongAssign(&mMap_, newContents);
-    }
-    if (stat != nil) {
-      mStatTimestamp_ = stat->mtime_;
-      mStatSize_ = stat->size_;
-    }
-  }
-}
-
-- (void)registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener {
-  @synchronized(self) {
-    [((JavaUtilWeakHashMap *) nil_chk(mListeners_)) putWithId:listener withId:AndroidAppSharedPreferencesImpl_mContent];
-  }
-}
-
-- (void)unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener {
-  @synchronized(self) {
-    [((JavaUtilWeakHashMap *) nil_chk(mListeners_)) removeWithId:listener];
-  }
-}
-
-- (id<JavaUtilMap>)getAll {
-  @synchronized(self) {
-    return create_JavaUtilHashMap_initWithJavaUtilMap_(mMap_);
-  }
-}
-
-- (NSString *)getStringWithNSString:(NSString *)key
-                       withNSString:(NSString *)defValue {
-  @synchronized(self) {
-    NSString *v = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [NSString class]);
-    return v != nil ? v : defValue;
-  }
-}
-
-- (jint)getIntWithNSString:(NSString *)key
-                   withInt:(jint)defValue {
-  @synchronized(self) {
-    JavaLangInteger *v = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangInteger class]);
-    return v != nil ? [v intValue] : defValue;
-  }
-}
-
-- (jlong)getLongWithNSString:(NSString *)key
-                    withLong:(jlong)defValue {
-  @synchronized(self) {
-    JavaLangLong *v = (JavaLangLong *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangLong class]);
-    return v != nil ? [v longLongValue] : defValue;
-  }
-}
-
-- (jfloat)getFloatWithNSString:(NSString *)key
-                     withFloat:(jfloat)defValue {
-  @synchronized(self) {
-    JavaLangFloat *v = (JavaLangFloat *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangFloat class]);
-    return v != nil ? [v floatValue] : defValue;
-  }
-}
-
-- (jboolean)getBooleanWithNSString:(NSString *)key
-                       withBoolean:(jboolean)defValue {
-  @synchronized(self) {
-    JavaLangBoolean *v = (JavaLangBoolean *) cast_chk([((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key], [JavaLangBoolean class]);
-    return v != nil ? [v booleanValue] : defValue;
-  }
-}
-
-- (jboolean)containsWithNSString:(NSString *)key {
-  @synchronized(self) {
-    return [((id<JavaUtilMap>) nil_chk(mMap_)) containsKeyWithId:key];
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)edit {
-  return create_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(self);
-}
-
-- (void)enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr
-                                                          withJavaLangRunnable:(id<JavaLangRunnable>)postWriteRunnable {
-  AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(self, mcr, postWriteRunnable);
-}
-
-+ (JavaIoFileOutputStream *)createFileOutputStreamWithJavaIoFile:(JavaIoFile *)file {
-  return AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(file);
-}
-
-- (void)writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr {
-  AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
-}
-
-+ (void)setFilePermissionsFromModeWithNSString:(NSString *)name
-                                       withInt:(jint)mode
-                                       withInt:(jint)extraPermissions {
-  AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_(name, mode, extraPermissions);
-}
-
-- (void)dealloc {
-  RELEASE_(mFile_);
-  RELEASE_(mainHandler_);
-  RELEASE_(mBackupFile_);
-  RELEASE_(mMap_);
-  RELEASE_(mWritingToDiskLock_);
-  RELEASE_(mListeners_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0xa, 1, 2, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 8, -1, -1 },
-    { NULL, "LNSString;", 0x1, 9, 10, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 11, 12, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 13, 14, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 15, 16, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 19, 20, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 21, 22, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileOutputStream;", 0xa, 23, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 24, 25, -1, -1, -1, -1 },
-    { NULL, "V", 0xa, 26, 27, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaIoFile:withInt:withJavaUtilMap:withAndroidOsHandler:);
-  methods[1].selector = @selector(makeBackupFileWithJavaIoFile:);
-  methods[2].selector = @selector(isLoaded);
-  methods[3].selector = @selector(hasFileChangedUnexpectedly);
-  methods[4].selector = @selector(replaceWithJavaUtilMap:withAndroidOsFileUtils_FileStatus:);
-  methods[5].selector = @selector(registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:);
-  methods[6].selector = @selector(unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:);
-  methods[7].selector = @selector(getAll);
-  methods[8].selector = @selector(getStringWithNSString:withNSString:);
-  methods[9].selector = @selector(getIntWithNSString:withInt:);
-  methods[10].selector = @selector(getLongWithNSString:withLong:);
-  methods[11].selector = @selector(getFloatWithNSString:withFloat:);
-  methods[12].selector = @selector(getBooleanWithNSString:withBoolean:);
-  methods[13].selector = @selector(containsWithNSString:);
-  methods[14].selector = @selector(edit);
-  methods[15].selector = @selector(enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:withJavaLangRunnable:);
-  methods[16].selector = @selector(createFileOutputStreamWithJavaIoFile:);
-  methods[17].selector = @selector(writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
-  methods[18].selector = @selector(setFilePermissionsFromModeWithNSString:withInt:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
-    { "DEBUG", "Z", .constantValue.asBOOL = AndroidAppSharedPreferencesImpl_DEBUG, 0x1a, -1, -1, -1, -1 },
-    { "mFile_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mainHandler_", "LAndroidOsHandler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mBackupFile_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mMode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 29, -1 },
-    { "mDiskWritesInFlight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mLoaded_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mStatTimestamp_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mStatSize_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mWritingToDiskLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mContent", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
-    { "mListeners_", "LJavaUtilWeakHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 31, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaIoFile;ILJavaUtilMap;LAndroidOsHandler;", "makeBackupFile", "LJavaIoFile;", "replace", "LJavaUtilMap;LAndroidOsFileUtils_FileStatus;", "registerOnSharedPreferenceChangeListener", "LAndroidContentSharedPreferences_OnSharedPreferenceChangeListener;", "unregisterOnSharedPreferenceChangeListener", "()Ljava/util/Map<Ljava/lang/String;*>;", "getString", "LNSString;LNSString;", "getInt", "LNSString;I", "getLong", "LNSString;J", "getFloat", "LNSString;F", "getBoolean", "LNSString;Z", "contains", "LNSString;", "enqueueDiskWrite", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;LJavaLangRunnable;", "createFileOutputStream", "writeToFile", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", "setFilePermissionsFromMode", "LNSString;II", &AndroidAppSharedPreferencesImpl_TAG, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", &AndroidAppSharedPreferencesImpl_mContent, "Ljava/util/WeakHashMap<Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;Ljava/lang/Object;>;", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;LAndroidAppSharedPreferencesImpl_EditorImpl;" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl = { "SharedPreferencesImpl", "android.app", ptrTable, methods, fields, 7, 0x11, 19, 14, -1, 32, -1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl;
-}
-
-+ (void)initialize {
-  if (self == [AndroidAppSharedPreferencesImpl class]) {
-    JreStrongAssignAndConsume(&AndroidAppSharedPreferencesImpl_mContent, new_NSObject_init());
-    J2OBJC_SET_INITIALIZED(AndroidAppSharedPreferencesImpl)
-  }
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(AndroidAppSharedPreferencesImpl *self, JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) {
-  NSObject_init(self);
-  self->mDiskWritesInFlight_ = 0;
-  self->mLoaded_ = false;
-  JreStrongAssignAndConsume(&self->mWritingToDiskLock_, new_NSObject_init());
-  JreStrongAssign(&self->mFile_, file);
-  JreStrongAssign(&self->mainHandler_, mainHandler);
-  JreStrongAssign(&self->mBackupFile_, AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(file));
-  self->mMode_ = mode;
-  self->mLoaded_ = (initialContents != nil);
-  JreStrongAssign(&self->mMap_, initialContents != nil ? initialContents : create_JavaUtilHashMap_init());
-  AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
-  if (AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([((JavaIoFile *) nil_chk(file)) getPath], stat)) {
-    self->mStatTimestamp_ = stat->mtime_;
-  }
-  JreStrongAssignAndConsume(&self->mListeners_, new_JavaUtilWeakHashMap_init());
-}
-
-AndroidAppSharedPreferencesImpl *new_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl, initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_, file, mode, initialContents, mainHandler)
-}
-
-AndroidAppSharedPreferencesImpl *create_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(JavaIoFile *file, jint mode, id<JavaUtilMap> initialContents, AndroidOsHandler *mainHandler) {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl, initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_, file, mode, initialContents, mainHandler)
-}
-
-JavaIoFile *AndroidAppSharedPreferencesImpl_makeBackupFileWithJavaIoFile_(JavaIoFile *prefsFile) {
-  AndroidAppSharedPreferencesImpl_initialize();
-  return create_JavaIoFile_initWithNSString_(JreStrcat("$$", [((JavaIoFile *) nil_chk(prefsFile)) getPath], @".bak"));
-}
-
-void AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr, id<JavaLangRunnable> postWriteRunnable) {
-  id<JavaLangRunnable> writeToDiskRunnable = create_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(self, mcr, postWriteRunnable);
-  jboolean isFromSyncCommit = postWriteRunnable == nil;
-  if (isFromSyncCommit) {
-    jboolean wasEmpty = false;
-    @synchronized(self) {
-      wasEmpty = (self->mDiskWritesInFlight_ == 1);
-    }
-    if (wasEmpty) {
-      [writeToDiskRunnable run];
-      return;
-    }
-  }
-  [((id<JavaUtilConcurrentExecutorService>) nil_chk(AndroidAppQueuedWork_singleThreadExecutor())) executeWithJavaLangRunnable:writeToDiskRunnable];
-}
-
-JavaIoFileOutputStream *AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(JavaIoFile *file) {
-  AndroidAppSharedPreferencesImpl_initialize();
-  JavaIoFileOutputStream *str = nil;
-  @try {
-    str = create_JavaIoFileOutputStream_initWithJavaIoFile_(file);
-  }
-  @catch (JavaIoFileNotFoundException *e) {
-    JavaIoFile *parent = [((JavaIoFile *) nil_chk(file)) getParentFile];
-    if (![((JavaIoFile *) nil_chk(parent)) mkdir]) {
-      AndroidUtilLog_eWithNSString_withNSString_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@", @"Couldn't create directory for SharedPreferences file ", file));
-      return nil;
-    }
-    AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_([parent getPath], AndroidOsFileUtils_S_IRWXU | AndroidOsFileUtils_S_IRWXG | AndroidOsFileUtils_S_IXOTH, -1, -1);
-    @try {
-      str = create_JavaIoFileOutputStream_initWithJavaIoFile_(file);
-    }
-    @catch (JavaIoFileNotFoundException *e2) {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@", @"Couldn't create SharedPreferences file ", file), e2);
-    }
-  }
-  return str;
-}
-
-void AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr) {
-  if ([((JavaIoFile *) nil_chk(self->mFile_)) exists]) {
-    if (!((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->changesMade_) {
-      [mcr setDiskWriteResultWithBoolean:true];
-      return;
-    }
-    if (![((JavaIoFile *) nil_chk(self->mBackupFile_)) exists]) {
-      if (![self->mFile_ renameToWithJavaIoFile:self->mBackupFile_]) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@$@", @"Couldn't rename file ", self->mFile_, @" to backup file ", self->mBackupFile_));
-        [mcr setDiskWriteResultWithBoolean:false];
-        return;
-      }
-    }
-    else {
-      [self->mFile_ delete__];
-    }
-  }
-  @try {
-    JavaIoFileOutputStream *str = AndroidAppSharedPreferencesImpl_createFileOutputStreamWithJavaIoFile_(self->mFile_);
-    if (str == nil) {
-      [((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr)) setDiskWriteResultWithBoolean:false];
-      return;
-    }
-    AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withJavaIoOutputStream_(((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->mapToWriteToDisk_, str);
-    AndroidOsFileUtils_syncWithJavaIoFileOutputStream_(str);
-    [str close];
-    AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_([self->mFile_ getPath], self->mMode_, 0);
-    AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
-    if (AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([self->mFile_ getPath], stat)) {
-      @synchronized(self) {
-        self->mStatTimestamp_ = stat->mtime_;
-        self->mStatSize_ = stat->size_;
-      }
-    }
-    [((JavaIoFile *) nil_chk(self->mBackupFile_)) delete__];
-    [mcr setDiskWriteResultWithBoolean:true];
-    return;
-  }
-  @catch (OrgXmlpullV1XmlPullParserException *e) {
-    AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidAppSharedPreferencesImpl_TAG, @"writeToFile: Got exception:", e);
-  }
-  @catch (JavaIoIOException *e) {
-    AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidAppSharedPreferencesImpl_TAG, @"writeToFile: Got exception:", e);
-  }
-  if ([self->mFile_ exists]) {
-    if (![self->mFile_ delete__]) {
-      AndroidUtilLog_eWithNSString_withNSString_(AndroidAppSharedPreferencesImpl_TAG, JreStrcat("$@", @"Couldn't clean up partially-written file ", self->mFile_));
-    }
-  }
-  [((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr)) setDiskWriteResultWithBoolean:false];
-}
-
-void AndroidAppSharedPreferencesImpl_setFilePermissionsFromModeWithNSString_withInt_withInt_(NSString *name, jint mode, jint extraPermissions) {
-  AndroidAppSharedPreferencesImpl_initialize();
-  jint perms = AndroidOsFileUtils_S_IRUSR | AndroidOsFileUtils_S_IWUSR | AndroidOsFileUtils_S_IRGRP | AndroidOsFileUtils_S_IWGRP | extraPermissions;
-  if ((mode & AndroidContentContext_MODE_WORLD_READABLE) != 0) {
-    perms |= AndroidOsFileUtils_S_IROTH;
-  }
-  if ((mode & AndroidContentContext_MODE_WORLD_WRITEABLE) != 0) {
-    perms |= AndroidOsFileUtils_S_IWOTH;
-  }
-  AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_(name, perms, - 1, - 1);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppSharedPreferencesImpl)
-
-@implementation AndroidAppSharedPreferencesImpl_MemoryCommitResult
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)setDiskWriteResultWithBoolean:(jboolean)result {
-  JreAssignVolatileBoolean(&writeToDiskResult_, result);
-  [((JavaUtilConcurrentCountDownLatch *) nil_chk(writtenToDiskLatch_)) countDown];
-}
-
-- (void)dealloc {
-  RELEASE_(keysModified_);
-  RELEASE_(listeners_);
-  RELEASE_(mapToWriteToDisk_);
-  RELEASE_(writtenToDiskLatch_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(setDiskWriteResultWithBoolean:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "changesMade_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "keysModified_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1, -1, -1, 2, -1 },
-    { "listeners_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1, -1, -1, 3, -1 },
-    { "mapToWriteToDisk_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1, -1, -1, 4, -1 },
-    { "writtenToDiskLatch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-    { "writeToDiskResult_", "Z", .constantValue.asLong = 0, 0x41, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "setDiskWriteResult", "Z", "Ljava/util/List<Ljava/lang/String;>;", "Ljava/util/Set<Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;>;", "Ljava/util/Map<**>;", "LAndroidAppSharedPreferencesImpl;" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_MemoryCommitResult = { "MemoryCommitResult", "android.app", ptrTable, methods, fields, 7, 0xa, 2, 6, 5, -1, -1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl_MemoryCommitResult;
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_MemoryCommitResult_init(AndroidAppSharedPreferencesImpl_MemoryCommitResult *self) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->writtenToDiskLatch_, new_JavaUtilConcurrentCountDownLatch_initWithInt_(1));
-  JreAssignVolatileBoolean(&self->writeToDiskResult_, false);
-}
-
-AndroidAppSharedPreferencesImpl_MemoryCommitResult *new_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init() {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_MemoryCommitResult, init)
-}
-
-AndroidAppSharedPreferencesImpl_MemoryCommitResult *create_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init() {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_MemoryCommitResult, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppSharedPreferencesImpl_MemoryCommitResult)
-
-@implementation AndroidAppSharedPreferencesImpl_EditorImpl
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$ {
-  AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(self, outer$);
-  return self;
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)putStringWithNSString:(NSString *)key
-                                                       withNSString:(NSString *)value {
-  @synchronized(self) {
-    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:value];
-    return self;
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)putIntWithNSString:(NSString *)key
-                                                         withInt:(jint)value {
-  @synchronized(self) {
-    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangInteger_valueOfWithInt_(value)];
-    return self;
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)putLongWithNSString:(NSString *)key
-                                                         withLong:(jlong)value {
-  @synchronized(self) {
-    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangLong_valueOfWithLong_(value)];
-    return self;
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)putFloatWithNSString:(NSString *)key
-                                                         withFloat:(jfloat)value {
-  @synchronized(self) {
-    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangFloat_valueOfWithFloat_(value)];
-    return self;
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)putBooleanWithNSString:(NSString *)key
-                                                         withBoolean:(jboolean)value {
-  @synchronized(self) {
-    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:JavaLangBoolean_valueOfWithBoolean_(value)];
-    return self;
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)removeWithNSString:(NSString *)key {
-  @synchronized(self) {
-    [((id<JavaUtilMap>) nil_chk(mModified_)) putWithId:key withId:self];
-    return self;
-  }
-}
-
-- (id<AndroidContentSharedPreferences_Editor>)clear {
-  @synchronized(self) {
-    mClear_ = true;
-    return self;
-  }
-}
-
-- (void)apply {
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr = AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(self);
-  id<JavaLangRunnable> awaitCommit = create_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(mcr);
-  AndroidAppQueuedWork_addWithJavaLangRunnable_(awaitCommit);
-  id<JavaLangRunnable> postWriteRunnable = create_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(awaitCommit);
-  AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(this$0_, mcr, postWriteRunnable);
-  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
-}
-
-- (AndroidAppSharedPreferencesImpl_MemoryCommitResult *)commitToMemory {
-  return AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(self);
-}
-
-- (jboolean)commit {
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr = AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(self);
-  AndroidAppSharedPreferencesImpl_enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(this$0_, mcr, nil);
-  @try {
-    [((JavaUtilConcurrentCountDownLatch *) nil_chk(((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->writtenToDiskLatch_)) await];
-  }
-  @catch (JavaLangInterruptedException *e) {
-    return false;
-  }
-  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
-  return JreLoadVolatileBoolean(&mcr->writeToDiskResult_);
-}
-
-- (void)notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)mcr {
-  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(mModified_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 8, 9, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 12, 13, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl:);
-  methods[1].selector = @selector(putStringWithNSString:withNSString:);
-  methods[2].selector = @selector(putIntWithNSString:withInt:);
-  methods[3].selector = @selector(putLongWithNSString:withLong:);
-  methods[4].selector = @selector(putFloatWithNSString:withFloat:);
-  methods[5].selector = @selector(putBooleanWithNSString:withBoolean:);
-  methods[6].selector = @selector(removeWithNSString:);
-  methods[7].selector = @selector(clear);
-  methods[8].selector = @selector(apply);
-  methods[9].selector = @selector(commitToMemory);
-  methods[10].selector = @selector(commit);
-  methods[11].selector = @selector(notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidAppSharedPreferencesImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "mModified_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
-    { "mClear_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "putString", "LNSString;LNSString;", "putInt", "LNSString;I", "putLong", "LNSString;J", "putFloat", "LNSString;F", "putBoolean", "LNSString;Z", "remove", "LNSString;", "notifyListeners", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "LAndroidAppSharedPreferencesImpl;" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl = { "EditorImpl", "android.app", ptrTable, methods, fields, 7, 0x11, 12, 3, 15, -1, -1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl_EditorImpl;
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl *outer$) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  JreStrongAssign(&self->mModified_, ComGoogleAndroidCollectMaps_newHashMap());
-  self->mClear_ = false;
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl *new_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl *outer$) {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl, initWithAndroidAppSharedPreferencesImpl_, outer$)
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl *create_AndroidAppSharedPreferencesImpl_EditorImpl_initWithAndroidAppSharedPreferencesImpl_(AndroidAppSharedPreferencesImpl *outer$) {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl, initWithAndroidAppSharedPreferencesImpl_, outer$)
-}
-
-AndroidAppSharedPreferencesImpl_MemoryCommitResult *AndroidAppSharedPreferencesImpl_EditorImpl_commitToMemory(AndroidAppSharedPreferencesImpl_EditorImpl *self) {
-  AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr = create_AndroidAppSharedPreferencesImpl_MemoryCommitResult_init();
-  @synchronized(self->this$0_) {
-    if (self->this$0_->mDiskWritesInFlight_ > 0) {
-      JreStrongAssignAndConsume(&self->this$0_->mMap_, new_JavaUtilHashMap_initWithJavaUtilMap_(self->this$0_->mMap_));
-    }
-    JreStrongAssign(&mcr->mapToWriteToDisk_, self->this$0_->mMap_);
-    self->this$0_->mDiskWritesInFlight_++;
-    jboolean hasListeners = [((JavaUtilWeakHashMap *) nil_chk(self->this$0_->mListeners_)) size] > 0;
-    if (hasListeners) {
-      JreStrongAssignAndConsume(&mcr->keysModified_, new_JavaUtilArrayList_init());
-      JreStrongAssignAndConsume(&mcr->listeners_, new_JavaUtilHashSet_initWithJavaUtilCollection_([self->this$0_->mListeners_ keySet]));
-    }
-    @synchronized(self) {
-      if (self->mClear_) {
-        if (![((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) isEmpty]) {
-          mcr->changesMade_ = true;
-          [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) clear];
-        }
-        self->mClear_ = false;
-      }
-      for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(self->mModified_)) entrySet])) {
-        NSString *k = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
-        id v = [e getValue];
-        if (v == self) {
-          if (![((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) containsKeyWithId:k]) {
-            continue;
-          }
-          [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) removeWithId:k];
-        }
-        else {
-          jboolean isSame = false;
-          if ([((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) containsKeyWithId:k]) {
-            id existingValue = [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) getWithId:k];
-            if (existingValue != nil && [existingValue isEqual:v]) {
-              continue;
-            }
-          }
-          [((id<JavaUtilMap>) nil_chk(self->this$0_->mMap_)) putWithId:k withId:v];
-        }
-        mcr->changesMade_ = true;
-        if (hasListeners) {
-          [((id<JavaUtilList>) nil_chk(mcr->keysModified_)) addWithId:k];
-        }
-      }
-      [self->mModified_ clear];
-    }
-  }
-  return mcr;
-}
-
-void AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *mcr) {
-  if (((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(mcr))->listeners_ == nil || mcr->keysModified_ == nil || [mcr->keysModified_ size] == 0) {
-    return;
-  }
-  if (AndroidOsLooper_myLooper() == AndroidOsLooper_getMainLooper()) {
-    for (jint i = [((id<JavaUtilList>) nil_chk(mcr->keysModified_)) size] - 1; i >= 0; i--) {
-      NSString *key = [((id<JavaUtilList>) nil_chk(mcr->keysModified_)) getWithInt:i];
-      for (id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener> __strong listener in nil_chk(mcr->listeners_)) {
-        if (listener != nil) {
-          [listener onSharedPreferenceChangedWithAndroidContentSharedPreferences:self->this$0_ withNSString:key];
-        }
-      }
-    }
-  }
-  else {
-    [((AndroidOsHandler *) nil_chk(self->this$0_->mainHandler_)) postWithJavaLangRunnable:create_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, mcr)];
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidAppSharedPreferencesImpl_EditorImpl)
-
-@implementation AndroidAppSharedPreferencesImpl_EditorImpl_1
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0 {
-  AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, capture$0);
-  return self;
-}
-
-- (void)run {
-  @try {
-    [((JavaUtilConcurrentCountDownLatch *) nil_chk(((AndroidAppSharedPreferencesImpl_MemoryCommitResult *) nil_chk(val$mcr_))->writtenToDiskLatch_)) await];
-  }
-  @catch (JavaLangInterruptedException *ignored) {
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(val$mcr_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
-  methods[1].selector = @selector(run);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$mcr_", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl_EditorImpl;", "apply" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl_1 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl_EditorImpl_1;
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_1 *self, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
-  JreStrongAssign(&self->val$mcr_, capture$0);
-  NSObject_init(self);
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl_1 *new_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_1, initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_, capture$0)
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl_1 *create_AndroidAppSharedPreferencesImpl_EditorImpl_1_initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_1, initWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_, capture$0)
-}
-
-@implementation AndroidAppSharedPreferencesImpl_EditorImpl_2
-
-- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
-  AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(self, capture$0);
-  return self;
-}
-
-- (void)run {
-  [((id<JavaLangRunnable>) nil_chk(val$awaitCommit_)) run];
-  AndroidAppQueuedWork_removeWithJavaLangRunnable_(val$awaitCommit_);
-}
-
-- (void)dealloc {
-  RELEASE_(val$awaitCommit_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaLangRunnable:);
-  methods[1].selector = @selector(run);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$awaitCommit_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl_EditorImpl;", "apply" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl_2 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl_EditorImpl_2;
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(AndroidAppSharedPreferencesImpl_EditorImpl_2 *self, id<JavaLangRunnable> capture$0) {
-  JreStrongAssign(&self->val$awaitCommit_, capture$0);
-  NSObject_init(self);
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl_2 *new_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_2, initWithJavaLangRunnable_, capture$0)
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl_2 *create_AndroidAppSharedPreferencesImpl_EditorImpl_2_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_2, initWithJavaLangRunnable_, capture$0)
-}
-
-@implementation AndroidAppSharedPreferencesImpl_EditorImpl_3
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl_EditorImpl:(AndroidAppSharedPreferencesImpl_EditorImpl *)outer$
-            withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0 {
-  AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)run {
-  AndroidAppSharedPreferencesImpl_EditorImpl_notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(this$0_, val$mcr_);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(val$mcr_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl_EditorImpl:withAndroidAppSharedPreferencesImpl_MemoryCommitResult:);
-  methods[1].selector = @selector(run);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidAppSharedPreferencesImpl_EditorImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$mcr_", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl_EditorImpl;", "notifyListenersWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_EditorImpl_3 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl_EditorImpl_3;
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl_3 *self, AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JreStrongAssign(&self->val$mcr_, capture$0);
-  NSObject_init(self);
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl_3 *new_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_3, initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_, outer$, capture$0)
-}
-
-AndroidAppSharedPreferencesImpl_EditorImpl_3 *create_AndroidAppSharedPreferencesImpl_EditorImpl_3_initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_(AndroidAppSharedPreferencesImpl_EditorImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0) {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_EditorImpl_3, initWithAndroidAppSharedPreferencesImpl_EditorImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_, outer$, capture$0)
-}
-
-@implementation AndroidAppSharedPreferencesImpl_1
-
-- (instancetype)initWithAndroidAppSharedPreferencesImpl:(AndroidAppSharedPreferencesImpl *)outer$
- withAndroidAppSharedPreferencesImpl_MemoryCommitResult:(AndroidAppSharedPreferencesImpl_MemoryCommitResult *)capture$0
-                                   withJavaLangRunnable:(id<JavaLangRunnable>)capture$1 {
-  AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(self, outer$, capture$0, capture$1);
-  return self;
-}
-
-- (void)run {
-  @synchronized(this$0_->mWritingToDiskLock_) {
-    AndroidAppSharedPreferencesImpl_writeToFileWithAndroidAppSharedPreferencesImpl_MemoryCommitResult_(this$0_, val$mcr_);
-  }
-  @synchronized(this$0_) {
-    this$0_->mDiskWritesInFlight_--;
-  }
-  if (val$postWriteRunnable_ != nil) {
-    [val$postWriteRunnable_ run];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(val$mcr_);
-  RELEASE_(val$postWriteRunnable_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidAppSharedPreferencesImpl:withAndroidAppSharedPreferencesImpl_MemoryCommitResult:withJavaLangRunnable:);
-  methods[1].selector = @selector(run);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidAppSharedPreferencesImpl;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$mcr_", "LAndroidAppSharedPreferencesImpl_MemoryCommitResult;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$postWriteRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidAppSharedPreferencesImpl;", "enqueueDiskWriteWithAndroidAppSharedPreferencesImpl_MemoryCommitResult:withJavaLangRunnable:" };
-  static const J2ObjcClassInfo _AndroidAppSharedPreferencesImpl_1 = { "", "android.app", ptrTable, methods, fields, 7, 0x8018, 2, 3, 0, -1, 1, -1, -1 };
-  return &_AndroidAppSharedPreferencesImpl_1;
-}
-
-@end
-
-void AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl_1 *self, AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JreStrongAssign(&self->val$mcr_, capture$0);
-  JreStrongAssign(&self->val$postWriteRunnable_, capture$1);
-  NSObject_init(self);
-}
-
-AndroidAppSharedPreferencesImpl_1 *new_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) {
-  J2OBJC_NEW_IMPL(AndroidAppSharedPreferencesImpl_1, initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_, outer$, capture$0, capture$1)
-}
-
-AndroidAppSharedPreferencesImpl_1 *create_AndroidAppSharedPreferencesImpl_1_initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_(AndroidAppSharedPreferencesImpl *outer$, AndroidAppSharedPreferencesImpl_MemoryCommitResult *capture$0, id<JavaLangRunnable> capture$1) {
-  J2OBJC_CREATE_IMPL(AndroidAppSharedPreferencesImpl_1, initWithAndroidAppSharedPreferencesImpl_withAndroidAppSharedPreferencesImpl_MemoryCommitResult_withJavaLangRunnable_, outer$, capture$0, capture$1)
-}
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentContentValues.h b/core/iostest/daggerframework/main/androidbase/AndroidContentContentValues.h
deleted file mode 100644
index 332c93770..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentContentValues.h
+++ /dev/null
@@ -1,144 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidContentContentValues")
-#ifdef RESTRICT_AndroidContentContentValues
-#define INCLUDE_ALL_AndroidContentContentValues 0
-#else
-#define INCLUDE_ALL_AndroidContentContentValues 1
-#endif
-#undef RESTRICT_AndroidContentContentValues
-
-#if !defined (AndroidContentContentValues_) && (INCLUDE_ALL_AndroidContentContentValues || defined(INCLUDE_AndroidContentContentValues))
-#define AndroidContentContentValues_
-
-@class IOSByteArray;
-@class JavaLangBoolean;
-@class JavaLangByte;
-@class JavaLangDouble;
-@class JavaLangFloat;
-@class JavaLangInteger;
-@class JavaLangLong;
-@class JavaLangShort;
-@class JavaUtilArrayList;
-@protocol JavaUtilSet;
-
-@interface AndroidContentContentValues : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithAndroidContentContentValues:(AndroidContentContentValues *)from;
-
-- (instancetype)initWithInt:(jint)size;
-
-- (void)clear;
-
-- (jboolean)containsKeyWithNSString:(NSString *)key;
-
-- (jboolean)isEqual:(id)object;
-
-- (id)getWithNSString:(NSString *)key;
-
-- (JavaLangBoolean *)getAsBooleanWithNSString:(NSString *)key;
-
-- (JavaLangByte *)getAsByteWithNSString:(NSString *)key;
-
-- (IOSByteArray *)getAsByteArrayWithNSString:(NSString *)key;
-
-- (JavaLangDouble *)getAsDoubleWithNSString:(NSString *)key;
-
-- (JavaLangFloat *)getAsFloatWithNSString:(NSString *)key;
-
-- (JavaLangInteger *)getAsIntegerWithNSString:(NSString *)key;
-
-- (JavaLangLong *)getAsLongWithNSString:(NSString *)key;
-
-- (JavaLangShort *)getAsShortWithNSString:(NSString *)key;
-
-- (NSString *)getAsStringWithNSString:(NSString *)key;
-
-- (JavaUtilArrayList *)getStringArrayListWithNSString:(NSString *)key;
-
-- (NSUInteger)hash;
-
-- (id<JavaUtilSet>)keySet;
-
-- (void)putWithNSString:(NSString *)key
-    withJavaLangBoolean:(JavaLangBoolean *)value;
-
-- (void)putWithNSString:(NSString *)key
-       withJavaLangByte:(JavaLangByte *)value;
-
-- (void)putWithNSString:(NSString *)key
-          withByteArray:(IOSByteArray *)value;
-
-- (void)putWithNSString:(NSString *)key
-     withJavaLangDouble:(JavaLangDouble *)value;
-
-- (void)putWithNSString:(NSString *)key
-      withJavaLangFloat:(JavaLangFloat *)value;
-
-- (void)putWithNSString:(NSString *)key
-    withJavaLangInteger:(JavaLangInteger *)value;
-
-- (void)putWithNSString:(NSString *)key
-       withJavaLangLong:(JavaLangLong *)value;
-
-- (void)putWithNSString:(NSString *)key
-      withJavaLangShort:(JavaLangShort *)value;
-
-- (void)putWithNSString:(NSString *)key
-           withNSString:(NSString *)value;
-
-- (void)putAllWithAndroidContentContentValues:(AndroidContentContentValues *)other;
-
-- (void)putNullWithNSString:(NSString *)key;
-
-- (void)putStringArrayListWithNSString:(NSString *)key
-                 withJavaUtilArrayList:(JavaUtilArrayList *)value;
-
-- (void)removeWithNSString:(NSString *)key;
-
-- (jint)size;
-
-- (NSString *)description;
-
-- (id<JavaUtilSet>)valueSet;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidContentContentValues)
-
-inline NSString *AndroidContentContentValues_get_TAG();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidContentContentValues_TAG;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidContentContentValues, TAG, NSString *)
-
-FOUNDATION_EXPORT void AndroidContentContentValues_init(AndroidContentContentValues *self);
-
-FOUNDATION_EXPORT AndroidContentContentValues *new_AndroidContentContentValues_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidContentContentValues *create_AndroidContentContentValues_init();
-
-FOUNDATION_EXPORT void AndroidContentContentValues_initWithInt_(AndroidContentContentValues *self, jint size);
-
-FOUNDATION_EXPORT AndroidContentContentValues *new_AndroidContentContentValues_initWithInt_(jint size) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidContentContentValues *create_AndroidContentContentValues_initWithInt_(jint size);
-
-FOUNDATION_EXPORT void AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *self, AndroidContentContentValues *from);
-
-FOUNDATION_EXPORT AndroidContentContentValues *new_AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *from) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidContentContentValues *create_AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *from);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidContentContentValues)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidContentContentValues")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentContentValues.m b/core/iostest/daggerframework/main/androidbase/AndroidContentContentValues.m
deleted file mode 100644
index 0292a376d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentContentValues.m
+++ /dev/null
@@ -1,506 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentContentValues.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Byte.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Double.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/NumberFormatException.h"
-#include "java/lang/Short.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/HashMap.h"
-#include "java/util/Set.h"
-
-@interface AndroidContentContentValues () {
- @public
-  JavaUtilHashMap *mValues_;
-}
-
-- (instancetype)initWithJavaUtilHashMap:(JavaUtilHashMap *)values;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidContentContentValues, mValues_, JavaUtilHashMap *)
-
-__attribute__((unused)) static void AndroidContentContentValues_initWithJavaUtilHashMap_(AndroidContentContentValues *self, JavaUtilHashMap *values);
-
-__attribute__((unused)) static AndroidContentContentValues *new_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidContentContentValues *create_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values);
-
-__attribute__((unused)) static IOSObjectArray *AndroidContentContentValues__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidContentContentValues__Annotations$1();
-
-NSString *AndroidContentContentValues_TAG = @"ContentValues";
-
-@implementation AndroidContentContentValues
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidContentContentValues_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithInt:(jint)size {
-  AndroidContentContentValues_initWithInt_(self, size);
-  return self;
-}
-
-- (instancetype)initWithAndroidContentContentValues:(AndroidContentContentValues *)from {
-  AndroidContentContentValues_initWithAndroidContentContentValues_(self, from);
-  return self;
-}
-
-- (instancetype)initWithJavaUtilHashMap:(JavaUtilHashMap *)values {
-  AndroidContentContentValues_initWithJavaUtilHashMap_(self, values);
-  return self;
-}
-
-- (jboolean)isEqual:(id)object {
-  if (!([object isKindOfClass:[AndroidContentContentValues class]])) {
-    return false;
-  }
-  return [((JavaUtilHashMap *) nil_chk(mValues_)) isEqual:((AndroidContentContentValues *) nil_chk(((AndroidContentContentValues *) cast_chk(object, [AndroidContentContentValues class]))))->mValues_];
-}
-
-- (NSUInteger)hash {
-  return ((jint) [((JavaUtilHashMap *) nil_chk(mValues_)) hash]);
-}
-
-- (void)putWithNSString:(NSString *)key
-           withNSString:(NSString *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putAllWithAndroidContentContentValues:(AndroidContentContentValues *)other {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putAllWithJavaUtilMap:((AndroidContentContentValues *) nil_chk(other))->mValues_];
-}
-
-- (void)putWithNSString:(NSString *)key
-       withJavaLangByte:(JavaLangByte *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-      withJavaLangShort:(JavaLangShort *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-    withJavaLangInteger:(JavaLangInteger *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-       withJavaLangLong:(JavaLangLong *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-      withJavaLangFloat:(JavaLangFloat *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-     withJavaLangDouble:(JavaLangDouble *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-    withJavaLangBoolean:(JavaLangBoolean *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putWithNSString:(NSString *)key
-          withByteArray:(IOSByteArray *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (void)putNullWithNSString:(NSString *)key {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:nil];
-}
-
-- (jint)size {
-  return [((JavaUtilHashMap *) nil_chk(mValues_)) size];
-}
-
-- (void)removeWithNSString:(NSString *)key {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) removeWithId:key];
-}
-
-- (void)clear {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) clear];
-}
-
-- (jboolean)containsKeyWithNSString:(NSString *)key {
-  return [((JavaUtilHashMap *) nil_chk(mValues_)) containsKeyWithId:key];
-}
-
-- (id)getWithNSString:(NSString *)key {
-  return [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-}
-
-- (NSString *)getAsStringWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  return value != nil ? [value description] : nil;
-}
-
-- (JavaLangLong *)getAsLongWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return value != nil ? JavaLangLong_valueOfWithLong_([((NSNumber *) cast_chk(value, [NSNumber class])) longLongValue]) : nil;
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      @try {
-        return JavaLangLong_valueOfWithNSString_([value description]);
-      }
-      @catch (JavaLangNumberFormatException *e2) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Long value for ", value, @" at key ", key));
-        return nil;
-      }
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Long: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (JavaLangInteger *)getAsIntegerWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return value != nil ? JavaLangInteger_valueOfWithInt_([((NSNumber *) cast_chk(value, [NSNumber class])) intValue]) : nil;
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      @try {
-        return JavaLangInteger_valueOfWithNSString_([value description]);
-      }
-      @catch (JavaLangNumberFormatException *e2) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Integer value for ", value, @" at key ", key));
-        return nil;
-      }
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Integer: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (JavaLangShort *)getAsShortWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return value != nil ? JavaLangShort_valueOfWithShort_([((NSNumber *) cast_chk(value, [NSNumber class])) shortValue]) : nil;
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      @try {
-        return JavaLangShort_valueOfWithNSString_([value description]);
-      }
-      @catch (JavaLangNumberFormatException *e2) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Short value for ", value, @" at key ", key));
-        return nil;
-      }
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Short: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (JavaLangByte *)getAsByteWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return value != nil ? JavaLangByte_valueOfWithByte_([((NSNumber *) cast_chk(value, [NSNumber class])) charValue]) : nil;
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      @try {
-        return JavaLangByte_valueOfWithNSString_([value description]);
-      }
-      @catch (JavaLangNumberFormatException *e2) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Byte value for ", value, @" at key ", key));
-        return nil;
-      }
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Byte: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (JavaLangDouble *)getAsDoubleWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return value != nil ? JavaLangDouble_valueOfWithDouble_([((NSNumber *) cast_chk(value, [NSNumber class])) doubleValue]) : nil;
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      @try {
-        return JavaLangDouble_valueOfWithNSString_([value description]);
-      }
-      @catch (JavaLangNumberFormatException *e2) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Double value for ", value, @" at key ", key));
-        return nil;
-      }
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Double: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (JavaLangFloat *)getAsFloatWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return value != nil ? JavaLangFloat_valueOfWithFloat_([((NSNumber *) cast_chk(value, [NSNumber class])) floatValue]) : nil;
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      @try {
-        return JavaLangFloat_valueOfWithNSString_([value description]);
-      }
-      @catch (JavaLangNumberFormatException *e2) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Float value for ", value, @" at key ", key));
-        return nil;
-      }
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Float: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (JavaLangBoolean *)getAsBooleanWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  @try {
-    return (JavaLangBoolean *) cast_chk(value, [JavaLangBoolean class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    if ([JavaLangCharSequence_class_() isInstance:value]) {
-      return JavaLangBoolean_valueOfWithNSString_([nil_chk(value) description]);
-    }
-    else if ([value isKindOfClass:[NSNumber class]]) {
-      return JavaLangBoolean_valueOfWithBoolean_([((NSNumber *) nil_chk(((NSNumber *) cast_chk(value, [NSNumber class])))) intValue] != 0);
-    }
-    else {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Boolean: ", value), e);
-      return nil;
-    }
-  }
-}
-
-- (IOSByteArray *)getAsByteArrayWithNSString:(NSString *)key {
-  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
-  if ([value isKindOfClass:[IOSByteArray class]]) {
-    return (IOSByteArray *) cast_chk(value, [IOSByteArray class]);
-  }
-  else {
-    return nil;
-  }
-}
-
-- (id<JavaUtilSet>)valueSet {
-  return [((JavaUtilHashMap *) nil_chk(mValues_)) entrySet];
-}
-
-- (id<JavaUtilSet>)keySet {
-  return [((JavaUtilHashMap *) nil_chk(mValues_)) keySet];
-}
-
-- (void)putStringArrayListWithNSString:(NSString *)key
-                 withJavaUtilArrayList:(JavaUtilArrayList *)value {
-  [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
-}
-
-- (JavaUtilArrayList *)getStringArrayListWithNSString:(NSString *)key {
-  return (JavaUtilArrayList *) cast_chk([((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key], [JavaUtilArrayList class]);
-}
-
-- (NSString *)description {
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
-  for (NSString * __strong name in nil_chk([((JavaUtilHashMap *) nil_chk(mValues_)) keySet])) {
-    NSString *value = [self getAsStringWithNSString:name];
-    if ([sb length] > 0) [sb appendWithNSString:@" "];
-    [sb appendWithNSString:JreStrcat("$C$", name, '=', value)];
-  }
-  return [sb description];
-}
-
-- (void)dealloc {
-  RELEASE_(mValues_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, 2, -1, 3, -1, -1 },
-    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 9, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 12, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 14, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 15, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 17, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 20, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 21, 19, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 22, 19, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 23, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangLong;", 0x1, 24, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangInteger;", 0x1, 25, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangShort;", 0x1, 26, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangByte;", 0x1, 27, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangDouble;", 0x1, 28, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangFloat;", 0x1, 29, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaLangBoolean;", 0x1, 30, 19, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 31, 19, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 32, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 33, -1, -1 },
-    { NULL, "V", 0x1, 34, 35, -1, 36, 37, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x1, 38, 19, -1, 39, 40, -1 },
-    { NULL, "LNSString;", 0x1, 41, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithInt:);
-  methods[2].selector = @selector(initWithAndroidContentContentValues:);
-  methods[3].selector = @selector(initWithJavaUtilHashMap:);
-  methods[4].selector = @selector(isEqual:);
-  methods[5].selector = @selector(hash);
-  methods[6].selector = @selector(putWithNSString:withNSString:);
-  methods[7].selector = @selector(putAllWithAndroidContentContentValues:);
-  methods[8].selector = @selector(putWithNSString:withJavaLangByte:);
-  methods[9].selector = @selector(putWithNSString:withJavaLangShort:);
-  methods[10].selector = @selector(putWithNSString:withJavaLangInteger:);
-  methods[11].selector = @selector(putWithNSString:withJavaLangLong:);
-  methods[12].selector = @selector(putWithNSString:withJavaLangFloat:);
-  methods[13].selector = @selector(putWithNSString:withJavaLangDouble:);
-  methods[14].selector = @selector(putWithNSString:withJavaLangBoolean:);
-  methods[15].selector = @selector(putWithNSString:withByteArray:);
-  methods[16].selector = @selector(putNullWithNSString:);
-  methods[17].selector = @selector(size);
-  methods[18].selector = @selector(removeWithNSString:);
-  methods[19].selector = @selector(clear);
-  methods[20].selector = @selector(containsKeyWithNSString:);
-  methods[21].selector = @selector(getWithNSString:);
-  methods[22].selector = @selector(getAsStringWithNSString:);
-  methods[23].selector = @selector(getAsLongWithNSString:);
-  methods[24].selector = @selector(getAsIntegerWithNSString:);
-  methods[25].selector = @selector(getAsShortWithNSString:);
-  methods[26].selector = @selector(getAsByteWithNSString:);
-  methods[27].selector = @selector(getAsDoubleWithNSString:);
-  methods[28].selector = @selector(getAsFloatWithNSString:);
-  methods[29].selector = @selector(getAsBooleanWithNSString:);
-  methods[30].selector = @selector(getAsByteArrayWithNSString:);
-  methods[31].selector = @selector(valueSet);
-  methods[32].selector = @selector(keySet);
-  methods[33].selector = @selector(putStringArrayListWithNSString:withJavaUtilArrayList:);
-  methods[34].selector = @selector(getStringArrayListWithNSString:);
-  methods[35].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
-    { "mValues_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 43, -1 },
-  };
-  static const void *ptrTable[] = { "I", "LAndroidContentContentValues;", "LJavaUtilHashMap;", "(Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;)V", "equals", "LNSObject;", "hashCode", "put", "LNSString;LNSString;", "putAll", "LNSString;LJavaLangByte;", "LNSString;LJavaLangShort;", "LNSString;LJavaLangInteger;", "LNSString;LJavaLangLong;", "LNSString;LJavaLangFloat;", "LNSString;LJavaLangDouble;", "LNSString;LJavaLangBoolean;", "LNSString;[B", "putNull", "LNSString;", "remove", "containsKey", "get", "getAsString", "getAsLong", "getAsInteger", "getAsShort", "getAsByte", "getAsDouble", "getAsFloat", "getAsBoolean", "getAsByteArray", "()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Object;>;>;", "()Ljava/util/Set<Ljava/lang/String;>;", "putStringArrayList", "LNSString;LJavaUtilArrayList;", "(Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)V", (void *)&AndroidContentContentValues__Annotations$0, "getStringArrayList", "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/lang/String;>;", (void *)&AndroidContentContentValues__Annotations$1, "toString", &AndroidContentContentValues_TAG, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _AndroidContentContentValues = { "ContentValues", "android.content", ptrTable, methods, fields, 7, 0x11, 36, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidContentContentValues;
-}
-
-@end
-
-void AndroidContentContentValues_init(AndroidContentContentValues *self) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mValues_, new_JavaUtilHashMap_initWithInt_(8));
-}
-
-AndroidContentContentValues *new_AndroidContentContentValues_init() {
-  J2OBJC_NEW_IMPL(AndroidContentContentValues, init)
-}
-
-AndroidContentContentValues *create_AndroidContentContentValues_init() {
-  J2OBJC_CREATE_IMPL(AndroidContentContentValues, init)
-}
-
-void AndroidContentContentValues_initWithInt_(AndroidContentContentValues *self, jint size) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mValues_, new_JavaUtilHashMap_initWithInt_withFloat_(size, 1.0f));
-}
-
-AndroidContentContentValues *new_AndroidContentContentValues_initWithInt_(jint size) {
-  J2OBJC_NEW_IMPL(AndroidContentContentValues, initWithInt_, size)
-}
-
-AndroidContentContentValues *create_AndroidContentContentValues_initWithInt_(jint size) {
-  J2OBJC_CREATE_IMPL(AndroidContentContentValues, initWithInt_, size)
-}
-
-void AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *self, AndroidContentContentValues *from) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mValues_, new_JavaUtilHashMap_initWithJavaUtilMap_(((AndroidContentContentValues *) nil_chk(from))->mValues_));
-}
-
-AndroidContentContentValues *new_AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *from) {
-  J2OBJC_NEW_IMPL(AndroidContentContentValues, initWithAndroidContentContentValues_, from)
-}
-
-AndroidContentContentValues *create_AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *from) {
-  J2OBJC_CREATE_IMPL(AndroidContentContentValues, initWithAndroidContentContentValues_, from)
-}
-
-void AndroidContentContentValues_initWithJavaUtilHashMap_(AndroidContentContentValues *self, JavaUtilHashMap *values) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mValues_, values);
-}
-
-AndroidContentContentValues *new_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values) {
-  J2OBJC_NEW_IMPL(AndroidContentContentValues, initWithJavaUtilHashMap_, values)
-}
-
-AndroidContentContentValues *create_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values) {
-  J2OBJC_CREATE_IMPL(AndroidContentContentValues, initWithJavaUtilHashMap_, values)
-}
-
-IOSObjectArray *AndroidContentContentValues__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidContentContentValues__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidContentContentValues)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentContext.h b/core/iostest/daggerframework/main/androidbase/AndroidContentContext.h
deleted file mode 100644
index 2d83c0bdc..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentContext.h
+++ /dev/null
@@ -1,119 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidContentContext")
-#ifdef RESTRICT_AndroidContentContext
-#define INCLUDE_ALL_AndroidContentContext 0
-#else
-#define INCLUDE_ALL_AndroidContentContext 1
-#endif
-#undef RESTRICT_AndroidContentContext
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (AndroidContentContext_) && (INCLUDE_ALL_AndroidContentContext || defined(INCLUDE_AndroidContentContext))
-#define AndroidContentContext_
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class AndroidOsLooper;
-@class IOSObjectArray;
-@class JavaIoFile;
-@class JavaIoFileInputStream;
-@class JavaIoFileOutputStream;
-@protocol AndroidContentSharedPreferences;
-@protocol AndroidDatabaseDatabaseErrorHandler;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-
-@interface AndroidContentContext : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (IOSObjectArray *)databaseList;
-
-- (jboolean)deleteDatabaseWithNSString:(NSString *)name;
-
-- (jboolean)deleteFileWithNSString:(NSString *)name;
-
-- (IOSObjectArray *)fileList;
-
-- (AndroidContentContext *)getApplicationContext;
-
-- (JavaIoFile *)getCacheDir;
-
-- (JavaIoFile *)getDatabasePathWithNSString:(NSString *)name;
-
-- (JavaIoFile *)getDirWithNSString:(NSString *)name
-                           withInt:(jint)mode;
-
-- (JavaIoFile *)getExternalFilesDirWithNSString:(NSString *)type;
-
-- (IOSObjectArray *)getExternalFilesDirsWithNSString:(NSString *)type;
-
-- (JavaIoFile *)getFilesDir;
-
-- (JavaIoFile *)getFileStreamPathWithNSString:(NSString *)name;
-
-- (AndroidOsLooper *)getMainLooper;
-
-- (id<AndroidContentSharedPreferences>)getSharedPreferencesWithNSString:(NSString *)name
-                                                                withInt:(jint)mode;
-
-- (JavaIoFile *)getSharedPrefsFileWithNSString:(NSString *)name;
-
-- (JavaIoFileInputStream *)openFileInputWithNSString:(NSString *)name;
-
-- (JavaIoFileOutputStream *)openFileOutputWithNSString:(NSString *)name
-                                               withInt:(jint)mode;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidContentContext)
-
-inline jint AndroidContentContext_get_MODE_PRIVATE();
-#define AndroidContentContext_MODE_PRIVATE 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidContentContext, MODE_PRIVATE, jint)
-
-inline jint AndroidContentContext_get_MODE_WORLD_READABLE();
-#define AndroidContentContext_MODE_WORLD_READABLE 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidContentContext, MODE_WORLD_READABLE, jint)
-
-inline jint AndroidContentContext_get_MODE_WORLD_WRITEABLE();
-#define AndroidContentContext_MODE_WORLD_WRITEABLE 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidContentContext, MODE_WORLD_WRITEABLE, jint)
-
-inline jint AndroidContentContext_get_MODE_APPEND();
-#define AndroidContentContext_MODE_APPEND 32768
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidContentContext, MODE_APPEND, jint)
-
-inline jint AndroidContentContext_get_MODE_ENABLE_WRITE_AHEAD_LOGGING();
-#define AndroidContentContext_MODE_ENABLE_WRITE_AHEAD_LOGGING 8
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidContentContext, MODE_ENABLE_WRITE_AHEAD_LOGGING, jint)
-
-FOUNDATION_EXPORT void AndroidContentContext_init(AndroidContentContext *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidContentContext)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_AndroidContentContext")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentContext.m b/core/iostest/daggerframework/main/androidbase/AndroidContentContext.m
deleted file mode 100644
index dc61c2893..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentContext.m
+++ /dev/null
@@ -1,224 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentContext.h"
-#include "AndroidContentSharedPreferences.h"
-#include "AndroidDatabaseDatabaseErrorHandler.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidOsLooper.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/File.h"
-#include "java/io/FileInputStream.h"
-#include "java/io/FileOutputStream.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-
-__attribute__((unused)) static IOSObjectArray *AndroidContentContext__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidContentContext__Annotations$1();
-
-@implementation AndroidContentContext
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidContentContext_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (AndroidOsLooper *)getMainLooper {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getSharedPrefsFileWithNSString:(NSString *)name {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (id<AndroidContentSharedPreferences>)getSharedPreferencesWithNSString:(NSString *)name
-                                                                withInt:(jint)mode {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFileInputStream *)openFileInputWithNSString:(NSString *)name {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFileOutputStream *)openFileOutputWithNSString:(NSString *)name
-                                               withInt:(jint)mode {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jboolean)deleteFileWithNSString:(NSString *)name {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getFileStreamPathWithNSString:(NSString *)name {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getFilesDir {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getExternalFilesDirWithNSString:(NSString *)type {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (IOSObjectArray *)getExternalFilesDirsWithNSString:(NSString *)type {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getCacheDir {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (IOSObjectArray *)fileList {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getDirWithNSString:(NSString *)name
-                           withInt:(jint)mode {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jboolean)deleteDatabaseWithNSString:(NSString *)name {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (JavaIoFile *)getDatabasePathWithNSString:(NSString *)name {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (IOSObjectArray *)databaseList {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (AndroidContentContext *)getApplicationContext {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsLooper;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences;", 0x401, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileInputStream;", 0x401, 4, 1, 5, -1, -1, -1 },
-    { NULL, "LJavaIoFileOutputStream;", 0x401, 6, 3, 5, -1, -1, -1 },
-    { NULL, "Z", 0x401, 7, 1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, 8, 1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, 9, 1, -1, -1, -1, -1 },
-    { NULL, "[LJavaIoFile;", 0x401, 10, 1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, 11, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x401, 12, 13, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x401, 12, 14, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 15, 1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x401, 16, 1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentContext;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getMainLooper);
-  methods[2].selector = @selector(getSharedPrefsFileWithNSString:);
-  methods[3].selector = @selector(getSharedPreferencesWithNSString:withInt:);
-  methods[4].selector = @selector(openFileInputWithNSString:);
-  methods[5].selector = @selector(openFileOutputWithNSString:withInt:);
-  methods[6].selector = @selector(deleteFileWithNSString:);
-  methods[7].selector = @selector(getFileStreamPathWithNSString:);
-  methods[8].selector = @selector(getFilesDir);
-  methods[9].selector = @selector(getExternalFilesDirWithNSString:);
-  methods[10].selector = @selector(getExternalFilesDirsWithNSString:);
-  methods[11].selector = @selector(getCacheDir);
-  methods[12].selector = @selector(fileList);
-  methods[13].selector = @selector(getDirWithNSString:withInt:);
-  methods[14].selector = @selector(openOrCreateDatabaseWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
-  methods[15].selector = @selector(openOrCreateDatabaseWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withAndroidDatabaseDatabaseErrorHandler:);
-  methods[16].selector = @selector(deleteDatabaseWithNSString:);
-  methods[17].selector = @selector(getDatabasePathWithNSString:);
-  methods[18].selector = @selector(databaseList);
-  methods[19].selector = @selector(getApplicationContext);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "MODE_PRIVATE", "I", .constantValue.asInt = AndroidContentContext_MODE_PRIVATE, 0x19, -1, -1, -1, -1 },
-    { "MODE_WORLD_READABLE", "I", .constantValue.asInt = AndroidContentContext_MODE_WORLD_READABLE, 0x19, -1, -1, -1, 17 },
-    { "MODE_WORLD_WRITEABLE", "I", .constantValue.asInt = AndroidContentContext_MODE_WORLD_WRITEABLE, 0x19, -1, -1, -1, 18 },
-    { "MODE_APPEND", "I", .constantValue.asInt = AndroidContentContext_MODE_APPEND, 0x19, -1, -1, -1, -1 },
-    { "MODE_ENABLE_WRITE_AHEAD_LOGGING", "I", .constantValue.asInt = AndroidContentContext_MODE_ENABLE_WRITE_AHEAD_LOGGING, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "getSharedPrefsFile", "LNSString;", "getSharedPreferences", "LNSString;I", "openFileInput", "LJavaIoFileNotFoundException;", "openFileOutput", "deleteFile", "getFileStreamPath", "getExternalFilesDir", "getExternalFilesDirs", "getDir", "openOrCreateDatabase", "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LAndroidDatabaseDatabaseErrorHandler;", "deleteDatabase", "getDatabasePath", (void *)&AndroidContentContext__Annotations$0, (void *)&AndroidContentContext__Annotations$1 };
-  static const J2ObjcClassInfo _AndroidContentContext = { "Context", "android.content", ptrTable, methods, fields, 7, 0x401, 20, 5, -1, -1, -1, -1, -1 };
-  return &_AndroidContentContext;
-}
-
-@end
-
-void AndroidContentContext_init(AndroidContentContext *self) {
-  NSObject_init(self);
-}
-
-IOSObjectArray *AndroidContentContext__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidContentContext__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidContentContext)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentIOSContext.h b/core/iostest/daggerframework/main/androidbase/AndroidContentIOSContext.h
deleted file mode 100644
index 08a9b67d3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentIOSContext.h
+++ /dev/null
@@ -1,119 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidContentIOSContext")
-#ifdef RESTRICT_AndroidContentIOSContext
-#define INCLUDE_ALL_AndroidContentIOSContext 0
-#else
-#define INCLUDE_ALL_AndroidContentIOSContext 1
-#endif
-#undef RESTRICT_AndroidContentIOSContext
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (AndroidContentIOSContext_) && (INCLUDE_ALL_AndroidContentIOSContext || defined(INCLUDE_AndroidContentIOSContext))
-#define AndroidContentIOSContext_
-
-#define RESTRICT_AndroidAppApplication 1
-#define INCLUDE_AndroidAppApplication 1
-#include "AndroidAppApplication.h"
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class AndroidOsLooper;
-@class IOSObjectArray;
-@class JavaIoFile;
-@class JavaIoFileInputStream;
-@class JavaIoFileOutputStream;
-@protocol AndroidContentSharedPreferences;
-@protocol AndroidDatabaseDatabaseErrorHandler;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-
-@interface AndroidContentIOSContext : AndroidAppApplication
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (IOSObjectArray *)databaseList;
-
-- (jboolean)deleteDatabaseWithNSString:(NSString *)name;
-
-- (jboolean)deleteFileWithNSString:(NSString *)name;
-
-- (IOSObjectArray *)fileList;
-
-- (JavaIoFile *)getCacheDir;
-
-- (JavaIoFile *)getDatabasePathWithNSString:(NSString *)name;
-
-- (JavaIoFile *)getDirWithNSString:(NSString *)name
-                           withInt:(jint)mode;
-
-- (JavaIoFile *)getExternalFilesDirWithNSString:(NSString *)type;
-
-- (IOSObjectArray *)getExternalFilesDirsWithNSString:(NSString *)type;
-
-- (JavaIoFile *)getFilesDir;
-
-- (JavaIoFile *)getFileStreamPathWithNSString:(NSString *)name;
-
-- (AndroidOsLooper *)getMainLooper;
-
-- (id<AndroidContentSharedPreferences>)getSharedPreferencesWithNSString:(NSString *)name
-                                                                withInt:(jint)mode;
-
-- (JavaIoFile *)getSharedPrefsFileWithNSString:(NSString *)name;
-
-- (JavaIoFileInputStream *)openFileInputWithNSString:(NSString *)name;
-
-- (JavaIoFileOutputStream *)openFileOutputWithNSString:(NSString *)name
-                                               withInt:(jint)mode;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;
-
-#pragma mark Protected
-
-- (JavaIoFile *)getRootDir;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidContentIOSContext)
-
-inline NSString *AndroidContentIOSContext_get_DATABASES();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidContentIOSContext_DATABASES;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidContentIOSContext, DATABASES, NSString *)
-
-inline NSString *AndroidContentIOSContext_get_TAG();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidContentIOSContext_TAG;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidContentIOSContext, TAG, NSString *)
-
-FOUNDATION_EXPORT void AndroidContentIOSContext_init(AndroidContentIOSContext *self);
-
-FOUNDATION_EXPORT AndroidContentIOSContext *new_AndroidContentIOSContext_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidContentIOSContext *create_AndroidContentIOSContext_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidContentIOSContext)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_AndroidContentIOSContext")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentIOSContext.m b/core/iostest/daggerframework/main/androidbase/AndroidContentIOSContext.m
deleted file mode 100644
index 7e6076451..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentIOSContext.m
+++ /dev/null
@@ -1,360 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppApplication.h"
-#include "AndroidAppSharedPreferencesImpl.h"
-#include "AndroidContentContext.h"
-#include "AndroidContentIOSContext.h"
-#include "AndroidContentSharedPreferences.h"
-#include "AndroidDatabaseDatabaseErrorHandler.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidInternalUtilXmlUtils.h"
-#include "AndroidOsFileUtils.h"
-#include "AndroidOsHandler.h"
-#include "AndroidOsLooper.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "java/io/File.h"
-#include "java/io/FileInputStream.h"
-#include "java/io/FileNotFoundException.h"
-#include "java/io/FileOutputStream.h"
-#include "java/io/IOException.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/util/HashMap.h"
-#include "java/util/Map.h"
-#include "org/xmlpull/v1/XmlPullParserException.h"
-
-@interface AndroidContentIOSContext () {
- @public
-  id mSync_;
-  JavaIoFile *mPreferencesDir_;
-  JavaUtilHashMap *sSharedPrefs_;
-}
-
-+ (JavaIoFile *)makeBackupFileWithJavaIoFile:(JavaIoFile *)prefsFile;
-
-- (JavaIoFile *)makeFilenameWithJavaIoFile:(JavaIoFile *)base
-                              withNSString:(NSString *)name;
-
-- (JavaIoFile *)getPreferencesDir;
-
-- (JavaIoFile *)findLocalFileWithNSString:(NSString *)name;
-
-- (NSString *)getRootDirString;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidContentIOSContext, mSync_, id)
-J2OBJC_FIELD_SETTER(AndroidContentIOSContext, mPreferencesDir_, JavaIoFile *)
-J2OBJC_FIELD_SETTER(AndroidContentIOSContext, sSharedPrefs_, JavaUtilHashMap *)
-
-__attribute__((unused)) static JavaIoFile *AndroidContentIOSContext_makeBackupFileWithJavaIoFile_(JavaIoFile *prefsFile);
-
-__attribute__((unused)) static JavaIoFile *AndroidContentIOSContext_makeFilenameWithJavaIoFile_withNSString_(AndroidContentIOSContext *self, JavaIoFile *base, NSString *name);
-
-__attribute__((unused)) static JavaIoFile *AndroidContentIOSContext_getPreferencesDir(AndroidContentIOSContext *self);
-
-__attribute__((unused)) static JavaIoFile *AndroidContentIOSContext_findLocalFileWithNSString_(AndroidContentIOSContext *self, NSString *name);
-
-__attribute__((unused)) static NSString *AndroidContentIOSContext_getRootDirString(AndroidContentIOSContext *self);
-
-NSString *AndroidContentIOSContext_DATABASES = @"databases";
-NSString *AndroidContentIOSContext_TAG = @"IOSContext";
-
-@implementation AndroidContentIOSContext
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidContentIOSContext_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (AndroidOsLooper *)getMainLooper {
-  return AndroidOsLooper_getMainLooper();
-}
-
-+ (JavaIoFile *)makeBackupFileWithJavaIoFile:(JavaIoFile *)prefsFile {
-  return AndroidContentIOSContext_makeBackupFileWithJavaIoFile_(prefsFile);
-}
-
-- (JavaIoFile *)getSharedPrefsFileWithNSString:(NSString *)name {
-  return AndroidContentIOSContext_makeFilenameWithJavaIoFile_withNSString_(self, AndroidContentIOSContext_getPreferencesDir(self), JreStrcat("$$", name, @".xml"));
-}
-
-- (JavaIoFile *)makeFilenameWithJavaIoFile:(JavaIoFile *)base
-                              withNSString:(NSString *)name {
-  return AndroidContentIOSContext_makeFilenameWithJavaIoFile_withNSString_(self, base, name);
-}
-
-- (id<AndroidContentSharedPreferences>)getSharedPreferencesWithNSString:(NSString *)name
-                                                                withInt:(jint)mode {
-  AndroidAppSharedPreferencesImpl *sp;
-  JavaIoFile *prefsFile;
-  jboolean needInitialLoad = false;
-  @synchronized(sSharedPrefs_) {
-    sp = [((JavaUtilHashMap *) nil_chk(sSharedPrefs_)) getWithId:name];
-    if (sp != nil && ![sp hasFileChangedUnexpectedly]) {
-      return sp;
-    }
-    prefsFile = [self getSharedPrefsFileWithNSString:name];
-    if (sp == nil) {
-      sp = create_AndroidAppSharedPreferencesImpl_initWithJavaIoFile_withInt_withJavaUtilMap_withAndroidOsHandler_(prefsFile, mode, nil, create_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper_getMainLooper()));
-      [sSharedPrefs_ putWithId:name withId:sp];
-      needInitialLoad = true;
-    }
-  }
-  @synchronized(sp) {
-    if (needInitialLoad && [sp isLoaded]) {
-      return sp;
-    }
-    JavaIoFile *backup = AndroidContentIOSContext_makeBackupFileWithJavaIoFile_(prefsFile);
-    if ([((JavaIoFile *) nil_chk(backup)) exists]) {
-      [((JavaIoFile *) nil_chk(prefsFile)) delete__];
-      [backup renameToWithJavaIoFile:prefsFile];
-    }
-    if ([((JavaIoFile *) nil_chk(prefsFile)) exists] && ![prefsFile canRead]) {
-      AndroidUtilLog_wWithNSString_withNSString_(AndroidContentIOSContext_TAG, JreStrcat("$@$", @"Attempt to read preferences file ", prefsFile, @" without permission"));
-    }
-    id<JavaUtilMap> map = nil;
-    AndroidOsFileUtils_FileStatus *stat = create_AndroidOsFileUtils_FileStatus_init();
-    if (AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_([prefsFile getPath], stat) && [prefsFile canRead]) {
-      @try {
-        JavaIoFileInputStream *str = create_JavaIoFileInputStream_initWithJavaIoFile_(prefsFile);
-        map = AndroidInternalUtilXmlUtils_readMapXmlWithJavaIoInputStream_(str);
-        [str close];
-      }
-      @catch (OrgXmlpullV1XmlPullParserException *e) {
-        AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidContentIOSContext_TAG, @"getSharedPreferences", e);
-      }
-      @catch (JavaIoFileNotFoundException *e) {
-        AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidContentIOSContext_TAG, @"getSharedPreferences", e);
-      }
-      @catch (JavaIoIOException *e) {
-        AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidContentIOSContext_TAG, @"getSharedPreferences", e);
-      }
-    }
-    [sp replaceWithJavaUtilMap:map withAndroidOsFileUtils_FileStatus:stat];
-  }
-  return sp;
-}
-
-- (JavaIoFile *)getPreferencesDir {
-  return AndroidContentIOSContext_getPreferencesDir(self);
-}
-
-- (JavaIoFileInputStream *)openFileInputWithNSString:(NSString *)name {
-  return create_JavaIoFileInputStream_initWithJavaIoFile_(AndroidContentIOSContext_findLocalFileWithNSString_(self, name));
-}
-
-- (JavaIoFileOutputStream *)openFileOutputWithNSString:(NSString *)name
-                                               withInt:(jint)mode {
-  return create_JavaIoFileOutputStream_initWithJavaIoFile_(AndroidContentIOSContext_findLocalFileWithNSString_(self, name));
-}
-
-- (JavaIoFile *)findLocalFileWithNSString:(NSString *)name {
-  return AndroidContentIOSContext_findLocalFileWithNSString_(self, name);
-}
-
-- (jboolean)deleteFileWithNSString:(NSString *)name {
-  JavaIoFile *localFile = AndroidContentIOSContext_findLocalFileWithNSString_(self, name);
-  return [((JavaIoFile *) nil_chk(localFile)) delete__];
-}
-
-- (JavaIoFile *)getFileStreamPathWithNSString:(NSString *)name {
-  return AndroidContentIOSContext_findLocalFileWithNSString_(self, name);
-}
-
-- (JavaIoFile *)getFilesDir {
-  return [self getDirWithNSString:@"files" withInt:AndroidContentContext_MODE_PRIVATE];
-}
-
-- (JavaIoFile *)getRootDir {
-  JavaIoFile *file = create_JavaIoFile_initWithNSString_(AndroidContentIOSContext_getRootDirString(self));
-  [file mkdirs];
-  return file;
-}
-
-- (NSString *)getRootDirString {
-  return AndroidContentIOSContext_getRootDirString(self);
-}
-
-- (JavaIoFile *)getExternalFilesDirWithNSString:(NSString *)type {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (IOSObjectArray *)getExternalFilesDirsWithNSString:(NSString *)type {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (JavaIoFile *)getCacheDir {
-  return [self getDirWithNSString:@"cache" withInt:AndroidContentContext_MODE_PRIVATE];
-}
-
-- (IOSObjectArray *)fileList {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (JavaIoFile *)getDirWithNSString:(NSString *)name
-                           withInt:(jint)mode {
-  JavaIoFile *rootDir = [self getRootDir];
-  JavaIoFile *filesDir = create_JavaIoFile_initWithJavaIoFile_withNSString_(rootDir, name);
-  [filesDir mkdirs];
-  return filesDir;
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
-  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithJavaIoFile_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_([self getDatabasePathWithNSString:name], factory);
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
-                                                                  withInt:(jint)mode
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
-  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_([((JavaIoFile *) nil_chk([self getDatabasePathWithNSString:name])) getPath], factory, errorHandler);
-}
-
-- (jboolean)deleteDatabaseWithNSString:(NSString *)name {
-  return [((JavaIoFile *) nil_chk([self getDatabasePathWithNSString:name])) delete__];
-}
-
-- (JavaIoFile *)getDatabasePathWithNSString:(NSString *)name {
-  JavaIoFile *dbDir = [self getDirWithNSString:AndroidContentIOSContext_DATABASES withInt:AndroidContentContext_MODE_PRIVATE];
-  JavaIoFile *file = create_JavaIoFile_initWithJavaIoFile_withNSString_(dbDir, name);
-  return file;
-}
-
-- (IOSObjectArray *)databaseList {
-  return [((JavaIoFile *) nil_chk([self getDirWithNSString:AndroidContentIOSContext_DATABASES withInt:AndroidContentContext_MODE_PRIVATE])) list];
-}
-
-- (void)dealloc {
-  RELEASE_(mSync_);
-  RELEASE_(mPreferencesDir_);
-  RELEASE_(sSharedPrefs_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsLooper;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0xa, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x2, 4, 5, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences;", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileInputStream;", 0x1, 8, 3, 9, -1, -1, -1 },
-    { NULL, "LJavaIoFileOutputStream;", 0x1, 10, 7, 9, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x2, 11, 3, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 12, 3, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, 13, 3, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x102, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, 14, 3, -1, -1, -1, -1 },
-    { NULL, "[LJavaIoFile;", 0x1, 15, 3, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, 16, 7, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x1, 17, 18, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x1, 17, 19, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 20, 3, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, 21, 3, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getMainLooper);
-  methods[2].selector = @selector(makeBackupFileWithJavaIoFile:);
-  methods[3].selector = @selector(getSharedPrefsFileWithNSString:);
-  methods[4].selector = @selector(makeFilenameWithJavaIoFile:withNSString:);
-  methods[5].selector = @selector(getSharedPreferencesWithNSString:withInt:);
-  methods[6].selector = @selector(getPreferencesDir);
-  methods[7].selector = @selector(openFileInputWithNSString:);
-  methods[8].selector = @selector(openFileOutputWithNSString:withInt:);
-  methods[9].selector = @selector(findLocalFileWithNSString:);
-  methods[10].selector = @selector(deleteFileWithNSString:);
-  methods[11].selector = @selector(getFileStreamPathWithNSString:);
-  methods[12].selector = @selector(getFilesDir);
-  methods[13].selector = @selector(getRootDir);
-  methods[14].selector = @selector(getRootDirString);
-  methods[15].selector = @selector(getExternalFilesDirWithNSString:);
-  methods[16].selector = @selector(getExternalFilesDirsWithNSString:);
-  methods[17].selector = @selector(getCacheDir);
-  methods[18].selector = @selector(fileList);
-  methods[19].selector = @selector(getDirWithNSString:withInt:);
-  methods[20].selector = @selector(openOrCreateDatabaseWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
-  methods[21].selector = @selector(openOrCreateDatabaseWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withAndroidDatabaseDatabaseErrorHandler:);
-  methods[22].selector = @selector(deleteDatabaseWithNSString:);
-  methods[23].selector = @selector(getDatabasePathWithNSString:);
-  methods[24].selector = @selector(databaseList);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "DATABASES", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
-    { "mSync_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mPreferencesDir_", "LJavaIoFile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "sSharedPrefs_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 24, -1 },
-  };
-  static const void *ptrTable[] = { "makeBackupFile", "LJavaIoFile;", "getSharedPrefsFile", "LNSString;", "makeFilename", "LJavaIoFile;LNSString;", "getSharedPreferences", "LNSString;I", "openFileInput", "LJavaIoFileNotFoundException;", "openFileOutput", "findLocalFile", "deleteFile", "getFileStreamPath", "getExternalFilesDir", "getExternalFilesDirs", "getDir", "openOrCreateDatabase", "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LAndroidDatabaseDatabaseErrorHandler;", "deleteDatabase", "getDatabasePath", &AndroidContentIOSContext_DATABASES, &AndroidContentIOSContext_TAG, "Ljava/util/HashMap<Ljava/lang/String;Landroid/app/SharedPreferencesImpl;>;" };
-  static const J2ObjcClassInfo _AndroidContentIOSContext = { "IOSContext", "android.content", ptrTable, methods, fields, 7, 0x1, 25, 5, -1, -1, -1, -1, -1 };
-  return &_AndroidContentIOSContext;
-}
-
-@end
-
-void AndroidContentIOSContext_init(AndroidContentIOSContext *self) {
-  AndroidAppApplication_init(self);
-  JreStrongAssignAndConsume(&self->mSync_, new_NSObject_init());
-  JreStrongAssignAndConsume(&self->sSharedPrefs_, new_JavaUtilHashMap_init());
-}
-
-AndroidContentIOSContext *new_AndroidContentIOSContext_init() {
-  J2OBJC_NEW_IMPL(AndroidContentIOSContext, init)
-}
-
-AndroidContentIOSContext *create_AndroidContentIOSContext_init() {
-  J2OBJC_CREATE_IMPL(AndroidContentIOSContext, init)
-}
-
-JavaIoFile *AndroidContentIOSContext_makeBackupFileWithJavaIoFile_(JavaIoFile *prefsFile) {
-  AndroidContentIOSContext_initialize();
-  return create_JavaIoFile_initWithNSString_(JreStrcat("$$", [((JavaIoFile *) nil_chk(prefsFile)) getPath], @".bak"));
-}
-
-JavaIoFile *AndroidContentIOSContext_makeFilenameWithJavaIoFile_withNSString_(AndroidContentIOSContext *self, JavaIoFile *base, NSString *name) {
-  if ([((NSString *) nil_chk(name)) java_indexOf:JreLoadStatic(JavaIoFile, separatorChar)] < 0) {
-    return create_JavaIoFile_initWithJavaIoFile_withNSString_(base, name);
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"File ", name, @" contains a path separator"));
-}
-
-JavaIoFile *AndroidContentIOSContext_getPreferencesDir(AndroidContentIOSContext *self) {
-  @synchronized(self->mSync_) {
-    if (self->mPreferencesDir_ == nil) {
-      JreStrongAssign(&self->mPreferencesDir_, [self getDirWithNSString:@"shared_prefs" withInt:AndroidContentContext_MODE_PRIVATE]);
-    }
-    return self->mPreferencesDir_;
-  }
-}
-
-JavaIoFile *AndroidContentIOSContext_findLocalFileWithNSString_(AndroidContentIOSContext *self, NSString *name) {
-  return create_JavaIoFile_initWithJavaIoFile_withNSString_([self getFilesDir], name);
-}
-
-NSString *AndroidContentIOSContext_getRootDirString(AndroidContentIOSContext *self) {
-  NSArray *paths = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, NSUserDomainMask, YES);
-  
-  NSString *documentsDirectory = [paths firstObject];
-  
-  return documentsDirectory;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidContentIOSContext)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentSharedPreferences.h b/core/iostest/daggerframework/main/androidbase/AndroidContentSharedPreferences.h
deleted file mode 100644
index fa8776396..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentSharedPreferences.h
+++ /dev/null
@@ -1,111 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidContentSharedPreferences")
-#ifdef RESTRICT_AndroidContentSharedPreferences
-#define INCLUDE_ALL_AndroidContentSharedPreferences 0
-#else
-#define INCLUDE_ALL_AndroidContentSharedPreferences 1
-#endif
-#undef RESTRICT_AndroidContentSharedPreferences
-
-#if !defined (AndroidContentSharedPreferences_) && (INCLUDE_ALL_AndroidContentSharedPreferences || defined(INCLUDE_AndroidContentSharedPreferences))
-#define AndroidContentSharedPreferences_
-
-@protocol AndroidContentSharedPreferences_Editor;
-@protocol AndroidContentSharedPreferences_OnSharedPreferenceChangeListener;
-@protocol JavaUtilMap;
-
-@protocol AndroidContentSharedPreferences < JavaObject >
-
-- (id<JavaUtilMap>)getAll;
-
-- (NSString *)getStringWithNSString:(NSString *)key
-                       withNSString:(NSString *)defValue;
-
-- (jint)getIntWithNSString:(NSString *)key
-                   withInt:(jint)defValue;
-
-- (jlong)getLongWithNSString:(NSString *)key
-                    withLong:(jlong)defValue;
-
-- (jfloat)getFloatWithNSString:(NSString *)key
-                     withFloat:(jfloat)defValue;
-
-- (jboolean)getBooleanWithNSString:(NSString *)key
-                       withBoolean:(jboolean)defValue;
-
-- (jboolean)containsWithNSString:(NSString *)key;
-
-- (id<AndroidContentSharedPreferences_Editor>)edit;
-
-- (void)registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener;
-
-- (void)unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:(id<AndroidContentSharedPreferences_OnSharedPreferenceChangeListener>)listener;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidContentSharedPreferences)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidContentSharedPreferences)
-
-#endif
-
-#if !defined (AndroidContentSharedPreferences_OnSharedPreferenceChangeListener_) && (INCLUDE_ALL_AndroidContentSharedPreferences || defined(INCLUDE_AndroidContentSharedPreferences_OnSharedPreferenceChangeListener))
-#define AndroidContentSharedPreferences_OnSharedPreferenceChangeListener_
-
-@protocol AndroidContentSharedPreferences;
-
-@protocol AndroidContentSharedPreferences_OnSharedPreferenceChangeListener < JavaObject >
-
-- (void)onSharedPreferenceChangedWithAndroidContentSharedPreferences:(id<AndroidContentSharedPreferences>)sharedPreferences
-                                                        withNSString:(NSString *)key;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidContentSharedPreferences_OnSharedPreferenceChangeListener)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidContentSharedPreferences_OnSharedPreferenceChangeListener)
-
-#endif
-
-#if !defined (AndroidContentSharedPreferences_Editor_) && (INCLUDE_ALL_AndroidContentSharedPreferences || defined(INCLUDE_AndroidContentSharedPreferences_Editor))
-#define AndroidContentSharedPreferences_Editor_
-
-@protocol AndroidContentSharedPreferences_Editor < JavaObject >
-
-- (id<AndroidContentSharedPreferences_Editor>)putStringWithNSString:(NSString *)key
-                                                       withNSString:(NSString *)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putIntWithNSString:(NSString *)key
-                                                         withInt:(jint)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putLongWithNSString:(NSString *)key
-                                                         withLong:(jlong)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putFloatWithNSString:(NSString *)key
-                                                         withFloat:(jfloat)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)putBooleanWithNSString:(NSString *)key
-                                                         withBoolean:(jboolean)value;
-
-- (id<AndroidContentSharedPreferences_Editor>)removeWithNSString:(NSString *)key;
-
-- (id<AndroidContentSharedPreferences_Editor>)clear;
-
-- (jboolean)commit;
-
-- (void)apply;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidContentSharedPreferences_Editor)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidContentSharedPreferences_Editor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidContentSharedPreferences")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidContentSharedPreferences.m b/core/iostest/daggerframework/main/androidbase/AndroidContentSharedPreferences.m
deleted file mode 100644
index 5404d39ab..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidContentSharedPreferences.m
+++ /dev/null
@@ -1,109 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentSharedPreferences.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidContentSharedPreferences : NSObject
-
-@end
-
-@interface AndroidContentSharedPreferences_OnSharedPreferenceChangeListener : NSObject
-
-@end
-
-@interface AndroidContentSharedPreferences_Editor : NSObject
-
-@end
-
-@implementation AndroidContentSharedPreferences
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LJavaUtilMap;", 0x401, -1, -1, -1, 0, -1, -1 },
-    { NULL, "LNSString;", 0x401, 1, 2, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, 3, 4, -1, -1, -1, -1 },
-    { NULL, "J", 0x401, 5, 6, -1, -1, -1, -1 },
-    { NULL, "F", 0x401, 7, 8, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 9, 10, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 11, 12, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 13, 14, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 15, 14, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(getAll);
-  methods[1].selector = @selector(getStringWithNSString:withNSString:);
-  methods[2].selector = @selector(getIntWithNSString:withInt:);
-  methods[3].selector = @selector(getLongWithNSString:withLong:);
-  methods[4].selector = @selector(getFloatWithNSString:withFloat:);
-  methods[5].selector = @selector(getBooleanWithNSString:withBoolean:);
-  methods[6].selector = @selector(containsWithNSString:);
-  methods[7].selector = @selector(edit);
-  methods[8].selector = @selector(registerOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:);
-  methods[9].selector = @selector(unregisterOnSharedPreferenceChangeListenerWithAndroidContentSharedPreferences_OnSharedPreferenceChangeListener:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;*>;", "getString", "LNSString;LNSString;", "getInt", "LNSString;I", "getLong", "LNSString;J", "getFloat", "LNSString;F", "getBoolean", "LNSString;Z", "contains", "LNSString;", "registerOnSharedPreferenceChangeListener", "LAndroidContentSharedPreferences_OnSharedPreferenceChangeListener;", "unregisterOnSharedPreferenceChangeListener", "LAndroidContentSharedPreferences_OnSharedPreferenceChangeListener;LAndroidContentSharedPreferences_Editor;" };
-  static const J2ObjcClassInfo _AndroidContentSharedPreferences = { "SharedPreferences", "android.content", ptrTable, methods, NULL, 7, 0x609, 10, 0, -1, 16, -1, -1, -1 };
-  return &_AndroidContentSharedPreferences;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidContentSharedPreferences)
-
-@implementation AndroidContentSharedPreferences_OnSharedPreferenceChangeListener
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(onSharedPreferenceChangedWithAndroidContentSharedPreferences:withNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "onSharedPreferenceChanged", "LAndroidContentSharedPreferences;LNSString;", "LAndroidContentSharedPreferences;" };
-  static const J2ObjcClassInfo _AndroidContentSharedPreferences_OnSharedPreferenceChangeListener = { "OnSharedPreferenceChangeListener", "android.content", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
-  return &_AndroidContentSharedPreferences_OnSharedPreferenceChangeListener;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidContentSharedPreferences_OnSharedPreferenceChangeListener)
-
-@implementation AndroidContentSharedPreferences_Editor
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, 4, 5, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, 8, 9, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, 10, 11, -1, -1, -1, -1 },
-    { NULL, "LAndroidContentSharedPreferences_Editor;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(putStringWithNSString:withNSString:);
-  methods[1].selector = @selector(putIntWithNSString:withInt:);
-  methods[2].selector = @selector(putLongWithNSString:withLong:);
-  methods[3].selector = @selector(putFloatWithNSString:withFloat:);
-  methods[4].selector = @selector(putBooleanWithNSString:withBoolean:);
-  methods[5].selector = @selector(removeWithNSString:);
-  methods[6].selector = @selector(clear);
-  methods[7].selector = @selector(commit);
-  methods[8].selector = @selector(apply);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "putString", "LNSString;LNSString;", "putInt", "LNSString;I", "putLong", "LNSString;J", "putFloat", "LNSString;F", "putBoolean", "LNSString;Z", "remove", "LNSString;", "LAndroidContentSharedPreferences;" };
-  static const J2ObjcClassInfo _AndroidContentSharedPreferences_Editor = { "Editor", "android.content", ptrTable, methods, NULL, 7, 0x609, 9, 0, 12, -1, -1, -1, -1 };
-  return &_AndroidContentSharedPreferences_Editor;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidContentSharedPreferences_Editor)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractCursor.h
deleted file mode 100644
index 52006996c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractCursor.h
+++ /dev/null
@@ -1,152 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseAbstractCursor")
-#ifdef RESTRICT_AndroidDatabaseAbstractCursor
-#define INCLUDE_ALL_AndroidDatabaseAbstractCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseAbstractCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseAbstractCursor
-
-#if !defined (AndroidDatabaseAbstractCursor_) && (INCLUDE_ALL_AndroidDatabaseAbstractCursor || defined(INCLUDE_AndroidDatabaseAbstractCursor))
-#define AndroidDatabaseAbstractCursor_
-
-#define RESTRICT_AndroidDatabaseCrossProcessCursor 1
-#define INCLUDE_AndroidDatabaseCrossProcessCursor 1
-#include "AndroidDatabaseCrossProcessCursor.h"
-
-@class AndroidDatabaseCharArrayBuffer;
-@class AndroidDatabaseCursorWindow;
-@class AndroidDatabaseDataSetObserver;
-@class AndroidOsBundle;
-@class IOSByteArray;
-@class IOSObjectArray;
-@class JavaLangLong;
-@class JavaUtilHashMap;
-
-@interface AndroidDatabaseAbstractCursor : NSObject < AndroidDatabaseCrossProcessCursor > {
- @public
-  JavaUtilHashMap *mUpdatedRows_;
-  jint mPos_;
-  jint mRowIdColumnIndex_;
-  JavaLangLong *mCurrentRowID_;
-  jboolean mClosed_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)close;
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;
-
-- (void)deactivate;
-
-- (void)fillWindowWithInt:(jint)position
-withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;
-
-- (IOSByteArray *)getBlobWithInt:(jint)column;
-
-- (jint)getColumnCount;
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName;
-
-- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName;
-
-- (NSString *)getColumnNameWithInt:(jint)columnIndex;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (jint)getCount;
-
-- (jdouble)getDoubleWithInt:(jint)column;
-
-- (AndroidOsBundle *)getExtras;
-
-- (jfloat)getFloatWithInt:(jint)column;
-
-- (jint)getIntWithInt:(jint)column;
-
-- (jlong)getLongWithInt:(jint)column;
-
-- (jint)getPosition;
-
-- (jshort)getShortWithInt:(jint)column;
-
-- (NSString *)getStringWithInt:(jint)column;
-
-- (jint)getTypeWithInt:(jint)column;
-
-- (jboolean)getWantsAllOnMoveCalls;
-
-- (AndroidDatabaseCursorWindow *)getWindow;
-
-- (jboolean)isAfterLast;
-
-- (jboolean)isBeforeFirst;
-
-- (jboolean)isClosed;
-
-- (jboolean)isFirst;
-
-- (jboolean)isLast;
-
-- (jboolean)isNullWithInt:(jint)column;
-
-- (jboolean)moveWithInt:(jint)offset;
-
-- (jboolean)moveToFirst;
-
-- (jboolean)moveToLast;
-
-- (jboolean)moveToNext;
-
-- (jboolean)moveToPositionWithInt:(jint)position;
-
-- (jboolean)moveToPrevious;
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition;
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-- (jboolean)requery;
-
-- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras;
-
-- (void)setExtrasWithAndroidOsBundle:(AndroidOsBundle *)extras;
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-#pragma mark Protected
-
-- (void)checkPosition;
-
-- (void)java_finalize;
-
-- (id)getUpdatedFieldWithInt:(jint)columnIndex;
-
-- (jboolean)isFieldUpdatedWithInt:(jint)columnIndex;
-
-- (void)onDeactivateOrClose;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseAbstractCursor)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseAbstractCursor, mUpdatedRows_, JavaUtilHashMap *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseAbstractCursor, mCurrentRowID_, JavaLangLong *)
-
-FOUNDATION_EXPORT void AndroidDatabaseAbstractCursor_init(AndroidDatabaseAbstractCursor *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseAbstractCursor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseAbstractCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractCursor.m
deleted file mode 100644
index 27b228b32..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractCursor.m
+++ /dev/null
@@ -1,494 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseAbstractCursor.h"
-#include "AndroidDatabaseCharArrayBuffer.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorIndexOutOfBoundsException.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseDataSetObservable.h"
-#include "AndroidDatabaseDataSetObserver.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidOsBundle.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Exception.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/Long.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/HashMap.h"
-
-@interface AndroidDatabaseAbstractCursor () {
- @public
-  id mSelfObserverLock_;
-  AndroidDatabaseDataSetObservable *mDataSetObservable_;
-  AndroidOsBundle *mExtras_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseAbstractCursor, mSelfObserverLock_, id)
-J2OBJC_FIELD_SETTER(AndroidDatabaseAbstractCursor, mDataSetObservable_, AndroidDatabaseDataSetObservable *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseAbstractCursor, mExtras_, AndroidOsBundle *)
-
-inline NSString *AndroidDatabaseAbstractCursor_get_TAG();
-static NSString *AndroidDatabaseAbstractCursor_TAG = @"Cursor";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseAbstractCursor, TAG, NSString *)
-
-__attribute__((unused)) static jboolean AndroidDatabaseAbstractCursor_moveToPositionWithInt_(AndroidDatabaseAbstractCursor *self, jint position);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$4();
-
-@implementation AndroidDatabaseAbstractCursor
-
-- (jint)getCount {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (IOSObjectArray *)getColumnNames {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (NSString *)getStringWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jshort)getShortWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jint)getIntWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jlong)getLongWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jfloat)getFloatWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jdouble)getDoubleWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jboolean)isNullWithInt:(jint)column {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jint)getTypeWithInt:(jint)column {
-  return AndroidDatabaseCursor_FIELD_TYPE_STRING;
-}
-
-- (IOSByteArray *)getBlobWithInt:(jint)column {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"getBlob is not supported");
-}
-
-- (AndroidDatabaseCursorWindow *)getWindow {
-  return nil;
-}
-
-- (jint)getColumnCount {
-  return ((IOSObjectArray *) nil_chk([self getColumnNames]))->size_;
-}
-
-- (void)deactivate {
-  [self onDeactivateOrClose];
-}
-
-- (void)onDeactivateOrClose {
-  [((AndroidDatabaseDataSetObservable *) nil_chk(mDataSetObservable_)) notifyInvalidated];
-}
-
-- (jboolean)requery {
-  [((AndroidDatabaseDataSetObservable *) nil_chk(mDataSetObservable_)) notifyChanged];
-  return true;
-}
-
-- (jboolean)isClosed {
-  return mClosed_;
-}
-
-- (void)close {
-  mClosed_ = true;
-  [self onDeactivateOrClose];
-}
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition {
-  return true;
-}
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer {
-  NSString *result = [self getStringWithInt:columnIndex];
-  if (result != nil) {
-    IOSCharArray *data = ((AndroidDatabaseCharArrayBuffer *) nil_chk(buffer))->data_;
-    if (data == nil || data->size_ < ((jint) [result length])) {
-      JreStrongAssign(&buffer->data_, [result java_toCharArray]);
-    }
-    else {
-      [result java_getChars:0 sourceEnd:((jint) [result length]) destination:data destinationBegin:0];
-    }
-    buffer->sizeCopied_ = ((jint) [result length]);
-  }
-  else {
-    ((AndroidDatabaseCharArrayBuffer *) nil_chk(buffer))->sizeCopied_ = 0;
-  }
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseAbstractCursor_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (jint)getPosition {
-  return mPos_;
-}
-
-- (jboolean)moveToPositionWithInt:(jint)position {
-  return AndroidDatabaseAbstractCursor_moveToPositionWithInt_(self, position);
-}
-
-- (void)fillWindowWithInt:(jint)position
-withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window {
-  AndroidDatabaseDatabaseUtils_cursorFillWindowWithAndroidDatabaseCursor_withInt_withAndroidDatabaseCursorWindow_(self, position, window);
-}
-
-- (jboolean)moveWithInt:(jint)offset {
-  return AndroidDatabaseAbstractCursor_moveToPositionWithInt_(self, mPos_ + offset);
-}
-
-- (jboolean)moveToFirst {
-  return AndroidDatabaseAbstractCursor_moveToPositionWithInt_(self, 0);
-}
-
-- (jboolean)moveToLast {
-  return AndroidDatabaseAbstractCursor_moveToPositionWithInt_(self, [self getCount] - 1);
-}
-
-- (jboolean)moveToNext {
-  return AndroidDatabaseAbstractCursor_moveToPositionWithInt_(self, mPos_ + 1);
-}
-
-- (jboolean)moveToPrevious {
-  return AndroidDatabaseAbstractCursor_moveToPositionWithInt_(self, mPos_ - 1);
-}
-
-- (jboolean)isFirst {
-  return mPos_ == 0 && [self getCount] != 0;
-}
-
-- (jboolean)isLast {
-  jint cnt = [self getCount];
-  return mPos_ == (cnt - 1) && cnt != 0;
-}
-
-- (jboolean)isBeforeFirst {
-  if ([self getCount] == 0) {
-    return true;
-  }
-  return mPos_ == -1;
-}
-
-- (jboolean)isAfterLast {
-  if ([self getCount] == 0) {
-    return true;
-  }
-  return mPos_ == [self getCount];
-}
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName {
-  jint periodIndex = [((NSString *) nil_chk(columnName)) java_lastIndexOf:'.'];
-  if (periodIndex != -1) {
-    JavaLangException *e = create_JavaLangException_init();
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseAbstractCursor_TAG, JreStrcat("$$", @"requesting column name with table name -- ", columnName), e);
-    columnName = [columnName java_substring:periodIndex + 1];
-  }
-  IOSObjectArray *columnNames = [self getColumnNames];
-  jint length = ((IOSObjectArray *) nil_chk(columnNames))->size_;
-  for (jint i = 0; i < length; i++) {
-    if ([((NSString *) nil_chk(IOSObjectArray_Get(columnNames, i))) java_equalsIgnoreCase:columnName]) {
-      return i;
-    }
-  }
-  return -1;
-}
-
-- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName {
-  jint index = [self getColumnIndexWithNSString:columnName];
-  if (index < 0) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"column '", columnName, @"' does not exist"));
-  }
-  return index;
-}
-
-- (NSString *)getColumnNameWithInt:(jint)columnIndex {
-  return IOSObjectArray_Get(nil_chk([self getColumnNames]), columnIndex);
-}
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
-  [((AndroidDatabaseDataSetObservable *) nil_chk(mDataSetObservable_)) registerObserverWithId:observer];
-}
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
-  [((AndroidDatabaseDataSetObservable *) nil_chk(mDataSetObservable_)) unregisterObserverWithId:observer];
-}
-
-- (jboolean)getWantsAllOnMoveCalls {
-  return false;
-}
-
-- (void)setExtrasWithAndroidOsBundle:(AndroidOsBundle *)extras {
-  JreStrongAssign(&mExtras_, (extras == nil) ? JreLoadStatic(AndroidOsBundle, EMPTY) : extras);
-}
-
-- (AndroidOsBundle *)getExtras {
-  return mExtras_;
-}
-
-- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras {
-  return JreLoadStatic(AndroidOsBundle, EMPTY);
-}
-
-- (jboolean)isFieldUpdatedWithInt:(jint)columnIndex {
-  return false;
-}
-
-- (id)getUpdatedFieldWithInt:(jint)columnIndex {
-  return nil;
-}
-
-- (void)checkPosition {
-  if (-1 == mPos_ || [self getCount] == mPos_) {
-    @throw create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(mPos_, [self getCount]);
-  }
-}
-
-- (void)java_finalize {
-  @try {
-    if (!mClosed_) [self close];
-  }
-  @catch (JavaLangException *e) {
-  }
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseAbstractCursor class]);
-  RELEASE_(mUpdatedRows_);
-  RELEASE_(mCurrentRowID_);
-  RELEASE_(mSelfObserverLock_);
-  RELEASE_(mDataSetObservable_);
-  RELEASE_(mExtras_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "S", 0x401, 2, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, 3, 1, -1, -1, -1, -1 },
-    { NULL, "J", 0x401, 4, 1, -1, -1, -1, -1 },
-    { NULL, "F", 0x401, 5, 1, -1, -1, -1, -1 },
-    { NULL, "D", 0x401, 6, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 7, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 8, 1, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 9, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursorWindow;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 14, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 17, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 18, 19, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 20, 19, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 21, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 22, 23, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 24, 23, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, 27, 26, -1, -1, -1, -1 },
-    { NULL, "Z", 0x4, 28, 1, -1, -1, 29, -1 },
-    { NULL, "LNSObject;", 0x4, 30, 1, -1, -1, 31, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 32, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(getCount);
-  methods[1].selector = @selector(getColumnNames);
-  methods[2].selector = @selector(getStringWithInt:);
-  methods[3].selector = @selector(getShortWithInt:);
-  methods[4].selector = @selector(getIntWithInt:);
-  methods[5].selector = @selector(getLongWithInt:);
-  methods[6].selector = @selector(getFloatWithInt:);
-  methods[7].selector = @selector(getDoubleWithInt:);
-  methods[8].selector = @selector(isNullWithInt:);
-  methods[9].selector = @selector(getTypeWithInt:);
-  methods[10].selector = @selector(getBlobWithInt:);
-  methods[11].selector = @selector(getWindow);
-  methods[12].selector = @selector(getColumnCount);
-  methods[13].selector = @selector(deactivate);
-  methods[14].selector = @selector(onDeactivateOrClose);
-  methods[15].selector = @selector(requery);
-  methods[16].selector = @selector(isClosed);
-  methods[17].selector = @selector(close);
-  methods[18].selector = @selector(onMoveWithInt:withInt:);
-  methods[19].selector = @selector(copyStringToBufferWithInt:withAndroidDatabaseCharArrayBuffer:);
-  methods[20].selector = @selector(init);
-  methods[21].selector = @selector(getPosition);
-  methods[22].selector = @selector(moveToPositionWithInt:);
-  methods[23].selector = @selector(fillWindowWithInt:withAndroidDatabaseCursorWindow:);
-  methods[24].selector = @selector(moveWithInt:);
-  methods[25].selector = @selector(moveToFirst);
-  methods[26].selector = @selector(moveToLast);
-  methods[27].selector = @selector(moveToNext);
-  methods[28].selector = @selector(moveToPrevious);
-  methods[29].selector = @selector(isFirst);
-  methods[30].selector = @selector(isLast);
-  methods[31].selector = @selector(isBeforeFirst);
-  methods[32].selector = @selector(isAfterLast);
-  methods[33].selector = @selector(getColumnIndexWithNSString:);
-  methods[34].selector = @selector(getColumnIndexOrThrowWithNSString:);
-  methods[35].selector = @selector(getColumnNameWithInt:);
-  methods[36].selector = @selector(registerDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[37].selector = @selector(unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[38].selector = @selector(getWantsAllOnMoveCalls);
-  methods[39].selector = @selector(setExtrasWithAndroidOsBundle:);
-  methods[40].selector = @selector(getExtras);
-  methods[41].selector = @selector(respondWithAndroidOsBundle:);
-  methods[42].selector = @selector(isFieldUpdatedWithInt:);
-  methods[43].selector = @selector(getUpdatedFieldWithInt:);
-  methods[44].selector = @selector(checkPosition);
-  methods[45].selector = @selector(java_finalize);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
-    { "mUpdatedRows_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x4, -1, -1, 34, 35 },
-    { "mPos_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
-    { "mRowIdColumnIndex_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, 36 },
-    { "mCurrentRowID_", "LJavaLangLong;", .constantValue.asLong = 0, 0x4, -1, -1, -1, 37 },
-    { "mClosed_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
-    { "mSelfObserverLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mDataSetObservable_", "LAndroidDatabaseDataSetObservable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mExtras_", "LAndroidOsBundle;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "getString", "I", "getShort", "getInt", "getLong", "getFloat", "getDouble", "isNull", "getType", "getBlob", "onMove", "II", "copyStringToBuffer", "ILAndroidDatabaseCharArrayBuffer;", "moveToPosition", "fillWindow", "ILAndroidDatabaseCursorWindow;", "move", "getColumnIndex", "LNSString;", "getColumnIndexOrThrow", "getColumnName", "registerDataSetObserver", "LAndroidDatabaseDataSetObserver;", "unregisterDataSetObserver", "setExtras", "LAndroidOsBundle;", "respond", "isFieldUpdated", (void *)&AndroidDatabaseAbstractCursor__Annotations$0, "getUpdatedField", (void *)&AndroidDatabaseAbstractCursor__Annotations$1, "finalize", &AndroidDatabaseAbstractCursor_TAG, "Ljava/util/HashMap<Ljava/lang/Long;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;>;", (void *)&AndroidDatabaseAbstractCursor__Annotations$2, (void *)&AndroidDatabaseAbstractCursor__Annotations$3, (void *)&AndroidDatabaseAbstractCursor__Annotations$4 };
-  static const J2ObjcClassInfo _AndroidDatabaseAbstractCursor = { "AbstractCursor", "android.database", ptrTable, methods, fields, 7, 0x401, 46, 9, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseAbstractCursor;
-}
-
-@end
-
-void AndroidDatabaseAbstractCursor_init(AndroidDatabaseAbstractCursor *self) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mSelfObserverLock_, new_NSObject_init());
-  JreStrongAssignAndConsume(&self->mDataSetObservable_, new_AndroidDatabaseDataSetObservable_init());
-  JreStrongAssign(&self->mExtras_, JreLoadStatic(AndroidOsBundle, EMPTY));
-  self->mPos_ = -1;
-  self->mRowIdColumnIndex_ = -1;
-  JreStrongAssign(&self->mCurrentRowID_, nil);
-  JreStrongAssignAndConsume(&self->mUpdatedRows_, new_JavaUtilHashMap_init());
-}
-
-jboolean AndroidDatabaseAbstractCursor_moveToPositionWithInt_(AndroidDatabaseAbstractCursor *self, jint position) {
-  jint count = [self getCount];
-  if (position >= count) {
-    self->mPos_ = count;
-    return false;
-  }
-  if (position < 0) {
-    self->mPos_ = -1;
-    return false;
-  }
-  if (position == self->mPos_) {
-    return true;
-  }
-  jboolean result = [self onMoveWithInt:self->mPos_ withInt:position];
-  if (result == false) {
-    self->mPos_ = -1;
-  }
-  else {
-    self->mPos_ = position;
-    if (self->mRowIdColumnIndex_ != -1) {
-      JreStrongAssign(&self->mCurrentRowID_, JavaLangLong_valueOfWithLong_([self getLongWithInt:self->mRowIdColumnIndex_]));
-    }
-  }
-  return result;
-}
-
-IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractCursor__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseAbstractCursor)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractWindowedCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractWindowedCursor.h
deleted file mode 100644
index 02d5dc68a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractWindowedCursor.h
+++ /dev/null
@@ -1,92 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseAbstractWindowedCursor")
-#ifdef RESTRICT_AndroidDatabaseAbstractWindowedCursor
-#define INCLUDE_ALL_AndroidDatabaseAbstractWindowedCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseAbstractWindowedCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseAbstractWindowedCursor
-
-#if !defined (AndroidDatabaseAbstractWindowedCursor_) && (INCLUDE_ALL_AndroidDatabaseAbstractWindowedCursor || defined(INCLUDE_AndroidDatabaseAbstractWindowedCursor))
-#define AndroidDatabaseAbstractWindowedCursor_
-
-#define RESTRICT_AndroidDatabaseAbstractCursor 1
-#define INCLUDE_AndroidDatabaseAbstractCursor 1
-#include "AndroidDatabaseAbstractCursor.h"
-
-@class AndroidDatabaseCharArrayBuffer;
-@class AndroidDatabaseCursorWindow;
-@class IOSByteArray;
-
-@interface AndroidDatabaseAbstractWindowedCursor : AndroidDatabaseAbstractCursor {
- @public
-  AndroidDatabaseCursorWindow *mWindow_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;
-
-- (IOSByteArray *)getBlobWithInt:(jint)columnIndex;
-
-- (jdouble)getDoubleWithInt:(jint)columnIndex;
-
-- (jfloat)getFloatWithInt:(jint)columnIndex;
-
-- (jint)getIntWithInt:(jint)columnIndex;
-
-- (jlong)getLongWithInt:(jint)columnIndex;
-
-- (jshort)getShortWithInt:(jint)columnIndex;
-
-- (NSString *)getStringWithInt:(jint)columnIndex;
-
-- (jint)getTypeWithInt:(jint)columnIndex;
-
-- (AndroidDatabaseCursorWindow *)getWindow;
-
-- (jboolean)hasWindow;
-
-- (jboolean)isBlobWithInt:(jint)columnIndex;
-
-- (jboolean)isFloatWithInt:(jint)columnIndex;
-
-- (jboolean)isLongWithInt:(jint)columnIndex;
-
-- (jboolean)isNullWithInt:(jint)columnIndex;
-
-- (jboolean)isStringWithInt:(jint)columnIndex;
-
-- (void)setWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;
-
-#pragma mark Protected
-
-- (void)checkPosition;
-
-- (void)clearOrCreateWindowWithNSString:(NSString *)name;
-
-- (void)closeWindow;
-
-- (void)onDeactivateOrClose;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseAbstractWindowedCursor)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseAbstractWindowedCursor, mWindow_, AndroidDatabaseCursorWindow *)
-
-FOUNDATION_EXPORT void AndroidDatabaseAbstractWindowedCursor_init(AndroidDatabaseAbstractWindowedCursor *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseAbstractWindowedCursor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseAbstractWindowedCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractWindowedCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractWindowedCursor.m
deleted file mode 100644
index 1abf717bb..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseAbstractWindowedCursor.m
+++ /dev/null
@@ -1,231 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseAbstractCursor.h"
-#include "AndroidDatabaseAbstractWindowedCursor.h"
-#include "AndroidDatabaseCharArrayBuffer.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseStaleDataException.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$3();
-
-@implementation AndroidDatabaseAbstractWindowedCursor
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseAbstractWindowedCursor_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (IOSByteArray *)getBlobWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getBlobWithInt:mPos_ withInt:columnIndex];
-}
-
-- (NSString *)getStringWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getStringWithInt:mPos_ withInt:columnIndex];
-}
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer {
-  [self checkPosition];
-  [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) copyStringToBufferWithInt:mPos_ withInt:columnIndex withAndroidDatabaseCharArrayBuffer:buffer];
-}
-
-- (jshort)getShortWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getShortWithInt:mPos_ withInt:columnIndex];
-}
-
-- (jint)getIntWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getIntWithInt:mPos_ withInt:columnIndex];
-}
-
-- (jlong)getLongWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getLongWithInt:mPos_ withInt:columnIndex];
-}
-
-- (jfloat)getFloatWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getFloatWithInt:mPos_ withInt:columnIndex];
-}
-
-- (jdouble)getDoubleWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getDoubleWithInt:mPos_ withInt:columnIndex];
-}
-
-- (jboolean)isNullWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getTypeWithInt:mPos_ withInt:columnIndex] == AndroidDatabaseCursor_FIELD_TYPE_NULL;
-}
-
-- (jboolean)isBlobWithInt:(jint)columnIndex {
-  return [self getTypeWithInt:columnIndex] == AndroidDatabaseCursor_FIELD_TYPE_BLOB;
-}
-
-- (jboolean)isStringWithInt:(jint)columnIndex {
-  return [self getTypeWithInt:columnIndex] == AndroidDatabaseCursor_FIELD_TYPE_STRING;
-}
-
-- (jboolean)isLongWithInt:(jint)columnIndex {
-  return [self getTypeWithInt:columnIndex] == AndroidDatabaseCursor_FIELD_TYPE_INTEGER;
-}
-
-- (jboolean)isFloatWithInt:(jint)columnIndex {
-  return [self getTypeWithInt:columnIndex] == AndroidDatabaseCursor_FIELD_TYPE_FLOAT;
-}
-
-- (jint)getTypeWithInt:(jint)columnIndex {
-  [self checkPosition];
-  return [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getTypeWithInt:mPos_ withInt:columnIndex];
-}
-
-- (void)checkPosition {
-  [super checkPosition];
-  if (mWindow_ == nil) {
-    @throw create_AndroidDatabaseStaleDataException_initWithNSString_(@"Attempting to access a closed CursorWindow.Most probable cause: cursor is deactivated prior to calling this method.");
-  }
-}
-
-- (AndroidDatabaseCursorWindow *)getWindow {
-  return mWindow_;
-}
-
-- (void)setWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window {
-  if (window != mWindow_) {
-    [self closeWindow];
-    JreStrongAssign(&mWindow_, window);
-  }
-}
-
-- (jboolean)hasWindow {
-  return mWindow_ != nil;
-}
-
-- (void)closeWindow {
-  if (mWindow_ != nil) {
-    [mWindow_ close];
-    JreStrongAssign(&mWindow_, nil);
-  }
-}
-
-- (void)clearOrCreateWindowWithNSString:(NSString *)name {
-  if (mWindow_ == nil) {
-    JreStrongAssignAndConsume(&mWindow_, new_AndroidDatabaseCursorWindow_initWithNSString_(name));
-  }
-  else {
-    [mWindow_ clear];
-  }
-}
-
-- (void)onDeactivateOrClose {
-  [super onDeactivateOrClose];
-  [self closeWindow];
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseAbstractWindowedCursor class]);
-  RELEASE_(mWindow_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 2, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 5, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 6, 1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 7, 1, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 8, 1, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 9, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 10, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 11, 1, -1, -1, 12, -1 },
-    { NULL, "Z", 0x1, 13, 1, -1, -1, 14, -1 },
-    { NULL, "Z", 0x1, 15, 1, -1, -1, 16, -1 },
-    { NULL, "Z", 0x1, 17, 1, -1, -1, 18, -1 },
-    { NULL, "I", 0x1, 19, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursorWindow;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 22, 23, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getBlobWithInt:);
-  methods[2].selector = @selector(getStringWithInt:);
-  methods[3].selector = @selector(copyStringToBufferWithInt:withAndroidDatabaseCharArrayBuffer:);
-  methods[4].selector = @selector(getShortWithInt:);
-  methods[5].selector = @selector(getIntWithInt:);
-  methods[6].selector = @selector(getLongWithInt:);
-  methods[7].selector = @selector(getFloatWithInt:);
-  methods[8].selector = @selector(getDoubleWithInt:);
-  methods[9].selector = @selector(isNullWithInt:);
-  methods[10].selector = @selector(isBlobWithInt:);
-  methods[11].selector = @selector(isStringWithInt:);
-  methods[12].selector = @selector(isLongWithInt:);
-  methods[13].selector = @selector(isFloatWithInt:);
-  methods[14].selector = @selector(getTypeWithInt:);
-  methods[15].selector = @selector(checkPosition);
-  methods[16].selector = @selector(getWindow);
-  methods[17].selector = @selector(setWindowWithAndroidDatabaseCursorWindow:);
-  methods[18].selector = @selector(hasWindow);
-  methods[19].selector = @selector(closeWindow);
-  methods[20].selector = @selector(clearOrCreateWindowWithNSString:);
-  methods[21].selector = @selector(onDeactivateOrClose);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mWindow_", "LAndroidDatabaseCursorWindow;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "getBlob", "I", "getString", "copyStringToBuffer", "ILAndroidDatabaseCharArrayBuffer;", "getShort", "getInt", "getLong", "getFloat", "getDouble", "isNull", "isBlob", (void *)&AndroidDatabaseAbstractWindowedCursor__Annotations$0, "isString", (void *)&AndroidDatabaseAbstractWindowedCursor__Annotations$1, "isLong", (void *)&AndroidDatabaseAbstractWindowedCursor__Annotations$2, "isFloat", (void *)&AndroidDatabaseAbstractWindowedCursor__Annotations$3, "getType", "setWindow", "LAndroidDatabaseCursorWindow;", "clearOrCreateWindow", "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseAbstractWindowedCursor = { "AbstractWindowedCursor", "android.database", ptrTable, methods, fields, 7, 0x401, 22, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseAbstractWindowedCursor;
-}
-
-@end
-
-void AndroidDatabaseAbstractWindowedCursor_init(AndroidDatabaseAbstractWindowedCursor *self) {
-  AndroidDatabaseAbstractCursor_init(self);
-}
-
-IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseAbstractWindowedCursor__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseAbstractWindowedCursor)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCharArrayBuffer.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCharArrayBuffer.h
deleted file mode 100644
index cf11ec0ea..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCharArrayBuffer.h
+++ /dev/null
@@ -1,54 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCharArrayBuffer")
-#ifdef RESTRICT_AndroidDatabaseCharArrayBuffer
-#define INCLUDE_ALL_AndroidDatabaseCharArrayBuffer 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCharArrayBuffer 1
-#endif
-#undef RESTRICT_AndroidDatabaseCharArrayBuffer
-
-#if !defined (AndroidDatabaseCharArrayBuffer_) && (INCLUDE_ALL_AndroidDatabaseCharArrayBuffer || defined(INCLUDE_AndroidDatabaseCharArrayBuffer))
-#define AndroidDatabaseCharArrayBuffer_
-
-@class IOSCharArray;
-
-@interface AndroidDatabaseCharArrayBuffer : NSObject {
- @public
-  IOSCharArray *data_;
-  jint sizeCopied_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithCharArray:(IOSCharArray *)buf;
-
-- (instancetype)initWithInt:(jint)size;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCharArrayBuffer)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseCharArrayBuffer, data_, IOSCharArray *)
-
-FOUNDATION_EXPORT void AndroidDatabaseCharArrayBuffer_initWithInt_(AndroidDatabaseCharArrayBuffer *self, jint size);
-
-FOUNDATION_EXPORT AndroidDatabaseCharArrayBuffer *new_AndroidDatabaseCharArrayBuffer_initWithInt_(jint size) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCharArrayBuffer *create_AndroidDatabaseCharArrayBuffer_initWithInt_(jint size);
-
-FOUNDATION_EXPORT void AndroidDatabaseCharArrayBuffer_initWithCharArray_(AndroidDatabaseCharArrayBuffer *self, IOSCharArray *buf);
-
-FOUNDATION_EXPORT AndroidDatabaseCharArrayBuffer *new_AndroidDatabaseCharArrayBuffer_initWithCharArray_(IOSCharArray *buf) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCharArrayBuffer *create_AndroidDatabaseCharArrayBuffer_initWithCharArray_(IOSCharArray *buf);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCharArrayBuffer)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCharArrayBuffer")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCharArrayBuffer.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCharArrayBuffer.m
deleted file mode 100644
index 06297146e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCharArrayBuffer.m
+++ /dev/null
@@ -1,73 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCharArrayBuffer.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseCharArrayBuffer
-
-- (instancetype)initWithInt:(jint)size {
-  AndroidDatabaseCharArrayBuffer_initWithInt_(self, size);
-  return self;
-}
-
-- (instancetype)initWithCharArray:(IOSCharArray *)buf {
-  AndroidDatabaseCharArrayBuffer_initWithCharArray_(self, buf);
-  return self;
-}
-
-- (void)dealloc {
-  RELEASE_(data_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithInt:);
-  methods[1].selector = @selector(initWithCharArray:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "data_", "[C", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "sizeCopied_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "I", "[C" };
-  static const J2ObjcClassInfo _AndroidDatabaseCharArrayBuffer = { "CharArrayBuffer", "android.database", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCharArrayBuffer;
-}
-
-@end
-
-void AndroidDatabaseCharArrayBuffer_initWithInt_(AndroidDatabaseCharArrayBuffer *self, jint size) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->data_, [IOSCharArray newArrayWithLength:size]);
-}
-
-AndroidDatabaseCharArrayBuffer *new_AndroidDatabaseCharArrayBuffer_initWithInt_(jint size) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCharArrayBuffer, initWithInt_, size)
-}
-
-AndroidDatabaseCharArrayBuffer *create_AndroidDatabaseCharArrayBuffer_initWithInt_(jint size) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCharArrayBuffer, initWithInt_, size)
-}
-
-void AndroidDatabaseCharArrayBuffer_initWithCharArray_(AndroidDatabaseCharArrayBuffer *self, IOSCharArray *buf) {
-  NSObject_init(self);
-  JreStrongAssign(&self->data_, buf);
-}
-
-AndroidDatabaseCharArrayBuffer *new_AndroidDatabaseCharArrayBuffer_initWithCharArray_(IOSCharArray *buf) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCharArrayBuffer, initWithCharArray_, buf)
-}
-
-AndroidDatabaseCharArrayBuffer *create_AndroidDatabaseCharArrayBuffer_initWithCharArray_(IOSCharArray *buf) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCharArrayBuffer, initWithCharArray_, buf)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCharArrayBuffer)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursor.h
deleted file mode 100644
index 3b553251b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursor.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCrossProcessCursor")
-#ifdef RESTRICT_AndroidDatabaseCrossProcessCursor
-#define INCLUDE_ALL_AndroidDatabaseCrossProcessCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCrossProcessCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseCrossProcessCursor
-
-#if !defined (AndroidDatabaseCrossProcessCursor_) && (INCLUDE_ALL_AndroidDatabaseCrossProcessCursor || defined(INCLUDE_AndroidDatabaseCrossProcessCursor))
-#define AndroidDatabaseCrossProcessCursor_
-
-#define RESTRICT_AndroidDatabaseCursor 1
-#define INCLUDE_AndroidDatabaseCursor 1
-#include "AndroidDatabaseCursor.h"
-
-@class AndroidDatabaseCursorWindow;
-
-@protocol AndroidDatabaseCrossProcessCursor < AndroidDatabaseCursor, JavaObject >
-
-- (AndroidDatabaseCursorWindow *)getWindow;
-
-- (void)fillWindowWithInt:(jint)position
-withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCrossProcessCursor)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCrossProcessCursor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCrossProcessCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursor.m
deleted file mode 100644
index 8321e0ae3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursor.m
+++ /dev/null
@@ -1,33 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCrossProcessCursor.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidDatabaseCrossProcessCursor : NSObject
-
-@end
-
-@implementation AndroidDatabaseCrossProcessCursor
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidDatabaseCursorWindow;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(getWindow);
-  methods[1].selector = @selector(fillWindowWithInt:withAndroidDatabaseCursorWindow:);
-  methods[2].selector = @selector(onMoveWithInt:withInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "fillWindow", "ILAndroidDatabaseCursorWindow;", "onMove", "II" };
-  static const J2ObjcClassInfo _AndroidDatabaseCrossProcessCursor = { "CrossProcessCursor", "android.database", ptrTable, methods, NULL, 7, 0x609, 3, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCrossProcessCursor;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseCrossProcessCursor)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursorWrapper.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursorWrapper.h
deleted file mode 100644
index f107aa966..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursorWrapper.h
+++ /dev/null
@@ -1,57 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCrossProcessCursorWrapper")
-#ifdef RESTRICT_AndroidDatabaseCrossProcessCursorWrapper
-#define INCLUDE_ALL_AndroidDatabaseCrossProcessCursorWrapper 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCrossProcessCursorWrapper 1
-#endif
-#undef RESTRICT_AndroidDatabaseCrossProcessCursorWrapper
-
-#if !defined (AndroidDatabaseCrossProcessCursorWrapper_) && (INCLUDE_ALL_AndroidDatabaseCrossProcessCursorWrapper || defined(INCLUDE_AndroidDatabaseCrossProcessCursorWrapper))
-#define AndroidDatabaseCrossProcessCursorWrapper_
-
-#define RESTRICT_AndroidDatabaseCursorWrapper 1
-#define INCLUDE_AndroidDatabaseCursorWrapper 1
-#include "AndroidDatabaseCursorWrapper.h"
-
-#define RESTRICT_AndroidDatabaseCrossProcessCursor 1
-#define INCLUDE_AndroidDatabaseCrossProcessCursor 1
-#include "AndroidDatabaseCrossProcessCursor.h"
-
-@class AndroidDatabaseCursorWindow;
-@protocol AndroidDatabaseCursor;
-
-@interface AndroidDatabaseCrossProcessCursorWrapper : AndroidDatabaseCursorWrapper < AndroidDatabaseCrossProcessCursor >
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-- (void)fillWindowWithInt:(jint)position
-withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;
-
-- (AndroidDatabaseCursorWindow *)getWindow;
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCrossProcessCursorWrapper)
-
-FOUNDATION_EXPORT void AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(AndroidDatabaseCrossProcessCursorWrapper *self, id<AndroidDatabaseCursor> cursor);
-
-FOUNDATION_EXPORT AndroidDatabaseCrossProcessCursorWrapper *new_AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCrossProcessCursorWrapper *create_AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCrossProcessCursorWrapper)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCrossProcessCursorWrapper")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursorWrapper.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursorWrapper.m
deleted file mode 100644
index 2f0c34f2c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCrossProcessCursorWrapper.m
+++ /dev/null
@@ -1,81 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCrossProcessCursor.h"
-#include "AndroidDatabaseCrossProcessCursorWrapper.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseCursorWrapper.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseCrossProcessCursorWrapper
-
-- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-  AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(self, cursor);
-  return self;
-}
-
-- (void)fillWindowWithInt:(jint)position
-withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window {
-  if ([AndroidDatabaseCrossProcessCursor_class_() isInstance:mCursor_]) {
-    id<AndroidDatabaseCrossProcessCursor> crossProcessCursor = (id<AndroidDatabaseCrossProcessCursor>) cast_check(mCursor_, AndroidDatabaseCrossProcessCursor_class_());
-    [((id<AndroidDatabaseCrossProcessCursor>) nil_chk(crossProcessCursor)) fillWindowWithInt:position withAndroidDatabaseCursorWindow:window];
-    return;
-  }
-  AndroidDatabaseDatabaseUtils_cursorFillWindowWithAndroidDatabaseCursor_withInt_withAndroidDatabaseCursorWindow_(mCursor_, position, window);
-}
-
-- (AndroidDatabaseCursorWindow *)getWindow {
-  if ([AndroidDatabaseCrossProcessCursor_class_() isInstance:mCursor_]) {
-    id<AndroidDatabaseCrossProcessCursor> crossProcessCursor = (id<AndroidDatabaseCrossProcessCursor>) cast_check(mCursor_, AndroidDatabaseCrossProcessCursor_class_());
-    return [((id<AndroidDatabaseCrossProcessCursor>) nil_chk(crossProcessCursor)) getWindow];
-  }
-  return nil;
-}
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition {
-  if ([AndroidDatabaseCrossProcessCursor_class_() isInstance:mCursor_]) {
-    id<AndroidDatabaseCrossProcessCursor> crossProcessCursor = (id<AndroidDatabaseCrossProcessCursor>) cast_check(mCursor_, AndroidDatabaseCrossProcessCursor_class_());
-    return [((id<AndroidDatabaseCrossProcessCursor>) nil_chk(crossProcessCursor)) onMoveWithInt:oldPosition withInt:newPosition];
-  }
-  return true;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursorWindow;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseCursor:);
-  methods[1].selector = @selector(fillWindowWithInt:withAndroidDatabaseCursorWindow:);
-  methods[2].selector = @selector(getWindow);
-  methods[3].selector = @selector(onMoveWithInt:withInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LAndroidDatabaseCursor;", "fillWindow", "ILAndroidDatabaseCursorWindow;", "onMove", "II" };
-  static const J2ObjcClassInfo _AndroidDatabaseCrossProcessCursorWrapper = { "CrossProcessCursorWrapper", "android.database", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCrossProcessCursorWrapper;
-}
-
-@end
-
-void AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(AndroidDatabaseCrossProcessCursorWrapper *self, id<AndroidDatabaseCursor> cursor) {
-  AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(self, cursor);
-}
-
-AndroidDatabaseCrossProcessCursorWrapper *new_AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCrossProcessCursorWrapper, initWithAndroidDatabaseCursor_, cursor)
-}
-
-AndroidDatabaseCrossProcessCursorWrapper *create_AndroidDatabaseCrossProcessCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCrossProcessCursorWrapper, initWithAndroidDatabaseCursor_, cursor)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCrossProcessCursorWrapper)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursor.h
deleted file mode 100644
index c03d3d9d3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursor.h
+++ /dev/null
@@ -1,131 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCursor")
-#ifdef RESTRICT_AndroidDatabaseCursor
-#define INCLUDE_ALL_AndroidDatabaseCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseCursor
-
-#if !defined (AndroidDatabaseCursor_) && (INCLUDE_ALL_AndroidDatabaseCursor || defined(INCLUDE_AndroidDatabaseCursor))
-#define AndroidDatabaseCursor_
-
-#define RESTRICT_JavaIoCloseable 1
-#define INCLUDE_JavaIoCloseable 1
-#include "java/io/Closeable.h"
-
-@class AndroidDatabaseCharArrayBuffer;
-@class AndroidDatabaseDataSetObserver;
-@class AndroidOsBundle;
-@class IOSByteArray;
-@class IOSObjectArray;
-
-@protocol AndroidDatabaseCursor < JavaIoCloseable, JavaObject >
-
-- (jint)getCount;
-
-- (jint)getPosition;
-
-- (jboolean)moveWithInt:(jint)offset;
-
-- (jboolean)moveToPositionWithInt:(jint)position;
-
-- (jboolean)moveToFirst;
-
-- (jboolean)moveToLast;
-
-- (jboolean)moveToNext;
-
-- (jboolean)moveToPrevious;
-
-- (jboolean)isFirst;
-
-- (jboolean)isLast;
-
-- (jboolean)isBeforeFirst;
-
-- (jboolean)isAfterLast;
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName;
-
-- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName;
-
-- (NSString *)getColumnNameWithInt:(jint)columnIndex;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (jint)getColumnCount;
-
-- (IOSByteArray *)getBlobWithInt:(jint)columnIndex;
-
-- (NSString *)getStringWithInt:(jint)columnIndex;
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;
-
-- (jshort)getShortWithInt:(jint)columnIndex;
-
-- (jint)getIntWithInt:(jint)columnIndex;
-
-- (jlong)getLongWithInt:(jint)columnIndex;
-
-- (jfloat)getFloatWithInt:(jint)columnIndex;
-
-- (jdouble)getDoubleWithInt:(jint)columnIndex;
-
-- (jint)getTypeWithInt:(jint)columnIndex;
-
-- (jboolean)isNullWithInt:(jint)columnIndex;
-
-- (void)deactivate;
-
-- (jboolean)requery;
-
-- (void)close;
-
-- (jboolean)isClosed;
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-- (jboolean)getWantsAllOnMoveCalls;
-
-- (AndroidOsBundle *)getExtras;
-
-- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursor)
-
-inline jint AndroidDatabaseCursor_get_FIELD_TYPE_NULL();
-#define AndroidDatabaseCursor_FIELD_TYPE_NULL 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseCursor, FIELD_TYPE_NULL, jint)
-
-inline jint AndroidDatabaseCursor_get_FIELD_TYPE_INTEGER();
-#define AndroidDatabaseCursor_FIELD_TYPE_INTEGER 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseCursor, FIELD_TYPE_INTEGER, jint)
-
-inline jint AndroidDatabaseCursor_get_FIELD_TYPE_FLOAT();
-#define AndroidDatabaseCursor_FIELD_TYPE_FLOAT 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseCursor, FIELD_TYPE_FLOAT, jint)
-
-inline jint AndroidDatabaseCursor_get_FIELD_TYPE_STRING();
-#define AndroidDatabaseCursor_FIELD_TYPE_STRING 3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseCursor, FIELD_TYPE_STRING, jint)
-
-inline jint AndroidDatabaseCursor_get_FIELD_TYPE_BLOB();
-#define AndroidDatabaseCursor_FIELD_TYPE_BLOB 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseCursor, FIELD_TYPE_BLOB, jint)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursor.m
deleted file mode 100644
index 2c540d36f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursor.m
+++ /dev/null
@@ -1,116 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursor.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-
-@interface AndroidDatabaseCursor : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursor__Annotations$0();
-
-@implementation AndroidDatabaseCursor
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, 3, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, 5, 4, 6, -1, -1, -1 },
-    { NULL, "LNSString;", 0x401, 7, 1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[B", 0x401, 8, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x401, 9, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 10, 11, -1, -1, -1, -1 },
-    { NULL, "S", 0x401, 12, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, 13, 1, -1, -1, -1, -1 },
-    { NULL, "J", 0x401, 14, 1, -1, -1, -1, -1 },
-    { NULL, "F", 0x401, 15, 1, -1, -1, -1, -1 },
-    { NULL, "D", 0x401, 16, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x401, 17, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, 18, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, 19, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 20, 21, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 22, 21, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x401, 23, 24, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(getCount);
-  methods[1].selector = @selector(getPosition);
-  methods[2].selector = @selector(moveWithInt:);
-  methods[3].selector = @selector(moveToPositionWithInt:);
-  methods[4].selector = @selector(moveToFirst);
-  methods[5].selector = @selector(moveToLast);
-  methods[6].selector = @selector(moveToNext);
-  methods[7].selector = @selector(moveToPrevious);
-  methods[8].selector = @selector(isFirst);
-  methods[9].selector = @selector(isLast);
-  methods[10].selector = @selector(isBeforeFirst);
-  methods[11].selector = @selector(isAfterLast);
-  methods[12].selector = @selector(getColumnIndexWithNSString:);
-  methods[13].selector = @selector(getColumnIndexOrThrowWithNSString:);
-  methods[14].selector = @selector(getColumnNameWithInt:);
-  methods[15].selector = @selector(getColumnNames);
-  methods[16].selector = @selector(getColumnCount);
-  methods[17].selector = @selector(getBlobWithInt:);
-  methods[18].selector = @selector(getStringWithInt:);
-  methods[19].selector = @selector(copyStringToBufferWithInt:withAndroidDatabaseCharArrayBuffer:);
-  methods[20].selector = @selector(getShortWithInt:);
-  methods[21].selector = @selector(getIntWithInt:);
-  methods[22].selector = @selector(getLongWithInt:);
-  methods[23].selector = @selector(getFloatWithInt:);
-  methods[24].selector = @selector(getDoubleWithInt:);
-  methods[25].selector = @selector(getTypeWithInt:);
-  methods[26].selector = @selector(isNullWithInt:);
-  methods[27].selector = @selector(deactivate);
-  methods[28].selector = @selector(requery);
-  methods[29].selector = @selector(close);
-  methods[30].selector = @selector(isClosed);
-  methods[31].selector = @selector(registerDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[32].selector = @selector(unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[33].selector = @selector(getWantsAllOnMoveCalls);
-  methods[34].selector = @selector(getExtras);
-  methods[35].selector = @selector(respondWithAndroidOsBundle:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "FIELD_TYPE_NULL", "I", .constantValue.asInt = AndroidDatabaseCursor_FIELD_TYPE_NULL, 0x19, -1, -1, -1, -1 },
-    { "FIELD_TYPE_INTEGER", "I", .constantValue.asInt = AndroidDatabaseCursor_FIELD_TYPE_INTEGER, 0x19, -1, -1, -1, -1 },
-    { "FIELD_TYPE_FLOAT", "I", .constantValue.asInt = AndroidDatabaseCursor_FIELD_TYPE_FLOAT, 0x19, -1, -1, -1, -1 },
-    { "FIELD_TYPE_STRING", "I", .constantValue.asInt = AndroidDatabaseCursor_FIELD_TYPE_STRING, 0x19, -1, -1, -1, -1 },
-    { "FIELD_TYPE_BLOB", "I", .constantValue.asInt = AndroidDatabaseCursor_FIELD_TYPE_BLOB, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "move", "I", "moveToPosition", "getColumnIndex", "LNSString;", "getColumnIndexOrThrow", "LJavaLangIllegalArgumentException;", "getColumnName", "getBlob", "getString", "copyStringToBuffer", "ILAndroidDatabaseCharArrayBuffer;", "getShort", "getInt", "getLong", "getFloat", "getDouble", "getType", "isNull", (void *)&AndroidDatabaseCursor__Annotations$0, "registerDataSetObserver", "LAndroidDatabaseDataSetObserver;", "unregisterDataSetObserver", "respond", "LAndroidOsBundle;" };
-  static const J2ObjcClassInfo _AndroidDatabaseCursor = { "Cursor", "android.database", ptrTable, methods, fields, 7, 0x609, 36, 5, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCursor;
-}
-
-@end
-
-IOSObjectArray *AndroidDatabaseCursor__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseCursor)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorIndexOutOfBoundsException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorIndexOutOfBoundsException.h
deleted file mode 100644
index 41e1f203c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorIndexOutOfBoundsException.h
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCursorIndexOutOfBoundsException")
-#ifdef RESTRICT_AndroidDatabaseCursorIndexOutOfBoundsException
-#define INCLUDE_ALL_AndroidDatabaseCursorIndexOutOfBoundsException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCursorIndexOutOfBoundsException 1
-#endif
-#undef RESTRICT_AndroidDatabaseCursorIndexOutOfBoundsException
-
-#if !defined (AndroidDatabaseCursorIndexOutOfBoundsException_) && (INCLUDE_ALL_AndroidDatabaseCursorIndexOutOfBoundsException || defined(INCLUDE_AndroidDatabaseCursorIndexOutOfBoundsException))
-#define AndroidDatabaseCursorIndexOutOfBoundsException_
-
-#define RESTRICT_JavaLangIndexOutOfBoundsException 1
-#define INCLUDE_JavaLangIndexOutOfBoundsException 1
-#include "java/lang/IndexOutOfBoundsException.h"
-
-@interface AndroidDatabaseCursorIndexOutOfBoundsException : JavaLangIndexOutOfBoundsException
-
-#pragma mark Public
-
-- (instancetype)initWithInt:(jint)index
-                    withInt:(jint)size;
-
-- (instancetype)initWithNSString:(NSString *)message;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursorIndexOutOfBoundsException)
-
-FOUNDATION_EXPORT void AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(AndroidDatabaseCursorIndexOutOfBoundsException *self, jint index, jint size);
-
-FOUNDATION_EXPORT AndroidDatabaseCursorIndexOutOfBoundsException *new_AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(jint index, jint size) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCursorIndexOutOfBoundsException *create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(jint index, jint size);
-
-FOUNDATION_EXPORT void AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(AndroidDatabaseCursorIndexOutOfBoundsException *self, NSString *message);
-
-FOUNDATION_EXPORT AndroidDatabaseCursorIndexOutOfBoundsException *new_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCursorIndexOutOfBoundsException *create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(NSString *message);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorIndexOutOfBoundsException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCursorIndexOutOfBoundsException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorIndexOutOfBoundsException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorIndexOutOfBoundsException.m
deleted file mode 100644
index 67fcb20d3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorIndexOutOfBoundsException.m
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursorIndexOutOfBoundsException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IndexOutOfBoundsException.h"
-
-@implementation AndroidDatabaseCursorIndexOutOfBoundsException
-
-- (instancetype)initWithInt:(jint)index
-                    withInt:(jint)size {
-  AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(self, index, size);
-  return self;
-}
-
-- (instancetype)initWithNSString:(NSString *)message {
-  AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(self, message);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithInt:withInt:);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "II", "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseCursorIndexOutOfBoundsException = { "CursorIndexOutOfBoundsException", "android.database", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCursorIndexOutOfBoundsException;
-}
-
-@end
-
-void AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(AndroidDatabaseCursorIndexOutOfBoundsException *self, jint index, jint size) {
-  JavaLangIndexOutOfBoundsException_initWithNSString_(self, JreStrcat("$I$I", @"Index ", index, @" requested, with a size of ", size));
-}
-
-AndroidDatabaseCursorIndexOutOfBoundsException *new_AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(jint index, jint size) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCursorIndexOutOfBoundsException, initWithInt_withInt_, index, size)
-}
-
-AndroidDatabaseCursorIndexOutOfBoundsException *create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithInt_withInt_(jint index, jint size) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorIndexOutOfBoundsException, initWithInt_withInt_, index, size)
-}
-
-void AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(AndroidDatabaseCursorIndexOutOfBoundsException *self, NSString *message) {
-  JavaLangIndexOutOfBoundsException_initWithNSString_(self, message);
-}
-
-AndroidDatabaseCursorIndexOutOfBoundsException *new_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(NSString *message) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCursorIndexOutOfBoundsException, initWithNSString_, message)
-}
-
-AndroidDatabaseCursorIndexOutOfBoundsException *create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(NSString *message) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorIndexOutOfBoundsException, initWithNSString_, message)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCursorIndexOutOfBoundsException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindow.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindow.h
deleted file mode 100644
index e26bd849c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindow.h
+++ /dev/null
@@ -1,144 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCursorWindow")
-#ifdef RESTRICT_AndroidDatabaseCursorWindow
-#define INCLUDE_ALL_AndroidDatabaseCursorWindow 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCursorWindow 1
-#endif
-#undef RESTRICT_AndroidDatabaseCursorWindow
-
-#if !defined (AndroidDatabaseCursorWindow_) && (INCLUDE_ALL_AndroidDatabaseCursorWindow || defined(INCLUDE_AndroidDatabaseCursorWindow))
-#define AndroidDatabaseCursorWindow_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteClosable 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteClosable 1
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-
-@class AndroidDatabaseCharArrayBuffer;
-@class IOSByteArray;
-
-@interface AndroidDatabaseCursorWindow : AndroidDatabaseSqliteSQLiteClosable {
- @public
-  id mWindowPtr_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithBoolean:(jboolean)localWindow;
-
-- (instancetype)initWithNSString:(NSString *)name;
-
-- (jboolean)allocRow OBJC_METHOD_FAMILY_NONE;
-
-- (void)clear;
-
-- (void)copyStringToBufferWithInt:(jint)row
-                          withInt:(jint)column
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;
-
-- (void)freeLastRow;
-
-- (IOSByteArray *)getBlobWithInt:(jint)row
-                         withInt:(jint)column;
-
-- (jdouble)getDoubleWithInt:(jint)row
-                    withInt:(jint)column;
-
-- (jfloat)getFloatWithInt:(jint)row
-                  withInt:(jint)column;
-
-- (jint)getIntWithInt:(jint)row
-              withInt:(jint)column;
-
-- (jlong)getLongWithInt:(jint)row
-                withInt:(jint)column;
-
-- (NSString *)getName;
-
-- (jint)getNumRows;
-
-- (jshort)getShortWithInt:(jint)row
-                  withInt:(jint)column;
-
-- (jint)getStartPosition;
-
-- (NSString *)getStringWithInt:(jint)row
-                       withInt:(jint)column;
-
-- (jint)getTypeWithInt:(jint)row
-               withInt:(jint)column;
-
-- (jboolean)isBlobWithInt:(jint)row
-                  withInt:(jint)column;
-
-- (jboolean)isFloatWithInt:(jint)row
-                   withInt:(jint)column;
-
-- (jboolean)isLongWithInt:(jint)row
-                  withInt:(jint)column;
-
-- (jboolean)isNullWithInt:(jint)row
-                  withInt:(jint)column;
-
-- (jboolean)isStringWithInt:(jint)row
-                    withInt:(jint)column;
-
-- (jboolean)putBlobWithByteArray:(IOSByteArray *)value
-                         withInt:(jint)row
-                         withInt:(jint)column;
-
-- (jboolean)putDoubleWithDouble:(jdouble)value
-                        withInt:(jint)row
-                        withInt:(jint)column;
-
-- (jboolean)putLongWithLong:(jlong)value
-                    withInt:(jint)row
-                    withInt:(jint)column;
-
-- (jboolean)putNullWithInt:(jint)row
-                   withInt:(jint)column;
-
-- (jboolean)putStringWithNSString:(NSString *)value
-                          withInt:(jint)row
-                          withInt:(jint)column;
-
-- (jboolean)setNumColumnsWithInt:(jint)columnNum;
-
-- (void)setStartPositionWithInt:(jint)pos;
-
-- (NSString *)description;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-- (void)onAllReferencesReleased;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursorWindow)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseCursorWindow, mWindowPtr_, id)
-
-FOUNDATION_EXPORT void AndroidDatabaseCursorWindow_initWithNSString_(AndroidDatabaseCursorWindow *self, NSString *name);
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWindow *new_AndroidDatabaseCursorWindow_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWindow *create_AndroidDatabaseCursorWindow_initWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT void AndroidDatabaseCursorWindow_initWithBoolean_(AndroidDatabaseCursorWindow *self, jboolean localWindow);
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWindow *new_AndroidDatabaseCursorWindow_initWithBoolean_(jboolean localWindow) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWindow *create_AndroidDatabaseCursorWindow_initWithBoolean_(jboolean localWindow);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorWindow)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCursorWindow")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindow.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindow.m
deleted file mode 100644
index 500e0e9f4..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindow.m
+++ /dev/null
@@ -1,809 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCharArrayBuffer.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseCursorWindowAllocationException.h"
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "dalvik/system/CloseGuard.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-
-#import "CursorWindowNative.h"
-
-@interface AndroidDatabaseCursorWindow () {
- @public
-  jint mStartPos_;
-  NSString *mName_;
-  DalvikSystemCloseGuard *mCloseGuard_;
-}
-
-+ (id)nativeCreateWithNSString:(NSString *)name
-                       withInt:(jint)cursorWindowSize;
-
-+ (void)nativeDisposeWithId:(id)windowPtr;
-
-+ (void)nativeClearWithId:(id)windowPtr;
-
-+ (jint)nativeGetNumRowsWithId:(id)windowPtr;
-
-+ (jboolean)nativeSetNumColumnsWithId:(id)windowPtr
-                              withInt:(jint)columnNum;
-
-+ (jboolean)nativeAllocRowWithId:(id)windowPtr;
-
-+ (void)nativeFreeLastRowWithId:(id)windowPtr;
-
-+ (jint)nativeGetTypeWithId:(id)windowPtr
-                    withInt:(jint)row
-                    withInt:(jint)column;
-
-+ (IOSByteArray *)nativeGetBlobWithId:(id)windowPtr
-                              withInt:(jint)row
-                              withInt:(jint)column;
-
-+ (NSString *)nativeGetStringWithId:(id)windowPtr
-                            withInt:(jint)row
-                            withInt:(jint)column;
-
-+ (jlong)nativeGetLongWithId:(id)windowPtr
-                     withInt:(jint)row
-                     withInt:(jint)column;
-
-+ (jdouble)nativeGetDoubleWithId:(id)windowPtr
-                         withInt:(jint)row
-                         withInt:(jint)column;
-
-+ (jboolean)nativePutBlobWithId:(id)windowPtr
-                  withByteArray:(IOSByteArray *)value
-                        withInt:(jint)row
-                        withInt:(jint)column;
-
-+ (jboolean)nativePutStringWithId:(id)windowPtr
-                     withNSString:(NSString *)value
-                          withInt:(jint)row
-                          withInt:(jint)column;
-
-+ (jboolean)nativePutLongWithId:(id)windowPtr
-                       withLong:(jlong)value
-                        withInt:(jint)row
-                        withInt:(jint)column;
-
-+ (jboolean)nativePutDoubleWithId:(id)windowPtr
-                       withDouble:(jdouble)value
-                          withInt:(jint)row
-                          withInt:(jint)column;
-
-+ (jboolean)nativePutNullWithId:(id)windowPtr
-                        withInt:(jint)row
-                        withInt:(jint)column;
-
-- (void)dispose;
-
-- (NSString *)printStats;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseCursorWindow, mName_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseCursorWindow, mCloseGuard_, DalvikSystemCloseGuard *)
-
-inline NSString *AndroidDatabaseCursorWindow_get_STATS_TAG();
-static NSString *AndroidDatabaseCursorWindow_STATS_TAG = @"CursorWindowStats";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseCursorWindow, STATS_TAG, NSString *)
-
-inline jint AndroidDatabaseCursorWindow_get_sCursorWindowSize();
-inline jint AndroidDatabaseCursorWindow_set_sCursorWindowSize(jint value);
-inline jint *AndroidDatabaseCursorWindow_getRef_sCursorWindowSize();
-static jint AndroidDatabaseCursorWindow_sCursorWindowSize = -1;
-J2OBJC_STATIC_FIELD_PRIMITIVE(AndroidDatabaseCursorWindow, sCursorWindowSize, jint)
-
-__attribute__((unused)) static id AndroidDatabaseCursorWindow_nativeCreateWithNSString_withInt_(NSString *name, jint cursorWindowSize);
-
-__attribute__((unused)) static void AndroidDatabaseCursorWindow_nativeDisposeWithId_(id windowPtr);
-
-__attribute__((unused)) static void AndroidDatabaseCursorWindow_nativeClearWithId_(id windowPtr);
-
-__attribute__((unused)) static jint AndroidDatabaseCursorWindow_nativeGetNumRowsWithId_(id windowPtr);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativeSetNumColumnsWithId_withInt_(id windowPtr, jint columnNum);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativeAllocRowWithId_(id windowPtr);
-
-__attribute__((unused)) static void AndroidDatabaseCursorWindow_nativeFreeLastRowWithId_(id windowPtr);
-
-__attribute__((unused)) static jint AndroidDatabaseCursorWindow_nativeGetTypeWithId_withInt_withInt_(id windowPtr, jint row, jint column);
-
-__attribute__((unused)) static IOSByteArray *AndroidDatabaseCursorWindow_nativeGetBlobWithId_withInt_withInt_(id windowPtr, jint row, jint column);
-
-__attribute__((unused)) static NSString *AndroidDatabaseCursorWindow_nativeGetStringWithId_withInt_withInt_(id windowPtr, jint row, jint column);
-
-__attribute__((unused)) static jlong AndroidDatabaseCursorWindow_nativeGetLongWithId_withInt_withInt_(id windowPtr, jint row, jint column);
-
-__attribute__((unused)) static jdouble AndroidDatabaseCursorWindow_nativeGetDoubleWithId_withInt_withInt_(id windowPtr, jint row, jint column);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(id windowPtr, IOSByteArray *value, jint row, jint column);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(id windowPtr, NSString *value, jint row, jint column);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(id windowPtr, jlong value, jint row, jint column);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(id windowPtr, jdouble value, jint row, jint column);
-
-__attribute__((unused)) static jboolean AndroidDatabaseCursorWindow_nativePutNullWithId_withInt_withInt_(id windowPtr, jint row, jint column);
-
-__attribute__((unused)) static void AndroidDatabaseCursorWindow_dispose(AndroidDatabaseCursorWindow *self);
-
-__attribute__((unused)) static NSString *AndroidDatabaseCursorWindow_printStats(AndroidDatabaseCursorWindow *self);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$5();
-
-@implementation AndroidDatabaseCursorWindow
-
-+ (id)nativeCreateWithNSString:(NSString *)name
-                       withInt:(jint)cursorWindowSize {
-  return AndroidDatabaseCursorWindow_nativeCreateWithNSString_withInt_(name, cursorWindowSize);
-}
-
-+ (void)nativeDisposeWithId:(id)windowPtr {
-  AndroidDatabaseCursorWindow_nativeDisposeWithId_(windowPtr);
-}
-
-+ (void)nativeClearWithId:(id)windowPtr {
-  AndroidDatabaseCursorWindow_nativeClearWithId_(windowPtr);
-}
-
-+ (jint)nativeGetNumRowsWithId:(id)windowPtr {
-  return AndroidDatabaseCursorWindow_nativeGetNumRowsWithId_(windowPtr);
-}
-
-+ (jboolean)nativeSetNumColumnsWithId:(id)windowPtr
-                              withInt:(jint)columnNum {
-  return AndroidDatabaseCursorWindow_nativeSetNumColumnsWithId_withInt_(windowPtr, columnNum);
-}
-
-+ (jboolean)nativeAllocRowWithId:(id)windowPtr {
-  return AndroidDatabaseCursorWindow_nativeAllocRowWithId_(windowPtr);
-}
-
-+ (void)nativeFreeLastRowWithId:(id)windowPtr {
-  AndroidDatabaseCursorWindow_nativeFreeLastRowWithId_(windowPtr);
-}
-
-+ (jint)nativeGetTypeWithId:(id)windowPtr
-                    withInt:(jint)row
-                    withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativeGetTypeWithId_withInt_withInt_(windowPtr, row, column);
-}
-
-+ (IOSByteArray *)nativeGetBlobWithId:(id)windowPtr
-                              withInt:(jint)row
-                              withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativeGetBlobWithId_withInt_withInt_(windowPtr, row, column);
-}
-
-+ (NSString *)nativeGetStringWithId:(id)windowPtr
-                            withInt:(jint)row
-                            withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativeGetStringWithId_withInt_withInt_(windowPtr, row, column);
-}
-
-+ (jlong)nativeGetLongWithId:(id)windowPtr
-                     withInt:(jint)row
-                     withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativeGetLongWithId_withInt_withInt_(windowPtr, row, column);
-}
-
-+ (jdouble)nativeGetDoubleWithId:(id)windowPtr
-                         withInt:(jint)row
-                         withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativeGetDoubleWithId_withInt_withInt_(windowPtr, row, column);
-}
-
-+ (jboolean)nativePutBlobWithId:(id)windowPtr
-                  withByteArray:(IOSByteArray *)value
-                        withInt:(jint)row
-                        withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(windowPtr, value, row, column);
-}
-
-+ (jboolean)nativePutStringWithId:(id)windowPtr
-                     withNSString:(NSString *)value
-                          withInt:(jint)row
-                          withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(windowPtr, value, row, column);
-}
-
-+ (jboolean)nativePutLongWithId:(id)windowPtr
-                       withLong:(jlong)value
-                        withInt:(jint)row
-                        withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(windowPtr, value, row, column);
-}
-
-+ (jboolean)nativePutDoubleWithId:(id)windowPtr
-                       withDouble:(jdouble)value
-                          withInt:(jint)row
-                          withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(windowPtr, value, row, column);
-}
-
-+ (jboolean)nativePutNullWithId:(id)windowPtr
-                        withInt:(jint)row
-                        withInt:(jint)column {
-  return AndroidDatabaseCursorWindow_nativePutNullWithId_withInt_withInt_(windowPtr, row, column);
-}
-
-- (instancetype)initWithNSString:(NSString *)name {
-  AndroidDatabaseCursorWindow_initWithNSString_(self, name);
-  return self;
-}
-
-- (instancetype)initWithBoolean:(jboolean)localWindow {
-  AndroidDatabaseCursorWindow_initWithBoolean_(self, localWindow);
-  return self;
-}
-
-- (void)java_finalize {
-  @try {
-    if (mCloseGuard_ != nil) {
-      [mCloseGuard_ warnIfOpen];
-    }
-    AndroidDatabaseCursorWindow_dispose(self);
-  }
-  @finally {
-    [super java_finalize];
-  }
-}
-
-- (void)dispose {
-  AndroidDatabaseCursorWindow_dispose(self);
-}
-
-- (NSString *)getName {
-  return mName_;
-}
-
-- (void)clear {
-  [self acquireReference];
-  @try {
-    mStartPos_ = 0;
-    AndroidDatabaseCursorWindow_nativeClearWithId_(mWindowPtr_);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jint)getStartPosition {
-  return mStartPos_;
-}
-
-- (void)setStartPositionWithInt:(jint)pos {
-  mStartPos_ = pos;
-}
-
-- (jint)getNumRows {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeGetNumRowsWithId_(mWindowPtr_);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)setNumColumnsWithInt:(jint)columnNum {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeSetNumColumnsWithId_withInt_(mWindowPtr_, columnNum);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)allocRow {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeAllocRowWithId_(mWindowPtr_);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (void)freeLastRow {
-  [self acquireReference];
-  @try {
-    AndroidDatabaseCursorWindow_nativeFreeLastRowWithId_(mWindowPtr_);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)isNullWithInt:(jint)row
-                  withInt:(jint)column {
-  return [self getTypeWithInt:row withInt:column] == AndroidDatabaseCursor_FIELD_TYPE_NULL;
-}
-
-- (jboolean)isBlobWithInt:(jint)row
-                  withInt:(jint)column {
-  jint type = [self getTypeWithInt:row withInt:column];
-  return type == AndroidDatabaseCursor_FIELD_TYPE_BLOB || type == AndroidDatabaseCursor_FIELD_TYPE_NULL;
-}
-
-- (jboolean)isLongWithInt:(jint)row
-                  withInt:(jint)column {
-  return [self getTypeWithInt:row withInt:column] == AndroidDatabaseCursor_FIELD_TYPE_INTEGER;
-}
-
-- (jboolean)isFloatWithInt:(jint)row
-                   withInt:(jint)column {
-  return [self getTypeWithInt:row withInt:column] == AndroidDatabaseCursor_FIELD_TYPE_FLOAT;
-}
-
-- (jboolean)isStringWithInt:(jint)row
-                    withInt:(jint)column {
-  jint type = [self getTypeWithInt:row withInt:column];
-  return type == AndroidDatabaseCursor_FIELD_TYPE_STRING || type == AndroidDatabaseCursor_FIELD_TYPE_NULL;
-}
-
-- (jint)getTypeWithInt:(jint)row
-               withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeGetTypeWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (IOSByteArray *)getBlobWithInt:(jint)row
-                         withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeGetBlobWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (NSString *)getStringWithInt:(jint)row
-                       withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeGetStringWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (void)copyStringToBufferWithInt:(jint)row
-                          withInt:(jint)column
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"copyStringToBuffer not supported yet");
-}
-
-- (jlong)getLongWithInt:(jint)row
-                withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeGetLongWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jdouble)getDoubleWithInt:(jint)row
-                    withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativeGetDoubleWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jshort)getShortWithInt:(jint)row
-                  withInt:(jint)column {
-  return (jshort) [self getLongWithInt:row withInt:column];
-}
-
-- (jint)getIntWithInt:(jint)row
-              withInt:(jint)column {
-  return (jint) [self getLongWithInt:row withInt:column];
-}
-
-- (jfloat)getFloatWithInt:(jint)row
-                  withInt:(jint)column {
-  return (jfloat) [self getDoubleWithInt:row withInt:column];
-}
-
-- (jboolean)putBlobWithByteArray:(IOSByteArray *)value
-                         withInt:(jint)row
-                         withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)putStringWithNSString:(NSString *)value
-                          withInt:(jint)row
-                          withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)putLongWithLong:(jlong)value
-                    withInt:(jint)row
-                    withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)putDoubleWithDouble:(jdouble)value
-                        withInt:(jint)row
-                        withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)putNullWithInt:(jint)row
-                   withInt:(jint)column {
-  [self acquireReference];
-  @try {
-    return AndroidDatabaseCursorWindow_nativePutNullWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (void)onAllReferencesReleased {
-  AndroidDatabaseCursorWindow_dispose(self);
-}
-
-- (NSString *)printStats {
-  return AndroidDatabaseCursorWindow_printStats(self);
-}
-
-- (NSString *)description {
-  return JreStrcat("$$@C", [self getName], @" {", mWindowPtr_, '}');
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseCursorWindow class]);
-  RELEASE_(mWindowPtr_);
-  RELEASE_(mName_);
-  RELEASE_(mCloseGuard_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSObject;", 0x10a, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 4, 3, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, 5, 3, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 6, 7, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 8, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 9, 3, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, 10, 11, -1, -1, -1, -1 },
-    { NULL, "[B", 0x10a, 12, 11, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x10a, 13, 11, -1, -1, -1, -1 },
-    { NULL, "J", 0x10a, 14, 11, -1, -1, -1, -1 },
-    { NULL, "D", 0x10a, 15, 11, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 16, 17, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 18, 19, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 20, 21, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 22, 23, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 24, 11, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 25, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 26, -1, -1, 27, -1 },
-    { NULL, "V", 0x4, 28, -1, 29, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 30, 31, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 32, 31, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 33, 34, -1, -1, 35, -1 },
-    { NULL, "Z", 0x1, 36, 34, -1, -1, 37, -1 },
-    { NULL, "Z", 0x1, 38, 34, -1, -1, 39, -1 },
-    { NULL, "Z", 0x1, 40, 34, -1, -1, 41, -1 },
-    { NULL, "Z", 0x1, 42, 34, -1, -1, 43, -1 },
-    { NULL, "I", 0x1, 44, 34, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 45, 34, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 46, 34, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 47, 48, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 49, 34, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 50, 34, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 51, 34, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 52, 34, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 53, 34, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 54, 55, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 56, 57, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 58, 59, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 60, 61, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 62, 34, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 63, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(nativeCreateWithNSString:withInt:);
-  methods[1].selector = @selector(nativeDisposeWithId:);
-  methods[2].selector = @selector(nativeClearWithId:);
-  methods[3].selector = @selector(nativeGetNumRowsWithId:);
-  methods[4].selector = @selector(nativeSetNumColumnsWithId:withInt:);
-  methods[5].selector = @selector(nativeAllocRowWithId:);
-  methods[6].selector = @selector(nativeFreeLastRowWithId:);
-  methods[7].selector = @selector(nativeGetTypeWithId:withInt:withInt:);
-  methods[8].selector = @selector(nativeGetBlobWithId:withInt:withInt:);
-  methods[9].selector = @selector(nativeGetStringWithId:withInt:withInt:);
-  methods[10].selector = @selector(nativeGetLongWithId:withInt:withInt:);
-  methods[11].selector = @selector(nativeGetDoubleWithId:withInt:withInt:);
-  methods[12].selector = @selector(nativePutBlobWithId:withByteArray:withInt:withInt:);
-  methods[13].selector = @selector(nativePutStringWithId:withNSString:withInt:withInt:);
-  methods[14].selector = @selector(nativePutLongWithId:withLong:withInt:withInt:);
-  methods[15].selector = @selector(nativePutDoubleWithId:withDouble:withInt:withInt:);
-  methods[16].selector = @selector(nativePutNullWithId:withInt:withInt:);
-  methods[17].selector = @selector(initWithNSString:);
-  methods[18].selector = @selector(initWithBoolean:);
-  methods[19].selector = @selector(java_finalize);
-  methods[20].selector = @selector(dispose);
-  methods[21].selector = @selector(getName);
-  methods[22].selector = @selector(clear);
-  methods[23].selector = @selector(getStartPosition);
-  methods[24].selector = @selector(setStartPositionWithInt:);
-  methods[25].selector = @selector(getNumRows);
-  methods[26].selector = @selector(setNumColumnsWithInt:);
-  methods[27].selector = @selector(allocRow);
-  methods[28].selector = @selector(freeLastRow);
-  methods[29].selector = @selector(isNullWithInt:withInt:);
-  methods[30].selector = @selector(isBlobWithInt:withInt:);
-  methods[31].selector = @selector(isLongWithInt:withInt:);
-  methods[32].selector = @selector(isFloatWithInt:withInt:);
-  methods[33].selector = @selector(isStringWithInt:withInt:);
-  methods[34].selector = @selector(getTypeWithInt:withInt:);
-  methods[35].selector = @selector(getBlobWithInt:withInt:);
-  methods[36].selector = @selector(getStringWithInt:withInt:);
-  methods[37].selector = @selector(copyStringToBufferWithInt:withInt:withAndroidDatabaseCharArrayBuffer:);
-  methods[38].selector = @selector(getLongWithInt:withInt:);
-  methods[39].selector = @selector(getDoubleWithInt:withInt:);
-  methods[40].selector = @selector(getShortWithInt:withInt:);
-  methods[41].selector = @selector(getIntWithInt:withInt:);
-  methods[42].selector = @selector(getFloatWithInt:withInt:);
-  methods[43].selector = @selector(putBlobWithByteArray:withInt:withInt:);
-  methods[44].selector = @selector(putStringWithNSString:withInt:withInt:);
-  methods[45].selector = @selector(putLongWithLong:withInt:withInt:);
-  methods[46].selector = @selector(putDoubleWithDouble:withInt:withInt:);
-  methods[47].selector = @selector(putNullWithInt:withInt:);
-  methods[48].selector = @selector(onAllReferencesReleased);
-  methods[49].selector = @selector(printStats);
-  methods[50].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "STATS_TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 64, -1, -1 },
-    { "sCursorWindowSize", "I", .constantValue.asLong = 0, 0xa, -1, 65, -1, -1 },
-    { "mWindowPtr_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mStartPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mCloseGuard_", "LDalvikSystemCloseGuard;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "nativeCreate", "LNSString;I", "nativeDispose", "LNSObject;", "nativeClear", "nativeGetNumRows", "nativeSetNumColumns", "LNSObject;I", "nativeAllocRow", "nativeFreeLastRow", "nativeGetType", "LNSObject;II", "nativeGetBlob", "nativeGetString", "nativeGetLong", "nativeGetDouble", "nativePutBlob", "LNSObject;[BII", "nativePutString", "LNSObject;LNSString;II", "nativePutLong", "LNSObject;JII", "nativePutDouble", "LNSObject;DII", "nativePutNull", "LNSString;", "Z", (void *)&AndroidDatabaseCursorWindow__Annotations$0, "finalize", "LNSException;", "setStartPosition", "I", "setNumColumns", "isNull", "II", (void *)&AndroidDatabaseCursorWindow__Annotations$1, "isBlob", (void *)&AndroidDatabaseCursorWindow__Annotations$2, "isLong", (void *)&AndroidDatabaseCursorWindow__Annotations$3, "isFloat", (void *)&AndroidDatabaseCursorWindow__Annotations$4, "isString", (void *)&AndroidDatabaseCursorWindow__Annotations$5, "getType", "getBlob", "getString", "copyStringToBuffer", "IILAndroidDatabaseCharArrayBuffer;", "getLong", "getDouble", "getShort", "getInt", "getFloat", "putBlob", "[BII", "putString", "LNSString;II", "putLong", "JII", "putDouble", "DII", "putNull", "toString", &AndroidDatabaseCursorWindow_STATS_TAG, &AndroidDatabaseCursorWindow_sCursorWindowSize };
-  static const J2ObjcClassInfo _AndroidDatabaseCursorWindow = { "CursorWindow", "android.database", ptrTable, methods, fields, 7, 0x1, 51, 6, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCursorWindow;
-}
-
-@end
-
-id AndroidDatabaseCursorWindow_nativeCreateWithNSString_withInt_(NSString *name, jint cursorWindowSize) {
-  AndroidDatabaseCursorWindow_initialize();
-  return (id<NSObject>)[CursorWindowNative nativeCreate:name cursorWindowSize:cursorWindowSize];
-}
-
-void AndroidDatabaseCursorWindow_nativeDisposeWithId_(id windowPtr) {
-  AndroidDatabaseCursorWindow_initialize();
-  [CursorWindowNative nativeDispose:(id<NSObject>)windowPtr];
-}
-
-void AndroidDatabaseCursorWindow_nativeClearWithId_(id windowPtr) {
-  AndroidDatabaseCursorWindow_initialize();
-  [CursorWindowNative nativeClear:(id<NSObject>)windowPtr];
-}
-
-jint AndroidDatabaseCursorWindow_nativeGetNumRowsWithId_(id windowPtr) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeGetNumRows:(id<NSObject>)windowPtr];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativeSetNumColumnsWithId_withInt_(id windowPtr, jint columnNum) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeSetNumColumns:(id<NSObject>)windowPtr columnNum:columnNum];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativeAllocRowWithId_(id windowPtr) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeAllocRow:(id<NSObject>)windowPtr];
-}
-
-void AndroidDatabaseCursorWindow_nativeFreeLastRowWithId_(id windowPtr) {
-  AndroidDatabaseCursorWindow_initialize();
-  [CursorWindowNative nativeFreeLastRow:(id<NSObject>)windowPtr];
-}
-
-jint AndroidDatabaseCursorWindow_nativeGetTypeWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeGetType:(id<NSObject>)windowPtr row:row column:column];
-}
-
-IOSByteArray *AndroidDatabaseCursorWindow_nativeGetBlobWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeGetBlob:(id<NSObject>)windowPtr row:row column:column];
-}
-
-NSString *AndroidDatabaseCursorWindow_nativeGetStringWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeGetString:windowPtr row:row column:column];
-}
-
-jlong AndroidDatabaseCursorWindow_nativeGetLongWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeGetLong:windowPtr row:row column:column];
-}
-
-jdouble AndroidDatabaseCursorWindow_nativeGetDoubleWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativeGetDouble:windowPtr row:row column:column];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(id windowPtr, IOSByteArray *value, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativePutBlob:windowPtr value:value row:row column:column];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(id windowPtr, NSString *value, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativePutString:windowPtr value:value row:row column:column];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(id windowPtr, jlong value, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativePutLong:windowPtr value:value row:row column:column];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(id windowPtr, jdouble value, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativePutDouble:windowPtr value:value row:row column:column];
-}
-
-jboolean AndroidDatabaseCursorWindow_nativePutNullWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
-  AndroidDatabaseCursorWindow_initialize();
-  return [CursorWindowNative nativePutNull:windowPtr row:row column:column];
-}
-
-void AndroidDatabaseCursorWindow_initWithNSString_(AndroidDatabaseCursorWindow *self, NSString *name) {
-  AndroidDatabaseSqliteSQLiteClosable_init(self);
-  JreStrongAssign(&self->mCloseGuard_, DalvikSystemCloseGuard_get());
-  self->mStartPos_ = 0;
-  JreStrongAssign(&self->mName_, name != nil && ((jint) [name length]) != 0 ? name : @"<unnamed>");
-  if (AndroidDatabaseCursorWindow_sCursorWindowSize < 0) {
-    AndroidDatabaseCursorWindow_sCursorWindowSize = 2048 * 1024;
-  }
-  JreStrongAssign(&self->mWindowPtr_, AndroidDatabaseCursorWindow_nativeCreateWithNSString_withInt_(self->mName_, AndroidDatabaseCursorWindow_sCursorWindowSize));
-  if (self->mWindowPtr_ == nil) {
-    @throw create_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(JreStrcat("$I$$", @"Cursor window allocation of ", (AndroidDatabaseCursorWindow_sCursorWindowSize / 1024), @" kb failed. ", AndroidDatabaseCursorWindow_printStats(self)));
-  }
-  [((DalvikSystemCloseGuard *) nil_chk(self->mCloseGuard_)) openWithNSString:@"close"];
-}
-
-AndroidDatabaseCursorWindow *new_AndroidDatabaseCursorWindow_initWithNSString_(NSString *name) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCursorWindow, initWithNSString_, name)
-}
-
-AndroidDatabaseCursorWindow *create_AndroidDatabaseCursorWindow_initWithNSString_(NSString *name) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorWindow, initWithNSString_, name)
-}
-
-void AndroidDatabaseCursorWindow_initWithBoolean_(AndroidDatabaseCursorWindow *self, jboolean localWindow) {
-  AndroidDatabaseCursorWindow_initWithNSString_(self, nil);
-}
-
-AndroidDatabaseCursorWindow *new_AndroidDatabaseCursorWindow_initWithBoolean_(jboolean localWindow) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCursorWindow, initWithBoolean_, localWindow)
-}
-
-AndroidDatabaseCursorWindow *create_AndroidDatabaseCursorWindow_initWithBoolean_(jboolean localWindow) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorWindow, initWithBoolean_, localWindow)
-}
-
-void AndroidDatabaseCursorWindow_dispose(AndroidDatabaseCursorWindow *self) {
-  if (self->mCloseGuard_ != nil) {
-    [self->mCloseGuard_ close];
-  }
-  if (self->mWindowPtr_ != nil) {
-    AndroidDatabaseCursorWindow_nativeDisposeWithId_(self->mWindowPtr_);
-    JreStrongAssign(&self->mWindowPtr_, nil);
-  }
-}
-
-NSString *AndroidDatabaseCursorWindow_printStats(AndroidDatabaseCursorWindow *self) {
-  JavaLangStringBuilder *buff = create_JavaLangStringBuilder_init();
-  jint total = 0;
-  NSString *s = ([buff length] > 980) ? [buff substringWithInt:0 withInt:980] : [buff description];
-  return JreStrcat("$I$", @"# Open Cursors=", total, s);
-}
-
-IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseCursorWindow__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCursorWindow)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindowAllocationException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindowAllocationException.h
deleted file mode 100644
index 5822ec72d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindowAllocationException.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCursorWindowAllocationException")
-#ifdef RESTRICT_AndroidDatabaseCursorWindowAllocationException
-#define INCLUDE_ALL_AndroidDatabaseCursorWindowAllocationException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCursorWindowAllocationException 1
-#endif
-#undef RESTRICT_AndroidDatabaseCursorWindowAllocationException
-
-#if !defined (AndroidDatabaseCursorWindowAllocationException_) && (INCLUDE_ALL_AndroidDatabaseCursorWindowAllocationException || defined(INCLUDE_AndroidDatabaseCursorWindowAllocationException))
-#define AndroidDatabaseCursorWindowAllocationException_
-
-#define RESTRICT_JavaLangRuntimeException 1
-#define INCLUDE_JavaLangRuntimeException 1
-#include "java/lang/RuntimeException.h"
-
-@interface AndroidDatabaseCursorWindowAllocationException : JavaLangRuntimeException
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)description_;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursorWindowAllocationException)
-
-FOUNDATION_EXPORT void AndroidDatabaseCursorWindowAllocationException_initWithNSString_(AndroidDatabaseCursorWindowAllocationException *self, NSString *description_);
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWindowAllocationException *new_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(NSString *description_) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWindowAllocationException *create_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(NSString *description_);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorWindowAllocationException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCursorWindowAllocationException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindowAllocationException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindowAllocationException.m
deleted file mode 100644
index bb1ac8b65..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWindowAllocationException.m
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursorWindowAllocationException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/RuntimeException.h"
-
-@implementation AndroidDatabaseCursorWindowAllocationException
-
-- (instancetype)initWithNSString:(NSString *)description_ {
-  AndroidDatabaseCursorWindowAllocationException_initWithNSString_(self, description_);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseCursorWindowAllocationException = { "CursorWindowAllocationException", "android.database", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCursorWindowAllocationException;
-}
-
-@end
-
-void AndroidDatabaseCursorWindowAllocationException_initWithNSString_(AndroidDatabaseCursorWindowAllocationException *self, NSString *description_) {
-  JavaLangRuntimeException_initWithNSString_(self, description_);
-}
-
-AndroidDatabaseCursorWindowAllocationException *new_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(NSString *description_) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCursorWindowAllocationException, initWithNSString_, description_)
-}
-
-AndroidDatabaseCursorWindowAllocationException *create_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(NSString *description_) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorWindowAllocationException, initWithNSString_, description_)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCursorWindowAllocationException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWrapper.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWrapper.h
deleted file mode 100644
index b30a5c5e9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWrapper.h
+++ /dev/null
@@ -1,128 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseCursorWrapper")
-#ifdef RESTRICT_AndroidDatabaseCursorWrapper
-#define INCLUDE_ALL_AndroidDatabaseCursorWrapper 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseCursorWrapper 1
-#endif
-#undef RESTRICT_AndroidDatabaseCursorWrapper
-
-#if !defined (AndroidDatabaseCursorWrapper_) && (INCLUDE_ALL_AndroidDatabaseCursorWrapper || defined(INCLUDE_AndroidDatabaseCursorWrapper))
-#define AndroidDatabaseCursorWrapper_
-
-#define RESTRICT_AndroidDatabaseCursor 1
-#define INCLUDE_AndroidDatabaseCursor 1
-#include "AndroidDatabaseCursor.h"
-
-@class AndroidDatabaseCharArrayBuffer;
-@class AndroidDatabaseDataSetObserver;
-@class AndroidOsBundle;
-@class IOSByteArray;
-@class IOSObjectArray;
-
-@interface AndroidDatabaseCursorWrapper : NSObject < AndroidDatabaseCursor > {
- @public
-  id<AndroidDatabaseCursor> mCursor_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-- (void)close;
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer OBJC_METHOD_FAMILY_NONE;
-
-- (void)deactivate;
-
-- (IOSByteArray *)getBlobWithInt:(jint)columnIndex;
-
-- (jint)getColumnCount;
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName;
-
-- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName;
-
-- (NSString *)getColumnNameWithInt:(jint)columnIndex;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (jint)getCount;
-
-- (jdouble)getDoubleWithInt:(jint)columnIndex;
-
-- (AndroidOsBundle *)getExtras;
-
-- (jfloat)getFloatWithInt:(jint)columnIndex;
-
-- (jint)getIntWithInt:(jint)columnIndex;
-
-- (jlong)getLongWithInt:(jint)columnIndex;
-
-- (jint)getPosition;
-
-- (jshort)getShortWithInt:(jint)columnIndex;
-
-- (NSString *)getStringWithInt:(jint)columnIndex;
-
-- (jint)getTypeWithInt:(jint)columnIndex;
-
-- (jboolean)getWantsAllOnMoveCalls;
-
-- (id<AndroidDatabaseCursor>)getWrappedCursor;
-
-- (jboolean)isAfterLast;
-
-- (jboolean)isBeforeFirst;
-
-- (jboolean)isClosed;
-
-- (jboolean)isFirst;
-
-- (jboolean)isLast;
-
-- (jboolean)isNullWithInt:(jint)columnIndex;
-
-- (jboolean)moveWithInt:(jint)offset;
-
-- (jboolean)moveToFirst;
-
-- (jboolean)moveToLast;
-
-- (jboolean)moveToNext;
-
-- (jboolean)moveToPositionWithInt:(jint)position;
-
-- (jboolean)moveToPrevious;
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-- (jboolean)requery;
-
-- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras;
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursorWrapper)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseCursorWrapper, mCursor_, id<AndroidDatabaseCursor>)
-
-FOUNDATION_EXPORT void AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(AndroidDatabaseCursorWrapper *self, id<AndroidDatabaseCursor> cursor);
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWrapper *new_AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseCursorWrapper *create_AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorWrapper)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseCursorWrapper")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWrapper.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWrapper.m
deleted file mode 100644
index 24aed53bf..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseCursorWrapper.m
+++ /dev/null
@@ -1,280 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCharArrayBuffer.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorWrapper.h"
-#include "AndroidDatabaseDataSetObserver.h"
-#include "AndroidOsBundle.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseCursorWrapper
-
-- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-  AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(self, cursor);
-  return self;
-}
-
-- (id<AndroidDatabaseCursor>)getWrappedCursor {
-  return mCursor_;
-}
-
-- (void)close {
-  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) close];
-}
-
-- (jboolean)isClosed {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isClosed];
-}
-
-- (jint)getCount {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getCount];
-}
-
-- (void)deactivate {
-  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) deactivate];
-}
-
-- (jboolean)moveToFirst {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToFirst];
-}
-
-- (jint)getColumnCount {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnCount];
-}
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnIndexWithNSString:columnName];
-}
-
-- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnIndexOrThrowWithNSString:columnName];
-}
-
-- (NSString *)getColumnNameWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnNameWithInt:columnIndex];
-}
-
-- (IOSObjectArray *)getColumnNames {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnNames];
-}
-
-- (jdouble)getDoubleWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getDoubleWithInt:columnIndex];
-}
-
-- (AndroidOsBundle *)getExtras {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getExtras];
-}
-
-- (jfloat)getFloatWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getFloatWithInt:columnIndex];
-}
-
-- (jint)getIntWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getIntWithInt:columnIndex];
-}
-
-- (jlong)getLongWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getLongWithInt:columnIndex];
-}
-
-- (jshort)getShortWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getShortWithInt:columnIndex];
-}
-
-- (NSString *)getStringWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getStringWithInt:columnIndex];
-}
-
-- (void)copyStringToBufferWithInt:(jint)columnIndex
-withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer {
-  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) copyStringToBufferWithInt:columnIndex withAndroidDatabaseCharArrayBuffer:buffer];
-}
-
-- (IOSByteArray *)getBlobWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getBlobWithInt:columnIndex];
-}
-
-- (jboolean)getWantsAllOnMoveCalls {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getWantsAllOnMoveCalls];
-}
-
-- (jboolean)isAfterLast {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isAfterLast];
-}
-
-- (jboolean)isBeforeFirst {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isBeforeFirst];
-}
-
-- (jboolean)isFirst {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isFirst];
-}
-
-- (jboolean)isLast {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isLast];
-}
-
-- (jint)getTypeWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getTypeWithInt:columnIndex];
-}
-
-- (jboolean)isNullWithInt:(jint)columnIndex {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isNullWithInt:columnIndex];
-}
-
-- (jboolean)moveToLast {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToLast];
-}
-
-- (jboolean)moveWithInt:(jint)offset {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveWithInt:offset];
-}
-
-- (jboolean)moveToPositionWithInt:(jint)position {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToPositionWithInt:position];
-}
-
-- (jboolean)moveToNext {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToNext];
-}
-
-- (jint)getPosition {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getPosition];
-}
-
-- (jboolean)moveToPrevious {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToPrevious];
-}
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
-  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) registerDataSetObserverWithAndroidDatabaseDataSetObserver:observer];
-}
-
-- (jboolean)requery {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) requery];
-}
-
-- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) respondWithAndroidOsBundle:extras];
-}
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
-  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:observer];
-}
-
-- (void)dealloc {
-  RELEASE_(mCursor_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 3, 2, 4, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 7, 6, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 8, 6, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 9, 6, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 10, 6, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 11, 6, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 12, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 15, 6, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 16, 6, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 17, 6, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 18, 6, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 19, 6, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, 22, 23, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 24, 21, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseCursor:);
-  methods[1].selector = @selector(getWrappedCursor);
-  methods[2].selector = @selector(close);
-  methods[3].selector = @selector(isClosed);
-  methods[4].selector = @selector(getCount);
-  methods[5].selector = @selector(deactivate);
-  methods[6].selector = @selector(moveToFirst);
-  methods[7].selector = @selector(getColumnCount);
-  methods[8].selector = @selector(getColumnIndexWithNSString:);
-  methods[9].selector = @selector(getColumnIndexOrThrowWithNSString:);
-  methods[10].selector = @selector(getColumnNameWithInt:);
-  methods[11].selector = @selector(getColumnNames);
-  methods[12].selector = @selector(getDoubleWithInt:);
-  methods[13].selector = @selector(getExtras);
-  methods[14].selector = @selector(getFloatWithInt:);
-  methods[15].selector = @selector(getIntWithInt:);
-  methods[16].selector = @selector(getLongWithInt:);
-  methods[17].selector = @selector(getShortWithInt:);
-  methods[18].selector = @selector(getStringWithInt:);
-  methods[19].selector = @selector(copyStringToBufferWithInt:withAndroidDatabaseCharArrayBuffer:);
-  methods[20].selector = @selector(getBlobWithInt:);
-  methods[21].selector = @selector(getWantsAllOnMoveCalls);
-  methods[22].selector = @selector(isAfterLast);
-  methods[23].selector = @selector(isBeforeFirst);
-  methods[24].selector = @selector(isFirst);
-  methods[25].selector = @selector(isLast);
-  methods[26].selector = @selector(getTypeWithInt:);
-  methods[27].selector = @selector(isNullWithInt:);
-  methods[28].selector = @selector(moveToLast);
-  methods[29].selector = @selector(moveWithInt:);
-  methods[30].selector = @selector(moveToPositionWithInt:);
-  methods[31].selector = @selector(moveToNext);
-  methods[32].selector = @selector(getPosition);
-  methods[33].selector = @selector(moveToPrevious);
-  methods[34].selector = @selector(registerDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[35].selector = @selector(requery);
-  methods[36].selector = @selector(respondWithAndroidOsBundle:);
-  methods[37].selector = @selector(unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mCursor_", "LAndroidDatabaseCursor;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseCursor;", "getColumnIndex", "LNSString;", "getColumnIndexOrThrow", "LJavaLangIllegalArgumentException;", "getColumnName", "I", "getDouble", "getFloat", "getInt", "getLong", "getShort", "getString", "copyStringToBuffer", "ILAndroidDatabaseCharArrayBuffer;", "getBlob", "getType", "isNull", "move", "moveToPosition", "registerDataSetObserver", "LAndroidDatabaseDataSetObserver;", "respond", "LAndroidOsBundle;", "unregisterDataSetObserver" };
-  static const J2ObjcClassInfo _AndroidDatabaseCursorWrapper = { "CursorWrapper", "android.database", ptrTable, methods, fields, 7, 0x1, 38, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseCursorWrapper;
-}
-
-@end
-
-void AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(AndroidDatabaseCursorWrapper *self, id<AndroidDatabaseCursor> cursor) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mCursor_, cursor);
-}
-
-AndroidDatabaseCursorWrapper *new_AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseCursorWrapper, initWithAndroidDatabaseCursor_, cursor)
-}
-
-AndroidDatabaseCursorWrapper *create_AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorWrapper, initWithAndroidDatabaseCursor_, cursor)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCursorWrapper)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObservable.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObservable.h
deleted file mode 100644
index ea0e17b09..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObservable.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseDataSetObservable")
-#ifdef RESTRICT_AndroidDatabaseDataSetObservable
-#define INCLUDE_ALL_AndroidDatabaseDataSetObservable 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseDataSetObservable 1
-#endif
-#undef RESTRICT_AndroidDatabaseDataSetObservable
-
-#if !defined (AndroidDatabaseDataSetObservable_) && (INCLUDE_ALL_AndroidDatabaseDataSetObservable || defined(INCLUDE_AndroidDatabaseDataSetObservable))
-#define AndroidDatabaseDataSetObservable_
-
-#define RESTRICT_AndroidDatabaseObservable 1
-#define INCLUDE_AndroidDatabaseObservable 1
-#include "AndroidDatabaseObservable.h"
-
-@interface AndroidDatabaseDataSetObservable : AndroidDatabaseObservable
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)notifyChanged;
-
-- (void)notifyInvalidated;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseDataSetObservable)
-
-FOUNDATION_EXPORT void AndroidDatabaseDataSetObservable_init(AndroidDatabaseDataSetObservable *self);
-
-FOUNDATION_EXPORT AndroidDatabaseDataSetObservable *new_AndroidDatabaseDataSetObservable_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseDataSetObservable *create_AndroidDatabaseDataSetObservable_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDataSetObservable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseDataSetObservable")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObservable.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObservable.m
deleted file mode 100644
index 2eca14d5b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObservable.m
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseDataSetObservable.h"
-#include "AndroidDatabaseDataSetObserver.h"
-#include "AndroidDatabaseObservable.h"
-#include "J2ObjC_source.h"
-#include "java/util/ArrayList.h"
-
-@implementation AndroidDatabaseDataSetObservable
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseDataSetObservable_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)notifyChanged {
-  @synchronized(mObservers_) {
-    for (jint i = [((JavaUtilArrayList *) nil_chk(mObservers_)) size] - 1; i >= 0; i--) {
-      [((AndroidDatabaseDataSetObserver *) nil_chk([mObservers_ getWithInt:i])) onChanged];
-    }
-  }
-}
-
-- (void)notifyInvalidated {
-  @synchronized(mObservers_) {
-    for (jint i = [((JavaUtilArrayList *) nil_chk(mObservers_)) size] - 1; i >= 0; i--) {
-      [((AndroidDatabaseDataSetObserver *) nil_chk([mObservers_ getWithInt:i])) onInvalidated];
-    }
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(notifyChanged);
-  methods[2].selector = @selector(notifyInvalidated);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "Landroid/database/Observable<Landroid/database/DataSetObserver;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseDataSetObservable = { "DataSetObservable", "android.database", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, 0, -1 };
-  return &_AndroidDatabaseDataSetObservable;
-}
-
-@end
-
-void AndroidDatabaseDataSetObservable_init(AndroidDatabaseDataSetObservable *self) {
-  AndroidDatabaseObservable_init(self);
-}
-
-AndroidDatabaseDataSetObservable *new_AndroidDatabaseDataSetObservable_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseDataSetObservable, init)
-}
-
-AndroidDatabaseDataSetObservable *create_AndroidDatabaseDataSetObservable_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseDataSetObservable, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseDataSetObservable)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObserver.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObserver.h
deleted file mode 100644
index 909bc13fe..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObserver.h
+++ /dev/null
@@ -1,38 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseDataSetObserver")
-#ifdef RESTRICT_AndroidDatabaseDataSetObserver
-#define INCLUDE_ALL_AndroidDatabaseDataSetObserver 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseDataSetObserver 1
-#endif
-#undef RESTRICT_AndroidDatabaseDataSetObserver
-
-#if !defined (AndroidDatabaseDataSetObserver_) && (INCLUDE_ALL_AndroidDatabaseDataSetObserver || defined(INCLUDE_AndroidDatabaseDataSetObserver))
-#define AndroidDatabaseDataSetObserver_
-
-@interface AndroidDatabaseDataSetObserver : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)onChanged;
-
-- (void)onInvalidated;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseDataSetObserver)
-
-FOUNDATION_EXPORT void AndroidDatabaseDataSetObserver_init(AndroidDatabaseDataSetObserver *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDataSetObserver)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseDataSetObserver")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObserver.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObserver.m
deleted file mode 100644
index c4877267f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDataSetObserver.m
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseDataSetObserver.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseDataSetObserver
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseDataSetObserver_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)onChanged {
-}
-
-- (void)onInvalidated {
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(onChanged);
-  methods[2].selector = @selector(onInvalidated);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _AndroidDatabaseDataSetObserver = { "DataSetObserver", "android.database", NULL, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseDataSetObserver;
-}
-
-@end
-
-void AndroidDatabaseDataSetObserver_init(AndroidDatabaseDataSetObserver *self) {
-  NSObject_init(self);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseDataSetObserver)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseErrorHandler.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseErrorHandler.h
deleted file mode 100644
index 0f72e6b39..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseErrorHandler.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseDatabaseErrorHandler")
-#ifdef RESTRICT_AndroidDatabaseDatabaseErrorHandler
-#define INCLUDE_ALL_AndroidDatabaseDatabaseErrorHandler 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseDatabaseErrorHandler 1
-#endif
-#undef RESTRICT_AndroidDatabaseDatabaseErrorHandler
-
-#if !defined (AndroidDatabaseDatabaseErrorHandler_) && (INCLUDE_ALL_AndroidDatabaseDatabaseErrorHandler || defined(INCLUDE_AndroidDatabaseDatabaseErrorHandler))
-#define AndroidDatabaseDatabaseErrorHandler_
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-
-@protocol AndroidDatabaseDatabaseErrorHandler < JavaObject >
-
-- (void)onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)dbObj;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseDatabaseErrorHandler)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDatabaseErrorHandler)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseDatabaseErrorHandler")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseErrorHandler.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseErrorHandler.m
deleted file mode 100644
index def16dd1d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseErrorHandler.m
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseDatabaseErrorHandler.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidDatabaseDatabaseErrorHandler : NSObject
-
-@end
-
-@implementation AndroidDatabaseDatabaseErrorHandler
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "onCorruption", "LAndroidDatabaseSqliteSQLiteDatabase;" };
-  static const J2ObjcClassInfo _AndroidDatabaseDatabaseErrorHandler = { "DatabaseErrorHandler", "android.database", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseDatabaseErrorHandler;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseDatabaseErrorHandler)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseUtils.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseUtils.h
deleted file mode 100644
index 6d2528e0e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseUtils.h
+++ /dev/null
@@ -1,408 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseDatabaseUtils")
-#ifdef RESTRICT_AndroidDatabaseDatabaseUtils
-#define INCLUDE_ALL_AndroidDatabaseDatabaseUtils 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseDatabaseUtils 1
-#endif
-#undef RESTRICT_AndroidDatabaseDatabaseUtils
-
-#if !defined (AndroidDatabaseDatabaseUtils_) && (INCLUDE_ALL_AndroidDatabaseDatabaseUtils || defined(INCLUDE_AndroidDatabaseDatabaseUtils))
-#define AndroidDatabaseDatabaseUtils_
-
-@class AndroidContentContentValues;
-@class AndroidContentContext;
-@class AndroidDatabaseCursorWindow;
-@class AndroidDatabaseDatabaseUtils_InsertHelper;
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class AndroidDatabaseSqliteSQLiteProgram;
-@class AndroidDatabaseSqliteSQLiteStatement;
-@class IOSObjectArray;
-@class JavaIoPrintStream;
-@class JavaLangStringBuilder;
-@protocol AndroidDatabaseCursor;
-
-@interface AndroidDatabaseDatabaseUtils : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (void)appendEscapedSQLStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
-                                           withNSString:(NSString *)sqlString;
-
-+ (IOSObjectArray *)appendSelectionArgsWithNSStringArray:(IOSObjectArray *)originalValues
-                                       withNSStringArray:(IOSObjectArray *)newValues;
-
-+ (void)appendValueToSqlWithJavaLangStringBuilder:(JavaLangStringBuilder *)sql
-                                           withId:(id)value;
-
-+ (void)bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram:(AndroidDatabaseSqliteSQLiteProgram *)prog
-                                                          withInt:(jint)index
-                                                           withId:(id)value;
-
-+ (NSString *)concatenateWhereWithNSString:(NSString *)a
-                              withNSString:(NSString *)b;
-
-+ (void)createDbFromSqlStatementsWithAndroidContentContext:(AndroidContentContext *)context
-                                              withNSString:(NSString *)dbName
-                                                   withInt:(jint)dbVersion
-                                              withNSString:(NSString *)sqlStatements;
-
-+ (void)cursorDoubleToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                                withNSString:(NSString *)field
-                             withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                withNSString:(NSString *)key;
-
-+ (void)cursorDoubleToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                      withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                         withNSString:(NSString *)column;
-
-+ (void)cursorDoubleToCursorValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                               withNSString:(NSString *)field
-                            withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-+ (void)cursorFillWindowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                          withInt:(jint)position
-                  withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;
-
-+ (void)cursorFloatToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                     withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                        withNSString:(NSString *)column;
-
-+ (void)cursorIntToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                             withNSString:(NSString *)field
-                          withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-+ (void)cursorIntToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                             withNSString:(NSString *)field
-                          withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                             withNSString:(NSString *)key;
-
-+ (void)cursorIntToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                   withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                      withNSString:(NSString *)column;
-
-+ (void)cursorLongToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                              withNSString:(NSString *)field
-                           withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-+ (void)cursorLongToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                              withNSString:(NSString *)field
-                           withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                              withNSString:(NSString *)key;
-
-+ (void)cursorLongToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                    withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                       withNSString:(NSString *)column;
-
-+ (jint)cursorPickFillWindowStartPositionWithInt:(jint)cursorPosition
-                                         withInt:(jint)cursorWindowCapacity;
-
-+ (void)cursorRowToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                          withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-+ (void)cursorShortToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                     withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                        withNSString:(NSString *)column;
-
-+ (void)cursorStringToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                                withNSString:(NSString *)field
-                             withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-+ (void)cursorStringToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                                withNSString:(NSString *)field
-                             withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                withNSString:(NSString *)key;
-
-+ (void)cursorStringToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                      withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                         withNSString:(NSString *)column;
-
-+ (void)cursorStringToInsertHelperWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                               withNSString:(NSString *)field
-              withAndroidDatabaseDatabaseUtils_InsertHelper:(AndroidDatabaseDatabaseUtils_InsertHelper *)inserter
-                                                    withInt:(jint)index;
-
-+ (void)dumpCurrentRowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-+ (void)dumpCurrentRowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                          withJavaIoPrintStream:(JavaIoPrintStream *)stream;
-
-+ (void)dumpCurrentRowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;
-
-+ (NSString *)dumpCurrentRowToStringWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-+ (void)dumpCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-+ (void)dumpCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                      withJavaIoPrintStream:(JavaIoPrintStream *)stream;
-
-+ (void)dumpCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                  withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;
-
-+ (NSString *)dumpCursorToStringWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-+ (jint)findRowIdColumnIndexWithNSStringArray:(IOSObjectArray *)columnNames;
-
-+ (NSString *)getCollationKeyWithNSString:(NSString *)name;
-
-+ (jint)getSqlStatementTypeWithNSString:(NSString *)sql;
-
-+ (jint)getTypeOfObjectWithId:(id)obj;
-
-+ (jlong)longForQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                withNSString:(NSString *)query
-                                           withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-+ (jlong)longForQueryWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)prog
-                                            withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-+ (jboolean)queryIsEmptyWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table;
-
-+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table;
-
-+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table
-                                                   withNSString:(NSString *)selection;
-
-+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table
-                                                   withNSString:(NSString *)selection
-                                              withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-+ (NSString *)sqlEscapeStringWithNSString:(NSString *)value;
-
-+ (NSString *)stringForQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                       withNSString:(NSString *)query
-                                                  withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-+ (NSString *)stringForQueryWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)prog
-                                                   withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseDatabaseUtils)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_SELECT();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_SELECT 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_SELECT, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_UPDATE();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_UPDATE 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_UPDATE, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_ATTACH();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_ATTACH 3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_ATTACH, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_BEGIN();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_BEGIN 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_BEGIN, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_COMMIT();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT 5
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_COMMIT, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_ABORT();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_ABORT 6
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_ABORT, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_PRAGMA();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_PRAGMA 7
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_PRAGMA, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_DDL();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_DDL 8
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_DDL, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_UNPREPARED();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_UNPREPARED 9
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_UNPREPARED, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_OTHER();
-#define AndroidDatabaseDatabaseUtils_STATEMENT_OTHER 99
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_OTHER, jint)
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_init(AndroidDatabaseDatabaseUtils *self);
-
-FOUNDATION_EXPORT AndroidDatabaseDatabaseUtils *new_AndroidDatabaseDatabaseUtils_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseDatabaseUtils *create_AndroidDatabaseDatabaseUtils_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram_withInt_withId_(AndroidDatabaseSqliteSQLiteProgram *prog, jint index, id value);
-
-FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_getTypeOfObjectWithId_(id obj);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorFillWindowWithAndroidDatabaseCursor_withInt_withAndroidDatabaseCursorWindow_(id<AndroidDatabaseCursor> cursor, jint position, AndroidDatabaseCursorWindow *window);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *sqlString);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_sqlEscapeStringWithNSString_(NSString *value);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_appendValueToSqlWithJavaLangStringBuilder_withId_(JavaLangStringBuilder *sql, id value);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_concatenateWhereWithNSString_withNSString_(NSString *a, NSString *b);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_getCollationKeyWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaIoPrintStream_(id<AndroidDatabaseCursor> cursor, JavaIoPrintStream *stream);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaLangStringBuilder_(id<AndroidDatabaseCursor> cursor, JavaLangStringBuilder *sb);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_dumpCursorToStringWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaIoPrintStream_(id<AndroidDatabaseCursor> cursor, JavaIoPrintStream *stream);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaLangStringBuilder_(id<AndroidDatabaseCursor> cursor, JavaLangStringBuilder *sb);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_dumpCurrentRowToStringWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorStringToInsertHelperWithAndroidDatabaseCursor_withNSString_withAndroidDatabaseDatabaseUtils_InsertHelper_withInt_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidDatabaseDatabaseUtils_InsertHelper *inserter, jint index);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorDoubleToCursorValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorRowToContentValuesWithAndroidDatabaseCursor_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values);
-
-FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_cursorPickFillWindowStartPositionWithInt_withInt_(jint cursorPosition, jint cursorWindowCapacity);
-
-FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table);
-
-FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table, NSString *selection);
-
-FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table, NSString *selection, IOSObjectArray *selectionArgs);
-
-FOUNDATION_EXPORT jboolean AndroidDatabaseDatabaseUtils_queryIsEmptyWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table);
-
-FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query, IOSObjectArray *selectionArgs);
-
-FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(AndroidDatabaseSqliteSQLiteStatement *prog, IOSObjectArray *selectionArgs);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query, IOSObjectArray *selectionArgs);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(AndroidDatabaseSqliteSQLiteStatement *prog, IOSObjectArray *selectionArgs);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorStringToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorLongToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorShortToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorIntToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorFloatToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column);
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_createDbFromSqlStatementsWithAndroidContentContext_withNSString_withInt_withNSString_(AndroidContentContext *context, NSString *dbName, jint dbVersion, NSString *sqlStatements);
-
-FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(NSString *sql);
-
-FOUNDATION_EXPORT IOSObjectArray *AndroidDatabaseDatabaseUtils_appendSelectionArgsWithNSStringArray_withNSStringArray_(IOSObjectArray *originalValues, IOSObjectArray *newValues);
-
-FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_findRowIdColumnIndexWithNSStringArray_(IOSObjectArray *columnNames);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDatabaseUtils)
-
-#endif
-
-#if !defined (AndroidDatabaseDatabaseUtils_InsertHelper_) && (INCLUDE_ALL_AndroidDatabaseDatabaseUtils || defined(INCLUDE_AndroidDatabaseDatabaseUtils_InsertHelper))
-#define AndroidDatabaseDatabaseUtils_InsertHelper_
-
-@class AndroidContentContentValues;
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class IOSByteArray;
-
-@interface AndroidDatabaseDatabaseUtils_InsertHelper : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)tableName;
-
-- (void)bindWithInt:(jint)index
-        withBoolean:(jboolean)value;
-
-- (void)bindWithInt:(jint)index
-      withByteArray:(IOSByteArray *)value;
-
-- (void)bindWithInt:(jint)index
-         withDouble:(jdouble)value;
-
-- (void)bindWithInt:(jint)index
-          withFloat:(jfloat)value;
-
-- (void)bindWithInt:(jint)index
-            withInt:(jint)value;
-
-- (void)bindWithInt:(jint)index
-           withLong:(jlong)value;
-
-- (void)bindWithInt:(jint)index
-       withNSString:(NSString *)value;
-
-- (void)bindNullWithInt:(jint)index;
-
-- (void)close;
-
-- (jlong)execute;
-
-- (jint)getColumnIndexWithNSString:(NSString *)key;
-
-- (jlong)insertWithAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-- (void)prepareForInsert;
-
-- (void)prepareForReplace;
-
-- (jlong)replaceWithAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseDatabaseUtils_InsertHelper)
-
-inline jint AndroidDatabaseDatabaseUtils_InsertHelper_get_TABLE_INFO_PRAGMA_COLUMNNAME_INDEX();
-#define AndroidDatabaseDatabaseUtils_InsertHelper_TABLE_INFO_PRAGMA_COLUMNNAME_INDEX 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils_InsertHelper, TABLE_INFO_PRAGMA_COLUMNNAME_INDEX, jint)
-
-inline jint AndroidDatabaseDatabaseUtils_InsertHelper_get_TABLE_INFO_PRAGMA_DEFAULT_INDEX();
-#define AndroidDatabaseDatabaseUtils_InsertHelper_TABLE_INFO_PRAGMA_DEFAULT_INDEX 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils_InsertHelper, TABLE_INFO_PRAGMA_DEFAULT_INDEX, jint)
-
-FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseDatabaseUtils_InsertHelper *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *tableName);
-
-FOUNDATION_EXPORT AndroidDatabaseDatabaseUtils_InsertHelper *new_AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *tableName) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseDatabaseUtils_InsertHelper *create_AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *tableName);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDatabaseUtils_InsertHelper)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseDatabaseUtils")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseUtils.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseUtils.m
deleted file mode 100644
index a040713e2..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDatabaseUtils.m
+++ /dev/null
@@ -1,1357 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentContentValues.h"
-#include "AndroidContentContext.h"
-#include "AndroidDatabaseAbstractWindowedCursor.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseSQLException.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteProgram.h"
-#include "AndroidDatabaseSqliteSQLiteStatement.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/text/TextUtils.h"
-#include "android/util/Log.h"
-#include "java/io/PrintStream.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Byte.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Double.h"
-#include "java/lang/Exception.h"
-#include "java/lang/Float.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/Math.h"
-#include "java/lang/Short.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/System.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/text/CollationKey.h"
-#include "java/text/Collator.h"
-#include "java/util/HashMap.h"
-#include "java/util/Locale.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-
-@interface AndroidDatabaseDatabaseUtils ()
-
-+ (jint)getKeyLenWithByteArray:(IOSByteArray *)arr;
-
-+ (IOSByteArray *)getCollationKeyInBytesWithNSString:(NSString *)name;
-
-@end
-
-inline NSString *AndroidDatabaseDatabaseUtils_get_TAG();
-static NSString *AndroidDatabaseDatabaseUtils_TAG = @"DatabaseUtils";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseDatabaseUtils, TAG, NSString *)
-
-inline jboolean AndroidDatabaseDatabaseUtils_get_DEBUG();
-#define AndroidDatabaseDatabaseUtils_DEBUG false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, DEBUG, jboolean)
-
-inline JavaTextCollator *AndroidDatabaseDatabaseUtils_get_mColl();
-inline JavaTextCollator *AndroidDatabaseDatabaseUtils_set_mColl(JavaTextCollator *value);
-static JavaTextCollator *AndroidDatabaseDatabaseUtils_mColl;
-J2OBJC_STATIC_FIELD_OBJ(AndroidDatabaseDatabaseUtils, mColl, JavaTextCollator *)
-
-__attribute__((unused)) static jint AndroidDatabaseDatabaseUtils_getKeyLenWithByteArray_(IOSByteArray *arr);
-
-__attribute__((unused)) static IOSByteArray *AndroidDatabaseDatabaseUtils_getCollationKeyInBytesWithNSString_(NSString *name);
-
-@interface AndroidDatabaseDatabaseUtils_InsertHelper () {
- @public
-  AndroidDatabaseSqliteSQLiteDatabase *mDb_;
-  NSString *mTableName_;
-  JavaUtilHashMap *mColumns_;
-  NSString *mInsertSQL_;
-  AndroidDatabaseSqliteSQLiteStatement *mInsertStatement_;
-  AndroidDatabaseSqliteSQLiteStatement *mReplaceStatement_;
-  AndroidDatabaseSqliteSQLiteStatement *mPreparedStatement_;
-}
-
-- (void)buildSQL;
-
-- (AndroidDatabaseSqliteSQLiteStatement *)getStatementWithBoolean:(jboolean)allowReplace;
-
-- (jlong)insertInternalWithAndroidContentContentValues:(AndroidContentContentValues *)values
-                                           withBoolean:(jboolean)allowReplace;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mDb_, AndroidDatabaseSqliteSQLiteDatabase *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mTableName_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mColumns_, JavaUtilHashMap *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mInsertSQL_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mInsertStatement_, AndroidDatabaseSqliteSQLiteStatement *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mReplaceStatement_, AndroidDatabaseSqliteSQLiteStatement *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseDatabaseUtils_InsertHelper, mPreparedStatement_, AndroidDatabaseSqliteSQLiteStatement *)
-
-__attribute__((unused)) static void AndroidDatabaseDatabaseUtils_InsertHelper_buildSQL(AndroidDatabaseDatabaseUtils_InsertHelper *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteStatement *AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(AndroidDatabaseDatabaseUtils_InsertHelper *self, jboolean allowReplace);
-
-__attribute__((unused)) static jlong AndroidDatabaseDatabaseUtils_InsertHelper_insertInternalWithAndroidContentContentValues_withBoolean_(AndroidDatabaseDatabaseUtils_InsertHelper *self, AndroidContentContentValues *values, jboolean allowReplace);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseDatabaseUtils_InsertHelper__Annotations$0();
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseDatabaseUtils)
-
-@implementation AndroidDatabaseDatabaseUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseDatabaseUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (void)bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram:(AndroidDatabaseSqliteSQLiteProgram *)prog
-                                                          withInt:(jint)index
-                                                           withId:(id)value {
-  AndroidDatabaseDatabaseUtils_bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram_withInt_withId_(prog, index, value);
-}
-
-+ (jint)getTypeOfObjectWithId:(id)obj {
-  return AndroidDatabaseDatabaseUtils_getTypeOfObjectWithId_(obj);
-}
-
-+ (void)cursorFillWindowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                          withInt:(jint)position
-                  withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window {
-  AndroidDatabaseDatabaseUtils_cursorFillWindowWithAndroidDatabaseCursor_withInt_withAndroidDatabaseCursorWindow_(cursor, position, window);
-}
-
-+ (void)appendEscapedSQLStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
-                                           withNSString:(NSString *)sqlString {
-  AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(sb, sqlString);
-}
-
-+ (NSString *)sqlEscapeStringWithNSString:(NSString *)value {
-  return AndroidDatabaseDatabaseUtils_sqlEscapeStringWithNSString_(value);
-}
-
-+ (void)appendValueToSqlWithJavaLangStringBuilder:(JavaLangStringBuilder *)sql
-                                           withId:(id)value {
-  AndroidDatabaseDatabaseUtils_appendValueToSqlWithJavaLangStringBuilder_withId_(sql, value);
-}
-
-+ (NSString *)concatenateWhereWithNSString:(NSString *)a
-                              withNSString:(NSString *)b {
-  return AndroidDatabaseDatabaseUtils_concatenateWhereWithNSString_withNSString_(a, b);
-}
-
-+ (NSString *)getCollationKeyWithNSString:(NSString *)name {
-  return AndroidDatabaseDatabaseUtils_getCollationKeyWithNSString_(name);
-}
-
-+ (jint)getKeyLenWithByteArray:(IOSByteArray *)arr {
-  return AndroidDatabaseDatabaseUtils_getKeyLenWithByteArray_(arr);
-}
-
-+ (IOSByteArray *)getCollationKeyInBytesWithNSString:(NSString *)name {
-  return AndroidDatabaseDatabaseUtils_getCollationKeyInBytesWithNSString_(name);
-}
-
-+ (void)dumpCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-  AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_(cursor);
-}
-
-+ (void)dumpCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                      withJavaIoPrintStream:(JavaIoPrintStream *)stream {
-  AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaIoPrintStream_(cursor, stream);
-}
-
-+ (void)dumpCursorWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                  withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
-  AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaLangStringBuilder_(cursor, sb);
-}
-
-+ (NSString *)dumpCursorToStringWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-  return AndroidDatabaseDatabaseUtils_dumpCursorToStringWithAndroidDatabaseCursor_(cursor);
-}
-
-+ (void)dumpCurrentRowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-  AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_(cursor);
-}
-
-+ (void)dumpCurrentRowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                          withJavaIoPrintStream:(JavaIoPrintStream *)stream {
-  AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaIoPrintStream_(cursor, stream);
-}
-
-+ (void)dumpCurrentRowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
-  AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaLangStringBuilder_(cursor, sb);
-}
-
-+ (NSString *)dumpCurrentRowToStringWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-  return AndroidDatabaseDatabaseUtils_dumpCurrentRowToStringWithAndroidDatabaseCursor_(cursor);
-}
-
-+ (void)cursorStringToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                                withNSString:(NSString *)field
-                             withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(cursor, field, values);
-}
-
-+ (void)cursorStringToInsertHelperWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                               withNSString:(NSString *)field
-              withAndroidDatabaseDatabaseUtils_InsertHelper:(AndroidDatabaseDatabaseUtils_InsertHelper *)inserter
-                                                    withInt:(jint)index {
-  AndroidDatabaseDatabaseUtils_cursorStringToInsertHelperWithAndroidDatabaseCursor_withNSString_withAndroidDatabaseDatabaseUtils_InsertHelper_withInt_(cursor, field, inserter, index);
-}
-
-+ (void)cursorStringToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                                withNSString:(NSString *)field
-                             withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                withNSString:(NSString *)key {
-  AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, key);
-}
-
-+ (void)cursorIntToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                             withNSString:(NSString *)field
-                          withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(cursor, field, values);
-}
-
-+ (void)cursorIntToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                             withNSString:(NSString *)field
-                          withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                             withNSString:(NSString *)key {
-  AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, key);
-}
-
-+ (void)cursorLongToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                              withNSString:(NSString *)field
-                           withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(cursor, field, values);
-}
-
-+ (void)cursorLongToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                              withNSString:(NSString *)field
-                           withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                              withNSString:(NSString *)key {
-  AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, key);
-}
-
-+ (void)cursorDoubleToCursorValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                               withNSString:(NSString *)field
-                            withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  AndroidDatabaseDatabaseUtils_cursorDoubleToCursorValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(cursor, field, values);
-}
-
-+ (void)cursorDoubleToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                                withNSString:(NSString *)field
-                             withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                withNSString:(NSString *)key {
-  AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, key);
-}
-
-+ (void)cursorRowToContentValuesWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                          withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  AndroidDatabaseDatabaseUtils_cursorRowToContentValuesWithAndroidDatabaseCursor_withAndroidContentContentValues_(cursor, values);
-}
-
-+ (jint)cursorPickFillWindowStartPositionWithInt:(jint)cursorPosition
-                                         withInt:(jint)cursorWindowCapacity {
-  return AndroidDatabaseDatabaseUtils_cursorPickFillWindowStartPositionWithInt_withInt_(cursorPosition, cursorWindowCapacity);
-}
-
-+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table {
-  return AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(db, table);
-}
-
-+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table
-                                                   withNSString:(NSString *)selection {
-  return AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(db, table, selection);
-}
-
-+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table
-                                                   withNSString:(NSString *)selection
-                                              withNSStringArray:(IOSObjectArray *)selectionArgs {
-  return AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_withNSStringArray_(db, table, selection, selectionArgs);
-}
-
-+ (jboolean)queryIsEmptyWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)table {
-  return AndroidDatabaseDatabaseUtils_queryIsEmptyWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(db, table);
-}
-
-+ (jlong)longForQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                withNSString:(NSString *)query
-                                           withNSStringArray:(IOSObjectArray *)selectionArgs {
-  return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(db, query, selectionArgs);
-}
-
-+ (jlong)longForQueryWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)prog
-                                            withNSStringArray:(IOSObjectArray *)selectionArgs {
-  return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(prog, selectionArgs);
-}
-
-+ (NSString *)stringForQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                       withNSString:(NSString *)query
-                                                  withNSStringArray:(IOSObjectArray *)selectionArgs {
-  return AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(db, query, selectionArgs);
-}
-
-+ (NSString *)stringForQueryWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)prog
-                                                   withNSStringArray:(IOSObjectArray *)selectionArgs {
-  return AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(prog, selectionArgs);
-}
-
-+ (void)cursorStringToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                      withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                         withNSString:(NSString *)column {
-  AndroidDatabaseDatabaseUtils_cursorStringToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(cursor, values, column);
-}
-
-+ (void)cursorLongToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                    withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                       withNSString:(NSString *)column {
-  AndroidDatabaseDatabaseUtils_cursorLongToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(cursor, values, column);
-}
-
-+ (void)cursorShortToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                     withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                        withNSString:(NSString *)column {
-  AndroidDatabaseDatabaseUtils_cursorShortToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(cursor, values, column);
-}
-
-+ (void)cursorIntToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                   withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                      withNSString:(NSString *)column {
-  AndroidDatabaseDatabaseUtils_cursorIntToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(cursor, values, column);
-}
-
-+ (void)cursorFloatToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                     withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                        withNSString:(NSString *)column {
-  AndroidDatabaseDatabaseUtils_cursorFloatToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(cursor, values, column);
-}
-
-+ (void)cursorDoubleToContentValuesIfPresentWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
-                                      withAndroidContentContentValues:(AndroidContentContentValues *)values
-                                                         withNSString:(NSString *)column {
-  AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(cursor, values, column);
-}
-
-+ (void)createDbFromSqlStatementsWithAndroidContentContext:(AndroidContentContext *)context
-                                              withNSString:(NSString *)dbName
-                                                   withInt:(jint)dbVersion
-                                              withNSString:(NSString *)sqlStatements {
-  AndroidDatabaseDatabaseUtils_createDbFromSqlStatementsWithAndroidContentContext_withNSString_withInt_withNSString_(context, dbName, dbVersion, sqlStatements);
-}
-
-+ (jint)getSqlStatementTypeWithNSString:(NSString *)sql {
-  return AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(sql);
-}
-
-+ (IOSObjectArray *)appendSelectionArgsWithNSStringArray:(IOSObjectArray *)originalValues
-                                       withNSStringArray:(IOSObjectArray *)newValues {
-  return AndroidDatabaseDatabaseUtils_appendSelectionArgsWithNSStringArray_withNSStringArray_(originalValues, newValues);
-}
-
-+ (jint)findRowIdColumnIndexWithNSStringArray:(IOSObjectArray *)columnNames {
-  return AndroidDatabaseDatabaseUtils_findRowIdColumnIndexWithNSStringArray_(columnNames);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x19, 10, 11, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 12, 13, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 14, 9, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 15, 16, -1, -1, -1, -1 },
-    { NULL, "[B", 0xa, 17, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 18, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 18, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 18, 21, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 22, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 23, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 23, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 23, 21, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 24, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 25, 26, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 27, 28, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 25, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 30, 26, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 30, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 31, 26, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 31, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 32, 26, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 33, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 34, 35, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 36, 37, -1, -1, -1, -1 },
-    { NULL, "J", 0x9, 38, 39, -1, -1, -1, -1 },
-    { NULL, "J", 0x9, 38, 40, -1, -1, -1, -1 },
-    { NULL, "J", 0x9, 38, 41, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 42, 39, -1, -1, -1, -1 },
-    { NULL, "J", 0x9, 43, 44, -1, -1, -1, -1 },
-    { NULL, "J", 0x9, 43, 45, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 46, 44, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 46, 45, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 47, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 49, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 50, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 51, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 52, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 53, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 54, 55, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 56, 9, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x9, 57, 58, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 59, 60, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram:withInt:withId:);
-  methods[2].selector = @selector(getTypeOfObjectWithId:);
-  methods[3].selector = @selector(cursorFillWindowWithAndroidDatabaseCursor:withInt:withAndroidDatabaseCursorWindow:);
-  methods[4].selector = @selector(appendEscapedSQLStringWithJavaLangStringBuilder:withNSString:);
-  methods[5].selector = @selector(sqlEscapeStringWithNSString:);
-  methods[6].selector = @selector(appendValueToSqlWithJavaLangStringBuilder:withId:);
-  methods[7].selector = @selector(concatenateWhereWithNSString:withNSString:);
-  methods[8].selector = @selector(getCollationKeyWithNSString:);
-  methods[9].selector = @selector(getKeyLenWithByteArray:);
-  methods[10].selector = @selector(getCollationKeyInBytesWithNSString:);
-  methods[11].selector = @selector(dumpCursorWithAndroidDatabaseCursor:);
-  methods[12].selector = @selector(dumpCursorWithAndroidDatabaseCursor:withJavaIoPrintStream:);
-  methods[13].selector = @selector(dumpCursorWithAndroidDatabaseCursor:withJavaLangStringBuilder:);
-  methods[14].selector = @selector(dumpCursorToStringWithAndroidDatabaseCursor:);
-  methods[15].selector = @selector(dumpCurrentRowWithAndroidDatabaseCursor:);
-  methods[16].selector = @selector(dumpCurrentRowWithAndroidDatabaseCursor:withJavaIoPrintStream:);
-  methods[17].selector = @selector(dumpCurrentRowWithAndroidDatabaseCursor:withJavaLangStringBuilder:);
-  methods[18].selector = @selector(dumpCurrentRowToStringWithAndroidDatabaseCursor:);
-  methods[19].selector = @selector(cursorStringToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:);
-  methods[20].selector = @selector(cursorStringToInsertHelperWithAndroidDatabaseCursor:withNSString:withAndroidDatabaseDatabaseUtils_InsertHelper:withInt:);
-  methods[21].selector = @selector(cursorStringToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:withNSString:);
-  methods[22].selector = @selector(cursorIntToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:);
-  methods[23].selector = @selector(cursorIntToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:withNSString:);
-  methods[24].selector = @selector(cursorLongToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:);
-  methods[25].selector = @selector(cursorLongToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:withNSString:);
-  methods[26].selector = @selector(cursorDoubleToCursorValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:);
-  methods[27].selector = @selector(cursorDoubleToContentValuesWithAndroidDatabaseCursor:withNSString:withAndroidContentContentValues:withNSString:);
-  methods[28].selector = @selector(cursorRowToContentValuesWithAndroidDatabaseCursor:withAndroidContentContentValues:);
-  methods[29].selector = @selector(cursorPickFillWindowStartPositionWithInt:withInt:);
-  methods[30].selector = @selector(queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:);
-  methods[31].selector = @selector(queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSString:);
-  methods[32].selector = @selector(queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSString:withNSStringArray:);
-  methods[33].selector = @selector(queryIsEmptyWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:);
-  methods[34].selector = @selector(longForQueryWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSStringArray:);
-  methods[35].selector = @selector(longForQueryWithAndroidDatabaseSqliteSQLiteStatement:withNSStringArray:);
-  methods[36].selector = @selector(stringForQueryWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSStringArray:);
-  methods[37].selector = @selector(stringForQueryWithAndroidDatabaseSqliteSQLiteStatement:withNSStringArray:);
-  methods[38].selector = @selector(cursorStringToContentValuesIfPresentWithAndroidDatabaseCursor:withAndroidContentContentValues:withNSString:);
-  methods[39].selector = @selector(cursorLongToContentValuesIfPresentWithAndroidDatabaseCursor:withAndroidContentContentValues:withNSString:);
-  methods[40].selector = @selector(cursorShortToContentValuesIfPresentWithAndroidDatabaseCursor:withAndroidContentContentValues:withNSString:);
-  methods[41].selector = @selector(cursorIntToContentValuesIfPresentWithAndroidDatabaseCursor:withAndroidContentContentValues:withNSString:);
-  methods[42].selector = @selector(cursorFloatToContentValuesIfPresentWithAndroidDatabaseCursor:withAndroidContentContentValues:withNSString:);
-  methods[43].selector = @selector(cursorDoubleToContentValuesIfPresentWithAndroidDatabaseCursor:withAndroidContentContentValues:withNSString:);
-  methods[44].selector = @selector(createDbFromSqlStatementsWithAndroidContentContext:withNSString:withInt:withNSString:);
-  methods[45].selector = @selector(getSqlStatementTypeWithNSString:);
-  methods[46].selector = @selector(appendSelectionArgsWithNSStringArray:withNSStringArray:);
-  methods[47].selector = @selector(findRowIdColumnIndexWithNSStringArray:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 61, -1, -1 },
-    { "DEBUG", "Z", .constantValue.asBOOL = AndroidDatabaseDatabaseUtils_DEBUG, 0x1a, -1, -1, -1, -1 },
-    { "STATEMENT_SELECT", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_SELECT, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_UPDATE", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_UPDATE, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_ATTACH", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_ATTACH, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_BEGIN", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_BEGIN, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_COMMIT", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_ABORT", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_ABORT, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_PRAGMA", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_PRAGMA, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_DDL", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_DDL, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_UNPREPARED", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_UNPREPARED, 0x19, -1, -1, -1, -1 },
-    { "STATEMENT_OTHER", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_STATEMENT_OTHER, 0x19, -1, -1, -1, -1 },
-    { "mColl", "LJavaTextCollator;", .constantValue.asLong = 0, 0xa, -1, 62, -1, -1 },
-  };
-  static const void *ptrTable[] = { "bindObjectToProgram", "LAndroidDatabaseSqliteSQLiteProgram;ILNSObject;", "getTypeOfObject", "LNSObject;", "cursorFillWindow", "LAndroidDatabaseCursor;ILAndroidDatabaseCursorWindow;", "appendEscapedSQLString", "LJavaLangStringBuilder;LNSString;", "sqlEscapeString", "LNSString;", "appendValueToSql", "LJavaLangStringBuilder;LNSObject;", "concatenateWhere", "LNSString;LNSString;", "getCollationKey", "getKeyLen", "[B", "getCollationKeyInBytes", "dumpCursor", "LAndroidDatabaseCursor;", "LAndroidDatabaseCursor;LJavaIoPrintStream;", "LAndroidDatabaseCursor;LJavaLangStringBuilder;", "dumpCursorToString", "dumpCurrentRow", "dumpCurrentRowToString", "cursorStringToContentValues", "LAndroidDatabaseCursor;LNSString;LAndroidContentContentValues;", "cursorStringToInsertHelper", "LAndroidDatabaseCursor;LNSString;LAndroidDatabaseDatabaseUtils_InsertHelper;I", "LAndroidDatabaseCursor;LNSString;LAndroidContentContentValues;LNSString;", "cursorIntToContentValues", "cursorLongToContentValues", "cursorDoubleToCursorValues", "cursorDoubleToContentValues", "cursorRowToContentValues", "LAndroidDatabaseCursor;LAndroidContentContentValues;", "cursorPickFillWindowStartPosition", "II", "queryNumEntries", "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;", "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;LNSString;", "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;LNSString;[LNSString;", "queryIsEmpty", "longForQuery", "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;[LNSString;", "LAndroidDatabaseSqliteSQLiteStatement;[LNSString;", "stringForQuery", "cursorStringToContentValuesIfPresent", "LAndroidDatabaseCursor;LAndroidContentContentValues;LNSString;", "cursorLongToContentValuesIfPresent", "cursorShortToContentValuesIfPresent", "cursorIntToContentValuesIfPresent", "cursorFloatToContentValuesIfPresent", "cursorDoubleToContentValuesIfPresent", "createDbFromSqlStatements", "LAndroidContentContext;LNSString;ILNSString;", "getSqlStatementType", "appendSelectionArgs", "[LNSString;[LNSString;", "findRowIdColumnIndex", "[LNSString;", &AndroidDatabaseDatabaseUtils_TAG, &AndroidDatabaseDatabaseUtils_mColl, "LAndroidDatabaseDatabaseUtils_InsertHelper;" };
-  static const J2ObjcClassInfo _AndroidDatabaseDatabaseUtils = { "DatabaseUtils", "android.database", ptrTable, methods, fields, 7, 0x1, 48, 13, -1, 63, -1, -1, -1 };
-  return &_AndroidDatabaseDatabaseUtils;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseDatabaseUtils class]) {
-    JreStrongAssign(&AndroidDatabaseDatabaseUtils_mColl, nil);
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseDatabaseUtils)
-  }
-}
-
-@end
-
-void AndroidDatabaseDatabaseUtils_init(AndroidDatabaseDatabaseUtils *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseDatabaseUtils *new_AndroidDatabaseDatabaseUtils_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseDatabaseUtils, init)
-}
-
-AndroidDatabaseDatabaseUtils *create_AndroidDatabaseDatabaseUtils_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseDatabaseUtils, init)
-}
-
-void AndroidDatabaseDatabaseUtils_bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram_withInt_withId_(AndroidDatabaseSqliteSQLiteProgram *prog, jint index, id value) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (value == nil) {
-    [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindNullWithInt:index];
-  }
-  else if ([value isKindOfClass:[JavaLangDouble class]] || [value isKindOfClass:[JavaLangFloat class]]) {
-    [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindDoubleWithInt:index withDouble:[((NSNumber *) cast_chk(value, [NSNumber class])) doubleValue]];
-  }
-  else if ([value isKindOfClass:[NSNumber class]]) {
-    [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindLongWithInt:index withLong:[((NSNumber *) cast_chk(value, [NSNumber class])) longLongValue]];
-  }
-  else if ([value isKindOfClass:[JavaLangBoolean class]]) {
-    JavaLangBoolean *bool_ = (JavaLangBoolean *) cast_chk(value, [JavaLangBoolean class]);
-    if ([bool_ booleanValue]) {
-      [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindLongWithInt:index withLong:1];
-    }
-    else {
-      [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindLongWithInt:index withLong:0];
-    }
-  }
-  else if ([value isKindOfClass:[IOSByteArray class]]) {
-    [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindBlobWithInt:index withByteArray:(IOSByteArray *) cast_chk(value, [IOSByteArray class])];
-  }
-  else {
-    [((AndroidDatabaseSqliteSQLiteProgram *) nil_chk(prog)) bindStringWithInt:index withNSString:[value description]];
-  }
-}
-
-jint AndroidDatabaseDatabaseUtils_getTypeOfObjectWithId_(id obj) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (obj == nil) {
-    return AndroidDatabaseCursor_FIELD_TYPE_NULL;
-  }
-  else if ([obj isKindOfClass:[IOSByteArray class]]) {
-    return AndroidDatabaseCursor_FIELD_TYPE_BLOB;
-  }
-  else if ([obj isKindOfClass:[JavaLangFloat class]] || [obj isKindOfClass:[JavaLangDouble class]]) {
-    return AndroidDatabaseCursor_FIELD_TYPE_FLOAT;
-  }
-  else if ([obj isKindOfClass:[JavaLangLong class]] || [obj isKindOfClass:[JavaLangInteger class]] || [obj isKindOfClass:[JavaLangShort class]] || [obj isKindOfClass:[JavaLangByte class]]) {
-    return AndroidDatabaseCursor_FIELD_TYPE_INTEGER;
-  }
-  else {
-    return AndroidDatabaseCursor_FIELD_TYPE_STRING;
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorFillWindowWithAndroidDatabaseCursor_withInt_withAndroidDatabaseCursorWindow_(id<AndroidDatabaseCursor> cursor, jint position, AndroidDatabaseCursorWindow *window) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (position < 0 || position >= [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getCount]) {
-    return;
-  }
-  jint oldPos = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getPosition];
-  jint numColumns = [cursor getColumnCount];
-  [((AndroidDatabaseCursorWindow *) nil_chk(window)) clear];
-  [window setStartPositionWithInt:position];
-  [window setNumColumnsWithInt:numColumns];
-  if ([cursor moveToPositionWithInt:position]) {
-    do {
-      if (![window allocRow]) {
-        break;
-      }
-      for (jint i = 0; i < numColumns; i++) {
-        jint type = [cursor getTypeWithInt:i];
-        jboolean success;
-        switch (type) {
-          case AndroidDatabaseCursor_FIELD_TYPE_NULL:
-          success = [window putNullWithInt:position withInt:i];
-          break;
-          case AndroidDatabaseCursor_FIELD_TYPE_INTEGER:
-          success = [window putLongWithLong:[cursor getLongWithInt:i] withInt:position withInt:i];
-          break;
-          case AndroidDatabaseCursor_FIELD_TYPE_FLOAT:
-          success = [window putDoubleWithDouble:[cursor getDoubleWithInt:i] withInt:position withInt:i];
-          break;
-          case AndroidDatabaseCursor_FIELD_TYPE_BLOB:
-          {
-            IOSByteArray *value = [cursor getBlobWithInt:i];
-            success = value != nil ? [window putBlobWithByteArray:value withInt:position withInt:i] : [window putNullWithInt:position withInt:i];
-            break;
-          }
-          default:
-          case AndroidDatabaseCursor_FIELD_TYPE_STRING:
-          {
-            NSString *value = [cursor getStringWithInt:i];
-            success = value != nil ? [window putStringWithNSString:value withInt:position withInt:i] : [window putNullWithInt:position withInt:i];
-            break;
-          }
-        }
-        if (!success) {
-          [window freeLastRow];
-          break;
-        }
-      }
-      position += 1;
-    }
-    while ([cursor moveToNext]);
-  }
-  [cursor moveToPositionWithInt:oldPos];
-}
-
-void AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *sqlString) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:'\''];
-  if ([((NSString *) nil_chk(sqlString)) java_indexOf:'\''] != -1) {
-    jint length = ((jint) [sqlString length]);
-    for (jint i = 0; i < length; i++) {
-      jchar c = [sqlString charAtWithInt:i];
-      if (c == '\'') {
-        [sb appendWithChar:'\''];
-      }
-      [sb appendWithChar:c];
-    }
-  }
-  else [sb appendWithNSString:sqlString];
-  [sb appendWithChar:'\''];
-}
-
-NSString *AndroidDatabaseDatabaseUtils_sqlEscapeStringWithNSString_(NSString *value) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  JavaLangStringBuilder *escaper = create_JavaLangStringBuilder_init();
-  AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(escaper, value);
-  return [escaper description];
-}
-
-void AndroidDatabaseDatabaseUtils_appendValueToSqlWithJavaLangStringBuilder_withId_(JavaLangStringBuilder *sql, id value) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (value == nil) {
-    [((JavaLangStringBuilder *) nil_chk(sql)) appendWithNSString:@"NULL"];
-  }
-  else if ([value isKindOfClass:[JavaLangBoolean class]]) {
-    JavaLangBoolean *bool_ = (JavaLangBoolean *) cast_chk(value, [JavaLangBoolean class]);
-    if ([bool_ booleanValue]) {
-      [((JavaLangStringBuilder *) nil_chk(sql)) appendWithChar:'1'];
-    }
-    else {
-      [((JavaLangStringBuilder *) nil_chk(sql)) appendWithChar:'0'];
-    }
-  }
-  else {
-    AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(sql, [value description]);
-  }
-}
-
-NSString *AndroidDatabaseDatabaseUtils_concatenateWhereWithNSString_withNSString_(NSString *a, NSString *b) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(a)) {
-    return b;
-  }
-  if (AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(b)) {
-    return a;
-  }
-  return JreStrcat("C$$$C", '(', a, @") AND (", b, ')');
-}
-
-NSString *AndroidDatabaseDatabaseUtils_getCollationKeyWithNSString_(NSString *name) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  IOSByteArray *arr = AndroidDatabaseDatabaseUtils_getCollationKeyInBytesWithNSString_(name);
-  @try {
-    return [NSString java_stringWithBytes:arr offset:0 length:AndroidDatabaseDatabaseUtils_getKeyLenWithByteArray_(arr) charsetName:@"ISO8859_1"];
-  }
-  @catch (JavaLangException *ex) {
-    return @"";
-  }
-}
-
-jint AndroidDatabaseDatabaseUtils_getKeyLenWithByteArray_(IOSByteArray *arr) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (IOSByteArray_Get(arr, ((IOSByteArray *) nil_chk(arr))->size_ - 1) != 0) {
-    return arr->size_;
-  }
-  else {
-    return arr->size_ - 1;
-  }
-}
-
-IOSByteArray *AndroidDatabaseDatabaseUtils_getCollationKeyInBytesWithNSString_(NSString *name) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (AndroidDatabaseDatabaseUtils_mColl == nil) {
-    JreStrongAssign(&AndroidDatabaseDatabaseUtils_mColl, JavaTextCollator_getInstance());
-    [((JavaTextCollator *) nil_chk(AndroidDatabaseDatabaseUtils_mColl)) setStrengthWithInt:JavaTextCollator_PRIMARY];
-  }
-  return [((JavaTextCollationKey *) nil_chk([((JavaTextCollator *) nil_chk(AndroidDatabaseDatabaseUtils_mColl)) getCollationKeyWithNSString:name])) toByteArray];
-}
-
-void AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaIoPrintStream_(cursor, JreLoadStatic(JavaLangSystem, out));
-}
-
-void AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaIoPrintStream_(id<AndroidDatabaseCursor> cursor, JavaIoPrintStream *stream) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((JavaIoPrintStream *) nil_chk(stream)) printlnWithNSString:JreStrcat("$@", @">>>>> Dumping cursor ", cursor)];
-  if (cursor != nil) {
-    jint startPos = [cursor getPosition];
-    [cursor moveToPositionWithInt:-1];
-    while ([cursor moveToNext]) {
-      AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaIoPrintStream_(cursor, stream);
-    }
-    [cursor moveToPositionWithInt:startPos];
-  }
-  [stream printlnWithNSString:@"<<<<<"];
-}
-
-void AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaLangStringBuilder_(id<AndroidDatabaseCursor> cursor, JavaLangStringBuilder *sb) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:JreStrcat("$@C", @">>>>> Dumping cursor ", cursor, 0x000a)];
-  if (cursor != nil) {
-    jint startPos = [cursor getPosition];
-    [cursor moveToPositionWithInt:-1];
-    while ([cursor moveToNext]) {
-      AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaLangStringBuilder_(cursor, sb);
-    }
-    [cursor moveToPositionWithInt:startPos];
-  }
-  [sb appendWithNSString:@"<<<<<\n"];
-}
-
-NSString *AndroidDatabaseDatabaseUtils_dumpCursorToStringWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
-  AndroidDatabaseDatabaseUtils_dumpCursorWithAndroidDatabaseCursor_withJavaLangStringBuilder_(cursor, sb);
-  return [sb description];
-}
-
-void AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaIoPrintStream_(cursor, JreLoadStatic(JavaLangSystem, out));
-}
-
-void AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaIoPrintStream_(id<AndroidDatabaseCursor> cursor, JavaIoPrintStream *stream) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  IOSObjectArray *cols = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnNames];
-  [((JavaIoPrintStream *) nil_chk(stream)) printlnWithNSString:JreStrcat("I$", [cursor getPosition], @" {")];
-  jint length = ((IOSObjectArray *) nil_chk(cols))->size_;
-  for (jint i = 0; i < length; i++) {
-    NSString *value;
-    @try {
-      value = [cursor getStringWithInt:i];
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *e) {
-      value = @"<unprintable>";
-    }
-    [stream printlnWithNSString:JreStrcat("$$C$", @"   ", IOSObjectArray_Get(cols, i), '=', value)];
-  }
-  [stream printlnWithNSString:@"}"];
-}
-
-void AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaLangStringBuilder_(id<AndroidDatabaseCursor> cursor, JavaLangStringBuilder *sb) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  IOSObjectArray *cols = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnNames];
-  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:JreStrcat("I$", [cursor getPosition], @" {\n")];
-  jint length = ((IOSObjectArray *) nil_chk(cols))->size_;
-  for (jint i = 0; i < length; i++) {
-    NSString *value;
-    @try {
-      value = [cursor getStringWithInt:i];
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *e) {
-      value = @"<unprintable>";
-    }
-    [sb appendWithNSString:JreStrcat("$$C$C", @"   ", IOSObjectArray_Get(cols, i), '=', value, 0x000a)];
-  }
-  [sb appendWithNSString:@"}\n"];
-}
-
-NSString *AndroidDatabaseDatabaseUtils_dumpCurrentRowToStringWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
-  AndroidDatabaseDatabaseUtils_dumpCurrentRowWithAndroidDatabaseCursor_withJavaLangStringBuilder_(cursor, sb);
-  return [sb description];
-}
-
-void AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, field);
-}
-
-void AndroidDatabaseDatabaseUtils_cursorStringToInsertHelperWithAndroidDatabaseCursor_withNSString_withAndroidDatabaseDatabaseUtils_InsertHelper_withInt_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidDatabaseDatabaseUtils_InsertHelper *inserter, jint index) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((AndroidDatabaseDatabaseUtils_InsertHelper *) nil_chk(inserter)) bindWithInt:index withNSString:[((id<AndroidDatabaseCursor>) nil_chk(cursor)) getStringWithInt:[cursor getColumnIndexOrThrowWithNSString:field]]];
-}
-
-void AndroidDatabaseDatabaseUtils_cursorStringToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withNSString:[((id<AndroidDatabaseCursor>) nil_chk(cursor)) getStringWithInt:[cursor getColumnIndexOrThrowWithNSString:field]]];
-}
-
-void AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, field);
-}
-
-void AndroidDatabaseDatabaseUtils_cursorIntToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint colIndex = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:field];
-  if (![cursor isNullWithInt:colIndex]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withJavaLangInteger:JavaLangInteger_valueOfWithInt_([cursor getIntWithInt:colIndex])];
-  }
-  else {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withJavaLangInteger:nil];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, field);
-}
-
-void AndroidDatabaseDatabaseUtils_cursorLongToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint colIndex = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:field];
-  if (![cursor isNullWithInt:colIndex]) {
-    JavaLangLong *value = JavaLangLong_valueOfWithLong_([cursor getLongWithInt:colIndex]);
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withJavaLangLong:value];
-  }
-  else {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withJavaLangLong:nil];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorDoubleToCursorValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(cursor, field, values, field);
-}
-
-void AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesWithAndroidDatabaseCursor_withNSString_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, NSString *field, AndroidContentContentValues *values, NSString *key) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint colIndex = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:field];
-  if (![cursor isNullWithInt:colIndex]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withJavaLangDouble:JavaLangDouble_valueOfWithDouble_([cursor getDoubleWithInt:colIndex])];
-  }
-  else {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:key withJavaLangDouble:nil];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorRowToContentValuesWithAndroidDatabaseCursor_withAndroidContentContentValues_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseAbstractWindowedCursor *awc = ([cursor isKindOfClass:[AndroidDatabaseAbstractWindowedCursor class]]) ? (AndroidDatabaseAbstractWindowedCursor *) cast_chk(cursor, [AndroidDatabaseAbstractWindowedCursor class]) : nil;
-  IOSObjectArray *columns = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnNames];
-  jint length = ((IOSObjectArray *) nil_chk(columns))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (awc != nil && [awc isBlobWithInt:i]) {
-      [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:IOSObjectArray_Get(columns, i) withByteArray:[cursor getBlobWithInt:i]];
-    }
-    else {
-      [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:IOSObjectArray_Get(columns, i) withNSString:[cursor getStringWithInt:i]];
-    }
-  }
-}
-
-jint AndroidDatabaseDatabaseUtils_cursorPickFillWindowStartPositionWithInt_withInt_(jint cursorPosition, jint cursorWindowCapacity) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  return JavaLangMath_maxWithInt_withInt_(cursorPosition - cursorWindowCapacity / 3, 0);
-}
-
-jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  return AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_withNSStringArray_(db, table, nil, nil);
-}
-
-jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table, NSString *selection) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  return AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_withNSStringArray_(db, table, selection, nil);
-}
-
-jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table, NSString *selection, IOSObjectArray *selectionArgs) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  NSString *s = (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(selection)) ? JreStrcat("$$", @" where ", selection) : @"";
-  return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(db, JreStrcat("$$$", @"select count(*) from ", table, s), selectionArgs);
-}
-
-jboolean AndroidDatabaseDatabaseUtils_queryIsEmptyWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jlong isEmpty = AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(db, JreStrcat("$$C", @"select exists(select 1 from ", table, ')'), nil);
-  return isEmpty == 0;
-}
-
-jlong AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query, IOSObjectArray *selectionArgs) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseSqliteSQLiteStatement *prog = [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) compileStatementWithNSString:query];
-  @try {
-    return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(prog, selectionArgs);
-  }
-  @finally {
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(prog)) close];
-  }
-}
-
-jlong AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(AndroidDatabaseSqliteSQLiteStatement *prog, IOSObjectArray *selectionArgs) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(prog)) bindAllArgsAsStringsWithNSStringArray:selectionArgs];
-  return [prog simpleQueryForLong];
-}
-
-NSString *AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query, IOSObjectArray *selectionArgs) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseSqliteSQLiteStatement *prog = [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) compileStatementWithNSString:query];
-  @try {
-    return AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(prog, selectionArgs);
-  }
-  @finally {
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(prog)) close];
-  }
-}
-
-NSString *AndroidDatabaseDatabaseUtils_stringForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(AndroidDatabaseSqliteSQLiteStatement *prog, IOSObjectArray *selectionArgs) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(prog)) bindAllArgsAsStringsWithNSStringArray:selectionArgs];
-  return [prog simpleQueryForString];
-}
-
-void AndroidDatabaseDatabaseUtils_cursorStringToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint index = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:column];
-  if (index != -1 && ![cursor isNullWithInt:index]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:column withNSString:[cursor getStringWithInt:index]];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorLongToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint index = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:column];
-  if (index != -1 && ![cursor isNullWithInt:index]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:column withJavaLangLong:JavaLangLong_valueOfWithLong_([cursor getLongWithInt:index])];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorShortToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint index = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:column];
-  if (index != -1 && ![cursor isNullWithInt:index]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:column withJavaLangShort:JavaLangShort_valueOfWithShort_([cursor getShortWithInt:index])];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorIntToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint index = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:column];
-  if (index != -1 && ![cursor isNullWithInt:index]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:column withJavaLangInteger:JavaLangInteger_valueOfWithInt_([cursor getIntWithInt:index])];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorFloatToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint index = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:column];
-  if (index != -1 && ![cursor isNullWithInt:index]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:column withJavaLangFloat:JavaLangFloat_valueOfWithFloat_([cursor getFloatWithInt:index])];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_cursorDoubleToContentValuesIfPresentWithAndroidDatabaseCursor_withAndroidContentContentValues_withNSString_(id<AndroidDatabaseCursor> cursor, AndroidContentContentValues *values, NSString *column) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint index = [((id<AndroidDatabaseCursor>) nil_chk(cursor)) getColumnIndexWithNSString:column];
-  if (index != -1 && ![cursor isNullWithInt:index]) {
-    [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:column withJavaLangDouble:JavaLangDouble_valueOfWithDouble_([cursor getDoubleWithInt:index])];
-  }
-}
-
-void AndroidDatabaseDatabaseUtils_createDbFromSqlStatementsWithAndroidContentContext_withNSString_withInt_withNSString_(AndroidContentContext *context, NSString *dbName, jint dbVersion, NSString *sqlStatements) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  AndroidDatabaseSqliteSQLiteDatabase *db = [((AndroidContentContext *) nil_chk(context)) openOrCreateDatabaseWithNSString:dbName withInt:0 withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:nil];
-  IOSObjectArray *statements = AndroidTextTextUtils_splitWithNSString_withNSString_(sqlStatements, @";\n");
-  {
-    IOSObjectArray *a__ = statements;
-    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
-    NSString * const *e__ = b__ + a__->size_;
-    while (b__ < e__) {
-      NSString *statement = *b__++;
-      if (AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(statement)) continue;
-      [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) execSQLWithNSString:statement];
-    }
-  }
-  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) setVersionWithInt:dbVersion];
-  [db close];
-}
-
-jint AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(NSString *sql) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  sql = [((NSString *) nil_chk(sql)) java_trim];
-  if (((jint) [((NSString *) nil_chk(sql)) length]) < 3) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_OTHER;
-  }
-  NSString *prefixSql = [((NSString *) nil_chk([sql java_substring:0 endIndex:3])) java_uppercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, ROOT)];
-  if ([((NSString *) nil_chk(prefixSql)) isEqual:@"SEL"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_SELECT;
-  }
-  else if ([prefixSql isEqual:@"INS"] || [prefixSql isEqual:@"UPD"] || [prefixSql isEqual:@"REP"] || [prefixSql isEqual:@"DEL"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_UPDATE;
-  }
-  else if ([prefixSql isEqual:@"ATT"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_ATTACH;
-  }
-  else if ([prefixSql isEqual:@"COM"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT;
-  }
-  else if ([prefixSql isEqual:@"END"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT;
-  }
-  else if ([prefixSql isEqual:@"ROL"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_ABORT;
-  }
-  else if ([prefixSql isEqual:@"BEG"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_BEGIN;
-  }
-  else if ([prefixSql isEqual:@"PRA"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_PRAGMA;
-  }
-  else if ([prefixSql isEqual:@"CRE"] || [prefixSql isEqual:@"DRO"] || [prefixSql isEqual:@"ALT"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_DDL;
-  }
-  else if ([prefixSql isEqual:@"ANA"] || [prefixSql isEqual:@"DET"]) {
-    return AndroidDatabaseDatabaseUtils_STATEMENT_UNPREPARED;
-  }
-  return AndroidDatabaseDatabaseUtils_STATEMENT_OTHER;
-}
-
-IOSObjectArray *AndroidDatabaseDatabaseUtils_appendSelectionArgsWithNSStringArray_withNSStringArray_(IOSObjectArray *originalValues, IOSObjectArray *newValues) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  if (originalValues == nil || originalValues->size_ == 0) {
-    return newValues;
-  }
-  IOSObjectArray *result = [IOSObjectArray arrayWithLength:originalValues->size_ + ((IOSObjectArray *) nil_chk(newValues))->size_ type:NSString_class_()];
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(originalValues, 0, result, 0, originalValues->size_);
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(newValues, 0, result, originalValues->size_, newValues->size_);
-  return result;
-}
-
-jint AndroidDatabaseDatabaseUtils_findRowIdColumnIndexWithNSStringArray_(IOSObjectArray *columnNames) {
-  AndroidDatabaseDatabaseUtils_initialize();
-  jint length = ((IOSObjectArray *) nil_chk(columnNames))->size_;
-  for (jint i = 0; i < length; i++) {
-    if ([((NSString *) nil_chk(IOSObjectArray_Get(columnNames, i))) isEqual:@"_id"]) {
-      return i;
-    }
-  }
-  return -1;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseDatabaseUtils)
-
-@implementation AndroidDatabaseDatabaseUtils_InsertHelper
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)tableName {
-  AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(self, db, tableName);
-  return self;
-}
-
-- (void)buildSQL {
-  AndroidDatabaseDatabaseUtils_InsertHelper_buildSQL(self);
-}
-
-- (AndroidDatabaseSqliteSQLiteStatement *)getStatementWithBoolean:(jboolean)allowReplace {
-  return AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(self, allowReplace);
-}
-
-- (jlong)insertInternalWithAndroidContentContentValues:(AndroidContentContentValues *)values
-                                           withBoolean:(jboolean)allowReplace {
-  return AndroidDatabaseDatabaseUtils_InsertHelper_insertInternalWithAndroidContentContentValues_withBoolean_(self, values, allowReplace);
-}
-
-- (jint)getColumnIndexWithNSString:(NSString *)key {
-  AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(self, false);
-  JavaLangInteger *index = [((JavaUtilHashMap *) nil_chk(mColumns_)) getWithId:key];
-  if (index == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"column '", key, @"' is invalid"));
-  }
-  return [index intValue];
-}
-
-- (void)bindWithInt:(jint)index
-         withDouble:(jdouble)value {
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindDoubleWithInt:index withDouble:value];
-}
-
-- (void)bindWithInt:(jint)index
-          withFloat:(jfloat)value {
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindDoubleWithInt:index withDouble:value];
-}
-
-- (void)bindWithInt:(jint)index
-           withLong:(jlong)value {
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindLongWithInt:index withLong:value];
-}
-
-- (void)bindWithInt:(jint)index
-            withInt:(jint)value {
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindLongWithInt:index withLong:value];
-}
-
-- (void)bindWithInt:(jint)index
-        withBoolean:(jboolean)value {
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindLongWithInt:index withLong:value ? 1 : 0];
-}
-
-- (void)bindNullWithInt:(jint)index {
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindNullWithInt:index];
-}
-
-- (void)bindWithInt:(jint)index
-      withByteArray:(IOSByteArray *)value {
-  if (value == nil) {
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindNullWithInt:index];
-  }
-  else {
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindBlobWithInt:index withByteArray:value];
-  }
-}
-
-- (void)bindWithInt:(jint)index
-       withNSString:(NSString *)value {
-  if (value == nil) {
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindNullWithInt:index];
-  }
-  else {
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) bindStringWithInt:index withNSString:value];
-  }
-}
-
-- (jlong)insertWithAndroidContentContentValues:(AndroidContentContentValues *)values {
-  return AndroidDatabaseDatabaseUtils_InsertHelper_insertInternalWithAndroidContentContentValues_withBoolean_(self, values, false);
-}
-
-- (jlong)execute {
-  if (mPreparedStatement_ == nil) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"you must prepare this inserter before calling execute");
-  }
-  @try {
-    return [mPreparedStatement_ executeInsert];
-  }
-  @catch (AndroidDatabaseSQLException *e) {
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseDatabaseUtils_TAG, JreStrcat("$$", @"Error executing InsertHelper with table ", mTableName_), e);
-    return -1;
-  }
-  @finally {
-    JreStrongAssign(&mPreparedStatement_, nil);
-  }
-}
-
-- (void)prepareForInsert {
-  JreStrongAssign(&mPreparedStatement_, AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(self, false));
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) clearBindings];
-}
-
-- (void)prepareForReplace {
-  JreStrongAssign(&mPreparedStatement_, AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(self, true));
-  [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(mPreparedStatement_)) clearBindings];
-}
-
-- (jlong)replaceWithAndroidContentContentValues:(AndroidContentContentValues *)values {
-  return AndroidDatabaseDatabaseUtils_InsertHelper_insertInternalWithAndroidContentContentValues_withBoolean_(self, values, true);
-}
-
-- (void)close {
-  if (mInsertStatement_ != nil) {
-    [mInsertStatement_ close];
-    JreStrongAssign(&mInsertStatement_, nil);
-  }
-  if (mReplaceStatement_ != nil) {
-    [mReplaceStatement_ close];
-    JreStrongAssign(&mReplaceStatement_, nil);
-  }
-  JreStrongAssign(&mInsertSQL_, nil);
-  JreStrongAssign(&mColumns_, nil);
-}
-
-- (void)dealloc {
-  RELEASE_(mDb_);
-  RELEASE_(mTableName_);
-  RELEASE_(mColumns_);
-  RELEASE_(mInsertSQL_);
-  RELEASE_(mInsertStatement_);
-  RELEASE_(mReplaceStatement_);
-  RELEASE_(mPreparedStatement_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteStatement;", 0x2, 2, 3, 1, -1, -1, -1 },
-    { NULL, "J", 0x2, 4, 5, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 12, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 17, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 18, 19, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 20, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:);
-  methods[1].selector = @selector(buildSQL);
-  methods[2].selector = @selector(getStatementWithBoolean:);
-  methods[3].selector = @selector(insertInternalWithAndroidContentContentValues:withBoolean:);
-  methods[4].selector = @selector(getColumnIndexWithNSString:);
-  methods[5].selector = @selector(bindWithInt:withDouble:);
-  methods[6].selector = @selector(bindWithInt:withFloat:);
-  methods[7].selector = @selector(bindWithInt:withLong:);
-  methods[8].selector = @selector(bindWithInt:withInt:);
-  methods[9].selector = @selector(bindWithInt:withBoolean:);
-  methods[10].selector = @selector(bindNullWithInt:);
-  methods[11].selector = @selector(bindWithInt:withByteArray:);
-  methods[12].selector = @selector(bindWithInt:withNSString:);
-  methods[13].selector = @selector(insertWithAndroidContentContentValues:);
-  methods[14].selector = @selector(execute);
-  methods[15].selector = @selector(prepareForInsert);
-  methods[16].selector = @selector(prepareForReplace);
-  methods[17].selector = @selector(replaceWithAndroidContentContentValues:);
-  methods[18].selector = @selector(close);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mDb_", "LAndroidDatabaseSqliteSQLiteDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mTableName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mColumns_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 21, -1 },
-    { "mInsertSQL_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mInsertStatement_", "LAndroidDatabaseSqliteSQLiteStatement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mReplaceStatement_", "LAndroidDatabaseSqliteSQLiteStatement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mPreparedStatement_", "LAndroidDatabaseSqliteSQLiteStatement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "TABLE_INFO_PRAGMA_COLUMNNAME_INDEX", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_InsertHelper_TABLE_INFO_PRAGMA_COLUMNNAME_INDEX, 0x19, -1, -1, -1, -1 },
-    { "TABLE_INFO_PRAGMA_DEFAULT_INDEX", "I", .constantValue.asInt = AndroidDatabaseDatabaseUtils_InsertHelper_TABLE_INFO_PRAGMA_DEFAULT_INDEX, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;", "LAndroidDatabaseSQLException;", "getStatement", "Z", "insertInternal", "LAndroidContentContentValues;Z", "getColumnIndex", "LNSString;", "bind", "ID", "IF", "IJ", "II", "IZ", "bindNull", "I", "I[B", "ILNSString;", "insert", "LAndroidContentContentValues;", "replace", "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;", "LAndroidDatabaseDatabaseUtils;", (void *)&AndroidDatabaseDatabaseUtils_InsertHelper__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidDatabaseDatabaseUtils_InsertHelper = { "InsertHelper", "android.database", ptrTable, methods, fields, 7, 0x9, 19, 9, 22, -1, -1, -1, 23 };
-  return &_AndroidDatabaseDatabaseUtils_InsertHelper;
-}
-
-@end
-
-void AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseDatabaseUtils_InsertHelper *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *tableName) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mInsertSQL_, nil);
-  JreStrongAssign(&self->mInsertStatement_, nil);
-  JreStrongAssign(&self->mReplaceStatement_, nil);
-  JreStrongAssign(&self->mPreparedStatement_, nil);
-  JreStrongAssign(&self->mDb_, db);
-  JreStrongAssign(&self->mTableName_, tableName);
-}
-
-AndroidDatabaseDatabaseUtils_InsertHelper *new_AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *tableName) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseDatabaseUtils_InsertHelper, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_, db, tableName)
-}
-
-AndroidDatabaseDatabaseUtils_InsertHelper *create_AndroidDatabaseDatabaseUtils_InsertHelper_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *tableName) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseDatabaseUtils_InsertHelper, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_, db, tableName)
-}
-
-void AndroidDatabaseDatabaseUtils_InsertHelper_buildSQL(AndroidDatabaseDatabaseUtils_InsertHelper *self) {
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(128);
-  [sb appendWithNSString:@"INSERT INTO "];
-  [sb appendWithNSString:self->mTableName_];
-  [sb appendWithNSString:@" ("];
-  JavaLangStringBuilder *sbv = create_JavaLangStringBuilder_initWithInt_(128);
-  [sbv appendWithNSString:@"VALUES ("];
-  jint i = 1;
-  id<AndroidDatabaseCursor> cur = nil;
-  @try {
-    cur = [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(self->mDb_)) rawQueryWithNSString:JreStrcat("$$C", @"PRAGMA table_info(", self->mTableName_, ')') withNSStringArray:nil];
-    JreStrongAssignAndConsume(&self->mColumns_, new_JavaUtilHashMap_initWithInt_([((id<AndroidDatabaseCursor>) nil_chk(cur)) getCount]));
-    while ([cur moveToNext]) {
-      NSString *columnName = [cur getStringWithInt:AndroidDatabaseDatabaseUtils_InsertHelper_TABLE_INFO_PRAGMA_COLUMNNAME_INDEX];
-      NSString *defaultValue = [cur getStringWithInt:AndroidDatabaseDatabaseUtils_InsertHelper_TABLE_INFO_PRAGMA_DEFAULT_INDEX];
-      [((JavaUtilHashMap *) nil_chk(self->mColumns_)) putWithId:columnName withId:JavaLangInteger_valueOfWithInt_(i)];
-      [sb appendWithNSString:@"'"];
-      [sb appendWithNSString:columnName];
-      [sb appendWithNSString:@"'"];
-      if (defaultValue == nil) {
-        [sbv appendWithNSString:@"?"];
-      }
-      else {
-        [sbv appendWithNSString:@"COALESCE(?, "];
-        [sbv appendWithNSString:defaultValue];
-        [sbv appendWithNSString:@")"];
-      }
-      [sb appendWithNSString:i == [cur getCount] ? @") " : @", "];
-      [sbv appendWithNSString:i == [cur getCount] ? @");" : @", "];
-      ++i;
-    }
-  }
-  @finally {
-    if (cur != nil) [cur close];
-  }
-  [sb appendWithJavaLangCharSequence:sbv];
-  JreStrongAssign(&self->mInsertSQL_, [sb description]);
-}
-
-AndroidDatabaseSqliteSQLiteStatement *AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(AndroidDatabaseDatabaseUtils_InsertHelper *self, jboolean allowReplace) {
-  if (allowReplace) {
-    if (self->mReplaceStatement_ == nil) {
-      if (self->mInsertSQL_ == nil) AndroidDatabaseDatabaseUtils_InsertHelper_buildSQL(self);
-      NSString *replaceSQL = JreStrcat("$$", @"INSERT OR REPLACE", [((NSString *) nil_chk(self->mInsertSQL_)) java_substring:6]);
-      JreStrongAssign(&self->mReplaceStatement_, [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(self->mDb_)) compileStatementWithNSString:replaceSQL]);
-    }
-    return self->mReplaceStatement_;
-  }
-  else {
-    if (self->mInsertStatement_ == nil) {
-      if (self->mInsertSQL_ == nil) AndroidDatabaseDatabaseUtils_InsertHelper_buildSQL(self);
-      JreStrongAssign(&self->mInsertStatement_, [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(self->mDb_)) compileStatementWithNSString:self->mInsertSQL_]);
-    }
-    return self->mInsertStatement_;
-  }
-}
-
-jlong AndroidDatabaseDatabaseUtils_InsertHelper_insertInternalWithAndroidContentContentValues_withBoolean_(AndroidDatabaseDatabaseUtils_InsertHelper *self, AndroidContentContentValues *values, jboolean allowReplace) {
-  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(self->mDb_)) beginTransactionNonExclusive];
-  @try {
-    AndroidDatabaseSqliteSQLiteStatement *stmt = AndroidDatabaseDatabaseUtils_InsertHelper_getStatementWithBoolean_(self, allowReplace);
-    [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(stmt)) clearBindings];
-    for (id<JavaUtilMap_Entry> __strong e in nil_chk([((AndroidContentContentValues *) nil_chk(values)) valueSet])) {
-      NSString *key = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
-      jint i = [self getColumnIndexWithNSString:key];
-      AndroidDatabaseDatabaseUtils_bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram_withInt_withId_(stmt, i, [e getValue]);
-    }
-    jlong result = [stmt executeInsert];
-    [self->mDb_ setTransactionSuccessful];
-    return result;
-  }
-  @catch (AndroidDatabaseSQLException *e) {
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseDatabaseUtils_TAG, JreStrcat("$@$$", @"Error inserting ", values, @" into table  ", self->mTableName_), e);
-    return -1;
-  }
-  @finally {
-    [self->mDb_ endTransaction];
-  }
-}
-
-IOSObjectArray *AndroidDatabaseDatabaseUtils_InsertHelper__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseDatabaseUtils_InsertHelper)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDefaultDatabaseErrorHandler.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDefaultDatabaseErrorHandler.h
deleted file mode 100644
index 4e773030b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDefaultDatabaseErrorHandler.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseDefaultDatabaseErrorHandler")
-#ifdef RESTRICT_AndroidDatabaseDefaultDatabaseErrorHandler
-#define INCLUDE_ALL_AndroidDatabaseDefaultDatabaseErrorHandler 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseDefaultDatabaseErrorHandler 1
-#endif
-#undef RESTRICT_AndroidDatabaseDefaultDatabaseErrorHandler
-
-#if !defined (AndroidDatabaseDefaultDatabaseErrorHandler_) && (INCLUDE_ALL_AndroidDatabaseDefaultDatabaseErrorHandler || defined(INCLUDE_AndroidDatabaseDefaultDatabaseErrorHandler))
-#define AndroidDatabaseDefaultDatabaseErrorHandler_
-
-#define RESTRICT_AndroidDatabaseDatabaseErrorHandler 1
-#define INCLUDE_AndroidDatabaseDatabaseErrorHandler 1
-#include "AndroidDatabaseDatabaseErrorHandler.h"
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-
-@interface AndroidDatabaseDefaultDatabaseErrorHandler : NSObject < AndroidDatabaseDatabaseErrorHandler >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)dbObj;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseDefaultDatabaseErrorHandler)
-
-FOUNDATION_EXPORT void AndroidDatabaseDefaultDatabaseErrorHandler_init(AndroidDatabaseDefaultDatabaseErrorHandler *self);
-
-FOUNDATION_EXPORT AndroidDatabaseDefaultDatabaseErrorHandler *new_AndroidDatabaseDefaultDatabaseErrorHandler_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseDefaultDatabaseErrorHandler *create_AndroidDatabaseDefaultDatabaseErrorHandler_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDefaultDatabaseErrorHandler)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseDefaultDatabaseErrorHandler")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDefaultDatabaseErrorHandler.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDefaultDatabaseErrorHandler.m
deleted file mode 100644
index c1c614bb4..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseDefaultDatabaseErrorHandler.m
+++ /dev/null
@@ -1,118 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseDefaultDatabaseErrorHandler.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "android/util/Pair.h"
-#include "java/io/File.h"
-#include "java/lang/Exception.h"
-#include "java/util/List.h"
-
-@interface AndroidDatabaseDefaultDatabaseErrorHandler ()
-
-- (void)deleteDatabaseFileWithNSString:(NSString *)fileName;
-
-@end
-
-inline NSString *AndroidDatabaseDefaultDatabaseErrorHandler_get_TAG();
-static NSString *AndroidDatabaseDefaultDatabaseErrorHandler_TAG = @"DefaultDatabaseErrorHandler";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseDefaultDatabaseErrorHandler, TAG, NSString *)
-
-__attribute__((unused)) static void AndroidDatabaseDefaultDatabaseErrorHandler_deleteDatabaseFileWithNSString_(AndroidDatabaseDefaultDatabaseErrorHandler *self, NSString *fileName);
-
-@implementation AndroidDatabaseDefaultDatabaseErrorHandler
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseDefaultDatabaseErrorHandler_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)dbObj {
-  AndroidUtilLog_eWithNSString_withNSString_(AndroidDatabaseDefaultDatabaseErrorHandler_TAG, JreStrcat("$$", @"Corruption reported by sqlite on database: ", [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(dbObj)) getPath]));
-  if (![dbObj isOpen]) {
-    AndroidDatabaseDefaultDatabaseErrorHandler_deleteDatabaseFileWithNSString_(self, [dbObj getPath]);
-    return;
-  }
-  id<JavaUtilList> attachedDbs = nil;
-  @try {
-    @try {
-      attachedDbs = [dbObj getAttachedDbs];
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *e) {
-    }
-    @try {
-      [dbObj close];
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *e) {
-    }
-  }
-  @finally {
-    if (attachedDbs != nil) {
-      for (AndroidUtilPair * __strong p in attachedDbs) {
-        AndroidDatabaseDefaultDatabaseErrorHandler_deleteDatabaseFileWithNSString_(self, ((AndroidUtilPair *) nil_chk(p))->second_);
-      }
-    }
-    else {
-      AndroidDatabaseDefaultDatabaseErrorHandler_deleteDatabaseFileWithNSString_(self, [dbObj getPath]);
-    }
-  }
-}
-
-- (void)deleteDatabaseFileWithNSString:(NSString *)fileName {
-  AndroidDatabaseDefaultDatabaseErrorHandler_deleteDatabaseFileWithNSString_(self, fileName);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:);
-  methods[2].selector = @selector(deleteDatabaseFileWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
-  };
-  static const void *ptrTable[] = { "onCorruption", "LAndroidDatabaseSqliteSQLiteDatabase;", "deleteDatabaseFile", "LNSString;", &AndroidDatabaseDefaultDatabaseErrorHandler_TAG };
-  static const J2ObjcClassInfo _AndroidDatabaseDefaultDatabaseErrorHandler = { "DefaultDatabaseErrorHandler", "android.database", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseDefaultDatabaseErrorHandler;
-}
-
-@end
-
-void AndroidDatabaseDefaultDatabaseErrorHandler_init(AndroidDatabaseDefaultDatabaseErrorHandler *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseDefaultDatabaseErrorHandler *new_AndroidDatabaseDefaultDatabaseErrorHandler_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseDefaultDatabaseErrorHandler, init)
-}
-
-AndroidDatabaseDefaultDatabaseErrorHandler *create_AndroidDatabaseDefaultDatabaseErrorHandler_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseDefaultDatabaseErrorHandler, init)
-}
-
-void AndroidDatabaseDefaultDatabaseErrorHandler_deleteDatabaseFileWithNSString_(AndroidDatabaseDefaultDatabaseErrorHandler *self, NSString *fileName) {
-  if ([((NSString *) nil_chk(fileName)) java_equalsIgnoreCase:@":memory:"] || ((jint) [((NSString *) nil_chk([fileName java_trim])) length]) == 0) {
-    return;
-  }
-  AndroidUtilLog_eWithNSString_withNSString_(AndroidDatabaseDefaultDatabaseErrorHandler_TAG, JreStrcat("$$", @"deleting the database file: ", fileName));
-  @try {
-    AndroidDatabaseSqliteSQLiteDatabase_deleteDatabaseWithJavaIoFile_(create_JavaIoFile_initWithNSString_(fileName));
-  }
-  @catch (JavaLangException *e) {
-    AndroidUtilLog_wWithNSString_withNSString_(AndroidDatabaseDefaultDatabaseErrorHandler_TAG, JreStrcat("$$", @"delete failed: ", [((JavaLangException *) nil_chk(e)) getMessage]));
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseDefaultDatabaseErrorHandler)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMatrixCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMatrixCursor.h
deleted file mode 100644
index aed7adf2c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMatrixCursor.h
+++ /dev/null
@@ -1,117 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseMatrixCursor")
-#ifdef RESTRICT_AndroidDatabaseMatrixCursor
-#define INCLUDE_ALL_AndroidDatabaseMatrixCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseMatrixCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseMatrixCursor
-
-#if !defined (AndroidDatabaseMatrixCursor_) && (INCLUDE_ALL_AndroidDatabaseMatrixCursor || defined(INCLUDE_AndroidDatabaseMatrixCursor))
-#define AndroidDatabaseMatrixCursor_
-
-#define RESTRICT_AndroidDatabaseAbstractCursor 1
-#define INCLUDE_AndroidDatabaseAbstractCursor 1
-#include "AndroidDatabaseAbstractCursor.h"
-
-@class AndroidDatabaseMatrixCursor_RowBuilder;
-@class IOSByteArray;
-@class IOSObjectArray;
-@protocol JavaLangIterable;
-
-@interface AndroidDatabaseMatrixCursor : AndroidDatabaseAbstractCursor
-
-#pragma mark Public
-
-- (instancetype)initWithNSStringArray:(IOSObjectArray *)columnNames;
-
-- (instancetype)initWithNSStringArray:(IOSObjectArray *)columnNames
-                              withInt:(jint)initialCapacity;
-
-- (void)addRowWithJavaLangIterable:(id<JavaLangIterable>)columnValues;
-
-- (void)addRowWithNSObjectArray:(IOSObjectArray *)columnValues;
-
-- (IOSByteArray *)getBlobWithInt:(jint)column;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (jint)getCount;
-
-- (jdouble)getDoubleWithInt:(jint)column;
-
-- (jfloat)getFloatWithInt:(jint)column;
-
-- (jint)getIntWithInt:(jint)column;
-
-- (jlong)getLongWithInt:(jint)column;
-
-- (jshort)getShortWithInt:(jint)column;
-
-- (NSString *)getStringWithInt:(jint)column;
-
-- (jint)getTypeWithInt:(jint)column;
-
-- (jboolean)isNullWithInt:(jint)column;
-
-- (AndroidDatabaseMatrixCursor_RowBuilder *)newRow OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseMatrixCursor)
-
-FOUNDATION_EXPORT void AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(AndroidDatabaseMatrixCursor *self, IOSObjectArray *columnNames, jint initialCapacity);
-
-FOUNDATION_EXPORT AndroidDatabaseMatrixCursor *new_AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(IOSObjectArray *columnNames, jint initialCapacity) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseMatrixCursor *create_AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(IOSObjectArray *columnNames, jint initialCapacity);
-
-FOUNDATION_EXPORT void AndroidDatabaseMatrixCursor_initWithNSStringArray_(AndroidDatabaseMatrixCursor *self, IOSObjectArray *columnNames);
-
-FOUNDATION_EXPORT AndroidDatabaseMatrixCursor *new_AndroidDatabaseMatrixCursor_initWithNSStringArray_(IOSObjectArray *columnNames) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseMatrixCursor *create_AndroidDatabaseMatrixCursor_initWithNSStringArray_(IOSObjectArray *columnNames);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseMatrixCursor)
-
-#endif
-
-#if !defined (AndroidDatabaseMatrixCursor_RowBuilder_) && (INCLUDE_ALL_AndroidDatabaseMatrixCursor || defined(INCLUDE_AndroidDatabaseMatrixCursor_RowBuilder))
-#define AndroidDatabaseMatrixCursor_RowBuilder_
-
-@class AndroidDatabaseMatrixCursor;
-
-@interface AndroidDatabaseMatrixCursor_RowBuilder : NSObject
-
-#pragma mark Public
-
-- (AndroidDatabaseMatrixCursor_RowBuilder *)addWithId:(id)columnValue;
-
-- (AndroidDatabaseMatrixCursor_RowBuilder *)addWithNSString:(NSString *)columnName
-                                                     withId:(id)value;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithAndroidDatabaseMatrixCursor:(AndroidDatabaseMatrixCursor *)outer$
-                                            withInt:(jint)row;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseMatrixCursor_RowBuilder)
-
-FOUNDATION_EXPORT void AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(AndroidDatabaseMatrixCursor_RowBuilder *self, AndroidDatabaseMatrixCursor *outer$, jint row);
-
-FOUNDATION_EXPORT AndroidDatabaseMatrixCursor_RowBuilder *new_AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(AndroidDatabaseMatrixCursor *outer$, jint row) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseMatrixCursor_RowBuilder *create_AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(AndroidDatabaseMatrixCursor *outer$, jint row);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseMatrixCursor_RowBuilder)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseMatrixCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMatrixCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMatrixCursor.m
deleted file mode 100644
index 9a19cddfd..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMatrixCursor.m
+++ /dev/null
@@ -1,391 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseAbstractCursor.h"
-#include "AndroidDatabaseCursorIndexOutOfBoundsException.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseMatrixCursor.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Double.h"
-#include "java/lang/Float.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/Long.h"
-#include "java/lang/Short.h"
-#include "java/lang/System.h"
-#include "java/util/ArrayList.h"
-
-@interface AndroidDatabaseMatrixCursor () {
- @public
-  IOSObjectArray *columnNames_;
-  IOSObjectArray *data_;
-  jint rowCount_;
-  jint columnCount_;
-}
-
-- (id)getWithInt:(jint)column;
-
-- (void)addRowWithJavaUtilArrayList:(JavaUtilArrayList *)columnValues
-                            withInt:(jint)start;
-
-- (void)ensureCapacityWithInt:(jint)size;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseMatrixCursor, columnNames_, IOSObjectArray *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseMatrixCursor, data_, IOSObjectArray *)
-
-__attribute__((unused)) static id AndroidDatabaseMatrixCursor_getWithInt_(AndroidDatabaseMatrixCursor *self, jint column);
-
-__attribute__((unused)) static void AndroidDatabaseMatrixCursor_addRowWithJavaUtilArrayList_withInt_(AndroidDatabaseMatrixCursor *self, JavaUtilArrayList *columnValues, jint start);
-
-__attribute__((unused)) static void AndroidDatabaseMatrixCursor_ensureCapacityWithInt_(AndroidDatabaseMatrixCursor *self, jint size);
-
-@interface AndroidDatabaseMatrixCursor_RowBuilder () {
- @public
-  AndroidDatabaseMatrixCursor *this$0_;
-  jint row_;
-  jint endIndex_;
-  jint index_;
-}
-
-@end
-
-@implementation AndroidDatabaseMatrixCursor
-
-- (instancetype)initWithNSStringArray:(IOSObjectArray *)columnNames
-                              withInt:(jint)initialCapacity {
-  AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(self, columnNames, initialCapacity);
-  return self;
-}
-
-- (instancetype)initWithNSStringArray:(IOSObjectArray *)columnNames {
-  AndroidDatabaseMatrixCursor_initWithNSStringArray_(self, columnNames);
-  return self;
-}
-
-- (id)getWithInt:(jint)column {
-  return AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-}
-
-- (AndroidDatabaseMatrixCursor_RowBuilder *)newRow {
-  jint row = rowCount_++;
-  jint endIndex = rowCount_ * columnCount_;
-  AndroidDatabaseMatrixCursor_ensureCapacityWithInt_(self, endIndex);
-  return create_AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(self, row);
-}
-
-- (void)addRowWithNSObjectArray:(IOSObjectArray *)columnValues {
-  if (((IOSObjectArray *) nil_chk(columnValues))->size_ != columnCount_) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"columnNames.length = ", columnCount_, @", columnValues.length = ", columnValues->size_));
-  }
-  jint start = rowCount_++ * columnCount_;
-  AndroidDatabaseMatrixCursor_ensureCapacityWithInt_(self, start + columnCount_);
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(columnValues, 0, data_, start, columnCount_);
-}
-
-- (void)addRowWithJavaLangIterable:(id<JavaLangIterable>)columnValues {
-  jint start = rowCount_ * columnCount_;
-  jint end = start + columnCount_;
-  AndroidDatabaseMatrixCursor_ensureCapacityWithInt_(self, end);
-  if ([columnValues isKindOfClass:[JavaUtilArrayList class]]) {
-    AndroidDatabaseMatrixCursor_addRowWithJavaUtilArrayList_withInt_(self, (JavaUtilArrayList *) cast_chk(columnValues, [JavaUtilArrayList class]), start);
-    return;
-  }
-  jint current = start;
-  IOSObjectArray *localData = data_;
-  for (id __strong columnValue in nil_chk(columnValues)) {
-    if (current == end) {
-      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"columnValues.size() > columnNames.length");
-    }
-    IOSObjectArray_Set(nil_chk(localData), current++, columnValue);
-  }
-  if (current != end) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"columnValues.size() < columnNames.length");
-  }
-  rowCount_++;
-}
-
-- (void)addRowWithJavaUtilArrayList:(JavaUtilArrayList *)columnValues
-                            withInt:(jint)start {
-  AndroidDatabaseMatrixCursor_addRowWithJavaUtilArrayList_withInt_(self, columnValues, start);
-}
-
-- (void)ensureCapacityWithInt:(jint)size {
-  AndroidDatabaseMatrixCursor_ensureCapacityWithInt_(self, size);
-}
-
-- (jint)getCount {
-  return rowCount_;
-}
-
-- (IOSObjectArray *)getColumnNames {
-  return columnNames_;
-}
-
-- (NSString *)getStringWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  if (value == nil) return nil;
-  return [value description];
-}
-
-- (jshort)getShortWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  if (value == nil) return 0;
-  if ([value isKindOfClass:[NSNumber class]]) return [((NSNumber *) cast_chk(value, [NSNumber class])) shortValue];
-  return JavaLangShort_parseShortWithNSString_([value description]);
-}
-
-- (jint)getIntWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  if (value == nil) return 0;
-  if ([value isKindOfClass:[NSNumber class]]) return [((NSNumber *) cast_chk(value, [NSNumber class])) intValue];
-  return JavaLangInteger_parseIntWithNSString_([value description]);
-}
-
-- (jlong)getLongWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  if (value == nil) return 0;
-  if ([value isKindOfClass:[NSNumber class]]) return [((NSNumber *) cast_chk(value, [NSNumber class])) longLongValue];
-  return JavaLangLong_parseLongWithNSString_([value description]);
-}
-
-- (jfloat)getFloatWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  if (value == nil) return 0.0f;
-  if ([value isKindOfClass:[NSNumber class]]) return [((NSNumber *) cast_chk(value, [NSNumber class])) floatValue];
-  return JavaLangFloat_parseFloatWithNSString_([value description]);
-}
-
-- (jdouble)getDoubleWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  if (value == nil) return 0.0;
-  if ([value isKindOfClass:[NSNumber class]]) return [((NSNumber *) cast_chk(value, [NSNumber class])) doubleValue];
-  return JavaLangDouble_parseDoubleWithNSString_([value description]);
-}
-
-- (IOSByteArray *)getBlobWithInt:(jint)column {
-  id value = AndroidDatabaseMatrixCursor_getWithInt_(self, column);
-  return (IOSByteArray *) cast_chk(value, [IOSByteArray class]);
-}
-
-- (jint)getTypeWithInt:(jint)column {
-  return AndroidDatabaseDatabaseUtils_getTypeOfObjectWithId_(AndroidDatabaseMatrixCursor_getWithInt_(self, column));
-}
-
-- (jboolean)isNullWithInt:(jint)column {
-  return AndroidDatabaseMatrixCursor_getWithInt_(self, column) == nil;
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseMatrixCursor class]);
-  RELEASE_(columnNames_);
-  RELEASE_(data_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x2, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseMatrixCursor_RowBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 6, -1, 7, -1, -1 },
-    { NULL, "V", 0x2, 4, 8, -1, 9, -1, -1 },
-    { NULL, "V", 0x2, 10, 3, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 11, 3, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 12, 3, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 13, 3, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 14, 3, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 15, 3, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 16, 3, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 17, 3, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 18, 3, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 19, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSStringArray:withInt:);
-  methods[1].selector = @selector(initWithNSStringArray:);
-  methods[2].selector = @selector(getWithInt:);
-  methods[3].selector = @selector(newRow);
-  methods[4].selector = @selector(addRowWithNSObjectArray:);
-  methods[5].selector = @selector(addRowWithJavaLangIterable:);
-  methods[6].selector = @selector(addRowWithJavaUtilArrayList:withInt:);
-  methods[7].selector = @selector(ensureCapacityWithInt:);
-  methods[8].selector = @selector(getCount);
-  methods[9].selector = @selector(getColumnNames);
-  methods[10].selector = @selector(getStringWithInt:);
-  methods[11].selector = @selector(getShortWithInt:);
-  methods[12].selector = @selector(getIntWithInt:);
-  methods[13].selector = @selector(getLongWithInt:);
-  methods[14].selector = @selector(getFloatWithInt:);
-  methods[15].selector = @selector(getDoubleWithInt:);
-  methods[16].selector = @selector(getBlobWithInt:);
-  methods[17].selector = @selector(getTypeWithInt:);
-  methods[18].selector = @selector(isNullWithInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "columnNames_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "data_", "[LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "rowCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "columnCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "[LNSString;I", "[LNSString;", "get", "I", "addRow", "[LNSObject;", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)V", "LJavaUtilArrayList;I", "(Ljava/util/ArrayList<*>;I)V", "ensureCapacity", "getString", "getShort", "getInt", "getLong", "getFloat", "getDouble", "getBlob", "getType", "isNull", "LAndroidDatabaseMatrixCursor_RowBuilder;" };
-  static const J2ObjcClassInfo _AndroidDatabaseMatrixCursor = { "MatrixCursor", "android.database", ptrTable, methods, fields, 7, 0x1, 19, 4, -1, 20, -1, -1, -1 };
-  return &_AndroidDatabaseMatrixCursor;
-}
-
-@end
-
-void AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(AndroidDatabaseMatrixCursor *self, IOSObjectArray *columnNames, jint initialCapacity) {
-  AndroidDatabaseAbstractCursor_init(self);
-  self->rowCount_ = 0;
-  JreStrongAssign(&self->columnNames_, columnNames);
-  self->columnCount_ = ((IOSObjectArray *) nil_chk(columnNames))->size_;
-  if (initialCapacity < 1) {
-    initialCapacity = 1;
-  }
-  JreStrongAssignAndConsume(&self->data_, [IOSObjectArray newArrayWithLength:self->columnCount_ * initialCapacity type:NSObject_class_()]);
-}
-
-AndroidDatabaseMatrixCursor *new_AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(IOSObjectArray *columnNames, jint initialCapacity) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseMatrixCursor, initWithNSStringArray_withInt_, columnNames, initialCapacity)
-}
-
-AndroidDatabaseMatrixCursor *create_AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(IOSObjectArray *columnNames, jint initialCapacity) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseMatrixCursor, initWithNSStringArray_withInt_, columnNames, initialCapacity)
-}
-
-void AndroidDatabaseMatrixCursor_initWithNSStringArray_(AndroidDatabaseMatrixCursor *self, IOSObjectArray *columnNames) {
-  AndroidDatabaseMatrixCursor_initWithNSStringArray_withInt_(self, columnNames, 16);
-}
-
-AndroidDatabaseMatrixCursor *new_AndroidDatabaseMatrixCursor_initWithNSStringArray_(IOSObjectArray *columnNames) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseMatrixCursor, initWithNSStringArray_, columnNames)
-}
-
-AndroidDatabaseMatrixCursor *create_AndroidDatabaseMatrixCursor_initWithNSStringArray_(IOSObjectArray *columnNames) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseMatrixCursor, initWithNSStringArray_, columnNames)
-}
-
-id AndroidDatabaseMatrixCursor_getWithInt_(AndroidDatabaseMatrixCursor *self, jint column) {
-  if (column < 0 || column >= self->columnCount_) {
-    @throw create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Requested column: ", column, @", # of columns: ", self->columnCount_));
-  }
-  if (self->mPos_ < 0) {
-    @throw create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(@"Before first row.");
-  }
-  if (self->mPos_ >= self->rowCount_) {
-    @throw create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(@"After last row.");
-  }
-  return IOSObjectArray_Get(nil_chk(self->data_), self->mPos_ * self->columnCount_ + column);
-}
-
-void AndroidDatabaseMatrixCursor_addRowWithJavaUtilArrayList_withInt_(AndroidDatabaseMatrixCursor *self, JavaUtilArrayList *columnValues, jint start) {
-  jint size = [((JavaUtilArrayList *) nil_chk(columnValues)) size];
-  if (size != self->columnCount_) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"columnNames.length = ", self->columnCount_, @", columnValues.size() = ", size));
-  }
-  self->rowCount_++;
-  IOSObjectArray *localData = self->data_;
-  for (jint i = 0; i < size; i++) {
-    IOSObjectArray_Set(nil_chk(localData), start + i, [columnValues getWithInt:i]);
-  }
-}
-
-void AndroidDatabaseMatrixCursor_ensureCapacityWithInt_(AndroidDatabaseMatrixCursor *self, jint size) {
-  if (size > ((IOSObjectArray *) nil_chk(self->data_))->size_) {
-    IOSObjectArray *oldData = self->data_;
-    jint newSize = self->data_->size_ * 2;
-    if (newSize < size) {
-      newSize = size;
-    }
-    JreStrongAssignAndConsume(&self->data_, [IOSObjectArray newArrayWithLength:newSize type:NSObject_class_()]);
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(oldData, 0, self->data_, 0, oldData->size_);
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseMatrixCursor)
-
-@implementation AndroidDatabaseMatrixCursor_RowBuilder
-
-- (instancetype)initWithAndroidDatabaseMatrixCursor:(AndroidDatabaseMatrixCursor *)outer$
-                                            withInt:(jint)row {
-  AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(self, outer$, row);
-  return self;
-}
-
-- (AndroidDatabaseMatrixCursor_RowBuilder *)addWithId:(id)columnValue {
-  if (index_ == endIndex_) {
-    @throw create_AndroidDatabaseCursorIndexOutOfBoundsException_initWithNSString_(@"No more columns left.");
-  }
-  IOSObjectArray_Set(nil_chk(this$0_->data_), index_++, columnValue);
-  return self;
-}
-
-- (AndroidDatabaseMatrixCursor_RowBuilder *)addWithNSString:(NSString *)columnName
-                                                     withId:(id)value {
-  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(this$0_->columnNames_))->size_; i++) {
-    if ([((NSString *) nil_chk(columnName)) isEqual:IOSObjectArray_Get(this$0_->columnNames_, i)]) {
-      IOSObjectArray_Set(nil_chk(this$0_->data_), (row_ * this$0_->columnCount_) + i, value);
-    }
-  }
-  return self;
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseMatrixCursor_RowBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseMatrixCursor_RowBuilder;", 0x1, 1, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseMatrixCursor:withInt:);
-  methods[1].selector = @selector(addWithId:);
-  methods[2].selector = @selector(addWithNSString:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidDatabaseMatrixCursor;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "row_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "endIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "I", "add", "LNSObject;", "LNSString;LNSObject;", "LAndroidDatabaseMatrixCursor;" };
-  static const J2ObjcClassInfo _AndroidDatabaseMatrixCursor_RowBuilder = { "RowBuilder", "android.database", ptrTable, methods, fields, 7, 0x1, 3, 4, 4, -1, -1, -1, -1 };
-  return &_AndroidDatabaseMatrixCursor_RowBuilder;
-}
-
-@end
-
-void AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(AndroidDatabaseMatrixCursor_RowBuilder *self, AndroidDatabaseMatrixCursor *outer$, jint row) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  self->row_ = row;
-  self->index_ = row * outer$->columnCount_;
-  self->endIndex_ = self->index_ + outer$->columnCount_;
-}
-
-AndroidDatabaseMatrixCursor_RowBuilder *new_AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(AndroidDatabaseMatrixCursor *outer$, jint row) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseMatrixCursor_RowBuilder, initWithAndroidDatabaseMatrixCursor_withInt_, outer$, row)
-}
-
-AndroidDatabaseMatrixCursor_RowBuilder *create_AndroidDatabaseMatrixCursor_RowBuilder_initWithAndroidDatabaseMatrixCursor_withInt_(AndroidDatabaseMatrixCursor *outer$, jint row) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseMatrixCursor_RowBuilder, initWithAndroidDatabaseMatrixCursor_withInt_, outer$, row)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseMatrixCursor_RowBuilder)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMergeCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMergeCursor.h
deleted file mode 100644
index a1b430f09..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMergeCursor.h
+++ /dev/null
@@ -1,81 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseMergeCursor")
-#ifdef RESTRICT_AndroidDatabaseMergeCursor
-#define INCLUDE_ALL_AndroidDatabaseMergeCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseMergeCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseMergeCursor
-
-#if !defined (AndroidDatabaseMergeCursor_) && (INCLUDE_ALL_AndroidDatabaseMergeCursor || defined(INCLUDE_AndroidDatabaseMergeCursor))
-#define AndroidDatabaseMergeCursor_
-
-#define RESTRICT_AndroidDatabaseAbstractCursor 1
-#define INCLUDE_AndroidDatabaseAbstractCursor 1
-#include "AndroidDatabaseAbstractCursor.h"
-
-@class AndroidDatabaseDataSetObserver;
-@class IOSByteArray;
-@class IOSObjectArray;
-
-@interface AndroidDatabaseMergeCursor : AndroidDatabaseAbstractCursor
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseCursorArray:(IOSObjectArray *)cursors;
-
-- (void)close;
-
-- (void)deactivate;
-
-- (IOSByteArray *)getBlobWithInt:(jint)column;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (jint)getCount;
-
-- (jdouble)getDoubleWithInt:(jint)column;
-
-- (jfloat)getFloatWithInt:(jint)column;
-
-- (jint)getIntWithInt:(jint)column;
-
-- (jlong)getLongWithInt:(jint)column;
-
-- (jshort)getShortWithInt:(jint)column;
-
-- (NSString *)getStringWithInt:(jint)column;
-
-- (jint)getTypeWithInt:(jint)column;
-
-- (jboolean)isNullWithInt:(jint)column;
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition;
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-- (jboolean)requery;
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseMergeCursor)
-
-FOUNDATION_EXPORT void AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(AndroidDatabaseMergeCursor *self, IOSObjectArray *cursors);
-
-FOUNDATION_EXPORT AndroidDatabaseMergeCursor *new_AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(IOSObjectArray *cursors) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseMergeCursor *create_AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(IOSObjectArray *cursors);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseMergeCursor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseMergeCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMergeCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMergeCursor.m
deleted file mode 100644
index 868dffa2d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseMergeCursor.m
+++ /dev/null
@@ -1,319 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseAbstractCursor.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseDataSetObserver.h"
-#include "AndroidDatabaseMergeCursor.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidDatabaseMergeCursor () {
- @public
-  AndroidDatabaseDataSetObserver *mObserver_;
-  id<AndroidDatabaseCursor> mCursor_;
-  IOSObjectArray *mCursors_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseMergeCursor, mObserver_, AndroidDatabaseDataSetObserver *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseMergeCursor, mCursor_, id<AndroidDatabaseCursor>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseMergeCursor, mCursors_, IOSObjectArray *)
-
-@interface AndroidDatabaseMergeCursor_1 : AndroidDatabaseDataSetObserver {
- @public
-  AndroidDatabaseMergeCursor *this$0_;
-}
-
-- (instancetype)initWithAndroidDatabaseMergeCursor:(AndroidDatabaseMergeCursor *)outer$;
-
-- (void)onChanged;
-
-- (void)onInvalidated;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseMergeCursor_1)
-
-__attribute__((unused)) static void AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(AndroidDatabaseMergeCursor_1 *self, AndroidDatabaseMergeCursor *outer$);
-
-__attribute__((unused)) static AndroidDatabaseMergeCursor_1 *new_AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(AndroidDatabaseMergeCursor *outer$) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseMergeCursor_1 *create_AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(AndroidDatabaseMergeCursor *outer$);
-
-@implementation AndroidDatabaseMergeCursor
-
-- (instancetype)initWithAndroidDatabaseCursorArray:(IOSObjectArray *)cursors {
-  AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(self, cursors);
-  return self;
-}
-
-- (jint)getCount {
-  jint count = 0;
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) != nil) {
-      count += [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) getCount];
-    }
-  }
-  return count;
-}
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition {
-  JreStrongAssign(&mCursor_, nil);
-  jint cursorStartPos = 0;
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) == nil) {
-      continue;
-    }
-    if (newPosition < (cursorStartPos + [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) getCount])) {
-      JreStrongAssign(&mCursor_, IOSObjectArray_Get(nil_chk(mCursors_), i));
-      break;
-    }
-    cursorStartPos += [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(nil_chk(mCursors_), i))) getCount];
-  }
-  if (mCursor_ != nil) {
-    jboolean ret = [mCursor_ moveToPositionWithInt:newPosition - cursorStartPos];
-    return ret;
-  }
-  return false;
-}
-
-- (NSString *)getStringWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getStringWithInt:column];
-}
-
-- (jshort)getShortWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getShortWithInt:column];
-}
-
-- (jint)getIntWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getIntWithInt:column];
-}
-
-- (jlong)getLongWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getLongWithInt:column];
-}
-
-- (jfloat)getFloatWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getFloatWithInt:column];
-}
-
-- (jdouble)getDoubleWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getDoubleWithInt:column];
-}
-
-- (jint)getTypeWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getTypeWithInt:column];
-}
-
-- (jboolean)isNullWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isNullWithInt:column];
-}
-
-- (IOSByteArray *)getBlobWithInt:(jint)column {
-  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getBlobWithInt:column];
-}
-
-- (IOSObjectArray *)getColumnNames {
-  if (mCursor_ != nil) {
-    return [mCursor_ getColumnNames];
-  }
-  else {
-    return [IOSObjectArray arrayWithLength:0 type:NSString_class_()];
-  }
-}
-
-- (void)deactivate {
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) != nil) {
-      [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) deactivate];
-    }
-  }
-  [super deactivate];
-}
-
-- (void)close {
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) == nil) continue;
-    [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) close];
-  }
-  [super close];
-}
-
-- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) != nil) {
-      [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) registerDataSetObserverWithAndroidDatabaseDataSetObserver:observer];
-    }
-  }
-}
-
-- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) != nil) {
-      [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:observer];
-    }
-  }
-}
-
-- (jboolean)requery {
-  jint length = ((IOSObjectArray *) nil_chk(mCursors_))->size_;
-  for (jint i = 0; i < length; i++) {
-    if (IOSObjectArray_Get(nil_chk(mCursors_), i) == nil) {
-      continue;
-    }
-    if ([((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(mCursors_, i))) requery] == false) {
-      return false;
-    }
-  }
-  return true;
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseMergeCursor class]);
-  RELEASE_(mObserver_);
-  RELEASE_(mCursor_);
-  RELEASE_(mCursors_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 6, 4, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 7, 4, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 8, 4, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 9, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 10, 4, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 11, 4, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 12, 4, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 14, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseCursorArray:);
-  methods[1].selector = @selector(getCount);
-  methods[2].selector = @selector(onMoveWithInt:withInt:);
-  methods[3].selector = @selector(getStringWithInt:);
-  methods[4].selector = @selector(getShortWithInt:);
-  methods[5].selector = @selector(getIntWithInt:);
-  methods[6].selector = @selector(getLongWithInt:);
-  methods[7].selector = @selector(getFloatWithInt:);
-  methods[8].selector = @selector(getDoubleWithInt:);
-  methods[9].selector = @selector(getTypeWithInt:);
-  methods[10].selector = @selector(isNullWithInt:);
-  methods[11].selector = @selector(getBlobWithInt:);
-  methods[12].selector = @selector(getColumnNames);
-  methods[13].selector = @selector(deactivate);
-  methods[14].selector = @selector(close);
-  methods[15].selector = @selector(registerDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[16].selector = @selector(unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:);
-  methods[17].selector = @selector(requery);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mObserver_", "LAndroidDatabaseDataSetObserver;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mCursor_", "LAndroidDatabaseCursor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mCursors_", "[LAndroidDatabaseCursor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "[LAndroidDatabaseCursor;", "onMove", "II", "getString", "I", "getShort", "getInt", "getLong", "getFloat", "getDouble", "getType", "isNull", "getBlob", "registerDataSetObserver", "LAndroidDatabaseDataSetObserver;", "unregisterDataSetObserver" };
-  static const J2ObjcClassInfo _AndroidDatabaseMergeCursor = { "MergeCursor", "android.database", ptrTable, methods, fields, 7, 0x1, 18, 3, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseMergeCursor;
-}
-
-@end
-
-void AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(AndroidDatabaseMergeCursor *self, IOSObjectArray *cursors) {
-  AndroidDatabaseAbstractCursor_init(self);
-  JreStrongAssignAndConsume(&self->mObserver_, new_AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(self));
-  JreStrongAssign(&self->mCursors_, cursors);
-  JreStrongAssign(&self->mCursor_, IOSObjectArray_Get(nil_chk(cursors), 0));
-  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->mCursors_))->size_; i++) {
-    if (IOSObjectArray_Get(self->mCursors_, i) == nil) continue;
-    [((id<AndroidDatabaseCursor>) nil_chk(IOSObjectArray_Get(self->mCursors_, i))) registerDataSetObserverWithAndroidDatabaseDataSetObserver:self->mObserver_];
-  }
-}
-
-AndroidDatabaseMergeCursor *new_AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(IOSObjectArray *cursors) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseMergeCursor, initWithAndroidDatabaseCursorArray_, cursors)
-}
-
-AndroidDatabaseMergeCursor *create_AndroidDatabaseMergeCursor_initWithAndroidDatabaseCursorArray_(IOSObjectArray *cursors) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseMergeCursor, initWithAndroidDatabaseCursorArray_, cursors)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseMergeCursor)
-
-@implementation AndroidDatabaseMergeCursor_1
-
-- (instancetype)initWithAndroidDatabaseMergeCursor:(AndroidDatabaseMergeCursor *)outer$ {
-  AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(self, outer$);
-  return self;
-}
-
-- (void)onChanged {
-  this$0_->mPos_ = -1;
-}
-
-- (void)onInvalidated {
-  this$0_->mPos_ = -1;
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseMergeCursor:);
-  methods[1].selector = @selector(onChanged);
-  methods[2].selector = @selector(onInvalidated);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidDatabaseMergeCursor;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseMergeCursor;" };
-  static const J2ObjcClassInfo _AndroidDatabaseMergeCursor_1 = { "", "android.database", ptrTable, methods, fields, 7, 0x8018, 3, 1, 0, -1, -1, -1, -1 };
-  return &_AndroidDatabaseMergeCursor_1;
-}
-
-@end
-
-void AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(AndroidDatabaseMergeCursor_1 *self, AndroidDatabaseMergeCursor *outer$) {
-  JreStrongAssign(&self->this$0_, outer$);
-  AndroidDatabaseDataSetObserver_init(self);
-}
-
-AndroidDatabaseMergeCursor_1 *new_AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(AndroidDatabaseMergeCursor *outer$) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseMergeCursor_1, initWithAndroidDatabaseMergeCursor_, outer$)
-}
-
-AndroidDatabaseMergeCursor_1 *create_AndroidDatabaseMergeCursor_1_initWithAndroidDatabaseMergeCursor_(AndroidDatabaseMergeCursor *outer$) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseMergeCursor_1, initWithAndroidDatabaseMergeCursor_, outer$)
-}
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseObservable.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseObservable.h
deleted file mode 100644
index 2ea530d4d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseObservable.h
+++ /dev/null
@@ -1,47 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseObservable")
-#ifdef RESTRICT_AndroidDatabaseObservable
-#define INCLUDE_ALL_AndroidDatabaseObservable 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseObservable 1
-#endif
-#undef RESTRICT_AndroidDatabaseObservable
-
-#if !defined (AndroidDatabaseObservable_) && (INCLUDE_ALL_AndroidDatabaseObservable || defined(INCLUDE_AndroidDatabaseObservable))
-#define AndroidDatabaseObservable_
-
-@class JavaUtilArrayList;
-
-@interface AndroidDatabaseObservable : NSObject {
- @public
-  JavaUtilArrayList *mObservers_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)registerObserverWithId:(id)observer;
-
-- (void)unregisterAll;
-
-- (void)unregisterObserverWithId:(id)observer;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseObservable)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseObservable, mObservers_, JavaUtilArrayList *)
-
-FOUNDATION_EXPORT void AndroidDatabaseObservable_init(AndroidDatabaseObservable *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseObservable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseObservable")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseObservable.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseObservable.m
deleted file mode 100644
index aec2da671..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseObservable.m
+++ /dev/null
@@ -1,85 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseObservable.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/util/ArrayList.h"
-
-@implementation AndroidDatabaseObservable
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseObservable_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)registerObserverWithId:(id)observer {
-  if (observer == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The observer is null.");
-  }
-  @synchronized(mObservers_) {
-    if ([((JavaUtilArrayList *) nil_chk(mObservers_)) containsWithId:observer]) {
-      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"Observer ", observer, @" is already registered."));
-    }
-    [mObservers_ addWithId:observer];
-  }
-}
-
-- (void)unregisterObserverWithId:(id)observer {
-  if (observer == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The observer is null.");
-  }
-  @synchronized(mObservers_) {
-    jint index = [((JavaUtilArrayList *) nil_chk(mObservers_)) indexOfWithId:observer];
-    if (index == -1) {
-      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"Observer ", observer, @" was not registered."));
-    }
-    [mObservers_ removeWithInt:index];
-  }
-}
-
-- (void)unregisterAll {
-  @synchronized(mObservers_) {
-    [((JavaUtilArrayList *) nil_chk(mObservers_)) clear];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(mObservers_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(registerObserverWithId:);
-  methods[2].selector = @selector(unregisterObserverWithId:);
-  methods[3].selector = @selector(unregisterAll);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mObservers_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x14, -1, -1, 4, -1 },
-  };
-  static const void *ptrTable[] = { "registerObserver", "LNSObject;", "(TT;)V", "unregisterObserver", "Ljava/util/ArrayList<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _AndroidDatabaseObservable = { "Observable", "android.database", ptrTable, methods, fields, 7, 0x401, 4, 1, -1, -1, -1, 5, -1 };
-  return &_AndroidDatabaseObservable;
-}
-
-@end
-
-void AndroidDatabaseObservable_init(AndroidDatabaseObservable *self) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mObservers_, new_JavaUtilArrayList_init());
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseObservable)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSQLException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSQLException.h
deleted file mode 100644
index c8d1c31c3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSQLException.h
+++ /dev/null
@@ -1,59 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSQLException")
-#ifdef RESTRICT_AndroidDatabaseSQLException
-#define INCLUDE_ALL_AndroidDatabaseSQLException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSQLException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSQLException
-
-#if !defined (AndroidDatabaseSQLException_) && (INCLUDE_ALL_AndroidDatabaseSQLException || defined(INCLUDE_AndroidDatabaseSQLException))
-#define AndroidDatabaseSQLException_
-
-#define RESTRICT_JavaLangRuntimeException 1
-#define INCLUDE_JavaLangRuntimeException 1
-#include "java/lang/RuntimeException.h"
-
-@interface AndroidDatabaseSQLException : JavaLangRuntimeException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-- (instancetype)initWithNSString:(NSString *)error
-                 withNSException:(NSException *)cause;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSQLException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSQLException_init(AndroidDatabaseSQLException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSQLException_initWithNSString_(AndroidDatabaseSQLException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_initWithNSString_(NSString *error);
-
-FOUNDATION_EXPORT void AndroidDatabaseSQLException_initWithNSString_withNSException_(AndroidDatabaseSQLException *self, NSString *error, NSException *cause);
-
-FOUNDATION_EXPORT AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_initWithNSString_withNSException_(NSString *error, NSException *cause) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_initWithNSString_withNSException_(NSString *error, NSException *cause);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSQLException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSQLException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSQLException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSQLException.m
deleted file mode 100644
index 2dcb2508a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSQLException.m
+++ /dev/null
@@ -1,84 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSQLException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/RuntimeException.h"
-
-@implementation AndroidDatabaseSQLException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSQLException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSQLException_initWithNSString_(self, error);
-  return self;
-}
-
-- (instancetype)initWithNSString:(NSString *)error
-                 withNSException:(NSException *)cause {
-  AndroidDatabaseSQLException_initWithNSString_withNSException_(self, error, cause);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  methods[2].selector = @selector(initWithNSString:withNSException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSException;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSQLException = { "SQLException", "android.database", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSQLException;
-}
-
-@end
-
-void AndroidDatabaseSQLException_init(AndroidDatabaseSQLException *self) {
-  JavaLangRuntimeException_init(self);
-}
-
-AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSQLException, init)
-}
-
-AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSQLException, init)
-}
-
-void AndroidDatabaseSQLException_initWithNSString_(AndroidDatabaseSQLException *self, NSString *error) {
-  JavaLangRuntimeException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSQLException, initWithNSString_, error)
-}
-
-AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSQLException, initWithNSString_, error)
-}
-
-void AndroidDatabaseSQLException_initWithNSString_withNSException_(AndroidDatabaseSQLException *self, NSString *error, NSException *cause) {
-  JavaLangRuntimeException_initWithNSString_withNSException_(self, error, cause);
-}
-
-AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSQLException, initWithNSString_withNSException_, error, cause)
-}
-
-AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSQLException, initWithNSString_withNSException_, error, cause)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSQLException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteDatabaseObjectNotClosedException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteDatabaseObjectNotClosedException.h
deleted file mode 100644
index 6e695f066..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteDatabaseObjectNotClosedException.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteDatabaseObjectNotClosedException")
-#ifdef RESTRICT_AndroidDatabaseSqliteDatabaseObjectNotClosedException
-#define INCLUDE_ALL_AndroidDatabaseSqliteDatabaseObjectNotClosedException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteDatabaseObjectNotClosedException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteDatabaseObjectNotClosedException
-
-#if !defined (AndroidDatabaseSqliteDatabaseObjectNotClosedException_) && (INCLUDE_ALL_AndroidDatabaseSqliteDatabaseObjectNotClosedException || defined(INCLUDE_AndroidDatabaseSqliteDatabaseObjectNotClosedException))
-#define AndroidDatabaseSqliteDatabaseObjectNotClosedException_
-
-#define RESTRICT_JavaLangRuntimeException 1
-#define INCLUDE_JavaLangRuntimeException 1
-#include "java/lang/RuntimeException.h"
-
-@interface AndroidDatabaseSqliteDatabaseObjectNotClosedException : JavaLangRuntimeException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteDatabaseObjectNotClosedException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteDatabaseObjectNotClosedException_init(AndroidDatabaseSqliteDatabaseObjectNotClosedException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteDatabaseObjectNotClosedException *new_AndroidDatabaseSqliteDatabaseObjectNotClosedException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteDatabaseObjectNotClosedException *create_AndroidDatabaseSqliteDatabaseObjectNotClosedException_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteDatabaseObjectNotClosedException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteDatabaseObjectNotClosedException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteDatabaseObjectNotClosedException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteDatabaseObjectNotClosedException.m
deleted file mode 100644
index 7e7a12a7a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteDatabaseObjectNotClosedException.m
+++ /dev/null
@@ -1,52 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteDatabaseObjectNotClosedException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/RuntimeException.h"
-
-inline NSString *AndroidDatabaseSqliteDatabaseObjectNotClosedException_get_s();
-static NSString *AndroidDatabaseSqliteDatabaseObjectNotClosedException_s = @"Application did not close the cursor or database object that was opened here";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteDatabaseObjectNotClosedException, s, NSString *)
-
-@implementation AndroidDatabaseSqliteDatabaseObjectNotClosedException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteDatabaseObjectNotClosedException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "s", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
-  };
-  static const void *ptrTable[] = { &AndroidDatabaseSqliteDatabaseObjectNotClosedException_s };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteDatabaseObjectNotClosedException = { "DatabaseObjectNotClosedException", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteDatabaseObjectNotClosedException;
-}
-
-@end
-
-void AndroidDatabaseSqliteDatabaseObjectNotClosedException_init(AndroidDatabaseSqliteDatabaseObjectNotClosedException *self) {
-  JavaLangRuntimeException_initWithNSString_(self, AndroidDatabaseSqliteDatabaseObjectNotClosedException_s);
-}
-
-AndroidDatabaseSqliteDatabaseObjectNotClosedException *new_AndroidDatabaseSqliteDatabaseObjectNotClosedException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteDatabaseObjectNotClosedException, init)
-}
-
-AndroidDatabaseSqliteDatabaseObjectNotClosedException *create_AndroidDatabaseSqliteDatabaseObjectNotClosedException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteDatabaseObjectNotClosedException, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteDatabaseObjectNotClosedException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAbortException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAbortException.h
deleted file mode 100644
index f871a41be..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAbortException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAbortException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteAbortException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAbortException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAbortException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteAbortException
-
-#if !defined (AndroidDatabaseSqliteSQLiteAbortException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAbortException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteAbortException))
-#define AndroidDatabaseSqliteSQLiteAbortException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteAbortException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteAbortException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteAbortException_init(AndroidDatabaseSqliteSQLiteAbortException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAbortException *new_AndroidDatabaseSqliteSQLiteAbortException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAbortException *create_AndroidDatabaseSqliteSQLiteAbortException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(AndroidDatabaseSqliteSQLiteAbortException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAbortException *new_AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAbortException *create_AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteAbortException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAbortException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAbortException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAbortException.m
deleted file mode 100644
index 679e201c1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAbortException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteAbortException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteAbortException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteAbortException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteAbortException = { "SQLiteAbortException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteAbortException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteAbortException_init(AndroidDatabaseSqliteSQLiteAbortException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteAbortException *new_AndroidDatabaseSqliteSQLiteAbortException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteAbortException, init)
-}
-
-AndroidDatabaseSqliteSQLiteAbortException *create_AndroidDatabaseSqliteSQLiteAbortException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteAbortException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(AndroidDatabaseSqliteSQLiteAbortException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteAbortException *new_AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteAbortException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteAbortException *create_AndroidDatabaseSqliteSQLiteAbortException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteAbortException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteAbortException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAccessPermException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAccessPermException.h
deleted file mode 100644
index 9c385076e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAccessPermException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAccessPermException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteAccessPermException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAccessPermException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAccessPermException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteAccessPermException
-
-#if !defined (AndroidDatabaseSqliteSQLiteAccessPermException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAccessPermException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteAccessPermException))
-#define AndroidDatabaseSqliteSQLiteAccessPermException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteAccessPermException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteAccessPermException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteAccessPermException_init(AndroidDatabaseSqliteSQLiteAccessPermException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *new_AndroidDatabaseSqliteSQLiteAccessPermException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *create_AndroidDatabaseSqliteSQLiteAccessPermException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(AndroidDatabaseSqliteSQLiteAccessPermException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *new_AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *create_AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteAccessPermException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteAccessPermException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAccessPermException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAccessPermException.m
deleted file mode 100644
index 483503b9c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteAccessPermException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteAccessPermException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteAccessPermException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteAccessPermException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteAccessPermException = { "SQLiteAccessPermException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteAccessPermException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteAccessPermException_init(AndroidDatabaseSqliteSQLiteAccessPermException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteAccessPermException *new_AndroidDatabaseSqliteSQLiteAccessPermException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteAccessPermException, init)
-}
-
-AndroidDatabaseSqliteSQLiteAccessPermException *create_AndroidDatabaseSqliteSQLiteAccessPermException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteAccessPermException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(AndroidDatabaseSqliteSQLiteAccessPermException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteAccessPermException *new_AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteAccessPermException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteAccessPermException *create_AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteAccessPermException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteAccessPermException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.h
deleted file mode 100644
index a4b088a5c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException
-
-#if !defined (AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException))
-#define AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *new_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *create_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *new_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *create_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.m
deleted file mode 100644
index 3e06758cf..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException = { "SQLiteBindOrColumnIndexOutOfRangeException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *new_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException, init)
-}
-
-AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *create_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *new_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException *create_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBlobTooBigException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBlobTooBigException.h
deleted file mode 100644
index 1f8aa7cd6..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBlobTooBigException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBlobTooBigException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteBlobTooBigException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBlobTooBigException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBlobTooBigException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteBlobTooBigException
-
-#if !defined (AndroidDatabaseSqliteSQLiteBlobTooBigException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBlobTooBigException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteBlobTooBigException))
-#define AndroidDatabaseSqliteSQLiteBlobTooBigException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteBlobTooBigException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteBlobTooBigException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteBlobTooBigException_init(AndroidDatabaseSqliteSQLiteBlobTooBigException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBlobTooBigException *new_AndroidDatabaseSqliteSQLiteBlobTooBigException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBlobTooBigException *create_AndroidDatabaseSqliteSQLiteBlobTooBigException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(AndroidDatabaseSqliteSQLiteBlobTooBigException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBlobTooBigException *new_AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteBlobTooBigException *create_AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteBlobTooBigException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteBlobTooBigException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBlobTooBigException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBlobTooBigException.m
deleted file mode 100644
index 140945e54..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteBlobTooBigException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteBlobTooBigException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteBlobTooBigException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteBlobTooBigException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteBlobTooBigException = { "SQLiteBlobTooBigException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteBlobTooBigException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteBlobTooBigException_init(AndroidDatabaseSqliteSQLiteBlobTooBigException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteBlobTooBigException *new_AndroidDatabaseSqliteSQLiteBlobTooBigException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteBlobTooBigException, init)
-}
-
-AndroidDatabaseSqliteSQLiteBlobTooBigException *create_AndroidDatabaseSqliteSQLiteBlobTooBigException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteBlobTooBigException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(AndroidDatabaseSqliteSQLiteBlobTooBigException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteBlobTooBigException *new_AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteBlobTooBigException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteBlobTooBigException *create_AndroidDatabaseSqliteSQLiteBlobTooBigException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteBlobTooBigException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteBlobTooBigException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.h
deleted file mode 100644
index 7bec28fdc..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException
-
-#if !defined (AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException))
-#define AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteCantOpenDatabaseException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *new_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *create_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *new_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *create_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.m
deleted file mode 100644
index 9333bb454..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteCantOpenDatabaseException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteCantOpenDatabaseException = { "SQLiteCantOpenDatabaseException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *new_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException, init)
-}
-
-AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *create_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *new_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteCantOpenDatabaseException *create_AndroidDatabaseSqliteSQLiteCantOpenDatabaseException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteCantOpenDatabaseException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteClosable.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteClosable.h
deleted file mode 100644
index e941c2174..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteClosable.h
+++ /dev/null
@@ -1,52 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteClosable")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteClosable
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteClosable 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteClosable 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteClosable
-
-#if !defined (AndroidDatabaseSqliteSQLiteClosable_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteClosable || defined(INCLUDE_AndroidDatabaseSqliteSQLiteClosable))
-#define AndroidDatabaseSqliteSQLiteClosable_
-
-#define RESTRICT_JavaIoCloseable 1
-#define INCLUDE_JavaIoCloseable 1
-#include "java/io/Closeable.h"
-
-@interface AndroidDatabaseSqliteSQLiteClosable : NSObject < JavaIoCloseable >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)acquireReference;
-
-- (void)close;
-
-- (void)releaseReference;
-
-- (void)releaseReferenceFromContainer;
-
-#pragma mark Protected
-
-- (void)onAllReferencesReleased;
-
-- (void)onAllReferencesReleasedFromContainer;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteClosable)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteClosable_init(AndroidDatabaseSqliteSQLiteClosable *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteClosable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteClosable")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteClosable.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteClosable.m
deleted file mode 100644
index ce42eb081..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteClosable.m
+++ /dev/null
@@ -1,118 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/annotation/Annotation.h"
-
-@interface AndroidDatabaseSqliteSQLiteClosable () {
- @public
-  jint mReferenceCount_;
-}
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteClosable__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteClosable__Annotations$1();
-
-@implementation AndroidDatabaseSqliteSQLiteClosable
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteClosable_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)onAllReferencesReleased {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (void)onAllReferencesReleasedFromContainer {
-  [self onAllReferencesReleased];
-}
-
-- (void)acquireReference {
-  @synchronized(self) {
-    if (mReferenceCount_ <= 0) {
-      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"attempt to re-open an already-closed object: ", self));
-    }
-    mReferenceCount_++;
-  }
-}
-
-- (void)releaseReference {
-  jboolean refCountIsZero = false;
-  @synchronized(self) {
-    refCountIsZero = (--mReferenceCount_ == 0);
-  }
-  if (refCountIsZero) {
-    [self onAllReferencesReleased];
-  }
-}
-
-- (void)releaseReferenceFromContainer {
-  jboolean refCountIsZero = false;
-  @synchronized(self) {
-    refCountIsZero = (--mReferenceCount_ == 0);
-  }
-  if (refCountIsZero) {
-    [self onAllReferencesReleasedFromContainer];
-  }
-}
-
-- (void)close {
-  [self releaseReference];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, 0, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(onAllReferencesReleased);
-  methods[2].selector = @selector(onAllReferencesReleasedFromContainer);
-  methods[3].selector = @selector(acquireReference);
-  methods[4].selector = @selector(releaseReference);
-  methods[5].selector = @selector(releaseReferenceFromContainer);
-  methods[6].selector = @selector(close);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mReferenceCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { (void *)&AndroidDatabaseSqliteSQLiteClosable__Annotations$0, (void *)&AndroidDatabaseSqliteSQLiteClosable__Annotations$1 };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteClosable = { "SQLiteClosable", "android.database.sqlite", ptrTable, methods, fields, 7, 0x401, 7, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteClosable;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteClosable_init(AndroidDatabaseSqliteSQLiteClosable *self) {
-  NSObject_init(self);
-  self->mReferenceCount_ = 1;
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteClosable__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteClosable__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteClosable)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnection.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnection.h
deleted file mode 100644
index 2d2135acf..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnection.h
+++ /dev/null
@@ -1,102 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteConnection
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteConnection
-
-#if !defined (AndroidDatabaseSqliteSQLiteConnection_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection || defined(INCLUDE_AndroidDatabaseSqliteSQLiteConnection))
-#define AndroidDatabaseSqliteSQLiteConnection_
-
-@class AndroidDatabaseCursorWindow;
-@class AndroidDatabaseSqliteSQLiteConnectionPool;
-@class AndroidDatabaseSqliteSQLiteDatabaseConfiguration;
-@class AndroidDatabaseSqliteSQLiteStatementInfo;
-@class IOSObjectArray;
-@class JavaUtilArrayList;
-@protocol AndroidUtilPrinter;
-
-@interface AndroidDatabaseSqliteSQLiteConnection : NSObject
-
-#pragma mark Public
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose;
-
-- (void)executeWithNSString:(NSString *)sql
-          withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (jint)executeForChangedRowCountWithNSString:(NSString *)sql
-                            withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (jint)executeForCursorWindowWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs
-           withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
-                                   withInt:(jint)startPos
-                                   withInt:(jint)requiredPos
-                               withBoolean:(jboolean)countAllRows;
-
-- (jlong)executeForLastInsertedRowIdWithNSString:(NSString *)sql
-                               withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (jlong)executeForLongWithNSString:(NSString *)sql
-                  withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (NSString *)executeForStringWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (jint)getConnectionId;
-
-- (jboolean)isPrimaryConnection;
-
-- (void)prepareWithNSString:(NSString *)sql
-withAndroidDatabaseSqliteSQLiteStatementInfo:(AndroidDatabaseSqliteSQLiteStatementInfo *)outStatementInfo;
-
-- (NSString *)description;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-#pragma mark Package-Private
-
-- (void)close;
-
-- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList;
-
-- (void)collectDbStatsUnsafeWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList;
-
-- (NSString *)describeCurrentOperationUnsafe;
-
-- (void)dumpUnsafeWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                             withBoolean:(jboolean)verbose;
-
-- (jboolean)isPreparedStatementInCacheWithNSString:(NSString *)sql;
-
-+ (AndroidDatabaseSqliteSQLiteConnection *)openWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)pool
-                                        withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
-                                                                                     withInt:(jint)connectionId
-                                                                                 withBoolean:(jboolean)primaryConnection;
-
-- (void)reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration;
-
-- (void)setOnlyAllowReadOnlyOperationsWithBoolean:(jboolean)readOnly;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnection)
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnection_openWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnection)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnection")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnection.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnection.m
deleted file mode 100644
index f33bc660c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnection.m
+++ /dev/null
@@ -1,2290 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.h"
-#include "AndroidDatabaseSqliteSQLiteConnection.h"
-#include "AndroidDatabaseSqliteSQLiteConnectionPool.h"
-#include "AndroidDatabaseSqliteSQLiteCustomFunction.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseLockedException.h"
-#include "AndroidDatabaseSqliteSQLiteDebug.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteGlobal.h"
-#include "AndroidDatabaseSqliteSQLiteStatementInfo.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "android/util/LruCache.h"
-#include "android/util/Printer.h"
-#include "dalvik/system/BlockGuard.h"
-#include "dalvik/system/CloseGuard.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Exception.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/System.h"
-#include "java/text/SimpleDateFormat.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Date.h"
-#include "java/util/Locale.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-
-#import "SQLiteConnectionNative.h"
-#import "java/lang/UnsupportedOperationException.h"
-
-@class AndroidDatabaseSqliteSQLiteConnection_Operation;
-@class AndroidDatabaseSqliteSQLiteConnection_OperationLog;
-@class AndroidDatabaseSqliteSQLiteConnection_PreparedStatement;
-@class AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache;
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface AndroidDatabaseSqliteSQLiteConnection () {
- @public
-  DalvikSystemCloseGuard *mCloseGuard_;
-  AndroidDatabaseSqliteSQLiteConnectionPool *mPool_;
-  AndroidDatabaseSqliteSQLiteDatabaseConfiguration *mConfiguration_;
-  jint mConnectionId_;
-  jboolean mIsPrimaryConnection_;
-  jboolean mIsReadOnlyConnection_;
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *mPreparedStatementCache_;
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *mPreparedStatementPool_;
-  AndroidDatabaseSqliteSQLiteConnection_OperationLog *mRecentOperations_;
-  id mConnectionPtr_;
-  jboolean mOnlyAllowReadOnlyOperations_;
-  jint mCancellationSignalAttachCount_;
-}
-
-+ (id)nativeOpenWithNSString:(NSString *)path
-                     withInt:(jint)openFlags
-                withNSString:(NSString *)label
-                 withBoolean:(jboolean)enableTrace
-                 withBoolean:(jboolean)enableProfile;
-
-+ (void)nativeCloseWithId:(id)connectionPtr;
-
-+ (void)nativeRegisterCustomFunctionWithId:(id)connectionPtr
-withAndroidDatabaseSqliteSQLiteCustomFunction:(AndroidDatabaseSqliteSQLiteCustomFunction *)function;
-
-+ (void)nativeRegisterLocalizedCollatorsWithId:(id)connectionPtr
-                                  withNSString:(NSString *)locale;
-
-+ (id)nativePrepareStatementWithId:(id)connectionPtr
-                      withNSString:(NSString *)sql;
-
-+ (void)nativeFinalizeStatementWithId:(id)connectionPtr
-                               withId:(id)statementPtr;
-
-+ (jint)nativeGetParameterCountWithId:(id)connectionPtr
-                               withId:(id)statementPtr;
-
-+ (jboolean)nativeIsReadOnlyWithId:(id)connectionPtr
-                            withId:(id)statementPtr;
-
-+ (jint)nativeGetColumnCountWithId:(id)connectionPtr
-                            withId:(id)statementPtr;
-
-+ (NSString *)nativeGetColumnNameWithId:(id)connectionPtr
-                                 withId:(id)statementPtr
-                                withInt:(jint)index;
-
-+ (void)nativeBindNullWithId:(id)connectionPtr
-                      withId:(id)statementPtr
-                     withInt:(jint)index;
-
-+ (void)nativeBindLongWithId:(id)connectionPtr
-                      withId:(id)statementPtr
-                     withInt:(jint)index
-                    withLong:(jlong)value;
-
-+ (void)nativeBindDoubleWithId:(id)connectionPtr
-                        withId:(id)statementPtr
-                       withInt:(jint)index
-                    withDouble:(jdouble)value;
-
-+ (void)nativeBindStringWithId:(id)connectionPtr
-                        withId:(id)statementPtr
-                       withInt:(jint)index
-                  withNSString:(NSString *)value;
-
-+ (void)nativeBindBlobWithId:(id)connectionPtr
-                      withId:(id)statementPtr
-                     withInt:(jint)index
-               withByteArray:(IOSByteArray *)value;
-
-+ (void)nativeResetStatementAndClearBindingsWithId:(id)connectionPtr
-                                            withId:(id)statementPtr;
-
-+ (void)nativeExecuteWithId:(id)connectionPtr
-                     withId:(id)statementPtr;
-
-+ (jlong)nativeExecuteForLongWithId:(id)connectionPtr
-                             withId:(id)statementPtr;
-
-+ (NSString *)nativeExecuteForStringWithId:(id)connectionPtr
-                                    withId:(id)statementPtr;
-
-+ (jint)nativeExecuteForChangedRowCountWithId:(id)connectionPtr
-                                       withId:(id)statementPtr;
-
-+ (jlong)nativeExecuteForLastInsertedRowIdWithId:(id)connectionPtr
-                                          withId:(id)statementPtr;
-
-+ (jlong)nativeExecuteForCursorWindowWithId:(id)connectionPtr
-                                     withId:(id)statementPtr
-                                     withId:(id)windowPtr
-                                    withInt:(jint)startPos
-                                    withInt:(jint)requiredPos
-                                withBoolean:(jboolean)countAllRows;
-
-+ (jint)nativeGetDbLookasideWithId:(id)connectionPtr;
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)pool
-             withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
-                                                          withInt:(jint)connectionId
-                                                      withBoolean:(jboolean)primaryConnection;
-
-- (void)open;
-
-- (void)disposeWithBoolean:(jboolean)finalized;
-
-- (void)setPageSize;
-
-- (void)setAutoCheckpointInterval;
-
-- (void)setJournalSizeLimit;
-
-- (void)setForeignKeyModeFromConfiguration;
-
-- (void)setWalModeFromConfiguration;
-
-- (void)setSyncModeWithNSString:(NSString *)newValue;
-
-+ (NSString *)canonicalizeSyncModeWithNSString:(NSString *)value;
-
-- (void)setJournalModeWithNSString:(NSString *)newValue;
-
-- (void)setLocaleFromConfiguration;
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)acquirePreparedStatementWithNSString:(NSString *)sql;
-
-- (void)releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement;
-
-- (void)finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement;
-
-- (void)bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement
-                                                               withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (void)throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement;
-
-+ (jboolean)isCacheableWithInt:(jint)statementType;
-
-- (void)applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement;
-
-- (AndroidDatabaseSqliteSQLiteDebug_DbStats *)getMainDbStatsUnsafeWithInt:(jint)lookaside
-                                                                 withLong:(jlong)pageCount
-                                                                 withLong:(jlong)pageSize;
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)obtainPreparedStatementWithNSString:(NSString *)sql
-                                                                                          withId:(id)statementPtr
-                                                                                         withInt:(jint)numParameters
-                                                                                         withInt:(jint)type
-                                                                                     withBoolean:(jboolean)readOnly;
-
-- (void)recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement;
-
-+ (NSString *)trimSqlForDisplayWithNSString:(NSString *)sql;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mCloseGuard_, DalvikSystemCloseGuard *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mPool_, AndroidDatabaseSqliteSQLiteConnectionPool *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mConfiguration_, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mPreparedStatementCache_, AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mPreparedStatementPool_, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mRecentOperations_, AndroidDatabaseSqliteSQLiteConnection_OperationLog *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection, mConnectionPtr_, id)
-
-inline NSString *AndroidDatabaseSqliteSQLiteConnection_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteConnection_TAG = @"SQLiteConnection";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteConnection, TAG, NSString *)
-
-inline jboolean AndroidDatabaseSqliteSQLiteConnection_get_DEBUG();
-#define AndroidDatabaseSqliteSQLiteConnection_DEBUG false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnection, DEBUG, jboolean)
-
-inline IOSObjectArray *AndroidDatabaseSqliteSQLiteConnection_get_EMPTY_STRING_ARRAY();
-static IOSObjectArray *AndroidDatabaseSqliteSQLiteConnection_EMPTY_STRING_ARRAY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteConnection, EMPTY_STRING_ARRAY, IOSObjectArray *)
-
-inline IOSByteArray *AndroidDatabaseSqliteSQLiteConnection_get_EMPTY_BYTE_ARRAY();
-static IOSByteArray *AndroidDatabaseSqliteSQLiteConnection_EMPTY_BYTE_ARRAY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteConnection, EMPTY_BYTE_ARRAY, IOSByteArray *)
-
-inline JavaUtilRegexPattern *AndroidDatabaseSqliteSQLiteConnection_get_TRIM_SQL_PATTERN();
-static JavaUtilRegexPattern *AndroidDatabaseSqliteSQLiteConnection_TRIM_SQL_PATTERN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteConnection, TRIM_SQL_PATTERN, JavaUtilRegexPattern *)
-
-__attribute__((unused)) static id AndroidDatabaseSqliteSQLiteConnection_nativeOpenWithNSString_withInt_withNSString_withBoolean_withBoolean_(NSString *path, jint openFlags, NSString *label, jboolean enableTrace, jboolean enableProfile);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeCloseWithId_(id connectionPtr);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeRegisterCustomFunctionWithId_withAndroidDatabaseSqliteSQLiteCustomFunction_(id connectionPtr, AndroidDatabaseSqliteSQLiteCustomFunction *function);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeRegisterLocalizedCollatorsWithId_withNSString_(id connectionPtr, NSString *locale);
-
-__attribute__((unused)) static id AndroidDatabaseSqliteSQLiteConnection_nativePrepareStatementWithId_withNSString_(id connectionPtr, NSString *sql);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeFinalizeStatementWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteConnection_nativeGetParameterCountWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteConnection_nativeIsReadOnlyWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnCountWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnNameWithId_withId_withInt_(id connectionPtr, id statementPtr, jint index);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeBindNullWithId_withId_withInt_(id connectionPtr, id statementPtr, jint index);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeBindLongWithId_withId_withInt_withLong_(id connectionPtr, id statementPtr, jint index, jlong value);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeBindDoubleWithId_withId_withInt_withDouble_(id connectionPtr, id statementPtr, jint index, jdouble value);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeBindStringWithId_withId_withInt_withNSString_(id connectionPtr, id statementPtr, jint index, NSString *value);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeBindBlobWithId_withId_withInt_withByteArray_(id connectionPtr, id statementPtr, jint index, IOSByteArray *value);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeResetStatementAndClearBindingsWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_nativeExecuteWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jlong AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLongWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForStringWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForChangedRowCountWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jlong AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLastInsertedRowIdWithId_withId_(id connectionPtr, id statementPtr);
-
-__attribute__((unused)) static jlong AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForCursorWindowWithId_withId_withId_withInt_withInt_withBoolean_(id connectionPtr, id statementPtr, id windowPtr, jint startPos, jint requiredPos, jboolean countAllRows);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteConnection_nativeGetDbLookasideWithId_(id connectionPtr);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection *new_AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection *create_AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_open(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_disposeWithBoolean_(AndroidDatabaseSqliteSQLiteConnection *self, jboolean finalized);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setPageSize(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setAutoCheckpointInterval(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setJournalSizeLimit(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setForeignKeyModeFromConfiguration(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setWalModeFromConfiguration(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setSyncModeWithNSString_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *newValue);
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteConnection_canonicalizeSyncModeWithNSString_(NSString *value);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setJournalModeWithNSString_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *newValue);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_setLocaleFromConfiguration(AndroidDatabaseSqliteSQLiteConnection *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *sql);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement, IOSObjectArray *bindArgs);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteConnection_isCacheableWithInt_(jint statementType);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDebug_DbStats *AndroidDatabaseSqliteSQLiteConnection_getMainDbStatsUnsafeWithInt_withLong_withLong_(AndroidDatabaseSqliteSQLiteConnection *self, jint lookaside, jlong pageCount, jlong pageSize);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *AndroidDatabaseSqliteSQLiteConnection_obtainPreparedStatementWithNSString_withId_withInt_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *sql, id statementPtr, jint numParameters, jint type, jboolean readOnly);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement);
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteConnection_trimSqlForDisplayWithNSString_(NSString *sql);
-
-@interface AndroidDatabaseSqliteSQLiteConnection_PreparedStatement : NSObject {
- @public
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *mPoolNext_;
-  NSString *mSql_;
-  id mStatementPtr_;
-  jint mNumParameters_;
-  jint mType_;
-  jboolean mReadOnly_;
-  jboolean mInCache_;
-  jboolean mInUse_;
-}
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement, mPoolNext_, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement, mSql_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement, mStatementPtr_, id)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *new_AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *create_AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement)
-
-@interface AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache : AndroidUtilLruCache {
- @public
-  __unsafe_unretained AndroidDatabaseSqliteSQLiteConnection *this$0_;
-}
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)outer$
-                                                      withInt:(jint)size;
-
-- (void)entryRemovedWithBoolean:(jboolean)evicted
-                         withId:(NSString *)key
-                         withId:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)oldValue
-                         withId:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)newValue;
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer;
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)getWithId:(NSString *)arg0;
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)createWithId:(NSString *)arg0;
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)removeWithId:(NSString *)arg0;
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)putWithId:(NSString *)arg0
-                                                                withId:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)arg1;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *self, AndroidDatabaseSqliteSQLiteConnection *outer$, jint size);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *new_AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnection *outer$, jint size) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *create_AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnection *outer$, jint size);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache)
-
-@interface AndroidDatabaseSqliteSQLiteConnection_OperationLog : NSObject {
- @public
-  IOSObjectArray *mOperations_;
-  jint mIndex_;
-  jint mGeneration_;
-}
-
-- (instancetype)init;
-
-- (jint)beginOperationWithNSString:(NSString *)kind
-                      withNSString:(NSString *)sql
-                 withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (void)failOperationWithInt:(jint)cookie
-       withJavaLangException:(JavaLangException *)ex;
-
-- (void)endOperationWithInt:(jint)cookie;
-
-- (jboolean)endOperationDeferLogWithInt:(jint)cookie;
-
-- (void)logOperationWithInt:(jint)cookie
-               withNSString:(NSString *)detail;
-
-- (jboolean)endOperationDeferLogLockedWithInt:(jint)cookie;
-
-- (void)logOperationLockedWithInt:(jint)cookie
-                     withNSString:(NSString *)detail;
-
-- (jint)newOperationCookieLockedWithInt:(jint)index OBJC_METHOD_FAMILY_NONE;
-
-- (AndroidDatabaseSqliteSQLiteConnection_Operation *)getOperationLockedWithInt:(jint)cookie;
-
-- (NSString *)describeCurrentOperation;
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnection_OperationLog)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_OperationLog, mOperations_, IOSObjectArray *)
-
-inline jint AndroidDatabaseSqliteSQLiteConnection_OperationLog_get_MAX_RECENT_OPERATIONS();
-#define AndroidDatabaseSqliteSQLiteConnection_OperationLog_MAX_RECENT_OPERATIONS 20
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnection_OperationLog, MAX_RECENT_OPERATIONS, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteConnection_OperationLog_get_COOKIE_GENERATION_SHIFT();
-#define AndroidDatabaseSqliteSQLiteConnection_OperationLog_COOKIE_GENERATION_SHIFT 8
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnection_OperationLog, COOKIE_GENERATION_SHIFT, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteConnection_OperationLog_get_COOKIE_INDEX_MASK();
-#define AndroidDatabaseSqliteSQLiteConnection_OperationLog_COOKIE_INDEX_MASK 255
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnection_OperationLog, COOKIE_INDEX_MASK, jint)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_OperationLog_init(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_OperationLog *new_AndroidDatabaseSqliteSQLiteConnection_OperationLog_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_OperationLog *create_AndroidDatabaseSqliteSQLiteConnection_OperationLog_init();
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteConnection_OperationLog_endOperationDeferLogLockedWithInt_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint cookie);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_OperationLog_logOperationLockedWithInt_withNSString_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint cookie, NSString *detail);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteConnection_OperationLog_newOperationCookieLockedWithInt_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint index);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_Operation *AndroidDatabaseSqliteSQLiteConnection_OperationLog_getOperationLockedWithInt_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint cookie);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnection_OperationLog)
-
-@interface AndroidDatabaseSqliteSQLiteConnection_Operation : NSObject {
- @public
-  jlong mStartTime_;
-  jlong mEndTime_;
-  NSString *mKind_;
-  NSString *mSql_;
-  JavaUtilArrayList *mBindArgs_;
-  jboolean mFinished_;
-  JavaLangException *mException_;
-  jint mCookie_;
-}
-
-- (instancetype)init;
-
-- (void)describeWithJavaLangStringBuilder:(JavaLangStringBuilder *)msg
-                              withBoolean:(jboolean)verbose;
-
-- (NSString *)getStatus;
-
-- (NSString *)getFormattedStartTime;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnection_Operation)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_Operation, mKind_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_Operation, mSql_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_Operation, mBindArgs_, JavaUtilArrayList *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnection_Operation, mException_, JavaLangException *)
-
-inline JavaTextSimpleDateFormat *AndroidDatabaseSqliteSQLiteConnection_Operation_get_sDateFormat();
-static JavaTextSimpleDateFormat *AndroidDatabaseSqliteSQLiteConnection_Operation_sDateFormat;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteConnection_Operation, sDateFormat, JavaTextSimpleDateFormat *)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnection_Operation_init(AndroidDatabaseSqliteSQLiteConnection_Operation *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_Operation *new_AndroidDatabaseSqliteSQLiteConnection_Operation_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection_Operation *create_AndroidDatabaseSqliteSQLiteConnection_Operation_init();
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteConnection_Operation_getStatus(AndroidDatabaseSqliteSQLiteConnection_Operation *self);
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteConnection_Operation_getFormattedStartTime(AndroidDatabaseSqliteSQLiteConnection_Operation *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnection_Operation)
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteConnection)
-
-@implementation AndroidDatabaseSqliteSQLiteConnection
-
-+ (id)nativeOpenWithNSString:(NSString *)path
-                     withInt:(jint)openFlags
-                withNSString:(NSString *)label
-                 withBoolean:(jboolean)enableTrace
-                 withBoolean:(jboolean)enableProfile {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeOpenWithNSString_withInt_withNSString_withBoolean_withBoolean_(path, openFlags, label, enableTrace, enableProfile);
-}
-
-+ (void)nativeCloseWithId:(id)connectionPtr {
-  AndroidDatabaseSqliteSQLiteConnection_nativeCloseWithId_(connectionPtr);
-}
-
-+ (void)nativeRegisterCustomFunctionWithId:(id)connectionPtr
-withAndroidDatabaseSqliteSQLiteCustomFunction:(AndroidDatabaseSqliteSQLiteCustomFunction *)function {
-  AndroidDatabaseSqliteSQLiteConnection_nativeRegisterCustomFunctionWithId_withAndroidDatabaseSqliteSQLiteCustomFunction_(connectionPtr, function);
-}
-
-+ (void)nativeRegisterLocalizedCollatorsWithId:(id)connectionPtr
-                                  withNSString:(NSString *)locale {
-  AndroidDatabaseSqliteSQLiteConnection_nativeRegisterLocalizedCollatorsWithId_withNSString_(connectionPtr, locale);
-}
-
-+ (id)nativePrepareStatementWithId:(id)connectionPtr
-                      withNSString:(NSString *)sql {
-  return AndroidDatabaseSqliteSQLiteConnection_nativePrepareStatementWithId_withNSString_(connectionPtr, sql);
-}
-
-+ (void)nativeFinalizeStatementWithId:(id)connectionPtr
-                               withId:(id)statementPtr {
-  AndroidDatabaseSqliteSQLiteConnection_nativeFinalizeStatementWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jint)nativeGetParameterCountWithId:(id)connectionPtr
-                               withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeGetParameterCountWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jboolean)nativeIsReadOnlyWithId:(id)connectionPtr
-                            withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeIsReadOnlyWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jint)nativeGetColumnCountWithId:(id)connectionPtr
-                            withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnCountWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (NSString *)nativeGetColumnNameWithId:(id)connectionPtr
-                                 withId:(id)statementPtr
-                                withInt:(jint)index {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnNameWithId_withId_withInt_(connectionPtr, statementPtr, index);
-}
-
-+ (void)nativeBindNullWithId:(id)connectionPtr
-                      withId:(id)statementPtr
-                     withInt:(jint)index {
-  AndroidDatabaseSqliteSQLiteConnection_nativeBindNullWithId_withId_withInt_(connectionPtr, statementPtr, index);
-}
-
-+ (void)nativeBindLongWithId:(id)connectionPtr
-                      withId:(id)statementPtr
-                     withInt:(jint)index
-                    withLong:(jlong)value {
-  AndroidDatabaseSqliteSQLiteConnection_nativeBindLongWithId_withId_withInt_withLong_(connectionPtr, statementPtr, index, value);
-}
-
-+ (void)nativeBindDoubleWithId:(id)connectionPtr
-                        withId:(id)statementPtr
-                       withInt:(jint)index
-                    withDouble:(jdouble)value {
-  AndroidDatabaseSqliteSQLiteConnection_nativeBindDoubleWithId_withId_withInt_withDouble_(connectionPtr, statementPtr, index, value);
-}
-
-+ (void)nativeBindStringWithId:(id)connectionPtr
-                        withId:(id)statementPtr
-                       withInt:(jint)index
-                  withNSString:(NSString *)value {
-  AndroidDatabaseSqliteSQLiteConnection_nativeBindStringWithId_withId_withInt_withNSString_(connectionPtr, statementPtr, index, value);
-}
-
-+ (void)nativeBindBlobWithId:(id)connectionPtr
-                      withId:(id)statementPtr
-                     withInt:(jint)index
-               withByteArray:(IOSByteArray *)value {
-  AndroidDatabaseSqliteSQLiteConnection_nativeBindBlobWithId_withId_withInt_withByteArray_(connectionPtr, statementPtr, index, value);
-}
-
-+ (void)nativeResetStatementAndClearBindingsWithId:(id)connectionPtr
-                                            withId:(id)statementPtr {
-  AndroidDatabaseSqliteSQLiteConnection_nativeResetStatementAndClearBindingsWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (void)nativeExecuteWithId:(id)connectionPtr
-                     withId:(id)statementPtr {
-  AndroidDatabaseSqliteSQLiteConnection_nativeExecuteWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jlong)nativeExecuteForLongWithId:(id)connectionPtr
-                             withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLongWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (NSString *)nativeExecuteForStringWithId:(id)connectionPtr
-                                    withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForStringWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jint)nativeExecuteForChangedRowCountWithId:(id)connectionPtr
-                                       withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForChangedRowCountWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jlong)nativeExecuteForLastInsertedRowIdWithId:(id)connectionPtr
-                                          withId:(id)statementPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLastInsertedRowIdWithId_withId_(connectionPtr, statementPtr);
-}
-
-+ (jlong)nativeExecuteForCursorWindowWithId:(id)connectionPtr
-                                     withId:(id)statementPtr
-                                     withId:(id)windowPtr
-                                    withInt:(jint)startPos
-                                    withInt:(jint)requiredPos
-                                withBoolean:(jboolean)countAllRows {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForCursorWindowWithId_withId_withId_withInt_withInt_withBoolean_(connectionPtr, statementPtr, windowPtr, startPos, requiredPos, countAllRows);
-}
-
-+ (jint)nativeGetDbLookasideWithId:(id)connectionPtr {
-  return AndroidDatabaseSqliteSQLiteConnection_nativeGetDbLookasideWithId_(connectionPtr);
-}
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)pool
-             withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
-                                                          withInt:(jint)connectionId
-                                                      withBoolean:(jboolean)primaryConnection {
-  AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(self, pool, configuration, connectionId, primaryConnection);
-  return self;
-}
-
-- (void)java_finalize {
-  @try {
-    if (mPool_ != nil && mConnectionPtr_ != nil) {
-      [mPool_ onConnectionLeaked];
-    }
-    AndroidDatabaseSqliteSQLiteConnection_disposeWithBoolean_(self, true);
-  }
-  @finally {
-    [super java_finalize];
-  }
-}
-
-+ (AndroidDatabaseSqliteSQLiteConnection *)openWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)pool
-                                        withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
-                                                                                     withInt:(jint)connectionId
-                                                                                 withBoolean:(jboolean)primaryConnection {
-  return AndroidDatabaseSqliteSQLiteConnection_openWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(pool, configuration, connectionId, primaryConnection);
-}
-
-- (void)close {
-  AndroidDatabaseSqliteSQLiteConnection_disposeWithBoolean_(self, false);
-}
-
-- (void)open {
-  AndroidDatabaseSqliteSQLiteConnection_open(self);
-}
-
-- (void)disposeWithBoolean:(jboolean)finalized {
-  AndroidDatabaseSqliteSQLiteConnection_disposeWithBoolean_(self, finalized);
-}
-
-- (void)setPageSize {
-  AndroidDatabaseSqliteSQLiteConnection_setPageSize(self);
-}
-
-- (void)setAutoCheckpointInterval {
-  AndroidDatabaseSqliteSQLiteConnection_setAutoCheckpointInterval(self);
-}
-
-- (void)setJournalSizeLimit {
-  AndroidDatabaseSqliteSQLiteConnection_setJournalSizeLimit(self);
-}
-
-- (void)setForeignKeyModeFromConfiguration {
-  AndroidDatabaseSqliteSQLiteConnection_setForeignKeyModeFromConfiguration(self);
-}
-
-- (void)setWalModeFromConfiguration {
-  AndroidDatabaseSqliteSQLiteConnection_setWalModeFromConfiguration(self);
-}
-
-- (void)setSyncModeWithNSString:(NSString *)newValue {
-  AndroidDatabaseSqliteSQLiteConnection_setSyncModeWithNSString_(self, newValue);
-}
-
-+ (NSString *)canonicalizeSyncModeWithNSString:(NSString *)value {
-  return AndroidDatabaseSqliteSQLiteConnection_canonicalizeSyncModeWithNSString_(value);
-}
-
-- (void)setJournalModeWithNSString:(NSString *)newValue {
-  AndroidDatabaseSqliteSQLiteConnection_setJournalModeWithNSString_(self, newValue);
-}
-
-- (void)setLocaleFromConfiguration {
-  AndroidDatabaseSqliteSQLiteConnection_setLocaleFromConfiguration(self);
-}
-
-- (void)reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration {
-  mOnlyAllowReadOnlyOperations_ = false;
-  jint functionCount = [((JavaUtilArrayList *) nil_chk(((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(configuration))->customFunctions_)) size];
-  for (jint i = 0; i < functionCount; i++) {
-    AndroidDatabaseSqliteSQLiteCustomFunction *function = [configuration->customFunctions_ getWithInt:i];
-    if (![((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->customFunctions_ containsWithId:function]) {
-      AndroidDatabaseSqliteSQLiteConnection_nativeRegisterCustomFunctionWithId_withAndroidDatabaseSqliteSQLiteCustomFunction_(mConnectionPtr_, function);
-    }
-  }
-  jboolean foreignKeyModeChanged = configuration->foreignKeyConstraintsEnabled_ != ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->foreignKeyConstraintsEnabled_;
-  jboolean walModeChanged = ((configuration->openFlags_ ^ mConfiguration_->openFlags_) & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) != 0;
-  jboolean localeChanged = ![((JavaUtilLocale *) nil_chk(configuration->locale_)) isEqual:mConfiguration_->locale_];
-  [mConfiguration_ updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:configuration];
-  [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(mPreparedStatementCache_)) resizeWithInt:configuration->maxSqlCacheSize_];
-  if (foreignKeyModeChanged) {
-    AndroidDatabaseSqliteSQLiteConnection_setForeignKeyModeFromConfiguration(self);
-  }
-  if (walModeChanged) {
-    AndroidDatabaseSqliteSQLiteConnection_setWalModeFromConfiguration(self);
-  }
-  if (localeChanged) {
-    AndroidDatabaseSqliteSQLiteConnection_setLocaleFromConfiguration(self);
-  }
-}
-
-- (void)setOnlyAllowReadOnlyOperationsWithBoolean:(jboolean)readOnly {
-  mOnlyAllowReadOnlyOperations_ = readOnly;
-}
-
-- (jboolean)isPreparedStatementInCacheWithNSString:(NSString *)sql {
-  return [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(mPreparedStatementCache_)) getWithId:sql] != nil;
-}
-
-- (jint)getConnectionId {
-  return mConnectionId_;
-}
-
-- (jboolean)isPrimaryConnection {
-  return mIsPrimaryConnection_;
-}
-
-- (void)prepareWithNSString:(NSString *)sql
-withAndroidDatabaseSqliteSQLiteStatementInfo:(AndroidDatabaseSqliteSQLiteStatementInfo *)outStatementInfo {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"prepare" withNSString:sql withNSObjectArray:nil];
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-    @try {
-      if (outStatementInfo != nil) {
-        outStatementInfo->numParameters_ = ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mNumParameters_;
-        outStatementInfo->readOnly_ = statement->mReadOnly_;
-        jint columnCount = AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnCountWithId_withId_(mConnectionPtr_, statement->mStatementPtr_);
-        if (columnCount == 0) {
-          JreStrongAssign(&outStatementInfo->columnNames_, AndroidDatabaseSqliteSQLiteConnection_EMPTY_STRING_ARRAY);
-        }
-        else {
-          JreStrongAssignAndConsume(&outStatementInfo->columnNames_, [IOSObjectArray newArrayWithLength:columnCount type:NSString_class_()]);
-          for (jint i = 0; i < columnCount; i++) {
-            IOSObjectArray_Set(nil_chk(outStatementInfo->columnNames_), i, AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnNameWithId_withId_withInt_(mConnectionPtr_, statement->mStatementPtr_, i));
-          }
-        }
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-    @throw ex;
-  }
-  @finally {
-    [mRecentOperations_ endOperationWithInt:cookie];
-  }
-}
-
-- (void)executeWithNSString:(NSString *)sql
-          withNSObjectArray:(IOSObjectArray *)bindArgs {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"execute" withNSString:sql withNSObjectArray:bindArgs];
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-      AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      @try {
-        AndroidDatabaseSqliteSQLiteConnection_nativeExecuteWithId_withId_(mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_);
-      }
-      @finally {
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-    @throw ex;
-  }
-  @finally {
-    [mRecentOperations_ endOperationWithInt:cookie];
-  }
-}
-
-- (jlong)executeForLongWithNSString:(NSString *)sql
-                  withNSObjectArray:(IOSObjectArray *)bindArgs {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"executeForLong" withNSString:sql withNSObjectArray:bindArgs];
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-      AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      @try {
-        return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLongWithId_withId_(mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_);
-      }
-      @finally {
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-    @throw ex;
-  }
-  @finally {
-    [mRecentOperations_ endOperationWithInt:cookie];
-  }
-}
-
-- (NSString *)executeForStringWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"executeForString" withNSString:sql withNSObjectArray:bindArgs];
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-      AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      @try {
-        return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForStringWithId_withId_(mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_);
-      }
-      @finally {
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-    @throw ex;
-  }
-  @finally {
-    [mRecentOperations_ endOperationWithInt:cookie];
-  }
-}
-
-- (jint)executeForChangedRowCountWithNSString:(NSString *)sql
-                            withNSObjectArray:(IOSObjectArray *)bindArgs {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  jint changedRows = 0;
-  jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"executeForChangedRowCount" withNSString:sql withNSObjectArray:bindArgs];
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-      AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      @try {
-        changedRows = AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForChangedRowCountWithId_withId_(mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_);
-        return changedRows;
-      }
-      @finally {
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-    @throw ex;
-  }
-  @finally {
-    if ([mRecentOperations_ endOperationDeferLogWithInt:cookie]) {
-      [mRecentOperations_ logOperationWithInt:cookie withNSString:JreStrcat("$I", @"changedRows=", changedRows)];
-    }
-  }
-}
-
-- (jlong)executeForLastInsertedRowIdWithNSString:(NSString *)sql
-                               withNSObjectArray:(IOSObjectArray *)bindArgs {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"executeForLastInsertedRowId" withNSString:sql withNSObjectArray:bindArgs];
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-      AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      @try {
-        return AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLastInsertedRowIdWithId_withId_(mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_);
-      }
-      @finally {
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-    @throw ex;
-  }
-  @finally {
-    [mRecentOperations_ endOperationWithInt:cookie];
-  }
-}
-
-- (jint)executeForCursorWindowWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs
-           withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
-                                   withInt:(jint)startPos
-                                   withInt:(jint)requiredPos
-                               withBoolean:(jboolean)countAllRows {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (window == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"window must not be null.");
-  }
-  [window acquireReference];
-  @try {
-    jint actualPos = -1;
-    jint countedRows = -1;
-    jint filledRows = -1;
-    jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) beginOperationWithNSString:@"executeForCursorWindow" withNSString:sql withNSObjectArray:bindArgs];
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-      @try {
-        AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-        AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-        AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-        @try {
-          jlong result = AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForCursorWindowWithId_withId_withId_withInt_withInt_withBoolean_(mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_, window->mWindowPtr_, startPos, requiredPos, countAllRows);
-          actualPos = (jint) (JreRShift64(result, 32));
-          countedRows = (jint) result;
-          filledRows = [window getNumRows];
-          [window setStartPositionWithInt:actualPos];
-          return countedRows;
-        }
-        @finally {
-        }
-      }
-      @finally {
-        AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-      }
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      [mRecentOperations_ failOperationWithInt:cookie withJavaLangException:ex];
-      @throw ex;
-    }
-    @finally {
-      if ([mRecentOperations_ endOperationDeferLogWithInt:cookie]) {
-        [mRecentOperations_ logOperationWithInt:cookie withNSString:JreStrcat("$@$I$I$I$I", @"window='", window, @"', startPos=", startPos, @", actualPos=", actualPos, @", filledRows=", filledRows, @", countedRows=", countedRows)];
-      }
-    }
-  }
-  @finally {
-    [window releaseReference];
-  }
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)acquirePreparedStatementWithNSString:(NSString *)sql {
-  return AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(self, sql);
-}
-
-- (void)releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement {
-  AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-}
-
-- (void)finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement {
-  AndroidDatabaseSqliteSQLiteConnection_finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-}
-
-- (void)bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement
-                                                               withNSObjectArray:(IOSObjectArray *)bindArgs {
-  AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(self, statement, bindArgs);
-}
-
-- (void)throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement {
-  AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-}
-
-+ (jboolean)isCacheableWithInt:(jint)statementType {
-  return AndroidDatabaseSqliteSQLiteConnection_isCacheableWithInt_(statementType);
-}
-
-- (void)applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement {
-  AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose {
-  [self dumpUnsafeWithAndroidUtilPrinter:printer withBoolean:verbose];
-}
-
-- (void)dumpUnsafeWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                             withBoolean:(jboolean)verbose {
-  [((id<AndroidUtilPrinter>) nil_chk(printer)) printlnWithNSString:JreStrcat("$IC", @"Connection #", mConnectionId_, ':')];
-  if (verbose) {
-    [printer printlnWithNSString:JreStrcat("$@", @"  connectionPtr: 0x", mConnectionPtr_)];
-  }
-  [printer printlnWithNSString:JreStrcat("$Z", @"  isPrimaryConnection: ", mIsPrimaryConnection_)];
-  [printer printlnWithNSString:JreStrcat("$Z", @"  onlyAllowReadOnlyOperations: ", mOnlyAllowReadOnlyOperations_)];
-  [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) dumpWithAndroidUtilPrinter:printer withBoolean:verbose];
-  if (verbose) {
-    [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(mPreparedStatementCache_)) dumpWithAndroidUtilPrinter:printer];
-  }
-}
-
-- (NSString *)describeCurrentOperationUnsafe {
-  return [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(mRecentOperations_)) describeCurrentOperation];
-}
-
-- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList {
-  jint lookaside = AndroidDatabaseSqliteSQLiteConnection_nativeGetDbLookasideWithId_(mConnectionPtr_);
-  jlong pageCount = 0;
-  jlong pageSize = 0;
-  @try {
-    pageCount = [self executeForLongWithNSString:@"PRAGMA page_count;" withNSObjectArray:nil];
-    pageSize = [self executeForLongWithNSString:@"PRAGMA page_size;" withNSObjectArray:nil];
-  }
-  @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-  }
-  [((JavaUtilArrayList *) nil_chk(dbStatsList)) addWithId:AndroidDatabaseSqliteSQLiteConnection_getMainDbStatsUnsafeWithInt_withLong_withLong_(self, lookaside, pageCount, pageSize)];
-  AndroidDatabaseCursorWindow *window = create_AndroidDatabaseCursorWindow_initWithNSString_(@"collectDbStats");
-  @try {
-    [self executeForCursorWindowWithNSString:@"PRAGMA database_list;" withNSObjectArray:nil withAndroidDatabaseCursorWindow:window withInt:0 withInt:0 withBoolean:false];
-    for (jint i = 1; i < [window getNumRows]; i++) {
-      NSString *name = [window getStringWithInt:i withInt:1];
-      NSString *path = [window getStringWithInt:i withInt:2];
-      pageCount = 0;
-      pageSize = 0;
-      @try {
-        pageCount = [self executeForLongWithNSString:JreStrcat("$$$", @"PRAGMA ", name, @".page_count;") withNSObjectArray:nil];
-        pageSize = [self executeForLongWithNSString:JreStrcat("$$$", @"PRAGMA ", name, @".page_size;") withNSObjectArray:nil];
-      }
-      @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-      }
-      NSString *label = JreStrcat("$$", @"  (attached) ", name);
-      if (![((NSString *) nil_chk(path)) java_isEmpty]) {
-        JreStrAppend(&label, "$$", @": ", path);
-      }
-      [dbStatsList addWithId:create_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(label, pageCount, pageSize, 0, 0, 0, 0)];
-    }
-  }
-  @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-  }
-  @finally {
-    [window close];
-  }
-}
-
-- (void)collectDbStatsUnsafeWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList {
-  [((JavaUtilArrayList *) nil_chk(dbStatsList)) addWithId:AndroidDatabaseSqliteSQLiteConnection_getMainDbStatsUnsafeWithInt_withLong_withLong_(self, 0, 0, 0)];
-}
-
-- (AndroidDatabaseSqliteSQLiteDebug_DbStats *)getMainDbStatsUnsafeWithInt:(jint)lookaside
-                                                                 withLong:(jlong)pageCount
-                                                                 withLong:(jlong)pageSize {
-  return AndroidDatabaseSqliteSQLiteConnection_getMainDbStatsUnsafeWithInt_withLong_withLong_(self, lookaside, pageCount, pageSize);
-}
-
-- (NSString *)description {
-  return JreStrcat("$$$IC", @"SQLiteConnection: ", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->path_, @" (", mConnectionId_, ')');
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)obtainPreparedStatementWithNSString:(NSString *)sql
-                                                                                          withId:(id)statementPtr
-                                                                                         withInt:(jint)numParameters
-                                                                                         withInt:(jint)type
-                                                                                     withBoolean:(jboolean)readOnly {
-  return AndroidDatabaseSqliteSQLiteConnection_obtainPreparedStatementWithNSString_withId_withInt_withInt_withBoolean_(self, sql, statementPtr, numParameters, type, readOnly);
-}
-
-- (void)recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)statement {
-  AndroidDatabaseSqliteSQLiteConnection_recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-}
-
-+ (NSString *)trimSqlForDisplayWithNSString:(NSString *)sql {
-  return AndroidDatabaseSqliteSQLiteConnection_trimSqlForDisplayWithNSString_(sql);
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseSqliteSQLiteConnection class]);
-  RELEASE_(mCloseGuard_);
-  RELEASE_(mPool_);
-  RELEASE_(mConfiguration_);
-  RELEASE_(mPreparedStatementCache_);
-  RELEASE_(mPreparedStatementPool_);
-  RELEASE_(mRecentOperations_);
-  RELEASE_(mConnectionPtr_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSObject;", 0x10a, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x10a, 8, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 9, 10, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, 11, 10, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10a, 12, 10, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, 13, 10, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x10a, 14, 15, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 16, 15, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 17, 18, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 19, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 21, 22, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 23, 24, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 25, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 26, 10, -1, -1, -1, -1 },
-    { NULL, "J", 0x10a, 27, 10, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x10a, 28, 10, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, 29, 10, -1, -1, -1, -1 },
-    { NULL, "J", 0x10a, 30, 10, -1, -1, -1, -1 },
-    { NULL, "J", 0x10a, 31, 32, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, 33, 3, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, 34, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 35, -1, 36, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection;", 0x8, 37, 34, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 38, 39, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 40, 41, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 42, 41, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 43, 41, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 44, 45, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 46, 39, -1, -1, -1, -1 },
-    { NULL, "Z", 0x0, 47, 41, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 48, 49, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 50, 51, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 52, 51, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 53, 51, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 54, 51, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 55, 51, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 56, 57, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;", 0x2, 58, 41, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 59, 60, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 61, 60, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 62, 63, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 64, 60, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 65, 66, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 67, 60, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 68, 69, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 70, 69, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 71, 72, -1, 73, -1, -1 },
-    { NULL, "V", 0x0, 74, 72, -1, 73, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDebug_DbStats;", 0x2, 75, 76, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 77, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;", 0x2, 78, 79, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 80, 60, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 81, 41, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(nativeOpenWithNSString:withInt:withNSString:withBoolean:withBoolean:);
-  methods[1].selector = @selector(nativeCloseWithId:);
-  methods[2].selector = @selector(nativeRegisterCustomFunctionWithId:withAndroidDatabaseSqliteSQLiteCustomFunction:);
-  methods[3].selector = @selector(nativeRegisterLocalizedCollatorsWithId:withNSString:);
-  methods[4].selector = @selector(nativePrepareStatementWithId:withNSString:);
-  methods[5].selector = @selector(nativeFinalizeStatementWithId:withId:);
-  methods[6].selector = @selector(nativeGetParameterCountWithId:withId:);
-  methods[7].selector = @selector(nativeIsReadOnlyWithId:withId:);
-  methods[8].selector = @selector(nativeGetColumnCountWithId:withId:);
-  methods[9].selector = @selector(nativeGetColumnNameWithId:withId:withInt:);
-  methods[10].selector = @selector(nativeBindNullWithId:withId:withInt:);
-  methods[11].selector = @selector(nativeBindLongWithId:withId:withInt:withLong:);
-  methods[12].selector = @selector(nativeBindDoubleWithId:withId:withInt:withDouble:);
-  methods[13].selector = @selector(nativeBindStringWithId:withId:withInt:withNSString:);
-  methods[14].selector = @selector(nativeBindBlobWithId:withId:withInt:withByteArray:);
-  methods[15].selector = @selector(nativeResetStatementAndClearBindingsWithId:withId:);
-  methods[16].selector = @selector(nativeExecuteWithId:withId:);
-  methods[17].selector = @selector(nativeExecuteForLongWithId:withId:);
-  methods[18].selector = @selector(nativeExecuteForStringWithId:withId:);
-  methods[19].selector = @selector(nativeExecuteForChangedRowCountWithId:withId:);
-  methods[20].selector = @selector(nativeExecuteForLastInsertedRowIdWithId:withId:);
-  methods[21].selector = @selector(nativeExecuteForCursorWindowWithId:withId:withId:withInt:withInt:withBoolean:);
-  methods[22].selector = @selector(nativeGetDbLookasideWithId:);
-  methods[23].selector = @selector(initWithAndroidDatabaseSqliteSQLiteConnectionPool:withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:withInt:withBoolean:);
-  methods[24].selector = @selector(java_finalize);
-  methods[25].selector = @selector(openWithAndroidDatabaseSqliteSQLiteConnectionPool:withAndroidDatabaseSqliteSQLiteDatabaseConfiguration:withInt:withBoolean:);
-  methods[26].selector = @selector(close);
-  methods[27].selector = @selector(open);
-  methods[28].selector = @selector(disposeWithBoolean:);
-  methods[29].selector = @selector(setPageSize);
-  methods[30].selector = @selector(setAutoCheckpointInterval);
-  methods[31].selector = @selector(setJournalSizeLimit);
-  methods[32].selector = @selector(setForeignKeyModeFromConfiguration);
-  methods[33].selector = @selector(setWalModeFromConfiguration);
-  methods[34].selector = @selector(setSyncModeWithNSString:);
-  methods[35].selector = @selector(canonicalizeSyncModeWithNSString:);
-  methods[36].selector = @selector(setJournalModeWithNSString:);
-  methods[37].selector = @selector(setLocaleFromConfiguration);
-  methods[38].selector = @selector(reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:);
-  methods[39].selector = @selector(setOnlyAllowReadOnlyOperationsWithBoolean:);
-  methods[40].selector = @selector(isPreparedStatementInCacheWithNSString:);
-  methods[41].selector = @selector(getConnectionId);
-  methods[42].selector = @selector(isPrimaryConnection);
-  methods[43].selector = @selector(prepareWithNSString:withAndroidDatabaseSqliteSQLiteStatementInfo:);
-  methods[44].selector = @selector(executeWithNSString:withNSObjectArray:);
-  methods[45].selector = @selector(executeForLongWithNSString:withNSObjectArray:);
-  methods[46].selector = @selector(executeForStringWithNSString:withNSObjectArray:);
-  methods[47].selector = @selector(executeForChangedRowCountWithNSString:withNSObjectArray:);
-  methods[48].selector = @selector(executeForLastInsertedRowIdWithNSString:withNSObjectArray:);
-  methods[49].selector = @selector(executeForCursorWindowWithNSString:withNSObjectArray:withAndroidDatabaseCursorWindow:withInt:withInt:withBoolean:);
-  methods[50].selector = @selector(acquirePreparedStatementWithNSString:);
-  methods[51].selector = @selector(releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:);
-  methods[52].selector = @selector(finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:);
-  methods[53].selector = @selector(bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:withNSObjectArray:);
-  methods[54].selector = @selector(throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:);
-  methods[55].selector = @selector(isCacheableWithInt:);
-  methods[56].selector = @selector(applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:);
-  methods[57].selector = @selector(dumpWithAndroidUtilPrinter:withBoolean:);
-  methods[58].selector = @selector(dumpUnsafeWithAndroidUtilPrinter:withBoolean:);
-  methods[59].selector = @selector(describeCurrentOperationUnsafe);
-  methods[60].selector = @selector(collectDbStatsWithJavaUtilArrayList:);
-  methods[61].selector = @selector(collectDbStatsUnsafeWithJavaUtilArrayList:);
-  methods[62].selector = @selector(getMainDbStatsUnsafeWithInt:withLong:withLong:);
-  methods[63].selector = @selector(description);
-  methods[64].selector = @selector(obtainPreparedStatementWithNSString:withId:withInt:withInt:withBoolean:);
-  methods[65].selector = @selector(recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement:);
-  methods[66].selector = @selector(trimSqlForDisplayWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 82, -1, -1 },
-    { "DEBUG", "Z", .constantValue.asBOOL = AndroidDatabaseSqliteSQLiteConnection_DEBUG, 0x1a, -1, -1, -1, -1 },
-    { "EMPTY_STRING_ARRAY", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 83, -1, -1 },
-    { "EMPTY_BYTE_ARRAY", "[B", .constantValue.asLong = 0, 0x1a, -1, 84, -1, -1 },
-    { "TRIM_SQL_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 85, -1, -1 },
-    { "mCloseGuard_", "LDalvikSystemCloseGuard;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mPool_", "LAndroidDatabaseSqliteSQLiteConnectionPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConfiguration_", "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConnectionId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mIsPrimaryConnection_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mIsReadOnlyConnection_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mPreparedStatementCache_", "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mPreparedStatementPool_", "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mRecentOperations_", "LAndroidDatabaseSqliteSQLiteConnection_OperationLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConnectionPtr_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mOnlyAllowReadOnlyOperations_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mCancellationSignalAttachCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "nativeOpen", "LNSString;ILNSString;ZZ", "nativeClose", "LNSObject;", "nativeRegisterCustomFunction", "LNSObject;LAndroidDatabaseSqliteSQLiteCustomFunction;", "nativeRegisterLocalizedCollators", "LNSObject;LNSString;", "nativePrepareStatement", "nativeFinalizeStatement", "LNSObject;LNSObject;", "nativeGetParameterCount", "nativeIsReadOnly", "nativeGetColumnCount", "nativeGetColumnName", "LNSObject;LNSObject;I", "nativeBindNull", "nativeBindLong", "LNSObject;LNSObject;IJ", "nativeBindDouble", "LNSObject;LNSObject;ID", "nativeBindString", "LNSObject;LNSObject;ILNSString;", "nativeBindBlob", "LNSObject;LNSObject;I[B", "nativeResetStatementAndClearBindings", "nativeExecute", "nativeExecuteForLong", "nativeExecuteForString", "nativeExecuteForChangedRowCount", "nativeExecuteForLastInsertedRowId", "nativeExecuteForCursorWindow", "LNSObject;LNSObject;LNSObject;IIZ", "nativeGetDbLookaside", "LAndroidDatabaseSqliteSQLiteConnectionPool;LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;IZ", "finalize", "LNSException;", "open", "dispose", "Z", "setSyncMode", "LNSString;", "canonicalizeSyncMode", "setJournalMode", "reconfigure", "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;", "setOnlyAllowReadOnlyOperations", "isPreparedStatementInCache", "prepare", "LNSString;LAndroidDatabaseSqliteSQLiteStatementInfo;", "execute", "LNSString;[LNSObject;", "executeForLong", "executeForString", "executeForChangedRowCount", "executeForLastInsertedRowId", "executeForCursorWindow", "LNSString;[LNSObject;LAndroidDatabaseCursorWindow;IIZ", "acquirePreparedStatement", "releasePreparedStatement", "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;", "finalizePreparedStatement", "bindArguments", "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;[LNSObject;", "throwIfStatementForbidden", "isCacheable", "I", "applyBlockGuardPolicy", "dump", "LAndroidUtilPrinter;Z", "dumpUnsafe", "collectDbStats", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteDebug$DbStats;>;)V", "collectDbStatsUnsafe", "getMainDbStatsUnsafe", "IJJ", "toString", "obtainPreparedStatement", "LNSString;LNSObject;IIZ", "recyclePreparedStatement", "trimSqlForDisplay", &AndroidDatabaseSqliteSQLiteConnection_TAG, &AndroidDatabaseSqliteSQLiteConnection_EMPTY_STRING_ARRAY, &AndroidDatabaseSqliteSQLiteConnection_EMPTY_BYTE_ARRAY, &AndroidDatabaseSqliteSQLiteConnection_TRIM_SQL_PATTERN, "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;LAndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache;LAndroidDatabaseSqliteSQLiteConnection_OperationLog;LAndroidDatabaseSqliteSQLiteConnection_Operation;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnection = { "SQLiteConnection", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 67, 17, -1, 86, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnection;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteConnection class]) {
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteConnection_EMPTY_STRING_ARRAY, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteConnection_EMPTY_BYTE_ARRAY, [IOSByteArray newArrayWithLength:0]);
-    JreStrongAssign(&AndroidDatabaseSqliteSQLiteConnection_TRIM_SQL_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"[\\s]*\\n+[\\s]*"));
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteConnection)
-  }
-}
-
-@end
-
-id AndroidDatabaseSqliteSQLiteConnection_nativeOpenWithNSString_withInt_withNSString_withBoolean_withBoolean_(NSString *path, jint openFlags, NSString *label, jboolean enableTrace, jboolean enableProfile) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeOpen:path openFlags:openFlags labelStr:label
-  enableTrace:enableTrace enableProfile:enableProfile];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeCloseWithId_(id connectionPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeClose:connectionPtr];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeRegisterCustomFunctionWithId_withAndroidDatabaseSqliteSQLiteCustomFunction_(id connectionPtr, AndroidDatabaseSqliteSQLiteCustomFunction *function) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"Registering native custom functions is not yet supported."];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeRegisterLocalizedCollatorsWithId_withNSString_(id connectionPtr, NSString *locale) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"What's a Localized Collator?."];
-}
-
-id AndroidDatabaseSqliteSQLiteConnection_nativePrepareStatementWithId_withNSString_(id connectionPtr, NSString *sql) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativePrepareStatement:connectionPtr withSql:sql];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeFinalizeStatementWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeFinalizeStatement:connectionPtr statement:statementPtr];
-  #if ! __has_feature(objc_arc)
-  [(NSObject *)statementPtr release];
-  #endif
-}
-
-jint AndroidDatabaseSqliteSQLiteConnection_nativeGetParameterCountWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeGetParameterCount:connectionPtr statement:statementPtr];
-}
-
-jboolean AndroidDatabaseSqliteSQLiteConnection_nativeIsReadOnlyWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeIsReadOnly:connectionPtr statement:statementPtr];
-}
-
-jint AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnCountWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeGetColumnCount:connectionPtr statement:statementPtr];
-}
-
-NSString *AndroidDatabaseSqliteSQLiteConnection_nativeGetColumnNameWithId_withId_withInt_(id connectionPtr, id statementPtr, jint index) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeGetColumnName:connectionPtr statement:statementPtr index:index];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeBindNullWithId_withId_withInt_(id connectionPtr, id statementPtr, jint index) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeBindNull:connectionPtr statement:statementPtr index:index];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeBindLongWithId_withId_withInt_withLong_(id connectionPtr, id statementPtr, jint index, jlong value) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeBindLong:connectionPtr statement:statementPtr index:index value:value];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeBindDoubleWithId_withId_withInt_withDouble_(id connectionPtr, id statementPtr, jint index, jdouble value) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeBindDouble:connectionPtr statement:statementPtr index:index value:value];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeBindStringWithId_withId_withInt_withNSString_(id connectionPtr, id statementPtr, jint index, NSString *value) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeBindString:connectionPtr statement:statementPtr index:index value:value];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeBindBlobWithId_withId_withInt_withByteArray_(id connectionPtr, id statementPtr, jint index, IOSByteArray *value) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeBindBlob:connectionPtr statement:statementPtr index:index value:value];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeResetStatementAndClearBindingsWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeResetStatementAndClearBindings:connectionPtr statement:statementPtr];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_nativeExecuteWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  [SQLiteConnectionNative nativeExecute:connectionPtr statement:statementPtr];
-}
-
-jlong AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLongWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeExecuteForLong:connectionPtr statement:statementPtr];
-}
-
-NSString *AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForStringWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeExecuteForString:connectionPtr statement:statementPtr];
-}
-
-jint AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForChangedRowCountWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeExecuteForChangedRowCount:connectionPtr statement:statementPtr];
-}
-
-jlong AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForLastInsertedRowIdWithId_withId_(id connectionPtr, id statementPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeExecuteForLastInsertedRowId:connectionPtr statement:statementPtr];
-}
-
-jlong AndroidDatabaseSqliteSQLiteConnection_nativeExecuteForCursorWindowWithId_withId_withId_withInt_withInt_withBoolean_(id connectionPtr, id statementPtr, id windowPtr, jint startPos, jint requiredPos, jboolean countAllRows) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeExecuteForCursorWindow:connectionPtr statement:statementPtr window:windowPtr
-  startPos:startPos requiredPos:requiredPos countAllRows:countAllRows];
-}
-
-jint AndroidDatabaseSqliteSQLiteConnection_nativeGetDbLookasideWithId_(id connectionPtr) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [SQLiteConnectionNative nativeGetDbLookaside:connectionPtr];
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mCloseGuard_, DalvikSystemCloseGuard_get());
-  JreStrongAssignAndConsume(&self->mRecentOperations_, new_AndroidDatabaseSqliteSQLiteConnection_OperationLog_init());
-  JreStrongAssign(&self->mPool_, pool);
-  JreStrongAssignAndConsume(&self->mConfiguration_, new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(configuration));
-  self->mConnectionId_ = connectionId;
-  self->mIsPrimaryConnection_ = primaryConnection;
-  self->mIsReadOnlyConnection_ = ((((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(configuration))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_OPEN_READONLY) != 0);
-  JreStrongAssignAndConsume(&self->mPreparedStatementCache_, new_AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, self->mConfiguration_->maxSqlCacheSize_));
-  [((DalvikSystemCloseGuard *) nil_chk(self->mCloseGuard_)) openWithNSString:@"close"];
-}
-
-AndroidDatabaseSqliteSQLiteConnection *new_AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnection, initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_, pool, configuration, connectionId, primaryConnection)
-}
-
-AndroidDatabaseSqliteSQLiteConnection *create_AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnection, initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_, pool, configuration, connectionId, primaryConnection)
-}
-
-AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnection_openWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *pool, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jint connectionId, jboolean primaryConnection) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  AndroidDatabaseSqliteSQLiteConnection *connection = create_AndroidDatabaseSqliteSQLiteConnection_initWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(pool, configuration, connectionId, primaryConnection);
-  @try {
-    AndroidDatabaseSqliteSQLiteConnection_open(connection);
-    return connection;
-  }
-  @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-    AndroidDatabaseSqliteSQLiteConnection_disposeWithBoolean_(connection, false);
-    @throw ex;
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_open(AndroidDatabaseSqliteSQLiteConnection *self) {
-  JreStrongAssign(&self->mConnectionPtr_, AndroidDatabaseSqliteSQLiteConnection_nativeOpenWithNSString_withInt_withNSString_withBoolean_withBoolean_(((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->path_, self->mConfiguration_->openFlags_, self->mConfiguration_->label_, JreLoadStatic(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_STATEMENTS), JreLoadStatic(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_TIME)));
-  AndroidDatabaseSqliteSQLiteConnection_setPageSize(self);
-  AndroidDatabaseSqliteSQLiteConnection_setForeignKeyModeFromConfiguration(self);
-  AndroidDatabaseSqliteSQLiteConnection_setWalModeFromConfiguration(self);
-  AndroidDatabaseSqliteSQLiteConnection_setJournalSizeLimit(self);
-  AndroidDatabaseSqliteSQLiteConnection_setAutoCheckpointInterval(self);
-  AndroidDatabaseSqliteSQLiteConnection_setLocaleFromConfiguration(self);
-  jint functionCount = [((JavaUtilArrayList *) nil_chk(self->mConfiguration_->customFunctions_)) size];
-  for (jint i = 0; i < functionCount; i++) {
-    AndroidDatabaseSqliteSQLiteCustomFunction *function = [self->mConfiguration_->customFunctions_ getWithInt:i];
-    AndroidDatabaseSqliteSQLiteConnection_nativeRegisterCustomFunctionWithId_withAndroidDatabaseSqliteSQLiteCustomFunction_(self->mConnectionPtr_, function);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_disposeWithBoolean_(AndroidDatabaseSqliteSQLiteConnection *self, jboolean finalized) {
-  if (self->mCloseGuard_ != nil) {
-    if (finalized) {
-      [self->mCloseGuard_ warnIfOpen];
-    }
-    [self->mCloseGuard_ close];
-  }
-  if (self->mConnectionPtr_ != nil) {
-    jint cookie = [((AndroidDatabaseSqliteSQLiteConnection_OperationLog *) nil_chk(self->mRecentOperations_)) beginOperationWithNSString:@"close" withNSString:nil withNSObjectArray:nil];
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(self->mPreparedStatementCache_)) evictAll];
-      AndroidDatabaseSqliteSQLiteConnection_nativeCloseWithId_(self->mConnectionPtr_);
-      JreStrongAssign(&self->mConnectionPtr_, nil);
-    }
-    @finally {
-      [self->mRecentOperations_ endOperationWithInt:cookie];
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setPageSize(AndroidDatabaseSqliteSQLiteConnection *self) {
-  if (![((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_)) isInMemoryDb] && !self->mIsReadOnlyConnection_) {
-    jlong newValue = AndroidDatabaseSqliteSQLiteGlobal_getDefaultPageSize();
-    jlong value = [self executeForLongWithNSString:@"PRAGMA page_size" withNSObjectArray:nil];
-    if (value != newValue) {
-      [self executeWithNSString:JreStrcat("$J", @"PRAGMA page_size=", newValue) withNSObjectArray:nil];
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setAutoCheckpointInterval(AndroidDatabaseSqliteSQLiteConnection *self) {
-  if (![((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_)) isInMemoryDb] && !self->mIsReadOnlyConnection_) {
-    jlong newValue = AndroidDatabaseSqliteSQLiteGlobal_getWALAutoCheckpoint();
-    jlong value = [self executeForLongWithNSString:@"PRAGMA wal_autocheckpoint" withNSObjectArray:nil];
-    if (value != newValue) {
-      [self executeForLongWithNSString:JreStrcat("$J", @"PRAGMA wal_autocheckpoint=", newValue) withNSObjectArray:nil];
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setJournalSizeLimit(AndroidDatabaseSqliteSQLiteConnection *self) {
-  if (![((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_)) isInMemoryDb] && !self->mIsReadOnlyConnection_) {
-    jlong newValue = AndroidDatabaseSqliteSQLiteGlobal_getJournalSizeLimit();
-    jlong value = [self executeForLongWithNSString:@"PRAGMA journal_size_limit" withNSObjectArray:nil];
-    if (value != newValue) {
-      [self executeForLongWithNSString:JreStrcat("$J", @"PRAGMA journal_size_limit=", newValue) withNSObjectArray:nil];
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setForeignKeyModeFromConfiguration(AndroidDatabaseSqliteSQLiteConnection *self) {
-  if (!self->mIsReadOnlyConnection_) {
-    jlong newValue = ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->foreignKeyConstraintsEnabled_ ? 1 : 0;
-    jlong value = [self executeForLongWithNSString:@"PRAGMA foreign_keys" withNSObjectArray:nil];
-    if (value != newValue) {
-      [self executeWithNSString:JreStrcat("$J", @"PRAGMA foreign_keys=", newValue) withNSObjectArray:nil];
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setWalModeFromConfiguration(AndroidDatabaseSqliteSQLiteConnection *self) {
-  if (![((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_)) isInMemoryDb] && !self->mIsReadOnlyConnection_) {
-    if ((self->mConfiguration_->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) != 0) {
-      AndroidDatabaseSqliteSQLiteConnection_setJournalModeWithNSString_(self, @"WAL");
-      AndroidDatabaseSqliteSQLiteConnection_setSyncModeWithNSString_(self, AndroidDatabaseSqliteSQLiteGlobal_getWALSyncMode());
-    }
-    else {
-      AndroidDatabaseSqliteSQLiteConnection_setJournalModeWithNSString_(self, AndroidDatabaseSqliteSQLiteGlobal_getDefaultJournalMode());
-      AndroidDatabaseSqliteSQLiteConnection_setSyncModeWithNSString_(self, AndroidDatabaseSqliteSQLiteGlobal_getDefaultSyncMode());
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setSyncModeWithNSString_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *newValue) {
-  NSString *value = [self executeForStringWithNSString:@"PRAGMA synchronous" withNSObjectArray:nil];
-  if (![((NSString *) nil_chk(AndroidDatabaseSqliteSQLiteConnection_canonicalizeSyncModeWithNSString_(value))) java_equalsIgnoreCase:AndroidDatabaseSqliteSQLiteConnection_canonicalizeSyncModeWithNSString_(newValue)]) {
-    [self executeWithNSString:JreStrcat("$$", @"PRAGMA synchronous=", newValue) withNSObjectArray:nil];
-  }
-}
-
-NSString *AndroidDatabaseSqliteSQLiteConnection_canonicalizeSyncModeWithNSString_(NSString *value) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  if ([((NSString *) nil_chk(value)) isEqual:@"0"]) {
-    return @"OFF";
-  }
-  else if ([value isEqual:@"1"]) {
-    return @"NORMAL";
-  }
-  else if ([value isEqual:@"2"]) {
-    return @"FULL";
-  }
-  return value;
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setJournalModeWithNSString_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *newValue) {
-  NSString *value = [self executeForStringWithNSString:@"PRAGMA journal_mode" withNSObjectArray:nil];
-  if (![((NSString *) nil_chk(value)) java_equalsIgnoreCase:newValue]) {
-    @try {
-      NSString *result = [self executeForStringWithNSString:JreStrcat("$$", @"PRAGMA journal_mode=", newValue) withNSObjectArray:nil];
-      if ([((NSString *) nil_chk(result)) java_equalsIgnoreCase:newValue]) {
-        return;
-      }
-    }
-    @catch (AndroidDatabaseSqliteSQLiteDatabaseLockedException *ex) {
-    }
-    AndroidUtilLog_wWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteConnection_TAG, JreStrcat("$$$$$$$", @"Could not change the database journal mode of '", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->label_, @"' from '", value, @"' to '", newValue, @"' because the database is locked.  This usually means that there are other open connections to the database which prevents the database from enabling or disabling write-ahead logging mode.  Proceeding without changing the journal mode."));
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_setLocaleFromConfiguration(AndroidDatabaseSqliteSQLiteConnection *self) {
-  if ((((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_NO_LOCALIZED_COLLATORS) != 0) {
-    return;
-  }
-  NSString *newLocale = [((JavaUtilLocale *) nil_chk(self->mConfiguration_->locale_)) description];
-  if (self->mIsReadOnlyConnection_) {
-    return;
-  }
-  @try {
-    [self executeWithNSString:@"CREATE TABLE IF NOT EXISTS android_metadata (locale TEXT)" withNSObjectArray:nil];
-    NSString *oldLocale = [self executeForStringWithNSString:@"SELECT locale FROM android_metadata UNION SELECT NULL ORDER BY locale DESC LIMIT 1" withNSObjectArray:nil];
-    if (oldLocale != nil && [oldLocale isEqual:newLocale]) {
-      return;
-    }
-    [self executeWithNSString:@"BEGIN" withNSObjectArray:nil];
-    jboolean success = false;
-    @try {
-      [self executeWithNSString:@"DELETE FROM android_metadata" withNSObjectArray:nil];
-      [self executeWithNSString:@"INSERT INTO android_metadata (locale) VALUES(?)" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ newLocale } count:1 type:NSObject_class_()]];
-      [self executeWithNSString:@"REINDEX LOCALIZED" withNSObjectArray:nil];
-      success = true;
-    }
-    @finally {
-      [self executeWithNSString:success ? @"COMMIT" : @"ROLLBACK" withNSObjectArray:nil];
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    @throw create_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(JreStrcat("$$$$$", @"Failed to change locale for db '", self->mConfiguration_->label_, @"' to '", newLocale, @"'."), ex);
-  }
-}
-
-AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *AndroidDatabaseSqliteSQLiteConnection_acquirePreparedStatementWithNSString_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *sql) {
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(self->mPreparedStatementCache_)) getWithId:sql];
-  jboolean skipCache = false;
-  if (statement != nil) {
-    if (!statement->mInUse_) {
-      return statement;
-    }
-    skipCache = true;
-  }
-  id statementPtr = AndroidDatabaseSqliteSQLiteConnection_nativePrepareStatementWithId_withNSString_(self->mConnectionPtr_, sql);
-  @try {
-    jint numParameters = AndroidDatabaseSqliteSQLiteConnection_nativeGetParameterCountWithId_withId_(self->mConnectionPtr_, statementPtr);
-    jint type = AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(sql);
-    jboolean readOnly = AndroidDatabaseSqliteSQLiteConnection_nativeIsReadOnlyWithId_withId_(self->mConnectionPtr_, statementPtr);
-    statement = AndroidDatabaseSqliteSQLiteConnection_obtainPreparedStatementWithNSString_withId_withInt_withInt_withBoolean_(self, sql, statementPtr, numParameters, type, readOnly);
-    if (!skipCache && AndroidDatabaseSqliteSQLiteConnection_isCacheableWithInt_(type)) {
-      [self->mPreparedStatementCache_ putWithId:sql withId:statement];
-      ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mInCache_ = true;
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    if (statement == nil || !statement->mInCache_) {
-      AndroidDatabaseSqliteSQLiteConnection_nativeFinalizeStatementWithId_withId_(self->mConnectionPtr_, statementPtr);
-    }
-    @throw ex;
-  }
-  ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mInUse_ = true;
-  return statement;
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_releasePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement) {
-  ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mInUse_ = false;
-  if (statement->mInCache_) {
-    @try {
-      AndroidDatabaseSqliteSQLiteConnection_nativeResetStatementAndClearBindingsWithId_withId_(self->mConnectionPtr_, statement->mStatementPtr_);
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-      [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(self->mPreparedStatementCache_)) removeWithId:statement->mSql_];
-    }
-  }
-  else {
-    AndroidDatabaseSqliteSQLiteConnection_finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement) {
-  AndroidDatabaseSqliteSQLiteConnection_nativeFinalizeStatementWithId_withId_(self->mConnectionPtr_, ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mStatementPtr_);
-  AndroidDatabaseSqliteSQLiteConnection_recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(self, statement);
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_bindArgumentsWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_withNSObjectArray_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement, IOSObjectArray *bindArgs) {
-  jint count = bindArgs != nil ? bindArgs->size_ : 0;
-  if (count != ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mNumParameters_) {
-    @throw create_AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException_initWithNSString_(JreStrcat("$I$I$", @"Expected ", statement->mNumParameters_, @" bind arguments but ", count, @" were provided."));
-  }
-  if (count == 0) {
-    return;
-  }
-  id statementPtr = statement->mStatementPtr_;
-  for (jint i = 0; i < count; i++) {
-    id arg = IOSObjectArray_Get(nil_chk(bindArgs), i);
-    switch (AndroidDatabaseDatabaseUtils_getTypeOfObjectWithId_(arg)) {
-      case AndroidDatabaseCursor_FIELD_TYPE_NULL:
-      AndroidDatabaseSqliteSQLiteConnection_nativeBindNullWithId_withId_withInt_(self->mConnectionPtr_, statementPtr, i + 1);
-      break;
-      case AndroidDatabaseCursor_FIELD_TYPE_INTEGER:
-      AndroidDatabaseSqliteSQLiteConnection_nativeBindLongWithId_withId_withInt_withLong_(self->mConnectionPtr_, statementPtr, i + 1, [((NSNumber *) nil_chk(((NSNumber *) cast_chk(arg, [NSNumber class])))) longLongValue]);
-      break;
-      case AndroidDatabaseCursor_FIELD_TYPE_FLOAT:
-      AndroidDatabaseSqliteSQLiteConnection_nativeBindDoubleWithId_withId_withInt_withDouble_(self->mConnectionPtr_, statementPtr, i + 1, [((NSNumber *) nil_chk(((NSNumber *) cast_chk(arg, [NSNumber class])))) doubleValue]);
-      break;
-      case AndroidDatabaseCursor_FIELD_TYPE_BLOB:
-      AndroidDatabaseSqliteSQLiteConnection_nativeBindBlobWithId_withId_withInt_withByteArray_(self->mConnectionPtr_, statementPtr, i + 1, (IOSByteArray *) cast_chk(arg, [IOSByteArray class]));
-      break;
-      case AndroidDatabaseCursor_FIELD_TYPE_STRING:
-      default:
-      if ([arg isKindOfClass:[JavaLangBoolean class]]) {
-        AndroidDatabaseSqliteSQLiteConnection_nativeBindLongWithId_withId_withInt_withLong_(self->mConnectionPtr_, statementPtr, i + 1, [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk(arg, [JavaLangBoolean class])))) booleanValue] ? 1 : 0);
-      }
-      else {
-        AndroidDatabaseSqliteSQLiteConnection_nativeBindStringWithId_withId_withInt_withNSString_(self->mConnectionPtr_, statementPtr, i + 1, [nil_chk(arg) description]);
-      }
-      break;
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_throwIfStatementForbiddenWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement) {
-  if (self->mOnlyAllowReadOnlyOperations_ && !((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mReadOnly_) {
-    @throw create_AndroidDatabaseSqliteSQLiteException_initWithNSString_(@"Cannot execute this statement because it might modify the database but the connection is read-only.");
-  }
-}
-
-jboolean AndroidDatabaseSqliteSQLiteConnection_isCacheableWithInt_(jint statementType) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  if (statementType == AndroidDatabaseDatabaseUtils_STATEMENT_UPDATE || statementType == AndroidDatabaseDatabaseUtils_STATEMENT_SELECT) {
-    return true;
-  }
-  return false;
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_applyBlockGuardPolicyWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement) {
-  if (![((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_)) isInMemoryDb]) {
-    if (((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mReadOnly_) {
-      [((id<DalvikSystemBlockGuard_Policy>) nil_chk(DalvikSystemBlockGuard_getThreadPolicy())) onReadFromDisk];
-    }
-    else {
-      [((id<DalvikSystemBlockGuard_Policy>) nil_chk(DalvikSystemBlockGuard_getThreadPolicy())) onWriteToDisk];
-    }
-  }
-}
-
-AndroidDatabaseSqliteSQLiteDebug_DbStats *AndroidDatabaseSqliteSQLiteConnection_getMainDbStatsUnsafeWithInt_withLong_withLong_(AndroidDatabaseSqliteSQLiteConnection *self, jint lookaside, jlong pageCount, jlong pageSize) {
-  NSString *label = ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->path_;
-  if (!self->mIsPrimaryConnection_) {
-    JreStrAppend(&label, "$IC", @" (", self->mConnectionId_, ')');
-  }
-  return create_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(label, pageCount, pageSize, lookaside, [((AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *) nil_chk(self->mPreparedStatementCache_)) hitCount], [self->mPreparedStatementCache_ missCount], [self->mPreparedStatementCache_ size]);
-}
-
-AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *AndroidDatabaseSqliteSQLiteConnection_obtainPreparedStatementWithNSString_withId_withInt_withInt_withBoolean_(AndroidDatabaseSqliteSQLiteConnection *self, NSString *sql, id statementPtr, jint numParameters, jint type, jboolean readOnly) {
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = self->mPreparedStatementPool_;
-  if (statement != nil) {
-    JreStrongAssign(&self->mPreparedStatementPool_, statement->mPoolNext_);
-    JreStrongAssign(&statement->mPoolNext_, nil);
-    statement->mInCache_ = false;
-  }
-  else {
-    statement = create_AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init();
-  }
-  JreStrongAssign(&statement->mSql_, sql);
-  JreStrongAssign(&statement->mStatementPtr_, statementPtr);
-  statement->mNumParameters_ = numParameters;
-  statement->mType_ = type;
-  statement->mReadOnly_ = readOnly;
-  return statement;
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_recyclePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(AndroidDatabaseSqliteSQLiteConnection *self, AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement) {
-  JreStrongAssign(&((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mSql_, nil);
-  JreStrongAssign(&statement->mPoolNext_, self->mPreparedStatementPool_);
-  JreStrongAssign(&self->mPreparedStatementPool_, statement);
-}
-
-NSString *AndroidDatabaseSqliteSQLiteConnection_trimSqlForDisplayWithNSString_(NSString *sql) {
-  AndroidDatabaseSqliteSQLiteConnection_initialize();
-  return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(AndroidDatabaseSqliteSQLiteConnection_TRIM_SQL_PATTERN)) matcherWithJavaLangCharSequence:sql])) replaceAllWithNSString:@" "];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnection)
-
-@implementation AndroidDatabaseSqliteSQLiteConnection_PreparedStatement
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)dealloc {
-  RELEASE_(mPoolNext_);
-  RELEASE_(mSql_);
-  RELEASE_(mStatementPtr_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mPoolNext_", "LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mSql_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mStatementPtr_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mNumParameters_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mType_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mReadOnly_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mInCache_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mInUse_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteConnection;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnection_PreparedStatement = { "PreparedStatement", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1a, 1, 8, 0, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnection_PreparedStatement;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *new_AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement, init)
-}
-
-AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *create_AndroidDatabaseSqliteSQLiteConnection_PreparedStatement_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement)
-
-@implementation AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)outer$
-                                                      withInt:(jint)size {
-  AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, outer$, size);
-  return self;
-}
-
-- (void)entryRemovedWithBoolean:(jboolean)evicted
-                         withId:(NSString *)key
-                         withId:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)oldValue
-                         withId:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *)newValue {
-  ((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(oldValue))->mInCache_ = false;
-  if (!oldValue->mInUse_) {
-    AndroidDatabaseSqliteSQLiteConnection_finalizePreparedStatementWithAndroidDatabaseSqliteSQLiteConnection_PreparedStatement_(this$0_, oldValue);
-  }
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer {
-  [((id<AndroidUtilPrinter>) nil_chk(printer)) printlnWithNSString:@"  Prepared statement cache:"];
-  id<JavaUtilMap> cache = [self snapshot];
-  if (![((id<JavaUtilMap>) nil_chk(cache)) isEmpty]) {
-    jint i = 0;
-    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([cache entrySet])) {
-      AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *statement = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
-      if (((AndroidDatabaseSqliteSQLiteConnection_PreparedStatement *) nil_chk(statement))->mInCache_) {
-        NSString *sql = [entry_ getKey];
-        [printer printlnWithNSString:JreStrcat("$I$@$I$I$Z$$C", @"    ", i, @": statementPtr=0x", statement->mStatementPtr_, @", numParameters=", statement->mNumParameters_, @", type=", statement->mType_, @", readOnly=", statement->mReadOnly_, @", sql=\"", AndroidDatabaseSqliteSQLiteConnection_trimSqlForDisplayWithNSString_(sql), '"')];
-      }
-      i += 1;
-    }
-  }
-  else {
-    [printer printlnWithNSString:@"    <none>"];
-  }
-}
-
-- (void)__javaClone:(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *)original {
-  [super __javaClone:original];
-  [this$0_ release];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteConnection:withInt:);
-  methods[1].selector = @selector(entryRemovedWithBoolean:withId:withId:withId:);
-  methods[2].selector = @selector(dumpWithAndroidUtilPrinter:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidDatabaseSqliteSQLiteConnection;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "I", "entryRemoved", "ZLNSString;LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;LAndroidDatabaseSqliteSQLiteConnection_PreparedStatement;", "dump", "LAndroidUtilPrinter;", "LAndroidDatabaseSqliteSQLiteConnection;", "Landroid/util/LruCache<Ljava/lang/String;Landroid/database/sqlite/SQLiteConnection$PreparedStatement;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache = { "PreparedStatementCache", "android.database.sqlite", ptrTable, methods, fields, 7, 0x12, 3, 1, 5, -1, -1, 6, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *self, AndroidDatabaseSqliteSQLiteConnection *outer$, jint size) {
-  self->this$0_ = outer$;
-  AndroidUtilLruCache_initWithInt_(self, size);
-}
-
-AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *new_AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnection *outer$, jint size) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache, initWithAndroidDatabaseSqliteSQLiteConnection_withInt_, outer$, size)
-}
-
-AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache *create_AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache_initWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnection *outer$, jint size) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache, initWithAndroidDatabaseSqliteSQLiteConnection_withInt_, outer$, size)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnection_PreparedStatementCache)
-
-@implementation AndroidDatabaseSqliteSQLiteConnection_OperationLog
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteConnection_OperationLog_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (jint)beginOperationWithNSString:(NSString *)kind
-                      withNSString:(NSString *)sql
-                 withNSObjectArray:(IOSObjectArray *)bindArgs {
-  @synchronized(mOperations_) {
-    jint index = (mIndex_ + 1) % AndroidDatabaseSqliteSQLiteConnection_OperationLog_MAX_RECENT_OPERATIONS;
-    AndroidDatabaseSqliteSQLiteConnection_Operation *operation = IOSObjectArray_Get(nil_chk(mOperations_), index);
-    if (operation == nil) {
-      operation = create_AndroidDatabaseSqliteSQLiteConnection_Operation_init();
-      IOSObjectArray_Set(mOperations_, index, operation);
-    }
-    else {
-      operation->mFinished_ = false;
-      JreStrongAssign(&operation->mException_, nil);
-      if (operation->mBindArgs_ != nil) {
-        [operation->mBindArgs_ clear];
-      }
-    }
-    operation->mStartTime_ = JavaLangSystem_currentTimeMillis();
-    JreStrongAssign(&operation->mKind_, kind);
-    JreStrongAssign(&operation->mSql_, sql);
-    if (bindArgs != nil) {
-      if (operation->mBindArgs_ == nil) {
-        JreStrongAssignAndConsume(&operation->mBindArgs_, new_JavaUtilArrayList_init());
-      }
-      else {
-        [operation->mBindArgs_ clear];
-      }
-      for (jint i = 0; i < bindArgs->size_; i++) {
-        id arg = IOSObjectArray_Get(bindArgs, i);
-        if (arg != nil && [arg isKindOfClass:[IOSByteArray class]]) {
-          [((JavaUtilArrayList *) nil_chk(operation->mBindArgs_)) addWithId:JreLoadStatic(AndroidDatabaseSqliteSQLiteConnection, EMPTY_BYTE_ARRAY)];
-        }
-        else {
-          [((JavaUtilArrayList *) nil_chk(operation->mBindArgs_)) addWithId:arg];
-        }
-      }
-    }
-    operation->mCookie_ = AndroidDatabaseSqliteSQLiteConnection_OperationLog_newOperationCookieLockedWithInt_(self, index);
-    mIndex_ = index;
-    return operation->mCookie_;
-  }
-}
-
-- (void)failOperationWithInt:(jint)cookie
-       withJavaLangException:(JavaLangException *)ex {
-  @synchronized(mOperations_) {
-    AndroidDatabaseSqliteSQLiteConnection_Operation *operation = AndroidDatabaseSqliteSQLiteConnection_OperationLog_getOperationLockedWithInt_(self, cookie);
-    if (operation != nil) {
-      JreStrongAssign(&operation->mException_, ex);
-    }
-  }
-}
-
-- (void)endOperationWithInt:(jint)cookie {
-  @synchronized(mOperations_) {
-    if (AndroidDatabaseSqliteSQLiteConnection_OperationLog_endOperationDeferLogLockedWithInt_(self, cookie)) {
-      AndroidDatabaseSqliteSQLiteConnection_OperationLog_logOperationLockedWithInt_withNSString_(self, cookie, nil);
-    }
-  }
-}
-
-- (jboolean)endOperationDeferLogWithInt:(jint)cookie {
-  @synchronized(mOperations_) {
-    return AndroidDatabaseSqliteSQLiteConnection_OperationLog_endOperationDeferLogLockedWithInt_(self, cookie);
-  }
-}
-
-- (void)logOperationWithInt:(jint)cookie
-               withNSString:(NSString *)detail {
-  @synchronized(mOperations_) {
-    AndroidDatabaseSqliteSQLiteConnection_OperationLog_logOperationLockedWithInt_withNSString_(self, cookie, detail);
-  }
-}
-
-- (jboolean)endOperationDeferLogLockedWithInt:(jint)cookie {
-  return AndroidDatabaseSqliteSQLiteConnection_OperationLog_endOperationDeferLogLockedWithInt_(self, cookie);
-}
-
-- (void)logOperationLockedWithInt:(jint)cookie
-                     withNSString:(NSString *)detail {
-  AndroidDatabaseSqliteSQLiteConnection_OperationLog_logOperationLockedWithInt_withNSString_(self, cookie, detail);
-}
-
-- (jint)newOperationCookieLockedWithInt:(jint)index {
-  return AndroidDatabaseSqliteSQLiteConnection_OperationLog_newOperationCookieLockedWithInt_(self, index);
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection_Operation *)getOperationLockedWithInt:(jint)cookie {
-  return AndroidDatabaseSqliteSQLiteConnection_OperationLog_getOperationLockedWithInt_(self, cookie);
-}
-
-- (NSString *)describeCurrentOperation {
-  @synchronized(mOperations_) {
-    AndroidDatabaseSqliteSQLiteConnection_Operation *operation = IOSObjectArray_Get(nil_chk(mOperations_), mIndex_);
-    if (operation != nil && !operation->mFinished_) {
-      JavaLangStringBuilder *msg = create_JavaLangStringBuilder_init();
-      [operation describeWithJavaLangStringBuilder:msg withBoolean:false];
-      return [msg description];
-    }
-    return nil;
-  }
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose {
-  @synchronized(mOperations_) {
-    [((id<AndroidUtilPrinter>) nil_chk(printer)) printlnWithNSString:@"  Most recently executed operations:"];
-    jint index = mIndex_;
-    AndroidDatabaseSqliteSQLiteConnection_Operation *operation = IOSObjectArray_Get(nil_chk(mOperations_), index);
-    if (operation != nil) {
-      jint n = 0;
-      do {
-        JavaLangStringBuilder *msg = create_JavaLangStringBuilder_init();
-        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@"    "])) appendWithInt:n])) appendWithNSString:@": ["];
-        [msg appendWithNSString:AndroidDatabaseSqliteSQLiteConnection_Operation_getFormattedStartTime(operation)];
-        [msg appendWithNSString:@"] "];
-        [operation describeWithJavaLangStringBuilder:msg withBoolean:verbose];
-        [printer printlnWithNSString:[msg description]];
-        if (index > 0) {
-          index -= 1;
-        }
-        else {
-          index = AndroidDatabaseSqliteSQLiteConnection_OperationLog_MAX_RECENT_OPERATIONS - 1;
-        }
-        n += 1;
-        operation = IOSObjectArray_Get(mOperations_, index);
-      }
-      while (operation != nil && n < AndroidDatabaseSqliteSQLiteConnection_OperationLog_MAX_RECENT_OPERATIONS);
-    }
-    else {
-      [printer printlnWithNSString:@"    <none>"];
-    }
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(mOperations_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 6, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, 9, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 10, 8, -1, -1, -1, -1 },
-    { NULL, "I", 0x2, 11, 5, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection_Operation;", 0x2, 12, 5, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(beginOperationWithNSString:withNSString:withNSObjectArray:);
-  methods[2].selector = @selector(failOperationWithInt:withJavaLangException:);
-  methods[3].selector = @selector(endOperationWithInt:);
-  methods[4].selector = @selector(endOperationDeferLogWithInt:);
-  methods[5].selector = @selector(logOperationWithInt:withNSString:);
-  methods[6].selector = @selector(endOperationDeferLogLockedWithInt:);
-  methods[7].selector = @selector(logOperationLockedWithInt:withNSString:);
-  methods[8].selector = @selector(newOperationCookieLockedWithInt:);
-  methods[9].selector = @selector(getOperationLockedWithInt:);
-  methods[10].selector = @selector(describeCurrentOperation);
-  methods[11].selector = @selector(dumpWithAndroidUtilPrinter:withBoolean:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "MAX_RECENT_OPERATIONS", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteConnection_OperationLog_MAX_RECENT_OPERATIONS, 0x1a, -1, -1, -1, -1 },
-    { "COOKIE_GENERATION_SHIFT", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteConnection_OperationLog_COOKIE_GENERATION_SHIFT, 0x1a, -1, -1, -1, -1 },
-    { "COOKIE_INDEX_MASK", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteConnection_OperationLog_COOKIE_INDEX_MASK, 0x1a, -1, -1, -1, -1 },
-    { "mOperations_", "[LAndroidDatabaseSqliteSQLiteConnection_Operation;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mGeneration_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "beginOperation", "LNSString;LNSString;[LNSObject;", "failOperation", "ILJavaLangException;", "endOperation", "I", "endOperationDeferLog", "logOperation", "ILNSString;", "endOperationDeferLogLocked", "logOperationLocked", "newOperationCookieLocked", "getOperationLocked", "dump", "LAndroidUtilPrinter;Z", "LAndroidDatabaseSqliteSQLiteConnection;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnection_OperationLog = { "OperationLog", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1a, 12, 6, 15, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnection_OperationLog;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnection_OperationLog_init(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mOperations_, [IOSObjectArray newArrayWithLength:AndroidDatabaseSqliteSQLiteConnection_OperationLog_MAX_RECENT_OPERATIONS type:AndroidDatabaseSqliteSQLiteConnection_Operation_class_()]);
-}
-
-AndroidDatabaseSqliteSQLiteConnection_OperationLog *new_AndroidDatabaseSqliteSQLiteConnection_OperationLog_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnection_OperationLog, init)
-}
-
-AndroidDatabaseSqliteSQLiteConnection_OperationLog *create_AndroidDatabaseSqliteSQLiteConnection_OperationLog_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnection_OperationLog, init)
-}
-
-jboolean AndroidDatabaseSqliteSQLiteConnection_OperationLog_endOperationDeferLogLockedWithInt_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint cookie) {
-  AndroidDatabaseSqliteSQLiteConnection_Operation *operation = AndroidDatabaseSqliteSQLiteConnection_OperationLog_getOperationLockedWithInt_(self, cookie);
-  if (operation != nil) {
-    operation->mEndTime_ = JavaLangSystem_currentTimeMillis();
-    operation->mFinished_ = true;
-    return false;
-  }
-  return false;
-}
-
-void AndroidDatabaseSqliteSQLiteConnection_OperationLog_logOperationLockedWithInt_withNSString_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint cookie, NSString *detail) {
-  AndroidDatabaseSqliteSQLiteConnection_Operation *operation = AndroidDatabaseSqliteSQLiteConnection_OperationLog_getOperationLockedWithInt_(self, cookie);
-  JavaLangStringBuilder *msg = create_JavaLangStringBuilder_init();
-  [((AndroidDatabaseSqliteSQLiteConnection_Operation *) nil_chk(operation)) describeWithJavaLangStringBuilder:msg withBoolean:false];
-  if (detail != nil) {
-    [((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@", "])) appendWithNSString:detail];
-  }
-  AndroidUtilLog_dWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteConnection_TAG, [msg description]);
-}
-
-jint AndroidDatabaseSqliteSQLiteConnection_OperationLog_newOperationCookieLockedWithInt_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint index) {
-  jint generation = self->mGeneration_++;
-  return (JreLShift32(generation, AndroidDatabaseSqliteSQLiteConnection_OperationLog_COOKIE_GENERATION_SHIFT)) | index;
-}
-
-AndroidDatabaseSqliteSQLiteConnection_Operation *AndroidDatabaseSqliteSQLiteConnection_OperationLog_getOperationLockedWithInt_(AndroidDatabaseSqliteSQLiteConnection_OperationLog *self, jint cookie) {
-  jint index = cookie & AndroidDatabaseSqliteSQLiteConnection_OperationLog_COOKIE_INDEX_MASK;
-  AndroidDatabaseSqliteSQLiteConnection_Operation *operation = IOSObjectArray_Get(nil_chk(self->mOperations_), index);
-  return ((AndroidDatabaseSqliteSQLiteConnection_Operation *) nil_chk(operation))->mCookie_ == cookie ? operation : nil;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnection_OperationLog)
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteConnection_Operation)
-
-@implementation AndroidDatabaseSqliteSQLiteConnection_Operation
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteConnection_Operation_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)describeWithJavaLangStringBuilder:(JavaLangStringBuilder *)msg
-                              withBoolean:(jboolean)verbose {
-  [((JavaLangStringBuilder *) nil_chk(msg)) appendWithNSString:mKind_];
-  if (mFinished_) {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@" took "])) appendWithLong:mEndTime_ - mStartTime_])) appendWithNSString:@"ms"];
-  }
-  else {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@" started "])) appendWithLong:JavaLangSystem_currentTimeMillis() - mStartTime_])) appendWithNSString:@"ms ago"];
-  }
-  [((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@" - "])) appendWithNSString:AndroidDatabaseSqliteSQLiteConnection_Operation_getStatus(self)];
-  if (mSql_ != nil) {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@", sql=\""])) appendWithNSString:AndroidDatabaseSqliteSQLiteConnection_trimSqlForDisplayWithNSString_(mSql_)])) appendWithNSString:@"\""];
-  }
-  if (verbose && mBindArgs_ != nil && [mBindArgs_ size] != 0) {
-    [msg appendWithNSString:@", bindArgs=["];
-    jint count = [((JavaUtilArrayList *) nil_chk(mBindArgs_)) size];
-    for (jint i = 0; i < count; i++) {
-      id arg = [((JavaUtilArrayList *) nil_chk(mBindArgs_)) getWithInt:i];
-      if (i != 0) {
-        [msg appendWithNSString:@", "];
-      }
-      if (arg == nil) {
-        [msg appendWithNSString:@"null"];
-      }
-      else if ([arg isKindOfClass:[IOSByteArray class]]) {
-        [msg appendWithNSString:@"<byte[]>"];
-      }
-      else if ([arg isKindOfClass:[NSString class]]) {
-        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@"\""])) appendWithNSString:(NSString *) cast_chk(arg, [NSString class])])) appendWithNSString:@"\""];
-      }
-      else {
-        [msg appendWithId:arg];
-      }
-    }
-    [msg appendWithNSString:@"]"];
-  }
-  if (mException_ != nil) {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@", exception=\""])) appendWithNSString:[((JavaLangException *) nil_chk(mException_)) getMessage]])) appendWithNSString:@"\""];
-  }
-}
-
-- (NSString *)getStatus {
-  return AndroidDatabaseSqliteSQLiteConnection_Operation_getStatus(self);
-}
-
-- (NSString *)getFormattedStartTime {
-  return AndroidDatabaseSqliteSQLiteConnection_Operation_getFormattedStartTime(self);
-}
-
-- (void)dealloc {
-  RELEASE_(mKind_);
-  RELEASE_(mSql_);
-  RELEASE_(mBindArgs_);
-  RELEASE_(mException_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(describeWithJavaLangStringBuilder:withBoolean:);
-  methods[2].selector = @selector(getStatus);
-  methods[3].selector = @selector(getFormattedStartTime);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "sDateFormat", "LJavaTextSimpleDateFormat;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
-    { "mStartTime_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mEndTime_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mKind_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mSql_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mBindArgs_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1, -1, -1, 3, -1 },
-    { "mFinished_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mException_", "LJavaLangException;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mCookie_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "describe", "LJavaLangStringBuilder;Z", &AndroidDatabaseSqliteSQLiteConnection_Operation_sDateFormat, "Ljava/util/ArrayList<Ljava/lang/Object;>;", "LAndroidDatabaseSqliteSQLiteConnection;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnection_Operation = { "Operation", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1a, 4, 9, 4, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnection_Operation;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteConnection_Operation class]) {
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteConnection_Operation_sDateFormat, new_JavaTextSimpleDateFormat_initWithNSString_(@"yyyy-MM-dd HH:mm:ss.SSS"));
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteConnection_Operation)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnection_Operation_init(AndroidDatabaseSqliteSQLiteConnection_Operation *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteConnection_Operation *new_AndroidDatabaseSqliteSQLiteConnection_Operation_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnection_Operation, init)
-}
-
-AndroidDatabaseSqliteSQLiteConnection_Operation *create_AndroidDatabaseSqliteSQLiteConnection_Operation_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnection_Operation, init)
-}
-
-NSString *AndroidDatabaseSqliteSQLiteConnection_Operation_getStatus(AndroidDatabaseSqliteSQLiteConnection_Operation *self) {
-  if (!self->mFinished_) {
-    return @"running";
-  }
-  return self->mException_ != nil ? @"failed" : @"succeeded";
-}
-
-NSString *AndroidDatabaseSqliteSQLiteConnection_Operation_getFormattedStartTime(AndroidDatabaseSqliteSQLiteConnection_Operation *self) {
-  return [((JavaTextSimpleDateFormat *) nil_chk(AndroidDatabaseSqliteSQLiteConnection_Operation_sDateFormat)) formatWithJavaUtilDate:create_JavaUtilDate_initWithLong_(self->mStartTime_)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnection_Operation)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnectionPool.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnectionPool.h
deleted file mode 100644
index 2e1067a2e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnectionPool.h
+++ /dev/null
@@ -1,135 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnectionPool")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteConnectionPool
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnectionPool 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnectionPool 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteConnectionPool
-
-#if !defined (AndroidDatabaseSqliteSQLiteConnectionPool_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnectionPool || defined(INCLUDE_AndroidDatabaseSqliteSQLiteConnectionPool))
-#define AndroidDatabaseSqliteSQLiteConnectionPool_
-
-#define RESTRICT_JavaIoCloseable 1
-#define INCLUDE_JavaIoCloseable 1
-#include "java/io/Closeable.h"
-
-@class AndroidDatabaseSqliteSQLiteConnection;
-@class AndroidDatabaseSqliteSQLiteDatabaseConfiguration;
-@class JavaUtilArrayList;
-@protocol AndroidUtilPrinter;
-
-@interface AndroidDatabaseSqliteSQLiteConnectionPool : NSObject < JavaIoCloseable >
-
-#pragma mark Public
-
-- (AndroidDatabaseSqliteSQLiteConnection *)acquireConnectionWithNSString:(NSString *)sql
-                                                                 withInt:(jint)connectionFlags;
-
-- (void)close;
-
-- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList;
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose;
-
-+ (AndroidDatabaseSqliteSQLiteConnectionPool *)openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration;
-
-- (void)reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration;
-
-- (void)releaseConnectionWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection;
-
-- (jboolean)shouldYieldConnectionWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection
-                                                                   withInt:(jint)connectionFlags;
-
-- (NSString *)description;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-#pragma mark Package-Private
-
-- (void)onConnectionLeaked;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnectionPool)
-
-inline jint AndroidDatabaseSqliteSQLiteConnectionPool_get_CONNECTION_FLAG_READ_ONLY();
-#define AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_READ_ONLY 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool, CONNECTION_FLAG_READ_ONLY, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteConnectionPool_get_CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY();
-#define AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool, CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteConnectionPool_get_CONNECTION_FLAG_INTERACTIVE();
-#define AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_INTERACTIVE 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool, CONNECTION_FLAG_INTERACTIVE, jint)
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConnectionPool *AndroidDatabaseSqliteSQLiteConnectionPool_openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnectionPool)
-
-#endif
-
-#if !defined (AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnectionPool || defined(INCLUDE_AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus))
-#define AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_Enum) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_Enum_NORMAL = 0,
-  AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_Enum_RECONFIGURE = 1,
-  AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_Enum_DISCARD = 2,
-};
-
-@interface AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values_[];
-
-inline AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_get_NORMAL();
-J2OBJC_ENUM_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, NORMAL)
-
-inline AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_get_RECONFIGURE();
-J2OBJC_ENUM_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, RECONFIGURE)
-
-inline AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_get_DISCARD();
-J2OBJC_ENUM_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, DISCARD)
-
-FOUNDATION_EXPORT IOSObjectArray *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values();
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConnectionPool")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnectionPool.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnectionPool.m
deleted file mode 100644
index 98273884b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConnectionPool.m
+++ /dev/null
@@ -1,1221 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteConnection.h"
-#include "AndroidDatabaseSqliteSQLiteConnectionPool.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h"
-#include "AndroidDatabaseSqliteSQLiteGlobal.h"
-#include "AndroidUtilPrefixPrinter.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/os/SystemClock.h"
-#include "android/util/Log.h"
-#include "android/util/Printer.h"
-#include "dalvik/system/CloseGuard.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/Thread.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/WeakHashMap.h"
-#include "java/util/concurrent/atomic/AtomicBoolean.h"
-#include "java/util/concurrent/locks/LockSupport.h"
-
-@class AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;
-
-@interface AndroidDatabaseSqliteSQLiteConnectionPool () {
- @public
-  DalvikSystemCloseGuard *mCloseGuard_;
-  id mLock_;
-  JavaUtilConcurrentAtomicAtomicBoolean *mConnectionLeaked_;
-  AndroidDatabaseSqliteSQLiteDatabaseConfiguration *mConfiguration_;
-  jint mMaxConnectionPoolSize_;
-  jboolean mIsOpen_;
-  jint mNextConnectionId_;
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *mConnectionWaiterPool_;
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *mConnectionWaiterQueue_;
-  JavaUtilArrayList *mAvailableNonPrimaryConnections_;
-  AndroidDatabaseSqliteSQLiteConnection *mAvailablePrimaryConnection_;
-  JavaUtilWeakHashMap *mAcquiredConnections_;
-}
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration;
-
-- (void)open;
-
-- (void)disposeWithBoolean:(jboolean)finalized;
-
-- (jboolean)recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection
-      withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus:(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *)status;
-
-- (AndroidDatabaseSqliteSQLiteConnection *)openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
-                                                                                                        withBoolean:(jboolean)primaryConnection;
-
-- (void)closeAvailableConnectionsAndLogExceptionsLocked;
-
-- (void)closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked;
-
-- (void)closeExcessConnectionsAndLogExceptionsLocked;
-
-- (void)closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection;
-
-- (void)discardAcquiredConnectionsLocked;
-
-- (void)reconfigureAllConnectionsLocked;
-
-- (void)markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus:(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *)status;
-
-- (AndroidDatabaseSqliteSQLiteConnection *)waitForConnectionWithNSString:(NSString *)sql
-                                                                 withInt:(jint)connectionFlags;
-
-- (void)logConnectionPoolBusyLockedWithLong:(jlong)waitMillis
-                                    withInt:(jint)connectionFlags;
-
-- (void)wakeConnectionWaitersLocked;
-
-- (AndroidDatabaseSqliteSQLiteConnection *)tryAcquirePrimaryConnectionLockedWithInt:(jint)connectionFlags;
-
-- (AndroidDatabaseSqliteSQLiteConnection *)tryAcquireNonPrimaryConnectionLockedWithNSString:(NSString *)sql
-                                                                                    withInt:(jint)connectionFlags;
-
-- (void)finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection
-                                                                       withInt:(jint)connectionFlags;
-
-- (jboolean)isSessionBlockingImportantConnectionWaitersLockedWithBoolean:(jboolean)holdingPrimaryConnection
-                                                                 withInt:(jint)connectionFlags;
-
-+ (jint)getPriorityWithInt:(jint)connectionFlags;
-
-- (void)setMaxConnectionPoolSizeLocked;
-
-- (void)throwIfClosedLocked;
-
-- (AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)obtainConnectionWaiterLockedWithJavaLangThread:(JavaLangThread *)thread
-                                                                                                      withLong:(jlong)startTime
-                                                                                                       withInt:(jint)priority
-                                                                                                   withBoolean:(jboolean)wantPrimaryConnection
-                                                                                                  withNSString:(NSString *)sql
-                                                                                                       withInt:(jint)connectionFlags;
-
-- (void)recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter:(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)waiter;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mCloseGuard_, DalvikSystemCloseGuard *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mLock_, id)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mConnectionLeaked_, JavaUtilConcurrentAtomicAtomicBoolean *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mConfiguration_, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mConnectionWaiterPool_, AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mConnectionWaiterQueue_, AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mAvailableNonPrimaryConnections_, JavaUtilArrayList *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mAvailablePrimaryConnection_, AndroidDatabaseSqliteSQLiteConnection *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool, mAcquiredConnections_, JavaUtilWeakHashMap *)
-
-inline NSString *AndroidDatabaseSqliteSQLiteConnectionPool_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteConnectionPool_TAG = @"SQLiteConnectionPool";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteConnectionPool, TAG, NSString *)
-
-inline jlong AndroidDatabaseSqliteSQLiteConnectionPool_get_CONNECTION_POOL_BUSY_MILLIS();
-#define AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_POOL_BUSY_MILLIS 30000LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteConnectionPool, CONNECTION_POOL_BUSY_MILLIS, jlong)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnectionPool *new_AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnectionPool *create_AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_open(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_disposeWithBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jboolean finalized);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnection *connection, AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *status);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jboolean primaryConnection);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableConnectionsAndLogExceptionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_closeExcessConnectionsAndLogExceptionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnection *connection);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_discardAcquiredConnectionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_reconfigureAllConnectionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *status);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_waitForConnectionWithNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, NSString *sql, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_logConnectionPoolBusyLockedWithLong_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jlong waitMillis, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquirePrimaryConnectionLockedWithInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jint connectionFlags);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquireNonPrimaryConnectionLockedWithNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, NSString *sql, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnection *connection, jint connectionFlags);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteConnectionPool_isSessionBlockingImportantConnectionWaitersLockedWithBoolean_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jboolean holdingPrimaryConnection, jint connectionFlags);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteConnectionPool_getPriorityWithInt_(jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_setMaxConnectionPoolSizeLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *AndroidDatabaseSqliteSQLiteConnectionPool_obtainConnectionWaiterLockedWithJavaLangThread_withLong_withInt_withBoolean_withNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, JavaLangThread *thread, jlong startTime, jint priority, jboolean wantPrimaryConnection, NSString *sql, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_initWithNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *self, NSString *__name, jint __ordinal);
-
-@interface AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter : NSObject {
- @public
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *mNext_;
-  JavaLangThread *mThread_;
-  jlong mStartTime_;
-  jint mPriority_;
-  jboolean mWantPrimaryConnection_;
-  NSString *mSql_;
-  jint mConnectionFlags_;
-  AndroidDatabaseSqliteSQLiteConnection *mAssignedConnection_;
-  JavaLangRuntimeException *mException_;
-  jint mNonce_;
-}
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, mNext_, AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, mThread_, JavaLangThread *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, mSql_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, mAssignedConnection_, AndroidDatabaseSqliteSQLiteConnection *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, mException_, JavaLangRuntimeException *)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *new_AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *create_AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter)
-
-@implementation AndroidDatabaseSqliteSQLiteConnectionPool
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration {
-  AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(self, configuration);
-  return self;
-}
-
-- (void)java_finalize {
-  @try {
-    AndroidDatabaseSqliteSQLiteConnectionPool_disposeWithBoolean_(self, true);
-  }
-  @finally {
-    [super java_finalize];
-  }
-}
-
-+ (AndroidDatabaseSqliteSQLiteConnectionPool *)openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(configuration);
-}
-
-- (void)open {
-  AndroidDatabaseSqliteSQLiteConnectionPool_open(self);
-}
-
-- (void)close {
-  AndroidDatabaseSqliteSQLiteConnectionPool_disposeWithBoolean_(self, false);
-}
-
-- (void)disposeWithBoolean:(jboolean)finalized {
-  AndroidDatabaseSqliteSQLiteConnectionPool_disposeWithBoolean_(self, finalized);
-}
-
-- (void)reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration {
-  if (configuration == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"configuration must not be null.");
-  }
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(self);
-    jboolean walModeChanged = ((configuration->openFlags_ ^ ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->openFlags_) & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) != 0;
-    if (walModeChanged) {
-      if (![((JavaUtilWeakHashMap *) nil_chk(mAcquiredConnections_)) isEmpty]) {
-        @throw create_JavaLangIllegalStateException_initWithNSString_(@"Write Ahead Logging (WAL) mode cannot be enabled or disabled while there are transactions in progress.  Finish all transactions and release all active database connections first.");
-      }
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(self);
-      JreAssert(([((JavaUtilArrayList *) nil_chk(mAvailableNonPrimaryConnections_)) isEmpty]), (@"android/database/sqlite/SQLiteConnectionPool.java:277 condition failed: assert mAvailableNonPrimaryConnections.isEmpty();"));
-    }
-    jboolean foreignKeyModeChanged = configuration->foreignKeyConstraintsEnabled_ != mConfiguration_->foreignKeyConstraintsEnabled_;
-    if (foreignKeyModeChanged) {
-      if (![((JavaUtilWeakHashMap *) nil_chk(mAcquiredConnections_)) isEmpty]) {
-        @throw create_JavaLangIllegalStateException_initWithNSString_(@"Foreign Key Constraints cannot be enabled or disabled while there are transactions in progress.  Finish all transactions and release all active database connections first.");
-      }
-    }
-    if (mConfiguration_->openFlags_ != configuration->openFlags_) {
-      if (walModeChanged) {
-        AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableConnectionsAndLogExceptionsLocked(self);
-      }
-      AndroidDatabaseSqliteSQLiteConnection *newPrimaryConnection = AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(self, configuration, true);
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableConnectionsAndLogExceptionsLocked(self);
-      AndroidDatabaseSqliteSQLiteConnectionPool_discardAcquiredConnectionsLocked(self);
-      JreStrongAssign(&mAvailablePrimaryConnection_, newPrimaryConnection);
-      [mConfiguration_ updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:configuration];
-      AndroidDatabaseSqliteSQLiteConnectionPool_setMaxConnectionPoolSizeLocked(self);
-    }
-    else {
-      [mConfiguration_ updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:configuration];
-      AndroidDatabaseSqliteSQLiteConnectionPool_setMaxConnectionPoolSizeLocked(self);
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeExcessConnectionsAndLogExceptionsLocked(self);
-      AndroidDatabaseSqliteSQLiteConnectionPool_reconfigureAllConnectionsLocked(self);
-    }
-    AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(self);
-  }
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection *)acquireConnectionWithNSString:(NSString *)sql
-                                                                 withInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_waitForConnectionWithNSString_withInt_(self, sql, connectionFlags);
-}
-
-- (void)releaseConnectionWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection {
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *status = [((JavaUtilWeakHashMap *) nil_chk(mAcquiredConnections_)) removeWithId:connection];
-    if (status == nil) {
-      @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this operation because the specified connection was not acquired from this pool or has already been released.");
-    }
-    if (!mIsOpen_) {
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-    }
-    else if ([((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) isPrimaryConnection]) {
-      if (AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(self, connection, status)) {
-        JreAssert((mAvailablePrimaryConnection_ == nil), (@"android/database/sqlite/SQLiteConnectionPool.java:373 condition failed: assert mAvailablePrimaryConnection == null;"));
-        JreStrongAssign(&mAvailablePrimaryConnection_, connection);
-      }
-      AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(self);
-    }
-    else if ([((JavaUtilArrayList *) nil_chk(mAvailableNonPrimaryConnections_)) size] >= mMaxConnectionPoolSize_ - 1) {
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-    }
-    else {
-      if (AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(self, connection, status)) {
-        [mAvailableNonPrimaryConnections_ addWithId:connection];
-      }
-      AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(self);
-    }
-  }
-}
-
-- (jboolean)recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection
-      withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus:(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *)status {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(self, connection, status);
-}
-
-- (jboolean)shouldYieldConnectionWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection
-                                                                   withInt:(jint)connectionFlags {
-  @synchronized(mLock_) {
-    if (![((JavaUtilWeakHashMap *) nil_chk(mAcquiredConnections_)) containsKeyWithId:connection]) {
-      @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this operation because the specified connection was not acquired from this pool or has already been released.");
-    }
-    if (!mIsOpen_) {
-      return false;
-    }
-    return AndroidDatabaseSqliteSQLiteConnectionPool_isSessionBlockingImportantConnectionWaitersLockedWithBoolean_withInt_(self, [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) isPrimaryConnection], connectionFlags);
-  }
-}
-
-- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList {
-  @synchronized(mLock_) {
-    if (mAvailablePrimaryConnection_ != nil) {
-      [mAvailablePrimaryConnection_ collectDbStatsWithJavaUtilArrayList:dbStatsList];
-    }
-    for (AndroidDatabaseSqliteSQLiteConnection * __strong connection in nil_chk(mAvailableNonPrimaryConnections_)) {
-      [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) collectDbStatsWithJavaUtilArrayList:dbStatsList];
-    }
-    for (AndroidDatabaseSqliteSQLiteConnection * __strong connection in nil_chk([((JavaUtilWeakHashMap *) nil_chk(mAcquiredConnections_)) keySet])) {
-      [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) collectDbStatsUnsafeWithJavaUtilArrayList:dbStatsList];
-    }
-  }
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection *)openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)configuration
-                                                                                                        withBoolean:(jboolean)primaryConnection {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(self, configuration, primaryConnection);
-}
-
-- (void)onConnectionLeaked {
-  AndroidUtilLog_wWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$$$", @"A SQLiteConnection object for database '", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->label_, @"' was leaked!  Please fix your application to end transactions in progress properly and to close the database when it is no longer needed."));
-  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(mConnectionLeaked_)) setWithBoolean:true];
-}
-
-- (void)closeAvailableConnectionsAndLogExceptionsLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableConnectionsAndLogExceptionsLocked(self);
-}
-
-- (void)closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(self);
-}
-
-- (void)closeExcessConnectionsAndLogExceptionsLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_closeExcessConnectionsAndLogExceptionsLocked(self);
-}
-
-- (void)closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection {
-  AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-}
-
-- (void)discardAcquiredConnectionsLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_discardAcquiredConnectionsLocked(self);
-}
-
-- (void)reconfigureAllConnectionsLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_reconfigureAllConnectionsLocked(self);
-}
-
-- (void)markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus:(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *)status {
-  AndroidDatabaseSqliteSQLiteConnectionPool_markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(self, status);
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection *)waitForConnectionWithNSString:(NSString *)sql
-                                                                 withInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_waitForConnectionWithNSString_withInt_(self, sql, connectionFlags);
-}
-
-- (void)logConnectionPoolBusyLockedWithLong:(jlong)waitMillis
-                                    withInt:(jint)connectionFlags {
-  AndroidDatabaseSqliteSQLiteConnectionPool_logConnectionPoolBusyLockedWithLong_withInt_(self, waitMillis, connectionFlags);
-}
-
-- (void)wakeConnectionWaitersLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(self);
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection *)tryAcquirePrimaryConnectionLockedWithInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquirePrimaryConnectionLockedWithInt_(self, connectionFlags);
-}
-
-- (AndroidDatabaseSqliteSQLiteConnection *)tryAcquireNonPrimaryConnectionLockedWithNSString:(NSString *)sql
-                                                                                    withInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquireNonPrimaryConnectionLockedWithNSString_withInt_(self, sql, connectionFlags);
-}
-
-- (void)finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection:(AndroidDatabaseSqliteSQLiteConnection *)connection
-                                                                       withInt:(jint)connectionFlags {
-  AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, connection, connectionFlags);
-}
-
-- (jboolean)isSessionBlockingImportantConnectionWaitersLockedWithBoolean:(jboolean)holdingPrimaryConnection
-                                                                 withInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_isSessionBlockingImportantConnectionWaitersLockedWithBoolean_withInt_(self, holdingPrimaryConnection, connectionFlags);
-}
-
-+ (jint)getPriorityWithInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_getPriorityWithInt_(connectionFlags);
-}
-
-- (void)setMaxConnectionPoolSizeLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_setMaxConnectionPoolSizeLocked(self);
-}
-
-- (void)throwIfClosedLocked {
-  AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(self);
-}
-
-- (AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)obtainConnectionWaiterLockedWithJavaLangThread:(JavaLangThread *)thread
-                                                                                                      withLong:(jlong)startTime
-                                                                                                       withInt:(jint)priority
-                                                                                                   withBoolean:(jboolean)wantPrimaryConnection
-                                                                                                  withNSString:(NSString *)sql
-                                                                                                       withInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_obtainConnectionWaiterLockedWithJavaLangThread_withLong_withInt_withBoolean_withNSString_withInt_(self, thread, startTime, priority, wantPrimaryConnection, sql, connectionFlags);
-}
-
-- (void)recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter:(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *)waiter {
-  AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_(self, waiter);
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose {
-  id<AndroidUtilPrinter> indentedPrinter = AndroidUtilPrefixPrinter_createWithAndroidUtilPrinter_withNSString_(printer, @"    ");
-  @synchronized(mLock_) {
-    [((id<AndroidUtilPrinter>) nil_chk(printer)) printlnWithNSString:JreStrcat("$$C", @"Connection pool for ", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->path_, ':')];
-    [printer printlnWithNSString:JreStrcat("$Z", @"  Open: ", mIsOpen_)];
-    [printer printlnWithNSString:JreStrcat("$I", @"  Max connections: ", mMaxConnectionPoolSize_)];
-    [printer printlnWithNSString:@"  Available primary connection:"];
-    if (mAvailablePrimaryConnection_ != nil) {
-      [mAvailablePrimaryConnection_ dumpWithAndroidUtilPrinter:indentedPrinter withBoolean:verbose];
-    }
-    else {
-      [((id<AndroidUtilPrinter>) nil_chk(indentedPrinter)) printlnWithNSString:@"<none>"];
-    }
-    [printer printlnWithNSString:@"  Available non-primary connections:"];
-    if (![((JavaUtilArrayList *) nil_chk(mAvailableNonPrimaryConnections_)) isEmpty]) {
-      jint count = [mAvailableNonPrimaryConnections_ size];
-      for (jint i = 0; i < count; i++) {
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk([mAvailableNonPrimaryConnections_ getWithInt:i])) dumpWithAndroidUtilPrinter:indentedPrinter withBoolean:verbose];
-      }
-    }
-    else {
-      [((id<AndroidUtilPrinter>) nil_chk(indentedPrinter)) printlnWithNSString:@"<none>"];
-    }
-    [printer printlnWithNSString:@"  Acquired connections:"];
-    if (![((JavaUtilWeakHashMap *) nil_chk(mAcquiredConnections_)) isEmpty]) {
-      for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([mAcquiredConnections_ entrySet])) {
-        AndroidDatabaseSqliteSQLiteConnection *connection = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) dumpUnsafeWithAndroidUtilPrinter:indentedPrinter withBoolean:verbose];
-        [((id<AndroidUtilPrinter>) nil_chk(indentedPrinter)) printlnWithNSString:JreStrcat("$@", @"  Status: ", [entry_ getValue])];
-      }
-    }
-    else {
-      [((id<AndroidUtilPrinter>) nil_chk(indentedPrinter)) printlnWithNSString:@"<none>"];
-    }
-    [printer printlnWithNSString:@"  Connection waiters:"];
-    if (mConnectionWaiterQueue_ != nil) {
-      jint i = 0;
-      jlong now = AndroidOsSystemClock_uptimeMillis();
-      for (AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter = mConnectionWaiterQueue_; waiter != nil; waiter = waiter->mNext_, i++) {
-        [((id<AndroidUtilPrinter>) nil_chk(indentedPrinter)) printlnWithNSString:JreStrcat("I$F$@$I$$C", i, @": waited for ", ((now - waiter->mStartTime_) * 0.001f), @" ms - thread=", waiter->mThread_, @", priority=", waiter->mPriority_, @", sql='", waiter->mSql_, '\'')];
-      }
-    }
-    else {
-      [((id<AndroidUtilPrinter>) nil_chk(indentedPrinter)) printlnWithNSString:@"<none>"];
-    }
-  }
-}
-
-- (NSString *)description {
-  return JreStrcat("$$", @"SQLiteConnectionPool: ", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfiguration_))->path_);
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseSqliteSQLiteConnectionPool class]);
-  RELEASE_(mCloseGuard_);
-  RELEASE_(mLock_);
-  RELEASE_(mConnectionLeaked_);
-  RELEASE_(mConfiguration_);
-  RELEASE_(mConnectionWaiterPool_);
-  RELEASE_(mConnectionWaiterQueue_);
-  RELEASE_(mAvailableNonPrimaryConnections_);
-  RELEASE_(mAvailablePrimaryConnection_);
-  RELEASE_(mAcquiredConnections_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 1, -1, 2, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnectionPool;", 0x9, 3, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 0, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection;", 0x1, 7, 8, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, 11, 12, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 16, -1, 17, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection;", 0x2, 18, 19, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 20, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 21, 22, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection;", 0x2, 23, 8, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 24, 25, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection;", 0x2, 26, 27, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnection;", 0x2, 28, 8, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 29, 14, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, 30, 31, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 32, 27, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;", 0x2, 33, 34, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 35, 36, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 37, 38, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 39, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:);
-  methods[1].selector = @selector(java_finalize);
-  methods[2].selector = @selector(openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:);
-  methods[3].selector = @selector(open);
-  methods[4].selector = @selector(close);
-  methods[5].selector = @selector(disposeWithBoolean:);
-  methods[6].selector = @selector(reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:);
-  methods[7].selector = @selector(acquireConnectionWithNSString:withInt:);
-  methods[8].selector = @selector(releaseConnectionWithAndroidDatabaseSqliteSQLiteConnection:);
-  methods[9].selector = @selector(recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection:withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus:);
-  methods[10].selector = @selector(shouldYieldConnectionWithAndroidDatabaseSqliteSQLiteConnection:withInt:);
-  methods[11].selector = @selector(collectDbStatsWithJavaUtilArrayList:);
-  methods[12].selector = @selector(openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:withBoolean:);
-  methods[13].selector = @selector(onConnectionLeaked);
-  methods[14].selector = @selector(closeAvailableConnectionsAndLogExceptionsLocked);
-  methods[15].selector = @selector(closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked);
-  methods[16].selector = @selector(closeExcessConnectionsAndLogExceptionsLocked);
-  methods[17].selector = @selector(closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection:);
-  methods[18].selector = @selector(discardAcquiredConnectionsLocked);
-  methods[19].selector = @selector(reconfigureAllConnectionsLocked);
-  methods[20].selector = @selector(markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus:);
-  methods[21].selector = @selector(waitForConnectionWithNSString:withInt:);
-  methods[22].selector = @selector(logConnectionPoolBusyLockedWithLong:withInt:);
-  methods[23].selector = @selector(wakeConnectionWaitersLocked);
-  methods[24].selector = @selector(tryAcquirePrimaryConnectionLockedWithInt:);
-  methods[25].selector = @selector(tryAcquireNonPrimaryConnectionLockedWithNSString:withInt:);
-  methods[26].selector = @selector(finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection:withInt:);
-  methods[27].selector = @selector(isSessionBlockingImportantConnectionWaitersLockedWithBoolean:withInt:);
-  methods[28].selector = @selector(getPriorityWithInt:);
-  methods[29].selector = @selector(setMaxConnectionPoolSizeLocked);
-  methods[30].selector = @selector(throwIfClosedLocked);
-  methods[31].selector = @selector(obtainConnectionWaiterLockedWithJavaLangThread:withLong:withInt:withBoolean:withNSString:withInt:);
-  methods[32].selector = @selector(recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter:);
-  methods[33].selector = @selector(dumpWithAndroidUtilPrinter:withBoolean:);
-  methods[34].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
-    { "CONNECTION_POOL_BUSY_MILLIS", "J", .constantValue.asLong = AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_POOL_BUSY_MILLIS, 0x1a, -1, -1, -1, -1 },
-    { "mCloseGuard_", "LDalvikSystemCloseGuard;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConnectionLeaked_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConfiguration_", "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mMaxConnectionPoolSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mIsOpen_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mNextConnectionId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mConnectionWaiterPool_", "LAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mConnectionWaiterQueue_", "LAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mAvailableNonPrimaryConnections_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, 41, -1 },
-    { "mAvailablePrimaryConnection_", "LAndroidDatabaseSqliteSQLiteConnection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mAcquiredConnections_", "LJavaUtilWeakHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 42, -1 },
-    { "CONNECTION_FLAG_READ_ONLY", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_READ_ONLY, 0x19, -1, -1, -1, -1 },
-    { "CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY, 0x19, -1, -1, -1, -1 },
-    { "CONNECTION_FLAG_INTERACTIVE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_INTERACTIVE, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;", "finalize", "LNSException;", "open", "dispose", "Z", "reconfigure", "acquireConnection", "LNSString;I", "releaseConnection", "LAndroidDatabaseSqliteSQLiteConnection;", "recycleConnectionLocked", "LAndroidDatabaseSqliteSQLiteConnection;LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", "shouldYieldConnection", "LAndroidDatabaseSqliteSQLiteConnection;I", "collectDbStats", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteDebug$DbStats;>;)V", "openConnectionLocked", "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;Z", "closeConnectionAndLogExceptionsLocked", "markAcquiredConnectionsLocked", "LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", "waitForConnection", "logConnectionPoolBusyLocked", "JI", "tryAcquirePrimaryConnectionLocked", "I", "tryAcquireNonPrimaryConnectionLocked", "finishAcquireConnectionLocked", "isSessionBlockingImportantConnectionWaitersLocked", "ZI", "getPriority", "obtainConnectionWaiterLocked", "LJavaLangThread;JIZLNSString;I", "recycleConnectionWaiterLocked", "LAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;", "dump", "LAndroidUtilPrinter;Z", "toString", &AndroidDatabaseSqliteSQLiteConnectionPool_TAG, "Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteConnection;>;", "Ljava/util/WeakHashMap<Landroid/database/sqlite/SQLiteConnection;Landroid/database/sqlite/SQLiteConnectionPool$AcquiredConnectionStatus;>;", "LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;LAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnectionPool = { "SQLiteConnectionPool", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 35, 17, -1, 43, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnectionPool;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mCloseGuard_, DalvikSystemCloseGuard_get());
-  JreStrongAssignAndConsume(&self->mLock_, new_NSObject_init());
-  JreStrongAssignAndConsume(&self->mConnectionLeaked_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
-  JreStrongAssignAndConsume(&self->mAvailableNonPrimaryConnections_, new_JavaUtilArrayList_init());
-  JreStrongAssignAndConsume(&self->mAcquiredConnections_, new_JavaUtilWeakHashMap_init());
-  JreStrongAssignAndConsume(&self->mConfiguration_, new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(configuration));
-  AndroidDatabaseSqliteSQLiteConnectionPool_setMaxConnectionPoolSizeLocked(self);
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool *new_AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnectionPool, initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_, configuration)
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool *create_AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnectionPool, initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_, configuration)
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool *AndroidDatabaseSqliteSQLiteConnectionPool_openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_initialize();
-  if (configuration == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"configuration must not be null.");
-  }
-  AndroidDatabaseSqliteSQLiteConnectionPool *pool = create_AndroidDatabaseSqliteSQLiteConnectionPool_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(configuration);
-  AndroidDatabaseSqliteSQLiteConnectionPool_open(pool);
-  return pool;
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_open(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  JreStrongAssign(&self->mAvailablePrimaryConnection_, AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(self, self->mConfiguration_, true));
-  self->mIsOpen_ = true;
-  [((DalvikSystemCloseGuard *) nil_chk(self->mCloseGuard_)) openWithNSString:@"close"];
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_disposeWithBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jboolean finalized) {
-  if (self->mCloseGuard_ != nil) {
-    if (finalized) {
-      [self->mCloseGuard_ warnIfOpen];
-    }
-    [self->mCloseGuard_ close];
-  }
-  if (!finalized) {
-    @synchronized(self->mLock_) {
-      AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(self);
-      self->mIsOpen_ = false;
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableConnectionsAndLogExceptionsLocked(self);
-      jint pendingCount = [((JavaUtilWeakHashMap *) nil_chk(self->mAcquiredConnections_)) size];
-      if (pendingCount != 0) {
-        AndroidUtilLog_iWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$$$I$", @"The connection pool for ", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->label_, @" has been closed but there are still ", pendingCount, @" connections in use.  They will be closed as they are released back to the pool."));
-      }
-      AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(self);
-    }
-  }
-}
-
-jboolean AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnection *connection, AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *status) {
-  if (status == JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, RECONFIGURE)) {
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:self->mConfiguration_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$@", @"Failed to reconfigure released connection, closing it: ", connection), ex);
-      status = JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, DISCARD);
-    }
-  }
-  if (status == JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, DISCARD)) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-    return false;
-  }
-  return true;
-}
-
-AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *configuration, jboolean primaryConnection) {
-  jint connectionId = self->mNextConnectionId_++;
-  return AndroidDatabaseSqliteSQLiteConnection_openWithAndroidDatabaseSqliteSQLiteConnectionPool_withAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withInt_withBoolean_(self, configuration, connectionId, primaryConnection);
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableConnectionsAndLogExceptionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(self);
-  if (self->mAvailablePrimaryConnection_ != nil) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, self->mAvailablePrimaryConnection_);
-    JreStrongAssign(&self->mAvailablePrimaryConnection_, nil);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  jint count = [((JavaUtilArrayList *) nil_chk(self->mAvailableNonPrimaryConnections_)) size];
-  for (jint i = 0; i < count; i++) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, [self->mAvailableNonPrimaryConnections_ getWithInt:i]);
-  }
-  [self->mAvailableNonPrimaryConnections_ clear];
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_closeExcessConnectionsAndLogExceptionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  jint availableCount = [((JavaUtilArrayList *) nil_chk(self->mAvailableNonPrimaryConnections_)) size];
-  while (availableCount-- > self->mMaxConnectionPoolSize_ - 1) {
-    AndroidDatabaseSqliteSQLiteConnection *connection = [self->mAvailableNonPrimaryConnections_ removeWithInt:availableCount];
-    AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnection *connection) {
-  @try {
-    [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) close];
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$@", @"Failed to close connection, its fate is now in the hands of the merciful GC: ", connection), ex);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_discardAcquiredConnectionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(self, JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, DISCARD));
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_reconfigureAllConnectionsLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  if (self->mAvailablePrimaryConnection_ != nil) {
-    @try {
-      [self->mAvailablePrimaryConnection_ reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:self->mConfiguration_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$@", @"Failed to reconfigure available primary connection, closing it: ", self->mAvailablePrimaryConnection_), ex);
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, self->mAvailablePrimaryConnection_);
-      JreStrongAssign(&self->mAvailablePrimaryConnection_, nil);
-    }
-  }
-  jint count = [((JavaUtilArrayList *) nil_chk(self->mAvailableNonPrimaryConnections_)) size];
-  for (jint i = 0; i < count; i++) {
-    AndroidDatabaseSqliteSQLiteConnection *connection = [self->mAvailableNonPrimaryConnections_ getWithInt:i];
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:self->mConfiguration_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$@", @"Failed to reconfigure available non-primary connection, closing it: ", connection), ex);
-      AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-      [self->mAvailableNonPrimaryConnections_ removeWithInt:i--];
-      count -= 1;
-    }
-  }
-  AndroidDatabaseSqliteSQLiteConnectionPool_markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(self, JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, RECONFIGURE));
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_markAcquiredConnectionsLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *status) {
-  if (![((JavaUtilWeakHashMap *) nil_chk(self->mAcquiredConnections_)) isEmpty]) {
-    JavaUtilArrayList *keysToUpdate = create_JavaUtilArrayList_initWithInt_([self->mAcquiredConnections_ size]);
-    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([self->mAcquiredConnections_ entrySet])) {
-      AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *oldStatus = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
-      if (status != oldStatus && oldStatus != JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, DISCARD)) {
-        [keysToUpdate addWithId:[entry_ getKey]];
-      }
-    }
-    jint updateCount = [keysToUpdate size];
-    for (jint i = 0; i < updateCount; i++) {
-      [self->mAcquiredConnections_ putWithId:[keysToUpdate getWithInt:i] withId:status];
-    }
-  }
-}
-
-AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_waitForConnectionWithNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, NSString *sql, jint connectionFlags) {
-  jboolean wantPrimaryConnection = (connectionFlags & AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY) != 0;
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter;
-  jint nonce;
-  @synchronized(self->mLock_) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(self);
-    AndroidDatabaseSqliteSQLiteConnection *connection = nil;
-    if (!wantPrimaryConnection) {
-      connection = AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquireNonPrimaryConnectionLockedWithNSString_withInt_(self, sql, connectionFlags);
-    }
-    if (connection == nil) {
-      connection = AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquirePrimaryConnectionLockedWithInt_(self, connectionFlags);
-    }
-    if (connection != nil) {
-      return connection;
-    }
-    jint priority = AndroidDatabaseSqliteSQLiteConnectionPool_getPriorityWithInt_(connectionFlags);
-    jlong startTime = AndroidOsSystemClock_uptimeMillis();
-    waiter = AndroidDatabaseSqliteSQLiteConnectionPool_obtainConnectionWaiterLockedWithJavaLangThread_withLong_withInt_withBoolean_withNSString_withInt_(self, JavaLangThread_currentThread(), startTime, priority, wantPrimaryConnection, sql, connectionFlags);
-    AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *predecessor = nil;
-    AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *successor = self->mConnectionWaiterQueue_;
-    while (successor != nil) {
-      if (priority > successor->mPriority_) {
-        JreStrongAssign(&((AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *) nil_chk(waiter))->mNext_, successor);
-        break;
-      }
-      predecessor = successor;
-      successor = successor->mNext_;
-    }
-    if (predecessor != nil) {
-      JreStrongAssign(&predecessor->mNext_, waiter);
-    }
-    else {
-      JreStrongAssign(&self->mConnectionWaiterQueue_, waiter);
-    }
-    nonce = ((AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *) nil_chk(waiter))->mNonce_;
-  }
-  @try {
-    jlong busyTimeoutMillis = AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_POOL_BUSY_MILLIS;
-    jlong nextBusyTimeoutTime = waiter->mStartTime_ + busyTimeoutMillis;
-    for (; ; ) {
-      if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(self->mConnectionLeaked_)) compareAndSetWithBoolean:true withBoolean:false]) {
-        @synchronized(self->mLock_) {
-          AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(self);
-        }
-      }
-      JavaUtilConcurrentLocksLockSupport_parkNanosWithId_withLong_(self, busyTimeoutMillis * 1000000LL);
-      JavaLangThread_interrupted();
-      @synchronized(self->mLock_) {
-        AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(self);
-        AndroidDatabaseSqliteSQLiteConnection *connection = waiter->mAssignedConnection_;
-        JavaLangRuntimeException *ex = waiter->mException_;
-        if (connection != nil || ex != nil) {
-          AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_(self, waiter);
-          if (connection != nil) {
-            return connection;
-          }
-          @throw ex;
-        }
-        jlong now = AndroidOsSystemClock_uptimeMillis();
-        if (now < nextBusyTimeoutTime) {
-          busyTimeoutMillis = now - nextBusyTimeoutTime;
-        }
-        else {
-          AndroidDatabaseSqliteSQLiteConnectionPool_logConnectionPoolBusyLockedWithLong_withInt_(self, now - waiter->mStartTime_, connectionFlags);
-          busyTimeoutMillis = AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_POOL_BUSY_MILLIS;
-          nextBusyTimeoutTime = now + busyTimeoutMillis;
-        }
-      }
-    }
-  }
-  @finally {
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_logConnectionPoolBusyLockedWithLong_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jlong waitMillis, jint connectionFlags) {
-  JavaLangThread *thread = JavaLangThread_currentThread();
-  JavaLangStringBuilder *msg = create_JavaLangStringBuilder_init();
-  [((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@"The connection pool for database '"])) appendWithNSString:((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->label_];
-  [msg appendWithNSString:@"' has been unable to grant a connection to thread "];
-  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithLong:[((JavaLangThread *) nil_chk(thread)) getId]])) appendWithNSString:@" ("])) appendWithNSString:[thread getName]])) appendWithNSString:@") "];
-  [((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@"with flags 0x"])) appendWithNSString:JavaLangInteger_toHexStringWithInt_(connectionFlags)];
-  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@" for "])) appendWithFloat:waitMillis * 0.001f])) appendWithNSString:@" seconds.\n"];
-  JavaUtilArrayList *requests = create_JavaUtilArrayList_init();
-  jint activeConnections = 0;
-  jint idleConnections = 0;
-  if (![((JavaUtilWeakHashMap *) nil_chk(self->mAcquiredConnections_)) isEmpty]) {
-    for (AndroidDatabaseSqliteSQLiteConnection * __strong connection in nil_chk([self->mAcquiredConnections_ keySet])) {
-      NSString *description_ = [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) describeCurrentOperationUnsafe];
-      if (description_ != nil) {
-        [requests addWithId:description_];
-        activeConnections += 1;
-      }
-      else {
-        idleConnections += 1;
-      }
-    }
-  }
-  jint availableConnections = [((JavaUtilArrayList *) nil_chk(self->mAvailableNonPrimaryConnections_)) size];
-  if (self->mAvailablePrimaryConnection_ != nil) {
-    availableConnections += 1;
-  }
-  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@"Connections: "])) appendWithInt:activeConnections])) appendWithNSString:@" active, "];
-  [((JavaLangStringBuilder *) nil_chk([msg appendWithInt:idleConnections])) appendWithNSString:@" idle, "];
-  [((JavaLangStringBuilder *) nil_chk([msg appendWithInt:availableConnections])) appendWithNSString:@" available.\n"];
-  if (![requests isEmpty]) {
-    [msg appendWithNSString:@"\nRequests in progress:\n"];
-    for (NSString * __strong request in requests) {
-      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([msg appendWithNSString:@"  "])) appendWithNSString:request])) appendWithNSString:@"\n"];
-    }
-  }
-  AndroidUtilLog_wWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, [msg description]);
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_wakeConnectionWaitersLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *predecessor = nil;
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter = self->mConnectionWaiterQueue_;
-  jboolean primaryConnectionNotAvailable = false;
-  jboolean nonPrimaryConnectionNotAvailable = false;
-  while (waiter != nil) {
-    jboolean unpark = false;
-    if (!self->mIsOpen_) {
-      unpark = true;
-    }
-    else {
-      @try {
-        AndroidDatabaseSqliteSQLiteConnection *connection = nil;
-        if (!waiter->mWantPrimaryConnection_ && !nonPrimaryConnectionNotAvailable) {
-          connection = AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquireNonPrimaryConnectionLockedWithNSString_withInt_(self, waiter->mSql_, waiter->mConnectionFlags_);
-          if (connection == nil) {
-            nonPrimaryConnectionNotAvailable = true;
-          }
-        }
-        if (connection == nil && !primaryConnectionNotAvailable) {
-          connection = AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquirePrimaryConnectionLockedWithInt_(self, waiter->mConnectionFlags_);
-          if (connection == nil) {
-            primaryConnectionNotAvailable = true;
-          }
-        }
-        if (connection != nil) {
-          JreStrongAssign(&waiter->mAssignedConnection_, connection);
-          unpark = true;
-        }
-        else if (nonPrimaryConnectionNotAvailable && primaryConnectionNotAvailable) {
-          break;
-        }
-      }
-      @catch (JavaLangRuntimeException *ex) {
-        JreStrongAssign(&waiter->mException_, ex);
-        unpark = true;
-      }
-    }
-    AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *successor = waiter->mNext_;
-    if (unpark) {
-      if (predecessor != nil) {
-        JreStrongAssign(&predecessor->mNext_, successor);
-      }
-      else {
-        JreStrongAssign(&self->mConnectionWaiterQueue_, successor);
-      }
-      JreStrongAssign(&waiter->mNext_, nil);
-      JavaUtilConcurrentLocksLockSupport_unparkWithJavaLangThread_(waiter->mThread_);
-    }
-    else {
-      predecessor = waiter;
-    }
-    waiter = successor;
-  }
-}
-
-AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquirePrimaryConnectionLockedWithInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jint connectionFlags) {
-  AndroidDatabaseSqliteSQLiteConnection *connection = self->mAvailablePrimaryConnection_;
-  if (connection != nil) {
-    JreStrongAssign(&self->mAvailablePrimaryConnection_, nil);
-    AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, connection, connectionFlags);
-    return connection;
-  }
-  for (AndroidDatabaseSqliteSQLiteConnection * __strong acquiredConnection in nil_chk([((JavaUtilWeakHashMap *) nil_chk(self->mAcquiredConnections_)) keySet])) {
-    if ([((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(acquiredConnection)) isPrimaryConnection]) {
-      return nil;
-    }
-  }
-  connection = AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(self, self->mConfiguration_, true);
-  AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, connection, connectionFlags);
-  return connection;
-}
-
-AndroidDatabaseSqliteSQLiteConnection *AndroidDatabaseSqliteSQLiteConnectionPool_tryAcquireNonPrimaryConnectionLockedWithNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, NSString *sql, jint connectionFlags) {
-  AndroidDatabaseSqliteSQLiteConnection *connection;
-  jint availableCount = [((JavaUtilArrayList *) nil_chk(self->mAvailableNonPrimaryConnections_)) size];
-  if (availableCount > 1 && sql != nil) {
-    for (jint i = 0; i < availableCount; i++) {
-      connection = [self->mAvailableNonPrimaryConnections_ getWithInt:i];
-      if ([((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) isPreparedStatementInCacheWithNSString:sql]) {
-        [self->mAvailableNonPrimaryConnections_ removeWithInt:i];
-        AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, connection, connectionFlags);
-        return connection;
-      }
-    }
-  }
-  if (availableCount > 0) {
-    connection = [self->mAvailableNonPrimaryConnections_ removeWithInt:availableCount - 1];
-    AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, connection, connectionFlags);
-    return connection;
-  }
-  jint openConnections = [((JavaUtilWeakHashMap *) nil_chk(self->mAcquiredConnections_)) size];
-  if (self->mAvailablePrimaryConnection_ != nil) {
-    openConnections += 1;
-  }
-  if (openConnections >= self->mMaxConnectionPoolSize_) {
-    return nil;
-  }
-  connection = AndroidDatabaseSqliteSQLiteConnectionPool_openConnectionLockedWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_withBoolean_(self, self->mConfiguration_, false);
-  AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(self, connection, connectionFlags);
-  return connection;
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_finishAcquireConnectionLockedWithAndroidDatabaseSqliteSQLiteConnection_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnection *connection, jint connectionFlags) {
-  @try {
-    jboolean readOnly = (connectionFlags & AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_READ_ONLY) != 0;
-    [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(connection)) setOnlyAllowReadOnlyOperationsWithBoolean:readOnly];
-    [((JavaUtilWeakHashMap *) nil_chk(self->mAcquiredConnections_)) putWithId:connection withId:JreLoadEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, NORMAL)];
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    AndroidUtilLog_eWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteConnectionPool_TAG, JreStrcat("$@$I", @"Failed to prepare acquired connection for session, closing it: ", connection, @", connectionFlags=", connectionFlags));
-    AndroidDatabaseSqliteSQLiteConnectionPool_closeConnectionAndLogExceptionsLockedWithAndroidDatabaseSqliteSQLiteConnection_(self, connection);
-    @throw ex;
-  }
-}
-
-jboolean AndroidDatabaseSqliteSQLiteConnectionPool_isSessionBlockingImportantConnectionWaitersLockedWithBoolean_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, jboolean holdingPrimaryConnection, jint connectionFlags) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter = self->mConnectionWaiterQueue_;
-  if (waiter != nil) {
-    jint priority = AndroidDatabaseSqliteSQLiteConnectionPool_getPriorityWithInt_(connectionFlags);
-    do {
-      if (priority > waiter->mPriority_) {
-        break;
-      }
-      if (holdingPrimaryConnection || !waiter->mWantPrimaryConnection_) {
-        return true;
-      }
-      waiter = waiter->mNext_;
-    }
-    while (waiter != nil);
-  }
-  return false;
-}
-
-jint AndroidDatabaseSqliteSQLiteConnectionPool_getPriorityWithInt_(jint connectionFlags) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_initialize();
-  return (connectionFlags & AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_INTERACTIVE) != 0 ? 1 : 0;
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_setMaxConnectionPoolSizeLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  if ((((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfiguration_))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) != 0) {
-    self->mMaxConnectionPoolSize_ = AndroidDatabaseSqliteSQLiteGlobal_getWALConnectionPoolSize();
-  }
-  else {
-    self->mMaxConnectionPoolSize_ = 1;
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_throwIfClosedLocked(AndroidDatabaseSqliteSQLiteConnectionPool *self) {
-  if (!self->mIsOpen_) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this operation because the connection pool has been closed.");
-  }
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *AndroidDatabaseSqliteSQLiteConnectionPool_obtainConnectionWaiterLockedWithJavaLangThread_withLong_withInt_withBoolean_withNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool *self, JavaLangThread *thread, jlong startTime, jint priority, jboolean wantPrimaryConnection, NSString *sql, jint connectionFlags) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter = self->mConnectionWaiterPool_;
-  if (waiter != nil) {
-    JreStrongAssign(&self->mConnectionWaiterPool_, waiter->mNext_);
-    JreStrongAssign(&waiter->mNext_, nil);
-  }
-  else {
-    waiter = create_AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init();
-  }
-  JreStrongAssign(&waiter->mThread_, thread);
-  waiter->mStartTime_ = startTime;
-  waiter->mPriority_ = priority;
-  waiter->mWantPrimaryConnection_ = wantPrimaryConnection;
-  JreStrongAssign(&waiter->mSql_, sql);
-  waiter->mConnectionFlags_ = connectionFlags;
-  return waiter;
-}
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_recycleConnectionWaiterLockedWithAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_(AndroidDatabaseSqliteSQLiteConnectionPool *self, AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *waiter) {
-  JreStrongAssign(&((AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *) nil_chk(waiter))->mNext_, self->mConnectionWaiterPool_);
-  JreStrongAssign(&waiter->mThread_, nil);
-  JreStrongAssign(&waiter->mSql_, nil);
-  JreStrongAssign(&waiter->mAssignedConnection_, nil);
-  JreStrongAssign(&waiter->mException_, nil);
-  waiter->mNonce_ += 1;
-  JreStrongAssign(&self->mConnectionWaiterPool_, waiter);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnectionPool)
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus)
-
-AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values_[3];
-
-@implementation AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus
-
-+ (IOSObjectArray *)values {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values();
-}
-
-+ (AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *)valueOfWithNSString:(NSString *)name {
-  return AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "NORMAL", "LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "RECONFIGURE", "LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-    { "DISCARD", "LAndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, NORMAL), &JreEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, RECONFIGURE), &JreEnum(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus, DISCARD), "LAndroidDatabaseSqliteSQLiteConnectionPool;", "Ljava/lang/Enum<Landroid/database/sqlite/SQLiteConnectionPool$AcquiredConnectionStatus;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus = { "AcquiredConnectionStatus", "android.database.sqlite", ptrTable, methods, fields, 7, 0x4018, 2, 3, 5, -1, -1, 6, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 3 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"NORMAL", @"RECONFIGURE", @"DISCARD",
-    };
-    for (jint i = 0; i < 3; i++) {
-      (AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_initWithNSString_withInt_(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values() {
-  AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_initialize();
-  return [IOSObjectArray arrayWithObjects:AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values_ count:3 type:AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_class_()];
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_valueOfWithNSString_(NSString *name) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_initialize();
-  for (int i = 0; i < 3; i++) {
-    AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *e = AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus *AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_fromOrdinal(NSUInteger ordinal) {
-  AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_initialize();
-  if (ordinal >= 3) {
-    return nil;
-  }
-  return AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnectionPool_AcquiredConnectionStatus)
-
-@implementation AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)dealloc {
-  RELEASE_(mNext_);
-  RELEASE_(mThread_);
-  RELEASE_(mSql_);
-  RELEASE_(mAssignedConnection_);
-  RELEASE_(mException_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mNext_", "LAndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mThread_", "LJavaLangThread;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mStartTime_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mPriority_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mWantPrimaryConnection_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mSql_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mConnectionFlags_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mAssignedConnection_", "LAndroidDatabaseSqliteSQLiteConnection;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mException_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mNonce_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteConnectionPool;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter = { "ConnectionWaiter", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1a, 1, 10, 0, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *new_AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, init)
-}
-
-AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter *create_AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConnectionPool_ConnectionWaiter)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConstraintException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConstraintException.h
deleted file mode 100644
index 9c535ed78..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConstraintException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConstraintException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteConstraintException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConstraintException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConstraintException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteConstraintException
-
-#if !defined (AndroidDatabaseSqliteSQLiteConstraintException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConstraintException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteConstraintException))
-#define AndroidDatabaseSqliteSQLiteConstraintException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteConstraintException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteConstraintException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteConstraintException_init(AndroidDatabaseSqliteSQLiteConstraintException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConstraintException *new_AndroidDatabaseSqliteSQLiteConstraintException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConstraintException *create_AndroidDatabaseSqliteSQLiteConstraintException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(AndroidDatabaseSqliteSQLiteConstraintException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConstraintException *new_AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteConstraintException *create_AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteConstraintException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteConstraintException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConstraintException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConstraintException.m
deleted file mode 100644
index 7825c0d0e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteConstraintException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteConstraintException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteConstraintException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteConstraintException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteConstraintException = { "SQLiteConstraintException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteConstraintException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteConstraintException_init(AndroidDatabaseSqliteSQLiteConstraintException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteConstraintException *new_AndroidDatabaseSqliteSQLiteConstraintException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConstraintException, init)
-}
-
-AndroidDatabaseSqliteSQLiteConstraintException *create_AndroidDatabaseSqliteSQLiteConstraintException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConstraintException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(AndroidDatabaseSqliteSQLiteConstraintException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteConstraintException *new_AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteConstraintException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteConstraintException *create_AndroidDatabaseSqliteSQLiteConstraintException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteConstraintException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteConstraintException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursor.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursor.h
deleted file mode 100644
index 5e37caa94..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursor.h
+++ /dev/null
@@ -1,95 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteCursor
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteCursor
-
-#if !defined (AndroidDatabaseSqliteSQLiteCursor_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor || defined(INCLUDE_AndroidDatabaseSqliteSQLiteCursor))
-#define AndroidDatabaseSqliteSQLiteCursor_
-
-#define RESTRICT_AndroidDatabaseAbstractWindowedCursor 1
-#define INCLUDE_AndroidDatabaseAbstractWindowedCursor 1
-#include "AndroidDatabaseAbstractWindowedCursor.h"
-
-@class AndroidDatabaseCursorWindow;
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class AndroidDatabaseSqliteSQLiteQuery;
-@class IOSObjectArray;
-@protocol AndroidDatabaseSqliteSQLiteCursorDriver;
-
-@interface AndroidDatabaseSqliteSQLiteCursor : AndroidDatabaseAbstractWindowedCursor
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)driver
-                                                   withNSString:(NSString *)editTable
-                           withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query;
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                withAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)driver
-                                               withNSString:(NSString *)editTable
-                       withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query;
-
-- (void)close;
-
-- (void)deactivate;
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (jint)getCount;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabase;
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition;
-
-- (jboolean)requery;
-
-- (void)setSelectionArgumentsWithNSStringArray:(IOSObjectArray *)selectionArgs;
-
-- (void)setWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteCursor)
-
-inline NSString *AndroidDatabaseSqliteSQLiteCursor_get_TAG();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteCursor_TAG;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteCursor, TAG, NSString *)
-
-inline jint AndroidDatabaseSqliteSQLiteCursor_get_NO_COUNT();
-#define AndroidDatabaseSqliteSQLiteCursor_NO_COUNT -1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteCursor, NO_COUNT, jint)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteCursor *self, AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *new_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteCursor *self, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *new_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCursor *create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteCursor)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursor.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursor.m
deleted file mode 100644
index 514c5dc98..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursor.m
+++ /dev/null
@@ -1,320 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseAbstractWindowedCursor.h"
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseSqliteSQLiteCursor.h"
-#include "AndroidDatabaseSqliteSQLiteCursorDriver.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteQuery.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "java/io/PrintStream.h"
-#include "java/io/PrintWriter.h"
-#include "java/io/StringWriter.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Exception.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/System.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/HashMap.h"
-#include "java/util/Map.h"
-
-@interface AndroidDatabaseSqliteSQLiteCursor () {
- @public
-  NSString *mEditTable_;
-  IOSObjectArray *mColumns_;
-  AndroidDatabaseSqliteSQLiteQuery *mQuery_;
-  id<AndroidDatabaseSqliteSQLiteCursorDriver> mDriver_;
-  jint mCount_;
-  jint mCursorWindowCapacity_;
-  id<JavaUtilMap> mColumnNameMap_;
-  NSException *mStackTrace_;
-}
-
-- (void)fillWindowWithInt:(jint)requiredPos;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCursor, mEditTable_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCursor, mColumns_, IOSObjectArray *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCursor, mQuery_, AndroidDatabaseSqliteSQLiteQuery *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCursor, mDriver_, id<AndroidDatabaseSqliteSQLiteCursorDriver>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCursor, mColumnNameMap_, id<JavaUtilMap>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCursor, mStackTrace_, NSException *)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteCursor_fillWindowWithInt_(AndroidDatabaseSqliteSQLiteCursor *self, jint requiredPos);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteCursor__Annotations$0();
-
-NSString *AndroidDatabaseSqliteSQLiteCursor_TAG = @"SQLiteCursor";
-
-@implementation AndroidDatabaseSqliteSQLiteCursor
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                withAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)driver
-                                               withNSString:(NSString *)editTable
-                       withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query {
-  AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(self, db, driver, editTable, query);
-  return self;
-}
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)driver
-                                                   withNSString:(NSString *)editTable
-                           withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query {
-  AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(self, driver, editTable, query);
-  return self;
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabase {
-  return [((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(mQuery_)) getDatabase];
-}
-
-- (jboolean)onMoveWithInt:(jint)oldPosition
-                  withInt:(jint)newPosition {
-  if (mWindow_ == nil || newPosition < [mWindow_ getStartPosition] || newPosition >= ([((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getStartPosition] + [((AndroidDatabaseCursorWindow *) nil_chk(mWindow_)) getNumRows])) {
-    AndroidDatabaseSqliteSQLiteCursor_fillWindowWithInt_(self, newPosition);
-  }
-  return true;
-}
-
-- (jint)getCount {
-  if (mCount_ == AndroidDatabaseSqliteSQLiteCursor_NO_COUNT) {
-    AndroidDatabaseSqliteSQLiteCursor_fillWindowWithInt_(self, 0);
-  }
-  return mCount_;
-}
-
-- (void)fillWindowWithInt:(jint)requiredPos {
-  AndroidDatabaseSqliteSQLiteCursor_fillWindowWithInt_(self, requiredPos);
-}
-
-- (jint)getColumnIndexWithNSString:(NSString *)columnName {
-  if (mColumnNameMap_ == nil) {
-    IOSObjectArray *columns = mColumns_;
-    jint columnCount = ((IOSObjectArray *) nil_chk(columns))->size_;
-    JavaUtilHashMap *map = create_JavaUtilHashMap_initWithInt_withFloat_(columnCount, 1);
-    for (jint i = 0; i < columnCount; i++) {
-      [map putWithId:IOSObjectArray_Get(columns, i) withId:JavaLangInteger_valueOfWithInt_(i)];
-    }
-    JreStrongAssign(&mColumnNameMap_, map);
-  }
-  jint periodIndex = [((NSString *) nil_chk(columnName)) java_lastIndexOf:'.'];
-  if (periodIndex != -1) {
-    JavaLangException *e = create_JavaLangException_init();
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteCursor_TAG, JreStrcat("$$", @"requesting column name with table name -- ", columnName), e);
-    columnName = [columnName java_substring:periodIndex + 1];
-  }
-  JavaLangInteger *i = [((id<JavaUtilMap>) nil_chk(mColumnNameMap_)) getWithId:columnName];
-  if (i != nil) {
-    return [i intValue];
-  }
-  else {
-    return -1;
-  }
-}
-
-- (IOSObjectArray *)getColumnNames {
-  return mColumns_;
-}
-
-- (void)deactivate {
-  [super deactivate];
-  [((id<AndroidDatabaseSqliteSQLiteCursorDriver>) nil_chk(mDriver_)) cursorDeactivated];
-}
-
-- (void)close {
-  [super close];
-  @synchronized(self) {
-    [((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(mQuery_)) close];
-    [((id<AndroidDatabaseSqliteSQLiteCursorDriver>) nil_chk(mDriver_)) cursorClosed];
-  }
-}
-
-- (jboolean)requery {
-  if ([self isClosed]) {
-    return false;
-  }
-  @synchronized(self) {
-    if (![((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk([((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(mQuery_)) getDatabase])) isOpen]) {
-      return false;
-    }
-    if (mWindow_ != nil) {
-      [mWindow_ clear];
-    }
-    mPos_ = -1;
-    mCount_ = AndroidDatabaseSqliteSQLiteCursor_NO_COUNT;
-    [((id<AndroidDatabaseSqliteSQLiteCursorDriver>) nil_chk(mDriver_)) cursorRequeriedWithAndroidDatabaseCursor:self];
-  }
-  @try {
-    return [super requery];
-  }
-  @catch (JavaLangIllegalStateException *e) {
-    AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteCursor_TAG, JreStrcat("$$", @"requery() failed ", [((JavaLangIllegalStateException *) nil_chk(e)) getMessage]), e);
-    return false;
-  }
-}
-
-- (void)setWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window {
-  [super setWindowWithAndroidDatabaseCursorWindow:window];
-  mCount_ = AndroidDatabaseSqliteSQLiteCursor_NO_COUNT;
-}
-
-- (void)setSelectionArgumentsWithNSStringArray:(IOSObjectArray *)selectionArgs {
-  [((id<AndroidDatabaseSqliteSQLiteCursorDriver>) nil_chk(mDriver_)) setBindArgumentsWithNSStringArray:selectionArgs];
-}
-
-- (void)java_finalize {
-  @try {
-    if (mWindow_ != nil) {
-      if (mStackTrace_ != nil) {
-        NSString *sql = [((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(mQuery_)) getSql];
-        jint len = ((jint) [((NSString *) nil_chk(sql)) length]);
-        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$$$$", @"Finalizing a Cursor that has not been deactivated or closed. database = ", [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk([mQuery_ getDatabase])) getLabel], @", table = ", mEditTable_, @", query = ", [sql java_substring:0 endIndex:(len > 1000) ? 1000 : len])];
-        JavaIoStringWriter *stringWriter = create_JavaIoStringWriter_init();
-        JavaIoPrintWriter *printWriter = create_JavaIoPrintWriter_initWithJavaIoWriter_(stringWriter);
-        [mStackTrace_ printStackTraceWithJavaIoPrintWriter:printWriter];
-        [printWriter close];
-        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[stringWriter description]];
-      }
-      [self close];
-    }
-  }
-  @finally {
-    [super java_finalize];
-  }
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseSqliteSQLiteCursor class]);
-  RELEASE_(mEditTable_);
-  RELEASE_(mColumns_);
-  RELEASE_(mQuery_);
-  RELEASE_(mDriver_);
-  RELEASE_(mColumnNameMap_);
-  RELEASE_(mStackTrace_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
-    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 7, 8, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 13, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:withAndroidDatabaseSqliteSQLiteCursorDriver:withNSString:withAndroidDatabaseSqliteSQLiteQuery:);
-  methods[1].selector = @selector(initWithAndroidDatabaseSqliteSQLiteCursorDriver:withNSString:withAndroidDatabaseSqliteSQLiteQuery:);
-  methods[2].selector = @selector(getDatabase);
-  methods[3].selector = @selector(onMoveWithInt:withInt:);
-  methods[4].selector = @selector(getCount);
-  methods[5].selector = @selector(fillWindowWithInt:);
-  methods[6].selector = @selector(getColumnIndexWithNSString:);
-  methods[7].selector = @selector(getColumnNames);
-  methods[8].selector = @selector(deactivate);
-  methods[9].selector = @selector(close);
-  methods[10].selector = @selector(requery);
-  methods[11].selector = @selector(setWindowWithAndroidDatabaseCursorWindow:);
-  methods[12].selector = @selector(setSelectionArgumentsWithNSStringArray:);
-  methods[13].selector = @selector(java_finalize);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 14, -1, -1 },
-    { "NO_COUNT", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteCursor_NO_COUNT, 0x18, -1, -1, -1, -1 },
-    { "mEditTable_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mColumns_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mQuery_", "LAndroidDatabaseSqliteSQLiteQuery;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mDriver_", "LAndroidDatabaseSqliteSQLiteCursorDriver;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mCursorWindowCapacity_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mColumnNameMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 15, -1 },
-    { "mStackTrace_", "LNSException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;LAndroidDatabaseSqliteSQLiteCursorDriver;LNSString;LAndroidDatabaseSqliteSQLiteQuery;", (void *)&AndroidDatabaseSqliteSQLiteCursor__Annotations$0, "LAndroidDatabaseSqliteSQLiteCursorDriver;LNSString;LAndroidDatabaseSqliteSQLiteQuery;", "onMove", "II", "fillWindow", "I", "getColumnIndex", "LNSString;", "setWindow", "LAndroidDatabaseCursorWindow;", "setSelectionArguments", "[LNSString;", "finalize", &AndroidDatabaseSqliteSQLiteCursor_TAG, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteCursor = { "SQLiteCursor", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1, 14, 10, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteCursor;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteCursor *self, AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) {
-  AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(self, driver, editTable, query);
-}
-
-AndroidDatabaseSqliteSQLiteCursor *new_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteCursor, initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_, db, driver, editTable, query)
-}
-
-AndroidDatabaseSqliteSQLiteCursor *create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteDatabase *db, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteCursor, initWithAndroidDatabaseSqliteSQLiteDatabase_withAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_, db, driver, editTable, query)
-}
-
-void AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(AndroidDatabaseSqliteSQLiteCursor *self, id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) {
-  AndroidDatabaseAbstractWindowedCursor_init(self);
-  self->mCount_ = AndroidDatabaseSqliteSQLiteCursor_NO_COUNT;
-  if (query == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"query object cannot be null");
-  }
-  JreStrongAssign(&self->mStackTrace_, nil);
-  JreStrongAssign(&self->mDriver_, driver);
-  JreStrongAssign(&self->mEditTable_, editTable);
-  JreStrongAssign(&self->mColumnNameMap_, nil);
-  JreStrongAssign(&self->mQuery_, query);
-  JreStrongAssign(&self->mColumns_, [query getColumnNames]);
-  self->mRowIdColumnIndex_ = AndroidDatabaseDatabaseUtils_findRowIdColumnIndexWithNSStringArray_(self->mColumns_);
-}
-
-AndroidDatabaseSqliteSQLiteCursor *new_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteCursor, initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_, driver, editTable, query)
-}
-
-AndroidDatabaseSqliteSQLiteCursor *create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(id<AndroidDatabaseSqliteSQLiteCursorDriver> driver, NSString *editTable, AndroidDatabaseSqliteSQLiteQuery *query) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteCursor, initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_, driver, editTable, query)
-}
-
-void AndroidDatabaseSqliteSQLiteCursor_fillWindowWithInt_(AndroidDatabaseSqliteSQLiteCursor *self, jint requiredPos) {
-  [self clearOrCreateWindowWithNSString:[((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk([self getDatabase])) getPath]];
-  @try {
-    if (self->mCount_ == AndroidDatabaseSqliteSQLiteCursor_NO_COUNT) {
-      jint startPos = AndroidDatabaseDatabaseUtils_cursorPickFillWindowStartPositionWithInt_withInt_(requiredPos, 0);
-      self->mCount_ = [((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(self->mQuery_)) fillWindowWithAndroidDatabaseCursorWindow:self->mWindow_ withInt:startPos withInt:requiredPos withBoolean:true];
-      self->mCursorWindowCapacity_ = [((AndroidDatabaseCursorWindow *) nil_chk(self->mWindow_)) getNumRows];
-      if (AndroidUtilLog_isLoggableWithNSString_withInt_(AndroidDatabaseSqliteSQLiteCursor_TAG, AndroidUtilLog_DEBUG)) {
-        AndroidUtilLog_dWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteCursor_TAG, JreStrcat("$I", @"received count(*) from native_fill_window: ", self->mCount_));
-      }
-    }
-    else {
-      jint startPos = AndroidDatabaseDatabaseUtils_cursorPickFillWindowStartPositionWithInt_withInt_(requiredPos, self->mCursorWindowCapacity_);
-      [((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(self->mQuery_)) fillWindowWithAndroidDatabaseCursorWindow:self->mWindow_ withInt:startPos withInt:requiredPos withBoolean:false];
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [self closeWindow];
-    @throw ex;
-  }
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteCursor__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteCursor)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursorDriver.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursorDriver.h
deleted file mode 100644
index 318755347..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursorDriver.h
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursorDriver")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteCursorDriver
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursorDriver 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursorDriver 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteCursorDriver
-
-#if !defined (AndroidDatabaseSqliteSQLiteCursorDriver_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursorDriver || defined(INCLUDE_AndroidDatabaseSqliteSQLiteCursorDriver))
-#define AndroidDatabaseSqliteSQLiteCursorDriver_
-
-@class IOSObjectArray;
-@protocol AndroidDatabaseCursor;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-
-@protocol AndroidDatabaseSqliteSQLiteCursorDriver < JavaObject >
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                                      withNSStringArray:(IOSObjectArray *)bindArgs;
-
-- (void)cursorDeactivated;
-
-- (void)cursorRequeriedWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-- (void)cursorClosed;
-
-- (void)setBindArgumentsWithNSStringArray:(IOSObjectArray *)bindArgs;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteCursorDriver)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteCursorDriver)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCursorDriver")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursorDriver.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursorDriver.m
deleted file mode 100644
index f314ed021..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCursorDriver.m
+++ /dev/null
@@ -1,37 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteCursorDriver.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidDatabaseSqliteSQLiteCursorDriver : NSObject
-
-@end
-
-@implementation AndroidDatabaseSqliteSQLiteCursorDriver
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidDatabaseCursor;", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 4, 5, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(queryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withNSStringArray:);
-  methods[1].selector = @selector(cursorDeactivated);
-  methods[2].selector = @selector(cursorRequeriedWithAndroidDatabaseCursor:);
-  methods[3].selector = @selector(cursorClosed);
-  methods[4].selector = @selector(setBindArgumentsWithNSStringArray:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "query", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;[LNSString;", "cursorRequeried", "LAndroidDatabaseCursor;", "setBindArguments", "[LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteCursorDriver = { "SQLiteCursorDriver", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x609, 5, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteCursorDriver;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteCursorDriver)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCustomFunction.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCustomFunction.h
deleted file mode 100644
index ffc1a71c3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCustomFunction.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCustomFunction")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteCustomFunction
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCustomFunction 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCustomFunction 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteCustomFunction
-
-#if !defined (AndroidDatabaseSqliteSQLiteCustomFunction_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCustomFunction || defined(INCLUDE_AndroidDatabaseSqliteSQLiteCustomFunction))
-#define AndroidDatabaseSqliteSQLiteCustomFunction_
-
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CustomFunction;
-
-@interface AndroidDatabaseSqliteSQLiteCustomFunction : NSObject {
- @public
-  NSString *name_;
-  jint numArgs_;
-  id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)name
-                         withInt:(jint)numArgs
-withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:(id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)callback;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteCustomFunction)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCustomFunction, name_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCustomFunction, callback_, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(AndroidDatabaseSqliteSQLiteCustomFunction *self, NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCustomFunction *new_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCustomFunction *create_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteCustomFunction)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteCustomFunction")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCustomFunction.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCustomFunction.m
deleted file mode 100644
index 34ebf6f26..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteCustomFunction.m
+++ /dev/null
@@ -1,76 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteCustomFunction.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-
-@interface AndroidDatabaseSqliteSQLiteCustomFunction ()
-
-- (void)dispatchCallbackWithNSStringArray:(IOSObjectArray *)args;
-
-@end
-
-@implementation AndroidDatabaseSqliteSQLiteCustomFunction
-
-- (instancetype)initWithNSString:(NSString *)name
-                         withInt:(jint)numArgs
-withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:(id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)callback {
-  AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(self, name, numArgs, callback);
-  return self;
-}
-
-- (void)dispatchCallbackWithNSStringArray:(IOSObjectArray *)args {
-  [((id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>) nil_chk(callback_)) callbackWithNSStringArray:args];
-}
-
-- (void)dealloc {
-  RELEASE_(name_);
-  RELEASE_(callback_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 1, 2, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:);
-  methods[1].selector = @selector(dispatchCallbackWithNSStringArray:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "name_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-    { "numArgs_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-    { "callback_", "LAndroidDatabaseSqliteSQLiteDatabase_CustomFunction;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CustomFunction;", "dispatchCallback", "[LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteCustomFunction = { "SQLiteCustomFunction", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteCustomFunction;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(AndroidDatabaseSqliteSQLiteCustomFunction *self, NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) {
-  NSObject_init(self);
-  if (name == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name must not be null.");
-  }
-  JreStrongAssign(&self->name_, name);
-  self->numArgs_ = numArgs;
-  JreStrongAssign(&self->callback_, callback);
-}
-
-AndroidDatabaseSqliteSQLiteCustomFunction *new_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteCustomFunction, initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_, name, numArgs, callback)
-}
-
-AndroidDatabaseSqliteSQLiteCustomFunction *create_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteCustomFunction, initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_, name, numArgs, callback)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteCustomFunction)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabase.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabase.h
deleted file mode 100644
index a38aa6c13..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabase.h
+++ /dev/null
@@ -1,384 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDatabase
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDatabase
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatabase_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabase))
-#define AndroidDatabaseSqliteSQLiteDatabase_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteClosable 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteClosable 1
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-
-@class AndroidContentContentValues;
-@class AndroidDatabaseSqliteSQLiteSession;
-@class AndroidDatabaseSqliteSQLiteStatement;
-@class IOSObjectArray;
-@class JavaIoFile;
-@class JavaUtilArrayList;
-@class JavaUtilLocale;
-@protocol AndroidDatabaseCursor;
-@protocol AndroidDatabaseDatabaseErrorHandler;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CustomFunction;
-@protocol AndroidDatabaseSqliteSQLiteTransactionListener;
-@protocol AndroidUtilPrinter;
-@protocol JavaUtilList;
-@protocol JavaUtilMap;
-
-@interface AndroidDatabaseSqliteSQLiteDatabase : AndroidDatabaseSqliteSQLiteClosable
-
-#pragma mark Public
-
-- (void)addCustomFunctionWithNSString:(NSString *)name
-                              withInt:(jint)numArgs
-withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:(id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)function;
-
-- (void)beginTransaction;
-
-- (void)beginTransactionNonExclusive;
-
-- (void)beginTransactionWithListenerWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener;
-
-- (void)beginTransactionWithListenerNonExclusiveWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener;
-
-- (AndroidDatabaseSqliteSQLiteStatement *)compileStatementWithNSString:(NSString *)sql;
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;
-
-- (jint)delete__WithNSString:(NSString *)table
-                withNSString:(NSString *)whereClause
-           withNSStringArray:(IOSObjectArray *)whereArgs;
-
-+ (jboolean)deleteDatabaseWithJavaIoFile:(JavaIoFile *)file;
-
-- (void)disableWriteAheadLogging;
-
-- (jboolean)enableWriteAheadLogging;
-
-- (void)endTransaction;
-
-- (void)execSQLWithNSString:(NSString *)sql;
-
-- (void)execSQLWithNSString:(NSString *)sql
-          withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-+ (NSString *)findEditTableWithNSString:(NSString *)tables;
-
-- (id<JavaUtilList>)getAttachedDbs;
-
-- (jlong)getMaximumSize;
-
-- (jlong)getPageSize;
-
-- (NSString *)getPath;
-
-- (id<JavaUtilMap>)getSyncedTables;
-
-- (jint)getVersion;
-
-- (jlong)insertWithNSString:(NSString *)table
-               withNSString:(NSString *)nullColumnHack
-withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-- (jlong)insertOrThrowWithNSString:(NSString *)table
-                      withNSString:(NSString *)nullColumnHack
-   withAndroidContentContentValues:(AndroidContentContentValues *)values;
-
-- (jlong)insertWithOnConflictWithNSString:(NSString *)table
-                             withNSString:(NSString *)nullColumnHack
-          withAndroidContentContentValues:(AndroidContentContentValues *)initialValues
-                                  withInt:(jint)conflictAlgorithm;
-
-- (jboolean)inTransaction;
-
-- (jboolean)isDatabaseIntegrityOk;
-
-- (jboolean)isDbLockedByCurrentThread;
-
-- (jboolean)isDbLockedByOtherThreads;
-
-- (jboolean)isInMemoryDatabase;
-
-- (jboolean)isOpen;
-
-- (jboolean)isReadOnly;
-
-- (jboolean)isWriteAheadLoggingEnabled;
-
-- (void)markTableSyncableWithNSString:(NSString *)table
-                         withNSString:(NSString *)deletedTable;
-
-- (void)markTableSyncableWithNSString:(NSString *)table
-                         withNSString:(NSString *)foreignKey
-                         withNSString:(NSString *)updateTable;
-
-- (jboolean)needUpgradeWithInt:(jint)newVersion;
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openDatabaseWithNSString:(NSString *)path
-            withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                          withInt:(jint)flags;
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openDatabaseWithNSString:(NSString *)path
-            withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                          withInt:(jint)flags
-                          withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithJavaIoFile:(JavaIoFile *)file
-                      withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)path
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)path
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;
-
-- (id<AndroidDatabaseCursor>)queryWithBoolean:(jboolean)distinct
-                                 withNSString:(NSString *)table
-                            withNSStringArray:(IOSObjectArray *)columns
-                                 withNSString:(NSString *)selection
-                            withNSStringArray:(IOSObjectArray *)selectionArgs
-                                 withNSString:(NSString *)groupBy
-                                 withNSString:(NSString *)having
-                                 withNSString:(NSString *)orderBy
-                                 withNSString:(NSString *)limit;
-
-- (id<AndroidDatabaseCursor>)queryWithNSString:(NSString *)table
-                             withNSStringArray:(IOSObjectArray *)columns
-                                  withNSString:(NSString *)selection
-                             withNSStringArray:(IOSObjectArray *)selectionArgs
-                                  withNSString:(NSString *)groupBy
-                                  withNSString:(NSString *)having
-                                  withNSString:(NSString *)orderBy;
-
-- (id<AndroidDatabaseCursor>)queryWithNSString:(NSString *)table
-                             withNSStringArray:(IOSObjectArray *)columns
-                                  withNSString:(NSString *)selection
-                             withNSStringArray:(IOSObjectArray *)selectionArgs
-                                  withNSString:(NSString *)groupBy
-                                  withNSString:(NSString *)having
-                                  withNSString:(NSString *)orderBy
-                                  withNSString:(NSString *)limit;
-
-- (id<AndroidDatabaseCursor>)queryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
-                                                                                       withBoolean:(jboolean)distinct
-                                                                                      withNSString:(NSString *)table
-                                                                                 withNSStringArray:(IOSObjectArray *)columns
-                                                                                      withNSString:(NSString *)selection
-                                                                                 withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                                                      withNSString:(NSString *)groupBy
-                                                                                      withNSString:(NSString *)having
-                                                                                      withNSString:(NSString *)orderBy
-                                                                                      withNSString:(NSString *)limit;
-
-- (id<AndroidDatabaseCursor>)rawQueryWithNSString:(NSString *)sql
-                                withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-- (id<AndroidDatabaseCursor>)rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
-                                                                                         withNSString:(NSString *)sql
-                                                                                    withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                                                         withNSString:(NSString *)editTable;
-
-+ (jint)releaseMemory;
-
-- (void)reopenReadWrite;
-
-- (jlong)replaceWithNSString:(NSString *)table
-                withNSString:(NSString *)nullColumnHack
-withAndroidContentContentValues:(AndroidContentContentValues *)initialValues;
-
-- (jlong)replaceOrThrowWithNSString:(NSString *)table
-                       withNSString:(NSString *)nullColumnHack
-    withAndroidContentContentValues:(AndroidContentContentValues *)initialValues;
-
-- (void)setForeignKeyConstraintsEnabledWithBoolean:(jboolean)enable;
-
-- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale;
-
-- (void)setLockingEnabledWithBoolean:(jboolean)lockingEnabled;
-
-- (jlong)setMaximumSizeWithLong:(jlong)numBytes;
-
-- (void)setMaxSqlCacheSizeWithInt:(jint)cacheSize;
-
-- (void)setPageSizeWithLong:(jlong)numBytes;
-
-- (void)setTransactionSuccessful;
-
-- (void)setVersionWithInt:(jint)version_;
-
-- (NSString *)description;
-
-- (jint)updateWithNSString:(NSString *)table
-withAndroidContentContentValues:(AndroidContentContentValues *)values
-              withNSString:(NSString *)whereClause
-         withNSStringArray:(IOSObjectArray *)whereArgs;
-
-- (jint)updateWithOnConflictWithNSString:(NSString *)table
-         withAndroidContentContentValues:(AndroidContentContentValues *)values
-                            withNSString:(NSString *)whereClause
-                       withNSStringArray:(IOSObjectArray *)whereArgs
-                                 withInt:(jint)conflictAlgorithm;
-
-- (jboolean)yieldIfContended;
-
-- (jboolean)yieldIfContendedSafely;
-
-- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-- (void)onAllReferencesReleased;
-
-#pragma mark Package-Private
-
-- (AndroidDatabaseSqliteSQLiteSession *)createSession;
-
-+ (void)dumpAllWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                          withBoolean:(jboolean)verbose;
-
-+ (JavaUtilArrayList *)getDbStats;
-
-- (NSString *)getLabel;
-
-- (jint)getThreadDefaultConnectionFlagsWithBoolean:(jboolean)readOnly;
-
-- (AndroidDatabaseSqliteSQLiteSession *)getThreadSession;
-
-- (void)onCorruption;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabase)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_ROLLBACK();
-#define AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_ROLLBACK 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_ROLLBACK, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_ABORT();
-#define AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_ABORT 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_ABORT, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_FAIL();
-#define AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_FAIL 3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_FAIL, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_IGNORE();
-#define AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_IGNORE 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_IGNORE, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_REPLACE();
-#define AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_REPLACE 5
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_REPLACE, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_NONE();
-#define AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_NONE 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_NONE, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_SQLITE_MAX_LIKE_PATTERN_LENGTH();
-#define AndroidDatabaseSqliteSQLiteDatabase_SQLITE_MAX_LIKE_PATTERN_LENGTH 50000
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, SQLITE_MAX_LIKE_PATTERN_LENGTH, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_OPEN_READWRITE();
-#define AndroidDatabaseSqliteSQLiteDatabase_OPEN_READWRITE 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, OPEN_READWRITE, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_OPEN_READONLY();
-#define AndroidDatabaseSqliteSQLiteDatabase_OPEN_READONLY 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, OPEN_READONLY, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_NO_LOCALIZED_COLLATORS();
-#define AndroidDatabaseSqliteSQLiteDatabase_NO_LOCALIZED_COLLATORS 16
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, NO_LOCALIZED_COLLATORS, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_CREATE_IF_NECESSARY();
-#define AndroidDatabaseSqliteSQLiteDatabase_CREATE_IF_NECESSARY 268435456
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, CREATE_IF_NECESSARY, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_ENABLE_WRITE_AHEAD_LOGGING();
-#define AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING 536870912
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, ENABLE_WRITE_AHEAD_LOGGING, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_MAX_SQL_CACHE_SIZE();
-#define AndroidDatabaseSqliteSQLiteDatabase_MAX_SQL_CACHE_SIZE 100
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, MAX_SQL_CACHE_SIZE, jint)
-
-FOUNDATION_EXPORT jint AndroidDatabaseSqliteSQLiteDatabase_releaseMemory();
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint flags);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint flags, id<AndroidDatabaseDatabaseErrorHandler> errorHandler);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithJavaIoFile_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(JavaIoFile *file, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler);
-
-FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDatabase_deleteDatabaseWithJavaIoFile_(JavaIoFile *file);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory);
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteDatabase_findEditTableWithNSString_(NSString *tables);
-
-FOUNDATION_EXPORT JavaUtilArrayList *AndroidDatabaseSqliteSQLiteDatabase_getDbStats();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabase_dumpAllWithAndroidUtilPrinter_withBoolean_(id<AndroidUtilPrinter> printer, jboolean verbose);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabase)
-
-#endif
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatabase_CursorFactory_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabase_CursorFactory))
-#define AndroidDatabaseSqliteSQLiteDatabase_CursorFactory_
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class AndroidDatabaseSqliteSQLiteQuery;
-@protocol AndroidDatabaseCursor;
-@protocol AndroidDatabaseSqliteSQLiteCursorDriver;
-
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory < JavaObject >
-
-- (id<AndroidDatabaseCursor>)newCursorWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                  withAndroidDatabaseSqliteSQLiteCursorDriver:(id<AndroidDatabaseSqliteSQLiteCursorDriver>)masterQuery
-                                                                 withNSString:(NSString *)editTable
-                                         withAndroidDatabaseSqliteSQLiteQuery:(AndroidDatabaseSqliteSQLiteQuery *)query OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabase_CursorFactory)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabase_CursorFactory)
-
-#endif
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatabase_CustomFunction_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabase_CustomFunction))
-#define AndroidDatabaseSqliteSQLiteDatabase_CustomFunction_
-
-@class IOSObjectArray;
-
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CustomFunction < JavaObject >
-
-- (void)callbackWithNSStringArray:(IOSObjectArray *)args;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabase_CustomFunction)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabase_CustomFunction)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabase")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabase.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabase.m
deleted file mode 100644
index 251e2c3a3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabase.m
+++ /dev/null
@@ -1,1650 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentContentValues.h"
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseDatabaseErrorHandler.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseDefaultDatabaseErrorHandler.h"
-#include "AndroidDatabaseSQLException.h"
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-#include "AndroidDatabaseSqliteSQLiteConnectionPool.h"
-#include "AndroidDatabaseSqliteSQLiteCursorDriver.h"
-#include "AndroidDatabaseSqliteSQLiteCustomFunction.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h"
-#include "AndroidDatabaseSqliteSQLiteDirectCursorDriver.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteGlobal.h"
-#include "AndroidDatabaseSqliteSQLiteQueryBuilder.h"
-#include "AndroidDatabaseSqliteSQLiteSession.h"
-#include "AndroidDatabaseSqliteSQLiteStatement.h"
-#include "AndroidDatabaseSqliteSQLiteTransactionListener.h"
-#include "AndroidOsLooper.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/text/TextUtils.h"
-#include "android/util/Log.h"
-#include "android/util/Pair.h"
-#include "android/util/Printer.h"
-#include "dalvik/system/CloseGuard.h"
-#include "java/io/File.h"
-#include "java/io/FileFilter.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Long.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/ThreadLocal.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/HashMap.h"
-#include "java/util/List.h"
-#include "java/util/Locale.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/WeakHashMap.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface AndroidDatabaseSqliteSQLiteDatabase () {
- @public
-  JavaLangThreadLocal *mThreadSession_;
-  id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> mCursorFactory_;
-  id<AndroidDatabaseDatabaseErrorHandler> mErrorHandler_;
-  id mLock_;
-  DalvikSystemCloseGuard *mCloseGuardLocked_;
-  AndroidDatabaseSqliteSQLiteDatabaseConfiguration *mConfigurationLocked_;
-  AndroidDatabaseSqliteSQLiteConnectionPool *mConnectionPoolLocked_;
-  jboolean mHasAttachedDbsLocked_;
-}
-
-- (instancetype)initWithNSString:(NSString *)path
-                         withInt:(jint)openFlags
-withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
-withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;
-
-- (void)disposeWithBoolean:(jboolean)finalized;
-
-+ (jboolean)isMainThread;
-
-- (void)beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener
-                                                               withBoolean:(jboolean)exclusive;
-
-- (jboolean)yieldIfContendedHelperWithBoolean:(jboolean)throwIfUnsafe
-                                     withLong:(jlong)sleepAfterYieldDelay;
-
-- (void)open;
-
-- (void)openInner;
-
-- (jint)executeSqlWithNSString:(NSString *)sql
-             withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (jboolean)isReadOnlyLocked;
-
-- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList;
-
-+ (JavaUtilArrayList *)getActiveDatabases;
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose;
-
-- (void)throwIfNotOpenLocked;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mThreadSession_, JavaLangThreadLocal *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mCursorFactory_, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mErrorHandler_, id<AndroidDatabaseDatabaseErrorHandler>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mLock_, id)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mCloseGuardLocked_, DalvikSystemCloseGuard *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mConfigurationLocked_, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabase, mConnectionPoolLocked_, AndroidDatabaseSqliteSQLiteConnectionPool *)
-
-inline NSString *AndroidDatabaseSqliteSQLiteDatabase_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteDatabase_TAG = @"SQLiteDatabase";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteDatabase, TAG, NSString *)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_EVENT_DB_CORRUPT();
-#define AndroidDatabaseSqliteSQLiteDatabase_EVENT_DB_CORRUPT 75004
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, EVENT_DB_CORRUPT, jint)
-
-inline JavaUtilWeakHashMap *AndroidDatabaseSqliteSQLiteDatabase_get_sActiveDatabases();
-inline JavaUtilWeakHashMap *AndroidDatabaseSqliteSQLiteDatabase_set_sActiveDatabases(JavaUtilWeakHashMap *value);
-static JavaUtilWeakHashMap *AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases;
-J2OBJC_STATIC_FIELD_OBJ(AndroidDatabaseSqliteSQLiteDatabase, sActiveDatabases, JavaUtilWeakHashMap *)
-
-inline IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase_get_CONFLICT_VALUES();
-static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_VALUES;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteDatabase, CONFLICT_VALUES, IOSObjectArray *)
-
-inline jint AndroidDatabaseSqliteSQLiteDatabase_get_OPEN_READ_MASK();
-#define AndroidDatabaseSqliteSQLiteDatabase_OPEN_READ_MASK 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDatabase, OPEN_READ_MASK, jint)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(AndroidDatabaseSqliteSQLiteDatabase *self, NSString *path, jint openFlags, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> cursorFactory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase *new_AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, jint openFlags, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> cursorFactory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase *create_AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, jint openFlags, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> cursorFactory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_disposeWithBoolean_(AndroidDatabaseSqliteSQLiteDatabase *self, jboolean finalized);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteDatabase_isMainThread();
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(AndroidDatabaseSqliteSQLiteDatabase *self, id<AndroidDatabaseSqliteSQLiteTransactionListener> transactionListener, jboolean exclusive);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteDatabase_yieldIfContendedHelperWithBoolean_withLong_(AndroidDatabaseSqliteSQLiteDatabase *self, jboolean throwIfUnsafe, jlong sleepAfterYieldDelay);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_open(AndroidDatabaseSqliteSQLiteDatabase *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_openInner(AndroidDatabaseSqliteSQLiteDatabase *self);
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteDatabase_executeSqlWithNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *self, NSString *sql, IOSObjectArray *bindArgs);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteDatabase_isReadOnlyLocked(AndroidDatabaseSqliteSQLiteDatabase *self);
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteDatabase_getPath(AndroidDatabaseSqliteSQLiteDatabase *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_collectDbStatsWithJavaUtilArrayList_(AndroidDatabaseSqliteSQLiteDatabase *self, JavaUtilArrayList *dbStatsList);
-
-__attribute__((unused)) static JavaUtilArrayList *AndroidDatabaseSqliteSQLiteDatabase_getActiveDatabases();
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_dumpWithAndroidUtilPrinter_withBoolean_(AndroidDatabaseSqliteSQLiteDatabase *self, id<AndroidUtilPrinter> printer, jboolean verbose);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(AndroidDatabaseSqliteSQLiteDatabase *self);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$5();
-
-@interface AndroidDatabaseSqliteSQLiteDatabase_1 : JavaLangThreadLocal {
- @public
-  AndroidDatabaseSqliteSQLiteDatabase *this$0_;
-}
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)outer$;
-
-- (AndroidDatabaseSqliteSQLiteSession *)initialValue OBJC_METHOD_FAMILY_NONE;
-
-- (AndroidDatabaseSqliteSQLiteSession *)get;
-
-- (AndroidDatabaseSqliteSQLiteSession *)childValueWithId:(AndroidDatabaseSqliteSQLiteSession *)arg0;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabase_1)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase_1 *self, AndroidDatabaseSqliteSQLiteDatabase *outer$);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase_1 *new_AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *outer$) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase_1 *create_AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *outer$);
-
-@interface AndroidDatabaseSqliteSQLiteDatabase_2 : NSObject < JavaIoFileFilter > {
- @public
-  NSString *val$prefix_;
-}
-
-- (instancetype)initWithNSString:(NSString *)capture$0;
-
-- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)candidate;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabase_2)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabase_2 *self, NSString *capture$0);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase_2 *new_AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase_2 *create_AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(NSString *capture$0);
-
-@interface AndroidDatabaseSqliteSQLiteDatabase_CursorFactory : NSObject
-
-@end
-
-@interface AndroidDatabaseSqliteSQLiteDatabase_CustomFunction : NSObject
-
-@end
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteDatabase)
-
-@implementation AndroidDatabaseSqliteSQLiteDatabase
-
-- (instancetype)initWithNSString:(NSString *)path
-                         withInt:(jint)openFlags
-withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
-withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
-  AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(self, path, openFlags, cursorFactory, errorHandler);
-  return self;
-}
-
-- (void)java_finalize {
-  @try {
-    AndroidDatabaseSqliteSQLiteDatabase_disposeWithBoolean_(self, true);
-  }
-  @finally {
-    [super java_finalize];
-  }
-}
-
-- (void)onAllReferencesReleased {
-  AndroidDatabaseSqliteSQLiteDatabase_disposeWithBoolean_(self, false);
-}
-
-- (void)disposeWithBoolean:(jboolean)finalized {
-  AndroidDatabaseSqliteSQLiteDatabase_disposeWithBoolean_(self, finalized);
-}
-
-+ (jint)releaseMemory {
-  return AndroidDatabaseSqliteSQLiteDatabase_releaseMemory();
-}
-
-- (void)setLockingEnabledWithBoolean:(jboolean)lockingEnabled {
-}
-
-- (NSString *)getLabel {
-  @synchronized(mLock_) {
-    return ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->label_;
-  }
-}
-
-- (void)onCorruption {
-  [((id<AndroidDatabaseDatabaseErrorHandler>) nil_chk(mErrorHandler_)) onCorruptionWithAndroidDatabaseSqliteSQLiteDatabase:self];
-}
-
-- (AndroidDatabaseSqliteSQLiteSession *)getThreadSession {
-  return [((JavaLangThreadLocal *) nil_chk(mThreadSession_)) get];
-}
-
-- (AndroidDatabaseSqliteSQLiteSession *)createSession {
-  AndroidDatabaseSqliteSQLiteConnectionPool *pool;
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    pool = mConnectionPoolLocked_;
-  }
-  return create_AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(pool);
-}
-
-- (jint)getThreadDefaultConnectionFlagsWithBoolean:(jboolean)readOnly {
-  jint flags = readOnly ? AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_READ_ONLY : AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_PRIMARY_CONNECTION_AFFINITY;
-  if (AndroidDatabaseSqliteSQLiteDatabase_isMainThread()) {
-    flags |= AndroidDatabaseSqliteSQLiteConnectionPool_CONNECTION_FLAG_INTERACTIVE;
-  }
-  return flags;
-}
-
-+ (jboolean)isMainThread {
-  return AndroidDatabaseSqliteSQLiteDatabase_isMainThread();
-}
-
-- (void)beginTransaction {
-  AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(self, nil, true);
-}
-
-- (void)beginTransactionNonExclusive {
-  AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(self, nil, false);
-}
-
-- (void)beginTransactionWithListenerWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener {
-  AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(self, transactionListener, true);
-}
-
-- (void)beginTransactionWithListenerNonExclusiveWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener {
-  AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(self, transactionListener, false);
-}
-
-- (void)beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener
-                                                               withBoolean:(jboolean)exclusive {
-  AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(self, transactionListener, exclusive);
-}
-
-- (void)endTransaction {
-  [self acquireReference];
-  @try {
-    [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getThreadSession])) endTransaction];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (void)setTransactionSuccessful {
-  [self acquireReference];
-  @try {
-    [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getThreadSession])) setTransactionSuccessful];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)inTransaction {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getThreadSession])) hasTransaction];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)isDbLockedByCurrentThread {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getThreadSession])) hasConnection];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)isDbLockedByOtherThreads {
-  return false;
-}
-
-- (jboolean)yieldIfContended {
-  return AndroidDatabaseSqliteSQLiteDatabase_yieldIfContendedHelperWithBoolean_withLong_(self, false, -1);
-}
-
-- (jboolean)yieldIfContendedSafely {
-  return AndroidDatabaseSqliteSQLiteDatabase_yieldIfContendedHelperWithBoolean_withLong_(self, true, -1);
-}
-
-- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay {
-  return AndroidDatabaseSqliteSQLiteDatabase_yieldIfContendedHelperWithBoolean_withLong_(self, true, sleepAfterYieldDelay);
-}
-
-- (jboolean)yieldIfContendedHelperWithBoolean:(jboolean)throwIfUnsafe
-                                     withLong:(jlong)sleepAfterYieldDelay {
-  return AndroidDatabaseSqliteSQLiteDatabase_yieldIfContendedHelperWithBoolean_withLong_(self, throwIfUnsafe, sleepAfterYieldDelay);
-}
-
-- (id<JavaUtilMap>)getSyncedTables {
-  return create_JavaUtilHashMap_initWithInt_(0);
-}
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openDatabaseWithNSString:(NSString *)path
-            withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                          withInt:(jint)flags {
-  return AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(path, factory, flags);
-}
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openDatabaseWithNSString:(NSString *)path
-            withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                          withInt:(jint)flags
-                          withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
-  return AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(path, factory, flags, errorHandler);
-}
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithJavaIoFile:(JavaIoFile *)file
-                      withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
-  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithJavaIoFile_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(file, factory);
-}
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)path
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
-  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(path, factory);
-}
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)path
-                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
-  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(path, factory, errorHandler);
-}
-
-+ (jboolean)deleteDatabaseWithJavaIoFile:(JavaIoFile *)file {
-  return AndroidDatabaseSqliteSQLiteDatabase_deleteDatabaseWithJavaIoFile_(file);
-}
-
-- (void)reopenReadWrite {
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    if (!AndroidDatabaseSqliteSQLiteDatabase_isReadOnlyLocked(self)) {
-      return;
-    }
-    jint oldOpenFlags = ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->openFlags_;
-    mConfigurationLocked_->openFlags_ = (mConfigurationLocked_->openFlags_ & ~AndroidDatabaseSqliteSQLiteDatabase_OPEN_READ_MASK) | AndroidDatabaseSqliteSQLiteDatabase_OPEN_READWRITE;
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      mConfigurationLocked_->openFlags_ = oldOpenFlags;
-      @throw ex;
-    }
-  }
-}
-
-- (void)open {
-  AndroidDatabaseSqliteSQLiteDatabase_open(self);
-}
-
-- (void)openInner {
-  AndroidDatabaseSqliteSQLiteDatabase_openInner(self);
-}
-
-+ (AndroidDatabaseSqliteSQLiteDatabase *)createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
-  return AndroidDatabaseSqliteSQLiteDatabase_createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(factory);
-}
-
-- (void)addCustomFunctionWithNSString:(NSString *)name
-                              withInt:(jint)numArgs
-withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:(id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)function {
-  AndroidDatabaseSqliteSQLiteCustomFunction *wrapper = create_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(name, numArgs, function);
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    [((JavaUtilArrayList *) nil_chk(((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->customFunctions_)) addWithId:wrapper];
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      [mConfigurationLocked_->customFunctions_ removeWithId:wrapper];
-      @throw ex;
-    }
-  }
-}
-
-- (jint)getVersion {
-  return [JavaLangLong_valueOfWithLong_(AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(self, @"PRAGMA user_version;", nil)) intValue];
-}
-
-- (void)setVersionWithInt:(jint)version_ {
-  [self execSQLWithNSString:JreStrcat("$I", @"PRAGMA user_version = ", version_)];
-}
-
-- (jlong)getMaximumSize {
-  jlong pageCount = AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(self, @"PRAGMA max_page_count;", nil);
-  return pageCount * [self getPageSize];
-}
-
-- (jlong)setMaximumSizeWithLong:(jlong)numBytes {
-  jlong pageSize = [self getPageSize];
-  jlong numPages = numBytes / pageSize;
-  if ((numBytes % pageSize) != 0) {
-    numPages++;
-  }
-  jlong newPageCount = AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(self, JreStrcat("$J", @"PRAGMA max_page_count = ", numPages), nil);
-  return newPageCount * pageSize;
-}
-
-- (jlong)getPageSize {
-  return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(self, @"PRAGMA page_size;", nil);
-}
-
-- (void)setPageSizeWithLong:(jlong)numBytes {
-  [self execSQLWithNSString:JreStrcat("$J", @"PRAGMA page_size = ", numBytes)];
-}
-
-- (void)markTableSyncableWithNSString:(NSString *)table
-                         withNSString:(NSString *)deletedTable {
-}
-
-- (void)markTableSyncableWithNSString:(NSString *)table
-                         withNSString:(NSString *)foreignKey
-                         withNSString:(NSString *)updateTable {
-}
-
-+ (NSString *)findEditTableWithNSString:(NSString *)tables {
-  return AndroidDatabaseSqliteSQLiteDatabase_findEditTableWithNSString_(tables);
-}
-
-- (AndroidDatabaseSqliteSQLiteStatement *)compileStatementWithNSString:(NSString *)sql {
-  [self acquireReference];
-  @try {
-    return create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, sql, nil);
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (id<AndroidDatabaseCursor>)queryWithBoolean:(jboolean)distinct
-                                 withNSString:(NSString *)table
-                            withNSStringArray:(IOSObjectArray *)columns
-                                 withNSString:(NSString *)selection
-                            withNSStringArray:(IOSObjectArray *)selectionArgs
-                                 withNSString:(NSString *)groupBy
-                                 withNSString:(NSString *)having
-                                 withNSString:(NSString *)orderBy
-                                 withNSString:(NSString *)limit {
-  return [self queryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:nil withBoolean:distinct withNSString:table withNSStringArray:columns withNSString:selection withNSStringArray:selectionArgs withNSString:groupBy withNSString:having withNSString:orderBy withNSString:limit];
-}
-
-- (id<AndroidDatabaseCursor>)queryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
-                                                                                       withBoolean:(jboolean)distinct
-                                                                                      withNSString:(NSString *)table
-                                                                                 withNSStringArray:(IOSObjectArray *)columns
-                                                                                      withNSString:(NSString *)selection
-                                                                                 withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                                                      withNSString:(NSString *)groupBy
-                                                                                      withNSString:(NSString *)having
-                                                                                      withNSString:(NSString *)orderBy
-                                                                                      withNSString:(NSString *)limit {
-  [self acquireReference];
-  @try {
-    NSString *sql = AndroidDatabaseSqliteSQLiteQueryBuilder_buildQueryStringWithBoolean_withNSString_withNSStringArray_withNSString_withNSString_withNSString_withNSString_withNSString_(distinct, table, columns, selection, groupBy, having, orderBy, limit);
-    return [self rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:cursorFactory withNSString:sql withNSStringArray:selectionArgs withNSString:AndroidDatabaseSqliteSQLiteDatabase_findEditTableWithNSString_(table)];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (id<AndroidDatabaseCursor>)queryWithNSString:(NSString *)table
-                             withNSStringArray:(IOSObjectArray *)columns
-                                  withNSString:(NSString *)selection
-                             withNSStringArray:(IOSObjectArray *)selectionArgs
-                                  withNSString:(NSString *)groupBy
-                                  withNSString:(NSString *)having
-                                  withNSString:(NSString *)orderBy {
-  return [self queryWithBoolean:false withNSString:table withNSStringArray:columns withNSString:selection withNSStringArray:selectionArgs withNSString:groupBy withNSString:having withNSString:orderBy withNSString:nil];
-}
-
-- (id<AndroidDatabaseCursor>)queryWithNSString:(NSString *)table
-                             withNSStringArray:(IOSObjectArray *)columns
-                                  withNSString:(NSString *)selection
-                             withNSStringArray:(IOSObjectArray *)selectionArgs
-                                  withNSString:(NSString *)groupBy
-                                  withNSString:(NSString *)having
-                                  withNSString:(NSString *)orderBy
-                                  withNSString:(NSString *)limit {
-  return [self queryWithBoolean:false withNSString:table withNSStringArray:columns withNSString:selection withNSStringArray:selectionArgs withNSString:groupBy withNSString:having withNSString:orderBy withNSString:limit];
-}
-
-- (id<AndroidDatabaseCursor>)rawQueryWithNSString:(NSString *)sql
-                                withNSStringArray:(IOSObjectArray *)selectionArgs {
-  return [self rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:nil withNSString:sql withNSStringArray:selectionArgs withNSString:nil];
-}
-
-- (id<AndroidDatabaseCursor>)rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)cursorFactory
-                                                                                         withNSString:(NSString *)sql
-                                                                                    withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                                                         withNSString:(NSString *)editTable {
-  [self acquireReference];
-  @try {
-    id<AndroidDatabaseSqliteSQLiteCursorDriver> driver = create_AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(self, sql, editTable);
-    return [driver queryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:cursorFactory != nil ? cursorFactory : mCursorFactory_ withNSStringArray:selectionArgs];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jlong)insertWithNSString:(NSString *)table
-               withNSString:(NSString *)nullColumnHack
-withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  @try {
-    return [self insertWithOnConflictWithNSString:table withNSString:nullColumnHack withAndroidContentContentValues:values withInt:AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_NONE];
-  }
-  @catch (AndroidDatabaseSQLException *e) {
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteDatabase_TAG, JreStrcat("$@", @"Error inserting ", values), e);
-    return -1;
-  }
-}
-
-- (jlong)insertOrThrowWithNSString:(NSString *)table
-                      withNSString:(NSString *)nullColumnHack
-   withAndroidContentContentValues:(AndroidContentContentValues *)values {
-  return [self insertWithOnConflictWithNSString:table withNSString:nullColumnHack withAndroidContentContentValues:values withInt:AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_NONE];
-}
-
-- (jlong)replaceWithNSString:(NSString *)table
-                withNSString:(NSString *)nullColumnHack
-withAndroidContentContentValues:(AndroidContentContentValues *)initialValues {
-  @try {
-    return [self insertWithOnConflictWithNSString:table withNSString:nullColumnHack withAndroidContentContentValues:initialValues withInt:AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_REPLACE];
-  }
-  @catch (AndroidDatabaseSQLException *e) {
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteDatabase_TAG, JreStrcat("$@", @"Error inserting ", initialValues), e);
-    return -1;
-  }
-}
-
-- (jlong)replaceOrThrowWithNSString:(NSString *)table
-                       withNSString:(NSString *)nullColumnHack
-    withAndroidContentContentValues:(AndroidContentContentValues *)initialValues {
-  return [self insertWithOnConflictWithNSString:table withNSString:nullColumnHack withAndroidContentContentValues:initialValues withInt:AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_REPLACE];
-}
-
-- (jlong)insertWithOnConflictWithNSString:(NSString *)table
-                             withNSString:(NSString *)nullColumnHack
-          withAndroidContentContentValues:(AndroidContentContentValues *)initialValues
-                                  withInt:(jint)conflictAlgorithm {
-  [self acquireReference];
-  @try {
-    JavaLangStringBuilder *sql = create_JavaLangStringBuilder_init();
-    [sql appendWithNSString:@"INSERT"];
-    [sql appendWithNSString:IOSObjectArray_Get(nil_chk(AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_VALUES), conflictAlgorithm)];
-    [sql appendWithNSString:@" INTO "];
-    [sql appendWithNSString:table];
-    [sql appendWithChar:'('];
-    IOSObjectArray *bindArgs = nil;
-    jint size = (initialValues != nil && [initialValues size] > 0) ? [((AndroidContentContentValues *) nil_chk(initialValues)) size] : 0;
-    if (size > 0) {
-      bindArgs = [IOSObjectArray arrayWithLength:size type:NSObject_class_()];
-      jint i = 0;
-      for (NSString * __strong colName in nil_chk([((AndroidContentContentValues *) nil_chk(initialValues)) keySet])) {
-        [sql appendWithNSString:(i > 0) ? @"," : @""];
-        [sql appendWithNSString:colName];
-        IOSObjectArray_Set(bindArgs, i++, [initialValues getWithNSString:colName]);
-      }
-      [sql appendWithChar:')'];
-      [sql appendWithNSString:@" VALUES ("];
-      for (i = 0; i < size; i++) {
-        [sql appendWithNSString:(i > 0) ? @",?" : @"?"];
-      }
-    }
-    else {
-      [sql appendWithNSString:JreStrcat("$$", nullColumnHack, @") VALUES (NULL")];
-    }
-    [sql appendWithChar:')'];
-    AndroidDatabaseSqliteSQLiteStatement *statement = create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, [sql description], bindArgs);
-    @try {
-      return [statement executeInsert];
-    }
-    @finally {
-      [statement close];
-    }
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jint)delete__WithNSString:(NSString *)table
-                withNSString:(NSString *)whereClause
-           withNSStringArray:(IOSObjectArray *)whereArgs {
-  [self acquireReference];
-  @try {
-    AndroidDatabaseSqliteSQLiteStatement *statement = create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, JreStrcat("$$$", @"DELETE FROM ", table, (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(whereClause) ? JreStrcat("$$", @" WHERE ", whereClause) : @"")), whereArgs);
-    @try {
-      return [statement executeUpdateDelete];
-    }
-    @finally {
-      [statement close];
-    }
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jint)updateWithNSString:(NSString *)table
-withAndroidContentContentValues:(AndroidContentContentValues *)values
-              withNSString:(NSString *)whereClause
-         withNSStringArray:(IOSObjectArray *)whereArgs {
-  return [self updateWithOnConflictWithNSString:table withAndroidContentContentValues:values withNSString:whereClause withNSStringArray:whereArgs withInt:AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_NONE];
-}
-
-- (jint)updateWithOnConflictWithNSString:(NSString *)table
-         withAndroidContentContentValues:(AndroidContentContentValues *)values
-                            withNSString:(NSString *)whereClause
-                       withNSStringArray:(IOSObjectArray *)whereArgs
-                                 withInt:(jint)conflictAlgorithm {
-  if (values == nil || [values size] == 0) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Empty values");
-  }
-  [self acquireReference];
-  @try {
-    JavaLangStringBuilder *sql = create_JavaLangStringBuilder_initWithInt_(120);
-    [sql appendWithNSString:@"UPDATE "];
-    [sql appendWithNSString:IOSObjectArray_Get(nil_chk(AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_VALUES), conflictAlgorithm)];
-    [sql appendWithNSString:table];
-    [sql appendWithNSString:@" SET "];
-    jint setValuesSize = [values size];
-    jint bindArgsSize = (whereArgs == nil) ? setValuesSize : (setValuesSize + ((IOSObjectArray *) nil_chk(whereArgs))->size_);
-    IOSObjectArray *bindArgs = [IOSObjectArray arrayWithLength:bindArgsSize type:NSObject_class_()];
-    jint i = 0;
-    for (NSString * __strong colName in nil_chk([values keySet])) {
-      [sql appendWithNSString:(i > 0) ? @"," : @""];
-      [sql appendWithNSString:colName];
-      IOSObjectArray_Set(bindArgs, i++, [values getWithNSString:colName]);
-      [sql appendWithNSString:@"=?"];
-    }
-    if (whereArgs != nil) {
-      for (i = setValuesSize; i < bindArgsSize; i++) {
-        IOSObjectArray_Set(bindArgs, i, IOSObjectArray_Get(whereArgs, i - setValuesSize));
-      }
-    }
-    if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(whereClause)) {
-      [sql appendWithNSString:@" WHERE "];
-      [sql appendWithNSString:whereClause];
-    }
-    AndroidDatabaseSqliteSQLiteStatement *statement = create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, [sql description], bindArgs);
-    @try {
-      return [statement executeUpdateDelete];
-    }
-    @finally {
-      [statement close];
-    }
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (void)execSQLWithNSString:(NSString *)sql {
-  AndroidDatabaseSqliteSQLiteDatabase_executeSqlWithNSString_withNSObjectArray_(self, sql, nil);
-}
-
-- (void)execSQLWithNSString:(NSString *)sql
-          withNSObjectArray:(IOSObjectArray *)bindArgs {
-  if (bindArgs == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Empty bindArgs");
-  }
-  AndroidDatabaseSqliteSQLiteDatabase_executeSqlWithNSString_withNSObjectArray_(self, sql, bindArgs);
-}
-
-- (jint)executeSqlWithNSString:(NSString *)sql
-             withNSObjectArray:(IOSObjectArray *)bindArgs {
-  return AndroidDatabaseSqliteSQLiteDatabase_executeSqlWithNSString_withNSObjectArray_(self, sql, bindArgs);
-}
-
-- (jboolean)isReadOnly {
-  @synchronized(mLock_) {
-    return AndroidDatabaseSqliteSQLiteDatabase_isReadOnlyLocked(self);
-  }
-}
-
-- (jboolean)isReadOnlyLocked {
-  return AndroidDatabaseSqliteSQLiteDatabase_isReadOnlyLocked(self);
-}
-
-- (jboolean)isInMemoryDatabase {
-  @synchronized(mLock_) {
-    return [((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_)) isInMemoryDb];
-  }
-}
-
-- (jboolean)isOpen {
-  @synchronized(mLock_) {
-    return mConnectionPoolLocked_ != nil;
-  }
-}
-
-- (jboolean)needUpgradeWithInt:(jint)newVersion {
-  return newVersion > [self getVersion];
-}
-
-- (NSString *)getPath {
-  return AndroidDatabaseSqliteSQLiteDatabase_getPath(self);
-}
-
-- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale {
-  if (locale == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"locale must not be null.");
-  }
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    JavaUtilLocale *oldLocale = ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->locale_;
-    JreStrongAssign(&mConfigurationLocked_->locale_, locale);
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      JreStrongAssign(&mConfigurationLocked_->locale_, oldLocale);
-      @throw ex;
-    }
-  }
-}
-
-- (void)setMaxSqlCacheSizeWithInt:(jint)cacheSize {
-  if (cacheSize > AndroidDatabaseSqliteSQLiteDatabase_MAX_SQL_CACHE_SIZE || cacheSize < 0) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"expected value between 0 and ", AndroidDatabaseSqliteSQLiteDatabase_MAX_SQL_CACHE_SIZE));
-  }
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    jint oldMaxSqlCacheSize = ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->maxSqlCacheSize_;
-    mConfigurationLocked_->maxSqlCacheSize_ = cacheSize;
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      mConfigurationLocked_->maxSqlCacheSize_ = oldMaxSqlCacheSize;
-      @throw ex;
-    }
-  }
-}
-
-- (void)setForeignKeyConstraintsEnabledWithBoolean:(jboolean)enable {
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    if (((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->foreignKeyConstraintsEnabled_ == enable) {
-      return;
-    }
-    mConfigurationLocked_->foreignKeyConstraintsEnabled_ = enable;
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      mConfigurationLocked_->foreignKeyConstraintsEnabled_ = !enable;
-      @throw ex;
-    }
-  }
-}
-
-- (jboolean)enableWriteAheadLogging {
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    if ((((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) != 0) {
-      return true;
-    }
-    if (AndroidDatabaseSqliteSQLiteDatabase_isReadOnlyLocked(self)) {
-      return false;
-    }
-    if ([mConfigurationLocked_ isInMemoryDb]) {
-      AndroidUtilLog_iWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase_TAG, @"can't enable WAL for memory databases.");
-      return false;
-    }
-    if (mHasAttachedDbsLocked_) {
-      if (AndroidUtilLog_isLoggableWithNSString_withInt_(AndroidDatabaseSqliteSQLiteDatabase_TAG, AndroidUtilLog_DEBUG)) {
-        AndroidUtilLog_dWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase_TAG, JreStrcat("$$$", @"this database: ", mConfigurationLocked_->label_, @" has attached databases. can't  enable WAL."));
-      }
-      return false;
-    }
-    mConfigurationLocked_->openFlags_ |= AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING;
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      mConfigurationLocked_->openFlags_ &= ~AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING;
-      @throw ex;
-    }
-  }
-  return true;
-}
-
-- (void)disableWriteAheadLogging {
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    if ((((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) == 0) {
-      return;
-    }
-    mConfigurationLocked_->openFlags_ &= ~AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING;
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(mConnectionPoolLocked_)) reconfigureWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:mConfigurationLocked_];
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      mConfigurationLocked_->openFlags_ |= AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING;
-      @throw ex;
-    }
-  }
-}
-
-- (jboolean)isWriteAheadLoggingEnabled {
-  @synchronized(mLock_) {
-    AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-    return (((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING) != 0;
-  }
-}
-
-+ (JavaUtilArrayList *)getDbStats {
-  return AndroidDatabaseSqliteSQLiteDatabase_getDbStats();
-}
-
-- (void)collectDbStatsWithJavaUtilArrayList:(JavaUtilArrayList *)dbStatsList {
-  AndroidDatabaseSqliteSQLiteDatabase_collectDbStatsWithJavaUtilArrayList_(self, dbStatsList);
-}
-
-+ (JavaUtilArrayList *)getActiveDatabases {
-  return AndroidDatabaseSqliteSQLiteDatabase_getActiveDatabases();
-}
-
-+ (void)dumpAllWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                          withBoolean:(jboolean)verbose {
-  AndroidDatabaseSqliteSQLiteDatabase_dumpAllWithAndroidUtilPrinter_withBoolean_(printer, verbose);
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                       withBoolean:(jboolean)verbose {
-  AndroidDatabaseSqliteSQLiteDatabase_dumpWithAndroidUtilPrinter_withBoolean_(self, printer, verbose);
-}
-
-- (id<JavaUtilList>)getAttachedDbs {
-  JavaUtilArrayList *attachedDbs = create_JavaUtilArrayList_init();
-  @synchronized(mLock_) {
-    if (mConnectionPoolLocked_ == nil) {
-      return nil;
-    }
-    if (!mHasAttachedDbsLocked_) {
-      [attachedDbs addWithId:create_AndroidUtilPair_initWithId_withId_(@"main", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(mConfigurationLocked_))->path_)];
-      return attachedDbs;
-    }
-    [self acquireReference];
-  }
-  @try {
-    id<AndroidDatabaseCursor> c = nil;
-    @try {
-      c = [self rawQueryWithNSString:@"pragma database_list;" withNSStringArray:nil];
-      while ([((id<AndroidDatabaseCursor>) nil_chk(c)) moveToNext]) {
-        [attachedDbs addWithId:create_AndroidUtilPair_initWithId_withId_([c getStringWithInt:1], [c getStringWithInt:2])];
-      }
-    }
-    @finally {
-      if (c != nil) {
-        [c close];
-      }
-    }
-    return attachedDbs;
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jboolean)isDatabaseIntegrityOk {
-  [self acquireReference];
-  @try {
-    id<JavaUtilList> attachedDbs = nil;
-    @try {
-      attachedDbs = [self getAttachedDbs];
-      if (attachedDbs == nil) {
-        @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"databaselist for: ", AndroidDatabaseSqliteSQLiteDatabase_getPath(self), @" couldn't be retrieved. probably because the database is closed"));
-      }
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *e) {
-      attachedDbs = create_JavaUtilArrayList_init();
-      [attachedDbs addWithId:create_AndroidUtilPair_initWithId_withId_(@"main", AndroidDatabaseSqliteSQLiteDatabase_getPath(self))];
-    }
-    for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(attachedDbs)) size]; i++) {
-      AndroidUtilPair *p = [attachedDbs getWithInt:i];
-      AndroidDatabaseSqliteSQLiteStatement *prog = nil;
-      @try {
-        prog = [self compileStatementWithNSString:JreStrcat("$$$", @"PRAGMA ", ((AndroidUtilPair *) nil_chk(p))->first_, @".integrity_check(1);")];
-        NSString *rslt = [((AndroidDatabaseSqliteSQLiteStatement *) nil_chk(prog)) simpleQueryForString];
-        if (![((NSString *) nil_chk(rslt)) java_equalsIgnoreCase:@"ok"]) {
-          AndroidUtilLog_eWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase_TAG, JreStrcat("$$$$", @"PRAGMA integrity_check on ", p->second_, @" returned: ", rslt));
-          return false;
-        }
-      }
-      @finally {
-        if (prog != nil) [prog close];
-      }
-    }
-  }
-  @finally {
-    [self releaseReference];
-  }
-  return true;
-}
-
-- (NSString *)description {
-  return JreStrcat("$$", @"SQLiteDatabase: ", AndroidDatabaseSqliteSQLiteDatabase_getPath(self));
-}
-
-- (void)throwIfNotOpenLocked {
-  AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(self);
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidDatabaseSqliteSQLiteDatabase class]);
-  RELEASE_(mThreadSession_);
-  RELEASE_(mCursorFactory_);
-  RELEASE_(mErrorHandler_);
-  RELEASE_(mLock_);
-  RELEASE_(mCloseGuardLocked_);
-  RELEASE_(mConfigurationLocked_);
-  RELEASE_(mConnectionPoolLocked_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 1, -1, 2, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, 6, -1 },
-    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteSession;", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteSession;", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x0, 7, 4, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, 13, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, 14, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 15, 16, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, 17, 18, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 19, 20, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x9, 21, 22, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x9, 21, 23, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x9, 24, 25, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x9, 24, 26, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x9, 24, 27, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 28, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x9, 30, 31, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 32, 33, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 34, 35, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 36, 16, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 37, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 38, 39, -1, -1, 40, -1 },
-    { NULL, "V", 0x1, 38, 41, -1, -1, 42, -1 },
-    { NULL, "LNSString;", 0x9, 43, 44, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteStatement;", 0x1, 45, 44, 46, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 47, 48, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 49, 50, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 47, 51, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 47, 52, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 53, 54, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 55, 56, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 57, 58, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 59, 58, 46, -1, -1, -1 },
-    { NULL, "J", 0x1, 60, 58, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 61, 58, 46, -1, -1, -1 },
-    { NULL, "J", 0x1, 62, 63, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 64, 65, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 66, 67, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 68, 69, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 70, 44, 46, -1, -1, -1 },
-    { NULL, "V", 0x1, 70, 71, 46, -1, -1, -1 },
-    { NULL, "I", 0x2, 72, 71, 46, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 73, 35, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 74, 75, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 76, 35, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 77, 4, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x8, -1, -1, -1, 78, -1, -1 },
-    { NULL, "V", 0x2, 79, 80, -1, 81, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0xa, -1, -1, -1, 82, -1, -1 },
-    { NULL, "V", 0x8, 83, 84, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 85, 84, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 86, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 87, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withAndroidDatabaseDatabaseErrorHandler:);
-  methods[1].selector = @selector(java_finalize);
-  methods[2].selector = @selector(onAllReferencesReleased);
-  methods[3].selector = @selector(disposeWithBoolean:);
-  methods[4].selector = @selector(releaseMemory);
-  methods[5].selector = @selector(setLockingEnabledWithBoolean:);
-  methods[6].selector = @selector(getLabel);
-  methods[7].selector = @selector(onCorruption);
-  methods[8].selector = @selector(getThreadSession);
-  methods[9].selector = @selector(createSession);
-  methods[10].selector = @selector(getThreadDefaultConnectionFlagsWithBoolean:);
-  methods[11].selector = @selector(isMainThread);
-  methods[12].selector = @selector(beginTransaction);
-  methods[13].selector = @selector(beginTransactionNonExclusive);
-  methods[14].selector = @selector(beginTransactionWithListenerWithAndroidDatabaseSqliteSQLiteTransactionListener:);
-  methods[15].selector = @selector(beginTransactionWithListenerNonExclusiveWithAndroidDatabaseSqliteSQLiteTransactionListener:);
-  methods[16].selector = @selector(beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener:withBoolean:);
-  methods[17].selector = @selector(endTransaction);
-  methods[18].selector = @selector(setTransactionSuccessful);
-  methods[19].selector = @selector(inTransaction);
-  methods[20].selector = @selector(isDbLockedByCurrentThread);
-  methods[21].selector = @selector(isDbLockedByOtherThreads);
-  methods[22].selector = @selector(yieldIfContended);
-  methods[23].selector = @selector(yieldIfContendedSafely);
-  methods[24].selector = @selector(yieldIfContendedSafelyWithLong:);
-  methods[25].selector = @selector(yieldIfContendedHelperWithBoolean:withLong:);
-  methods[26].selector = @selector(getSyncedTables);
-  methods[27].selector = @selector(openDatabaseWithNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:);
-  methods[28].selector = @selector(openDatabaseWithNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:withAndroidDatabaseDatabaseErrorHandler:);
-  methods[29].selector = @selector(openOrCreateDatabaseWithJavaIoFile:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
-  methods[30].selector = @selector(openOrCreateDatabaseWithNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
-  methods[31].selector = @selector(openOrCreateDatabaseWithNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withAndroidDatabaseDatabaseErrorHandler:);
-  methods[32].selector = @selector(deleteDatabaseWithJavaIoFile:);
-  methods[33].selector = @selector(reopenReadWrite);
-  methods[34].selector = @selector(open);
-  methods[35].selector = @selector(openInner);
-  methods[36].selector = @selector(createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
-  methods[37].selector = @selector(addCustomFunctionWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:);
-  methods[38].selector = @selector(getVersion);
-  methods[39].selector = @selector(setVersionWithInt:);
-  methods[40].selector = @selector(getMaximumSize);
-  methods[41].selector = @selector(setMaximumSizeWithLong:);
-  methods[42].selector = @selector(getPageSize);
-  methods[43].selector = @selector(setPageSizeWithLong:);
-  methods[44].selector = @selector(markTableSyncableWithNSString:withNSString:);
-  methods[45].selector = @selector(markTableSyncableWithNSString:withNSString:withNSString:);
-  methods[46].selector = @selector(findEditTableWithNSString:);
-  methods[47].selector = @selector(compileStatementWithNSString:);
-  methods[48].selector = @selector(queryWithBoolean:withNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
-  methods[49].selector = @selector(queryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withBoolean:withNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
-  methods[50].selector = @selector(queryWithNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:);
-  methods[51].selector = @selector(queryWithNSString:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
-  methods[52].selector = @selector(rawQueryWithNSString:withNSStringArray:);
-  methods[53].selector = @selector(rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withNSString:withNSStringArray:withNSString:);
-  methods[54].selector = @selector(insertWithNSString:withNSString:withAndroidContentContentValues:);
-  methods[55].selector = @selector(insertOrThrowWithNSString:withNSString:withAndroidContentContentValues:);
-  methods[56].selector = @selector(replaceWithNSString:withNSString:withAndroidContentContentValues:);
-  methods[57].selector = @selector(replaceOrThrowWithNSString:withNSString:withAndroidContentContentValues:);
-  methods[58].selector = @selector(insertWithOnConflictWithNSString:withNSString:withAndroidContentContentValues:withInt:);
-  methods[59].selector = @selector(delete__WithNSString:withNSString:withNSStringArray:);
-  methods[60].selector = @selector(updateWithNSString:withAndroidContentContentValues:withNSString:withNSStringArray:);
-  methods[61].selector = @selector(updateWithOnConflictWithNSString:withAndroidContentContentValues:withNSString:withNSStringArray:withInt:);
-  methods[62].selector = @selector(execSQLWithNSString:);
-  methods[63].selector = @selector(execSQLWithNSString:withNSObjectArray:);
-  methods[64].selector = @selector(executeSqlWithNSString:withNSObjectArray:);
-  methods[65].selector = @selector(isReadOnly);
-  methods[66].selector = @selector(isReadOnlyLocked);
-  methods[67].selector = @selector(isInMemoryDatabase);
-  methods[68].selector = @selector(isOpen);
-  methods[69].selector = @selector(needUpgradeWithInt:);
-  methods[70].selector = @selector(getPath);
-  methods[71].selector = @selector(setLocaleWithJavaUtilLocale:);
-  methods[72].selector = @selector(setMaxSqlCacheSizeWithInt:);
-  methods[73].selector = @selector(setForeignKeyConstraintsEnabledWithBoolean:);
-  methods[74].selector = @selector(enableWriteAheadLogging);
-  methods[75].selector = @selector(disableWriteAheadLogging);
-  methods[76].selector = @selector(isWriteAheadLoggingEnabled);
-  methods[77].selector = @selector(getDbStats);
-  methods[78].selector = @selector(collectDbStatsWithJavaUtilArrayList:);
-  methods[79].selector = @selector(getActiveDatabases);
-  methods[80].selector = @selector(dumpAllWithAndroidUtilPrinter:withBoolean:);
-  methods[81].selector = @selector(dumpWithAndroidUtilPrinter:withBoolean:);
-  methods[82].selector = @selector(getAttachedDbs);
-  methods[83].selector = @selector(isDatabaseIntegrityOk);
-  methods[84].selector = @selector(description);
-  methods[85].selector = @selector(throwIfNotOpenLocked);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 88, -1, -1 },
-    { "EVENT_DB_CORRUPT", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_EVENT_DB_CORRUPT, 0x1a, -1, -1, -1, -1 },
-    { "sActiveDatabases", "LJavaUtilWeakHashMap;", .constantValue.asLong = 0, 0xa, -1, 89, 90, -1 },
-    { "mThreadSession_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x12, -1, -1, 91, -1 },
-    { "mCursorFactory_", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mErrorHandler_", "LAndroidDatabaseDatabaseErrorHandler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mCloseGuardLocked_", "LDalvikSystemCloseGuard;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConfigurationLocked_", "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConnectionPoolLocked_", "LAndroidDatabaseSqliteSQLiteConnectionPool;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mHasAttachedDbsLocked_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "CONFLICT_ROLLBACK", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_ROLLBACK, 0x19, -1, -1, -1, -1 },
-    { "CONFLICT_ABORT", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_ABORT, 0x19, -1, -1, -1, -1 },
-    { "CONFLICT_FAIL", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_FAIL, 0x19, -1, -1, -1, -1 },
-    { "CONFLICT_IGNORE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_IGNORE, 0x19, -1, -1, -1, -1 },
-    { "CONFLICT_REPLACE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_REPLACE, 0x19, -1, -1, -1, -1 },
-    { "CONFLICT_NONE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_NONE, 0x19, -1, -1, -1, -1 },
-    { "CONFLICT_VALUES", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 92, -1, -1 },
-    { "SQLITE_MAX_LIKE_PATTERN_LENGTH", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_SQLITE_MAX_LIKE_PATTERN_LENGTH, 0x19, -1, -1, -1, -1 },
-    { "OPEN_READWRITE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_OPEN_READWRITE, 0x19, -1, -1, -1, -1 },
-    { "OPEN_READONLY", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_OPEN_READONLY, 0x19, -1, -1, -1, -1 },
-    { "OPEN_READ_MASK", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_OPEN_READ_MASK, 0x1a, -1, -1, -1, -1 },
-    { "NO_LOCALIZED_COLLATORS", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_NO_LOCALIZED_COLLATORS, 0x19, -1, -1, -1, -1 },
-    { "CREATE_IF_NECESSARY", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_CREATE_IF_NECESSARY, 0x19, -1, -1, -1, -1 },
-    { "ENABLE_WRITE_AHEAD_LOGGING", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_ENABLE_WRITE_AHEAD_LOGGING, 0x19, -1, -1, -1, -1 },
-    { "MAX_SQL_CACHE_SIZE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteDatabase_MAX_SQL_CACHE_SIZE, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LAndroidDatabaseDatabaseErrorHandler;", "finalize", "LNSException;", "dispose", "Z", "setLockingEnabled", (void *)&AndroidDatabaseSqliteSQLiteDatabase__Annotations$0, "getThreadDefaultConnectionFlags", "beginTransactionWithListener", "LAndroidDatabaseSqliteSQLiteTransactionListener;", "beginTransactionWithListenerNonExclusive", "beginTransaction", "LAndroidDatabaseSqliteSQLiteTransactionListener;Z", (void *)&AndroidDatabaseSqliteSQLiteDatabase__Annotations$1, (void *)&AndroidDatabaseSqliteSQLiteDatabase__Annotations$2, "yieldIfContendedSafely", "J", "yieldIfContendedHelper", "ZJ", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", (void *)&AndroidDatabaseSqliteSQLiteDatabase__Annotations$3, "openDatabase", "LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;I", "LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;ILAndroidDatabaseDatabaseErrorHandler;", "openOrCreateDatabase", "LJavaIoFile;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LAndroidDatabaseDatabaseErrorHandler;", "deleteDatabase", "LJavaIoFile;", "create", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "addCustomFunction", "LNSString;ILAndroidDatabaseSqliteSQLiteDatabase_CustomFunction;", "setVersion", "I", "setMaximumSize", "setPageSize", "markTableSyncable", "LNSString;LNSString;", (void *)&AndroidDatabaseSqliteSQLiteDatabase__Annotations$4, "LNSString;LNSString;LNSString;", (void *)&AndroidDatabaseSqliteSQLiteDatabase__Annotations$5, "findEditTable", "LNSString;", "compileStatement", "LAndroidDatabaseSQLException;", "query", "ZLNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "queryWithFactory", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;ZLNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "LNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;", "LNSString;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "rawQuery", "LNSString;[LNSString;", "rawQueryWithFactory", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LNSString;[LNSString;LNSString;", "insert", "LNSString;LNSString;LAndroidContentContentValues;", "insertOrThrow", "replace", "replaceOrThrow", "insertWithOnConflict", "LNSString;LNSString;LAndroidContentContentValues;I", "delete", "LNSString;LNSString;[LNSString;", "update", "LNSString;LAndroidContentContentValues;LNSString;[LNSString;", "updateWithOnConflict", "LNSString;LAndroidContentContentValues;LNSString;[LNSString;I", "execSQL", "LNSString;[LNSObject;", "executeSql", "needUpgrade", "setLocale", "LJavaUtilLocale;", "setMaxSqlCacheSize", "setForeignKeyConstraintsEnabled", "()Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteDebug$DbStats;>;", "collectDbStats", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteDebug$DbStats;>;)V", "()Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteDatabase;>;", "dumpAll", "LAndroidUtilPrinter;Z", "dump", "()Ljava/util/List<Landroid/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;", "toString", &AndroidDatabaseSqliteSQLiteDatabase_TAG, &AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases, "Ljava/util/WeakHashMap<Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/Object;>;", "Ljava/lang/ThreadLocal<Landroid/database/sqlite/SQLiteSession;>;", &AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_VALUES, "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;LAndroidDatabaseSqliteSQLiteDatabase_CustomFunction;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabase = { "SQLiteDatabase", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 86, 26, -1, 93, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabase;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteDatabase class]) {
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases, new_JavaUtilWeakHashMap_init());
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteDatabase_CONFLICT_VALUES, [IOSObjectArray newArrayWithObjects:(id[]){ @"", @" OR ROLLBACK ", @" OR ABORT ", @" OR FAIL ", @" OR IGNORE ", @" OR REPLACE " } count:6 type:NSString_class_()]);
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteDatabase)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(AndroidDatabaseSqliteSQLiteDatabase *self, NSString *path, jint openFlags, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> cursorFactory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
-  AndroidDatabaseSqliteSQLiteClosable_init(self);
-  JreStrongAssignAndConsume(&self->mThreadSession_, new_AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(self));
-  JreStrongAssignAndConsume(&self->mLock_, new_NSObject_init());
-  JreStrongAssign(&self->mCloseGuardLocked_, DalvikSystemCloseGuard_get());
-  JreStrongAssign(&self->mCursorFactory_, cursorFactory);
-  JreStrongAssign(&self->mErrorHandler_, errorHandler != nil ? errorHandler : create_AndroidDatabaseDefaultDatabaseErrorHandler_init());
-  JreStrongAssignAndConsume(&self->mConfigurationLocked_, new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(path, openFlags));
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *new_AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, jint openFlags, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> cursorFactory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabase, initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_, path, openFlags, cursorFactory, errorHandler)
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *create_AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, jint openFlags, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> cursorFactory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabase, initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_, path, openFlags, cursorFactory, errorHandler)
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_disposeWithBoolean_(AndroidDatabaseSqliteSQLiteDatabase *self, jboolean finalized) {
-  AndroidDatabaseSqliteSQLiteConnectionPool *pool;
-  @synchronized(self->mLock_) {
-    if (self->mCloseGuardLocked_ != nil) {
-      if (finalized) {
-        [self->mCloseGuardLocked_ warnIfOpen];
-      }
-      [self->mCloseGuardLocked_ close];
-    }
-    pool = self->mConnectionPoolLocked_;
-    JreStrongAssign(&self->mConnectionPoolLocked_, nil);
-  }
-  if (!finalized) {
-    @synchronized(AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases) {
-      [((JavaUtilWeakHashMap *) nil_chk(AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases)) removeWithId:self];
-    }
-    if (pool != nil) {
-      [pool close];
-    }
-  }
-}
-
-jint AndroidDatabaseSqliteSQLiteDatabase_releaseMemory() {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  return AndroidDatabaseSqliteSQLiteGlobal_releaseMemory();
-}
-
-jboolean AndroidDatabaseSqliteSQLiteDatabase_isMainThread() {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  AndroidOsLooper *looper = AndroidOsLooper_myLooper();
-  return looper != nil && looper == AndroidOsLooper_getMainLooper();
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_beginTransactionWithAndroidDatabaseSqliteSQLiteTransactionListener_withBoolean_(AndroidDatabaseSqliteSQLiteDatabase *self, id<AndroidDatabaseSqliteSQLiteTransactionListener> transactionListener, jboolean exclusive) {
-  [self acquireReference];
-  @try {
-    [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getThreadSession])) beginTransactionWithInt:exclusive ? AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_EXCLUSIVE : AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_IMMEDIATE withAndroidDatabaseSqliteSQLiteTransactionListener:transactionListener withInt:[self getThreadDefaultConnectionFlagsWithBoolean:false]];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-jboolean AndroidDatabaseSqliteSQLiteDatabase_yieldIfContendedHelperWithBoolean_withLong_(AndroidDatabaseSqliteSQLiteDatabase *self, jboolean throwIfUnsafe, jlong sleepAfterYieldDelay) {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getThreadSession])) yieldTransactionWithLong:sleepAfterYieldDelay withBoolean:throwIfUnsafe];
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint flags) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  return AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(path, factory, flags, nil);
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint flags, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  AndroidDatabaseSqliteSQLiteDatabase *db = create_AndroidDatabaseSqliteSQLiteDatabase_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(path, flags, factory, errorHandler);
-  AndroidDatabaseSqliteSQLiteDatabase_open(db);
-  return db;
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithJavaIoFile_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(JavaIoFile *file, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_([((JavaIoFile *) nil_chk(file)) getPath], factory);
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  return AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(path, factory, AndroidDatabaseSqliteSQLiteDatabase_CREATE_IF_NECESSARY, nil);
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_(NSString *path, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  return AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(path, factory, AndroidDatabaseSqliteSQLiteDatabase_CREATE_IF_NECESSARY, errorHandler);
-}
-
-jboolean AndroidDatabaseSqliteSQLiteDatabase_deleteDatabaseWithJavaIoFile_(JavaIoFile *file) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  if (file == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"file must not be null");
-  }
-  jboolean deleted = false;
-  deleted |= [file delete__];
-  deleted |= [create_JavaIoFile_initWithNSString_(JreStrcat("$$", [file getPath], @"-journal")) delete__];
-  deleted |= [create_JavaIoFile_initWithNSString_(JreStrcat("$$", [file getPath], @"-shm")) delete__];
-  deleted |= [create_JavaIoFile_initWithNSString_(JreStrcat("$$", [file getPath], @"-wal")) delete__];
-  JavaIoFile *dir = [file getParentFile];
-  if (dir != nil) {
-    NSString *prefix = JreStrcat("$$", [file getName], @"-mj");
-    IOSObjectArray *files = [dir listFilesWithJavaIoFileFilter:create_AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(prefix)];
-    if (files != nil) {
-      {
-        IOSObjectArray *a__ = files;
-        JavaIoFile * const *b__ = a__->buffer_;
-        JavaIoFile * const *e__ = b__ + a__->size_;
-        while (b__ < e__) {
-          JavaIoFile *masterJournal = *b__++;
-          deleted |= [((JavaIoFile *) nil_chk(masterJournal)) delete__];
-        }
-      }
-    }
-  }
-  return deleted;
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_open(AndroidDatabaseSqliteSQLiteDatabase *self) {
-  @try {
-    @try {
-      AndroidDatabaseSqliteSQLiteDatabase_openInner(self);
-    }
-    @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-      [self onCorruption];
-      AndroidDatabaseSqliteSQLiteDatabase_openInner(self);
-    }
-  }
-  @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-    AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteDatabase_TAG, JreStrcat("$$$", @"Failed to open database '", [self getLabel], @"'."), ex);
-    [self close];
-    @throw ex;
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_openInner(AndroidDatabaseSqliteSQLiteDatabase *self) {
-  @synchronized(self->mLock_) {
-    JreAssert((self->mConnectionPoolLocked_ == nil), (@"android/database/sqlite/SQLiteDatabase.java:802 condition failed: assert mConnectionPoolLocked == null;"));
-    JreStrongAssign(&self->mConnectionPoolLocked_, AndroidDatabaseSqliteSQLiteConnectionPool_openWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(self->mConfigurationLocked_));
-    [((DalvikSystemCloseGuard *) nil_chk(self->mCloseGuardLocked_)) openWithNSString:@"close"];
-  }
-  @synchronized(AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases) {
-    [((JavaUtilWeakHashMap *) nil_chk(AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases)) putWithId:self withId:nil];
-  }
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteDatabase_createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  return AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration_MEMORY_DB_PATH, factory, AndroidDatabaseSqliteSQLiteDatabase_CREATE_IF_NECESSARY);
-}
-
-NSString *AndroidDatabaseSqliteSQLiteDatabase_findEditTableWithNSString_(NSString *tables) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(tables)) {
-    jint spacepos = [((NSString *) nil_chk(tables)) java_indexOf:' '];
-    jint commapos = [tables java_indexOf:','];
-    if (spacepos > 0 && (spacepos < commapos || commapos < 0)) {
-      return [tables java_substring:0 endIndex:spacepos];
-    }
-    else if (commapos > 0 && (commapos < spacepos || spacepos < 0)) {
-      return [tables java_substring:0 endIndex:commapos];
-    }
-    return tables;
-  }
-  else {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Invalid tables");
-  }
-}
-
-jint AndroidDatabaseSqliteSQLiteDatabase_executeSqlWithNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *self, NSString *sql, IOSObjectArray *bindArgs) {
-  [self acquireReference];
-  @try {
-    if (AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(sql) == AndroidDatabaseDatabaseUtils_STATEMENT_ATTACH) {
-      jboolean disableWal = false;
-      @synchronized(self->mLock_) {
-        if (!self->mHasAttachedDbsLocked_) {
-          self->mHasAttachedDbsLocked_ = true;
-          disableWal = true;
-        }
-      }
-      if (disableWal) {
-        [self disableWriteAheadLogging];
-      }
-    }
-    AndroidDatabaseSqliteSQLiteStatement *statement = create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, sql, bindArgs);
-    @try {
-      return [statement executeUpdateDelete];
-    }
-    @finally {
-      [statement close];
-    }
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-jboolean AndroidDatabaseSqliteSQLiteDatabase_isReadOnlyLocked(AndroidDatabaseSqliteSQLiteDatabase *self) {
-  return (((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfigurationLocked_))->openFlags_ & AndroidDatabaseSqliteSQLiteDatabase_OPEN_READ_MASK) == AndroidDatabaseSqliteSQLiteDatabase_OPEN_READONLY;
-}
-
-NSString *AndroidDatabaseSqliteSQLiteDatabase_getPath(AndroidDatabaseSqliteSQLiteDatabase *self) {
-  @synchronized(self->mLock_) {
-    return ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfigurationLocked_))->path_;
-  }
-}
-
-JavaUtilArrayList *AndroidDatabaseSqliteSQLiteDatabase_getDbStats() {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  JavaUtilArrayList *dbStatsList = create_JavaUtilArrayList_init();
-  for (AndroidDatabaseSqliteSQLiteDatabase * __strong db in nil_chk(AndroidDatabaseSqliteSQLiteDatabase_getActiveDatabases())) {
-    AndroidDatabaseSqliteSQLiteDatabase_collectDbStatsWithJavaUtilArrayList_(nil_chk(db), dbStatsList);
-  }
-  return dbStatsList;
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_collectDbStatsWithJavaUtilArrayList_(AndroidDatabaseSqliteSQLiteDatabase *self, JavaUtilArrayList *dbStatsList) {
-  @synchronized(self->mLock_) {
-    if (self->mConnectionPoolLocked_ != nil) {
-      [self->mConnectionPoolLocked_ collectDbStatsWithJavaUtilArrayList:dbStatsList];
-    }
-  }
-}
-
-JavaUtilArrayList *AndroidDatabaseSqliteSQLiteDatabase_getActiveDatabases() {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  JavaUtilArrayList *databases = create_JavaUtilArrayList_init();
-  @synchronized(AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases) {
-    [databases addAllWithJavaUtilCollection:[((JavaUtilWeakHashMap *) nil_chk(AndroidDatabaseSqliteSQLiteDatabase_sActiveDatabases)) keySet]];
-  }
-  return databases;
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_dumpAllWithAndroidUtilPrinter_withBoolean_(id<AndroidUtilPrinter> printer, jboolean verbose) {
-  AndroidDatabaseSqliteSQLiteDatabase_initialize();
-  for (AndroidDatabaseSqliteSQLiteDatabase * __strong db in nil_chk(AndroidDatabaseSqliteSQLiteDatabase_getActiveDatabases())) {
-    AndroidDatabaseSqliteSQLiteDatabase_dumpWithAndroidUtilPrinter_withBoolean_(nil_chk(db), printer, verbose);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_dumpWithAndroidUtilPrinter_withBoolean_(AndroidDatabaseSqliteSQLiteDatabase *self, id<AndroidUtilPrinter> printer, jboolean verbose) {
-  @synchronized(self->mLock_) {
-    if (self->mConnectionPoolLocked_ != nil) {
-      [((id<AndroidUtilPrinter>) nil_chk(printer)) printlnWithNSString:@""];
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(self->mConnectionPoolLocked_)) dumpWithAndroidUtilPrinter:printer withBoolean:verbose];
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteDatabase_throwIfNotOpenLocked(AndroidDatabaseSqliteSQLiteDatabase *self) {
-  if (self->mConnectionPoolLocked_ == nil) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"The database '", ((AndroidDatabaseSqliteSQLiteDatabaseConfiguration *) nil_chk(self->mConfigurationLocked_))->label_, @"' is not open."));
-  }
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteDatabase__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatabase)
-
-@implementation AndroidDatabaseSqliteSQLiteDatabase_1
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)outer$ {
-  AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, outer$);
-  return self;
-}
-
-- (AndroidDatabaseSqliteSQLiteSession *)initialValue {
-  return [this$0_ createSession];
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteSession;", 0x4, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:);
-  methods[1].selector = @selector(initialValue);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidDatabaseSqliteSQLiteDatabase;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;", "Ljava/lang/ThreadLocal<Landroid/database/sqlite/SQLiteSession;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabase_1 = { "", "android.database.sqlite", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, -1, 1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabase_1;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase_1 *self, AndroidDatabaseSqliteSQLiteDatabase *outer$) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JavaLangThreadLocal_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDatabase_1 *new_AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *outer$) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabase_1, initWithAndroidDatabaseSqliteSQLiteDatabase_, outer$)
-}
-
-AndroidDatabaseSqliteSQLiteDatabase_1 *create_AndroidDatabaseSqliteSQLiteDatabase_1_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *outer$) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabase_1, initWithAndroidDatabaseSqliteSQLiteDatabase_, outer$)
-}
-
-@implementation AndroidDatabaseSqliteSQLiteDatabase_2
-
-- (instancetype)initWithNSString:(NSString *)capture$0 {
-  AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(self, capture$0);
-  return self;
-}
-
-- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)candidate {
-  return [((NSString *) nil_chk([((JavaIoFile *) nil_chk(candidate)) getName])) hasPrefix:val$prefix_];
-}
-
-- (void)dealloc {
-  RELEASE_(val$prefix_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:);
-  methods[1].selector = @selector(acceptWithJavaIoFile:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$prefix_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "accept", "LJavaIoFile;", "LAndroidDatabaseSqliteSQLiteDatabase;", "deleteDatabaseWithJavaIoFile:" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabase_2 = { "", "android.database.sqlite", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabase_2;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabase_2 *self, NSString *capture$0) {
-  JreStrongAssign(&self->val$prefix_, capture$0);
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDatabase_2 *new_AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(NSString *capture$0) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabase_2, initWithNSString_, capture$0)
-}
-
-AndroidDatabaseSqliteSQLiteDatabase_2 *create_AndroidDatabaseSqliteSQLiteDatabase_2_initWithNSString_(NSString *capture$0) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabase_2, initWithNSString_, capture$0)
-}
-
-@implementation AndroidDatabaseSqliteSQLiteDatabase_CursorFactory
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidDatabaseCursor;", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(newCursorWithAndroidDatabaseSqliteSQLiteDatabase:withAndroidDatabaseSqliteSQLiteCursorDriver:withNSString:withAndroidDatabaseSqliteSQLiteQuery:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "newCursor", "LAndroidDatabaseSqliteSQLiteDatabase;LAndroidDatabaseSqliteSQLiteCursorDriver;LNSString;LAndroidDatabaseSqliteSQLiteQuery;", "LAndroidDatabaseSqliteSQLiteDatabase;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabase_CursorFactory = { "CursorFactory", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatabase_CursorFactory)
-
-@implementation AndroidDatabaseSqliteSQLiteDatabase_CustomFunction
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(callbackWithNSStringArray:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "callback", "[LNSString;", "LAndroidDatabaseSqliteSQLiteDatabase;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabase_CustomFunction = { "CustomFunction", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabase_CustomFunction;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatabase_CustomFunction)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h
deleted file mode 100644
index 72986c6c5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h
+++ /dev/null
@@ -1,73 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseConfiguration")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseConfiguration
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseConfiguration 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseConfiguration 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseConfiguration
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatabaseConfiguration_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseConfiguration || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabaseConfiguration))
-#define AndroidDatabaseSqliteSQLiteDatabaseConfiguration_
-
-@class JavaUtilArrayList;
-@class JavaUtilLocale;
-
-@interface AndroidDatabaseSqliteSQLiteDatabaseConfiguration : NSObject {
- @public
-  NSString *path_;
-  NSString *label_;
-  jint openFlags_;
-  jint maxSqlCacheSize_;
-  JavaUtilLocale *locale_;
-  jboolean foreignKeyConstraintsEnabled_;
-  JavaUtilArrayList *customFunctions_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)other;
-
-- (instancetype)initWithNSString:(NSString *)path
-                         withInt:(jint)openFlags;
-
-- (jboolean)isInMemoryDb;
-
-- (void)updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)other;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabaseConfiguration)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, path_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, label_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, locale_, JavaUtilLocale *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, customFunctions_, JavaUtilArrayList *)
-
-inline NSString *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_get_MEMORY_DB_PATH();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_MEMORY_DB_PATH;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, MEMORY_DB_PATH, NSString *)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *self, NSString *path, jint openFlags);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseConfiguration *new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(NSString *path, jint openFlags) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseConfiguration *create_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(NSString *path, jint openFlags);
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *self, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *other);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseConfiguration *new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *other) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseConfiguration *create_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *other);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabaseConfiguration)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseConfiguration")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseConfiguration.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseConfiguration.m
deleted file mode 100644
index 38fd47667..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseConfiguration.m
+++ /dev/null
@@ -1,162 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDatabaseConfiguration.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Locale.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-
-@interface AndroidDatabaseSqliteSQLiteDatabaseConfiguration ()
-
-+ (NSString *)stripPathForLogsWithNSString:(NSString *)path;
-
-@end
-
-inline JavaUtilRegexPattern *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_get_EMAIL_IN_DB_PATTERN();
-static JavaUtilRegexPattern *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_EMAIL_IN_DB_PATTERN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, EMAIL_IN_DB_PATTERN, JavaUtilRegexPattern *)
-
-__attribute__((unused)) static NSString *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_stripPathForLogsWithNSString_(NSString *path);
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteDatabaseConfiguration)
-
-NSString *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_MEMORY_DB_PATH = @":memory:";
-
-@implementation AndroidDatabaseSqliteSQLiteDatabaseConfiguration
-
-- (instancetype)initWithNSString:(NSString *)path
-                         withInt:(jint)openFlags {
-  AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(self, path, openFlags);
-  return self;
-}
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)other {
-  AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(self, other);
-  return self;
-}
-
-- (void)updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *)other {
-  if (other == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"other must not be null.");
-  }
-  if (![((NSString *) nil_chk(path_)) isEqual:other->path_]) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"other configuration must refer to the same database.");
-  }
-  openFlags_ = other->openFlags_;
-  maxSqlCacheSize_ = other->maxSqlCacheSize_;
-  JreStrongAssign(&locale_, other->locale_);
-  foreignKeyConstraintsEnabled_ = other->foreignKeyConstraintsEnabled_;
-  [((JavaUtilArrayList *) nil_chk(customFunctions_)) clear];
-  [customFunctions_ addAllWithJavaUtilCollection:other->customFunctions_];
-}
-
-- (jboolean)isInMemoryDb {
-  return [((NSString *) nil_chk(path_)) java_equalsIgnoreCase:AndroidDatabaseSqliteSQLiteDatabaseConfiguration_MEMORY_DB_PATH];
-}
-
-+ (NSString *)stripPathForLogsWithNSString:(NSString *)path {
-  return AndroidDatabaseSqliteSQLiteDatabaseConfiguration_stripPathForLogsWithNSString_(path);
-}
-
-- (void)dealloc {
-  RELEASE_(path_);
-  RELEASE_(label_);
-  RELEASE_(locale_);
-  RELEASE_(customFunctions_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 3, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withInt:);
-  methods[1].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:);
-  methods[2].selector = @selector(updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:);
-  methods[3].selector = @selector(isInMemoryDb);
-  methods[4].selector = @selector(stripPathForLogsWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EMAIL_IN_DB_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
-    { "MEMORY_DB_PATH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
-    { "path_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-    { "label_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-    { "openFlags_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "maxSqlCacheSize_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "locale_", "LJavaUtilLocale;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "foreignKeyConstraintsEnabled_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "customFunctions_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x11, -1, -1, 7, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;I", "LAndroidDatabaseSqliteSQLiteDatabaseConfiguration;", "updateParametersFrom", "stripPathForLogs", "LNSString;", &AndroidDatabaseSqliteSQLiteDatabaseConfiguration_EMAIL_IN_DB_PATTERN, &AndroidDatabaseSqliteSQLiteDatabaseConfiguration_MEMORY_DB_PATH, "Ljava/util/ArrayList<Landroid/database/sqlite/SQLiteCustomFunction;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabaseConfiguration = { "SQLiteDatabaseConfiguration", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 5, 9, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabaseConfiguration;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteDatabaseConfiguration class]) {
-    JreStrongAssign(&AndroidDatabaseSqliteSQLiteDatabaseConfiguration_EMAIL_IN_DB_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"[\\w\\.\\-]+@[\\w\\.\\-]+"));
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteDatabaseConfiguration)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *self, NSString *path, jint openFlags) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->customFunctions_, new_JavaUtilArrayList_init());
-  if (path == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"path must not be null.");
-  }
-  JreStrongAssign(&self->path_, path);
-  JreStrongAssign(&self->label_, AndroidDatabaseSqliteSQLiteDatabaseConfiguration_stripPathForLogsWithNSString_(path));
-  self->openFlags_ = openFlags;
-  self->maxSqlCacheSize_ = 25;
-  JreStrongAssign(&self->locale_, JavaUtilLocale_getDefault());
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseConfiguration *new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(NSString *path, jint openFlags) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, initWithNSString_withInt_, path, openFlags)
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseConfiguration *create_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithNSString_withInt_(NSString *path, jint openFlags) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, initWithNSString_withInt_, path, openFlags)
-}
-
-void AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *self, AndroidDatabaseSqliteSQLiteDatabaseConfiguration *other) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->customFunctions_, new_JavaUtilArrayList_init());
-  if (other == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"other must not be null.");
-  }
-  JreStrongAssign(&self->path_, other->path_);
-  JreStrongAssign(&self->label_, other->label_);
-  [self updateParametersFromWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration:other];
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseConfiguration *new_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *other) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_, other)
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseConfiguration *create_AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_(AndroidDatabaseSqliteSQLiteDatabaseConfiguration *other) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabaseConfiguration, initWithAndroidDatabaseSqliteSQLiteDatabaseConfiguration_, other)
-}
-
-NSString *AndroidDatabaseSqliteSQLiteDatabaseConfiguration_stripPathForLogsWithNSString_(NSString *path) {
-  AndroidDatabaseSqliteSQLiteDatabaseConfiguration_initialize();
-  if ([((NSString *) nil_chk(path)) java_indexOf:'@'] == -1) {
-    return path;
-  }
-  return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(AndroidDatabaseSqliteSQLiteDatabaseConfiguration_EMAIL_IN_DB_PATTERN)) matcherWithJavaLangCharSequence:path])) replaceAllWithNSString:@"XX@YY"];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatabaseConfiguration)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h
deleted file mode 100644
index 6831aa7eb..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseCorruptException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseCorruptException
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatabaseCorruptException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabaseCorruptException))
-#define AndroidDatabaseSqliteSQLiteDatabaseCorruptException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteDatabaseCorruptException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabaseCorruptException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init(AndroidDatabaseSqliteSQLiteDatabaseCorruptException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *new_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *create_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabaseCorruptException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *new_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseCorruptException *create_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabaseCorruptException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseCorruptException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseCorruptException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseCorruptException.m
deleted file mode 100644
index 935ea8236..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseCorruptException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteDatabaseCorruptException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabaseCorruptException = { "SQLiteDatabaseCorruptException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabaseCorruptException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init(AndroidDatabaseSqliteSQLiteDatabaseCorruptException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseCorruptException *new_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabaseCorruptException, init)
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseCorruptException *create_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabaseCorruptException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabaseCorruptException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseCorruptException *new_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabaseCorruptException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseCorruptException *create_AndroidDatabaseSqliteSQLiteDatabaseCorruptException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabaseCorruptException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatabaseCorruptException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseLockedException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseLockedException.h
deleted file mode 100644
index b60d3c68b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseLockedException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseLockedException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseLockedException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseLockedException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseLockedException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDatabaseLockedException
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatabaseLockedException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseLockedException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatabaseLockedException))
-#define AndroidDatabaseSqliteSQLiteDatabaseLockedException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteDatabaseLockedException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatabaseLockedException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseLockedException_init(AndroidDatabaseSqliteSQLiteDatabaseLockedException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseLockedException *new_AndroidDatabaseSqliteSQLiteDatabaseLockedException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseLockedException *create_AndroidDatabaseSqliteSQLiteDatabaseLockedException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabaseLockedException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseLockedException *new_AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatabaseLockedException *create_AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatabaseLockedException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatabaseLockedException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseLockedException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseLockedException.m
deleted file mode 100644
index a25267851..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatabaseLockedException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDatabaseLockedException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteDatabaseLockedException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteDatabaseLockedException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatabaseLockedException = { "SQLiteDatabaseLockedException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatabaseLockedException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatabaseLockedException_init(AndroidDatabaseSqliteSQLiteDatabaseLockedException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseLockedException *new_AndroidDatabaseSqliteSQLiteDatabaseLockedException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabaseLockedException, init)
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseLockedException *create_AndroidDatabaseSqliteSQLiteDatabaseLockedException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabaseLockedException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatabaseLockedException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseLockedException *new_AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatabaseLockedException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteDatabaseLockedException *create_AndroidDatabaseSqliteSQLiteDatabaseLockedException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatabaseLockedException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatabaseLockedException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatatypeMismatchException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatatypeMismatchException.h
deleted file mode 100644
index cef239da5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatatypeMismatchException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatatypeMismatchException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDatatypeMismatchException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatatypeMismatchException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatatypeMismatchException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDatatypeMismatchException
-
-#if !defined (AndroidDatabaseSqliteSQLiteDatatypeMismatchException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatatypeMismatchException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDatatypeMismatchException))
-#define AndroidDatabaseSqliteSQLiteDatatypeMismatchException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteDatatypeMismatchException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDatatypeMismatchException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init(AndroidDatabaseSqliteSQLiteDatatypeMismatchException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatatypeMismatchException *new_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatatypeMismatchException *create_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatatypeMismatchException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatatypeMismatchException *new_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDatatypeMismatchException *create_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDatatypeMismatchException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDatatypeMismatchException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatatypeMismatchException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatatypeMismatchException.m
deleted file mode 100644
index 8faed29ea..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDatatypeMismatchException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDatatypeMismatchException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteDatatypeMismatchException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDatatypeMismatchException = { "SQLiteDatatypeMismatchException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDatatypeMismatchException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init(AndroidDatabaseSqliteSQLiteDatatypeMismatchException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDatatypeMismatchException *new_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatatypeMismatchException, init)
-}
-
-AndroidDatabaseSqliteSQLiteDatatypeMismatchException *create_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatatypeMismatchException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(AndroidDatabaseSqliteSQLiteDatatypeMismatchException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteDatatypeMismatchException *new_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDatatypeMismatchException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteDatatypeMismatchException *create_AndroidDatabaseSqliteSQLiteDatatypeMismatchException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDatatypeMismatchException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDatatypeMismatchException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDebug.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDebug.h
deleted file mode 100644
index e0da200c6..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDebug.h
+++ /dev/null
@@ -1,100 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDebug
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDebug
-
-#if !defined (AndroidDatabaseSqliteSQLiteDebug_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDebug))
-#define AndroidDatabaseSqliteSQLiteDebug_
-
-@class IOSObjectArray;
-@protocol AndroidUtilPrinter;
-
-@interface AndroidDatabaseSqliteSQLiteDebug : NSObject
-
-#pragma mark Public
-
-+ (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                 withNSStringArray:(IOSObjectArray *)args;
-
-+ (jboolean)shouldLogSlowQueryWithLong:(jlong)elapsedTimeMillis;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteDebug)
-
-inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_SQL_LOG();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_LOG;
-J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_LOG, jboolean)
-
-inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_SQL_STATEMENTS();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_STATEMENTS;
-J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_STATEMENTS, jboolean)
-
-inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_SQL_TIME();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_TIME;
-J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidDatabaseSqliteSQLiteDebug, DEBUG_SQL_TIME, jboolean)
-
-inline jboolean AndroidDatabaseSqliteSQLiteDebug_get_DEBUG_LOG_SLOW_QUERIES();
-#define AndroidDatabaseSqliteSQLiteDebug_DEBUG_LOG_SLOW_QUERIES false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteDebug, DEBUG_LOG_SLOW_QUERIES, jboolean)
-
-FOUNDATION_EXPORT jboolean AndroidDatabaseSqliteSQLiteDebug_shouldLogSlowQueryWithLong_(jlong elapsedTimeMillis);
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDebug_dumpWithAndroidUtilPrinter_withNSStringArray_(id<AndroidUtilPrinter> printer, IOSObjectArray *args);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDebug)
-
-#endif
-
-#if !defined (AndroidDatabaseSqliteSQLiteDebug_DbStats_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDebug_DbStats))
-#define AndroidDatabaseSqliteSQLiteDebug_DbStats_
-
-@interface AndroidDatabaseSqliteSQLiteDebug_DbStats : NSObject {
- @public
-  NSString *dbName_;
-  jlong pageSize_;
-  jlong dbSize_;
-  jint lookaside_;
-  NSString *cache_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)dbName
-                        withLong:(jlong)pageCount
-                        withLong:(jlong)pageSize
-                         withInt:(jint)lookaside
-                         withInt:(jint)hits
-                         withInt:(jint)misses
-                         withInt:(jint)cachesize;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDebug_DbStats)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDebug_DbStats, dbName_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDebug_DbStats, cache_, NSString *)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(AndroidDatabaseSqliteSQLiteDebug_DbStats *self, NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDebug_DbStats *new_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDebug_DbStats *create_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDebug_DbStats)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDebug")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDebug.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDebug.m
deleted file mode 100644
index 8feaff31a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDebug.m
+++ /dev/null
@@ -1,177 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDebug.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "android/util/Printer.h"
-
-@interface AndroidDatabaseSqliteSQLiteDebug ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteDebug_init(AndroidDatabaseSqliteSQLiteDebug *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDebug *new_AndroidDatabaseSqliteSQLiteDebug_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDebug *create_AndroidDatabaseSqliteSQLiteDebug_init();
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteDebug)
-
-jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_LOG;
-jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_STATEMENTS;
-jboolean AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_TIME;
-
-@implementation AndroidDatabaseSqliteSQLiteDebug
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteDebug_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jboolean)shouldLogSlowQueryWithLong:(jlong)elapsedTimeMillis {
-  return AndroidDatabaseSqliteSQLiteDebug_shouldLogSlowQueryWithLong_(elapsedTimeMillis);
-}
-
-+ (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                 withNSStringArray:(IOSObjectArray *)args {
-  AndroidDatabaseSqliteSQLiteDebug_dumpWithAndroidUtilPrinter_withNSStringArray_(printer, args);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(shouldLogSlowQueryWithLong:);
-  methods[2].selector = @selector(dumpWithAndroidUtilPrinter:withNSStringArray:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "DEBUG_SQL_LOG", "Z", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
-    { "DEBUG_SQL_STATEMENTS", "Z", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
-    { "DEBUG_SQL_TIME", "Z", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
-    { "DEBUG_LOG_SLOW_QUERIES", "Z", .constantValue.asBOOL = AndroidDatabaseSqliteSQLiteDebug_DEBUG_LOG_SLOW_QUERIES, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "shouldLogSlowQuery", "J", "dump", "LAndroidUtilPrinter;[LNSString;", &AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_LOG, &AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_STATEMENTS, &AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_TIME, "LAndroidDatabaseSqliteSQLiteDebug_DbStats;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDebug = { "SQLiteDebug", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 3, 4, -1, 7, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDebug;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteDebug class]) {
-    AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_LOG = AndroidUtilLog_isLoggableWithNSString_withInt_(@"SQLiteLog", AndroidUtilLog_VERBOSE);
-    AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_STATEMENTS = AndroidUtilLog_isLoggableWithNSString_withInt_(@"SQLiteStatements", AndroidUtilLog_VERBOSE);
-    AndroidDatabaseSqliteSQLiteDebug_DEBUG_SQL_TIME = AndroidUtilLog_isLoggableWithNSString_withInt_(@"SQLiteTime", AndroidUtilLog_VERBOSE);
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteDebug)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDebug_init(AndroidDatabaseSqliteSQLiteDebug *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDebug *new_AndroidDatabaseSqliteSQLiteDebug_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDebug, init)
-}
-
-AndroidDatabaseSqliteSQLiteDebug *create_AndroidDatabaseSqliteSQLiteDebug_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDebug, init)
-}
-
-jboolean AndroidDatabaseSqliteSQLiteDebug_shouldLogSlowQueryWithLong_(jlong elapsedTimeMillis) {
-  AndroidDatabaseSqliteSQLiteDebug_initialize();
-  jint slowQueryMillis = 10000;
-  return slowQueryMillis >= 0 && elapsedTimeMillis >= slowQueryMillis;
-}
-
-void AndroidDatabaseSqliteSQLiteDebug_dumpWithAndroidUtilPrinter_withNSStringArray_(id<AndroidUtilPrinter> printer, IOSObjectArray *args) {
-  AndroidDatabaseSqliteSQLiteDebug_initialize();
-  jboolean verbose = false;
-  {
-    IOSObjectArray *a__ = args;
-    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
-    NSString * const *e__ = b__ + a__->size_;
-    while (b__ < e__) {
-      NSString *arg = *b__++;
-      if ([((NSString *) nil_chk(arg)) isEqual:@"-v"]) {
-        verbose = true;
-      }
-    }
-  }
-  AndroidDatabaseSqliteSQLiteDatabase_dumpAllWithAndroidUtilPrinter_withBoolean_(printer, verbose);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDebug)
-
-@implementation AndroidDatabaseSqliteSQLiteDebug_DbStats
-
-- (instancetype)initWithNSString:(NSString *)dbName
-                        withLong:(jlong)pageCount
-                        withLong:(jlong)pageSize
-                         withInt:(jint)lookaside
-                         withInt:(jint)hits
-                         withInt:(jint)misses
-                         withInt:(jint)cachesize {
-  AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(self, dbName, pageCount, pageSize, lookaside, hits, misses, cachesize);
-  return self;
-}
-
-- (void)dealloc {
-  RELEASE_(dbName_);
-  RELEASE_(cache_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withLong:withLong:withInt:withInt:withInt:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "dbName_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "pageSize_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "dbSize_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "lookaside_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "cache_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;JJIIII", "LAndroidDatabaseSqliteSQLiteDebug;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDebug_DbStats = { "DbStats", "android.database.sqlite", ptrTable, methods, fields, 7, 0x9, 1, 5, 1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDebug_DbStats;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(AndroidDatabaseSqliteSQLiteDebug_DbStats *self, NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize) {
-  NSObject_init(self);
-  JreStrongAssign(&self->dbName_, dbName);
-  self->pageSize_ = pageSize / 1024;
-  self->dbSize_ = (pageCount * pageSize) / 1024;
-  self->lookaside_ = lookaside;
-  JreStrongAssign(&self->cache_, JreStrcat("ICICI", hits, '/', misses, '/', cachesize));
-}
-
-AndroidDatabaseSqliteSQLiteDebug_DbStats *new_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDebug_DbStats, initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_, dbName, pageCount, pageSize, lookaside, hits, misses, cachesize)
-}
-
-AndroidDatabaseSqliteSQLiteDebug_DbStats *create_AndroidDatabaseSqliteSQLiteDebug_DbStats_initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_(NSString *dbName, jlong pageCount, jlong pageSize, jint lookaside, jint hits, jint misses, jint cachesize) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDebug_DbStats, initWithNSString_withLong_withLong_withInt_withInt_withInt_withInt_, dbName, pageCount, pageSize, lookaside, hits, misses, cachesize)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDebug_DbStats)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDirectCursorDriver.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDirectCursorDriver.h
deleted file mode 100644
index cc3a2ec93..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDirectCursorDriver.h
+++ /dev/null
@@ -1,62 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDirectCursorDriver")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDirectCursorDriver
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDirectCursorDriver 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDirectCursorDriver 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDirectCursorDriver
-
-#if !defined (AndroidDatabaseSqliteSQLiteDirectCursorDriver_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDirectCursorDriver || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDirectCursorDriver))
-#define AndroidDatabaseSqliteSQLiteDirectCursorDriver_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteCursorDriver 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteCursorDriver 1
-#include "AndroidDatabaseSqliteSQLiteCursorDriver.h"
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class IOSObjectArray;
-@protocol AndroidDatabaseCursor;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-
-@interface AndroidDatabaseSqliteSQLiteDirectCursorDriver : NSObject < AndroidDatabaseSqliteSQLiteCursorDriver >
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)sql
-                                               withNSString:(NSString *)editTable;
-
-- (void)cursorClosed;
-
-- (void)cursorDeactivated;
-
-- (void)cursorRequeriedWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor;
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                                      withNSStringArray:(IOSObjectArray *)selectionArgs;
-
-- (void)setBindArgumentsWithNSStringArray:(IOSObjectArray *)bindArgs;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDirectCursorDriver)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDirectCursorDriver *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, NSString *editTable);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDirectCursorDriver *new_AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, NSString *editTable) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDirectCursorDriver *create_AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, NSString *editTable);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDirectCursorDriver)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDirectCursorDriver")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDirectCursorDriver.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDirectCursorDriver.m
deleted file mode 100644
index 42200503b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDirectCursorDriver.m
+++ /dev/null
@@ -1,132 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseSqliteSQLiteCursor.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDirectCursorDriver.h"
-#include "AndroidDatabaseSqliteSQLiteQuery.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/RuntimeException.h"
-
-@interface AndroidDatabaseSqliteSQLiteDirectCursorDriver () {
- @public
-  AndroidDatabaseSqliteSQLiteDatabase *mDatabase_;
-  NSString *mEditTable_;
-  NSString *mSql_;
-  AndroidDatabaseSqliteSQLiteQuery *mQuery_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDirectCursorDriver, mDatabase_, AndroidDatabaseSqliteSQLiteDatabase *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDirectCursorDriver, mEditTable_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDirectCursorDriver, mSql_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteDirectCursorDriver, mQuery_, AndroidDatabaseSqliteSQLiteQuery *)
-
-@implementation AndroidDatabaseSqliteSQLiteDirectCursorDriver
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)sql
-                                               withNSString:(NSString *)editTable {
-  AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(self, db, sql, editTable);
-  return self;
-}
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                                                      withNSStringArray:(IOSObjectArray *)selectionArgs {
-  AndroidDatabaseSqliteSQLiteQuery *query = create_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(mDatabase_, mSql_);
-  id<AndroidDatabaseCursor> cursor;
-  @try {
-    [query bindAllArgsAsStringsWithNSStringArray:selectionArgs];
-    if (factory == nil) {
-      cursor = create_AndroidDatabaseSqliteSQLiteCursor_initWithAndroidDatabaseSqliteSQLiteCursorDriver_withNSString_withAndroidDatabaseSqliteSQLiteQuery_(self, mEditTable_, query);
-    }
-    else {
-      cursor = [factory newCursorWithAndroidDatabaseSqliteSQLiteDatabase:mDatabase_ withAndroidDatabaseSqliteSQLiteCursorDriver:self withNSString:mEditTable_ withAndroidDatabaseSqliteSQLiteQuery:query];
-    }
-  }
-  @catch (JavaLangRuntimeException *ex) {
-    [query close];
-    @throw ex;
-  }
-  JreStrongAssign(&mQuery_, query);
-  return cursor;
-}
-
-- (void)cursorClosed {
-}
-
-- (void)setBindArgumentsWithNSStringArray:(IOSObjectArray *)bindArgs {
-  [((AndroidDatabaseSqliteSQLiteQuery *) nil_chk(mQuery_)) bindAllArgsAsStringsWithNSStringArray:bindArgs];
-}
-
-- (void)cursorDeactivated {
-}
-
-- (void)cursorRequeriedWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
-}
-
-- (NSString *)description {
-  return JreStrcat("$$", @"SQLiteDirectCursorDriver: ", mSql_);
-}
-
-- (void)dealloc {
-  RELEASE_(mDatabase_);
-  RELEASE_(mEditTable_);
-  RELEASE_(mSql_);
-  RELEASE_(mQuery_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSString:);
-  methods[1].selector = @selector(queryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withNSStringArray:);
-  methods[2].selector = @selector(cursorClosed);
-  methods[3].selector = @selector(setBindArgumentsWithNSStringArray:);
-  methods[4].selector = @selector(cursorDeactivated);
-  methods[5].selector = @selector(cursorRequeriedWithAndroidDatabaseCursor:);
-  methods[6].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mDatabase_", "LAndroidDatabaseSqliteSQLiteDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mEditTable_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mSql_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mQuery_", "LAndroidDatabaseSqliteSQLiteQuery;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;LNSString;", "query", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;[LNSString;", "setBindArguments", "[LNSString;", "cursorRequeried", "LAndroidDatabaseCursor;", "toString" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDirectCursorDriver = { "SQLiteDirectCursorDriver", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 7, 4, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDirectCursorDriver;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDirectCursorDriver *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, NSString *editTable) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mDatabase_, db);
-  JreStrongAssign(&self->mEditTable_, editTable);
-  JreStrongAssign(&self->mSql_, sql);
-}
-
-AndroidDatabaseSqliteSQLiteDirectCursorDriver *new_AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, NSString *editTable) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDirectCursorDriver, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_, db, sql, editTable)
-}
-
-AndroidDatabaseSqliteSQLiteDirectCursorDriver *create_AndroidDatabaseSqliteSQLiteDirectCursorDriver_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, NSString *editTable) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDirectCursorDriver, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_, db, sql, editTable)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDirectCursorDriver)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDiskIOException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDiskIOException.h
deleted file mode 100644
index 753175a21..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDiskIOException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDiskIOException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDiskIOException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDiskIOException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDiskIOException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDiskIOException
-
-#if !defined (AndroidDatabaseSqliteSQLiteDiskIOException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDiskIOException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDiskIOException))
-#define AndroidDatabaseSqliteSQLiteDiskIOException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteDiskIOException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDiskIOException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDiskIOException_init(AndroidDatabaseSqliteSQLiteDiskIOException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDiskIOException *new_AndroidDatabaseSqliteSQLiteDiskIOException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDiskIOException *create_AndroidDatabaseSqliteSQLiteDiskIOException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(AndroidDatabaseSqliteSQLiteDiskIOException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDiskIOException *new_AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDiskIOException *create_AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDiskIOException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDiskIOException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDiskIOException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDiskIOException.m
deleted file mode 100644
index cb24ac6bf..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDiskIOException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDiskIOException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteDiskIOException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteDiskIOException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDiskIOException = { "SQLiteDiskIOException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDiskIOException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDiskIOException_init(AndroidDatabaseSqliteSQLiteDiskIOException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDiskIOException *new_AndroidDatabaseSqliteSQLiteDiskIOException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDiskIOException, init)
-}
-
-AndroidDatabaseSqliteSQLiteDiskIOException *create_AndroidDatabaseSqliteSQLiteDiskIOException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDiskIOException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(AndroidDatabaseSqliteSQLiteDiskIOException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteDiskIOException *new_AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDiskIOException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteDiskIOException *create_AndroidDatabaseSqliteSQLiteDiskIOException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDiskIOException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDiskIOException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDoneException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDoneException.h
deleted file mode 100644
index 8af750b47..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDoneException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDoneException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteDoneException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDoneException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDoneException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteDoneException
-
-#if !defined (AndroidDatabaseSqliteSQLiteDoneException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDoneException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteDoneException))
-#define AndroidDatabaseSqliteSQLiteDoneException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteDoneException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteDoneException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDoneException_init(AndroidDatabaseSqliteSQLiteDoneException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDoneException *new_AndroidDatabaseSqliteSQLiteDoneException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDoneException *create_AndroidDatabaseSqliteSQLiteDoneException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(AndroidDatabaseSqliteSQLiteDoneException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDoneException *new_AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteDoneException *create_AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteDoneException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteDoneException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDoneException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDoneException.m
deleted file mode 100644
index 3bcfc0245..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteDoneException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDoneException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteDoneException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteDoneException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteDoneException = { "SQLiteDoneException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteDoneException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteDoneException_init(AndroidDatabaseSqliteSQLiteDoneException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteDoneException *new_AndroidDatabaseSqliteSQLiteDoneException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDoneException, init)
-}
-
-AndroidDatabaseSqliteSQLiteDoneException *create_AndroidDatabaseSqliteSQLiteDoneException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDoneException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(AndroidDatabaseSqliteSQLiteDoneException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteDoneException *new_AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteDoneException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteDoneException *create_AndroidDatabaseSqliteSQLiteDoneException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteDoneException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteDoneException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteException.h
deleted file mode 100644
index c5e857dfe..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteException.h
+++ /dev/null
@@ -1,59 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteException
-
-#if !defined (AndroidDatabaseSqliteSQLiteException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteException))
-#define AndroidDatabaseSqliteSQLiteException_
-
-#define RESTRICT_AndroidDatabaseSQLException 1
-#define INCLUDE_AndroidDatabaseSQLException 1
-#include "AndroidDatabaseSQLException.h"
-
-@interface AndroidDatabaseSqliteSQLiteException : AndroidDatabaseSQLException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-- (instancetype)initWithNSString:(NSString *)error
-                 withNSException:(NSException *)cause;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteException_init(AndroidDatabaseSqliteSQLiteException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteException_initWithNSString_(AndroidDatabaseSqliteSQLiteException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_initWithNSString_(NSString *error);
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(AndroidDatabaseSqliteSQLiteException *self, NSString *error, NSException *cause);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(NSString *error, NSException *cause) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(NSString *error, NSException *cause);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteException.m
deleted file mode 100644
index 406561de1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteException.m
+++ /dev/null
@@ -1,84 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSQLException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-  return self;
-}
-
-- (instancetype)initWithNSString:(NSString *)error
-                 withNSException:(NSException *)cause {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(self, error, cause);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  methods[2].selector = @selector(initWithNSString:withNSException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSException;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteException = { "SQLiteException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteException_init(AndroidDatabaseSqliteSQLiteException *self) {
-  AndroidDatabaseSQLException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteException, init)
-}
-
-AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteException_initWithNSString_(AndroidDatabaseSqliteSQLiteException *self, NSString *error) {
-  AndroidDatabaseSQLException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteException, initWithNSString_, error)
-}
-
-void AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(AndroidDatabaseSqliteSQLiteException *self, NSString *error, NSException *cause) {
-  AndroidDatabaseSQLException_initWithNSString_withNSException_(self, error, cause);
-}
-
-AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteException, initWithNSString_withNSException_, error, cause)
-}
-
-AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteException, initWithNSString_withNSException_, error, cause)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteFullException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteFullException.h
deleted file mode 100644
index 15f326031..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteFullException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteFullException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteFullException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteFullException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteFullException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteFullException
-
-#if !defined (AndroidDatabaseSqliteSQLiteFullException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteFullException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteFullException))
-#define AndroidDatabaseSqliteSQLiteFullException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteFullException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteFullException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteFullException_init(AndroidDatabaseSqliteSQLiteFullException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteFullException *new_AndroidDatabaseSqliteSQLiteFullException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteFullException *create_AndroidDatabaseSqliteSQLiteFullException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(AndroidDatabaseSqliteSQLiteFullException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteFullException *new_AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteFullException *create_AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteFullException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteFullException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteFullException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteFullException.m
deleted file mode 100644
index 9089b5c10..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteFullException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteFullException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteFullException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteFullException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteFullException = { "SQLiteFullException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteFullException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteFullException_init(AndroidDatabaseSqliteSQLiteFullException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteFullException *new_AndroidDatabaseSqliteSQLiteFullException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteFullException, init)
-}
-
-AndroidDatabaseSqliteSQLiteFullException *create_AndroidDatabaseSqliteSQLiteFullException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteFullException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(AndroidDatabaseSqliteSQLiteFullException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteFullException *new_AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteFullException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteFullException *create_AndroidDatabaseSqliteSQLiteFullException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteFullException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteFullException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteGlobal.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteGlobal.h
deleted file mode 100644
index ca8e4730a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteGlobal.h
+++ /dev/null
@@ -1,66 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteGlobal")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteGlobal
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteGlobal 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteGlobal 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteGlobal
-
-#if !defined (AndroidDatabaseSqliteSQLiteGlobal_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteGlobal || defined(INCLUDE_AndroidDatabaseSqliteSQLiteGlobal))
-#define AndroidDatabaseSqliteSQLiteGlobal_
-
-@interface AndroidDatabaseSqliteSQLiteGlobal : NSObject
-
-#pragma mark Public
-
-+ (NSString *)getDefaultJournalMode;
-
-+ (jint)getDefaultPageSize;
-
-+ (NSString *)getDefaultSyncMode;
-
-+ (jint)getJournalSizeLimit;
-
-+ (jint)getWALAutoCheckpoint;
-
-+ (jint)getWALConnectionPoolSize;
-
-+ (NSString *)getWALSyncMode;
-
-+ (jint)releaseMemory;
-
-+ (void)sqlite3_initialize;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteGlobal)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteGlobal_sqlite3_initialize();
-
-FOUNDATION_EXPORT jint AndroidDatabaseSqliteSQLiteGlobal_releaseMemory();
-
-FOUNDATION_EXPORT jint AndroidDatabaseSqliteSQLiteGlobal_getDefaultPageSize();
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteGlobal_getDefaultJournalMode();
-
-FOUNDATION_EXPORT jint AndroidDatabaseSqliteSQLiteGlobal_getJournalSizeLimit();
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteGlobal_getDefaultSyncMode();
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteGlobal_getWALSyncMode();
-
-FOUNDATION_EXPORT jint AndroidDatabaseSqliteSQLiteGlobal_getWALAutoCheckpoint();
-
-FOUNDATION_EXPORT jint AndroidDatabaseSqliteSQLiteGlobal_getWALConnectionPoolSize();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteGlobal)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteGlobal")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteGlobal.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteGlobal.m
deleted file mode 100644
index 3dbce88ec..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteGlobal.m
+++ /dev/null
@@ -1,216 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteGlobal.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Math.h"
-
-#import <sqlite3.h>
-
-#define SOFT_HEAP_LIMIT 8 * 1024 * 1024
-
-@interface AndroidDatabaseSqliteSQLiteGlobal ()
-
-+ (jint)nativeReleaseMemory;
-
-- (instancetype)init;
-
-@end
-
-inline NSString *AndroidDatabaseSqliteSQLiteGlobal_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteGlobal_TAG = @"SQLiteGlobal";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteGlobal, TAG, NSString *)
-
-inline id AndroidDatabaseSqliteSQLiteGlobal_get_sLock();
-static id AndroidDatabaseSqliteSQLiteGlobal_sLock;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteGlobal, sLock, id)
-
-inline jint AndroidDatabaseSqliteSQLiteGlobal_get_sDefaultPageSize();
-inline jint AndroidDatabaseSqliteSQLiteGlobal_set_sDefaultPageSize(jint value);
-inline jint *AndroidDatabaseSqliteSQLiteGlobal_getRef_sDefaultPageSize();
-static jint AndroidDatabaseSqliteSQLiteGlobal_sDefaultPageSize;
-J2OBJC_STATIC_FIELD_PRIMITIVE(AndroidDatabaseSqliteSQLiteGlobal, sDefaultPageSize, jint)
-
-__attribute__((unused)) static jint AndroidDatabaseSqliteSQLiteGlobal_nativeReleaseMemory();
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteGlobal_init(AndroidDatabaseSqliteSQLiteGlobal *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteGlobal *new_AndroidDatabaseSqliteSQLiteGlobal_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteGlobal *create_AndroidDatabaseSqliteSQLiteGlobal_init();
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteGlobal)
-
-@implementation AndroidDatabaseSqliteSQLiteGlobal
-
-+ (void)sqlite3_initialize {
-  AndroidDatabaseSqliteSQLiteGlobal_sqlite3_initialize();
-}
-
-+ (jint)nativeReleaseMemory {
-  return AndroidDatabaseSqliteSQLiteGlobal_nativeReleaseMemory();
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteGlobal_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jint)releaseMemory {
-  return AndroidDatabaseSqliteSQLiteGlobal_releaseMemory();
-}
-
-+ (jint)getDefaultPageSize {
-  return AndroidDatabaseSqliteSQLiteGlobal_getDefaultPageSize();
-}
-
-+ (NSString *)getDefaultJournalMode {
-  return AndroidDatabaseSqliteSQLiteGlobal_getDefaultJournalMode();
-}
-
-+ (jint)getJournalSizeLimit {
-  return AndroidDatabaseSqliteSQLiteGlobal_getJournalSizeLimit();
-}
-
-+ (NSString *)getDefaultSyncMode {
-  return AndroidDatabaseSqliteSQLiteGlobal_getDefaultSyncMode();
-}
-
-+ (NSString *)getWALSyncMode {
-  return AndroidDatabaseSqliteSQLiteGlobal_getWALSyncMode();
-}
-
-+ (jint)getWALAutoCheckpoint {
-  return AndroidDatabaseSqliteSQLiteGlobal_getWALAutoCheckpoint();
-}
-
-+ (jint)getWALConnectionPoolSize {
-  return AndroidDatabaseSqliteSQLiteGlobal_getWALConnectionPoolSize();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x109, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x10a, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(sqlite3_initialize);
-  methods[1].selector = @selector(nativeReleaseMemory);
-  methods[2].selector = @selector(init);
-  methods[3].selector = @selector(releaseMemory);
-  methods[4].selector = @selector(getDefaultPageSize);
-  methods[5].selector = @selector(getDefaultJournalMode);
-  methods[6].selector = @selector(getJournalSizeLimit);
-  methods[7].selector = @selector(getDefaultSyncMode);
-  methods[8].selector = @selector(getWALSyncMode);
-  methods[9].selector = @selector(getWALAutoCheckpoint);
-  methods[10].selector = @selector(getWALConnectionPoolSize);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
-    { "sLock", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 1, -1, -1 },
-    { "sDefaultPageSize", "I", .constantValue.asLong = 0, 0xa, -1, 2, -1, -1 },
-  };
-  static const void *ptrTable[] = { &AndroidDatabaseSqliteSQLiteGlobal_TAG, &AndroidDatabaseSqliteSQLiteGlobal_sLock, &AndroidDatabaseSqliteSQLiteGlobal_sDefaultPageSize };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteGlobal = { "SQLiteGlobal", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 11, 3, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteGlobal;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteGlobal class]) {
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteGlobal_sLock, new_NSObject_init());
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteGlobal)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteGlobal_sqlite3_initialize() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  // Enable multi-threaded mode.  In this mode, SQLite is safe to use by multiple
-  // threads as long as no two threads use the same database connection at the same
-  // time (which we guarantee in the SQLite database wrappers).
-  sqlite3_config(SQLITE_CONFIG_MULTITHREAD);
-  
-  // The soft heap limit prevents the page cache allocations from growing
-  // beyond the given limit, no matter what the max page cache sizes are
-  // set to. The limit does not, as of 3.5.0, affect any other allocations.
-  sqlite3_soft_heap_limit(SOFT_HEAP_LIMIT);
-  
-  // Initialize SQLite.
-  sqlite3_initialize();
-}
-
-jint AndroidDatabaseSqliteSQLiteGlobal_nativeReleaseMemory() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return sqlite3_release_memory(SOFT_HEAP_LIMIT);
-}
-
-void AndroidDatabaseSqliteSQLiteGlobal_init(AndroidDatabaseSqliteSQLiteGlobal *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteGlobal *new_AndroidDatabaseSqliteSQLiteGlobal_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteGlobal, init)
-}
-
-AndroidDatabaseSqliteSQLiteGlobal *create_AndroidDatabaseSqliteSQLiteGlobal_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteGlobal, init)
-}
-
-jint AndroidDatabaseSqliteSQLiteGlobal_releaseMemory() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return AndroidDatabaseSqliteSQLiteGlobal_nativeReleaseMemory();
-}
-
-jint AndroidDatabaseSqliteSQLiteGlobal_getDefaultPageSize() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return 1024;
-}
-
-NSString *AndroidDatabaseSqliteSQLiteGlobal_getDefaultJournalMode() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return @"delete";
-}
-
-jint AndroidDatabaseSqliteSQLiteGlobal_getJournalSizeLimit() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return 10000;
-}
-
-NSString *AndroidDatabaseSqliteSQLiteGlobal_getDefaultSyncMode() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return @"normal";
-}
-
-NSString *AndroidDatabaseSqliteSQLiteGlobal_getWALSyncMode() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  return @"normal";
-}
-
-jint AndroidDatabaseSqliteSQLiteGlobal_getWALAutoCheckpoint() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  jint value = 1000;
-  return JavaLangMath_maxWithInt_withInt_(1, value);
-}
-
-jint AndroidDatabaseSqliteSQLiteGlobal_getWALConnectionPoolSize() {
-  AndroidDatabaseSqliteSQLiteGlobal_initialize();
-  jint value = 10;
-  return JavaLangMath_maxWithInt_withInt_(2, value);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteGlobal)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteMisuseException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteMisuseException.h
deleted file mode 100644
index 727a807e5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteMisuseException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteMisuseException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteMisuseException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteMisuseException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteMisuseException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteMisuseException
-
-#if !defined (AndroidDatabaseSqliteSQLiteMisuseException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteMisuseException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteMisuseException))
-#define AndroidDatabaseSqliteSQLiteMisuseException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteMisuseException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteMisuseException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteMisuseException_init(AndroidDatabaseSqliteSQLiteMisuseException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteMisuseException *new_AndroidDatabaseSqliteSQLiteMisuseException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteMisuseException *create_AndroidDatabaseSqliteSQLiteMisuseException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(AndroidDatabaseSqliteSQLiteMisuseException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteMisuseException *new_AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteMisuseException *create_AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteMisuseException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteMisuseException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteMisuseException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteMisuseException.m
deleted file mode 100644
index e76b548f1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteMisuseException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteMisuseException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteMisuseException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteMisuseException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteMisuseException = { "SQLiteMisuseException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteMisuseException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteMisuseException_init(AndroidDatabaseSqliteSQLiteMisuseException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteMisuseException *new_AndroidDatabaseSqliteSQLiteMisuseException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteMisuseException, init)
-}
-
-AndroidDatabaseSqliteSQLiteMisuseException *create_AndroidDatabaseSqliteSQLiteMisuseException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteMisuseException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(AndroidDatabaseSqliteSQLiteMisuseException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteMisuseException *new_AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteMisuseException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteMisuseException *create_AndroidDatabaseSqliteSQLiteMisuseException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteMisuseException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteMisuseException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOpenHelper.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOpenHelper.h
deleted file mode 100644
index 744afbf97..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOpenHelper.h
+++ /dev/null
@@ -1,74 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOpenHelper")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteOpenHelper
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOpenHelper 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOpenHelper 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteOpenHelper
-
-#if !defined (AndroidDatabaseSqliteSQLiteOpenHelper_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOpenHelper || defined(INCLUDE_AndroidDatabaseSqliteSQLiteOpenHelper))
-#define AndroidDatabaseSqliteSQLiteOpenHelper_
-
-@class AndroidContentContext;
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@protocol AndroidDatabaseDatabaseErrorHandler;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-
-@interface AndroidDatabaseSqliteSQLiteOpenHelper : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
-                                 withNSString:(NSString *)name
-withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                      withInt:(jint)version_;
-
-- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
-                                 withNSString:(NSString *)name
-withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                      withInt:(jint)version_
-      withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;
-
-- (void)close;
-
-- (NSString *)getDatabaseName;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getReadableDatabase;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getWritableDatabase;
-
-- (void)onConfigureWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db;
-
-- (void)onCreateWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db;
-
-- (void)onDowngradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withInt:(jint)oldVersion
-                                                   withInt:(jint)newVersion;
-
-- (void)onOpenWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db;
-
-- (void)onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                 withInt:(jint)oldVersion
-                                                 withInt:(jint)newVersion;
-
-- (void)setWriteAheadLoggingEnabledWithBoolean:(jboolean)enabled;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteOpenHelper)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(AndroidDatabaseSqliteSQLiteOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_);
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(AndroidDatabaseSqliteSQLiteOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_, id<AndroidDatabaseDatabaseErrorHandler> errorHandler);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteOpenHelper)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOpenHelper")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOpenHelper.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOpenHelper.m
deleted file mode 100644
index 662480740..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOpenHelper.m
+++ /dev/null
@@ -1,300 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentContext.h"
-#include "AndroidDatabaseDatabaseErrorHandler.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteOpenHelper.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "java/io/File.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-
-@interface AndroidDatabaseSqliteSQLiteOpenHelper () {
- @public
-  AndroidContentContext *mContext_;
-  NSString *mName_;
-  id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> mFactory_;
-  jint mNewVersion_;
-  AndroidDatabaseSqliteSQLiteDatabase *mDatabase_;
-  jboolean mIsInitializing_;
-  jboolean mEnableWriteAheadLogging_;
-  id<AndroidDatabaseDatabaseErrorHandler> mErrorHandler_;
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabaseLockedWithBoolean:(jboolean)writable;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteOpenHelper, mContext_, AndroidContentContext *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteOpenHelper, mName_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteOpenHelper, mFactory_, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteOpenHelper, mDatabase_, AndroidDatabaseSqliteSQLiteDatabase *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteOpenHelper, mErrorHandler_, id<AndroidDatabaseDatabaseErrorHandler>)
-
-inline NSString *AndroidDatabaseSqliteSQLiteOpenHelper_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteOpenHelper_TAG;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteOpenHelper, TAG, NSString *)
-
-inline jboolean AndroidDatabaseSqliteSQLiteOpenHelper_get_DEBUG_STRICT_READONLY();
-#define AndroidDatabaseSqliteSQLiteOpenHelper_DEBUG_STRICT_READONLY false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteOpenHelper, DEBUG_STRICT_READONLY, jboolean)
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteOpenHelper_getDatabaseLockedWithBoolean_(AndroidDatabaseSqliteSQLiteOpenHelper *self, jboolean writable);
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteOpenHelper)
-
-@implementation AndroidDatabaseSqliteSQLiteOpenHelper
-
-- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
-                                 withNSString:(NSString *)name
-withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                      withInt:(jint)version_ {
-  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, factory, version_);
-  return self;
-}
-
-- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
-                                 withNSString:(NSString *)name
-withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
-                                      withInt:(jint)version_
-      withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
-  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(self, context, name, factory, version_, errorHandler);
-  return self;
-}
-
-- (NSString *)getDatabaseName {
-  return mName_;
-}
-
-- (void)setWriteAheadLoggingEnabledWithBoolean:(jboolean)enabled {
-  @synchronized(self) {
-    if (mEnableWriteAheadLogging_ != enabled) {
-      if (mDatabase_ != nil && [mDatabase_ isOpen] && ![((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(mDatabase_)) isReadOnly]) {
-        if (enabled) {
-          [mDatabase_ enableWriteAheadLogging];
-        }
-        else {
-          [mDatabase_ disableWriteAheadLogging];
-        }
-      }
-      mEnableWriteAheadLogging_ = enabled;
-    }
-  }
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getWritableDatabase {
-  @synchronized(self) {
-    return AndroidDatabaseSqliteSQLiteOpenHelper_getDatabaseLockedWithBoolean_(self, true);
-  }
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getReadableDatabase {
-  @synchronized(self) {
-    return AndroidDatabaseSqliteSQLiteOpenHelper_getDatabaseLockedWithBoolean_(self, false);
-  }
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabaseLockedWithBoolean:(jboolean)writable {
-  return AndroidDatabaseSqliteSQLiteOpenHelper_getDatabaseLockedWithBoolean_(self, writable);
-}
-
-- (void)close {
-  @synchronized(self) {
-    if (mIsInitializing_) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Closed during initialization");
-    if (mDatabase_ != nil && [mDatabase_ isOpen]) {
-      [mDatabase_ close];
-      JreStrongAssign(&mDatabase_, nil);
-    }
-  }
-}
-
-- (void)onConfigureWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
-}
-
-- (void)onCreateWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (void)onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                 withInt:(jint)oldVersion
-                                                 withInt:(jint)newVersion {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (void)onDowngradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withInt:(jint)oldVersion
-                                                   withInt:(jint)newVersion {
-  @throw create_AndroidDatabaseSqliteSQLiteException_initWithNSString_(JreStrcat("$I$I", @"Can't downgrade database from version ", oldVersion, @" to ", newVersion));
-}
-
-- (void)onOpenWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
-}
-
-- (void)dealloc {
-  RELEASE_(mContext_);
-  RELEASE_(mName_);
-  RELEASE_(mFactory_);
-  RELEASE_(mDatabase_);
-  RELEASE_(mErrorHandler_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x2, 4, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 7, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 11, 6, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:);
-  methods[1].selector = @selector(initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:withAndroidDatabaseDatabaseErrorHandler:);
-  methods[2].selector = @selector(getDatabaseName);
-  methods[3].selector = @selector(setWriteAheadLoggingEnabledWithBoolean:);
-  methods[4].selector = @selector(getWritableDatabase);
-  methods[5].selector = @selector(getReadableDatabase);
-  methods[6].selector = @selector(getDatabaseLockedWithBoolean:);
-  methods[7].selector = @selector(close);
-  methods[8].selector = @selector(onConfigureWithAndroidDatabaseSqliteSQLiteDatabase:);
-  methods[9].selector = @selector(onCreateWithAndroidDatabaseSqliteSQLiteDatabase:);
-  methods[10].selector = @selector(onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:withInt:withInt:);
-  methods[11].selector = @selector(onDowngradeWithAndroidDatabaseSqliteSQLiteDatabase:withInt:withInt:);
-  methods[12].selector = @selector(onOpenWithAndroidDatabaseSqliteSQLiteDatabase:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
-    { "DEBUG_STRICT_READONLY", "Z", .constantValue.asBOOL = AndroidDatabaseSqliteSQLiteOpenHelper_DEBUG_STRICT_READONLY, 0x1a, -1, -1, -1, -1 },
-    { "mContext_", "LAndroidContentContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mFactory_", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mNewVersion_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mDatabase_", "LAndroidDatabaseSqliteSQLiteDatabase;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mIsInitializing_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mEnableWriteAheadLogging_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mErrorHandler_", "LAndroidDatabaseDatabaseErrorHandler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidContentContext;LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;I", "LAndroidContentContext;LNSString;LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;ILAndroidDatabaseDatabaseErrorHandler;", "setWriteAheadLoggingEnabled", "Z", "getDatabaseLocked", "onConfigure", "LAndroidDatabaseSqliteSQLiteDatabase;", "onCreate", "onUpgrade", "LAndroidDatabaseSqliteSQLiteDatabase;II", "onDowngrade", "onOpen", &AndroidDatabaseSqliteSQLiteOpenHelper_TAG };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteOpenHelper = { "SQLiteOpenHelper", "android.database.sqlite", ptrTable, methods, fields, 7, 0x401, 13, 10, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteOpenHelper;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteOpenHelper class]) {
-    JreStrongAssign(&AndroidDatabaseSqliteSQLiteOpenHelper_TAG, [AndroidDatabaseSqliteSQLiteOpenHelper_class_() getSimpleName]);
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteOpenHelper)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(AndroidDatabaseSqliteSQLiteOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_) {
-  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(self, context, name, factory, version_, nil);
-}
-
-void AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(AndroidDatabaseSqliteSQLiteOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
-  NSObject_init(self);
-  if (version_ < 1) @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Version must be >= 1, was ", version_));
-  JreStrongAssign(&self->mContext_, context);
-  JreStrongAssign(&self->mName_, name);
-  JreStrongAssign(&self->mFactory_, factory);
-  self->mNewVersion_ = version_;
-  JreStrongAssign(&self->mErrorHandler_, errorHandler);
-}
-
-AndroidDatabaseSqliteSQLiteDatabase *AndroidDatabaseSqliteSQLiteOpenHelper_getDatabaseLockedWithBoolean_(AndroidDatabaseSqliteSQLiteOpenHelper *self, jboolean writable) {
-  if (self->mDatabase_ != nil) {
-    if (![self->mDatabase_ isOpen]) {
-      JreStrongAssign(&self->mDatabase_, nil);
-    }
-    else if (!writable || ![((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(self->mDatabase_)) isReadOnly]) {
-      return self->mDatabase_;
-    }
-  }
-  if (self->mIsInitializing_) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"getDatabase called recursively");
-  }
-  AndroidDatabaseSqliteSQLiteDatabase *db = self->mDatabase_;
-  @try {
-    self->mIsInitializing_ = true;
-    if (db != nil) {
-      if (writable && [db isReadOnly]) {
-        [db reopenReadWrite];
-      }
-    }
-    else if (self->mName_ == nil) {
-      db = AndroidDatabaseSqliteSQLiteDatabase_createWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_(nil);
-    }
-    else {
-      @try {
-        {
-          db = [((AndroidContentContext *) nil_chk(self->mContext_)) openOrCreateDatabaseWithNSString:self->mName_ withInt:self->mEnableWriteAheadLogging_ ? AndroidContentContext_MODE_ENABLE_WRITE_AHEAD_LOGGING : 0 withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:self->mFactory_ withAndroidDatabaseDatabaseErrorHandler:self->mErrorHandler_];
-        }
-      }
-      @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-        if (writable) {
-          @throw ex;
-        }
-        AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidDatabaseSqliteSQLiteOpenHelper_TAG, JreStrcat("$$$", @"Couldn't open ", self->mName_, @" for writing (will try read-only):"), ex);
-        NSString *path = [((JavaIoFile *) nil_chk([self->mContext_ getDatabasePathWithNSString:self->mName_])) getPath];
-        db = AndroidDatabaseSqliteSQLiteDatabase_openDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(path, self->mFactory_, AndroidDatabaseSqliteSQLiteDatabase_OPEN_READONLY, self->mErrorHandler_);
-      }
-    }
-    [self onConfigureWithAndroidDatabaseSqliteSQLiteDatabase:db];
-    jint version_ = [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) getVersion];
-    if (version_ != self->mNewVersion_) {
-      if ([db isReadOnly]) {
-        @throw create_AndroidDatabaseSqliteSQLiteException_initWithNSString_(JreStrcat("$I$I$$", @"Can't upgrade read-only database from version ", [db getVersion], @" to ", self->mNewVersion_, @": ", self->mName_));
-      }
-      [db beginTransaction];
-      @try {
-        if (version_ == 0) {
-          [self onCreateWithAndroidDatabaseSqliteSQLiteDatabase:db];
-        }
-        else {
-          if (version_ > self->mNewVersion_) {
-            [self onDowngradeWithAndroidDatabaseSqliteSQLiteDatabase:db withInt:version_ withInt:self->mNewVersion_];
-          }
-          else {
-            [self onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:db withInt:version_ withInt:self->mNewVersion_];
-          }
-        }
-        [db setVersionWithInt:self->mNewVersion_];
-        [db setTransactionSuccessful];
-      }
-      @finally {
-        [db endTransaction];
-      }
-    }
-    [self onOpenWithAndroidDatabaseSqliteSQLiteDatabase:db];
-    if ([db isReadOnly]) {
-      AndroidUtilLog_wWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteOpenHelper_TAG, JreStrcat("$$$", @"Opened ", self->mName_, @" in read-only mode"));
-    }
-    JreStrongAssign(&self->mDatabase_, db);
-    return db;
-  }
-  @finally {
-    self->mIsInitializing_ = false;
-    if (db != nil && db != self->mDatabase_) {
-      [db close];
-    }
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteOpenHelper)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOutOfMemoryException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOutOfMemoryException.h
deleted file mode 100644
index 997511e8f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOutOfMemoryException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOutOfMemoryException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteOutOfMemoryException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOutOfMemoryException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOutOfMemoryException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteOutOfMemoryException
-
-#if !defined (AndroidDatabaseSqliteSQLiteOutOfMemoryException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOutOfMemoryException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteOutOfMemoryException))
-#define AndroidDatabaseSqliteSQLiteOutOfMemoryException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteOutOfMemoryException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteOutOfMemoryException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteOutOfMemoryException_init(AndroidDatabaseSqliteSQLiteOutOfMemoryException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteOutOfMemoryException *new_AndroidDatabaseSqliteSQLiteOutOfMemoryException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteOutOfMemoryException *create_AndroidDatabaseSqliteSQLiteOutOfMemoryException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(AndroidDatabaseSqliteSQLiteOutOfMemoryException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteOutOfMemoryException *new_AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteOutOfMemoryException *create_AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteOutOfMemoryException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteOutOfMemoryException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOutOfMemoryException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOutOfMemoryException.m
deleted file mode 100644
index 95ac056df..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteOutOfMemoryException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteOutOfMemoryException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteOutOfMemoryException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteOutOfMemoryException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteOutOfMemoryException = { "SQLiteOutOfMemoryException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteOutOfMemoryException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteOutOfMemoryException_init(AndroidDatabaseSqliteSQLiteOutOfMemoryException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteOutOfMemoryException *new_AndroidDatabaseSqliteSQLiteOutOfMemoryException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteOutOfMemoryException, init)
-}
-
-AndroidDatabaseSqliteSQLiteOutOfMemoryException *create_AndroidDatabaseSqliteSQLiteOutOfMemoryException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteOutOfMemoryException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(AndroidDatabaseSqliteSQLiteOutOfMemoryException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteOutOfMemoryException *new_AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteOutOfMemoryException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteOutOfMemoryException *create_AndroidDatabaseSqliteSQLiteOutOfMemoryException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteOutOfMemoryException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteOutOfMemoryException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteProgram.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteProgram.h
deleted file mode 100644
index 3116f1e33..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteProgram.h
+++ /dev/null
@@ -1,85 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteProgram
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteProgram
-
-#if !defined (AndroidDatabaseSqliteSQLiteProgram_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram || defined(INCLUDE_AndroidDatabaseSqliteSQLiteProgram))
-#define AndroidDatabaseSqliteSQLiteProgram_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteClosable 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteClosable 1
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class AndroidDatabaseSqliteSQLiteSession;
-@class IOSByteArray;
-@class IOSObjectArray;
-
-@interface AndroidDatabaseSqliteSQLiteProgram : AndroidDatabaseSqliteSQLiteClosable
-
-#pragma mark Public
-
-- (void)bindAllArgsAsStringsWithNSStringArray:(IOSObjectArray *)bindArgs;
-
-- (void)bindBlobWithInt:(jint)index
-          withByteArray:(IOSByteArray *)value;
-
-- (void)bindDoubleWithInt:(jint)index
-               withDouble:(jdouble)value;
-
-- (void)bindLongWithInt:(jint)index
-               withLong:(jlong)value;
-
-- (void)bindNullWithInt:(jint)index;
-
-- (void)bindStringWithInt:(jint)index
-             withNSString:(NSString *)value;
-
-- (void)clearBindings;
-
-- (jint)getUniqueId;
-
-#pragma mark Protected
-
-- (jint)getConnectionFlags;
-
-- (AndroidDatabaseSqliteSQLiteSession *)getSession;
-
-- (void)onAllReferencesReleased;
-
-- (void)onCorruption;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)sql
-                                          withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-- (IOSObjectArray *)getBindArgs;
-
-- (IOSObjectArray *)getColumnNames;
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabase;
-
-- (NSString *)getSql;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteProgram)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteProgram_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteProgram *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteProgram)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteProgram")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteProgram.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteProgram.m
deleted file mode 100644
index d932c823a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteProgram.m
+++ /dev/null
@@ -1,271 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseSqliteSQLiteClosable.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteProgram.h"
-#include "AndroidDatabaseSqliteSQLiteSession.h"
-#include "AndroidDatabaseSqliteSQLiteStatementInfo.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Double.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/Long.h"
-#include "java/lang/System.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-
-@interface AndroidDatabaseSqliteSQLiteProgram () {
- @public
-  AndroidDatabaseSqliteSQLiteDatabase *mDatabase_;
-  NSString *mSql_;
-  jboolean mReadOnly_;
-  IOSObjectArray *mColumnNames_;
-  jint mNumParameters_;
-  IOSObjectArray *mBindArgs_;
-}
-
-- (void)bindWithInt:(jint)index
-             withId:(id)value;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteProgram, mDatabase_, AndroidDatabaseSqliteSQLiteDatabase *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteProgram, mSql_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteProgram, mColumnNames_, IOSObjectArray *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteProgram, mBindArgs_, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidDatabaseSqliteSQLiteProgram_get_EMPTY_STRING_ARRAY();
-static IOSObjectArray *AndroidDatabaseSqliteSQLiteProgram_EMPTY_STRING_ARRAY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteProgram, EMPTY_STRING_ARRAY, IOSObjectArray *)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(AndroidDatabaseSqliteSQLiteProgram *self, jint index, id value);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteProgram__Annotations$0();
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteProgram)
-
-@implementation AndroidDatabaseSqliteSQLiteProgram
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)sql
-                                          withNSObjectArray:(IOSObjectArray *)bindArgs {
-  AndroidDatabaseSqliteSQLiteProgram_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, db, sql, bindArgs);
-  return self;
-}
-
-- (AndroidDatabaseSqliteSQLiteDatabase *)getDatabase {
-  return mDatabase_;
-}
-
-- (NSString *)getSql {
-  return mSql_;
-}
-
-- (IOSObjectArray *)getBindArgs {
-  return mBindArgs_;
-}
-
-- (IOSObjectArray *)getColumnNames {
-  return mColumnNames_;
-}
-
-- (AndroidDatabaseSqliteSQLiteSession *)getSession {
-  return [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(mDatabase_)) getThreadSession];
-}
-
-- (jint)getConnectionFlags {
-  return [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(mDatabase_)) getThreadDefaultConnectionFlagsWithBoolean:mReadOnly_];
-}
-
-- (void)onCorruption {
-  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(mDatabase_)) onCorruption];
-}
-
-- (jint)getUniqueId {
-  return -1;
-}
-
-- (void)bindNullWithInt:(jint)index {
-  AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(self, index, nil);
-}
-
-- (void)bindLongWithInt:(jint)index
-               withLong:(jlong)value {
-  AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(self, index, JavaLangLong_valueOfWithLong_(value));
-}
-
-- (void)bindDoubleWithInt:(jint)index
-               withDouble:(jdouble)value {
-  AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(self, index, JavaLangDouble_valueOfWithDouble_(value));
-}
-
-- (void)bindStringWithInt:(jint)index
-             withNSString:(NSString *)value {
-  if (value == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"the bind value at index ", index, @" is null"));
-  }
-  AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(self, index, value);
-}
-
-- (void)bindBlobWithInt:(jint)index
-          withByteArray:(IOSByteArray *)value {
-  if (value == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"the bind value at index ", index, @" is null"));
-  }
-  AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(self, index, value);
-}
-
-- (void)clearBindings {
-  if (mBindArgs_ != nil) {
-    JavaUtilArrays_fillWithNSObjectArray_withId_(mBindArgs_, nil);
-  }
-}
-
-- (void)bindAllArgsAsStringsWithNSStringArray:(IOSObjectArray *)bindArgs {
-  if (bindArgs != nil) {
-    for (jint i = bindArgs->size_; i != 0; i--) {
-      [self bindStringWithInt:i withNSString:IOSObjectArray_Get(bindArgs, i - 1)];
-    }
-  }
-}
-
-- (void)onAllReferencesReleased {
-  [self clearBindings];
-}
-
-- (void)bindWithInt:(jint)index
-             withId:(id)value {
-  AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(self, index, value);
-}
-
-- (void)dealloc {
-  RELEASE_(mDatabase_);
-  RELEASE_(mSql_);
-  RELEASE_(mColumnNames_);
-  RELEASE_(mBindArgs_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteDatabase;", 0x10, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x10, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LNSObject;", 0x10, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x10, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteSession;", 0x14, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x14, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x14, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, 1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSObjectArray:);
-  methods[1].selector = @selector(getDatabase);
-  methods[2].selector = @selector(getSql);
-  methods[3].selector = @selector(getBindArgs);
-  methods[4].selector = @selector(getColumnNames);
-  methods[5].selector = @selector(getSession);
-  methods[6].selector = @selector(getConnectionFlags);
-  methods[7].selector = @selector(onCorruption);
-  methods[8].selector = @selector(getUniqueId);
-  methods[9].selector = @selector(bindNullWithInt:);
-  methods[10].selector = @selector(bindLongWithInt:withLong:);
-  methods[11].selector = @selector(bindDoubleWithInt:withDouble:);
-  methods[12].selector = @selector(bindStringWithInt:withNSString:);
-  methods[13].selector = @selector(bindBlobWithInt:withByteArray:);
-  methods[14].selector = @selector(clearBindings);
-  methods[15].selector = @selector(bindAllArgsAsStringsWithNSStringArray:);
-  methods[16].selector = @selector(onAllReferencesReleased);
-  methods[17].selector = @selector(bindWithInt:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EMPTY_STRING_ARRAY", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
-    { "mDatabase_", "LAndroidDatabaseSqliteSQLiteDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mSql_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mReadOnly_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mColumnNames_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mNumParameters_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mBindArgs_", "[LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;[LNSObject;", (void *)&AndroidDatabaseSqliteSQLiteProgram__Annotations$0, "bindNull", "I", "bindLong", "IJ", "bindDouble", "ID", "bindString", "ILNSString;", "bindBlob", "I[B", "bindAllArgsAsStrings", "[LNSString;", "bind", "ILNSObject;", &AndroidDatabaseSqliteSQLiteProgram_EMPTY_STRING_ARRAY };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteProgram = { "SQLiteProgram", "android.database.sqlite", ptrTable, methods, fields, 7, 0x401, 18, 7, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteProgram;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteProgram class]) {
-    JreStrongAssignAndConsume(&AndroidDatabaseSqliteSQLiteProgram_EMPTY_STRING_ARRAY, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteProgram)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteProgram_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteProgram *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) {
-  AndroidDatabaseSqliteSQLiteClosable_init(self);
-  JreStrongAssign(&self->mDatabase_, db);
-  JreStrongAssign(&self->mSql_, [((NSString *) nil_chk(sql)) java_trim]);
-  jint n = AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(self->mSql_);
-  {
-    jboolean assumeReadOnly;
-    AndroidDatabaseSqliteSQLiteStatementInfo *info;
-    switch (n) {
-      case AndroidDatabaseDatabaseUtils_STATEMENT_BEGIN:
-      case AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT:
-      case AndroidDatabaseDatabaseUtils_STATEMENT_ABORT:
-      self->mReadOnly_ = false;
-      JreStrongAssign(&self->mColumnNames_, AndroidDatabaseSqliteSQLiteProgram_EMPTY_STRING_ARRAY);
-      self->mNumParameters_ = 0;
-      break;
-      default:
-      assumeReadOnly = (n == AndroidDatabaseDatabaseUtils_STATEMENT_SELECT);
-      info = create_AndroidDatabaseSqliteSQLiteStatementInfo_init();
-      [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) getThreadSession])) prepareWithNSString:self->mSql_ withInt:[db getThreadDefaultConnectionFlagsWithBoolean:assumeReadOnly] withAndroidDatabaseSqliteSQLiteStatementInfo:info];
-      self->mReadOnly_ = info->readOnly_;
-      JreStrongAssign(&self->mColumnNames_, info->columnNames_);
-      self->mNumParameters_ = info->numParameters_;
-      break;
-    }
-  }
-  if (bindArgs != nil && bindArgs->size_ > self->mNumParameters_) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I$", @"Too many bind arguments.  ", bindArgs->size_, @" arguments were provided but the statement needs ", self->mNumParameters_, @" arguments."));
-  }
-  if (self->mNumParameters_ != 0) {
-    JreStrongAssignAndConsume(&self->mBindArgs_, [IOSObjectArray newArrayWithLength:self->mNumParameters_ type:NSObject_class_()]);
-    if (bindArgs != nil) {
-      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bindArgs, 0, self->mBindArgs_, 0, bindArgs->size_);
-    }
-  }
-  else {
-    JreStrongAssign(&self->mBindArgs_, nil);
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteProgram_bindWithInt_withId_(AndroidDatabaseSqliteSQLiteProgram *self, jint index, id value) {
-  if (index < 1 || index > self->mNumParameters_) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I$", @"Cannot bind argument at index ", index, @" because the index is out of range.  The statement has ", self->mNumParameters_, @" parameters."));
-  }
-  IOSObjectArray_Set(nil_chk(self->mBindArgs_), index - 1, value);
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteProgram__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteProgram)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQuery.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQuery.h
deleted file mode 100644
index 6b94e545e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQuery.h
+++ /dev/null
@@ -1,55 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQuery")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteQuery
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQuery 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQuery 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteQuery
-
-#if !defined (AndroidDatabaseSqliteSQLiteQuery_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQuery || defined(INCLUDE_AndroidDatabaseSqliteSQLiteQuery))
-#define AndroidDatabaseSqliteSQLiteQuery_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteProgram 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteProgram 1
-#include "AndroidDatabaseSqliteSQLiteProgram.h"
-
-@class AndroidDatabaseCursorWindow;
-@class AndroidDatabaseSqliteSQLiteDatabase;
-
-@interface AndroidDatabaseSqliteSQLiteQuery : AndroidDatabaseSqliteSQLiteProgram
-
-#pragma mark Public
-
-- (NSString *)description;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)query;
-
-- (jint)fillWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
-                                          withInt:(jint)startPos
-                                          withInt:(jint)requiredPos
-                                      withBoolean:(jboolean)countAllRows;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteQuery)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteQuery *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteQuery *new_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteQuery *create_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteQuery)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQuery")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQuery.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQuery.m
deleted file mode 100644
index 59254cdd7..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQuery.m
+++ /dev/null
@@ -1,94 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h"
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteProgram.h"
-#include "AndroidDatabaseSqliteSQLiteQuery.h"
-#include "AndroidDatabaseSqliteSQLiteSession.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-
-inline NSString *AndroidDatabaseSqliteSQLiteQuery_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteQuery_TAG = @"SQLiteQuery";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteQuery, TAG, NSString *)
-
-@implementation AndroidDatabaseSqliteSQLiteQuery
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)query {
-  AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(self, db, query);
-  return self;
-}
-
-- (jint)fillWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
-                                          withInt:(jint)startPos
-                                          withInt:(jint)requiredPos
-                                      withBoolean:(jboolean)countAllRows {
-  [self acquireReference];
-  @try {
-    [((AndroidDatabaseCursorWindow *) nil_chk(window)) acquireReference];
-    @try {
-      jint numRows = [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getSession])) executeForCursorWindowWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withAndroidDatabaseCursorWindow:window withInt:startPos withInt:requiredPos withBoolean:countAllRows withInt:[self getConnectionFlags]];
-      return numRows;
-    }
-    @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-      [self onCorruption];
-      @throw ex;
-    }
-    @catch (AndroidDatabaseSqliteSQLiteException *ex) {
-      AndroidUtilLog_eWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteQuery_TAG, JreStrcat("$$$$", @"exception: ", [((AndroidDatabaseSqliteSQLiteException *) nil_chk(ex)) getMessage], @"; query: ", [self getSql]));
-      @throw ex;
-    }
-    @finally {
-      [window releaseReference];
-    }
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (NSString *)description {
-  return JreStrcat("$$", @"SQLiteQuery: ", [self getSql]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
-    { NULL, "I", 0x0, 1, 2, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:);
-  methods[1].selector = @selector(fillWindowWithAndroidDatabaseCursorWindow:withInt:withInt:withBoolean:);
-  methods[2].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;", "fillWindow", "LAndroidDatabaseCursorWindow;IIZ", "toString", &AndroidDatabaseSqliteSQLiteQuery_TAG };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteQuery = { "SQLiteQuery", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteQuery;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteQuery *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query) {
-  AndroidDatabaseSqliteSQLiteProgram_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, db, query, nil);
-}
-
-AndroidDatabaseSqliteSQLiteQuery *new_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteQuery, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_, db, query)
-}
-
-AndroidDatabaseSqliteSQLiteQuery *create_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteQuery, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_, db, query)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteQuery)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQueryBuilder.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQueryBuilder.h
deleted file mode 100644
index 667f8ecc2..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQueryBuilder.h
+++ /dev/null
@@ -1,134 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQueryBuilder")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteQueryBuilder
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQueryBuilder 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQueryBuilder 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteQueryBuilder
-
-#if !defined (AndroidDatabaseSqliteSQLiteQueryBuilder_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQueryBuilder || defined(INCLUDE_AndroidDatabaseSqliteSQLiteQueryBuilder))
-#define AndroidDatabaseSqliteSQLiteQueryBuilder_
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class IOSObjectArray;
-@class JavaLangStringBuilder;
-@protocol AndroidDatabaseCursor;
-@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;
-@protocol JavaLangCharSequence;
-@protocol JavaUtilMap;
-@protocol JavaUtilSet;
-
-@interface AndroidDatabaseSqliteSQLiteQueryBuilder : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (void)appendColumnsWithJavaLangStringBuilder:(JavaLangStringBuilder *)s
-                             withNSStringArray:(IOSObjectArray *)columns;
-
-- (void)appendWhereWithJavaLangCharSequence:(id<JavaLangCharSequence>)inWhere;
-
-- (void)appendWhereEscapeStringWithNSString:(NSString *)inWhere;
-
-- (NSString *)buildQueryWithNSStringArray:(IOSObjectArray *)projectionIn
-                             withNSString:(NSString *)selection
-                             withNSString:(NSString *)groupBy
-                             withNSString:(NSString *)having
-                             withNSString:(NSString *)sortOrder
-                             withNSString:(NSString *)limit;
-
-- (NSString *)buildQueryWithNSStringArray:(IOSObjectArray *)projectionIn
-                             withNSString:(NSString *)selection
-                        withNSStringArray:(IOSObjectArray *)selectionArgs
-                             withNSString:(NSString *)groupBy
-                             withNSString:(NSString *)having
-                             withNSString:(NSString *)sortOrder
-                             withNSString:(NSString *)limit;
-
-+ (NSString *)buildQueryStringWithBoolean:(jboolean)distinct
-                             withNSString:(NSString *)tables
-                        withNSStringArray:(IOSObjectArray *)columns
-                             withNSString:(NSString *)where
-                             withNSString:(NSString *)groupBy
-                             withNSString:(NSString *)having
-                             withNSString:(NSString *)orderBy
-                             withNSString:(NSString *)limit;
-
-- (NSString *)buildUnionQueryWithNSStringArray:(IOSObjectArray *)subQueries
-                                  withNSString:(NSString *)sortOrder
-                                  withNSString:(NSString *)limit;
-
-- (NSString *)buildUnionSubQueryWithNSString:(NSString *)typeDiscriminatorColumn
-                           withNSStringArray:(IOSObjectArray *)unionColumns
-                             withJavaUtilSet:(id<JavaUtilSet>)columnsPresentInTable
-                                     withInt:(jint)computedColumnsOffset
-                                withNSString:(NSString *)typeDiscriminatorValue
-                                withNSString:(NSString *)selection
-                                withNSString:(NSString *)groupBy
-                                withNSString:(NSString *)having;
-
-- (NSString *)buildUnionSubQueryWithNSString:(NSString *)typeDiscriminatorColumn
-                           withNSStringArray:(IOSObjectArray *)unionColumns
-                             withJavaUtilSet:(id<JavaUtilSet>)columnsPresentInTable
-                                     withInt:(jint)computedColumnsOffset
-                                withNSString:(NSString *)typeDiscriminatorValue
-                                withNSString:(NSString *)selection
-                           withNSStringArray:(IOSObjectArray *)selectionArgs
-                                withNSString:(NSString *)groupBy
-                                withNSString:(NSString *)having;
-
-- (NSString *)getTables;
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                        withNSStringArray:(IOSObjectArray *)projectionIn
-                                                             withNSString:(NSString *)selection
-                                                        withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                             withNSString:(NSString *)groupBy
-                                                             withNSString:(NSString *)having
-                                                             withNSString:(NSString *)sortOrder;
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                        withNSStringArray:(IOSObjectArray *)projectionIn
-                                                             withNSString:(NSString *)selection
-                                                        withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                             withNSString:(NSString *)groupBy
-                                                             withNSString:(NSString *)having
-                                                             withNSString:(NSString *)sortOrder
-                                                             withNSString:(NSString *)limit;
-
-- (void)setCursorFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;
-
-- (void)setDistinctWithBoolean:(jboolean)distinct;
-
-- (void)setProjectionMapWithJavaUtilMap:(id<JavaUtilMap>)columnMap;
-
-- (void)setStrictWithBoolean:(jboolean)flag;
-
-- (void)setTablesWithNSString:(NSString *)inTables;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidDatabaseSqliteSQLiteQueryBuilder)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteQueryBuilder_init(AndroidDatabaseSqliteSQLiteQueryBuilder *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteQueryBuilder *new_AndroidDatabaseSqliteSQLiteQueryBuilder_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteQueryBuilder *create_AndroidDatabaseSqliteSQLiteQueryBuilder_init();
-
-FOUNDATION_EXPORT NSString *AndroidDatabaseSqliteSQLiteQueryBuilder_buildQueryStringWithBoolean_withNSString_withNSStringArray_withNSString_withNSString_withNSString_withNSString_withNSString_(jboolean distinct, NSString *tables, IOSObjectArray *columns, NSString *where, NSString *groupBy, NSString *having, NSString *orderBy, NSString *limit);
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteQueryBuilder_appendColumnsWithJavaLangStringBuilder_withNSStringArray_(JavaLangStringBuilder *s, IOSObjectArray *columns);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteQueryBuilder)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteQueryBuilder")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQueryBuilder.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQueryBuilder.m
deleted file mode 100644
index 1bace3020..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteQueryBuilder.m
+++ /dev/null
@@ -1,479 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursor.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteQueryBuilder.h"
-#include "AndroidDatabaseSqliteSQLiteSession.h"
-#include "AndroidProviderBaseColumns.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "android/text/TextUtils.h"
-#include "android/util/Log.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Iterator.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-
-@interface AndroidDatabaseSqliteSQLiteQueryBuilder () {
- @public
-  id<JavaUtilMap> mProjectionMap_;
-  NSString *mTables_;
-  JavaLangStringBuilder *mWhereClause_;
-  jboolean mDistinct_;
-  id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> mFactory_;
-  jboolean mStrict_;
-}
-
-+ (void)appendClauseWithJavaLangStringBuilder:(JavaLangStringBuilder *)s
-                                 withNSString:(NSString *)name
-                                 withNSString:(NSString *)clause;
-
-- (void)validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)sql;
-
-- (IOSObjectArray *)computeProjectionWithNSStringArray:(IOSObjectArray *)projectionIn;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteQueryBuilder, mProjectionMap_, id<JavaUtilMap>)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteQueryBuilder, mTables_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteQueryBuilder, mWhereClause_, JavaLangStringBuilder *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteQueryBuilder, mFactory_, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)
-
-inline NSString *AndroidDatabaseSqliteSQLiteQueryBuilder_get_TAG();
-static NSString *AndroidDatabaseSqliteSQLiteQueryBuilder_TAG = @"SQLiteQueryBuilder";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteQueryBuilder, TAG, NSString *)
-
-inline JavaUtilRegexPattern *AndroidDatabaseSqliteSQLiteQueryBuilder_get_sLimitPattern();
-static JavaUtilRegexPattern *AndroidDatabaseSqliteSQLiteQueryBuilder_sLimitPattern;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidDatabaseSqliteSQLiteQueryBuilder, sLimitPattern, JavaUtilRegexPattern *)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(JavaLangStringBuilder *s, NSString *name, NSString *clause);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteQueryBuilder_validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteQueryBuilder *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteQueryBuilder_computeProjectionWithNSStringArray_(AndroidDatabaseSqliteSQLiteQueryBuilder *self, IOSObjectArray *projectionIn);
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteQueryBuilder__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *AndroidDatabaseSqliteSQLiteQueryBuilder__Annotations$1();
-
-J2OBJC_INITIALIZED_DEFN(AndroidDatabaseSqliteSQLiteQueryBuilder)
-
-@implementation AndroidDatabaseSqliteSQLiteQueryBuilder
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)setDistinctWithBoolean:(jboolean)distinct {
-  mDistinct_ = distinct;
-}
-
-- (NSString *)getTables {
-  return mTables_;
-}
-
-- (void)setTablesWithNSString:(NSString *)inTables {
-  JreStrongAssign(&mTables_, inTables);
-}
-
-- (void)appendWhereWithJavaLangCharSequence:(id<JavaLangCharSequence>)inWhere {
-  if (mWhereClause_ == nil) {
-    JreStrongAssignAndConsume(&mWhereClause_, new_JavaLangStringBuilder_initWithInt_([((id<JavaLangCharSequence>) nil_chk(inWhere)) length] + 16));
-  }
-  if ([mWhereClause_ length] == 0) {
-    [((JavaLangStringBuilder *) nil_chk(mWhereClause_)) appendWithChar:'('];
-  }
-  [((JavaLangStringBuilder *) nil_chk(mWhereClause_)) appendWithJavaLangCharSequence:inWhere];
-}
-
-- (void)appendWhereEscapeStringWithNSString:(NSString *)inWhere {
-  if (mWhereClause_ == nil) {
-    JreStrongAssignAndConsume(&mWhereClause_, new_JavaLangStringBuilder_initWithInt_(((jint) [((NSString *) nil_chk(inWhere)) length]) + 16));
-  }
-  if ([mWhereClause_ length] == 0) {
-    [((JavaLangStringBuilder *) nil_chk(mWhereClause_)) appendWithChar:'('];
-  }
-  AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(mWhereClause_, inWhere);
-}
-
-- (void)setProjectionMapWithJavaUtilMap:(id<JavaUtilMap>)columnMap {
-  JreStrongAssign(&mProjectionMap_, columnMap);
-}
-
-- (void)setCursorFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
-  JreStrongAssign(&mFactory_, factory);
-}
-
-- (void)setStrictWithBoolean:(jboolean)flag {
-  mStrict_ = flag;
-}
-
-+ (NSString *)buildQueryStringWithBoolean:(jboolean)distinct
-                             withNSString:(NSString *)tables
-                        withNSStringArray:(IOSObjectArray *)columns
-                             withNSString:(NSString *)where
-                             withNSString:(NSString *)groupBy
-                             withNSString:(NSString *)having
-                             withNSString:(NSString *)orderBy
-                             withNSString:(NSString *)limit {
-  return AndroidDatabaseSqliteSQLiteQueryBuilder_buildQueryStringWithBoolean_withNSString_withNSStringArray_withNSString_withNSString_withNSString_withNSString_withNSString_(distinct, tables, columns, where, groupBy, having, orderBy, limit);
-}
-
-+ (void)appendClauseWithJavaLangStringBuilder:(JavaLangStringBuilder *)s
-                                 withNSString:(NSString *)name
-                                 withNSString:(NSString *)clause {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(s, name, clause);
-}
-
-+ (void)appendColumnsWithJavaLangStringBuilder:(JavaLangStringBuilder *)s
-                             withNSStringArray:(IOSObjectArray *)columns {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendColumnsWithJavaLangStringBuilder_withNSStringArray_(s, columns);
-}
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                        withNSStringArray:(IOSObjectArray *)projectionIn
-                                                             withNSString:(NSString *)selection
-                                                        withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                             withNSString:(NSString *)groupBy
-                                                             withNSString:(NSString *)having
-                                                             withNSString:(NSString *)sortOrder {
-  return [self queryWithAndroidDatabaseSqliteSQLiteDatabase:db withNSStringArray:projectionIn withNSString:selection withNSStringArray:selectionArgs withNSString:groupBy withNSString:having withNSString:sortOrder withNSString:nil];
-}
-
-- (id<AndroidDatabaseCursor>)queryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                        withNSStringArray:(IOSObjectArray *)projectionIn
-                                                             withNSString:(NSString *)selection
-                                                        withNSStringArray:(IOSObjectArray *)selectionArgs
-                                                             withNSString:(NSString *)groupBy
-                                                             withNSString:(NSString *)having
-                                                             withNSString:(NSString *)sortOrder
-                                                             withNSString:(NSString *)limit {
-  if (mTables_ == nil) {
-    return nil;
-  }
-  if (mStrict_ && selection != nil && ((jint) [selection length]) > 0) {
-    NSString *sqlForValidation = [self buildQueryWithNSStringArray:projectionIn withNSString:JreStrcat("C$C", '(', selection, ')') withNSString:groupBy withNSString:having withNSString:sortOrder withNSString:limit];
-    AndroidDatabaseSqliteSQLiteQueryBuilder_validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(self, db, sqlForValidation);
-  }
-  NSString *sql = [self buildQueryWithNSStringArray:projectionIn withNSString:selection withNSString:groupBy withNSString:having withNSString:sortOrder withNSString:limit];
-  if (AndroidUtilLog_isLoggableWithNSString_withInt_(AndroidDatabaseSqliteSQLiteQueryBuilder_TAG, AndroidUtilLog_DEBUG)) {
-    AndroidUtilLog_dWithNSString_withNSString_(AndroidDatabaseSqliteSQLiteQueryBuilder_TAG, JreStrcat("$$", @"Performing query: ", sql));
-  }
-  return [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) rawQueryWithFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:mFactory_ withNSString:sql withNSStringArray:selectionArgs withNSString:AndroidDatabaseSqliteSQLiteDatabase_findEditTableWithNSString_(mTables_)];
-}
-
-- (void)validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                                   withNSString:(NSString *)sql {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(self, db, sql);
-}
-
-- (NSString *)buildQueryWithNSStringArray:(IOSObjectArray *)projectionIn
-                             withNSString:(NSString *)selection
-                             withNSString:(NSString *)groupBy
-                             withNSString:(NSString *)having
-                             withNSString:(NSString *)sortOrder
-                             withNSString:(NSString *)limit {
-  IOSObjectArray *projection = AndroidDatabaseSqliteSQLiteQueryBuilder_computeProjectionWithNSStringArray_(self, projectionIn);
-  JavaLangStringBuilder *where = create_JavaLangStringBuilder_init();
-  jboolean hasBaseWhereClause = mWhereClause_ != nil && [mWhereClause_ length] > 0;
-  if (hasBaseWhereClause) {
-    [where appendWithNSString:[((JavaLangStringBuilder *) nil_chk(mWhereClause_)) description]];
-    [where appendWithChar:')'];
-  }
-  if (selection != nil && ((jint) [selection length]) > 0) {
-    if (hasBaseWhereClause) {
-      [where appendWithNSString:@" AND "];
-    }
-    [where appendWithChar:'('];
-    [where appendWithNSString:selection];
-    [where appendWithChar:')'];
-  }
-  return AndroidDatabaseSqliteSQLiteQueryBuilder_buildQueryStringWithBoolean_withNSString_withNSStringArray_withNSString_withNSString_withNSString_withNSString_withNSString_(mDistinct_, mTables_, projection, [where description], groupBy, having, sortOrder, limit);
-}
-
-- (NSString *)buildQueryWithNSStringArray:(IOSObjectArray *)projectionIn
-                             withNSString:(NSString *)selection
-                        withNSStringArray:(IOSObjectArray *)selectionArgs
-                             withNSString:(NSString *)groupBy
-                             withNSString:(NSString *)having
-                             withNSString:(NSString *)sortOrder
-                             withNSString:(NSString *)limit {
-  return [self buildQueryWithNSStringArray:projectionIn withNSString:selection withNSString:groupBy withNSString:having withNSString:sortOrder withNSString:limit];
-}
-
-- (NSString *)buildUnionSubQueryWithNSString:(NSString *)typeDiscriminatorColumn
-                           withNSStringArray:(IOSObjectArray *)unionColumns
-                             withJavaUtilSet:(id<JavaUtilSet>)columnsPresentInTable
-                                     withInt:(jint)computedColumnsOffset
-                                withNSString:(NSString *)typeDiscriminatorValue
-                                withNSString:(NSString *)selection
-                                withNSString:(NSString *)groupBy
-                                withNSString:(NSString *)having {
-  jint unionColumnsCount = ((IOSObjectArray *) nil_chk(unionColumns))->size_;
-  IOSObjectArray *projectionIn = [IOSObjectArray arrayWithLength:unionColumnsCount type:NSString_class_()];
-  for (jint i = 0; i < unionColumnsCount; i++) {
-    NSString *unionColumn = IOSObjectArray_Get(unionColumns, i);
-    if ([((NSString *) nil_chk(unionColumn)) isEqual:typeDiscriminatorColumn]) {
-      IOSObjectArray_Set(projectionIn, i, JreStrcat("C$$$", '\'', typeDiscriminatorValue, @"' AS ", typeDiscriminatorColumn));
-    }
-    else if (i <= computedColumnsOffset || [((id<JavaUtilSet>) nil_chk(columnsPresentInTable)) containsWithId:unionColumn]) {
-      IOSObjectArray_Set(projectionIn, i, unionColumn);
-    }
-    else {
-      IOSObjectArray_Set(projectionIn, i, JreStrcat("$$", @"NULL AS ", unionColumn));
-    }
-  }
-  return [self buildQueryWithNSStringArray:projectionIn withNSString:selection withNSString:groupBy withNSString:having withNSString:nil withNSString:nil];
-}
-
-- (NSString *)buildUnionSubQueryWithNSString:(NSString *)typeDiscriminatorColumn
-                           withNSStringArray:(IOSObjectArray *)unionColumns
-                             withJavaUtilSet:(id<JavaUtilSet>)columnsPresentInTable
-                                     withInt:(jint)computedColumnsOffset
-                                withNSString:(NSString *)typeDiscriminatorValue
-                                withNSString:(NSString *)selection
-                           withNSStringArray:(IOSObjectArray *)selectionArgs
-                                withNSString:(NSString *)groupBy
-                                withNSString:(NSString *)having {
-  return [self buildUnionSubQueryWithNSString:typeDiscriminatorColumn withNSStringArray:unionColumns withJavaUtilSet:columnsPresentInTable withInt:computedColumnsOffset withNSString:typeDiscriminatorValue withNSString:selection withNSString:groupBy withNSString:having];
-}
-
-- (NSString *)buildUnionQueryWithNSStringArray:(IOSObjectArray *)subQueries
-                                  withNSString:(NSString *)sortOrder
-                                  withNSString:(NSString *)limit {
-  JavaLangStringBuilder *query = create_JavaLangStringBuilder_initWithInt_(128);
-  jint subQueryCount = ((IOSObjectArray *) nil_chk(subQueries))->size_;
-  NSString *unionOperator = mDistinct_ ? @" UNION " : @" UNION ALL ";
-  for (jint i = 0; i < subQueryCount; i++) {
-    if (i > 0) {
-      [query appendWithNSString:unionOperator];
-    }
-    [query appendWithNSString:IOSObjectArray_Get(subQueries, i)];
-  }
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" ORDER BY ", sortOrder);
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" LIMIT ", limit);
-  return [query description];
-}
-
-- (IOSObjectArray *)computeProjectionWithNSStringArray:(IOSObjectArray *)projectionIn {
-  return AndroidDatabaseSqliteSQLiteQueryBuilder_computeProjectionWithNSStringArray_(self, projectionIn);
-}
-
-- (void)dealloc {
-  RELEASE_(mProjectionMap_);
-  RELEASE_(mTables_);
-  RELEASE_(mWhereClause_);
-  RELEASE_(mFactory_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 7, 8, -1, 9, -1, -1 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 13, 14, -1, -1, -1, -1 },
-    { NULL, "V", 0xa, 15, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 17, 18, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 19, 20, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseCursor;", 0x1, 19, 21, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 22, 23, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 24, 25, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 24, 26, -1, -1, 27, -1 },
-    { NULL, "LNSString;", 0x1, 28, 29, -1, 30, -1, -1 },
-    { NULL, "LNSString;", 0x1, 28, 31, -1, 32, 33, -1 },
-    { NULL, "LNSString;", 0x1, 34, 35, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x2, 36, 37, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(setDistinctWithBoolean:);
-  methods[2].selector = @selector(getTables);
-  methods[3].selector = @selector(setTablesWithNSString:);
-  methods[4].selector = @selector(appendWhereWithJavaLangCharSequence:);
-  methods[5].selector = @selector(appendWhereEscapeStringWithNSString:);
-  methods[6].selector = @selector(setProjectionMapWithJavaUtilMap:);
-  methods[7].selector = @selector(setCursorFactoryWithAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:);
-  methods[8].selector = @selector(setStrictWithBoolean:);
-  methods[9].selector = @selector(buildQueryStringWithBoolean:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:withNSString:);
-  methods[10].selector = @selector(appendClauseWithJavaLangStringBuilder:withNSString:withNSString:);
-  methods[11].selector = @selector(appendColumnsWithJavaLangStringBuilder:withNSStringArray:);
-  methods[12].selector = @selector(queryWithAndroidDatabaseSqliteSQLiteDatabase:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:);
-  methods[13].selector = @selector(queryWithAndroidDatabaseSqliteSQLiteDatabase:withNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
-  methods[14].selector = @selector(validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:);
-  methods[15].selector = @selector(buildQueryWithNSStringArray:withNSString:withNSString:withNSString:withNSString:withNSString:);
-  methods[16].selector = @selector(buildQueryWithNSStringArray:withNSString:withNSStringArray:withNSString:withNSString:withNSString:withNSString:);
-  methods[17].selector = @selector(buildUnionSubQueryWithNSString:withNSStringArray:withJavaUtilSet:withInt:withNSString:withNSString:withNSString:withNSString:);
-  methods[18].selector = @selector(buildUnionSubQueryWithNSString:withNSStringArray:withJavaUtilSet:withInt:withNSString:withNSString:withNSStringArray:withNSString:withNSString:);
-  methods[19].selector = @selector(buildUnionQueryWithNSStringArray:withNSString:withNSString:);
-  methods[20].selector = @selector(computeProjectionWithNSStringArray:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
-    { "sLimitPattern", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
-    { "mProjectionMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 40, -1 },
-    { "mTables_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mWhereClause_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mDistinct_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mFactory_", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mStrict_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "setDistinct", "Z", "setTables", "LNSString;", "appendWhere", "LJavaLangCharSequence;", "appendWhereEscapeString", "setProjectionMap", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "setCursorFactory", "LAndroidDatabaseSqliteSQLiteDatabase_CursorFactory;", "setStrict", "buildQueryString", "ZLNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;LNSString;", "appendClause", "LJavaLangStringBuilder;LNSString;LNSString;", "appendColumns", "LJavaLangStringBuilder;[LNSString;", "query", "LAndroidDatabaseSqliteSQLiteDatabase;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;", "LAndroidDatabaseSqliteSQLiteDatabase;[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", "validateQuerySql", "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;", "buildQuery", "[LNSString;LNSString;LNSString;LNSString;LNSString;LNSString;", "[LNSString;LNSString;[LNSString;LNSString;LNSString;LNSString;LNSString;", (void *)&AndroidDatabaseSqliteSQLiteQueryBuilder__Annotations$0, "buildUnionSubQuery", "LNSString;[LNSString;LJavaUtilSet;ILNSString;LNSString;LNSString;LNSString;", "(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "LNSString;[LNSString;LJavaUtilSet;ILNSString;LNSString;[LNSString;LNSString;LNSString;", "(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", (void *)&AndroidDatabaseSqliteSQLiteQueryBuilder__Annotations$1, "buildUnionQuery", "[LNSString;LNSString;LNSString;", "computeProjection", "[LNSString;", &AndroidDatabaseSqliteSQLiteQueryBuilder_TAG, &AndroidDatabaseSqliteSQLiteQueryBuilder_sLimitPattern, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteQueryBuilder = { "SQLiteQueryBuilder", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1, 21, 8, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteQueryBuilder;
-}
-
-+ (void)initialize {
-  if (self == [AndroidDatabaseSqliteSQLiteQueryBuilder class]) {
-    JreStrongAssign(&AndroidDatabaseSqliteSQLiteQueryBuilder_sLimitPattern, JavaUtilRegexPattern_compileWithNSString_(@"\\s*\\d+\\s*(,\\s*\\d+\\s*)?"));
-    J2OBJC_SET_INITIALIZED(AndroidDatabaseSqliteSQLiteQueryBuilder)
-  }
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteQueryBuilder_init(AndroidDatabaseSqliteSQLiteQueryBuilder *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mProjectionMap_, nil);
-  JreStrongAssign(&self->mTables_, @"");
-  JreStrongAssign(&self->mWhereClause_, nil);
-  self->mDistinct_ = false;
-  JreStrongAssign(&self->mFactory_, nil);
-}
-
-AndroidDatabaseSqliteSQLiteQueryBuilder *new_AndroidDatabaseSqliteSQLiteQueryBuilder_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteQueryBuilder, init)
-}
-
-AndroidDatabaseSqliteSQLiteQueryBuilder *create_AndroidDatabaseSqliteSQLiteQueryBuilder_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteQueryBuilder, init)
-}
-
-NSString *AndroidDatabaseSqliteSQLiteQueryBuilder_buildQueryStringWithBoolean_withNSString_withNSStringArray_withNSString_withNSString_withNSString_withNSString_withNSString_(jboolean distinct, NSString *tables, IOSObjectArray *columns, NSString *where, NSString *groupBy, NSString *having, NSString *orderBy, NSString *limit) {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_initialize();
-  if (AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(groupBy) && !AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(having)) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"HAVING clauses are only permitted when using a groupBy clause");
-  }
-  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(limit) && ![((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(AndroidDatabaseSqliteSQLiteQueryBuilder_sLimitPattern)) matcherWithJavaLangCharSequence:limit])) matches]) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid LIMIT clauses:", limit));
-  }
-  JavaLangStringBuilder *query = create_JavaLangStringBuilder_initWithInt_(120);
-  [query appendWithNSString:@"SELECT "];
-  if (distinct) {
-    [query appendWithNSString:@"DISTINCT "];
-  }
-  if (columns != nil && columns->size_ != 0) {
-    AndroidDatabaseSqliteSQLiteQueryBuilder_appendColumnsWithJavaLangStringBuilder_withNSStringArray_(query, columns);
-  }
-  else {
-    [query appendWithNSString:@"* "];
-  }
-  [query appendWithNSString:@"FROM "];
-  [query appendWithNSString:tables];
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" WHERE ", where);
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" GROUP BY ", groupBy);
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" HAVING ", having);
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" ORDER BY ", orderBy);
-  AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(query, @" LIMIT ", limit);
-  return [query description];
-}
-
-void AndroidDatabaseSqliteSQLiteQueryBuilder_appendClauseWithJavaLangStringBuilder_withNSString_withNSString_(JavaLangStringBuilder *s, NSString *name, NSString *clause) {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_initialize();
-  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(clause)) {
-    [((JavaLangStringBuilder *) nil_chk(s)) appendWithNSString:name];
-    [s appendWithNSString:clause];
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteQueryBuilder_appendColumnsWithJavaLangStringBuilder_withNSStringArray_(JavaLangStringBuilder *s, IOSObjectArray *columns) {
-  AndroidDatabaseSqliteSQLiteQueryBuilder_initialize();
-  jint n = ((IOSObjectArray *) nil_chk(columns))->size_;
-  for (jint i = 0; i < n; i++) {
-    NSString *column = IOSObjectArray_Get(columns, i);
-    if (column != nil) {
-      if (i > 0) {
-        [((JavaLangStringBuilder *) nil_chk(s)) appendWithNSString:@", "];
-      }
-      [((JavaLangStringBuilder *) nil_chk(s)) appendWithNSString:column];
-    }
-  }
-  [((JavaLangStringBuilder *) nil_chk(s)) appendWithChar:' '];
-}
-
-void AndroidDatabaseSqliteSQLiteQueryBuilder_validateQuerySqlWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteQueryBuilder *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql) {
-  [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) getThreadSession])) prepareWithNSString:sql withInt:[db getThreadDefaultConnectionFlagsWithBoolean:true] withAndroidDatabaseSqliteSQLiteStatementInfo:nil];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteQueryBuilder_computeProjectionWithNSStringArray_(AndroidDatabaseSqliteSQLiteQueryBuilder *self, IOSObjectArray *projectionIn) {
-  if (projectionIn != nil && projectionIn->size_ > 0) {
-    if (self->mProjectionMap_ != nil) {
-      IOSObjectArray *projection = [IOSObjectArray arrayWithLength:projectionIn->size_ type:NSString_class_()];
-      jint length = projectionIn->size_;
-      for (jint i = 0; i < length; i++) {
-        NSString *userColumn = IOSObjectArray_Get(projectionIn, i);
-        NSString *column = [((id<JavaUtilMap>) nil_chk(self->mProjectionMap_)) getWithId:userColumn];
-        if (column != nil) {
-          IOSObjectArray_Set(projection, i, column);
-          continue;
-        }
-        if (!self->mStrict_ && ([((NSString *) nil_chk(userColumn)) java_contains:@" AS "] || [userColumn java_contains:@" as "])) {
-          IOSObjectArray_Set(projection, i, userColumn);
-          continue;
-        }
-        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Invalid column ", IOSObjectArray_Get(projectionIn, i)));
-      }
-      return projection;
-    }
-    else {
-      return projectionIn;
-    }
-  }
-  else if (self->mProjectionMap_ != nil) {
-    id<JavaUtilSet> entrySet = [self->mProjectionMap_ entrySet];
-    IOSObjectArray *projection = [IOSObjectArray arrayWithLength:[((id<JavaUtilSet>) nil_chk(entrySet)) size] type:NSString_class_()];
-    id<JavaUtilIterator> entryIter = [entrySet iterator];
-    jint i = 0;
-    while ([((id<JavaUtilIterator>) nil_chk(entryIter)) hasNext]) {
-      id<JavaUtilMap_Entry> entry_ = [entryIter next];
-      if ([((NSString *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey])) isEqual:AndroidProviderBaseColumns__COUNT]) {
-        continue;
-      }
-      IOSObjectArray_Set(projection, i++, [entry_ getValue]);
-    }
-    return projection;
-  }
-  return nil;
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteQueryBuilder__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *AndroidDatabaseSqliteSQLiteQueryBuilder__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteQueryBuilder)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.h
deleted file mode 100644
index cfb714cd5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException
-
-#if !defined (AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException))
-#define AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *new_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *create_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *new_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *create_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.m
deleted file mode 100644
index 37caf6f7b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException = { "SQLiteReadOnlyDatabaseException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *new_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException, init)
-}
-
-AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *create_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *new_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException *create_AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteSession.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteSession.h
deleted file mode 100644
index 9ff47c784..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteSession.h
+++ /dev/null
@@ -1,105 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteSession")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteSession
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteSession 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteSession 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteSession
-
-#if !defined (AndroidDatabaseSqliteSQLiteSession_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteSession || defined(INCLUDE_AndroidDatabaseSqliteSQLiteSession))
-#define AndroidDatabaseSqliteSQLiteSession_
-
-@class AndroidDatabaseCursorWindow;
-@class AndroidDatabaseSqliteSQLiteConnectionPool;
-@class AndroidDatabaseSqliteSQLiteStatementInfo;
-@class IOSObjectArray;
-@protocol AndroidDatabaseSqliteSQLiteTransactionListener;
-
-@interface AndroidDatabaseSqliteSQLiteSession : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)connectionPool;
-
-- (void)beginTransactionWithInt:(jint)transactionMode
-withAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener
-                        withInt:(jint)connectionFlags;
-
-- (void)endTransaction;
-
-- (void)executeWithNSString:(NSString *)sql
-          withNSObjectArray:(IOSObjectArray *)bindArgs
-                    withInt:(jint)connectionFlags;
-
-- (jint)executeForChangedRowCountWithNSString:(NSString *)sql
-                            withNSObjectArray:(IOSObjectArray *)bindArgs
-                                      withInt:(jint)connectionFlags;
-
-- (jint)executeForCursorWindowWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs
-           withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
-                                   withInt:(jint)startPos
-                                   withInt:(jint)requiredPos
-                               withBoolean:(jboolean)countAllRows
-                                   withInt:(jint)connectionFlags;
-
-- (jlong)executeForLastInsertedRowIdWithNSString:(NSString *)sql
-                               withNSObjectArray:(IOSObjectArray *)bindArgs
-                                         withInt:(jint)connectionFlags;
-
-- (jlong)executeForLongWithNSString:(NSString *)sql
-                  withNSObjectArray:(IOSObjectArray *)bindArgs
-                            withInt:(jint)connectionFlags;
-
-- (NSString *)executeForStringWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs
-                                   withInt:(jint)connectionFlags;
-
-- (jboolean)hasConnection;
-
-- (jboolean)hasNestedTransaction;
-
-- (jboolean)hasTransaction;
-
-- (void)prepareWithNSString:(NSString *)sql
-                    withInt:(jint)connectionFlags
-withAndroidDatabaseSqliteSQLiteStatementInfo:(AndroidDatabaseSqliteSQLiteStatementInfo *)outStatementInfo;
-
-- (void)setTransactionSuccessful;
-
-- (jboolean)yieldTransactionWithLong:(jlong)sleepAfterYieldDelayMillis
-                         withBoolean:(jboolean)throwIfUnsafe;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteSession)
-
-inline jint AndroidDatabaseSqliteSQLiteSession_get_TRANSACTION_MODE_DEFERRED();
-#define AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_DEFERRED 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteSession, TRANSACTION_MODE_DEFERRED, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteSession_get_TRANSACTION_MODE_IMMEDIATE();
-#define AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_IMMEDIATE 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteSession, TRANSACTION_MODE_IMMEDIATE, jint)
-
-inline jint AndroidDatabaseSqliteSQLiteSession_get_TRANSACTION_MODE_EXCLUSIVE();
-#define AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_EXCLUSIVE 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseSqliteSQLiteSession, TRANSACTION_MODE_EXCLUSIVE, jint)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(AndroidDatabaseSqliteSQLiteSession *self, AndroidDatabaseSqliteSQLiteConnectionPool *connectionPool);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteSession *new_AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(AndroidDatabaseSqliteSQLiteConnectionPool *connectionPool) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteSession *create_AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(AndroidDatabaseSqliteSQLiteConnectionPool *connectionPool);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteSession)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteSession")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteSession.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteSession.m
deleted file mode 100644
index 7417b2d81..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteSession.m
+++ /dev/null
@@ -1,686 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseCursorWindow.h"
-#include "AndroidDatabaseDatabaseUtils.h"
-#include "AndroidDatabaseSqliteSQLiteConnection.h"
-#include "AndroidDatabaseSqliteSQLiteConnectionPool.h"
-#include "AndroidDatabaseSqliteSQLiteSession.h"
-#include "AndroidDatabaseSqliteSQLiteStatementInfo.h"
-#include "AndroidDatabaseSqliteSQLiteTransactionListener.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/InterruptedException.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/Thread.h"
-
-@class AndroidDatabaseSqliteSQLiteSession_Transaction;
-
-@interface AndroidDatabaseSqliteSQLiteSession () {
- @public
-  AndroidDatabaseSqliteSQLiteConnectionPool *mConnectionPool_;
-  AndroidDatabaseSqliteSQLiteConnection *mConnection_;
-  jint mConnectionFlags_;
-  jint mConnectionUseCount_;
-  AndroidDatabaseSqliteSQLiteSession_Transaction *mTransactionPool_;
-  AndroidDatabaseSqliteSQLiteSession_Transaction *mTransactionStack_;
-}
-
-- (void)beginTransactionUncheckedWithInt:(jint)transactionMode
-withAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener
-                                 withInt:(jint)connectionFlags;
-
-- (void)endTransactionUncheckedWithBoolean:(jboolean)yielding;
-
-- (jboolean)yieldTransactionUncheckedWithLong:(jlong)sleepAfterYieldDelayMillis;
-
-- (jboolean)executeSpecialWithNSString:(NSString *)sql
-                     withNSObjectArray:(IOSObjectArray *)bindArgs
-                               withInt:(jint)connectionFlags;
-
-- (void)acquireConnectionWithNSString:(NSString *)sql
-                              withInt:(jint)connectionFlags;
-
-- (void)releaseConnection;
-
-- (void)throwIfNoTransaction;
-
-- (void)throwIfTransactionMarkedSuccessful;
-
-- (void)throwIfNestedTransaction;
-
-- (AndroidDatabaseSqliteSQLiteSession_Transaction *)obtainTransactionWithInt:(jint)mode
-                          withAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)listener;
-
-- (void)recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction:(AndroidDatabaseSqliteSQLiteSession_Transaction *)transaction;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteSession, mConnectionPool_, AndroidDatabaseSqliteSQLiteConnectionPool *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteSession, mConnection_, AndroidDatabaseSqliteSQLiteConnection *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteSession, mTransactionPool_, AndroidDatabaseSqliteSQLiteSession_Transaction *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteSession, mTransactionStack_, AndroidDatabaseSqliteSQLiteSession_Transaction *)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_beginTransactionUncheckedWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_withInt_(AndroidDatabaseSqliteSQLiteSession *self, jint transactionMode, id<AndroidDatabaseSqliteSQLiteTransactionListener> transactionListener, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_endTransactionUncheckedWithBoolean_(AndroidDatabaseSqliteSQLiteSession *self, jboolean yielding);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteSession_yieldTransactionUncheckedWithLong_(AndroidDatabaseSqliteSQLiteSession *self, jlong sleepAfterYieldDelayMillis);
-
-__attribute__((unused)) static jboolean AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(AndroidDatabaseSqliteSQLiteSession *self, NSString *sql, IOSObjectArray *bindArgs, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(AndroidDatabaseSqliteSQLiteSession *self, NSString *sql, jint connectionFlags);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_releaseConnection(AndroidDatabaseSqliteSQLiteSession *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_throwIfNoTransaction(AndroidDatabaseSqliteSQLiteSession *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_throwIfTransactionMarkedSuccessful(AndroidDatabaseSqliteSQLiteSession *self);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_throwIfNestedTransaction(AndroidDatabaseSqliteSQLiteSession *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteSession_Transaction *AndroidDatabaseSqliteSQLiteSession_obtainTransactionWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_(AndroidDatabaseSqliteSQLiteSession *self, jint mode, id<AndroidDatabaseSqliteSQLiteTransactionListener> listener);
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction_(AndroidDatabaseSqliteSQLiteSession *self, AndroidDatabaseSqliteSQLiteSession_Transaction *transaction);
-
-@interface AndroidDatabaseSqliteSQLiteSession_Transaction : NSObject {
- @public
-  AndroidDatabaseSqliteSQLiteSession_Transaction *mParent_;
-  jint mMode_;
-  id<AndroidDatabaseSqliteSQLiteTransactionListener> mListener_;
-  jboolean mMarkedSuccessful_;
-  jboolean mChildFailed_;
-}
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteSession_Transaction)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteSession_Transaction, mParent_, AndroidDatabaseSqliteSQLiteSession_Transaction *)
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteSession_Transaction, mListener_, id<AndroidDatabaseSqliteSQLiteTransactionListener>)
-
-__attribute__((unused)) static void AndroidDatabaseSqliteSQLiteSession_Transaction_init(AndroidDatabaseSqliteSQLiteSession_Transaction *self);
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteSession_Transaction *new_AndroidDatabaseSqliteSQLiteSession_Transaction_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidDatabaseSqliteSQLiteSession_Transaction *create_AndroidDatabaseSqliteSQLiteSession_Transaction_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteSession_Transaction)
-
-@implementation AndroidDatabaseSqliteSQLiteSession
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteConnectionPool:(AndroidDatabaseSqliteSQLiteConnectionPool *)connectionPool {
-  AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(self, connectionPool);
-  return self;
-}
-
-- (jboolean)hasTransaction {
-  return mTransactionStack_ != nil;
-}
-
-- (jboolean)hasNestedTransaction {
-  return mTransactionStack_ != nil && mTransactionStack_->mParent_ != nil;
-}
-
-- (jboolean)hasConnection {
-  return mConnection_ != nil;
-}
-
-- (void)beginTransactionWithInt:(jint)transactionMode
-withAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener
-                        withInt:(jint)connectionFlags {
-  AndroidDatabaseSqliteSQLiteSession_throwIfTransactionMarkedSuccessful(self);
-  AndroidDatabaseSqliteSQLiteSession_beginTransactionUncheckedWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_withInt_(self, transactionMode, transactionListener, connectionFlags);
-}
-
-- (void)beginTransactionUncheckedWithInt:(jint)transactionMode
-withAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)transactionListener
-                                 withInt:(jint)connectionFlags {
-  AndroidDatabaseSqliteSQLiteSession_beginTransactionUncheckedWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_withInt_(self, transactionMode, transactionListener, connectionFlags);
-}
-
-- (void)setTransactionSuccessful {
-  AndroidDatabaseSqliteSQLiteSession_throwIfNoTransaction(self);
-  AndroidDatabaseSqliteSQLiteSession_throwIfTransactionMarkedSuccessful(self);
-  ((AndroidDatabaseSqliteSQLiteSession_Transaction *) nil_chk(mTransactionStack_))->mMarkedSuccessful_ = true;
-}
-
-- (void)endTransaction {
-  AndroidDatabaseSqliteSQLiteSession_throwIfNoTransaction(self);
-  JreAssert((mConnection_ != nil), (@"android/database/sqlite/SQLiteSession.java:383 condition failed: assert mConnection != null;"));
-  AndroidDatabaseSqliteSQLiteSession_endTransactionUncheckedWithBoolean_(self, false);
-}
-
-- (void)endTransactionUncheckedWithBoolean:(jboolean)yielding {
-  AndroidDatabaseSqliteSQLiteSession_endTransactionUncheckedWithBoolean_(self, yielding);
-}
-
-- (jboolean)yieldTransactionWithLong:(jlong)sleepAfterYieldDelayMillis
-                         withBoolean:(jboolean)throwIfUnsafe {
-  if (throwIfUnsafe) {
-    AndroidDatabaseSqliteSQLiteSession_throwIfNoTransaction(self);
-    AndroidDatabaseSqliteSQLiteSession_throwIfTransactionMarkedSuccessful(self);
-    AndroidDatabaseSqliteSQLiteSession_throwIfNestedTransaction(self);
-  }
-  else {
-    if (mTransactionStack_ == nil || mTransactionStack_->mMarkedSuccessful_ || mTransactionStack_->mParent_ != nil) {
-      return false;
-    }
-  }
-  JreAssert((mConnection_ != nil), (@"android/database/sqlite/SQLiteSession.java:491 condition failed: assert mConnection != null;"));
-  if (((AndroidDatabaseSqliteSQLiteSession_Transaction *) nil_chk(mTransactionStack_))->mChildFailed_) {
-    return false;
-  }
-  return AndroidDatabaseSqliteSQLiteSession_yieldTransactionUncheckedWithLong_(self, sleepAfterYieldDelayMillis);
-}
-
-- (jboolean)yieldTransactionUncheckedWithLong:(jlong)sleepAfterYieldDelayMillis {
-  return AndroidDatabaseSqliteSQLiteSession_yieldTransactionUncheckedWithLong_(self, sleepAfterYieldDelayMillis);
-}
-
-- (void)prepareWithNSString:(NSString *)sql
-                    withInt:(jint)connectionFlags
-withAndroidDatabaseSqliteSQLiteStatementInfo:(AndroidDatabaseSqliteSQLiteStatementInfo *)outStatementInfo {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) prepareWithNSString:sql withAndroidDatabaseSqliteSQLiteStatementInfo:outStatementInfo];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (void)executeWithNSString:(NSString *)sql
-          withNSObjectArray:(IOSObjectArray *)bindArgs
-                    withInt:(jint)connectionFlags {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags)) {
-    return;
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) executeWithNSString:sql withNSObjectArray:bindArgs];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (jlong)executeForLongWithNSString:(NSString *)sql
-                  withNSObjectArray:(IOSObjectArray *)bindArgs
-                            withInt:(jint)connectionFlags {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags)) {
-    return 0;
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) executeForLongWithNSString:sql withNSObjectArray:bindArgs];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (NSString *)executeForStringWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs
-                                   withInt:(jint)connectionFlags {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags)) {
-    return nil;
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) executeForStringWithNSString:sql withNSObjectArray:bindArgs];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (jint)executeForChangedRowCountWithNSString:(NSString *)sql
-                            withNSObjectArray:(IOSObjectArray *)bindArgs
-                                      withInt:(jint)connectionFlags {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags)) {
-    return 0;
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) executeForChangedRowCountWithNSString:sql withNSObjectArray:bindArgs];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (jlong)executeForLastInsertedRowIdWithNSString:(NSString *)sql
-                               withNSObjectArray:(IOSObjectArray *)bindArgs
-                                         withInt:(jint)connectionFlags {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags)) {
-    return 0;
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) executeForLastInsertedRowIdWithNSString:sql withNSObjectArray:bindArgs];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (jint)executeForCursorWindowWithNSString:(NSString *)sql
-                         withNSObjectArray:(IOSObjectArray *)bindArgs
-           withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
-                                   withInt:(jint)startPos
-                                   withInt:(jint)requiredPos
-                               withBoolean:(jboolean)countAllRows
-                                   withInt:(jint)connectionFlags {
-  if (sql == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sql must not be null.");
-  }
-  if (window == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"window must not be null.");
-  }
-  if (AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags)) {
-    [window clear];
-    return 0;
-  }
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(mConnection_)) executeForCursorWindowWithNSString:sql withNSObjectArray:bindArgs withAndroidDatabaseCursorWindow:window withInt:startPos withInt:requiredPos withBoolean:countAllRows];
-  }
-  @finally {
-    AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-  }
-}
-
-- (jboolean)executeSpecialWithNSString:(NSString *)sql
-                     withNSObjectArray:(IOSObjectArray *)bindArgs
-                               withInt:(jint)connectionFlags {
-  return AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(self, sql, bindArgs, connectionFlags);
-}
-
-- (void)acquireConnectionWithNSString:(NSString *)sql
-                              withInt:(jint)connectionFlags {
-  AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, sql, connectionFlags);
-}
-
-- (void)releaseConnection {
-  AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-}
-
-- (void)throwIfNoTransaction {
-  AndroidDatabaseSqliteSQLiteSession_throwIfNoTransaction(self);
-}
-
-- (void)throwIfTransactionMarkedSuccessful {
-  AndroidDatabaseSqliteSQLiteSession_throwIfTransactionMarkedSuccessful(self);
-}
-
-- (void)throwIfNestedTransaction {
-  AndroidDatabaseSqliteSQLiteSession_throwIfNestedTransaction(self);
-}
-
-- (AndroidDatabaseSqliteSQLiteSession_Transaction *)obtainTransactionWithInt:(jint)mode
-                          withAndroidDatabaseSqliteSQLiteTransactionListener:(id<AndroidDatabaseSqliteSQLiteTransactionListener>)listener {
-  return AndroidDatabaseSqliteSQLiteSession_obtainTransactionWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_(self, mode, listener);
-}
-
-- (void)recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction:(AndroidDatabaseSqliteSQLiteSession_Transaction *)transaction {
-  AndroidDatabaseSqliteSQLiteSession_recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction_(self, transaction);
-}
-
-- (void)dealloc {
-  RELEASE_(mConnectionPool_);
-  RELEASE_(mConnection_);
-  RELEASE_(mTransactionPool_);
-  RELEASE_(mTransactionStack_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 3, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 14, 13, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 15, 13, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 16, 13, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 17, 13, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 18, 19, -1, -1, -1, -1 },
-    { NULL, "Z", 0x2, 20, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 21, 22, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidDatabaseSqliteSQLiteSession_Transaction;", 0x2, 23, 24, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 25, 26, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteConnectionPool:);
-  methods[1].selector = @selector(hasTransaction);
-  methods[2].selector = @selector(hasNestedTransaction);
-  methods[3].selector = @selector(hasConnection);
-  methods[4].selector = @selector(beginTransactionWithInt:withAndroidDatabaseSqliteSQLiteTransactionListener:withInt:);
-  methods[5].selector = @selector(beginTransactionUncheckedWithInt:withAndroidDatabaseSqliteSQLiteTransactionListener:withInt:);
-  methods[6].selector = @selector(setTransactionSuccessful);
-  methods[7].selector = @selector(endTransaction);
-  methods[8].selector = @selector(endTransactionUncheckedWithBoolean:);
-  methods[9].selector = @selector(yieldTransactionWithLong:withBoolean:);
-  methods[10].selector = @selector(yieldTransactionUncheckedWithLong:);
-  methods[11].selector = @selector(prepareWithNSString:withInt:withAndroidDatabaseSqliteSQLiteStatementInfo:);
-  methods[12].selector = @selector(executeWithNSString:withNSObjectArray:withInt:);
-  methods[13].selector = @selector(executeForLongWithNSString:withNSObjectArray:withInt:);
-  methods[14].selector = @selector(executeForStringWithNSString:withNSObjectArray:withInt:);
-  methods[15].selector = @selector(executeForChangedRowCountWithNSString:withNSObjectArray:withInt:);
-  methods[16].selector = @selector(executeForLastInsertedRowIdWithNSString:withNSObjectArray:withInt:);
-  methods[17].selector = @selector(executeForCursorWindowWithNSString:withNSObjectArray:withAndroidDatabaseCursorWindow:withInt:withInt:withBoolean:withInt:);
-  methods[18].selector = @selector(executeSpecialWithNSString:withNSObjectArray:withInt:);
-  methods[19].selector = @selector(acquireConnectionWithNSString:withInt:);
-  methods[20].selector = @selector(releaseConnection);
-  methods[21].selector = @selector(throwIfNoTransaction);
-  methods[22].selector = @selector(throwIfTransactionMarkedSuccessful);
-  methods[23].selector = @selector(throwIfNestedTransaction);
-  methods[24].selector = @selector(obtainTransactionWithInt:withAndroidDatabaseSqliteSQLiteTransactionListener:);
-  methods[25].selector = @selector(recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mConnectionPool_", "LAndroidDatabaseSqliteSQLiteConnectionPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mConnection_", "LAndroidDatabaseSqliteSQLiteConnection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mConnectionFlags_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mConnectionUseCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mTransactionPool_", "LAndroidDatabaseSqliteSQLiteSession_Transaction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mTransactionStack_", "LAndroidDatabaseSqliteSQLiteSession_Transaction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "TRANSACTION_MODE_DEFERRED", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_DEFERRED, 0x19, -1, -1, -1, -1 },
-    { "TRANSACTION_MODE_IMMEDIATE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_IMMEDIATE, 0x19, -1, -1, -1, -1 },
-    { "TRANSACTION_MODE_EXCLUSIVE", "I", .constantValue.asInt = AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_EXCLUSIVE, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteConnectionPool;", "beginTransaction", "ILAndroidDatabaseSqliteSQLiteTransactionListener;I", "beginTransactionUnchecked", "endTransactionUnchecked", "Z", "yieldTransaction", "JZ", "yieldTransactionUnchecked", "J", "prepare", "LNSString;ILAndroidDatabaseSqliteSQLiteStatementInfo;", "execute", "LNSString;[LNSObject;I", "executeForLong", "executeForString", "executeForChangedRowCount", "executeForLastInsertedRowId", "executeForCursorWindow", "LNSString;[LNSObject;LAndroidDatabaseCursorWindow;IIZI", "executeSpecial", "acquireConnection", "LNSString;I", "obtainTransaction", "ILAndroidDatabaseSqliteSQLiteTransactionListener;", "recycleTransaction", "LAndroidDatabaseSqliteSQLiteSession_Transaction;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteSession = { "SQLiteSession", "android.database.sqlite", ptrTable, methods, fields, 7, 0x11, 26, 9, -1, 26, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteSession;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(AndroidDatabaseSqliteSQLiteSession *self, AndroidDatabaseSqliteSQLiteConnectionPool *connectionPool) {
-  NSObject_init(self);
-  if (connectionPool == nil) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"connectionPool must not be null");
-  }
-  JreStrongAssign(&self->mConnectionPool_, connectionPool);
-}
-
-AndroidDatabaseSqliteSQLiteSession *new_AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(AndroidDatabaseSqliteSQLiteConnectionPool *connectionPool) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteSession, initWithAndroidDatabaseSqliteSQLiteConnectionPool_, connectionPool)
-}
-
-AndroidDatabaseSqliteSQLiteSession *create_AndroidDatabaseSqliteSQLiteSession_initWithAndroidDatabaseSqliteSQLiteConnectionPool_(AndroidDatabaseSqliteSQLiteConnectionPool *connectionPool) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteSession, initWithAndroidDatabaseSqliteSQLiteConnectionPool_, connectionPool)
-}
-
-void AndroidDatabaseSqliteSQLiteSession_beginTransactionUncheckedWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_withInt_(AndroidDatabaseSqliteSQLiteSession *self, jint transactionMode, id<AndroidDatabaseSqliteSQLiteTransactionListener> transactionListener, jint connectionFlags) {
-  if (self->mTransactionStack_ == nil) {
-    AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(self, nil, connectionFlags);
-  }
-  @try {
-    if (self->mTransactionStack_ == nil) {
-      switch (transactionMode) {
-        case AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_IMMEDIATE:
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(self->mConnection_)) executeWithNSString:@"BEGIN IMMEDIATE;" withNSObjectArray:nil];
-        break;
-        case AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_EXCLUSIVE:
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(self->mConnection_)) executeWithNSString:@"BEGIN EXCLUSIVE;" withNSObjectArray:nil];
-        break;
-        default:
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(self->mConnection_)) executeWithNSString:@"BEGIN;" withNSObjectArray:nil];
-        break;
-      }
-    }
-    if (transactionListener != nil) {
-      @try {
-        [transactionListener onBegin];
-      }
-      @catch (JavaLangRuntimeException *ex) {
-        if (self->mTransactionStack_ == nil) {
-          [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(self->mConnection_)) executeWithNSString:@"ROLLBACK;" withNSObjectArray:nil];
-        }
-        @throw ex;
-      }
-    }
-    AndroidDatabaseSqliteSQLiteSession_Transaction *transaction = AndroidDatabaseSqliteSQLiteSession_obtainTransactionWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_(self, transactionMode, transactionListener);
-    JreStrongAssign(&((AndroidDatabaseSqliteSQLiteSession_Transaction *) nil_chk(transaction))->mParent_, self->mTransactionStack_);
-    JreStrongAssign(&self->mTransactionStack_, transaction);
-  }
-  @finally {
-    if (self->mTransactionStack_ == nil) {
-      AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteSession_endTransactionUncheckedWithBoolean_(AndroidDatabaseSqliteSQLiteSession *self, jboolean yielding) {
-  AndroidDatabaseSqliteSQLiteSession_Transaction *top = self->mTransactionStack_;
-  jboolean successful = (((AndroidDatabaseSqliteSQLiteSession_Transaction *) nil_chk(top))->mMarkedSuccessful_ || yielding) && !top->mChildFailed_;
-  JavaLangRuntimeException *listenerException = nil;
-  id<AndroidDatabaseSqliteSQLiteTransactionListener> listener = top->mListener_;
-  if (listener != nil) {
-    @try {
-      if (successful) {
-        [listener onCommit];
-      }
-      else {
-        [listener onRollback];
-      }
-    }
-    @catch (JavaLangRuntimeException *ex) {
-      listenerException = ex;
-      successful = false;
-    }
-  }
-  JreStrongAssign(&self->mTransactionStack_, top->mParent_);
-  AndroidDatabaseSqliteSQLiteSession_recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction_(self, top);
-  if (self->mTransactionStack_ != nil) {
-    if (!successful) {
-      self->mTransactionStack_->mChildFailed_ = true;
-    }
-  }
-  else {
-    @try {
-      if (successful) {
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(self->mConnection_)) executeWithNSString:@"COMMIT;" withNSObjectArray:nil];
-      }
-      else {
-        [((AndroidDatabaseSqliteSQLiteConnection *) nil_chk(self->mConnection_)) executeWithNSString:@"ROLLBACK;" withNSObjectArray:nil];
-      }
-    }
-    @finally {
-      AndroidDatabaseSqliteSQLiteSession_releaseConnection(self);
-    }
-  }
-  if (listenerException != nil) {
-    @throw listenerException;
-  }
-}
-
-jboolean AndroidDatabaseSqliteSQLiteSession_yieldTransactionUncheckedWithLong_(AndroidDatabaseSqliteSQLiteSession *self, jlong sleepAfterYieldDelayMillis) {
-  if (![((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(self->mConnectionPool_)) shouldYieldConnectionWithAndroidDatabaseSqliteSQLiteConnection:self->mConnection_ withInt:self->mConnectionFlags_]) {
-    return false;
-  }
-  jint transactionMode = ((AndroidDatabaseSqliteSQLiteSession_Transaction *) nil_chk(self->mTransactionStack_))->mMode_;
-  id<AndroidDatabaseSqliteSQLiteTransactionListener> listener = self->mTransactionStack_->mListener_;
-  jint connectionFlags = self->mConnectionFlags_;
-  AndroidDatabaseSqliteSQLiteSession_endTransactionUncheckedWithBoolean_(self, true);
-  if (sleepAfterYieldDelayMillis > 0) {
-    @try {
-      JavaLangThread_sleepWithLong_(sleepAfterYieldDelayMillis);
-    }
-    @catch (JavaLangInterruptedException *ex) {
-    }
-  }
-  AndroidDatabaseSqliteSQLiteSession_beginTransactionUncheckedWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_withInt_(self, transactionMode, listener, connectionFlags);
-  return true;
-}
-
-jboolean AndroidDatabaseSqliteSQLiteSession_executeSpecialWithNSString_withNSObjectArray_withInt_(AndroidDatabaseSqliteSQLiteSession *self, NSString *sql, IOSObjectArray *bindArgs, jint connectionFlags) {
-  jint type = AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(sql);
-  switch (type) {
-    case AndroidDatabaseDatabaseUtils_STATEMENT_BEGIN:
-    [self beginTransactionWithInt:AndroidDatabaseSqliteSQLiteSession_TRANSACTION_MODE_EXCLUSIVE withAndroidDatabaseSqliteSQLiteTransactionListener:nil withInt:connectionFlags];
-    return true;
-    case AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT:
-    [self setTransactionSuccessful];
-    [self endTransaction];
-    return true;
-    case AndroidDatabaseDatabaseUtils_STATEMENT_ABORT:
-    [self endTransaction];
-    return true;
-  }
-  return false;
-}
-
-void AndroidDatabaseSqliteSQLiteSession_acquireConnectionWithNSString_withInt_(AndroidDatabaseSqliteSQLiteSession *self, NSString *sql, jint connectionFlags) {
-  if (self->mConnection_ == nil) {
-    JreAssert((self->mConnectionUseCount_ == 0), (@"android/database/sqlite/SQLiteSession.java:793 condition failed: assert mConnectionUseCount == 0;"));
-    JreStrongAssign(&self->mConnection_, [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(self->mConnectionPool_)) acquireConnectionWithNSString:sql withInt:connectionFlags]);
-    self->mConnectionFlags_ = connectionFlags;
-  }
-  self->mConnectionUseCount_ += 1;
-}
-
-void AndroidDatabaseSqliteSQLiteSession_releaseConnection(AndroidDatabaseSqliteSQLiteSession *self) {
-  JreAssert((self->mConnection_ != nil), (@"android/database/sqlite/SQLiteSession.java:801 condition failed: assert mConnection != null;"));
-  JreAssert((self->mConnectionUseCount_ > 0), (@"android/database/sqlite/SQLiteSession.java:802 condition failed: assert mConnectionUseCount > 0;"));
-  if (--self->mConnectionUseCount_ == 0) {
-    @try {
-      [((AndroidDatabaseSqliteSQLiteConnectionPool *) nil_chk(self->mConnectionPool_)) releaseConnectionWithAndroidDatabaseSqliteSQLiteConnection:self->mConnection_];
-    }
-    @finally {
-      JreStrongAssign(&self->mConnection_, nil);
-    }
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteSession_throwIfNoTransaction(AndroidDatabaseSqliteSQLiteSession *self) {
-  if (self->mTransactionStack_ == nil) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this operation because there is no current transaction.");
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteSession_throwIfTransactionMarkedSuccessful(AndroidDatabaseSqliteSQLiteSession *self) {
-  if (self->mTransactionStack_ != nil && self->mTransactionStack_->mMarkedSuccessful_) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this operation because the transaction has already been marked successful.  The only thing you can do now is call endTransaction().");
-  }
-}
-
-void AndroidDatabaseSqliteSQLiteSession_throwIfNestedTransaction(AndroidDatabaseSqliteSQLiteSession *self) {
-  if ([self hasNestedTransaction]) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot perform this operation because a nested transaction is in progress.");
-  }
-}
-
-AndroidDatabaseSqliteSQLiteSession_Transaction *AndroidDatabaseSqliteSQLiteSession_obtainTransactionWithInt_withAndroidDatabaseSqliteSQLiteTransactionListener_(AndroidDatabaseSqliteSQLiteSession *self, jint mode, id<AndroidDatabaseSqliteSQLiteTransactionListener> listener) {
-  AndroidDatabaseSqliteSQLiteSession_Transaction *transaction = self->mTransactionPool_;
-  if (transaction != nil) {
-    JreStrongAssign(&self->mTransactionPool_, transaction->mParent_);
-    JreStrongAssign(&transaction->mParent_, nil);
-    transaction->mMarkedSuccessful_ = false;
-    transaction->mChildFailed_ = false;
-  }
-  else {
-    transaction = create_AndroidDatabaseSqliteSQLiteSession_Transaction_init();
-  }
-  transaction->mMode_ = mode;
-  JreStrongAssign(&transaction->mListener_, listener);
-  return transaction;
-}
-
-void AndroidDatabaseSqliteSQLiteSession_recycleTransactionWithAndroidDatabaseSqliteSQLiteSession_Transaction_(AndroidDatabaseSqliteSQLiteSession *self, AndroidDatabaseSqliteSQLiteSession_Transaction *transaction) {
-  JreStrongAssign(&((AndroidDatabaseSqliteSQLiteSession_Transaction *) nil_chk(transaction))->mParent_, self->mTransactionPool_);
-  JreStrongAssign(&transaction->mListener_, nil);
-  JreStrongAssign(&self->mTransactionPool_, transaction);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteSession)
-
-@implementation AndroidDatabaseSqliteSQLiteSession_Transaction
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteSession_Transaction_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)dealloc {
-  RELEASE_(mParent_);
-  RELEASE_(mListener_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mParent_", "LAndroidDatabaseSqliteSQLiteSession_Transaction;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mMode_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mListener_", "LAndroidDatabaseSqliteSQLiteTransactionListener;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mMarkedSuccessful_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mChildFailed_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteSession;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteSession_Transaction = { "Transaction", "android.database.sqlite", ptrTable, methods, fields, 7, 0x1a, 1, 5, 0, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteSession_Transaction;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteSession_Transaction_init(AndroidDatabaseSqliteSQLiteSession_Transaction *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteSession_Transaction *new_AndroidDatabaseSqliteSQLiteSession_Transaction_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteSession_Transaction, init)
-}
-
-AndroidDatabaseSqliteSQLiteSession_Transaction *create_AndroidDatabaseSqliteSQLiteSession_Transaction_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteSession_Transaction, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteSession_Transaction)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatement.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatement.h
deleted file mode 100644
index 6f50f3e52..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatement.h
+++ /dev/null
@@ -1,61 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatement")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteStatement
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatement 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatement 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteStatement
-
-#if !defined (AndroidDatabaseSqliteSQLiteStatement_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatement || defined(INCLUDE_AndroidDatabaseSqliteSQLiteStatement))
-#define AndroidDatabaseSqliteSQLiteStatement_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteProgram 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteProgram 1
-#include "AndroidDatabaseSqliteSQLiteProgram.h"
-
-@class AndroidDatabaseSqliteSQLiteDatabase;
-@class IOSObjectArray;
-
-@interface AndroidDatabaseSqliteSQLiteStatement : AndroidDatabaseSqliteSQLiteProgram
-
-#pragma mark Public
-
-- (void)execute;
-
-- (jlong)executeInsert;
-
-- (jint)executeUpdateDelete;
-
-- (jlong)simpleQueryForLong;
-
-- (NSString *)simpleQueryForString;
-
-- (NSString *)description;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)sql
-                                          withNSObjectArray:(IOSObjectArray *)bindArgs;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteStatement)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteStatement *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteStatement *new_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteStatement *create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteStatement)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatement")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatement.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatement.m
deleted file mode 100644
index bba1953a8..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatement.m
+++ /dev/null
@@ -1,135 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteDatabase.h"
-#include "AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h"
-#include "AndroidDatabaseSqliteSQLiteProgram.h"
-#include "AndroidDatabaseSqliteSQLiteSession.h"
-#include "AndroidDatabaseSqliteSQLiteStatement.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteStatement
-
-- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
-                                               withNSString:(NSString *)sql
-                                          withNSObjectArray:(IOSObjectArray *)bindArgs {
-  AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, db, sql, bindArgs);
-  return self;
-}
-
-- (void)execute {
-  [self acquireReference];
-  @try {
-    [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getSession])) executeWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withInt:[self getConnectionFlags]];
-  }
-  @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-    [self onCorruption];
-    @throw ex;
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jint)executeUpdateDelete {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getSession])) executeForChangedRowCountWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withInt:[self getConnectionFlags]];
-  }
-  @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-    [self onCorruption];
-    @throw ex;
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jlong)executeInsert {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getSession])) executeForLastInsertedRowIdWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withInt:[self getConnectionFlags]];
-  }
-  @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-    [self onCorruption];
-    @throw ex;
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (jlong)simpleQueryForLong {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getSession])) executeForLongWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withInt:[self getConnectionFlags]];
-  }
-  @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-    [self onCorruption];
-    @throw ex;
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (NSString *)simpleQueryForString {
-  [self acquireReference];
-  @try {
-    return [((AndroidDatabaseSqliteSQLiteSession *) nil_chk([self getSession])) executeForStringWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withInt:[self getConnectionFlags]];
-  }
-  @catch (AndroidDatabaseSqliteSQLiteDatabaseCorruptException *ex) {
-    [self onCorruption];
-    @throw ex;
-  }
-  @finally {
-    [self releaseReference];
-  }
-}
-
-- (NSString *)description {
-  return JreStrcat("$$", @"SQLiteProgram: ", [self getSql]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidDatabaseSqliteSQLiteDatabase:withNSString:withNSObjectArray:);
-  methods[1].selector = @selector(execute);
-  methods[2].selector = @selector(executeUpdateDelete);
-  methods[3].selector = @selector(executeInsert);
-  methods[4].selector = @selector(simpleQueryForLong);
-  methods[5].selector = @selector(simpleQueryForString);
-  methods[6].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LAndroidDatabaseSqliteSQLiteDatabase;LNSString;[LNSObject;", "toString" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteStatement = { "SQLiteStatement", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x11, 7, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteStatement;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteStatement *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) {
-  AndroidDatabaseSqliteSQLiteProgram_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, db, sql, bindArgs);
-}
-
-AndroidDatabaseSqliteSQLiteStatement *new_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteStatement, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_, db, sql, bindArgs)
-}
-
-AndroidDatabaseSqliteSQLiteStatement *create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteStatement, initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_, db, sql, bindArgs)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteStatement)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatementInfo.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatementInfo.h
deleted file mode 100644
index 499b7fe60..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatementInfo.h
+++ /dev/null
@@ -1,47 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatementInfo")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteStatementInfo
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatementInfo 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatementInfo 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteStatementInfo
-
-#if !defined (AndroidDatabaseSqliteSQLiteStatementInfo_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatementInfo || defined(INCLUDE_AndroidDatabaseSqliteSQLiteStatementInfo))
-#define AndroidDatabaseSqliteSQLiteStatementInfo_
-
-@class IOSObjectArray;
-
-@interface AndroidDatabaseSqliteSQLiteStatementInfo : NSObject {
- @public
-  jint numParameters_;
-  IOSObjectArray *columnNames_;
-  jboolean readOnly_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteStatementInfo)
-
-J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteStatementInfo, columnNames_, IOSObjectArray *)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteStatementInfo_init(AndroidDatabaseSqliteSQLiteStatementInfo *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteStatementInfo *new_AndroidDatabaseSqliteSQLiteStatementInfo_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteStatementInfo *create_AndroidDatabaseSqliteSQLiteStatementInfo_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteStatementInfo)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteStatementInfo")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatementInfo.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatementInfo.m
deleted file mode 100644
index bb2d2eecb..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteStatementInfo.m
+++ /dev/null
@@ -1,54 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteStatementInfo.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteStatementInfo
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteStatementInfo_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)dealloc {
-  RELEASE_(columnNames_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "numParameters_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "columnNames_", "[LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "readOnly_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteStatementInfo = { "SQLiteStatementInfo", "android.database.sqlite", NULL, methods, fields, 7, 0x11, 1, 3, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteStatementInfo;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteStatementInfo_init(AndroidDatabaseSqliteSQLiteStatementInfo *self) {
-  NSObject_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteStatementInfo *new_AndroidDatabaseSqliteSQLiteStatementInfo_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteStatementInfo, init)
-}
-
-AndroidDatabaseSqliteSQLiteStatementInfo *create_AndroidDatabaseSqliteSQLiteStatementInfo_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteStatementInfo, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteStatementInfo)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTableLockedException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTableLockedException.h
deleted file mode 100644
index 473314df9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTableLockedException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteTableLockedException
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteTableLockedException
-
-#if !defined (AndroidDatabaseSqliteSQLiteTableLockedException_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException || defined(INCLUDE_AndroidDatabaseSqliteSQLiteTableLockedException))
-#define AndroidDatabaseSqliteSQLiteTableLockedException_
-
-#define RESTRICT_AndroidDatabaseSqliteSQLiteException 1
-#define INCLUDE_AndroidDatabaseSqliteSQLiteException 1
-#include "AndroidDatabaseSqliteSQLiteException.h"
-
-@interface AndroidDatabaseSqliteSQLiteTableLockedException : AndroidDatabaseSqliteSQLiteException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)error;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteTableLockedException)
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteTableLockedException_init(AndroidDatabaseSqliteSQLiteTableLockedException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *new_AndroidDatabaseSqliteSQLiteTableLockedException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *create_AndroidDatabaseSqliteSQLiteTableLockedException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(AndroidDatabaseSqliteSQLiteTableLockedException *self, NSString *error);
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *new_AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteTableLockedException *create_AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(NSString *error);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteTableLockedException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTableLockedException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTableLockedException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTableLockedException.m
deleted file mode 100644
index e937a0402..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTableLockedException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteException.h"
-#include "AndroidDatabaseSqliteSQLiteTableLockedException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidDatabaseSqliteSQLiteTableLockedException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseSqliteSQLiteTableLockedException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)error {
-  AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(self, error);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteTableLockedException = { "SQLiteTableLockedException", "android.database.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteTableLockedException;
-}
-
-@end
-
-void AndroidDatabaseSqliteSQLiteTableLockedException_init(AndroidDatabaseSqliteSQLiteTableLockedException *self) {
-  AndroidDatabaseSqliteSQLiteException_init(self);
-}
-
-AndroidDatabaseSqliteSQLiteTableLockedException *new_AndroidDatabaseSqliteSQLiteTableLockedException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteTableLockedException, init)
-}
-
-AndroidDatabaseSqliteSQLiteTableLockedException *create_AndroidDatabaseSqliteSQLiteTableLockedException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteTableLockedException, init)
-}
-
-void AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(AndroidDatabaseSqliteSQLiteTableLockedException *self, NSString *error) {
-  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
-}
-
-AndroidDatabaseSqliteSQLiteTableLockedException *new_AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(NSString *error) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseSqliteSQLiteTableLockedException, initWithNSString_, error)
-}
-
-AndroidDatabaseSqliteSQLiteTableLockedException *create_AndroidDatabaseSqliteSQLiteTableLockedException_initWithNSString_(NSString *error) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseSqliteSQLiteTableLockedException, initWithNSString_, error)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteTableLockedException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTransactionListener.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTransactionListener.h
deleted file mode 100644
index 582f25da9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTransactionListener.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTransactionListener")
-#ifdef RESTRICT_AndroidDatabaseSqliteSQLiteTransactionListener
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTransactionListener 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTransactionListener 1
-#endif
-#undef RESTRICT_AndroidDatabaseSqliteSQLiteTransactionListener
-
-#if !defined (AndroidDatabaseSqliteSQLiteTransactionListener_) && (INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTransactionListener || defined(INCLUDE_AndroidDatabaseSqliteSQLiteTransactionListener))
-#define AndroidDatabaseSqliteSQLiteTransactionListener_
-
-@protocol AndroidDatabaseSqliteSQLiteTransactionListener < JavaObject >
-
-- (void)onBegin;
-
-- (void)onCommit;
-
-- (void)onRollback;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteTransactionListener)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteTransactionListener)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseSqliteSQLiteTransactionListener")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTransactionListener.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTransactionListener.m
deleted file mode 100644
index 2bf760310..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseSqliteSQLiteTransactionListener.m
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseSqliteSQLiteTransactionListener.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidDatabaseSqliteSQLiteTransactionListener : NSObject
-
-@end
-
-@implementation AndroidDatabaseSqliteSQLiteTransactionListener
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(onBegin);
-  methods[1].selector = @selector(onCommit);
-  methods[2].selector = @selector(onRollback);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteTransactionListener = { "SQLiteTransactionListener", "android.database.sqlite", NULL, methods, NULL, 7, 0x609, 3, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseSqliteSQLiteTransactionListener;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteTransactionListener)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseStaleDataException.h b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseStaleDataException.h
deleted file mode 100644
index ca45b3c53..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseStaleDataException.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidDatabaseStaleDataException")
-#ifdef RESTRICT_AndroidDatabaseStaleDataException
-#define INCLUDE_ALL_AndroidDatabaseStaleDataException 0
-#else
-#define INCLUDE_ALL_AndroidDatabaseStaleDataException 1
-#endif
-#undef RESTRICT_AndroidDatabaseStaleDataException
-
-#if !defined (AndroidDatabaseStaleDataException_) && (INCLUDE_ALL_AndroidDatabaseStaleDataException || defined(INCLUDE_AndroidDatabaseStaleDataException))
-#define AndroidDatabaseStaleDataException_
-
-#define RESTRICT_JavaLangRuntimeException 1
-#define INCLUDE_JavaLangRuntimeException 1
-#include "java/lang/RuntimeException.h"
-
-@interface AndroidDatabaseStaleDataException : JavaLangRuntimeException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)description_;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseStaleDataException)
-
-FOUNDATION_EXPORT void AndroidDatabaseStaleDataException_init(AndroidDatabaseStaleDataException *self);
-
-FOUNDATION_EXPORT AndroidDatabaseStaleDataException *new_AndroidDatabaseStaleDataException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseStaleDataException *create_AndroidDatabaseStaleDataException_init();
-
-FOUNDATION_EXPORT void AndroidDatabaseStaleDataException_initWithNSString_(AndroidDatabaseStaleDataException *self, NSString *description_);
-
-FOUNDATION_EXPORT AndroidDatabaseStaleDataException *new_AndroidDatabaseStaleDataException_initWithNSString_(NSString *description_) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidDatabaseStaleDataException *create_AndroidDatabaseStaleDataException_initWithNSString_(NSString *description_);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseStaleDataException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseStaleDataException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseStaleDataException.m b/core/iostest/daggerframework/main/androidbase/AndroidDatabaseStaleDataException.m
deleted file mode 100644
index 9af580726..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidDatabaseStaleDataException.m
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidDatabaseStaleDataException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/RuntimeException.h"
-
-@implementation AndroidDatabaseStaleDataException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidDatabaseStaleDataException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)description_ {
-  AndroidDatabaseStaleDataException_initWithNSString_(self, description_);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidDatabaseStaleDataException = { "StaleDataException", "android.database", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidDatabaseStaleDataException;
-}
-
-@end
-
-void AndroidDatabaseStaleDataException_init(AndroidDatabaseStaleDataException *self) {
-  JavaLangRuntimeException_init(self);
-}
-
-AndroidDatabaseStaleDataException *new_AndroidDatabaseStaleDataException_init() {
-  J2OBJC_NEW_IMPL(AndroidDatabaseStaleDataException, init)
-}
-
-AndroidDatabaseStaleDataException *create_AndroidDatabaseStaleDataException_init() {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseStaleDataException, init)
-}
-
-void AndroidDatabaseStaleDataException_initWithNSString_(AndroidDatabaseStaleDataException *self, NSString *description_) {
-  JavaLangRuntimeException_initWithNSString_(self, description_);
-}
-
-AndroidDatabaseStaleDataException *new_AndroidDatabaseStaleDataException_initWithNSString_(NSString *description_) {
-  J2OBJC_NEW_IMPL(AndroidDatabaseStaleDataException, initWithNSString_, description_)
-}
-
-AndroidDatabaseStaleDataException *create_AndroidDatabaseStaleDataException_initWithNSString_(NSString *description_) {
-  J2OBJC_CREATE_IMPL(AndroidDatabaseStaleDataException, initWithNSString_, description_)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseStaleDataException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilFastXmlSerializer.h b/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilFastXmlSerializer.h
deleted file mode 100644
index 754959821..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilFastXmlSerializer.h
+++ /dev/null
@@ -1,109 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidInternalUtilFastXmlSerializer")
-#ifdef RESTRICT_AndroidInternalUtilFastXmlSerializer
-#define INCLUDE_ALL_AndroidInternalUtilFastXmlSerializer 0
-#else
-#define INCLUDE_ALL_AndroidInternalUtilFastXmlSerializer 1
-#endif
-#undef RESTRICT_AndroidInternalUtilFastXmlSerializer
-
-#if !defined (AndroidInternalUtilFastXmlSerializer_) && (INCLUDE_ALL_AndroidInternalUtilFastXmlSerializer || defined(INCLUDE_AndroidInternalUtilFastXmlSerializer))
-#define AndroidInternalUtilFastXmlSerializer_
-
-#define RESTRICT_OrgXmlpullV1XmlSerializer 1
-#define INCLUDE_OrgXmlpullV1XmlSerializer 1
-#include "org/xmlpull/v1/XmlSerializer.h"
-
-@class IOSCharArray;
-@class JavaIoOutputStream;
-@class JavaIoWriter;
-@class JavaLangBoolean;
-
-@interface AndroidInternalUtilFastXmlSerializer : NSObject < OrgXmlpullV1XmlSerializer >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (id<OrgXmlpullV1XmlSerializer>)attributeWithNSString:(NSString *)namespace_
-                                          withNSString:(NSString *)name
-                                          withNSString:(NSString *)value;
-
-- (void)cdsectWithNSString:(NSString *)text;
-
-- (void)commentWithNSString:(NSString *)text;
-
-- (void)docdeclWithNSString:(NSString *)text;
-
-- (void)endDocument;
-
-- (id<OrgXmlpullV1XmlSerializer>)endTagWithNSString:(NSString *)namespace_
-                                       withNSString:(NSString *)name;
-
-- (void)entityRefWithNSString:(NSString *)text;
-
-- (void)flush;
-
-- (jint)getDepth;
-
-- (jboolean)getFeatureWithNSString:(NSString *)name;
-
-- (NSString *)getName;
-
-- (NSString *)getNamespace;
-
-- (NSString *)getPrefixWithNSString:(NSString *)namespace_
-                        withBoolean:(jboolean)generatePrefix;
-
-- (id)getPropertyWithNSString:(NSString *)name;
-
-- (void)ignorableWhitespaceWithNSString:(NSString *)text;
-
-- (void)processingInstructionWithNSString:(NSString *)text;
-
-- (void)setFeatureWithNSString:(NSString *)name
-                   withBoolean:(jboolean)state;
-
-- (void)setOutputWithJavaIoOutputStream:(JavaIoOutputStream *)os
-                           withNSString:(NSString *)encoding;
-
-- (void)setOutputWithJavaIoWriter:(JavaIoWriter *)writer;
-
-- (void)setPrefixWithNSString:(NSString *)prefix
-                 withNSString:(NSString *)namespace_;
-
-- (void)setPropertyWithNSString:(NSString *)name
-                         withId:(id)value;
-
-- (void)startDocumentWithNSString:(NSString *)encoding
-              withJavaLangBoolean:(JavaLangBoolean *)standalone;
-
-- (id<OrgXmlpullV1XmlSerializer>)startTagWithNSString:(NSString *)namespace_
-                                         withNSString:(NSString *)name;
-
-- (id<OrgXmlpullV1XmlSerializer>)textWithCharArray:(IOSCharArray *)buf
-                                           withInt:(jint)start
-                                           withInt:(jint)len;
-
-- (id<OrgXmlpullV1XmlSerializer>)textWithNSString:(NSString *)text;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidInternalUtilFastXmlSerializer)
-
-FOUNDATION_EXPORT void AndroidInternalUtilFastXmlSerializer_init(AndroidInternalUtilFastXmlSerializer *self);
-
-FOUNDATION_EXPORT AndroidInternalUtilFastXmlSerializer *new_AndroidInternalUtilFastXmlSerializer_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidInternalUtilFastXmlSerializer *create_AndroidInternalUtilFastXmlSerializer_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidInternalUtilFastXmlSerializer)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidInternalUtilFastXmlSerializer")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilFastXmlSerializer.m b/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilFastXmlSerializer.m
deleted file mode 100644
index 04af4c68a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilFastXmlSerializer.m
+++ /dev/null
@@ -1,543 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidInternalUtilFastXmlSerializer.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/IOException.h"
-#include "java/io/OutputStream.h"
-#include "java/io/UnsupportedEncodingException.h"
-#include "java/io/Writer.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/System.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/nio/Buffer.h"
-#include "java/nio/ByteBuffer.h"
-#include "java/nio/CharBuffer.h"
-#include "java/nio/charset/Charset.h"
-#include "java/nio/charset/CharsetEncoder.h"
-#include "java/nio/charset/CoderResult.h"
-#include "java/nio/charset/IllegalCharsetNameException.h"
-#include "java/nio/charset/UnsupportedCharsetException.h"
-#include "org/xmlpull/v1/XmlSerializer.h"
-
-@interface AndroidInternalUtilFastXmlSerializer () {
- @public
-  IOSCharArray *mText_;
-  jint mPos_;
-  JavaIoWriter *mWriter_;
-  JavaIoOutputStream *mOutputStream_;
-  JavaNioCharsetCharsetEncoder *mCharset_;
-  JavaNioByteBuffer *mBytes_;
-  jboolean mInTag_;
-}
-
-- (void)appendWithChar:(jchar)c;
-
-- (void)appendWithNSString:(NSString *)str
-                   withInt:(jint)i
-                   withInt:(jint)length;
-
-- (void)appendWithCharArray:(IOSCharArray *)buf
-                    withInt:(jint)i
-                    withInt:(jint)length;
-
-- (void)appendWithNSString:(NSString *)str;
-
-- (void)escapeAndAppendStringWithNSString:(NSString *)string;
-
-- (void)escapeAndAppendStringWithCharArray:(IOSCharArray *)buf
-                                   withInt:(jint)start
-                                   withInt:(jint)len;
-
-- (void)flushBytes;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidInternalUtilFastXmlSerializer, mText_, IOSCharArray *)
-J2OBJC_FIELD_SETTER(AndroidInternalUtilFastXmlSerializer, mWriter_, JavaIoWriter *)
-J2OBJC_FIELD_SETTER(AndroidInternalUtilFastXmlSerializer, mOutputStream_, JavaIoOutputStream *)
-J2OBJC_FIELD_SETTER(AndroidInternalUtilFastXmlSerializer, mCharset_, JavaNioCharsetCharsetEncoder *)
-J2OBJC_FIELD_SETTER(AndroidInternalUtilFastXmlSerializer, mBytes_, JavaNioByteBuffer *)
-
-inline IOSObjectArray *AndroidInternalUtilFastXmlSerializer_get_ESCAPE_TABLE();
-static IOSObjectArray *AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidInternalUtilFastXmlSerializer, ESCAPE_TABLE, IOSObjectArray *)
-
-inline jint AndroidInternalUtilFastXmlSerializer_get_BUFFER_LEN();
-#define AndroidInternalUtilFastXmlSerializer_BUFFER_LEN 8192
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidInternalUtilFastXmlSerializer, BUFFER_LEN, jint)
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_appendWithChar_(AndroidInternalUtilFastXmlSerializer *self, jchar c);
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(AndroidInternalUtilFastXmlSerializer *self, NSString *str, jint i, jint length);
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_appendWithCharArray_withInt_withInt_(AndroidInternalUtilFastXmlSerializer *self, IOSCharArray *buf, jint i, jint length);
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_appendWithNSString_(AndroidInternalUtilFastXmlSerializer *self, NSString *str);
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithNSString_(AndroidInternalUtilFastXmlSerializer *self, NSString *string);
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithCharArray_withInt_withInt_(AndroidInternalUtilFastXmlSerializer *self, IOSCharArray *buf, jint start, jint len);
-
-__attribute__((unused)) static void AndroidInternalUtilFastXmlSerializer_flushBytes(AndroidInternalUtilFastXmlSerializer *self);
-
-J2OBJC_INITIALIZED_DEFN(AndroidInternalUtilFastXmlSerializer)
-
-@implementation AndroidInternalUtilFastXmlSerializer
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidInternalUtilFastXmlSerializer_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)appendWithChar:(jchar)c {
-  AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, c);
-}
-
-- (void)appendWithNSString:(NSString *)str
-                   withInt:(jint)i
-                   withInt:(jint)length {
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(self, str, i, length);
-}
-
-- (void)appendWithCharArray:(IOSCharArray *)buf
-                    withInt:(jint)i
-                    withInt:(jint)length {
-  AndroidInternalUtilFastXmlSerializer_appendWithCharArray_withInt_withInt_(self, buf, i, length);
-}
-
-- (void)appendWithNSString:(NSString *)str {
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, str);
-}
-
-- (void)escapeAndAppendStringWithNSString:(NSString *)string {
-  AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithNSString_(self, string);
-}
-
-- (void)escapeAndAppendStringWithCharArray:(IOSCharArray *)buf
-                                   withInt:(jint)start
-                                   withInt:(jint)len {
-  AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithCharArray_withInt_withInt_(self, buf, start, len);
-}
-
-- (id<OrgXmlpullV1XmlSerializer>)attributeWithNSString:(NSString *)namespace_
-                                          withNSString:(NSString *)name
-                                          withNSString:(NSString *)value {
-  AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, ' ');
-  if (namespace_ != nil) {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, namespace_);
-    AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, ':');
-  }
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, name);
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @"=\"");
-  AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithNSString_(self, value);
-  AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, '"');
-  return self;
-}
-
-- (void)cdsectWithNSString:(NSString *)text {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)commentWithNSString:(NSString *)text {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)docdeclWithNSString:(NSString *)text {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)endDocument {
-  [self flush];
-}
-
-- (id<OrgXmlpullV1XmlSerializer>)endTagWithNSString:(NSString *)namespace_
-                                       withNSString:(NSString *)name {
-  if (mInTag_) {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @" />\n");
-  }
-  else {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @"</");
-    if (namespace_ != nil) {
-      AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, namespace_);
-      AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, ':');
-    }
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, name);
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @">\n");
-  }
-  mInTag_ = false;
-  return self;
-}
-
-- (void)entityRefWithNSString:(NSString *)text {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)flushBytes {
-  AndroidInternalUtilFastXmlSerializer_flushBytes(self);
-}
-
-- (void)flush {
-  if (mPos_ > 0) {
-    if (mOutputStream_ != nil) {
-      JavaNioCharBuffer *charBuffer = JavaNioCharBuffer_wrapWithCharArray_withInt_withInt_(mText_, 0, mPos_);
-      JavaNioCharsetCoderResult *result = [((JavaNioCharsetCharsetEncoder *) nil_chk(mCharset_)) encodeWithJavaNioCharBuffer:charBuffer withJavaNioByteBuffer:mBytes_ withBoolean:true];
-      while (true) {
-        if ([((JavaNioCharsetCoderResult *) nil_chk(result)) isError]) {
-          @throw create_JavaIoIOException_initWithNSString_([result description]);
-        }
-        else if ([result isOverflow]) {
-          AndroidInternalUtilFastXmlSerializer_flushBytes(self);
-          result = [((JavaNioCharsetCharsetEncoder *) nil_chk(mCharset_)) encodeWithJavaNioCharBuffer:charBuffer withJavaNioByteBuffer:mBytes_ withBoolean:true];
-          continue;
-        }
-        break;
-      }
-      AndroidInternalUtilFastXmlSerializer_flushBytes(self);
-      [((JavaIoOutputStream *) nil_chk(mOutputStream_)) flush];
-    }
-    else {
-      [((JavaIoWriter *) nil_chk(mWriter_)) writeWithCharArray:mText_ withInt:0 withInt:mPos_];
-      [((JavaIoWriter *) nil_chk(mWriter_)) flush];
-    }
-    mPos_ = 0;
-  }
-}
-
-- (jint)getDepth {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (jboolean)getFeatureWithNSString:(NSString *)name {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (NSString *)getName {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (NSString *)getNamespace {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (NSString *)getPrefixWithNSString:(NSString *)namespace_
-                        withBoolean:(jboolean)generatePrefix {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)getPropertyWithNSString:(NSString *)name {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)ignorableWhitespaceWithNSString:(NSString *)text {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)processingInstructionWithNSString:(NSString *)text {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)setFeatureWithNSString:(NSString *)name
-                   withBoolean:(jboolean)state {
-  if ([((NSString *) nil_chk(name)) isEqual:@"http://xmlpull.org/v1/doc/features.html#indent-output"]) {
-    return;
-  }
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)setOutputWithJavaIoOutputStream:(JavaIoOutputStream *)os
-                           withNSString:(NSString *)encoding {
-  if (os == nil) @throw create_JavaLangIllegalArgumentException_init();
-  {
-    @try {
-      JreStrongAssign(&mCharset_, [((JavaNioCharsetCharset *) nil_chk(JavaNioCharsetCharset_forNameWithNSString_(encoding))) newEncoder]);
-    }
-    @catch (JavaNioCharsetIllegalCharsetNameException *e) {
-      @throw (JavaIoUnsupportedEncodingException *) cast_chk(([create_JavaIoUnsupportedEncodingException_initWithNSString_(encoding) initCauseWithNSException:e]), [JavaIoUnsupportedEncodingException class]);
-    }
-    @catch (JavaNioCharsetUnsupportedCharsetException *e) {
-      @throw (JavaIoUnsupportedEncodingException *) cast_chk(([create_JavaIoUnsupportedEncodingException_initWithNSString_(encoding) initCauseWithNSException:e]), [JavaIoUnsupportedEncodingException class]);
-    }
-    JreStrongAssign(&mOutputStream_, os);
-  }
-}
-
-- (void)setOutputWithJavaIoWriter:(JavaIoWriter *)writer {
-  JreStrongAssign(&mWriter_, writer);
-}
-
-- (void)setPrefixWithNSString:(NSString *)prefix
-                 withNSString:(NSString *)namespace_ {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)setPropertyWithNSString:(NSString *)name
-                         withId:(id)value {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)startDocumentWithNSString:(NSString *)encoding
-              withJavaLangBoolean:(JavaLangBoolean *)standalone {
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, JreStrcat("$$$", @"<?xml version='1.0' encoding='utf-8' standalone='", ([((JavaLangBoolean *) nil_chk(standalone)) booleanValue] ? @"yes" : @"no"), @"' ?>\n"));
-}
-
-- (id<OrgXmlpullV1XmlSerializer>)startTagWithNSString:(NSString *)namespace_
-                                         withNSString:(NSString *)name {
-  if (mInTag_) {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @">\n");
-  }
-  AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, '<');
-  if (namespace_ != nil) {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, namespace_);
-    AndroidInternalUtilFastXmlSerializer_appendWithChar_(self, ':');
-  }
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, name);
-  mInTag_ = true;
-  return self;
-}
-
-- (id<OrgXmlpullV1XmlSerializer>)textWithCharArray:(IOSCharArray *)buf
-                                           withInt:(jint)start
-                                           withInt:(jint)len {
-  if (mInTag_) {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @">");
-    mInTag_ = false;
-  }
-  AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithCharArray_withInt_withInt_(self, buf, start, len);
-  return self;
-}
-
-- (id<OrgXmlpullV1XmlSerializer>)textWithNSString:(NSString *)text {
-  if (mInTag_) {
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, @">");
-    mInTag_ = false;
-  }
-  AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithNSString_(self, text);
-  return self;
-}
-
-- (void)dealloc {
-  RELEASE_(mText_);
-  RELEASE_(mWriter_);
-  RELEASE_(mOutputStream_);
-  RELEASE_(mCharset_);
-  RELEASE_(mBytes_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 0, 1, 2, -1, -1, -1 },
-    { NULL, "V", 0x2, 0, 3, 2, -1, -1, -1 },
-    { NULL, "V", 0x2, 0, 4, 2, -1, -1, -1 },
-    { NULL, "V", 0x2, 0, 5, 2, -1, -1, -1 },
-    { NULL, "V", 0x2, 6, 5, 2, -1, -1, -1 },
-    { NULL, "V", 0x2, 6, 4, 2, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x1, 7, 8, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 5, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 11, 5, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 5, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 9, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x1, 13, 14, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 5, 9, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, 2, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 16, 5, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 17, 18, 19, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 20, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 21, 5, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 22, 5, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 23, 18, 24, -1, -1, -1 },
-    { NULL, "V", 0x1, 25, 26, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 25, 27, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 28, 14, 9, -1, -1, -1 },
-    { NULL, "V", 0x1, 29, 30, 24, -1, -1, -1 },
-    { NULL, "V", 0x1, 31, 32, 9, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x1, 33, 14, 9, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x1, 34, 4, 9, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x1, 34, 5, 9, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(appendWithChar:);
-  methods[2].selector = @selector(appendWithNSString:withInt:withInt:);
-  methods[3].selector = @selector(appendWithCharArray:withInt:withInt:);
-  methods[4].selector = @selector(appendWithNSString:);
-  methods[5].selector = @selector(escapeAndAppendStringWithNSString:);
-  methods[6].selector = @selector(escapeAndAppendStringWithCharArray:withInt:withInt:);
-  methods[7].selector = @selector(attributeWithNSString:withNSString:withNSString:);
-  methods[8].selector = @selector(cdsectWithNSString:);
-  methods[9].selector = @selector(commentWithNSString:);
-  methods[10].selector = @selector(docdeclWithNSString:);
-  methods[11].selector = @selector(endDocument);
-  methods[12].selector = @selector(endTagWithNSString:withNSString:);
-  methods[13].selector = @selector(entityRefWithNSString:);
-  methods[14].selector = @selector(flushBytes);
-  methods[15].selector = @selector(flush);
-  methods[16].selector = @selector(getDepth);
-  methods[17].selector = @selector(getFeatureWithNSString:);
-  methods[18].selector = @selector(getName);
-  methods[19].selector = @selector(getNamespace);
-  methods[20].selector = @selector(getPrefixWithNSString:withBoolean:);
-  methods[21].selector = @selector(getPropertyWithNSString:);
-  methods[22].selector = @selector(ignorableWhitespaceWithNSString:);
-  methods[23].selector = @selector(processingInstructionWithNSString:);
-  methods[24].selector = @selector(setFeatureWithNSString:withBoolean:);
-  methods[25].selector = @selector(setOutputWithJavaIoOutputStream:withNSString:);
-  methods[26].selector = @selector(setOutputWithJavaIoWriter:);
-  methods[27].selector = @selector(setPrefixWithNSString:withNSString:);
-  methods[28].selector = @selector(setPropertyWithNSString:withId:);
-  methods[29].selector = @selector(startDocumentWithNSString:withJavaLangBoolean:);
-  methods[30].selector = @selector(startTagWithNSString:withNSString:);
-  methods[31].selector = @selector(textWithCharArray:withInt:withInt:);
-  methods[32].selector = @selector(textWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "ESCAPE_TABLE", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
-    { "BUFFER_LEN", "I", .constantValue.asInt = AndroidInternalUtilFastXmlSerializer_BUFFER_LEN, 0x1a, -1, -1, -1, -1 },
-    { "mText_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mWriter_", "LJavaIoWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mOutputStream_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mCharset_", "LJavaNioCharsetCharsetEncoder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mBytes_", "LJavaNioByteBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mInTag_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "append", "C", "LJavaIoIOException;", "LNSString;II", "[CII", "LNSString;", "escapeAndAppendString", "attribute", "LNSString;LNSString;LNSString;", "LJavaIoIOException;LJavaLangIllegalArgumentException;LJavaLangIllegalStateException;", "cdsect", "comment", "docdecl", "endTag", "LNSString;LNSString;", "entityRef", "getFeature", "getPrefix", "LNSString;Z", "LJavaLangIllegalArgumentException;", "getProperty", "ignorableWhitespace", "processingInstruction", "setFeature", "LJavaLangIllegalArgumentException;LJavaLangIllegalStateException;", "setOutput", "LJavaIoOutputStream;LNSString;", "LJavaIoWriter;", "setPrefix", "setProperty", "LNSString;LNSObject;", "startDocument", "LNSString;LJavaLangBoolean;", "startTag", "text", &AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE };
-  static const J2ObjcClassInfo _AndroidInternalUtilFastXmlSerializer = { "FastXmlSerializer", "android.internal.util", ptrTable, methods, fields, 7, 0x1, 33, 9, -1, -1, -1, -1, -1 };
-  return &_AndroidInternalUtilFastXmlSerializer;
-}
-
-+ (void)initialize {
-  if (self == [AndroidInternalUtilFastXmlSerializer class]) {
-    JreStrongAssignAndConsume(&AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE, [IOSObjectArray newArrayWithObjects:(id[]){ nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, @"&quot;", nil, nil, nil, @"&amp;", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, @"&lt;", nil, @"&gt;", nil } count:64 type:NSString_class_()]);
-    J2OBJC_SET_INITIALIZED(AndroidInternalUtilFastXmlSerializer)
-  }
-}
-
-@end
-
-void AndroidInternalUtilFastXmlSerializer_init(AndroidInternalUtilFastXmlSerializer *self) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->mText_, [IOSCharArray newArrayWithLength:AndroidInternalUtilFastXmlSerializer_BUFFER_LEN]);
-  JreStrongAssign(&self->mBytes_, JavaNioByteBuffer_allocateWithInt_(AndroidInternalUtilFastXmlSerializer_BUFFER_LEN));
-}
-
-AndroidInternalUtilFastXmlSerializer *new_AndroidInternalUtilFastXmlSerializer_init() {
-  J2OBJC_NEW_IMPL(AndroidInternalUtilFastXmlSerializer, init)
-}
-
-AndroidInternalUtilFastXmlSerializer *create_AndroidInternalUtilFastXmlSerializer_init() {
-  J2OBJC_CREATE_IMPL(AndroidInternalUtilFastXmlSerializer, init)
-}
-
-void AndroidInternalUtilFastXmlSerializer_appendWithChar_(AndroidInternalUtilFastXmlSerializer *self, jchar c) {
-  jint pos = self->mPos_;
-  if (pos >= (AndroidInternalUtilFastXmlSerializer_BUFFER_LEN - 1)) {
-    [self flush];
-    pos = self->mPos_;
-  }
-  *IOSCharArray_GetRef(nil_chk(self->mText_), pos) = c;
-  self->mPos_ = pos + 1;
-}
-
-void AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(AndroidInternalUtilFastXmlSerializer *self, NSString *str, jint i, jint length) {
-  if (length > AndroidInternalUtilFastXmlSerializer_BUFFER_LEN) {
-    jint end = i + length;
-    while (i < end) {
-      jint next = i + AndroidInternalUtilFastXmlSerializer_BUFFER_LEN;
-      AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(self, str, i, next < end ? AndroidInternalUtilFastXmlSerializer_BUFFER_LEN : (end - i));
-      i = next;
-    }
-    return;
-  }
-  jint pos = self->mPos_;
-  if ((pos + length) > AndroidInternalUtilFastXmlSerializer_BUFFER_LEN) {
-    [self flush];
-    pos = self->mPos_;
-  }
-  [((NSString *) nil_chk(str)) java_getChars:i sourceEnd:i + length destination:self->mText_ destinationBegin:pos];
-  self->mPos_ = pos + length;
-}
-
-void AndroidInternalUtilFastXmlSerializer_appendWithCharArray_withInt_withInt_(AndroidInternalUtilFastXmlSerializer *self, IOSCharArray *buf, jint i, jint length) {
-  if (length > AndroidInternalUtilFastXmlSerializer_BUFFER_LEN) {
-    jint end = i + length;
-    while (i < end) {
-      jint next = i + AndroidInternalUtilFastXmlSerializer_BUFFER_LEN;
-      AndroidInternalUtilFastXmlSerializer_appendWithCharArray_withInt_withInt_(self, buf, i, next < end ? AndroidInternalUtilFastXmlSerializer_BUFFER_LEN : (end - i));
-      i = next;
-    }
-    return;
-  }
-  jint pos = self->mPos_;
-  if ((pos + length) > AndroidInternalUtilFastXmlSerializer_BUFFER_LEN) {
-    [self flush];
-    pos = self->mPos_;
-  }
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buf, i, self->mText_, pos, length);
-  self->mPos_ = pos + length;
-}
-
-void AndroidInternalUtilFastXmlSerializer_appendWithNSString_(AndroidInternalUtilFastXmlSerializer *self, NSString *str) {
-  AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(self, str, 0, ((jint) [((NSString *) nil_chk(str)) length]));
-}
-
-void AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithNSString_(AndroidInternalUtilFastXmlSerializer *self, NSString *string) {
-  jint N = ((jint) [((NSString *) nil_chk(string)) length]);
-  jchar NE = (jchar) ((IOSObjectArray *) nil_chk(AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE))->size_;
-  IOSObjectArray *escapes = AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE;
-  jint lastPos = 0;
-  jint pos;
-  for (pos = 0; pos < N; pos++) {
-    jchar c = [string charAtWithInt:pos];
-    if (c >= NE) continue;
-    NSString *escape = IOSObjectArray_Get(escapes, c);
-    if (escape == nil) continue;
-    if (lastPos < pos) AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(self, string, lastPos, pos - lastPos);
-    lastPos = pos + 1;
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, escape);
-  }
-  if (lastPos < pos) AndroidInternalUtilFastXmlSerializer_appendWithNSString_withInt_withInt_(self, string, lastPos, pos - lastPos);
-}
-
-void AndroidInternalUtilFastXmlSerializer_escapeAndAppendStringWithCharArray_withInt_withInt_(AndroidInternalUtilFastXmlSerializer *self, IOSCharArray *buf, jint start, jint len) {
-  jchar NE = (jchar) ((IOSObjectArray *) nil_chk(AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE))->size_;
-  IOSObjectArray *escapes = AndroidInternalUtilFastXmlSerializer_ESCAPE_TABLE;
-  jint end = start + len;
-  jint lastPos = start;
-  jint pos;
-  for (pos = start; pos < end; pos++) {
-    jchar c = IOSCharArray_Get(nil_chk(buf), pos);
-    if (c >= NE) continue;
-    NSString *escape = IOSObjectArray_Get(escapes, c);
-    if (escape == nil) continue;
-    if (lastPos < pos) AndroidInternalUtilFastXmlSerializer_appendWithCharArray_withInt_withInt_(self, buf, lastPos, pos - lastPos);
-    lastPos = pos + 1;
-    AndroidInternalUtilFastXmlSerializer_appendWithNSString_(self, escape);
-  }
-  if (lastPos < pos) AndroidInternalUtilFastXmlSerializer_appendWithCharArray_withInt_withInt_(self, buf, lastPos, pos - lastPos);
-}
-
-void AndroidInternalUtilFastXmlSerializer_flushBytes(AndroidInternalUtilFastXmlSerializer *self) {
-  jint position;
-  if ((position = [((JavaNioByteBuffer *) nil_chk(self->mBytes_)) position]) > 0) {
-    [((JavaNioByteBuffer *) nil_chk(self->mBytes_)) flip];
-    [((JavaIoOutputStream *) nil_chk(self->mOutputStream_)) writeWithByteArray:[((JavaNioByteBuffer *) nil_chk(self->mBytes_)) array] withInt:0 withInt:position];
-    [((JavaNioByteBuffer *) nil_chk(self->mBytes_)) clear];
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidInternalUtilFastXmlSerializer)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilXmlUtils.h b/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilXmlUtils.h
deleted file mode 100644
index 91cf46580..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilXmlUtils.h
+++ /dev/null
@@ -1,160 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidInternalUtilXmlUtils")
-#ifdef RESTRICT_AndroidInternalUtilXmlUtils
-#define INCLUDE_ALL_AndroidInternalUtilXmlUtils 0
-#else
-#define INCLUDE_ALL_AndroidInternalUtilXmlUtils 1
-#endif
-#undef RESTRICT_AndroidInternalUtilXmlUtils
-
-#if !defined (AndroidInternalUtilXmlUtils_) && (INCLUDE_ALL_AndroidInternalUtilXmlUtils || defined(INCLUDE_AndroidInternalUtilXmlUtils))
-#define AndroidInternalUtilXmlUtils_
-
-@class IOSByteArray;
-@class IOSIntArray;
-@class IOSObjectArray;
-@class JavaIoInputStream;
-@class JavaIoOutputStream;
-@class JavaUtilArrayList;
-@class JavaUtilHashMap;
-@protocol JavaLangCharSequence;
-@protocol JavaUtilList;
-@protocol JavaUtilMap;
-@protocol OrgXmlpullV1XmlPullParser;
-@protocol OrgXmlpullV1XmlSerializer;
-
-@interface AndroidInternalUtilXmlUtils : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (void)beginDocumentWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                      withNSString:(NSString *)firstElementName;
-
-+ (jboolean)convertValueToBooleanWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
-                                              withBoolean:(jboolean)defaultValue;
-
-+ (jint)convertValueToIntWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSeq
-                                          withInt:(jint)defaultValue;
-
-+ (jint)convertValueToListWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
-                                 withNSStringArray:(IOSObjectArray *)options
-                                           withInt:(jint)defaultValue;
-
-+ (jint)convertValueToUnsignedIntWithNSString:(NSString *)value
-                                      withInt:(jint)defaultValue;
-
-+ (void)nextElementWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser;
-
-+ (jint)parseUnsignedIntAttributeWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSeq;
-
-+ (JavaUtilArrayList *)readListXmlWithJavaIoInputStream:(JavaIoInputStream *)inArg;
-
-+ (JavaUtilHashMap *)readMapXmlWithJavaIoInputStream:(JavaIoInputStream *)inArg;
-
-+ (IOSIntArray *)readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                                     withNSString:(NSString *)endTag
-                                                withNSStringArray:(IOSObjectArray *)name;
-
-+ (JavaUtilArrayList *)readThisListXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                                       withNSString:(NSString *)endTag
-                                                  withNSStringArray:(IOSObjectArray *)name;
-
-+ (JavaUtilHashMap *)readThisMapXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                                    withNSString:(NSString *)endTag
-                                               withNSStringArray:(IOSObjectArray *)name;
-
-+ (id)readValueXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                              withNSStringArray:(IOSObjectArray *)name;
-
-+ (void)skipCurrentTagWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser;
-
-+ (void)writeByteArrayXmlWithByteArray:(IOSByteArray *)val
-                          withNSString:(NSString *)name
-         withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg;
-
-+ (void)writeIntArrayXmlWithIntArray:(IOSIntArray *)val
-                        withNSString:(NSString *)name
-       withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg;
-
-+ (void)writeListXmlWithJavaUtilList:(id<JavaUtilList>)val
-              withJavaIoOutputStream:(JavaIoOutputStream *)outArg;
-
-+ (void)writeListXmlWithJavaUtilList:(id<JavaUtilList>)val
-                        withNSString:(NSString *)name
-       withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg;
-
-+ (void)writeMapXmlWithJavaUtilMap:(id<JavaUtilMap>)val
-            withJavaIoOutputStream:(JavaIoOutputStream *)outArg;
-
-+ (void)writeMapXmlWithJavaUtilMap:(id<JavaUtilMap>)val
-                      withNSString:(NSString *)name
-     withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg;
-
-+ (void)writeValueXmlWithId:(id)v
-               withNSString:(NSString *)name
-withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidInternalUtilXmlUtils)
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_init(AndroidInternalUtilXmlUtils *self);
-
-FOUNDATION_EXPORT AndroidInternalUtilXmlUtils *new_AndroidInternalUtilXmlUtils_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidInternalUtilXmlUtils *create_AndroidInternalUtilXmlUtils_init();
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_skipCurrentTagWithOrgXmlpullV1XmlPullParser_(id<OrgXmlpullV1XmlPullParser> parser);
-
-FOUNDATION_EXPORT jint AndroidInternalUtilXmlUtils_convertValueToListWithJavaLangCharSequence_withNSStringArray_withInt_(id<JavaLangCharSequence> value, IOSObjectArray *options, jint defaultValue);
-
-FOUNDATION_EXPORT jboolean AndroidInternalUtilXmlUtils_convertValueToBooleanWithJavaLangCharSequence_withBoolean_(id<JavaLangCharSequence> value, jboolean defaultValue);
-
-FOUNDATION_EXPORT jint AndroidInternalUtilXmlUtils_convertValueToIntWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> charSeq, jint defaultValue);
-
-FOUNDATION_EXPORT jint AndroidInternalUtilXmlUtils_convertValueToUnsignedIntWithNSString_withInt_(NSString *value, jint defaultValue);
-
-FOUNDATION_EXPORT jint AndroidInternalUtilXmlUtils_parseUnsignedIntAttributeWithJavaLangCharSequence_(id<JavaLangCharSequence> charSeq);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withJavaIoOutputStream_(id<JavaUtilMap> val, JavaIoOutputStream *outArg);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withJavaIoOutputStream_(id<JavaUtilList> val, JavaIoOutputStream *outArg);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withNSString_withOrgXmlpullV1XmlSerializer_(id<JavaUtilMap> val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withNSString_withOrgXmlpullV1XmlSerializer_(id<JavaUtilList> val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeByteArrayXmlWithByteArray_withNSString_withOrgXmlpullV1XmlSerializer_(IOSByteArray *val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeIntArrayXmlWithIntArray_withNSString_withOrgXmlpullV1XmlSerializer_(IOSIntArray *val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_writeValueXmlWithId_withNSString_withOrgXmlpullV1XmlSerializer_(id v, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg);
-
-FOUNDATION_EXPORT JavaUtilHashMap *AndroidInternalUtilXmlUtils_readMapXmlWithJavaIoInputStream_(JavaIoInputStream *inArg);
-
-FOUNDATION_EXPORT JavaUtilArrayList *AndroidInternalUtilXmlUtils_readListXmlWithJavaIoInputStream_(JavaIoInputStream *inArg);
-
-FOUNDATION_EXPORT JavaUtilHashMap *AndroidInternalUtilXmlUtils_readThisMapXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, NSString *endTag, IOSObjectArray *name);
-
-FOUNDATION_EXPORT JavaUtilArrayList *AndroidInternalUtilXmlUtils_readThisListXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, NSString *endTag, IOSObjectArray *name);
-
-FOUNDATION_EXPORT IOSIntArray *AndroidInternalUtilXmlUtils_readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, NSString *endTag, IOSObjectArray *name);
-
-FOUNDATION_EXPORT id AndroidInternalUtilXmlUtils_readValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, IOSObjectArray *name);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_beginDocumentWithOrgXmlpullV1XmlPullParser_withNSString_(id<OrgXmlpullV1XmlPullParser> parser, NSString *firstElementName);
-
-FOUNDATION_EXPORT void AndroidInternalUtilXmlUtils_nextElementWithOrgXmlpullV1XmlPullParser_(id<OrgXmlpullV1XmlPullParser> parser);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidInternalUtilXmlUtils)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidInternalUtilXmlUtils")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilXmlUtils.m b/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilXmlUtils.m
deleted file mode 100644
index a30dd6a54..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidInternalUtilXmlUtils.m
+++ /dev/null
@@ -1,758 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidInternalUtilFastXmlSerializer.h"
-#include "AndroidInternalUtilXmlUtils.h"
-#include "AndroidUtilXml.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/InputStream.h"
-#include "java/io/OutputStream.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Double.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/NumberFormatException.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/util/ArrayList.h"
-#include "java/util/HashMap.h"
-#include "java/util/Iterator.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "org/kxml2/io/KXmlParser.h"
-#include "org/kxml2/io/KXmlSerializer.h"
-#include "org/xmlpull/v1/XmlPullParser.h"
-#include "org/xmlpull/v1/XmlPullParserException.h"
-#include "org/xmlpull/v1/XmlPullParserFactory.h"
-#include "org/xmlpull/v1/XmlSerializer.h"
-
-@interface AndroidInternalUtilXmlUtils ()
-
-+ (id)readThisValueXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                  withNSStringArray:(IOSObjectArray *)name;
-
-@end
-
-inline IOSObjectArray *AndroidInternalUtilXmlUtils_get_hardref();
-inline IOSObjectArray *AndroidInternalUtilXmlUtils_set_hardref(IOSObjectArray *value);
-static IOSObjectArray *AndroidInternalUtilXmlUtils_hardref;
-J2OBJC_STATIC_FIELD_OBJ(AndroidInternalUtilXmlUtils, hardref, IOSObjectArray *)
-
-__attribute__((unused)) static id AndroidInternalUtilXmlUtils_readThisValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, IOSObjectArray *name);
-
-J2OBJC_INITIALIZED_DEFN(AndroidInternalUtilXmlUtils)
-
-@implementation AndroidInternalUtilXmlUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidInternalUtilXmlUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (void)skipCurrentTagWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser {
-  AndroidInternalUtilXmlUtils_skipCurrentTagWithOrgXmlpullV1XmlPullParser_(parser);
-}
-
-+ (jint)convertValueToListWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
-                                 withNSStringArray:(IOSObjectArray *)options
-                                           withInt:(jint)defaultValue {
-  return AndroidInternalUtilXmlUtils_convertValueToListWithJavaLangCharSequence_withNSStringArray_withInt_(value, options, defaultValue);
-}
-
-+ (jboolean)convertValueToBooleanWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
-                                              withBoolean:(jboolean)defaultValue {
-  return AndroidInternalUtilXmlUtils_convertValueToBooleanWithJavaLangCharSequence_withBoolean_(value, defaultValue);
-}
-
-+ (jint)convertValueToIntWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSeq
-                                          withInt:(jint)defaultValue {
-  return AndroidInternalUtilXmlUtils_convertValueToIntWithJavaLangCharSequence_withInt_(charSeq, defaultValue);
-}
-
-+ (jint)convertValueToUnsignedIntWithNSString:(NSString *)value
-                                      withInt:(jint)defaultValue {
-  return AndroidInternalUtilXmlUtils_convertValueToUnsignedIntWithNSString_withInt_(value, defaultValue);
-}
-
-+ (jint)parseUnsignedIntAttributeWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSeq {
-  return AndroidInternalUtilXmlUtils_parseUnsignedIntAttributeWithJavaLangCharSequence_(charSeq);
-}
-
-+ (void)writeMapXmlWithJavaUtilMap:(id<JavaUtilMap>)val
-            withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
-  AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withJavaIoOutputStream_(val, outArg);
-}
-
-+ (void)writeListXmlWithJavaUtilList:(id<JavaUtilList>)val
-              withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
-  AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withJavaIoOutputStream_(val, outArg);
-}
-
-+ (void)writeMapXmlWithJavaUtilMap:(id<JavaUtilMap>)val
-                      withNSString:(NSString *)name
-     withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg {
-  AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withNSString_withOrgXmlpullV1XmlSerializer_(val, name, outArg);
-}
-
-+ (void)writeListXmlWithJavaUtilList:(id<JavaUtilList>)val
-                        withNSString:(NSString *)name
-       withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg {
-  AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withNSString_withOrgXmlpullV1XmlSerializer_(val, name, outArg);
-}
-
-+ (void)writeByteArrayXmlWithByteArray:(IOSByteArray *)val
-                          withNSString:(NSString *)name
-         withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg {
-  AndroidInternalUtilXmlUtils_writeByteArrayXmlWithByteArray_withNSString_withOrgXmlpullV1XmlSerializer_(val, name, outArg);
-}
-
-+ (void)writeIntArrayXmlWithIntArray:(IOSIntArray *)val
-                        withNSString:(NSString *)name
-       withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg {
-  AndroidInternalUtilXmlUtils_writeIntArrayXmlWithIntArray_withNSString_withOrgXmlpullV1XmlSerializer_(val, name, outArg);
-}
-
-+ (void)writeValueXmlWithId:(id)v
-               withNSString:(NSString *)name
-withOrgXmlpullV1XmlSerializer:(id<OrgXmlpullV1XmlSerializer>)outArg {
-  AndroidInternalUtilXmlUtils_writeValueXmlWithId_withNSString_withOrgXmlpullV1XmlSerializer_(v, name, outArg);
-}
-
-+ (JavaUtilHashMap *)readMapXmlWithJavaIoInputStream:(JavaIoInputStream *)inArg {
-  return AndroidInternalUtilXmlUtils_readMapXmlWithJavaIoInputStream_(inArg);
-}
-
-+ (JavaUtilArrayList *)readListXmlWithJavaIoInputStream:(JavaIoInputStream *)inArg {
-  return AndroidInternalUtilXmlUtils_readListXmlWithJavaIoInputStream_(inArg);
-}
-
-+ (JavaUtilHashMap *)readThisMapXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                                    withNSString:(NSString *)endTag
-                                               withNSStringArray:(IOSObjectArray *)name {
-  return AndroidInternalUtilXmlUtils_readThisMapXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(parser, endTag, name);
-}
-
-+ (JavaUtilArrayList *)readThisListXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                                       withNSString:(NSString *)endTag
-                                                  withNSStringArray:(IOSObjectArray *)name {
-  return AndroidInternalUtilXmlUtils_readThisListXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(parser, endTag, name);
-}
-
-+ (IOSIntArray *)readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                                     withNSString:(NSString *)endTag
-                                                withNSStringArray:(IOSObjectArray *)name {
-  return AndroidInternalUtilXmlUtils_readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(parser, endTag, name);
-}
-
-+ (id)readValueXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                              withNSStringArray:(IOSObjectArray *)name {
-  return AndroidInternalUtilXmlUtils_readValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, name);
-}
-
-+ (id)readThisValueXmlWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                  withNSStringArray:(IOSObjectArray *)name {
-  return AndroidInternalUtilXmlUtils_readThisValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, name);
-}
-
-+ (void)beginDocumentWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser
-                                      withNSString:(NSString *)firstElementName {
-  AndroidInternalUtilXmlUtils_beginDocumentWithOrgXmlpullV1XmlPullParser_withNSString_(parser, firstElementName);
-}
-
-+ (void)nextElementWithOrgXmlpullV1XmlPullParser:(id<OrgXmlpullV1XmlPullParser>)parser {
-  AndroidInternalUtilXmlUtils_nextElementWithOrgXmlpullV1XmlPullParser_(parser);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
-    { NULL, "I", 0x19, 3, 4, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 5, 6, -1, -1, -1, -1 },
-    { NULL, "I", 0x19, 7, 8, -1, -1, -1, -1 },
-    { NULL, "I", 0x19, 9, 10, -1, -1, -1, -1 },
-    { NULL, "I", 0x19, 11, 12, -1, -1, -1, -1 },
-    { NULL, "V", 0x19, 13, 14, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 15, 16, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 13, 17, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 15, 18, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 19, 20, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 21, 22, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 23, 24, 2, -1, -1, -1 },
-    { NULL, "LJavaUtilHashMap;", 0x19, 25, 26, 2, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x19, 27, 26, 2, -1, -1, -1 },
-    { NULL, "LJavaUtilHashMap;", 0x19, 28, 29, 2, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x19, 30, 29, 2, -1, -1, -1 },
-    { NULL, "[I", 0x19, 31, 29, 2, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x19, 32, 33, 2, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1a, 34, 33, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 35, 36, 2, -1, -1, -1 },
-    { NULL, "V", 0x19, 37, 1, 2, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(skipCurrentTagWithOrgXmlpullV1XmlPullParser:);
-  methods[2].selector = @selector(convertValueToListWithJavaLangCharSequence:withNSStringArray:withInt:);
-  methods[3].selector = @selector(convertValueToBooleanWithJavaLangCharSequence:withBoolean:);
-  methods[4].selector = @selector(convertValueToIntWithJavaLangCharSequence:withInt:);
-  methods[5].selector = @selector(convertValueToUnsignedIntWithNSString:withInt:);
-  methods[6].selector = @selector(parseUnsignedIntAttributeWithJavaLangCharSequence:);
-  methods[7].selector = @selector(writeMapXmlWithJavaUtilMap:withJavaIoOutputStream:);
-  methods[8].selector = @selector(writeListXmlWithJavaUtilList:withJavaIoOutputStream:);
-  methods[9].selector = @selector(writeMapXmlWithJavaUtilMap:withNSString:withOrgXmlpullV1XmlSerializer:);
-  methods[10].selector = @selector(writeListXmlWithJavaUtilList:withNSString:withOrgXmlpullV1XmlSerializer:);
-  methods[11].selector = @selector(writeByteArrayXmlWithByteArray:withNSString:withOrgXmlpullV1XmlSerializer:);
-  methods[12].selector = @selector(writeIntArrayXmlWithIntArray:withNSString:withOrgXmlpullV1XmlSerializer:);
-  methods[13].selector = @selector(writeValueXmlWithId:withNSString:withOrgXmlpullV1XmlSerializer:);
-  methods[14].selector = @selector(readMapXmlWithJavaIoInputStream:);
-  methods[15].selector = @selector(readListXmlWithJavaIoInputStream:);
-  methods[16].selector = @selector(readThisMapXmlWithOrgXmlpullV1XmlPullParser:withNSString:withNSStringArray:);
-  methods[17].selector = @selector(readThisListXmlWithOrgXmlpullV1XmlPullParser:withNSString:withNSStringArray:);
-  methods[18].selector = @selector(readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser:withNSString:withNSStringArray:);
-  methods[19].selector = @selector(readValueXmlWithOrgXmlpullV1XmlPullParser:withNSStringArray:);
-  methods[20].selector = @selector(readThisValueXmlWithOrgXmlpullV1XmlPullParser:withNSStringArray:);
-  methods[21].selector = @selector(beginDocumentWithOrgXmlpullV1XmlPullParser:withNSString:);
-  methods[22].selector = @selector(nextElementWithOrgXmlpullV1XmlPullParser:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "hardref", "[LIOSClass;", .constantValue.asLong = 0, 0xa, -1, 38, -1, -1 },
-  };
-  static const void *ptrTable[] = { "skipCurrentTag", "LOrgXmlpullV1XmlPullParser;", "LOrgXmlpullV1XmlPullParserException;LJavaIoIOException;", "convertValueToList", "LJavaLangCharSequence;[LNSString;I", "convertValueToBoolean", "LJavaLangCharSequence;Z", "convertValueToInt", "LJavaLangCharSequence;I", "convertValueToUnsignedInt", "LNSString;I", "parseUnsignedIntAttribute", "LJavaLangCharSequence;", "writeMapXml", "LJavaUtilMap;LJavaIoOutputStream;", "writeListXml", "LJavaUtilList;LJavaIoOutputStream;", "LJavaUtilMap;LNSString;LOrgXmlpullV1XmlSerializer;", "LJavaUtilList;LNSString;LOrgXmlpullV1XmlSerializer;", "writeByteArrayXml", "[BLNSString;LOrgXmlpullV1XmlSerializer;", "writeIntArrayXml", "[ILNSString;LOrgXmlpullV1XmlSerializer;", "writeValueXml", "LNSObject;LNSString;LOrgXmlpullV1XmlSerializer;", "readMapXml", "LJavaIoInputStream;", "readListXml", "readThisMapXml", "LOrgXmlpullV1XmlPullParser;LNSString;[LNSString;", "readThisListXml", "readThisIntArrayXml", "readValueXml", "LOrgXmlpullV1XmlPullParser;[LNSString;", "readThisValueXml", "beginDocument", "LOrgXmlpullV1XmlPullParser;LNSString;", "nextElement", &AndroidInternalUtilXmlUtils_hardref };
-  static const J2ObjcClassInfo _AndroidInternalUtilXmlUtils = { "XmlUtils", "android.internal.util", ptrTable, methods, fields, 7, 0x1, 23, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidInternalUtilXmlUtils;
-}
-
-+ (void)initialize {
-  if (self == [AndroidInternalUtilXmlUtils class]) {
-    JreStrongAssignAndConsume(&AndroidInternalUtilXmlUtils_hardref, [IOSObjectArray newArrayWithObjects:(id[]){ OrgKxml2IoKXmlParser_class_(), OrgKxml2IoKXmlSerializer_class_() } count:2 type:IOSClass_class_()]);
-    J2OBJC_SET_INITIALIZED(AndroidInternalUtilXmlUtils)
-  }
-}
-
-@end
-
-void AndroidInternalUtilXmlUtils_init(AndroidInternalUtilXmlUtils *self) {
-  NSObject_init(self);
-}
-
-AndroidInternalUtilXmlUtils *new_AndroidInternalUtilXmlUtils_init() {
-  J2OBJC_NEW_IMPL(AndroidInternalUtilXmlUtils, init)
-}
-
-AndroidInternalUtilXmlUtils *create_AndroidInternalUtilXmlUtils_init() {
-  J2OBJC_CREATE_IMPL(AndroidInternalUtilXmlUtils, init)
-}
-
-void AndroidInternalUtilXmlUtils_skipCurrentTagWithOrgXmlpullV1XmlPullParser_(id<OrgXmlpullV1XmlPullParser> parser) {
-  AndroidInternalUtilXmlUtils_initialize();
-  jint outerDepth = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) getDepth];
-  jint type;
-  while ((type = [parser next]) != OrgXmlpullV1XmlPullParser_END_DOCUMENT && (type != OrgXmlpullV1XmlPullParser_END_TAG || [parser getDepth] > outerDepth)) {
-  }
-}
-
-jint AndroidInternalUtilXmlUtils_convertValueToListWithJavaLangCharSequence_withNSStringArray_withInt_(id<JavaLangCharSequence> value, IOSObjectArray *options, jint defaultValue) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (nil != value) {
-    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(options))->size_; i++) {
-      if ([value isEqual:IOSObjectArray_Get(options, i)]) return i;
-    }
-  }
-  return defaultValue;
-}
-
-jboolean AndroidInternalUtilXmlUtils_convertValueToBooleanWithJavaLangCharSequence_withBoolean_(id<JavaLangCharSequence> value, jboolean defaultValue) {
-  AndroidInternalUtilXmlUtils_initialize();
-  jboolean result = false;
-  if (nil == value) return defaultValue;
-  if ([value isEqual:@"1"] || [value isEqual:@"true"] || [value isEqual:@"TRUE"]) result = true;
-  return result;
-}
-
-jint AndroidInternalUtilXmlUtils_convertValueToIntWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> charSeq, jint defaultValue) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (nil == charSeq) return defaultValue;
-  NSString *nm = [charSeq description];
-  jint value;
-  jint sign = 1;
-  jint index = 0;
-  jint len = ((jint) [((NSString *) nil_chk(nm)) length]);
-  jint base = 10;
-  if ('-' == [nm charAtWithInt:0]) {
-    sign = -1;
-    index++;
-  }
-  if ('0' == [nm charAtWithInt:index]) {
-    if (index == (len - 1)) return 0;
-    jchar c = [nm charAtWithInt:index + 1];
-    if ('x' == c || 'X' == c) {
-      index += 2;
-      base = 16;
-    }
-    else {
-      index++;
-      base = 8;
-    }
-  }
-  else if ('#' == [nm charAtWithInt:index]) {
-    index++;
-    base = 16;
-  }
-  return JavaLangInteger_parseIntWithNSString_withInt_([nm java_substring:index], base) * sign;
-}
-
-jint AndroidInternalUtilXmlUtils_convertValueToUnsignedIntWithNSString_withInt_(NSString *value, jint defaultValue) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (nil == value) return defaultValue;
-  return AndroidInternalUtilXmlUtils_parseUnsignedIntAttributeWithJavaLangCharSequence_(value);
-}
-
-jint AndroidInternalUtilXmlUtils_parseUnsignedIntAttributeWithJavaLangCharSequence_(id<JavaLangCharSequence> charSeq) {
-  AndroidInternalUtilXmlUtils_initialize();
-  NSString *value = [((id<JavaLangCharSequence>) nil_chk(charSeq)) description];
-  jlong bits;
-  jint index = 0;
-  jint len = ((jint) [((NSString *) nil_chk(value)) length]);
-  jint base = 10;
-  if ('0' == [value charAtWithInt:index]) {
-    if (index == (len - 1)) return 0;
-    jchar c = [value charAtWithInt:index + 1];
-    if ('x' == c || 'X' == c) {
-      index += 2;
-      base = 16;
-    }
-    else {
-      index++;
-      base = 8;
-    }
-  }
-  else if ('#' == [value charAtWithInt:index]) {
-    index++;
-    base = 16;
-  }
-  return (jint) JavaLangLong_parseLongWithNSString_withInt_([value java_substring:index], base);
-}
-
-void AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withJavaIoOutputStream_(id<JavaUtilMap> val, JavaIoOutputStream *outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  id<OrgXmlpullV1XmlSerializer> serializer = create_AndroidInternalUtilFastXmlSerializer_init();
-  [serializer setOutputWithJavaIoOutputStream:outArg withNSString:@"utf-8"];
-  [serializer startDocumentWithNSString:nil withJavaLangBoolean:JavaLangBoolean_valueOfWithBoolean_(true)];
-  [serializer setFeatureWithNSString:@"http://xmlpull.org/v1/doc/features.html#indent-output" withBoolean:true];
-  AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withNSString_withOrgXmlpullV1XmlSerializer_(val, nil, serializer);
-  [serializer endDocument];
-}
-
-void AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withJavaIoOutputStream_(id<JavaUtilList> val, JavaIoOutputStream *outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  id<OrgXmlpullV1XmlSerializer> serializer = AndroidUtilXml_newSerializer();
-  [((id<OrgXmlpullV1XmlSerializer>) nil_chk(serializer)) setOutputWithJavaIoOutputStream:outArg withNSString:@"utf-8"];
-  [serializer startDocumentWithNSString:nil withJavaLangBoolean:JavaLangBoolean_valueOfWithBoolean_(true)];
-  [serializer setFeatureWithNSString:@"http://xmlpull.org/v1/doc/features.html#indent-output" withBoolean:true];
-  AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withNSString_withOrgXmlpullV1XmlSerializer_(val, nil, serializer);
-  [serializer endDocument];
-}
-
-void AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withNSString_withOrgXmlpullV1XmlSerializer_(id<JavaUtilMap> val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (val == nil) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"null"];
-    [outArg endTagWithNSString:nil withNSString:@"null"];
-    return;
-  }
-  id<JavaUtilSet> s = [val entrySet];
-  id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk(s)) iterator];
-  [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"map"];
-  if (name != nil) {
-    [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-  }
-  while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
-    id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) cast_check([i next], JavaUtilMap_Entry_class_());
-    AndroidInternalUtilXmlUtils_writeValueXmlWithId_withNSString_withOrgXmlpullV1XmlSerializer_([((id<JavaUtilMap_Entry>) nil_chk(e)) getValue], (NSString *) cast_chk([e getKey], [NSString class]), outArg);
-  }
-  [outArg endTagWithNSString:nil withNSString:@"map"];
-}
-
-void AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withNSString_withOrgXmlpullV1XmlSerializer_(id<JavaUtilList> val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (val == nil) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"null"];
-    [outArg endTagWithNSString:nil withNSString:@"null"];
-    return;
-  }
-  [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"list"];
-  if (name != nil) {
-    [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-  }
-  jint N = [val size];
-  jint i = 0;
-  while (i < N) {
-    AndroidInternalUtilXmlUtils_writeValueXmlWithId_withNSString_withOrgXmlpullV1XmlSerializer_([val getWithInt:i], nil, outArg);
-    i++;
-  }
-  [outArg endTagWithNSString:nil withNSString:@"list"];
-}
-
-void AndroidInternalUtilXmlUtils_writeByteArrayXmlWithByteArray_withNSString_withOrgXmlpullV1XmlSerializer_(IOSByteArray *val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (val == nil) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"null"];
-    [outArg endTagWithNSString:nil withNSString:@"null"];
-    return;
-  }
-  [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"byte-array"];
-  if (name != nil) {
-    [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-  }
-  jint N = val->size_;
-  [outArg attributeWithNSString:nil withNSString:@"num" withNSString:JavaLangInteger_toStringWithInt_(N)];
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(val->size_ * 2);
-  for (jint i = 0; i < N; i++) {
-    jint b = IOSByteArray_Get(val, i);
-    jint h = JreRShift32(b, 4);
-    [sb appendWithInt:h >= 10 ? ('a' + h - 10) : ('0' + h)];
-    h = b & (jint) 0xff;
-    [sb appendWithInt:h >= 10 ? ('a' + h - 10) : ('0' + h)];
-  }
-  [outArg textWithNSString:[sb description]];
-  [outArg endTagWithNSString:nil withNSString:@"byte-array"];
-}
-
-void AndroidInternalUtilXmlUtils_writeIntArrayXmlWithIntArray_withNSString_withOrgXmlpullV1XmlSerializer_(IOSIntArray *val, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  if (val == nil) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"null"];
-    [outArg endTagWithNSString:nil withNSString:@"null"];
-    return;
-  }
-  [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"int-array"];
-  if (name != nil) {
-    [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-  }
-  jint N = val->size_;
-  [outArg attributeWithNSString:nil withNSString:@"num" withNSString:JavaLangInteger_toStringWithInt_(N)];
-  for (jint i = 0; i < N; i++) {
-    [outArg startTagWithNSString:nil withNSString:@"item"];
-    [outArg attributeWithNSString:nil withNSString:@"value" withNSString:JavaLangInteger_toStringWithInt_(IOSIntArray_Get(val, i))];
-    [outArg endTagWithNSString:nil withNSString:@"item"];
-  }
-  [outArg endTagWithNSString:nil withNSString:@"int-array"];
-}
-
-void AndroidInternalUtilXmlUtils_writeValueXmlWithId_withNSString_withOrgXmlpullV1XmlSerializer_(id v, NSString *name, id<OrgXmlpullV1XmlSerializer> outArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  NSString *typeStr;
-  if (v == nil) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"null"];
-    if (name != nil) {
-      [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-    }
-    [outArg endTagWithNSString:nil withNSString:@"null"];
-    return;
-  }
-  else if ([v isKindOfClass:[NSString class]]) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"string"];
-    if (name != nil) {
-      [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-    }
-    [outArg textWithNSString:[v description]];
-    [outArg endTagWithNSString:nil withNSString:@"string"];
-    return;
-  }
-  else if ([v isKindOfClass:[JavaLangInteger class]]) {
-    typeStr = @"int";
-  }
-  else if ([v isKindOfClass:[JavaLangLong class]]) {
-    typeStr = @"long";
-  }
-  else if ([v isKindOfClass:[JavaLangFloat class]]) {
-    typeStr = @"float";
-  }
-  else if ([v isKindOfClass:[JavaLangDouble class]]) {
-    typeStr = @"double";
-  }
-  else if ([v isKindOfClass:[JavaLangBoolean class]]) {
-    typeStr = @"boolean";
-  }
-  else if ([v isKindOfClass:[IOSByteArray class]]) {
-    AndroidInternalUtilXmlUtils_writeByteArrayXmlWithByteArray_withNSString_withOrgXmlpullV1XmlSerializer_((IOSByteArray *) cast_chk(v, [IOSByteArray class]), name, outArg);
-    return;
-  }
-  else if ([v isKindOfClass:[IOSIntArray class]]) {
-    AndroidInternalUtilXmlUtils_writeIntArrayXmlWithIntArray_withNSString_withOrgXmlpullV1XmlSerializer_((IOSIntArray *) cast_chk(v, [IOSIntArray class]), name, outArg);
-    return;
-  }
-  else if ([JavaUtilMap_class_() isInstance:v]) {
-    AndroidInternalUtilXmlUtils_writeMapXmlWithJavaUtilMap_withNSString_withOrgXmlpullV1XmlSerializer_((id<JavaUtilMap>) cast_check(v, JavaUtilMap_class_()), name, outArg);
-    return;
-  }
-  else if ([JavaUtilList_class_() isInstance:v]) {
-    AndroidInternalUtilXmlUtils_writeListXmlWithJavaUtilList_withNSString_withOrgXmlpullV1XmlSerializer_((id<JavaUtilList>) cast_check(v, JavaUtilList_class_()), name, outArg);
-    return;
-  }
-  else if ([JavaLangCharSequence_class_() isInstance:v]) {
-    [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:@"string"];
-    if (name != nil) {
-      [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-    }
-    [outArg textWithNSString:[v description]];
-    [outArg endTagWithNSString:nil withNSString:@"string"];
-    return;
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"writeValueXml: unable to write value ", v));
-  }
-  [((id<OrgXmlpullV1XmlSerializer>) nil_chk(outArg)) startTagWithNSString:nil withNSString:typeStr];
-  if (name != nil) {
-    [outArg attributeWithNSString:nil withNSString:@"name" withNSString:name];
-  }
-  [outArg attributeWithNSString:nil withNSString:@"value" withNSString:[v description]];
-  [outArg endTagWithNSString:nil withNSString:typeStr];
-}
-
-JavaUtilHashMap *AndroidInternalUtilXmlUtils_readMapXmlWithJavaIoInputStream_(JavaIoInputStream *inArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  id<OrgXmlpullV1XmlPullParser> parser = [((OrgXmlpullV1XmlPullParserFactory *) nil_chk(OrgXmlpullV1XmlPullParserFactory_newInstance())) newPullParser];
-  [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) setInputWithJavaIoInputStream:inArg withNSString:nil];
-  return (JavaUtilHashMap *) cast_chk(AndroidInternalUtilXmlUtils_readValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, [IOSObjectArray arrayWithLength:1 type:NSString_class_()]), [JavaUtilHashMap class]);
-}
-
-JavaUtilArrayList *AndroidInternalUtilXmlUtils_readListXmlWithJavaIoInputStream_(JavaIoInputStream *inArg) {
-  AndroidInternalUtilXmlUtils_initialize();
-  id<OrgXmlpullV1XmlPullParser> parser = AndroidUtilXml_newPullParser();
-  [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) setInputWithJavaIoInputStream:inArg withNSString:nil];
-  return (JavaUtilArrayList *) cast_chk(AndroidInternalUtilXmlUtils_readValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, [IOSObjectArray arrayWithLength:1 type:NSString_class_()]), [JavaUtilArrayList class]);
-}
-
-JavaUtilHashMap *AndroidInternalUtilXmlUtils_readThisMapXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, NSString *endTag, IOSObjectArray *name) {
-  AndroidInternalUtilXmlUtils_initialize();
-  JavaUtilHashMap *map = create_JavaUtilHashMap_init();
-  jint eventType = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) getEventType];
-  do {
-    if (eventType == OrgXmlpullV1XmlPullParser_START_TAG) {
-      id val = AndroidInternalUtilXmlUtils_readThisValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, name);
-      if (IOSObjectArray_Get(nil_chk(name), 0) != nil) {
-        [map putWithId:IOSObjectArray_Get(name, 0) withId:val];
-      }
-      else {
-        @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Map value without name attribute: ", [parser getName]));
-      }
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_END_TAG) {
-      if ([((NSString *) nil_chk([parser getName])) isEqual:endTag]) {
-        return map;
-      }
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Expected ", endTag, @" end tag at: ", [parser getName]));
-    }
-    eventType = [parser next];
-  }
-  while (eventType != OrgXmlpullV1XmlPullParser_END_DOCUMENT);
-  @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$", @"Document ended before ", endTag, @" end tag"));
-}
-
-JavaUtilArrayList *AndroidInternalUtilXmlUtils_readThisListXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, NSString *endTag, IOSObjectArray *name) {
-  AndroidInternalUtilXmlUtils_initialize();
-  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
-  jint eventType = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) getEventType];
-  do {
-    if (eventType == OrgXmlpullV1XmlPullParser_START_TAG) {
-      id val = AndroidInternalUtilXmlUtils_readThisValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, name);
-      [list addWithId:val];
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_END_TAG) {
-      if ([((NSString *) nil_chk([parser getName])) isEqual:endTag]) {
-        return list;
-      }
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Expected ", endTag, @" end tag at: ", [parser getName]));
-    }
-    eventType = [parser next];
-  }
-  while (eventType != OrgXmlpullV1XmlPullParser_END_DOCUMENT);
-  @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$", @"Document ended before ", endTag, @" end tag"));
-}
-
-IOSIntArray *AndroidInternalUtilXmlUtils_readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, NSString *endTag, IOSObjectArray *name) {
-  AndroidInternalUtilXmlUtils_initialize();
-  jint num;
-  @try {
-    num = JavaLangInteger_parseIntWithNSString_([((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) getAttributeValueWithNSString:nil withNSString:@"num"]);
-  }
-  @catch (JavaLangNullPointerException *e) {
-    @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"Need num attribute in byte-array");
-  }
-  @catch (JavaLangNumberFormatException *e) {
-    @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"Not a number in num attribute in byte-array");
-  }
-  IOSIntArray *array = [IOSIntArray arrayWithLength:num];
-  jint i = 0;
-  jint eventType = [parser getEventType];
-  do {
-    if (eventType == OrgXmlpullV1XmlPullParser_START_TAG) {
-      if ([((NSString *) nil_chk([parser getName])) isEqual:@"item"]) {
-        @try {
-          *IOSIntArray_GetRef(array, i) = JavaLangInteger_parseIntWithNSString_([parser getAttributeValueWithNSString:nil withNSString:@"value"]);
-        }
-        @catch (JavaLangNullPointerException *e) {
-          @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"Need value attribute in item");
-        }
-        @catch (JavaLangNumberFormatException *e) {
-          @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"Not a number in value attribute in item");
-        }
-      }
-      else {
-        @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Expected item tag at: ", [parser getName]));
-      }
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_END_TAG) {
-      if ([((NSString *) nil_chk([parser getName])) isEqual:endTag]) {
-        return array;
-      }
-      else if ([((NSString *) nil_chk([parser getName])) isEqual:@"item"]) {
-        i++;
-      }
-      else {
-        @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Expected ", endTag, @" end tag at: ", [parser getName]));
-      }
-    }
-    eventType = [parser next];
-  }
-  while (eventType != OrgXmlpullV1XmlPullParser_END_DOCUMENT);
-  @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$", @"Document ended before ", endTag, @" end tag"));
-}
-
-id AndroidInternalUtilXmlUtils_readValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, IOSObjectArray *name) {
-  AndroidInternalUtilXmlUtils_initialize();
-  jint eventType = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) getEventType];
-  do {
-    if (eventType == OrgXmlpullV1XmlPullParser_START_TAG) {
-      return AndroidInternalUtilXmlUtils_readThisValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(parser, name);
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_END_TAG) {
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Unexpected end tag at: ", [parser getName]));
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_TEXT) {
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Unexpected text: ", [parser getText]));
-    }
-    eventType = [parser next];
-  }
-  while (eventType != OrgXmlpullV1XmlPullParser_END_DOCUMENT);
-  @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"Unexpected end of document");
-}
-
-id AndroidInternalUtilXmlUtils_readThisValueXmlWithOrgXmlpullV1XmlPullParser_withNSStringArray_(id<OrgXmlpullV1XmlPullParser> parser, IOSObjectArray *name) {
-  AndroidInternalUtilXmlUtils_initialize();
-  NSString *valueName = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) getAttributeValueWithNSString:nil withNSString:@"name"];
-  NSString *tagName = [parser getName];
-  id res;
-  if ([((NSString *) nil_chk(tagName)) isEqual:@"null"]) {
-    res = nil;
-  }
-  else if ([tagName isEqual:@"string"]) {
-    NSString *value = @"";
-    jint eventType;
-    while ((eventType = [parser next]) != OrgXmlpullV1XmlPullParser_END_DOCUMENT) {
-      if (eventType == OrgXmlpullV1XmlPullParser_END_TAG) {
-        if ([((NSString *) nil_chk([parser getName])) isEqual:@"string"]) {
-          IOSObjectArray_Set(nil_chk(name), 0, valueName);
-          return value;
-        }
-        @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Unexpected end tag in <string>: ", [parser getName]));
-      }
-      else if (eventType == OrgXmlpullV1XmlPullParser_TEXT) {
-        JreStrAppend(&value, "$", [parser getText]);
-      }
-      else if (eventType == OrgXmlpullV1XmlPullParser_START_TAG) {
-        @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Unexpected start tag in <string>: ", [parser getName]));
-      }
-    }
-    @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"Unexpected end of document in <string>");
-  }
-  else if ([tagName isEqual:@"int"]) {
-    res = JavaLangInteger_valueOfWithInt_(JavaLangInteger_parseIntWithNSString_([parser getAttributeValueWithNSString:nil withNSString:@"value"]));
-  }
-  else if ([tagName isEqual:@"long"]) {
-    res = JavaLangLong_valueOfWithNSString_([parser getAttributeValueWithNSString:nil withNSString:@"value"]);
-  }
-  else if ([tagName isEqual:@"float"]) {
-    res = create_JavaLangFloat_initWithNSString_([parser getAttributeValueWithNSString:nil withNSString:@"value"]);
-  }
-  else if ([tagName isEqual:@"double"]) {
-    res = create_JavaLangDouble_initWithNSString_([parser getAttributeValueWithNSString:nil withNSString:@"value"]);
-  }
-  else if ([tagName isEqual:@"boolean"]) {
-    res = JavaLangBoolean_valueOfWithNSString_([parser getAttributeValueWithNSString:nil withNSString:@"value"]);
-  }
-  else if ([tagName isEqual:@"int-array"]) {
-    [parser next];
-    res = AndroidInternalUtilXmlUtils_readThisIntArrayXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(parser, @"int-array", name);
-    IOSObjectArray_Set(nil_chk(name), 0, valueName);
-    return res;
-  }
-  else if ([tagName isEqual:@"map"]) {
-    [parser next];
-    res = AndroidInternalUtilXmlUtils_readThisMapXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(parser, @"map", name);
-    IOSObjectArray_Set(nil_chk(name), 0, valueName);
-    return res;
-  }
-  else if ([tagName isEqual:@"list"]) {
-    [parser next];
-    res = AndroidInternalUtilXmlUtils_readThisListXmlWithOrgXmlpullV1XmlPullParser_withNSString_withNSStringArray_(parser, @"list", name);
-    IOSObjectArray_Set(nil_chk(name), 0, valueName);
-    return res;
-  }
-  else {
-    @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$", @"Unknown tag: ", tagName));
-  }
-  jint eventType;
-  while ((eventType = [parser next]) != OrgXmlpullV1XmlPullParser_END_DOCUMENT) {
-    if (eventType == OrgXmlpullV1XmlPullParser_END_TAG) {
-      if ([((NSString *) nil_chk([parser getName])) isEqual:tagName]) {
-        IOSObjectArray_Set(nil_chk(name), 0, valueName);
-        return res;
-      }
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Unexpected end tag in <", tagName, @">: ", [parser getName]));
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_TEXT) {
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Unexpected text in <", tagName, @">: ", [parser getName]));
-    }
-    else if (eventType == OrgXmlpullV1XmlPullParser_START_TAG) {
-      @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Unexpected start tag in <", tagName, @">: ", [parser getName]));
-    }
-  }
-  @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$C", @"Unexpected end of document in <", tagName, '>'));
-}
-
-void AndroidInternalUtilXmlUtils_beginDocumentWithOrgXmlpullV1XmlPullParser_withNSString_(id<OrgXmlpullV1XmlPullParser> parser, NSString *firstElementName) {
-  AndroidInternalUtilXmlUtils_initialize();
-  jint type;
-  while ((type = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) next]) != OrgXmlpullV1XmlPullParser_START_TAG && type != OrgXmlpullV1XmlPullParser_END_DOCUMENT) {
-    ;
-  }
-  if (type != OrgXmlpullV1XmlPullParser_START_TAG) {
-    @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(@"No start tag found");
-  }
-  if (![((NSString *) nil_chk([parser getName])) isEqual:firstElementName]) {
-    @throw create_OrgXmlpullV1XmlPullParserException_initWithNSString_(JreStrcat("$$$$", @"Unexpected start tag: found ", [parser getName], @", expected ", firstElementName));
-  }
-}
-
-void AndroidInternalUtilXmlUtils_nextElementWithOrgXmlpullV1XmlPullParser_(id<OrgXmlpullV1XmlPullParser> parser) {
-  AndroidInternalUtilXmlUtils_initialize();
-  jint type;
-  while ((type = [((id<OrgXmlpullV1XmlPullParser>) nil_chk(parser)) next]) != OrgXmlpullV1XmlPullParser_START_TAG && type != OrgXmlpullV1XmlPullParser_END_DOCUMENT) {
-    ;
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidInternalUtilXmlUtils)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsBadParcelableException.h b/core/iostest/daggerframework/main/androidbase/AndroidOsBadParcelableException.h
deleted file mode 100644
index baf8c2ec1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsBadParcelableException.h
+++ /dev/null
@@ -1,52 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsBadParcelableException")
-#ifdef RESTRICT_AndroidOsBadParcelableException
-#define INCLUDE_ALL_AndroidOsBadParcelableException 0
-#else
-#define INCLUDE_ALL_AndroidOsBadParcelableException 1
-#endif
-#undef RESTRICT_AndroidOsBadParcelableException
-
-#if !defined (AndroidOsBadParcelableException_) && (INCLUDE_ALL_AndroidOsBadParcelableException || defined(INCLUDE_AndroidOsBadParcelableException))
-#define AndroidOsBadParcelableException_
-
-#define RESTRICT_AndroidUtilAndroidRuntimeException 1
-#define INCLUDE_AndroidUtilAndroidRuntimeException 1
-#include "AndroidUtilAndroidRuntimeException.h"
-
-@class JavaLangException;
-
-@interface AndroidOsBadParcelableException : AndroidUtilAndroidRuntimeException
-
-#pragma mark Public
-
-- (instancetype)initWithJavaLangException:(JavaLangException *)cause;
-
-- (instancetype)initWithNSString:(NSString *)msg;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsBadParcelableException)
-
-FOUNDATION_EXPORT void AndroidOsBadParcelableException_initWithNSString_(AndroidOsBadParcelableException *self, NSString *msg);
-
-FOUNDATION_EXPORT AndroidOsBadParcelableException *new_AndroidOsBadParcelableException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBadParcelableException *create_AndroidOsBadParcelableException_initWithNSString_(NSString *msg);
-
-FOUNDATION_EXPORT void AndroidOsBadParcelableException_initWithJavaLangException_(AndroidOsBadParcelableException *self, JavaLangException *cause);
-
-FOUNDATION_EXPORT AndroidOsBadParcelableException *new_AndroidOsBadParcelableException_initWithJavaLangException_(JavaLangException *cause) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBadParcelableException *create_AndroidOsBadParcelableException_initWithJavaLangException_(JavaLangException *cause);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBadParcelableException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsBadParcelableException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsBadParcelableException.m b/core/iostest/daggerframework/main/androidbase/AndroidOsBadParcelableException.m
deleted file mode 100644
index ee6a9eb48..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsBadParcelableException.m
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsBadParcelableException.h"
-#include "AndroidUtilAndroidRuntimeException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Exception.h"
-
-@implementation AndroidOsBadParcelableException
-
-- (instancetype)initWithNSString:(NSString *)msg {
-  AndroidOsBadParcelableException_initWithNSString_(self, msg);
-  return self;
-}
-
-- (instancetype)initWithJavaLangException:(JavaLangException *)cause {
-  AndroidOsBadParcelableException_initWithJavaLangException_(self, cause);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:);
-  methods[1].selector = @selector(initWithJavaLangException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;", "LJavaLangException;" };
-  static const J2ObjcClassInfo _AndroidOsBadParcelableException = { "BadParcelableException", "android.os", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidOsBadParcelableException;
-}
-
-@end
-
-void AndroidOsBadParcelableException_initWithNSString_(AndroidOsBadParcelableException *self, NSString *msg) {
-  AndroidUtilAndroidRuntimeException_initWithNSString_(self, msg);
-}
-
-AndroidOsBadParcelableException *new_AndroidOsBadParcelableException_initWithNSString_(NSString *msg) {
-  J2OBJC_NEW_IMPL(AndroidOsBadParcelableException, initWithNSString_, msg)
-}
-
-AndroidOsBadParcelableException *create_AndroidOsBadParcelableException_initWithNSString_(NSString *msg) {
-  J2OBJC_CREATE_IMPL(AndroidOsBadParcelableException, initWithNSString_, msg)
-}
-
-void AndroidOsBadParcelableException_initWithJavaLangException_(AndroidOsBadParcelableException *self, JavaLangException *cause) {
-  AndroidUtilAndroidRuntimeException_initWithJavaLangException_(self, cause);
-}
-
-AndroidOsBadParcelableException *new_AndroidOsBadParcelableException_initWithJavaLangException_(JavaLangException *cause) {
-  J2OBJC_NEW_IMPL(AndroidOsBadParcelableException, initWithJavaLangException_, cause)
-}
-
-AndroidOsBadParcelableException *create_AndroidOsBadParcelableException_initWithJavaLangException_(JavaLangException *cause) {
-  J2OBJC_CREATE_IMPL(AndroidOsBadParcelableException, initWithJavaLangException_, cause)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsBadParcelableException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsBuild.h b/core/iostest/daggerframework/main/androidbase/AndroidOsBuild.h
deleted file mode 100644
index 81578c07d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsBuild.h
+++ /dev/null
@@ -1,146 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsBuild")
-#ifdef RESTRICT_AndroidOsBuild
-#define INCLUDE_ALL_AndroidOsBuild 0
-#else
-#define INCLUDE_ALL_AndroidOsBuild 1
-#endif
-#undef RESTRICT_AndroidOsBuild
-
-#if !defined (AndroidOsBuild_) && (INCLUDE_ALL_AndroidOsBuild || defined(INCLUDE_AndroidOsBuild))
-#define AndroidOsBuild_
-
-@interface AndroidOsBuild : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsBuild)
-
-inline NSString *AndroidOsBuild_get_UNKNOWN();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidOsBuild_UNKNOWN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsBuild, UNKNOWN, NSString *)
-
-FOUNDATION_EXPORT void AndroidOsBuild_init(AndroidOsBuild *self);
-
-FOUNDATION_EXPORT AndroidOsBuild *new_AndroidOsBuild_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBuild *create_AndroidOsBuild_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBuild)
-
-#endif
-
-#if !defined (AndroidOsBuild_VERSION_CODES_) && (INCLUDE_ALL_AndroidOsBuild || defined(INCLUDE_AndroidOsBuild_VERSION_CODES))
-#define AndroidOsBuild_VERSION_CODES_
-
-@interface AndroidOsBuild_VERSION_CODES : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsBuild_VERSION_CODES)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_CUR_DEVELOPMENT();
-#define AndroidOsBuild_VERSION_CODES_CUR_DEVELOPMENT 10000
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, CUR_DEVELOPMENT, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_BASE();
-#define AndroidOsBuild_VERSION_CODES_BASE 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, BASE, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_BASE_1_1();
-#define AndroidOsBuild_VERSION_CODES_BASE_1_1 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, BASE_1_1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_CUPCAKE();
-#define AndroidOsBuild_VERSION_CODES_CUPCAKE 3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, CUPCAKE, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_DONUT();
-#define AndroidOsBuild_VERSION_CODES_DONUT 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, DONUT, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_ECLAIR();
-#define AndroidOsBuild_VERSION_CODES_ECLAIR 5
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ECLAIR, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_ECLAIR_0_1();
-#define AndroidOsBuild_VERSION_CODES_ECLAIR_0_1 6
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ECLAIR_0_1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_ECLAIR_MR1();
-#define AndroidOsBuild_VERSION_CODES_ECLAIR_MR1 7
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ECLAIR_MR1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_FROYO();
-#define AndroidOsBuild_VERSION_CODES_FROYO 8
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, FROYO, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_GINGERBREAD();
-#define AndroidOsBuild_VERSION_CODES_GINGERBREAD 9
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, GINGERBREAD, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_GINGERBREAD_MR1();
-#define AndroidOsBuild_VERSION_CODES_GINGERBREAD_MR1 10
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, GINGERBREAD_MR1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_HONEYCOMB();
-#define AndroidOsBuild_VERSION_CODES_HONEYCOMB 11
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, HONEYCOMB, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_HONEYCOMB_MR1();
-#define AndroidOsBuild_VERSION_CODES_HONEYCOMB_MR1 12
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, HONEYCOMB_MR1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_HONEYCOMB_MR2();
-#define AndroidOsBuild_VERSION_CODES_HONEYCOMB_MR2 13
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, HONEYCOMB_MR2, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_ICE_CREAM_SANDWICH();
-#define AndroidOsBuild_VERSION_CODES_ICE_CREAM_SANDWICH 14
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ICE_CREAM_SANDWICH, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_ICE_CREAM_SANDWICH_MR1();
-#define AndroidOsBuild_VERSION_CODES_ICE_CREAM_SANDWICH_MR1 15
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, ICE_CREAM_SANDWICH_MR1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_JELLY_BEAN();
-#define AndroidOsBuild_VERSION_CODES_JELLY_BEAN 16
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, JELLY_BEAN, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_JELLY_BEAN_MR1();
-#define AndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR1 17
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, JELLY_BEAN_MR1, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_JELLY_BEAN_MR2();
-#define AndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR2 18
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, JELLY_BEAN_MR2, jint)
-
-inline jint AndroidOsBuild_VERSION_CODES_get_KITKAT();
-#define AndroidOsBuild_VERSION_CODES_KITKAT 19
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsBuild_VERSION_CODES, KITKAT, jint)
-
-FOUNDATION_EXPORT void AndroidOsBuild_VERSION_CODES_init(AndroidOsBuild_VERSION_CODES *self);
-
-FOUNDATION_EXPORT AndroidOsBuild_VERSION_CODES *new_AndroidOsBuild_VERSION_CODES_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBuild_VERSION_CODES *create_AndroidOsBuild_VERSION_CODES_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBuild_VERSION_CODES)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsBuild")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsBuild.m b/core/iostest/daggerframework/main/androidbase/AndroidOsBuild.m
deleted file mode 100644
index 0e1be0300..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsBuild.m
+++ /dev/null
@@ -1,109 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsBuild.h"
-#include "J2ObjC_source.h"
-
-NSString *AndroidOsBuild_UNKNOWN = @"unknown";
-
-@implementation AndroidOsBuild
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsBuild_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "UNKNOWN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
-  };
-  static const void *ptrTable[] = { &AndroidOsBuild_UNKNOWN, "LAndroidOsBuild_VERSION_CODES;" };
-  static const J2ObjcClassInfo _AndroidOsBuild = { "Build", "android.os", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, 1, -1, -1, -1 };
-  return &_AndroidOsBuild;
-}
-
-@end
-
-void AndroidOsBuild_init(AndroidOsBuild *self) {
-  NSObject_init(self);
-}
-
-AndroidOsBuild *new_AndroidOsBuild_init() {
-  J2OBJC_NEW_IMPL(AndroidOsBuild, init)
-}
-
-AndroidOsBuild *create_AndroidOsBuild_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsBuild, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsBuild)
-
-@implementation AndroidOsBuild_VERSION_CODES
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsBuild_VERSION_CODES_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "CUR_DEVELOPMENT", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_CUR_DEVELOPMENT, 0x19, -1, -1, -1, -1 },
-    { "BASE", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_BASE, 0x19, -1, -1, -1, -1 },
-    { "BASE_1_1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_BASE_1_1, 0x19, -1, -1, -1, -1 },
-    { "CUPCAKE", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_CUPCAKE, 0x19, -1, -1, -1, -1 },
-    { "DONUT", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_DONUT, 0x19, -1, -1, -1, -1 },
-    { "ECLAIR", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_ECLAIR, 0x19, -1, -1, -1, -1 },
-    { "ECLAIR_0_1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_ECLAIR_0_1, 0x19, -1, -1, -1, -1 },
-    { "ECLAIR_MR1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_ECLAIR_MR1, 0x19, -1, -1, -1, -1 },
-    { "FROYO", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_FROYO, 0x19, -1, -1, -1, -1 },
-    { "GINGERBREAD", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_GINGERBREAD, 0x19, -1, -1, -1, -1 },
-    { "GINGERBREAD_MR1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_GINGERBREAD_MR1, 0x19, -1, -1, -1, -1 },
-    { "HONEYCOMB", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_HONEYCOMB, 0x19, -1, -1, -1, -1 },
-    { "HONEYCOMB_MR1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_HONEYCOMB_MR1, 0x19, -1, -1, -1, -1 },
-    { "HONEYCOMB_MR2", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_HONEYCOMB_MR2, 0x19, -1, -1, -1, -1 },
-    { "ICE_CREAM_SANDWICH", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_ICE_CREAM_SANDWICH, 0x19, -1, -1, -1, -1 },
-    { "ICE_CREAM_SANDWICH_MR1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_ICE_CREAM_SANDWICH_MR1, 0x19, -1, -1, -1, -1 },
-    { "JELLY_BEAN", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_JELLY_BEAN, 0x19, -1, -1, -1, -1 },
-    { "JELLY_BEAN_MR1", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR1, 0x19, -1, -1, -1, -1 },
-    { "JELLY_BEAN_MR2", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_JELLY_BEAN_MR2, 0x19, -1, -1, -1, -1 },
-    { "KITKAT", "I", .constantValue.asInt = AndroidOsBuild_VERSION_CODES_KITKAT, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidOsBuild;" };
-  static const J2ObjcClassInfo _AndroidOsBuild_VERSION_CODES = { "VERSION_CODES", "android.os", ptrTable, methods, fields, 7, 0x9, 1, 20, 0, -1, -1, -1, -1 };
-  return &_AndroidOsBuild_VERSION_CODES;
-}
-
-@end
-
-void AndroidOsBuild_VERSION_CODES_init(AndroidOsBuild_VERSION_CODES *self) {
-  NSObject_init(self);
-}
-
-AndroidOsBuild_VERSION_CODES *new_AndroidOsBuild_VERSION_CODES_init() {
-  J2OBJC_NEW_IMPL(AndroidOsBuild_VERSION_CODES, init)
-}
-
-AndroidOsBuild_VERSION_CODES *create_AndroidOsBuild_VERSION_CODES_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsBuild_VERSION_CODES, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsBuild_VERSION_CODES)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsBundle.h b/core/iostest/daggerframework/main/androidbase/AndroidOsBundle.h
deleted file mode 100644
index 730e75d9f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsBundle.h
+++ /dev/null
@@ -1,287 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsBundle")
-#ifdef RESTRICT_AndroidOsBundle
-#define INCLUDE_ALL_AndroidOsBundle 0
-#else
-#define INCLUDE_ALL_AndroidOsBundle 1
-#endif
-#undef RESTRICT_AndroidOsBundle
-
-#if !defined (AndroidOsBundle_) && (INCLUDE_ALL_AndroidOsBundle || defined(INCLUDE_AndroidOsBundle))
-#define AndroidOsBundle_
-
-#define RESTRICT_AndroidOsParcelable 1
-#define INCLUDE_AndroidOsParcelable 1
-#include "AndroidOsParcelable.h"
-
-@class AndroidOsParcel;
-@class IOSBooleanArray;
-@class IOSByteArray;
-@class IOSCharArray;
-@class IOSDoubleArray;
-@class IOSFloatArray;
-@class IOSIntArray;
-@class IOSLongArray;
-@class IOSObjectArray;
-@class IOSShortArray;
-@class JavaLangByte;
-@class JavaLangClassLoader;
-@class JavaUtilArrayList;
-@protocol JavaIoSerializable;
-@protocol JavaLangCharSequence;
-@protocol JavaUtilMap;
-@protocol JavaUtilSet;
-
-@interface AndroidOsBundle : NSObject < AndroidOsParcelable, NSCopying > {
- @public
-  id<JavaUtilMap> mMap_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithAndroidOsBundle:(AndroidOsBundle *)b;
-
-- (instancetype)initWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (instancetype)initWithInt:(jint)capacity;
-
-- (void)clear;
-
-- (id)java_clone;
-
-- (jboolean)containsKeyWithNSString:(NSString *)key;
-
-- (jint)describeContents;
-
-+ (AndroidOsBundle *)forPairWithNSString:(NSString *)key
-                            withNSString:(NSString *)value;
-
-- (id)getWithNSString:(NSString *)key;
-
-- (jboolean)getBooleanWithNSString:(NSString *)key;
-
-- (jboolean)getBooleanWithNSString:(NSString *)key
-                       withBoolean:(jboolean)defaultValue;
-
-- (IOSBooleanArray *)getBooleanArrayWithNSString:(NSString *)key;
-
-- (AndroidOsBundle *)getBundleWithNSString:(NSString *)key;
-
-- (jbyte)getByteWithNSString:(NSString *)key;
-
-- (JavaLangByte *)getByteWithNSString:(NSString *)key
-                             withByte:(jbyte)defaultValue;
-
-- (IOSByteArray *)getByteArrayWithNSString:(NSString *)key;
-
-- (jchar)getCharWithNSString:(NSString *)key;
-
-- (jchar)getCharWithNSString:(NSString *)key
-                    withChar:(jchar)defaultValue;
-
-- (IOSCharArray *)getCharArrayWithNSString:(NSString *)key;
-
-- (id<JavaLangCharSequence>)getCharSequenceWithNSString:(NSString *)key;
-
-- (id<JavaLangCharSequence>)getCharSequenceWithNSString:(NSString *)key
-                               withJavaLangCharSequence:(id<JavaLangCharSequence>)defaultValue;
-
-- (IOSObjectArray *)getCharSequenceArrayWithNSString:(NSString *)key;
-
-- (JavaUtilArrayList *)getCharSequenceArrayListWithNSString:(NSString *)key;
-
-- (JavaLangClassLoader *)getClassLoader;
-
-- (jdouble)getDoubleWithNSString:(NSString *)key;
-
-- (jdouble)getDoubleWithNSString:(NSString *)key
-                      withDouble:(jdouble)defaultValue;
-
-- (IOSDoubleArray *)getDoubleArrayWithNSString:(NSString *)key;
-
-- (jfloat)getFloatWithNSString:(NSString *)key;
-
-- (jfloat)getFloatWithNSString:(NSString *)key
-                     withFloat:(jfloat)defaultValue;
-
-- (IOSFloatArray *)getFloatArrayWithNSString:(NSString *)key;
-
-- (jint)getIntWithNSString:(NSString *)key;
-
-- (jint)getIntWithNSString:(NSString *)key
-                   withInt:(jint)defaultValue;
-
-- (IOSIntArray *)getIntArrayWithNSString:(NSString *)key;
-
-- (JavaUtilArrayList *)getIntegerArrayListWithNSString:(NSString *)key;
-
-- (jlong)getLongWithNSString:(NSString *)key;
-
-- (jlong)getLongWithNSString:(NSString *)key
-                    withLong:(jlong)defaultValue;
-
-- (IOSLongArray *)getLongArrayWithNSString:(NSString *)key;
-
-- (NSString *)getPairValue;
-
-- (id<JavaIoSerializable>)getSerializableWithNSString:(NSString *)key;
-
-- (jshort)getShortWithNSString:(NSString *)key;
-
-- (jshort)getShortWithNSString:(NSString *)key
-                     withShort:(jshort)defaultValue;
-
-- (IOSShortArray *)getShortArrayWithNSString:(NSString *)key;
-
-- (NSString *)getStringWithNSString:(NSString *)key;
-
-- (NSString *)getStringWithNSString:(NSString *)key
-                       withNSString:(NSString *)defaultValue;
-
-- (IOSObjectArray *)getStringArrayWithNSString:(NSString *)key;
-
-- (JavaUtilArrayList *)getStringArrayListWithNSString:(NSString *)key;
-
-- (jboolean)isEmpty;
-
-- (id<JavaUtilSet>)keySet;
-
-- (void)putAllWithAndroidOsBundle:(AndroidOsBundle *)map;
-
-- (void)putBooleanWithNSString:(NSString *)key
-                   withBoolean:(jboolean)value;
-
-- (void)putBooleanArrayWithNSString:(NSString *)key
-                   withBooleanArray:(IOSBooleanArray *)value;
-
-- (void)putBundleWithNSString:(NSString *)key
-          withAndroidOsBundle:(AndroidOsBundle *)value;
-
-- (void)putByteWithNSString:(NSString *)key
-                   withByte:(jbyte)value;
-
-- (void)putByteArrayWithNSString:(NSString *)key
-                   withByteArray:(IOSByteArray *)value;
-
-- (void)putCharWithNSString:(NSString *)key
-                   withChar:(jchar)value;
-
-- (void)putCharArrayWithNSString:(NSString *)key
-                   withCharArray:(IOSCharArray *)value;
-
-- (void)putCharSequenceWithNSString:(NSString *)key
-           withJavaLangCharSequence:(id<JavaLangCharSequence>)value;
-
-- (void)putCharSequenceArrayWithNSString:(NSString *)key
-           withJavaLangCharSequenceArray:(IOSObjectArray *)value;
-
-- (void)putCharSequenceArrayListWithNSString:(NSString *)key
-                       withJavaUtilArrayList:(JavaUtilArrayList *)value;
-
-- (void)putDoubleWithNSString:(NSString *)key
-                   withDouble:(jdouble)value;
-
-- (void)putDoubleArrayWithNSString:(NSString *)key
-                   withDoubleArray:(IOSDoubleArray *)value;
-
-- (void)putFloatWithNSString:(NSString *)key
-                   withFloat:(jfloat)value;
-
-- (void)putFloatArrayWithNSString:(NSString *)key
-                   withFloatArray:(IOSFloatArray *)value;
-
-- (void)putIntWithNSString:(NSString *)key
-                   withInt:(jint)value;
-
-- (void)putIntArrayWithNSString:(NSString *)key
-                   withIntArray:(IOSIntArray *)value;
-
-- (void)putIntegerArrayListWithNSString:(NSString *)key
-                  withJavaUtilArrayList:(JavaUtilArrayList *)value;
-
-- (void)putLongWithNSString:(NSString *)key
-                   withLong:(jlong)value;
-
-- (void)putLongArrayWithNSString:(NSString *)key
-                   withLongArray:(IOSLongArray *)value;
-
-- (void)putSerializableWithNSString:(NSString *)key
-             withJavaIoSerializable:(id<JavaIoSerializable>)value;
-
-- (void)putShortWithNSString:(NSString *)key
-                   withShort:(jshort)value;
-
-- (void)putShortArrayWithNSString:(NSString *)key
-                   withShortArray:(IOSShortArray *)value;
-
-- (void)putStringWithNSString:(NSString *)key
-                 withNSString:(NSString *)value;
-
-- (void)putStringArrayWithNSString:(NSString *)key
-                 withNSStringArray:(IOSObjectArray *)value;
-
-- (void)putStringArrayListWithNSString:(NSString *)key
-                 withJavaUtilArrayList:(JavaUtilArrayList *)value;
-
-- (void)removeWithNSString:(NSString *)key;
-
-- (jboolean)setAllowFdsWithBoolean:(jboolean)allowFds;
-
-- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (jint)size;
-
-- (NSString *)description;
-
-- (void)writeToParcelWithAndroidOsParcel:(AndroidOsParcel *)dest
-                                 withInt:(jint)flags;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsBundle)
-
-J2OBJC_FIELD_SETTER(AndroidOsBundle, mMap_, id<JavaUtilMap>)
-
-inline AndroidOsBundle *AndroidOsBundle_get_EMPTY();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT AndroidOsBundle *AndroidOsBundle_EMPTY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsBundle, EMPTY, AndroidOsBundle *)
-
-FOUNDATION_EXPORT void AndroidOsBundle_init(AndroidOsBundle *self);
-
-FOUNDATION_EXPORT AndroidOsBundle *new_AndroidOsBundle_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBundle *create_AndroidOsBundle_init();
-
-FOUNDATION_EXPORT void AndroidOsBundle_initWithJavaLangClassLoader_(AndroidOsBundle *self, JavaLangClassLoader *loader);
-
-FOUNDATION_EXPORT AndroidOsBundle *new_AndroidOsBundle_initWithJavaLangClassLoader_(JavaLangClassLoader *loader) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBundle *create_AndroidOsBundle_initWithJavaLangClassLoader_(JavaLangClassLoader *loader);
-
-FOUNDATION_EXPORT void AndroidOsBundle_initWithInt_(AndroidOsBundle *self, jint capacity);
-
-FOUNDATION_EXPORT AndroidOsBundle *new_AndroidOsBundle_initWithInt_(jint capacity) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBundle *create_AndroidOsBundle_initWithInt_(jint capacity);
-
-FOUNDATION_EXPORT void AndroidOsBundle_initWithAndroidOsBundle_(AndroidOsBundle *self, AndroidOsBundle *b);
-
-FOUNDATION_EXPORT AndroidOsBundle *new_AndroidOsBundle_initWithAndroidOsBundle_(AndroidOsBundle *b) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsBundle *create_AndroidOsBundle_initWithAndroidOsBundle_(AndroidOsBundle *b);
-
-FOUNDATION_EXPORT AndroidOsBundle *AndroidOsBundle_forPairWithNSString_withNSString_(NSString *key, NSString *value);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsBundle)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsBundle")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsBundle.m b/core/iostest/daggerframework/main/androidbase/AndroidOsBundle.m
deleted file mode 100644
index 032f4836d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsBundle.m
+++ /dev/null
@@ -1,1058 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsBundle.h"
-#include "AndroidOsParcel.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "java/io/Serializable.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Byte.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Character.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/ClassLoader.h"
-#include "java/lang/Double.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/Short.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collection.h"
-#include "java/util/Collections.h"
-#include "java/util/HashMap.h"
-#include "java/util/Iterator.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-
-@interface AndroidOsBundle () {
- @public
-  jboolean mHasFds_;
-  jboolean mFdsKnown_;
-  jboolean mAllowFds_;
-  JavaLangClassLoader *mClassLoader_;
-}
-
-- (void)typeWarningWithNSString:(NSString *)key
-                         withId:(id)value
-                   withNSString:(NSString *)className_
-                         withId:(id)defaultValue
- withJavaLangClassCastException:(JavaLangClassCastException *)e;
-
-- (void)typeWarningWithNSString:(NSString *)key
-                         withId:(id)value
-                   withNSString:(NSString *)className_
- withJavaLangClassCastException:(JavaLangClassCastException *)e;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidOsBundle, mClassLoader_, JavaLangClassLoader *)
-
-inline NSString *AndroidOsBundle_get_LOG_TAG();
-static NSString *AndroidOsBundle_LOG_TAG = @"Bundle";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsBundle, LOG_TAG, NSString *)
-
-__attribute__((unused)) static void AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(AndroidOsBundle *self, NSString *key, id value, NSString *className_, id defaultValue, JavaLangClassCastException *e);
-
-__attribute__((unused)) static void AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(AndroidOsBundle *self, NSString *key, id value, NSString *className_, JavaLangClassCastException *e);
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsBundle)
-
-AndroidOsBundle *AndroidOsBundle_EMPTY;
-
-@implementation AndroidOsBundle
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsBundle_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  AndroidOsBundle_initWithJavaLangClassLoader_(self, loader);
-  return self;
-}
-
-- (instancetype)initWithInt:(jint)capacity {
-  AndroidOsBundle_initWithInt_(self, capacity);
-  return self;
-}
-
-- (instancetype)initWithAndroidOsBundle:(AndroidOsBundle *)b {
-  AndroidOsBundle_initWithAndroidOsBundle_(self, b);
-  return self;
-}
-
-+ (AndroidOsBundle *)forPairWithNSString:(NSString *)key
-                            withNSString:(NSString *)value {
-  return AndroidOsBundle_forPairWithNSString_withNSString_(key, value);
-}
-
-- (NSString *)getPairValue {
-  jint size = [((id<JavaUtilMap>) nil_chk(mMap_)) size];
-  if (size > 1) {
-    AndroidUtilLog_wWithNSString_withNSString_(AndroidOsBundle_LOG_TAG, @"getPairValue() used on Bundle with multiple pairs.");
-  }
-  if (size == 0) {
-    return nil;
-  }
-  id o = [((id<JavaUtilIterator>) nil_chk([((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) nil_chk(mMap_)) values])) iterator])) next];
-  @try {
-    return (NSString *) cast_chk(o, [NSString class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, @"getPairValue()", o, @"String", e);
-    return nil;
-  }
-}
-
-- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  JreStrongAssign(&mClassLoader_, loader);
-}
-
-- (JavaLangClassLoader *)getClassLoader {
-  return mClassLoader_;
-}
-
-- (jboolean)setAllowFdsWithBoolean:(jboolean)allowFds {
-  jboolean orig = mAllowFds_;
-  mAllowFds_ = allowFds;
-  return orig;
-}
-
-- (id)java_clone {
-  return create_AndroidOsBundle_initWithAndroidOsBundle_(self);
-}
-
-- (jint)size {
-  return [((id<JavaUtilMap>) nil_chk(mMap_)) size];
-}
-
-- (jboolean)isEmpty {
-  return [((id<JavaUtilMap>) nil_chk(mMap_)) isEmpty];
-}
-
-- (void)clear {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) clear];
-  mHasFds_ = false;
-  mFdsKnown_ = true;
-}
-
-- (jboolean)containsKeyWithNSString:(NSString *)key {
-  return [((id<JavaUtilMap>) nil_chk(mMap_)) containsKeyWithId:key];
-}
-
-- (id)getWithNSString:(NSString *)key {
-  return [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-}
-
-- (void)removeWithNSString:(NSString *)key {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) removeWithId:key];
-}
-
-- (void)putAllWithAndroidOsBundle:(AndroidOsBundle *)map {
-  [((id<JavaUtilMap>) nil_chk(((AndroidOsBundle *) nil_chk(map))->mMap_)) putAllWithJavaUtilMap:map->mMap_];
-  mHasFds_ |= map->mHasFds_;
-  mFdsKnown_ = (mFdsKnown_ && map->mFdsKnown_);
-}
-
-- (id<JavaUtilSet>)keySet {
-  return [((id<JavaUtilMap>) nil_chk(mMap_)) keySet];
-}
-
-- (void)putBooleanWithNSString:(NSString *)key
-                   withBoolean:(jboolean)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangBoolean_valueOfWithBoolean_(value)];
-}
-
-- (void)putByteWithNSString:(NSString *)key
-                   withByte:(jbyte)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangByte_valueOfWithByte_(value)];
-}
-
-- (void)putCharWithNSString:(NSString *)key
-                   withChar:(jchar)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangCharacter_valueOfWithChar_(value)];
-}
-
-- (void)putShortWithNSString:(NSString *)key
-                   withShort:(jshort)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangShort_valueOfWithShort_(value)];
-}
-
-- (void)putIntWithNSString:(NSString *)key
-                   withInt:(jint)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangInteger_valueOfWithInt_(value)];
-}
-
-- (void)putLongWithNSString:(NSString *)key
-                   withLong:(jlong)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangLong_valueOfWithLong_(value)];
-}
-
-- (void)putFloatWithNSString:(NSString *)key
-                   withFloat:(jfloat)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangFloat_valueOfWithFloat_(value)];
-}
-
-- (void)putDoubleWithNSString:(NSString *)key
-                   withDouble:(jdouble)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:JavaLangDouble_valueOfWithDouble_(value)];
-}
-
-- (void)putStringWithNSString:(NSString *)key
-                 withNSString:(NSString *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putCharSequenceWithNSString:(NSString *)key
-           withJavaLangCharSequence:(id<JavaLangCharSequence>)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putIntegerArrayListWithNSString:(NSString *)key
-                  withJavaUtilArrayList:(JavaUtilArrayList *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putStringArrayListWithNSString:(NSString *)key
-                 withJavaUtilArrayList:(JavaUtilArrayList *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putCharSequenceArrayListWithNSString:(NSString *)key
-                       withJavaUtilArrayList:(JavaUtilArrayList *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putSerializableWithNSString:(NSString *)key
-             withJavaIoSerializable:(id<JavaIoSerializable>)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putBooleanArrayWithNSString:(NSString *)key
-                   withBooleanArray:(IOSBooleanArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putByteArrayWithNSString:(NSString *)key
-                   withByteArray:(IOSByteArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putShortArrayWithNSString:(NSString *)key
-                   withShortArray:(IOSShortArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putCharArrayWithNSString:(NSString *)key
-                   withCharArray:(IOSCharArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putIntArrayWithNSString:(NSString *)key
-                   withIntArray:(IOSIntArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putLongArrayWithNSString:(NSString *)key
-                   withLongArray:(IOSLongArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putFloatArrayWithNSString:(NSString *)key
-                   withFloatArray:(IOSFloatArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putDoubleArrayWithNSString:(NSString *)key
-                   withDoubleArray:(IOSDoubleArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putStringArrayWithNSString:(NSString *)key
-                 withNSStringArray:(IOSObjectArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putCharSequenceArrayWithNSString:(NSString *)key
-           withJavaLangCharSequenceArray:(IOSObjectArray *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (void)putBundleWithNSString:(NSString *)key
-          withAndroidOsBundle:(AndroidOsBundle *)value {
-  [((id<JavaUtilMap>) nil_chk(mMap_)) putWithId:key withId:value];
-}
-
-- (jboolean)getBooleanWithNSString:(NSString *)key {
-  return [self getBooleanWithNSString:key withBoolean:false];
-}
-
-- (void)typeWarningWithNSString:(NSString *)key
-                         withId:(id)value
-                   withNSString:(NSString *)className_
-                         withId:(id)defaultValue
- withJavaLangClassCastException:(JavaLangClassCastException *)e {
-  AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, value, className_, defaultValue, e);
-}
-
-- (void)typeWarningWithNSString:(NSString *)key
-                         withId:(id)value
-                   withNSString:(NSString *)className_
- withJavaLangClassCastException:(JavaLangClassCastException *)e {
-  AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, value, className_, e);
-}
-
-- (jboolean)getBooleanWithNSString:(NSString *)key
-                       withBoolean:(jboolean)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangBoolean *) cast_chk(o, [JavaLangBoolean class]) booleanValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Boolean", JavaLangBoolean_valueOfWithBoolean_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (jbyte)getByteWithNSString:(NSString *)key {
-  return [((JavaLangByte *) nil_chk([self getByteWithNSString:key withByte:(jbyte) 0])) charValue];
-}
-
-- (JavaLangByte *)getByteWithNSString:(NSString *)key
-                             withByte:(jbyte)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return JavaLangByte_valueOfWithByte_(defaultValue);
-  }
-  @try {
-    return (JavaLangByte *) cast_chk(o, [JavaLangByte class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Byte", JavaLangByte_valueOfWithByte_(defaultValue), e);
-    return JavaLangByte_valueOfWithByte_(defaultValue);
-  }
-}
-
-- (jchar)getCharWithNSString:(NSString *)key {
-  return [self getCharWithNSString:key withChar:(jchar) 0];
-}
-
-- (jchar)getCharWithNSString:(NSString *)key
-                    withChar:(jchar)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangCharacter *) cast_chk(o, [JavaLangCharacter class]) charValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Character", JavaLangCharacter_valueOfWithChar_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (jshort)getShortWithNSString:(NSString *)key {
-  return [self getShortWithNSString:key withShort:(jshort) 0];
-}
-
-- (jshort)getShortWithNSString:(NSString *)key
-                     withShort:(jshort)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangShort *) cast_chk(o, [JavaLangShort class]) shortValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Short", JavaLangShort_valueOfWithShort_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (jint)getIntWithNSString:(NSString *)key {
-  return [self getIntWithNSString:key withInt:0];
-}
-
-- (jint)getIntWithNSString:(NSString *)key
-                   withInt:(jint)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangInteger *) cast_chk(o, [JavaLangInteger class]) intValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Integer", JavaLangInteger_valueOfWithInt_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (jlong)getLongWithNSString:(NSString *)key {
-  return [self getLongWithNSString:key withLong:0LL];
-}
-
-- (jlong)getLongWithNSString:(NSString *)key
-                    withLong:(jlong)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangLong *) cast_chk(o, [JavaLangLong class]) longLongValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Long", JavaLangLong_valueOfWithLong_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (jfloat)getFloatWithNSString:(NSString *)key {
-  return [self getFloatWithNSString:key withFloat:0.0f];
-}
-
-- (jfloat)getFloatWithNSString:(NSString *)key
-                     withFloat:(jfloat)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangFloat *) cast_chk(o, [JavaLangFloat class]) floatValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Float", JavaLangFloat_valueOfWithFloat_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (jdouble)getDoubleWithNSString:(NSString *)key {
-  return [self getDoubleWithNSString:key withDouble:0.0];
-}
-
-- (jdouble)getDoubleWithNSString:(NSString *)key
-                      withDouble:(jdouble)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return [(JavaLangDouble *) cast_chk(o, [JavaLangDouble class]) doubleValue];
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, o, @"Double", JavaLangDouble_valueOfWithDouble_(defaultValue), e);
-    return defaultValue;
-  }
-}
-
-- (NSString *)getStringWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (NSString *) cast_chk(o, [NSString class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"String", e);
-    return nil;
-  }
-}
-
-- (NSString *)getStringWithNSString:(NSString *)key
-                       withNSString:(NSString *)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return (NSString *) cast_chk(o, [NSString class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"String", e);
-    return defaultValue;
-  }
-}
-
-- (id<JavaLangCharSequence>)getCharSequenceWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (id<JavaLangCharSequence>) cast_check(o, JavaLangCharSequence_class_());
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"CharSequence", e);
-    return nil;
-  }
-}
-
-- (id<JavaLangCharSequence>)getCharSequenceWithNSString:(NSString *)key
-                               withJavaLangCharSequence:(id<JavaLangCharSequence>)defaultValue {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return defaultValue;
-  }
-  @try {
-    return (id<JavaLangCharSequence>) cast_check(o, JavaLangCharSequence_class_());
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"CharSequence", e);
-    return defaultValue;
-  }
-}
-
-- (AndroidOsBundle *)getBundleWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (AndroidOsBundle *) cast_chk(o, [AndroidOsBundle class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"Bundle", e);
-    return nil;
-  }
-}
-
-- (id<JavaIoSerializable>)getSerializableWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (id<JavaIoSerializable>) cast_check(o, JavaIoSerializable_class_());
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"Serializable", e);
-    return nil;
-  }
-}
-
-- (JavaUtilArrayList *)getIntegerArrayListWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (JavaUtilArrayList *) cast_chk(o, [JavaUtilArrayList class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"ArrayList<Integer>", e);
-    return nil;
-  }
-}
-
-- (JavaUtilArrayList *)getStringArrayListWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (JavaUtilArrayList *) cast_chk(o, [JavaUtilArrayList class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"ArrayList<String>", e);
-    return nil;
-  }
-}
-
-- (JavaUtilArrayList *)getCharSequenceArrayListWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (JavaUtilArrayList *) cast_chk(o, [JavaUtilArrayList class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"ArrayList<CharSequence>", e);
-    return nil;
-  }
-}
-
-- (IOSBooleanArray *)getBooleanArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSBooleanArray *) cast_chk(o, [IOSBooleanArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"byte[]", e);
-    return nil;
-  }
-}
-
-- (IOSByteArray *)getByteArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSByteArray *) cast_chk(o, [IOSByteArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"byte[]", e);
-    return nil;
-  }
-}
-
-- (IOSShortArray *)getShortArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSShortArray *) cast_chk(o, [IOSShortArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"short[]", e);
-    return nil;
-  }
-}
-
-- (IOSCharArray *)getCharArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSCharArray *) cast_chk(o, [IOSCharArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"char[]", e);
-    return nil;
-  }
-}
-
-- (IOSIntArray *)getIntArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSIntArray *) cast_chk(o, [IOSIntArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"int[]", e);
-    return nil;
-  }
-}
-
-- (IOSLongArray *)getLongArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSLongArray *) cast_chk(o, [IOSLongArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"long[]", e);
-    return nil;
-  }
-}
-
-- (IOSFloatArray *)getFloatArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSFloatArray *) cast_chk(o, [IOSFloatArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"float[]", e);
-    return nil;
-  }
-}
-
-- (IOSDoubleArray *)getDoubleArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSDoubleArray *) cast_chk(o, [IOSDoubleArray class]);
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"double[]", e);
-    return nil;
-  }
-}
-
-- (IOSObjectArray *)getStringArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSObjectArray *) cast_check(o, IOSClass_arrayType(NSString_class_(), 1));
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"String[]", e);
-    return nil;
-  }
-}
-
-- (IOSObjectArray *)getCharSequenceArrayWithNSString:(NSString *)key {
-  id o = [((id<JavaUtilMap>) nil_chk(mMap_)) getWithId:key];
-  if (o == nil) {
-    return nil;
-  }
-  @try {
-    return (IOSObjectArray *) cast_check(o, IOSClass_arrayType(JavaLangCharSequence_class_(), 1));
-  }
-  @catch (JavaLangClassCastException *e) {
-    AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(self, key, o, @"CharSequence[]", e);
-    return nil;
-  }
-}
-
-- (NSString *)description {
-  @synchronized(self) {
-    return JreStrcat("$$C", @"Bundle[", [((id<JavaUtilMap>) nil_chk(mMap_)) description], ']');
-  }
-}
-
-- (jint)describeContents {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeToParcelWithAndroidOsParcel:(AndroidOsParcel *)dest
-                                 withInt:(jint)flags {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)dealloc {
-  RELEASE_(mMap_);
-  RELEASE_(mClassLoader_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x9, 3, 4, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 0, -1, -1, -1, -1 },
-    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 8, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 11, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 13, 2, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 14, -1, -1 },
-    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 19, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 23, 24, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 29, 30, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 31, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 32, 33, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 34, 35, -1, 36, -1, -1 },
-    { NULL, "V", 0x1, 37, 35, -1, 38, -1, -1 },
-    { NULL, "V", 0x1, 39, 35, -1, 40, -1, -1 },
-    { NULL, "V", 0x1, 41, 42, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 43, 44, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 45, 46, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 47, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 49, 50, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 51, 52, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 53, 54, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 55, 56, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 57, 58, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 59, 60, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 61, 62, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 63, 64, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 65, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 66, 67, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 66, 68, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 65, 16, -1, -1, -1, -1 },
-    { NULL, "B", 0x1, 69, 10, -1, -1, -1, -1 },
-    { NULL, "LJavaLangByte;", 0x1, 69, 18, -1, -1, -1, -1 },
-    { NULL, "C", 0x1, 70, 10, -1, -1, -1, -1 },
-    { NULL, "C", 0x1, 70, 20, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 71, 10, -1, -1, -1, -1 },
-    { NULL, "S", 0x1, 71, 22, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 72, 10, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 72, 24, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 73, 10, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 73, 26, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 74, 10, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, 74, 28, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 75, 10, -1, -1, -1, -1 },
-    { NULL, "D", 0x1, 75, 30, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 76, 10, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 76, 4, -1, -1, -1, -1 },
-    { NULL, "LJavaLangCharSequence;", 0x1, 77, 10, -1, -1, -1, -1 },
-    { NULL, "LJavaLangCharSequence;", 0x1, 77, 33, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, 78, 10, -1, -1, -1, -1 },
-    { NULL, "LJavaIoSerializable;", 0x1, 79, 10, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x1, 80, 10, -1, 81, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x1, 82, 10, -1, 83, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x1, 84, 10, -1, 85, -1, -1 },
-    { NULL, "[Z", 0x1, 86, 10, -1, -1, -1, -1 },
-    { NULL, "[B", 0x1, 87, 10, -1, -1, -1, -1 },
-    { NULL, "[S", 0x1, 88, 10, -1, -1, -1, -1 },
-    { NULL, "[C", 0x1, 89, 10, -1, -1, -1, -1 },
-    { NULL, "[I", 0x1, 90, 10, -1, -1, -1, -1 },
-    { NULL, "[J", 0x1, 91, 10, -1, -1, -1, -1 },
-    { NULL, "[F", 0x1, 92, 10, -1, -1, -1, -1 },
-    { NULL, "[D", 0x1, 93, 10, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, 94, 10, -1, -1, -1, -1 },
-    { NULL, "[LJavaLangCharSequence;", 0x1, 95, 10, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x21, 96, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 97, 98, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithJavaLangClassLoader:);
-  methods[2].selector = @selector(initWithInt:);
-  methods[3].selector = @selector(initWithAndroidOsBundle:);
-  methods[4].selector = @selector(forPairWithNSString:withNSString:);
-  methods[5].selector = @selector(getPairValue);
-  methods[6].selector = @selector(setClassLoaderWithJavaLangClassLoader:);
-  methods[7].selector = @selector(getClassLoader);
-  methods[8].selector = @selector(setAllowFdsWithBoolean:);
-  methods[9].selector = @selector(java_clone);
-  methods[10].selector = @selector(size);
-  methods[11].selector = @selector(isEmpty);
-  methods[12].selector = @selector(clear);
-  methods[13].selector = @selector(containsKeyWithNSString:);
-  methods[14].selector = @selector(getWithNSString:);
-  methods[15].selector = @selector(removeWithNSString:);
-  methods[16].selector = @selector(putAllWithAndroidOsBundle:);
-  methods[17].selector = @selector(keySet);
-  methods[18].selector = @selector(putBooleanWithNSString:withBoolean:);
-  methods[19].selector = @selector(putByteWithNSString:withByte:);
-  methods[20].selector = @selector(putCharWithNSString:withChar:);
-  methods[21].selector = @selector(putShortWithNSString:withShort:);
-  methods[22].selector = @selector(putIntWithNSString:withInt:);
-  methods[23].selector = @selector(putLongWithNSString:withLong:);
-  methods[24].selector = @selector(putFloatWithNSString:withFloat:);
-  methods[25].selector = @selector(putDoubleWithNSString:withDouble:);
-  methods[26].selector = @selector(putStringWithNSString:withNSString:);
-  methods[27].selector = @selector(putCharSequenceWithNSString:withJavaLangCharSequence:);
-  methods[28].selector = @selector(putIntegerArrayListWithNSString:withJavaUtilArrayList:);
-  methods[29].selector = @selector(putStringArrayListWithNSString:withJavaUtilArrayList:);
-  methods[30].selector = @selector(putCharSequenceArrayListWithNSString:withJavaUtilArrayList:);
-  methods[31].selector = @selector(putSerializableWithNSString:withJavaIoSerializable:);
-  methods[32].selector = @selector(putBooleanArrayWithNSString:withBooleanArray:);
-  methods[33].selector = @selector(putByteArrayWithNSString:withByteArray:);
-  methods[34].selector = @selector(putShortArrayWithNSString:withShortArray:);
-  methods[35].selector = @selector(putCharArrayWithNSString:withCharArray:);
-  methods[36].selector = @selector(putIntArrayWithNSString:withIntArray:);
-  methods[37].selector = @selector(putLongArrayWithNSString:withLongArray:);
-  methods[38].selector = @selector(putFloatArrayWithNSString:withFloatArray:);
-  methods[39].selector = @selector(putDoubleArrayWithNSString:withDoubleArray:);
-  methods[40].selector = @selector(putStringArrayWithNSString:withNSStringArray:);
-  methods[41].selector = @selector(putCharSequenceArrayWithNSString:withJavaLangCharSequenceArray:);
-  methods[42].selector = @selector(putBundleWithNSString:withAndroidOsBundle:);
-  methods[43].selector = @selector(getBooleanWithNSString:);
-  methods[44].selector = @selector(typeWarningWithNSString:withId:withNSString:withId:withJavaLangClassCastException:);
-  methods[45].selector = @selector(typeWarningWithNSString:withId:withNSString:withJavaLangClassCastException:);
-  methods[46].selector = @selector(getBooleanWithNSString:withBoolean:);
-  methods[47].selector = @selector(getByteWithNSString:);
-  methods[48].selector = @selector(getByteWithNSString:withByte:);
-  methods[49].selector = @selector(getCharWithNSString:);
-  methods[50].selector = @selector(getCharWithNSString:withChar:);
-  methods[51].selector = @selector(getShortWithNSString:);
-  methods[52].selector = @selector(getShortWithNSString:withShort:);
-  methods[53].selector = @selector(getIntWithNSString:);
-  methods[54].selector = @selector(getIntWithNSString:withInt:);
-  methods[55].selector = @selector(getLongWithNSString:);
-  methods[56].selector = @selector(getLongWithNSString:withLong:);
-  methods[57].selector = @selector(getFloatWithNSString:);
-  methods[58].selector = @selector(getFloatWithNSString:withFloat:);
-  methods[59].selector = @selector(getDoubleWithNSString:);
-  methods[60].selector = @selector(getDoubleWithNSString:withDouble:);
-  methods[61].selector = @selector(getStringWithNSString:);
-  methods[62].selector = @selector(getStringWithNSString:withNSString:);
-  methods[63].selector = @selector(getCharSequenceWithNSString:);
-  methods[64].selector = @selector(getCharSequenceWithNSString:withJavaLangCharSequence:);
-  methods[65].selector = @selector(getBundleWithNSString:);
-  methods[66].selector = @selector(getSerializableWithNSString:);
-  methods[67].selector = @selector(getIntegerArrayListWithNSString:);
-  methods[68].selector = @selector(getStringArrayListWithNSString:);
-  methods[69].selector = @selector(getCharSequenceArrayListWithNSString:);
-  methods[70].selector = @selector(getBooleanArrayWithNSString:);
-  methods[71].selector = @selector(getByteArrayWithNSString:);
-  methods[72].selector = @selector(getShortArrayWithNSString:);
-  methods[73].selector = @selector(getCharArrayWithNSString:);
-  methods[74].selector = @selector(getIntArrayWithNSString:);
-  methods[75].selector = @selector(getLongArrayWithNSString:);
-  methods[76].selector = @selector(getFloatArrayWithNSString:);
-  methods[77].selector = @selector(getDoubleArrayWithNSString:);
-  methods[78].selector = @selector(getStringArrayWithNSString:);
-  methods[79].selector = @selector(getCharSequenceArrayWithNSString:);
-  methods[80].selector = @selector(description);
-  methods[81].selector = @selector(describeContents);
-  methods[82].selector = @selector(writeToParcelWithAndroidOsParcel:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "LOG_TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 99, -1, -1 },
-    { "EMPTY", "LAndroidOsBundle;", .constantValue.asLong = 0, 0x19, -1, 100, -1, -1 },
-    { "mMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 101, -1 },
-    { "mHasFds_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mFdsKnown_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mAllowFds_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mClassLoader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaLangClassLoader;", "I", "LAndroidOsBundle;", "forPair", "LNSString;LNSString;", "setClassLoader", "setAllowFds", "Z", "clone", "containsKey", "LNSString;", "get", "remove", "putAll", "()Ljava/util/Set<Ljava/lang/String;>;", "putBoolean", "LNSString;Z", "putByte", "LNSString;B", "putChar", "LNSString;C", "putShort", "LNSString;S", "putInt", "LNSString;I", "putLong", "LNSString;J", "putFloat", "LNSString;F", "putDouble", "LNSString;D", "putString", "putCharSequence", "LNSString;LJavaLangCharSequence;", "putIntegerArrayList", "LNSString;LJavaUtilArrayList;", "(Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/Integer;>;)V", "putStringArrayList", "(Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)V", "putCharSequenceArrayList", "(Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/CharSequence;>;)V", "putSerializable", "LNSString;LJavaIoSerializable;", "putBooleanArray", "LNSString;[Z", "putByteArray", "LNSString;[B", "putShortArray", "LNSString;[S", "putCharArray", "LNSString;[C", "putIntArray", "LNSString;[I", "putLongArray", "LNSString;[J", "putFloatArray", "LNSString;[F", "putDoubleArray", "LNSString;[D", "putStringArray", "LNSString;[LNSString;", "putCharSequenceArray", "LNSString;[LJavaLangCharSequence;", "putBundle", "LNSString;LAndroidOsBundle;", "getBoolean", "typeWarning", "LNSString;LNSObject;LNSString;LNSObject;LJavaLangClassCastException;", "LNSString;LNSObject;LNSString;LJavaLangClassCastException;", "getByte", "getChar", "getShort", "getInt", "getLong", "getFloat", "getDouble", "getString", "getCharSequence", "getBundle", "getSerializable", "getIntegerArrayList", "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/lang/Integer;>;", "getStringArrayList", "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/lang/String;>;", "getCharSequenceArrayList", "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/lang/CharSequence;>;", "getBooleanArray", "getByteArray", "getShortArray", "getCharArray", "getIntArray", "getLongArray", "getFloatArray", "getDoubleArray", "getStringArray", "getCharSequenceArray", "toString", "writeToParcel", "LAndroidOsParcel;I", &AndroidOsBundle_LOG_TAG, &AndroidOsBundle_EMPTY, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _AndroidOsBundle = { "Bundle", "android.os", ptrTable, methods, fields, 7, 0x11, 83, 7, -1, -1, -1, -1, -1 };
-  return &_AndroidOsBundle;
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return [[self java_clone] retain];
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsBundle class]) {
-    {
-      JreStrongAssignAndConsume(&AndroidOsBundle_EMPTY, new_AndroidOsBundle_init());
-      JreStrongAssign(&AndroidOsBundle_EMPTY->mMap_, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(create_JavaUtilHashMap_init()));
-    }
-    J2OBJC_SET_INITIALIZED(AndroidOsBundle)
-  }
-}
-
-@end
-
-void AndroidOsBundle_init(AndroidOsBundle *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mMap_, nil);
-  self->mHasFds_ = false;
-  self->mFdsKnown_ = true;
-  self->mAllowFds_ = true;
-  JreStrongAssignAndConsume(&self->mMap_, new_JavaUtilHashMap_init());
-  JreStrongAssign(&self->mClassLoader_, [[self java_getClass] getClassLoader]);
-}
-
-AndroidOsBundle *new_AndroidOsBundle_init() {
-  J2OBJC_NEW_IMPL(AndroidOsBundle, init)
-}
-
-AndroidOsBundle *create_AndroidOsBundle_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsBundle, init)
-}
-
-void AndroidOsBundle_initWithJavaLangClassLoader_(AndroidOsBundle *self, JavaLangClassLoader *loader) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mMap_, nil);
-  self->mHasFds_ = false;
-  self->mFdsKnown_ = true;
-  self->mAllowFds_ = true;
-  JreStrongAssignAndConsume(&self->mMap_, new_JavaUtilHashMap_init());
-  JreStrongAssign(&self->mClassLoader_, loader);
-}
-
-AndroidOsBundle *new_AndroidOsBundle_initWithJavaLangClassLoader_(JavaLangClassLoader *loader) {
-  J2OBJC_NEW_IMPL(AndroidOsBundle, initWithJavaLangClassLoader_, loader)
-}
-
-AndroidOsBundle *create_AndroidOsBundle_initWithJavaLangClassLoader_(JavaLangClassLoader *loader) {
-  J2OBJC_CREATE_IMPL(AndroidOsBundle, initWithJavaLangClassLoader_, loader)
-}
-
-void AndroidOsBundle_initWithInt_(AndroidOsBundle *self, jint capacity) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mMap_, nil);
-  self->mHasFds_ = false;
-  self->mFdsKnown_ = true;
-  self->mAllowFds_ = true;
-  JreStrongAssignAndConsume(&self->mMap_, new_JavaUtilHashMap_initWithInt_(capacity));
-  JreStrongAssign(&self->mClassLoader_, [[self java_getClass] getClassLoader]);
-}
-
-AndroidOsBundle *new_AndroidOsBundle_initWithInt_(jint capacity) {
-  J2OBJC_NEW_IMPL(AndroidOsBundle, initWithInt_, capacity)
-}
-
-AndroidOsBundle *create_AndroidOsBundle_initWithInt_(jint capacity) {
-  J2OBJC_CREATE_IMPL(AndroidOsBundle, initWithInt_, capacity)
-}
-
-void AndroidOsBundle_initWithAndroidOsBundle_(AndroidOsBundle *self, AndroidOsBundle *b) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mMap_, nil);
-  self->mHasFds_ = false;
-  self->mFdsKnown_ = true;
-  self->mAllowFds_ = true;
-  if (((AndroidOsBundle *) nil_chk(b))->mMap_ != nil) {
-    JreStrongAssignAndConsume(&self->mMap_, new_JavaUtilHashMap_initWithJavaUtilMap_(b->mMap_));
-  }
-  else {
-    JreStrongAssign(&self->mMap_, nil);
-  }
-  self->mHasFds_ = b->mHasFds_;
-  self->mFdsKnown_ = b->mFdsKnown_;
-  JreStrongAssign(&self->mClassLoader_, b->mClassLoader_);
-}
-
-AndroidOsBundle *new_AndroidOsBundle_initWithAndroidOsBundle_(AndroidOsBundle *b) {
-  J2OBJC_NEW_IMPL(AndroidOsBundle, initWithAndroidOsBundle_, b)
-}
-
-AndroidOsBundle *create_AndroidOsBundle_initWithAndroidOsBundle_(AndroidOsBundle *b) {
-  J2OBJC_CREATE_IMPL(AndroidOsBundle, initWithAndroidOsBundle_, b)
-}
-
-AndroidOsBundle *AndroidOsBundle_forPairWithNSString_withNSString_(NSString *key, NSString *value) {
-  AndroidOsBundle_initialize();
-  AndroidOsBundle *b = create_AndroidOsBundle_initWithInt_(1);
-  [b putStringWithNSString:key withNSString:value];
-  return b;
-}
-
-void AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(AndroidOsBundle *self, NSString *key, id value, NSString *className_, id defaultValue, JavaLangClassCastException *e) {
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
-  [sb appendWithNSString:@"Key "];
-  [sb appendWithNSString:key];
-  [sb appendWithNSString:@" expected "];
-  [sb appendWithNSString:className_];
-  [sb appendWithNSString:@" but value was a "];
-  [sb appendWithNSString:[[nil_chk(value) java_getClass] getName]];
-  [sb appendWithNSString:@".  The default value "];
-  [sb appendWithId:defaultValue];
-  [sb appendWithNSString:@" was returned."];
-  AndroidUtilLog_wWithNSString_withNSString_(AndroidOsBundle_LOG_TAG, [sb description]);
-  AndroidUtilLog_wWithNSString_withNSString_withNSException_(AndroidOsBundle_LOG_TAG, @"Attempt to cast generated internal exception:", e);
-}
-
-void AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withJavaLangClassCastException_(AndroidOsBundle *self, NSString *key, id value, NSString *className_, JavaLangClassCastException *e) {
-  AndroidOsBundle_typeWarningWithNSString_withId_withNSString_withId_withJavaLangClassCastException_(self, key, value, className_, @"<null>", e);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsBundle)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsFileUtils.h b/core/iostest/daggerframework/main/androidbase/AndroidOsFileUtils.h
deleted file mode 100644
index 228483feb..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsFileUtils.h
+++ /dev/null
@@ -1,165 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsFileUtils")
-#ifdef RESTRICT_AndroidOsFileUtils
-#define INCLUDE_ALL_AndroidOsFileUtils 0
-#else
-#define INCLUDE_ALL_AndroidOsFileUtils 1
-#endif
-#undef RESTRICT_AndroidOsFileUtils
-
-#if !defined (AndroidOsFileUtils_) && (INCLUDE_ALL_AndroidOsFileUtils || defined(INCLUDE_AndroidOsFileUtils))
-#define AndroidOsFileUtils_
-
-@class AndroidOsFileUtils_FileStatus;
-@class JavaIoFile;
-@class JavaIoFileOutputStream;
-@class JavaIoInputStream;
-
-@interface AndroidOsFileUtils : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (jboolean)copyFileWithJavaIoFile:(JavaIoFile *)srcFile
-                    withJavaIoFile:(JavaIoFile *)destFile OBJC_METHOD_FAMILY_NONE;
-
-+ (jboolean)copyToFileWithJavaIoInputStream:(JavaIoInputStream *)inputStream
-                             withJavaIoFile:(JavaIoFile *)destFile OBJC_METHOD_FAMILY_NONE;
-
-+ (jboolean)getFileStatusWithNSString:(NSString *)path
-    withAndroidOsFileUtils_FileStatus:(AndroidOsFileUtils_FileStatus *)status;
-
-+ (jboolean)isFilenameSafeWithJavaIoFile:(JavaIoFile *)file;
-
-+ (NSString *)readTextFileWithJavaIoFile:(JavaIoFile *)file
-                                 withInt:(jint)max
-                            withNSString:(NSString *)ellipsis;
-
-+ (jint)setPermissionsWithNSString:(NSString *)file
-                           withInt:(jint)mode
-                           withInt:(jint)uid
-                           withInt:(jint)gid;
-
-+ (jboolean)syncWithJavaIoFileOutputStream:(JavaIoFileOutputStream *)stream;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsFileUtils)
-
-inline jint AndroidOsFileUtils_get_S_IRWXU();
-#define AndroidOsFileUtils_S_IRWXU 448
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IRWXU, jint)
-
-inline jint AndroidOsFileUtils_get_S_IRUSR();
-#define AndroidOsFileUtils_S_IRUSR 256
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IRUSR, jint)
-
-inline jint AndroidOsFileUtils_get_S_IWUSR();
-#define AndroidOsFileUtils_S_IWUSR 128
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IWUSR, jint)
-
-inline jint AndroidOsFileUtils_get_S_IXUSR();
-#define AndroidOsFileUtils_S_IXUSR 64
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IXUSR, jint)
-
-inline jint AndroidOsFileUtils_get_S_IRWXG();
-#define AndroidOsFileUtils_S_IRWXG 56
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IRWXG, jint)
-
-inline jint AndroidOsFileUtils_get_S_IRGRP();
-#define AndroidOsFileUtils_S_IRGRP 32
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IRGRP, jint)
-
-inline jint AndroidOsFileUtils_get_S_IWGRP();
-#define AndroidOsFileUtils_S_IWGRP 16
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IWGRP, jint)
-
-inline jint AndroidOsFileUtils_get_S_IXGRP();
-#define AndroidOsFileUtils_S_IXGRP 8
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IXGRP, jint)
-
-inline jint AndroidOsFileUtils_get_S_IRWXO();
-#define AndroidOsFileUtils_S_IRWXO 7
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IRWXO, jint)
-
-inline jint AndroidOsFileUtils_get_S_IROTH();
-#define AndroidOsFileUtils_S_IROTH 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IROTH, jint)
-
-inline jint AndroidOsFileUtils_get_S_IWOTH();
-#define AndroidOsFileUtils_S_IWOTH 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IWOTH, jint)
-
-inline jint AndroidOsFileUtils_get_S_IXOTH();
-#define AndroidOsFileUtils_S_IXOTH 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsFileUtils, S_IXOTH, jint)
-
-FOUNDATION_EXPORT void AndroidOsFileUtils_init(AndroidOsFileUtils *self);
-
-FOUNDATION_EXPORT AndroidOsFileUtils *new_AndroidOsFileUtils_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsFileUtils *create_AndroidOsFileUtils_init();
-
-FOUNDATION_EXPORT jboolean AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_(NSString *path, AndroidOsFileUtils_FileStatus *status);
-
-FOUNDATION_EXPORT jint AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_(NSString *file, jint mode, jint uid, jint gid);
-
-FOUNDATION_EXPORT jboolean AndroidOsFileUtils_syncWithJavaIoFileOutputStream_(JavaIoFileOutputStream *stream);
-
-FOUNDATION_EXPORT jboolean AndroidOsFileUtils_copyFileWithJavaIoFile_withJavaIoFile_(JavaIoFile *srcFile, JavaIoFile *destFile);
-
-FOUNDATION_EXPORT jboolean AndroidOsFileUtils_copyToFileWithJavaIoInputStream_withJavaIoFile_(JavaIoInputStream *inputStream, JavaIoFile *destFile);
-
-FOUNDATION_EXPORT jboolean AndroidOsFileUtils_isFilenameSafeWithJavaIoFile_(JavaIoFile *file);
-
-FOUNDATION_EXPORT NSString *AndroidOsFileUtils_readTextFileWithJavaIoFile_withInt_withNSString_(JavaIoFile *file, jint max, NSString *ellipsis);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsFileUtils)
-
-#endif
-
-#if !defined (AndroidOsFileUtils_FileStatus_) && (INCLUDE_ALL_AndroidOsFileUtils || defined(INCLUDE_AndroidOsFileUtils_FileStatus))
-#define AndroidOsFileUtils_FileStatus_
-
-@interface AndroidOsFileUtils_FileStatus : NSObject {
- @public
-  jint dev_;
-  jint ino_;
-  jint mode_;
-  jint nlink_;
-  jint uid_;
-  jint gid_;
-  jint rdev_;
-  jlong size_;
-  jint blksize_;
-  jlong blocks_;
-  jlong atime_;
-  jlong mtime_;
-  jlong ctime_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsFileUtils_FileStatus)
-
-FOUNDATION_EXPORT void AndroidOsFileUtils_FileStatus_init(AndroidOsFileUtils_FileStatus *self);
-
-FOUNDATION_EXPORT AndroidOsFileUtils_FileStatus *new_AndroidOsFileUtils_FileStatus_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsFileUtils_FileStatus *create_AndroidOsFileUtils_FileStatus_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsFileUtils_FileStatus)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsFileUtils")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsFileUtils.m b/core/iostest/daggerframework/main/androidbase/AndroidOsFileUtils.m
deleted file mode 100644
index 53ee1f42e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsFileUtils.m
+++ /dev/null
@@ -1,368 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsFileUtils.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/ByteArrayOutputStream.h"
-#include "java/io/File.h"
-#include "java/io/FileDescriptor.h"
-#include "java/io/FileInputStream.h"
-#include "java/io/FileOutputStream.h"
-#include "java/io/IOException.h"
-#include "java/io/InputStream.h"
-#include "java/lang/System.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-
-#include <sys/stat.h>
-
-inline JavaUtilRegexPattern *AndroidOsFileUtils_get_SAFE_FILENAME_PATTERN();
-static JavaUtilRegexPattern *AndroidOsFileUtils_SAFE_FILENAME_PATTERN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsFileUtils, SAFE_FILENAME_PATTERN, JavaUtilRegexPattern *)
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsFileUtils)
-
-@implementation AndroidOsFileUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsFileUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jboolean)getFileStatusWithNSString:(NSString *)path
-    withAndroidOsFileUtils_FileStatus:(AndroidOsFileUtils_FileStatus *)status {
-  return AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_(path, status);
-}
-
-+ (jint)setPermissionsWithNSString:(NSString *)file
-                           withInt:(jint)mode
-                           withInt:(jint)uid
-                           withInt:(jint)gid {
-  return AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_(file, mode, uid, gid);
-}
-
-+ (jboolean)syncWithJavaIoFileOutputStream:(JavaIoFileOutputStream *)stream {
-  return AndroidOsFileUtils_syncWithJavaIoFileOutputStream_(stream);
-}
-
-+ (jboolean)copyFileWithJavaIoFile:(JavaIoFile *)srcFile
-                    withJavaIoFile:(JavaIoFile *)destFile {
-  return AndroidOsFileUtils_copyFileWithJavaIoFile_withJavaIoFile_(srcFile, destFile);
-}
-
-+ (jboolean)copyToFileWithJavaIoInputStream:(JavaIoInputStream *)inputStream
-                             withJavaIoFile:(JavaIoFile *)destFile {
-  return AndroidOsFileUtils_copyToFileWithJavaIoInputStream_withJavaIoFile_(inputStream, destFile);
-}
-
-+ (jboolean)isFilenameSafeWithJavaIoFile:(JavaIoFile *)file {
-  return AndroidOsFileUtils_isFilenameSafeWithJavaIoFile_(file);
-}
-
-+ (NSString *)readTextFileWithJavaIoFile:(JavaIoFile *)file
-                                 withInt:(jint)max
-                            withNSString:(NSString *)ellipsis {
-  return AndroidOsFileUtils_readTextFileWithJavaIoFile_withInt_withNSString_(file, max, ellipsis);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x109, 0, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0x109, 2, 3, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 4, 5, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 6, 7, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 8, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 10, 11, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 12, 13, 14, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getFileStatusWithNSString:withAndroidOsFileUtils_FileStatus:);
-  methods[2].selector = @selector(setPermissionsWithNSString:withInt:withInt:withInt:);
-  methods[3].selector = @selector(syncWithJavaIoFileOutputStream:);
-  methods[4].selector = @selector(copyFileWithJavaIoFile:withJavaIoFile:);
-  methods[5].selector = @selector(copyToFileWithJavaIoInputStream:withJavaIoFile:);
-  methods[6].selector = @selector(isFilenameSafeWithJavaIoFile:);
-  methods[7].selector = @selector(readTextFileWithJavaIoFile:withInt:withNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "S_IRWXU", "I", .constantValue.asInt = AndroidOsFileUtils_S_IRWXU, 0x19, -1, -1, -1, -1 },
-    { "S_IRUSR", "I", .constantValue.asInt = AndroidOsFileUtils_S_IRUSR, 0x19, -1, -1, -1, -1 },
-    { "S_IWUSR", "I", .constantValue.asInt = AndroidOsFileUtils_S_IWUSR, 0x19, -1, -1, -1, -1 },
-    { "S_IXUSR", "I", .constantValue.asInt = AndroidOsFileUtils_S_IXUSR, 0x19, -1, -1, -1, -1 },
-    { "S_IRWXG", "I", .constantValue.asInt = AndroidOsFileUtils_S_IRWXG, 0x19, -1, -1, -1, -1 },
-    { "S_IRGRP", "I", .constantValue.asInt = AndroidOsFileUtils_S_IRGRP, 0x19, -1, -1, -1, -1 },
-    { "S_IWGRP", "I", .constantValue.asInt = AndroidOsFileUtils_S_IWGRP, 0x19, -1, -1, -1, -1 },
-    { "S_IXGRP", "I", .constantValue.asInt = AndroidOsFileUtils_S_IXGRP, 0x19, -1, -1, -1, -1 },
-    { "S_IRWXO", "I", .constantValue.asInt = AndroidOsFileUtils_S_IRWXO, 0x19, -1, -1, -1, -1 },
-    { "S_IROTH", "I", .constantValue.asInt = AndroidOsFileUtils_S_IROTH, 0x19, -1, -1, -1, -1 },
-    { "S_IWOTH", "I", .constantValue.asInt = AndroidOsFileUtils_S_IWOTH, 0x19, -1, -1, -1, -1 },
-    { "S_IXOTH", "I", .constantValue.asInt = AndroidOsFileUtils_S_IXOTH, 0x19, -1, -1, -1, -1 },
-    { "SAFE_FILENAME_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
-  };
-  static const void *ptrTable[] = { "getFileStatus", "LNSString;LAndroidOsFileUtils_FileStatus;", "setPermissions", "LNSString;III", "sync", "LJavaIoFileOutputStream;", "copyFile", "LJavaIoFile;LJavaIoFile;", "copyToFile", "LJavaIoInputStream;LJavaIoFile;", "isFilenameSafe", "LJavaIoFile;", "readTextFile", "LJavaIoFile;ILNSString;", "LJavaIoIOException;", &AndroidOsFileUtils_SAFE_FILENAME_PATTERN, "LAndroidOsFileUtils_FileStatus;" };
-  static const J2ObjcClassInfo _AndroidOsFileUtils = { "FileUtils", "android.os", ptrTable, methods, fields, 7, 0x1, 8, 13, -1, 16, -1, -1, -1 };
-  return &_AndroidOsFileUtils;
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsFileUtils class]) {
-    JreStrongAssign(&AndroidOsFileUtils_SAFE_FILENAME_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"[\\w%+,./=_-]+"));
-    J2OBJC_SET_INITIALIZED(AndroidOsFileUtils)
-  }
-}
-
-@end
-
-void AndroidOsFileUtils_init(AndroidOsFileUtils *self) {
-  NSObject_init(self);
-}
-
-AndroidOsFileUtils *new_AndroidOsFileUtils_init() {
-  J2OBJC_NEW_IMPL(AndroidOsFileUtils, init)
-}
-
-AndroidOsFileUtils *create_AndroidOsFileUtils_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsFileUtils, init)
-}
-
-jboolean AndroidOsFileUtils_getFileStatusWithNSString_withAndroidOsFileUtils_FileStatus_(NSString *path, AndroidOsFileUtils_FileStatus *status) {
-  AndroidOsFileUtils_initialize();
-  //    const char* pathStr = env->GetStringUTFChars(path, NULL);
-  jboolean ret = false;
-  
-  struct stat s;
-  int res = stat([path cStringUsingEncoding: NSASCIIStringEncoding], &s);
-  if (res == 0) {
-    ret = true;
-    if (status != NULL) {
-      
-      status->dev_ = s.st_dev;
-      status->ino_ = s.st_ino;
-      status->mode_ = s.st_mode;
-      status->nlink_ = s.st_nlink;
-      status->uid_ = s.st_uid;
-      status->gid_ = s.st_gid;
-      status->size_ = s.st_size;
-      status->blksize_ = s.st_blksize;
-      status->blocks_ = s.st_blocks;
-      
-      status->atime_ = s.st_atime;
-      status->mtime_ = s.st_mtime;
-      status->ctime_ = s.st_ctime;
-      
-      //            env->SetIntField(fileStatus, gFileStatusDevFieldID, s.st_dev);
-      //            env->SetIntField(fileStatus, gFileStatusInoFieldID, s.st_ino);
-      //            env->SetIntField(fileStatus, gFileStatusModeFieldID, s.st_mode);
-      //            env->SetIntField(fileStatus, gFileStatusNlinkFieldID, s.st_nlink);
-      //            env->SetIntField(fileStatus, gFileStatusUidFieldID, s.st_uid);
-      //            env->SetIntField(fileStatus, gFileStatusGidFieldID, s.st_gid);
-      //            env->SetLongField(fileStatus, gFileStatusSizeFieldID, s.st_size);
-      //            env->SetIntField(fileStatus, gFileStatusBlksizeFieldID, s.st_blksize);
-      //            env->SetLongField(fileStatus, gFileStatusBlocksFieldID, s.st_blocks);
-      //            env->SetLongField(fileStatus, gFileStatusAtimeFieldID, s.st_atime);
-      //            env->SetLongField(fileStatus, gFileStatusMtimeFieldID, s.st_mtime);
-      //            env->SetLongField(fileStatus, gFileStatusCtimeFieldID, s.st_ctime);
-    }
-  }
-  
-  //    env->ReleaseStringUTFChars(path, pathStr);
-  
-  return ret;
-}
-
-jint AndroidOsFileUtils_setPermissionsWithNSString_withInt_withInt_withInt_(NSString *file, jint mode, jint uid, jint gid) {
-  AndroidOsFileUtils_initialize();
-  if ([file length] <= 0) {
-    return ENOENT;
-  }
-  if (uid >= 0 || gid >= 0) {
-    int res = chown([file cStringUsingEncoding: NSASCIIStringEncoding], uid, gid);
-    if (res != 0) {
-      return errno;
-    }
-  }
-  return chmod([file cStringUsingEncoding: NSASCIIStringEncoding], mode) == 0 ? 0 : errno;
-}
-
-jboolean AndroidOsFileUtils_syncWithJavaIoFileOutputStream_(JavaIoFileOutputStream *stream) {
-  AndroidOsFileUtils_initialize();
-  @try {
-    if (stream != nil) {
-      [((JavaIoFileDescriptor *) nil_chk([stream getFD])) sync];
-    }
-    return true;
-  }
-  @catch (JavaIoIOException *e) {
-  }
-  return false;
-}
-
-jboolean AndroidOsFileUtils_copyFileWithJavaIoFile_withJavaIoFile_(JavaIoFile *srcFile, JavaIoFile *destFile) {
-  AndroidOsFileUtils_initialize();
-  jboolean result = false;
-  @try {
-    JavaIoInputStream *in = create_JavaIoFileInputStream_initWithJavaIoFile_(srcFile);
-    @try {
-      result = AndroidOsFileUtils_copyToFileWithJavaIoInputStream_withJavaIoFile_(in, destFile);
-    }
-    @finally {
-      [in close];
-    }
-  }
-  @catch (JavaIoIOException *e) {
-    result = false;
-  }
-  return result;
-}
-
-jboolean AndroidOsFileUtils_copyToFileWithJavaIoInputStream_withJavaIoFile_(JavaIoInputStream *inputStream, JavaIoFile *destFile) {
-  AndroidOsFileUtils_initialize();
-  @try {
-    if ([((JavaIoFile *) nil_chk(destFile)) exists]) {
-      [destFile delete__];
-    }
-    JavaIoFileOutputStream *out = create_JavaIoFileOutputStream_initWithJavaIoFile_(destFile);
-    @try {
-      IOSByteArray *buffer = [IOSByteArray arrayWithLength:4096];
-      jint bytesRead;
-      while ((bytesRead = [((JavaIoInputStream *) nil_chk(inputStream)) readWithByteArray:buffer]) >= 0) {
-        [out writeWithByteArray:buffer withInt:0 withInt:bytesRead];
-      }
-    }
-    @finally {
-      [out flush];
-      @try {
-        [((JavaIoFileDescriptor *) nil_chk([out getFD])) sync];
-      }
-      @catch (JavaIoIOException *e) {
-      }
-      [out close];
-    }
-    return true;
-  }
-  @catch (JavaIoIOException *e) {
-    return false;
-  }
-}
-
-jboolean AndroidOsFileUtils_isFilenameSafeWithJavaIoFile_(JavaIoFile *file) {
-  AndroidOsFileUtils_initialize();
-  return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(AndroidOsFileUtils_SAFE_FILENAME_PATTERN)) matcherWithJavaLangCharSequence:[((JavaIoFile *) nil_chk(file)) getPath]])) matches];
-}
-
-NSString *AndroidOsFileUtils_readTextFileWithJavaIoFile_withInt_withNSString_(JavaIoFile *file, jint max, NSString *ellipsis) {
-  AndroidOsFileUtils_initialize();
-  JavaIoInputStream *input = create_JavaIoFileInputStream_initWithJavaIoFile_(file);
-  @try {
-    jlong size = [((JavaIoFile *) nil_chk(file)) length];
-    if (max > 0 || (size > 0 && max == 0)) {
-      if (size > 0 && (max == 0 || size < max)) max = (jint) size;
-      IOSByteArray *data = [IOSByteArray arrayWithLength:max + 1];
-      jint length = [input readWithByteArray:data];
-      if (length <= 0) return @"";
-      if (length <= max) return [NSString java_stringWithBytes:data offset:0 length:length];
-      if (ellipsis == nil) return [NSString java_stringWithBytes:data offset:0 length:max];
-      return JreStrcat("$$", [NSString java_stringWithBytes:data offset:0 length:max], ellipsis);
-    }
-    else if (max < 0) {
-      jint len;
-      jboolean rolled = false;
-      IOSByteArray *last = nil;
-      IOSByteArray *data = nil;
-      do {
-        if (last != nil) rolled = true;
-        IOSByteArray *tmp = last;
-        last = data;
-        data = tmp;
-        if (data == nil) data = [IOSByteArray arrayWithLength:-max];
-        len = [input readWithByteArray:data];
-      }
-      while (len == data->size_);
-      if (last == nil && len <= 0) return @"";
-      if (last == nil) return [NSString java_stringWithBytes:data offset:0 length:len];
-      if (len > 0) {
-        rolled = true;
-        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(last, len, last, 0, last->size_ - len);
-        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, last, last->size_ - len, len);
-      }
-      if (ellipsis == nil || !rolled) return [NSString java_stringWithBytes:last];
-      return JreStrcat("$$", ellipsis, [NSString java_stringWithBytes:last]);
-    }
-    else {
-      JavaIoByteArrayOutputStream *contents = create_JavaIoByteArrayOutputStream_init();
-      jint len;
-      IOSByteArray *data = [IOSByteArray arrayWithLength:1024];
-      do {
-        len = [input readWithByteArray:data];
-        if (len > 0) [contents writeWithByteArray:data withInt:0 withInt:len];
-      }
-      while (len == data->size_);
-      return [contents description];
-    }
-  }
-  @finally {
-    [input close];
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsFileUtils)
-
-@implementation AndroidOsFileUtils_FileStatus
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsFileUtils_FileStatus_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "dev_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "ino_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mode_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "nlink_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "uid_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "gid_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "rdev_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "size_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "blksize_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "blocks_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "atime_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "mtime_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "ctime_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidOsFileUtils;" };
-  static const J2ObjcClassInfo _AndroidOsFileUtils_FileStatus = { "FileStatus", "android.os", ptrTable, methods, fields, 7, 0x19, 1, 13, 0, -1, -1, -1, -1 };
-  return &_AndroidOsFileUtils_FileStatus;
-}
-
-@end
-
-void AndroidOsFileUtils_FileStatus_init(AndroidOsFileUtils_FileStatus *self) {
-  NSObject_init(self);
-}
-
-AndroidOsFileUtils_FileStatus *new_AndroidOsFileUtils_FileStatus_init() {
-  J2OBJC_NEW_IMPL(AndroidOsFileUtils_FileStatus, init)
-}
-
-AndroidOsFileUtils_FileStatus *create_AndroidOsFileUtils_FileStatus_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsFileUtils_FileStatus, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsFileUtils_FileStatus)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsHandler.h b/core/iostest/daggerframework/main/androidbase/AndroidOsHandler.h
deleted file mode 100644
index 72cb79a25..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsHandler.h
+++ /dev/null
@@ -1,174 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsHandler")
-#ifdef RESTRICT_AndroidOsHandler
-#define INCLUDE_ALL_AndroidOsHandler 0
-#else
-#define INCLUDE_ALL_AndroidOsHandler 1
-#endif
-#undef RESTRICT_AndroidOsHandler
-
-#if !defined (AndroidOsHandler_) && (INCLUDE_ALL_AndroidOsHandler || defined(INCLUDE_AndroidOsHandler))
-#define AndroidOsHandler_
-
-@class AndroidOsLooper;
-@class AndroidOsMessage;
-@class AndroidOsMessageQueue;
-@protocol AndroidOsHandler_Callback;
-@protocol AndroidUtilPrinter;
-@protocol JavaLangRunnable;
-
-@interface AndroidOsHandler : NSObject {
- @public
-  AndroidOsMessageQueue *mQueue_;
-  AndroidOsLooper *mLooper_;
-  id<AndroidOsHandler_Callback> mCallback_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback;
-
-- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper;
-
-- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper
-          withAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback;
-
-- (void)dispatchMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)pw
-                      withNSString:(NSString *)prefix;
-
-- (AndroidOsLooper *)getLooper;
-
-- (NSString *)getMessageNameWithAndroidOsMessage:(AndroidOsMessage *)message;
-
-- (void)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;
-
-- (jboolean)hasMessagesWithInt:(jint)what;
-
-- (jboolean)hasMessagesWithInt:(jint)what
-                        withId:(id)object;
-
-- (AndroidOsMessage *)obtainMessage;
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what;
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
-                                   withInt:(jint)arg1
-                                   withInt:(jint)arg2;
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
-                                   withInt:(jint)arg1
-                                   withInt:(jint)arg2
-                                    withId:(id)obj;
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
-                                    withId:(id)obj;
-
-- (jboolean)postWithJavaLangRunnable:(id<JavaLangRunnable>)r;
-
-- (jboolean)postAtFrontOfQueueWithJavaLangRunnable:(id<JavaLangRunnable>)r;
-
-- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                  withLong:(jlong)uptimeMillis;
-
-- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                    withId:(id)token
-                                  withLong:(jlong)uptimeMillis;
-
-- (jboolean)postDelayedWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                   withLong:(jlong)delayMillis;
-
-- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r;
-
-- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                     withId:(id)token;
-
-- (void)removeCallbacksAndMessagesWithId:(id)token;
-
-- (void)removeMessagesWithInt:(jint)what;
-
-- (void)removeMessagesWithInt:(jint)what
-                       withId:(id)object;
-
-- (jboolean)sendEmptyMessageWithInt:(jint)what;
-
-- (jboolean)sendEmptyMessageAtTimeWithInt:(jint)what
-                                 withLong:(jlong)uptimeMillis;
-
-- (jboolean)sendEmptyMessageDelayedWithInt:(jint)what
-                                  withLong:(jlong)delayMillis;
-
-- (jboolean)sendMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;
-
-- (jboolean)sendMessageAtFrontOfQueueWithAndroidOsMessage:(AndroidOsMessage *)msg;
-
-- (jboolean)sendMessageAtTimeWithAndroidOsMessage:(AndroidOsMessage *)msg
-                                         withLong:(jlong)uptimeMillis;
-
-- (jboolean)sendMessageDelayedWithAndroidOsMessage:(AndroidOsMessage *)msg
-                                          withLong:(jlong)delayMillis;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsHandler)
-
-J2OBJC_FIELD_SETTER(AndroidOsHandler, mQueue_, AndroidOsMessageQueue *)
-J2OBJC_FIELD_SETTER(AndroidOsHandler, mLooper_, AndroidOsLooper *)
-J2OBJC_FIELD_SETTER(AndroidOsHandler, mCallback_, id<AndroidOsHandler_Callback>)
-
-FOUNDATION_EXPORT void AndroidOsHandler_init(AndroidOsHandler *self);
-
-FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_init();
-
-FOUNDATION_EXPORT void AndroidOsHandler_initWithAndroidOsHandler_Callback_(AndroidOsHandler *self, id<AndroidOsHandler_Callback> callback);
-
-FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback);
-
-FOUNDATION_EXPORT void AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsHandler *self, AndroidOsLooper *looper);
-
-FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper);
-
-FOUNDATION_EXPORT void AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsHandler *self, AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback);
-
-FOUNDATION_EXPORT AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsHandler)
-
-#endif
-
-#if !defined (AndroidOsHandler_Callback_) && (INCLUDE_ALL_AndroidOsHandler || defined(INCLUDE_AndroidOsHandler_Callback))
-#define AndroidOsHandler_Callback_
-
-@class AndroidOsMessage;
-
-@protocol AndroidOsHandler_Callback < JavaObject >
-
-- (jboolean)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsHandler_Callback)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsHandler_Callback)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsHandler")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsHandler.m b/core/iostest/daggerframework/main/androidbase/AndroidOsHandler.m
deleted file mode 100644
index ede0a624c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsHandler.m
+++ /dev/null
@@ -1,490 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsHandler.h"
-#include "AndroidOsLooper.h"
-#include "AndroidOsMessage.h"
-#include "AndroidOsMessageQueue.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "android/os/SystemClock.h"
-#include "android/util/Log.h"
-#include "android/util/Printer.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Runnable.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/System.h"
-
-@interface AndroidOsHandler ()
-
-- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r;
-
-- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                                  withId:(id)token;
-
-- (void)handleCallbackWithAndroidOsMessage:(AndroidOsMessage *)message;
-
-@end
-
-inline jboolean AndroidOsHandler_get_FIND_POTENTIAL_LEAKS();
-#define AndroidOsHandler_FIND_POTENTIAL_LEAKS false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsHandler, FIND_POTENTIAL_LEAKS, jboolean)
-
-inline NSString *AndroidOsHandler_get_TAG();
-static NSString *AndroidOsHandler_TAG = @"Handler";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsHandler, TAG, NSString *)
-
-__attribute__((unused)) static jboolean AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(AndroidOsHandler *self, jint what, jlong delayMillis);
-
-__attribute__((unused)) static jboolean AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(AndroidOsHandler *self, AndroidOsMessage *msg, jlong delayMillis);
-
-__attribute__((unused)) static jboolean AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *msg);
-
-__attribute__((unused)) static AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_(AndroidOsHandler *self, id<JavaLangRunnable> r);
-
-__attribute__((unused)) static AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(AndroidOsHandler *self, id<JavaLangRunnable> r, id token);
-
-__attribute__((unused)) static void AndroidOsHandler_handleCallbackWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *message);
-
-@interface AndroidOsHandler_Callback : NSObject
-
-@end
-
-@implementation AndroidOsHandler
-
-- (void)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
-}
-
-- (void)dispatchMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
-  if (((AndroidOsMessage *) nil_chk(msg))->callback_ != nil) {
-    AndroidOsHandler_handleCallbackWithAndroidOsMessage_(self, msg);
-  }
-  else {
-    if (mCallback_ != nil) {
-      if ([mCallback_ handleMessageWithAndroidOsMessage:msg]) {
-        return;
-      }
-    }
-    [self handleMessageWithAndroidOsMessage:msg];
-  }
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsHandler_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback {
-  AndroidOsHandler_initWithAndroidOsHandler_Callback_(self, callback);
-  return self;
-}
-
-- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper {
-  AndroidOsHandler_initWithAndroidOsLooper_(self, looper);
-  return self;
-}
-
-- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper
-          withAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback {
-  AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(self, looper, callback);
-  return self;
-}
-
-- (NSString *)getMessageNameWithAndroidOsMessage:(AndroidOsMessage *)message {
-  if (((AndroidOsMessage *) nil_chk(message))->callback_ != nil) {
-    return [[message->callback_ java_getClass] getName];
-  }
-  return JreStrcat("$$", @"0x", JavaLangInteger_toHexStringWithInt_(message->what_));
-}
-
-- (AndroidOsMessage *)obtainMessage {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_(self);
-}
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(self, what);
-}
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
-                                    withId:(id)obj {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(self, what, obj);
-}
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
-                                   withInt:(jint)arg1
-                                   withInt:(jint)arg2 {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(self, what, arg1, arg2);
-}
-
-- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
-                                   withInt:(jint)arg1
-                                   withInt:(jint)arg2
-                                    withId:(id)obj {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(self, what, arg1, arg2, obj);
-}
-
-- (jboolean)postWithJavaLangRunnable:(id<JavaLangRunnable>)r {
-  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r), 0);
-}
-
-- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                  withLong:(jlong)uptimeMillis {
-  return [self sendMessageAtTimeWithAndroidOsMessage:AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r) withLong:uptimeMillis];
-}
-
-- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                    withId:(id)token
-                                  withLong:(jlong)uptimeMillis {
-  return [self sendMessageAtTimeWithAndroidOsMessage:AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(self, r, token) withLong:uptimeMillis];
-}
-
-- (jboolean)postDelayedWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                   withLong:(jlong)delayMillis {
-  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r), delayMillis);
-}
-
-- (jboolean)postAtFrontOfQueueWithJavaLangRunnable:(id<JavaLangRunnable>)r {
-  return AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(self, AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r));
-}
-
-- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r {
-  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withJavaLangRunnable:r withId:nil];
-}
-
-- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                     withId:(id)token {
-  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withJavaLangRunnable:r withId:token];
-}
-
-- (jboolean)sendMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
-  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, msg, 0);
-}
-
-- (jboolean)sendEmptyMessageWithInt:(jint)what {
-  return AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(self, what, 0);
-}
-
-- (jboolean)sendEmptyMessageDelayedWithInt:(jint)what
-                                  withLong:(jlong)delayMillis {
-  return AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(self, what, delayMillis);
-}
-
-- (jboolean)sendEmptyMessageAtTimeWithInt:(jint)what
-                                 withLong:(jlong)uptimeMillis {
-  AndroidOsMessage *msg = AndroidOsMessage_obtain();
-  ((AndroidOsMessage *) nil_chk(msg))->what_ = what;
-  return [self sendMessageAtTimeWithAndroidOsMessage:msg withLong:uptimeMillis];
-}
-
-- (jboolean)sendMessageDelayedWithAndroidOsMessage:(AndroidOsMessage *)msg
-                                          withLong:(jlong)delayMillis {
-  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, msg, delayMillis);
-}
-
-- (jboolean)sendMessageAtTimeWithAndroidOsMessage:(AndroidOsMessage *)msg
-                                         withLong:(jlong)uptimeMillis {
-  jboolean sent = false;
-  AndroidOsMessageQueue *queue = mQueue_;
-  if (queue != nil) {
-    JreStrongAssign(&((AndroidOsMessage *) nil_chk(msg))->target_, self);
-    sent = [queue enqueueMessageWithAndroidOsMessage:msg withLong:uptimeMillis];
-  }
-  else {
-    JavaLangRuntimeException *e = create_JavaLangRuntimeException_initWithNSString_(JreStrcat("@$", self, @" sendMessageAtTime() called with no mQueue"));
-    AndroidUtilLog_wWithNSString_withNSString_withNSException_(@"Looper", [e getMessage], e);
-  }
-  return sent;
-}
-
-- (jboolean)sendMessageAtFrontOfQueueWithAndroidOsMessage:(AndroidOsMessage *)msg {
-  return AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(self, msg);
-}
-
-- (void)removeMessagesWithInt:(jint)what {
-  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:nil withBoolean:true];
-}
-
-- (void)removeMessagesWithInt:(jint)what
-                       withId:(id)object {
-  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:object withBoolean:true];
-}
-
-- (void)removeCallbacksAndMessagesWithId:(id)token {
-  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeCallbacksAndMessagesWithAndroidOsHandler:self withId:token];
-}
-
-- (jboolean)hasMessagesWithInt:(jint)what {
-  return [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:nil withBoolean:false];
-}
-
-- (jboolean)hasMessagesWithInt:(jint)what
-                        withId:(id)object {
-  return [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:object withBoolean:false];
-}
-
-- (AndroidOsLooper *)getLooper {
-  return mLooper_;
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)pw
-                      withNSString:(NSString *)prefix {
-  [((id<AndroidUtilPrinter>) nil_chk(pw)) printlnWithNSString:JreStrcat("$@$J", prefix, self, @" @ ", AndroidOsSystemClock_uptimeMillis())];
-  if (mLooper_ == nil) {
-    [pw printlnWithNSString:JreStrcat("$$", prefix, @"looper uninitialized")];
-  }
-  else {
-    [mLooper_ dumpWithAndroidUtilPrinter:pw withNSString:JreStrcat("$$", prefix, @"  ")];
-  }
-}
-
-- (NSString *)description {
-  return JreStrcat("$$$$C", @"Handler (", [[self java_getClass] getName], @") {", JavaLangInteger_toHexStringWithInt_(JavaLangSystem_identityHashCodeWithId_(self)), '}');
-}
-
-- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r {
-  return AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r);
-}
-
-- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r
-                                                  withId:(id)token {
-  return AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(self, r, token);
-}
-
-- (void)handleCallbackWithAndroidOsMessage:(AndroidOsMessage *)message {
-  AndroidOsHandler_handleCallbackWithAndroidOsMessage_(self, message);
-}
-
-- (void)dealloc {
-  RELEASE_(mQueue_);
-  RELEASE_(mLooper_);
-  RELEASE_(mCallback_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 6, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x11, 7, 8, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x11, 7, 9, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x11, 7, 10, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x11, 7, 11, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 12, 13, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 14, 15, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 14, 16, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 17, 15, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 18, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 19, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 19, 20, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 21, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 22, 8, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 23, 24, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 25, 24, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 26, 27, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 28, 27, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 29, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 30, 8, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 30, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 31, 32, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 33, 8, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 33, 9, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsLooper;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 34, 35, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 36, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x12, 37, 13, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x12, 37, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x12, 38, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(handleMessageWithAndroidOsMessage:);
-  methods[1].selector = @selector(dispatchMessageWithAndroidOsMessage:);
-  methods[2].selector = @selector(init);
-  methods[3].selector = @selector(initWithAndroidOsHandler_Callback:);
-  methods[4].selector = @selector(initWithAndroidOsLooper:);
-  methods[5].selector = @selector(initWithAndroidOsLooper:withAndroidOsHandler_Callback:);
-  methods[6].selector = @selector(getMessageNameWithAndroidOsMessage:);
-  methods[7].selector = @selector(obtainMessage);
-  methods[8].selector = @selector(obtainMessageWithInt:);
-  methods[9].selector = @selector(obtainMessageWithInt:withId:);
-  methods[10].selector = @selector(obtainMessageWithInt:withInt:withInt:);
-  methods[11].selector = @selector(obtainMessageWithInt:withInt:withInt:withId:);
-  methods[12].selector = @selector(postWithJavaLangRunnable:);
-  methods[13].selector = @selector(postAtTimeWithJavaLangRunnable:withLong:);
-  methods[14].selector = @selector(postAtTimeWithJavaLangRunnable:withId:withLong:);
-  methods[15].selector = @selector(postDelayedWithJavaLangRunnable:withLong:);
-  methods[16].selector = @selector(postAtFrontOfQueueWithJavaLangRunnable:);
-  methods[17].selector = @selector(removeCallbacksWithJavaLangRunnable:);
-  methods[18].selector = @selector(removeCallbacksWithJavaLangRunnable:withId:);
-  methods[19].selector = @selector(sendMessageWithAndroidOsMessage:);
-  methods[20].selector = @selector(sendEmptyMessageWithInt:);
-  methods[21].selector = @selector(sendEmptyMessageDelayedWithInt:withLong:);
-  methods[22].selector = @selector(sendEmptyMessageAtTimeWithInt:withLong:);
-  methods[23].selector = @selector(sendMessageDelayedWithAndroidOsMessage:withLong:);
-  methods[24].selector = @selector(sendMessageAtTimeWithAndroidOsMessage:withLong:);
-  methods[25].selector = @selector(sendMessageAtFrontOfQueueWithAndroidOsMessage:);
-  methods[26].selector = @selector(removeMessagesWithInt:);
-  methods[27].selector = @selector(removeMessagesWithInt:withId:);
-  methods[28].selector = @selector(removeCallbacksAndMessagesWithId:);
-  methods[29].selector = @selector(hasMessagesWithInt:);
-  methods[30].selector = @selector(hasMessagesWithInt:withId:);
-  methods[31].selector = @selector(getLooper);
-  methods[32].selector = @selector(dumpWithAndroidUtilPrinter:withNSString:);
-  methods[33].selector = @selector(description);
-  methods[34].selector = @selector(getPostMessageWithJavaLangRunnable:);
-  methods[35].selector = @selector(getPostMessageWithJavaLangRunnable:withId:);
-  methods[36].selector = @selector(handleCallbackWithAndroidOsMessage:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "FIND_POTENTIAL_LEAKS", "Z", .constantValue.asBOOL = AndroidOsHandler_FIND_POTENTIAL_LEAKS, 0x1a, -1, -1, -1, -1 },
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
-    { "mQueue_", "LAndroidOsMessageQueue;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-    { "mLooper_", "LAndroidOsLooper;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-    { "mCallback_", "LAndroidOsHandler_Callback;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "handleMessage", "LAndroidOsMessage;", "dispatchMessage", "LAndroidOsHandler_Callback;", "LAndroidOsLooper;", "LAndroidOsLooper;LAndroidOsHandler_Callback;", "getMessageName", "obtainMessage", "I", "ILNSObject;", "III", "IIILNSObject;", "post", "LJavaLangRunnable;", "postAtTime", "LJavaLangRunnable;J", "LJavaLangRunnable;LNSObject;J", "postDelayed", "postAtFrontOfQueue", "removeCallbacks", "LJavaLangRunnable;LNSObject;", "sendMessage", "sendEmptyMessage", "sendEmptyMessageDelayed", "IJ", "sendEmptyMessageAtTime", "sendMessageDelayed", "LAndroidOsMessage;J", "sendMessageAtTime", "sendMessageAtFrontOfQueue", "removeMessages", "removeCallbacksAndMessages", "LNSObject;", "hasMessages", "dump", "LAndroidUtilPrinter;LNSString;", "toString", "getPostMessage", "handleCallback", &AndroidOsHandler_TAG };
-  static const J2ObjcClassInfo _AndroidOsHandler = { "Handler", "android.os", ptrTable, methods, fields, 7, 0x1, 37, 5, -1, 3, -1, -1, -1 };
-  return &_AndroidOsHandler;
-}
-
-@end
-
-void AndroidOsHandler_init(AndroidOsHandler *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mLooper_, AndroidOsLooper_myLooper());
-  if (self->mLooper_ == nil) {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"Can't create handler inside thread that has not called Looper.prepare()");
-  }
-  JreStrongAssign(&self->mQueue_, self->mLooper_->mQueue_);
-  JreStrongAssign(&self->mCallback_, nil);
-}
-
-AndroidOsHandler *new_AndroidOsHandler_init() {
-  J2OBJC_NEW_IMPL(AndroidOsHandler, init)
-}
-
-AndroidOsHandler *create_AndroidOsHandler_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsHandler, init)
-}
-
-void AndroidOsHandler_initWithAndroidOsHandler_Callback_(AndroidOsHandler *self, id<AndroidOsHandler_Callback> callback) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mLooper_, AndroidOsLooper_myLooper());
-  if (self->mLooper_ == nil) {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"Can't create handler inside thread that has not called Looper.prepare()");
-  }
-  JreStrongAssign(&self->mQueue_, self->mLooper_->mQueue_);
-  JreStrongAssign(&self->mCallback_, callback);
-}
-
-AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback) {
-  J2OBJC_NEW_IMPL(AndroidOsHandler, initWithAndroidOsHandler_Callback_, callback)
-}
-
-AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback) {
-  J2OBJC_CREATE_IMPL(AndroidOsHandler, initWithAndroidOsHandler_Callback_, callback)
-}
-
-void AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsHandler *self, AndroidOsLooper *looper) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mLooper_, looper);
-  JreStrongAssign(&self->mQueue_, ((AndroidOsLooper *) nil_chk(looper))->mQueue_);
-  JreStrongAssign(&self->mCallback_, nil);
-}
-
-AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper) {
-  J2OBJC_NEW_IMPL(AndroidOsHandler, initWithAndroidOsLooper_, looper)
-}
-
-AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper) {
-  J2OBJC_CREATE_IMPL(AndroidOsHandler, initWithAndroidOsLooper_, looper)
-}
-
-void AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsHandler *self, AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mLooper_, looper);
-  JreStrongAssign(&self->mQueue_, ((AndroidOsLooper *) nil_chk(looper))->mQueue_);
-  JreStrongAssign(&self->mCallback_, callback);
-}
-
-AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) {
-  J2OBJC_NEW_IMPL(AndroidOsHandler, initWithAndroidOsLooper_withAndroidOsHandler_Callback_, looper, callback)
-}
-
-AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) {
-  J2OBJC_CREATE_IMPL(AndroidOsHandler, initWithAndroidOsLooper_withAndroidOsHandler_Callback_, looper, callback)
-}
-
-jboolean AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(AndroidOsHandler *self, jint what, jlong delayMillis) {
-  AndroidOsMessage *msg = AndroidOsMessage_obtain();
-  ((AndroidOsMessage *) nil_chk(msg))->what_ = what;
-  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, msg, delayMillis);
-}
-
-jboolean AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(AndroidOsHandler *self, AndroidOsMessage *msg, jlong delayMillis) {
-  if (delayMillis < 0) {
-    delayMillis = 0;
-  }
-  return [self sendMessageAtTimeWithAndroidOsMessage:msg withLong:AndroidOsSystemClock_uptimeMillis() + delayMillis];
-}
-
-jboolean AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *msg) {
-  jboolean sent = false;
-  AndroidOsMessageQueue *queue = self->mQueue_;
-  if (queue != nil) {
-    JreStrongAssign(&((AndroidOsMessage *) nil_chk(msg))->target_, self);
-    sent = [queue enqueueMessageWithAndroidOsMessage:msg withLong:0];
-  }
-  else {
-    JavaLangRuntimeException *e = create_JavaLangRuntimeException_initWithNSString_(JreStrcat("@$", self, @" sendMessageAtTime() called with no mQueue"));
-    AndroidUtilLog_wWithNSString_withNSString_withNSException_(@"Looper", [e getMessage], e);
-  }
-  return sent;
-}
-
-AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_(AndroidOsHandler *self, id<JavaLangRunnable> r) {
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->callback_, r);
-  return m;
-}
-
-AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(AndroidOsHandler *self, id<JavaLangRunnable> r, id token) {
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->obj_, token);
-  JreStrongAssign(&m->callback_, r);
-  return m;
-}
-
-void AndroidOsHandler_handleCallbackWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *message) {
-  [((id<JavaLangRunnable>) nil_chk(((AndroidOsMessage *) nil_chk(message))->callback_)) run];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsHandler)
-
-@implementation AndroidOsHandler_Callback
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(handleMessageWithAndroidOsMessage:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "handleMessage", "LAndroidOsMessage;", "LAndroidOsHandler;" };
-  static const J2ObjcClassInfo _AndroidOsHandler_Callback = { "Callback", "android.os", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
-  return &_AndroidOsHandler_Callback;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsHandler_Callback)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsHandlerThread.h b/core/iostest/daggerframework/main/androidbase/AndroidOsHandlerThread.h
deleted file mode 100644
index 1d2c75aec..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsHandlerThread.h
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsHandlerThread")
-#ifdef RESTRICT_AndroidOsHandlerThread
-#define INCLUDE_ALL_AndroidOsHandlerThread 0
-#else
-#define INCLUDE_ALL_AndroidOsHandlerThread 1
-#endif
-#undef RESTRICT_AndroidOsHandlerThread
-
-#if !defined (AndroidOsHandlerThread_) && (INCLUDE_ALL_AndroidOsHandlerThread || defined(INCLUDE_AndroidOsHandlerThread))
-#define AndroidOsHandlerThread_
-
-#define RESTRICT_JavaLangThread 1
-#define INCLUDE_JavaLangThread 1
-#include "java/lang/Thread.h"
-
-@class AndroidOsLooper;
-
-@interface AndroidOsHandlerThread : JavaLangThread {
- @public
-  jint mPriority_;
-  AndroidOsLooper *mLooper_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)name;
-
-- (instancetype)initWithNSString:(NSString *)name
-                         withInt:(jint)priority;
-
-- (AndroidOsLooper *)getLooper;
-
-- (jint)getThreadId;
-
-- (jboolean)quit;
-
-- (void)run;
-
-#pragma mark Protected
-
-- (void)onLooperPrepared;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsHandlerThread)
-
-J2OBJC_FIELD_SETTER(AndroidOsHandlerThread, mLooper_, AndroidOsLooper *)
-
-FOUNDATION_EXPORT void AndroidOsHandlerThread_initWithNSString_(AndroidOsHandlerThread *self, NSString *name);
-
-FOUNDATION_EXPORT AndroidOsHandlerThread *new_AndroidOsHandlerThread_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsHandlerThread *create_AndroidOsHandlerThread_initWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT void AndroidOsHandlerThread_initWithNSString_withInt_(AndroidOsHandlerThread *self, NSString *name, jint priority);
-
-FOUNDATION_EXPORT AndroidOsHandlerThread *new_AndroidOsHandlerThread_initWithNSString_withInt_(NSString *name, jint priority) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsHandlerThread *create_AndroidOsHandlerThread_initWithNSString_withInt_(NSString *name, jint priority);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsHandlerThread)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsHandlerThread")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsHandlerThread.m b/core/iostest/daggerframework/main/androidbase/AndroidOsHandlerThread.m
deleted file mode 100644
index aa99fe3ab..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsHandlerThread.m
+++ /dev/null
@@ -1,128 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsHandlerThread.h"
-#include "AndroidOsLooper.h"
-#include "J2ObjC_source.h"
-#include "java/lang/InterruptedException.h"
-#include "java/lang/Thread.h"
-
-@implementation AndroidOsHandlerThread
-
-- (instancetype)initWithNSString:(NSString *)name {
-  AndroidOsHandlerThread_initWithNSString_(self, name);
-  return self;
-}
-
-- (instancetype)initWithNSString:(NSString *)name
-                         withInt:(jint)priority {
-  AndroidOsHandlerThread_initWithNSString_withInt_(self, name, priority);
-  return self;
-}
-
-- (void)onLooperPrepared {
-}
-
-- (void)run {
-  AndroidOsLooper_prepare();
-  @synchronized(self) {
-    JreStrongAssign(&mLooper_, AndroidOsLooper_myLooper());
-    [self java_notifyAll];
-  }
-  [self onLooperPrepared];
-  AndroidOsLooper_loop();
-}
-
-- (AndroidOsLooper *)getLooper {
-  if (![self isAlive]) {
-    return nil;
-  }
-  @synchronized(self) {
-    while ([self isAlive] && mLooper_ == nil) {
-      @try {
-        [self java_wait];
-      }
-      @catch (JavaLangInterruptedException *e) {
-      }
-    }
-  }
-  return mLooper_;
-}
-
-- (jboolean)quit {
-  AndroidOsLooper *looper = [self getLooper];
-  if (looper != nil) {
-    [looper quit];
-    return true;
-  }
-  return false;
-}
-
-- (jint)getThreadId {
-  return -1;
-}
-
-- (void)dealloc {
-  RELEASE_(mLooper_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsLooper;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:);
-  methods[1].selector = @selector(initWithNSString:withInt:);
-  methods[2].selector = @selector(onLooperPrepared);
-  methods[3].selector = @selector(run);
-  methods[4].selector = @selector(getLooper);
-  methods[5].selector = @selector(quit);
-  methods[6].selector = @selector(getThreadId);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mPriority_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "mLooper_", "LAndroidOsLooper;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;", "LNSString;I" };
-  static const J2ObjcClassInfo _AndroidOsHandlerThread = { "HandlerThread", "android.os", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidOsHandlerThread;
-}
-
-@end
-
-void AndroidOsHandlerThread_initWithNSString_(AndroidOsHandlerThread *self, NSString *name) {
-  JavaLangThread_initWithNSString_(self, name);
-  self->mPriority_ = 0;
-}
-
-AndroidOsHandlerThread *new_AndroidOsHandlerThread_initWithNSString_(NSString *name) {
-  J2OBJC_NEW_IMPL(AndroidOsHandlerThread, initWithNSString_, name)
-}
-
-AndroidOsHandlerThread *create_AndroidOsHandlerThread_initWithNSString_(NSString *name) {
-  J2OBJC_CREATE_IMPL(AndroidOsHandlerThread, initWithNSString_, name)
-}
-
-void AndroidOsHandlerThread_initWithNSString_withInt_(AndroidOsHandlerThread *self, NSString *name, jint priority) {
-  JavaLangThread_initWithNSString_(self, name);
-  self->mPriority_ = priority;
-}
-
-AndroidOsHandlerThread *new_AndroidOsHandlerThread_initWithNSString_withInt_(NSString *name, jint priority) {
-  J2OBJC_NEW_IMPL(AndroidOsHandlerThread, initWithNSString_withInt_, name, priority)
-}
-
-AndroidOsHandlerThread *create_AndroidOsHandlerThread_initWithNSString_withInt_(NSString *name, jint priority) {
-  J2OBJC_CREATE_IMPL(AndroidOsHandlerThread, initWithNSString_withInt_, name, priority)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsHandlerThread)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsIBinder.h b/core/iostest/daggerframework/main/androidbase/AndroidOsIBinder.h
deleted file mode 100644
index 172e5a327..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsIBinder.h
+++ /dev/null
@@ -1,95 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsIBinder")
-#ifdef RESTRICT_AndroidOsIBinder
-#define INCLUDE_ALL_AndroidOsIBinder 0
-#else
-#define INCLUDE_ALL_AndroidOsIBinder 1
-#endif
-#undef RESTRICT_AndroidOsIBinder
-
-#if !defined (AndroidOsIBinder_) && (INCLUDE_ALL_AndroidOsIBinder || defined(INCLUDE_AndroidOsIBinder))
-#define AndroidOsIBinder_
-
-@class AndroidOsParcel;
-@class IOSObjectArray;
-@class JavaIoFileDescriptor;
-@protocol AndroidOsIBinder_DeathRecipient;
-@protocol AndroidOsIInterface;
-
-@protocol AndroidOsIBinder < JavaObject >
-
-- (NSString *)getInterfaceDescriptor;
-
-- (jboolean)pingBinder;
-
-- (jboolean)isBinderAlive;
-
-- (id<AndroidOsIInterface>)queryLocalInterfaceWithNSString:(NSString *)descriptor;
-
-- (void)dumpWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd
-                   withNSStringArray:(IOSObjectArray *)args;
-
-- (jboolean)transactWithInt:(jint)code
-        withAndroidOsParcel:(AndroidOsParcel *)data
-        withAndroidOsParcel:(AndroidOsParcel *)reply
-                    withInt:(jint)flags;
-
-- (void)linkToDeathWithAndroidOsIBinder_DeathRecipient:(id<AndroidOsIBinder_DeathRecipient>)recipient
-                                               withInt:(jint)flags;
-
-- (jboolean)unlinkToDeathWithAndroidOsIBinder_DeathRecipient:(id<AndroidOsIBinder_DeathRecipient>)recipient
-                                                     withInt:(jint)flags;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsIBinder)
-
-inline jint AndroidOsIBinder_get_FIRST_CALL_TRANSACTION();
-#define AndroidOsIBinder_FIRST_CALL_TRANSACTION 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsIBinder, FIRST_CALL_TRANSACTION, jint)
-
-inline jint AndroidOsIBinder_get_LAST_CALL_TRANSACTION();
-#define AndroidOsIBinder_LAST_CALL_TRANSACTION 16777215
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsIBinder, LAST_CALL_TRANSACTION, jint)
-
-inline jint AndroidOsIBinder_get_PING_TRANSACTION();
-#define AndroidOsIBinder_PING_TRANSACTION 1599098439
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsIBinder, PING_TRANSACTION, jint)
-
-inline jint AndroidOsIBinder_get_DUMP_TRANSACTION();
-#define AndroidOsIBinder_DUMP_TRANSACTION 1598311760
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsIBinder, DUMP_TRANSACTION, jint)
-
-inline jint AndroidOsIBinder_get_INTERFACE_TRANSACTION();
-#define AndroidOsIBinder_INTERFACE_TRANSACTION 1598968902
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsIBinder, INTERFACE_TRANSACTION, jint)
-
-inline jint AndroidOsIBinder_get_FLAG_ONEWAY();
-#define AndroidOsIBinder_FLAG_ONEWAY 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsIBinder, FLAG_ONEWAY, jint)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsIBinder)
-
-#endif
-
-#if !defined (AndroidOsIBinder_DeathRecipient_) && (INCLUDE_ALL_AndroidOsIBinder || defined(INCLUDE_AndroidOsIBinder_DeathRecipient))
-#define AndroidOsIBinder_DeathRecipient_
-
-@protocol AndroidOsIBinder_DeathRecipient < JavaObject >
-
-- (void)binderDied;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsIBinder_DeathRecipient)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsIBinder_DeathRecipient)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsIBinder")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsIBinder.m b/core/iostest/daggerframework/main/androidbase/AndroidOsIBinder.m
deleted file mode 100644
index 490fe1b57..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsIBinder.m
+++ /dev/null
@@ -1,74 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsIBinder.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidOsIBinder : NSObject
-
-@end
-
-@interface AndroidOsIBinder_DeathRecipient : NSObject
-
-@end
-
-@implementation AndroidOsIBinder
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x401, -1, -1, 0, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsIInterface;", 0x401, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 3, 4, 0, -1, -1, -1 },
-    { NULL, "Z", 0x401, 5, 6, 0, -1, -1, -1 },
-    { NULL, "V", 0x401, 7, 8, 0, -1, -1, -1 },
-    { NULL, "Z", 0x401, 9, 8, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(getInterfaceDescriptor);
-  methods[1].selector = @selector(pingBinder);
-  methods[2].selector = @selector(isBinderAlive);
-  methods[3].selector = @selector(queryLocalInterfaceWithNSString:);
-  methods[4].selector = @selector(dumpWithJavaIoFileDescriptor:withNSStringArray:);
-  methods[5].selector = @selector(transactWithInt:withAndroidOsParcel:withAndroidOsParcel:withInt:);
-  methods[6].selector = @selector(linkToDeathWithAndroidOsIBinder_DeathRecipient:withInt:);
-  methods[7].selector = @selector(unlinkToDeathWithAndroidOsIBinder_DeathRecipient:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "FIRST_CALL_TRANSACTION", "I", .constantValue.asInt = AndroidOsIBinder_FIRST_CALL_TRANSACTION, 0x19, -1, -1, -1, -1 },
-    { "LAST_CALL_TRANSACTION", "I", .constantValue.asInt = AndroidOsIBinder_LAST_CALL_TRANSACTION, 0x19, -1, -1, -1, -1 },
-    { "PING_TRANSACTION", "I", .constantValue.asInt = AndroidOsIBinder_PING_TRANSACTION, 0x19, -1, -1, -1, -1 },
-    { "DUMP_TRANSACTION", "I", .constantValue.asInt = AndroidOsIBinder_DUMP_TRANSACTION, 0x19, -1, -1, -1, -1 },
-    { "INTERFACE_TRANSACTION", "I", .constantValue.asInt = AndroidOsIBinder_INTERFACE_TRANSACTION, 0x19, -1, -1, -1, -1 },
-    { "FLAG_ONEWAY", "I", .constantValue.asInt = AndroidOsIBinder_FLAG_ONEWAY, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidOsRemoteException;", "queryLocalInterface", "LNSString;", "dump", "LJavaIoFileDescriptor;[LNSString;", "transact", "ILAndroidOsParcel;LAndroidOsParcel;I", "linkToDeath", "LAndroidOsIBinder_DeathRecipient;I", "unlinkToDeath", "LAndroidOsIBinder_DeathRecipient;" };
-  static const J2ObjcClassInfo _AndroidOsIBinder = { "IBinder", "android.os", ptrTable, methods, fields, 7, 0x609, 8, 6, -1, 10, -1, -1, -1 };
-  return &_AndroidOsIBinder;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsIBinder)
-
-@implementation AndroidOsIBinder_DeathRecipient
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(binderDied);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LAndroidOsIBinder;" };
-  static const J2ObjcClassInfo _AndroidOsIBinder_DeathRecipient = { "DeathRecipient", "android.os", ptrTable, methods, NULL, 7, 0x609, 1, 0, 0, -1, -1, -1, -1 };
-  return &_AndroidOsIBinder_DeathRecipient;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsIBinder_DeathRecipient)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsIInterface.h b/core/iostest/daggerframework/main/androidbase/AndroidOsIInterface.h
deleted file mode 100644
index fdaabd7ec..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsIInterface.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsIInterface")
-#ifdef RESTRICT_AndroidOsIInterface
-#define INCLUDE_ALL_AndroidOsIInterface 0
-#else
-#define INCLUDE_ALL_AndroidOsIInterface 1
-#endif
-#undef RESTRICT_AndroidOsIInterface
-
-#if !defined (AndroidOsIInterface_) && (INCLUDE_ALL_AndroidOsIInterface || defined(INCLUDE_AndroidOsIInterface))
-#define AndroidOsIInterface_
-
-@protocol AndroidOsIBinder;
-
-@protocol AndroidOsIInterface < JavaObject >
-
-- (id<AndroidOsIBinder>)asBinder;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsIInterface)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsIInterface)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsIInterface")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsIInterface.m b/core/iostest/daggerframework/main/androidbase/AndroidOsIInterface.m
deleted file mode 100644
index c2331d043..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsIInterface.m
+++ /dev/null
@@ -1,28 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsIInterface.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidOsIInterface : NSObject
-
-@end
-
-@implementation AndroidOsIInterface
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidOsIBinder;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(asBinder);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _AndroidOsIInterface = { "IInterface", "android.os", NULL, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidOsIInterface;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsIInterface)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsLooper.h b/core/iostest/daggerframework/main/androidbase/AndroidOsLooper.h
deleted file mode 100644
index ab2b9137c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsLooper.h
+++ /dev/null
@@ -1,112 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsLooper")
-#ifdef RESTRICT_AndroidOsLooper
-#define INCLUDE_ALL_AndroidOsLooper 0
-#else
-#define INCLUDE_ALL_AndroidOsLooper 1
-#endif
-#undef RESTRICT_AndroidOsLooper
-
-#if !defined (AndroidOsLooper_) && (INCLUDE_ALL_AndroidOsLooper || defined(INCLUDE_AndroidOsLooper))
-#define AndroidOsLooper_
-
-#define RESTRICT_AndroidOsThreadNudger 1
-#define INCLUDE_AndroidOsThreadNudger 1
-#include "AndroidOsThreadNudger.h"
-
-@class AndroidOsMessageQueue;
-@class JavaLangThread;
-@class JavaLangThreadLocal;
-@protocol AndroidUtilPrinter;
-
-@interface AndroidOsLooper : NSObject < AndroidOsThreadNudger > {
- @public
-  AndroidOsMessageQueue *mQueue_;
-  JavaLangThread *mThread_;
-  volatile_jboolean mRun_;
-}
-
-#pragma mark Public
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)pw
-                      withNSString:(NSString *)prefix;
-
-+ (AndroidOsLooper *)getMainLooper;
-
-- (AndroidOsMessageQueue *)getQueue;
-
-- (JavaLangThread *)getThread;
-
-+ (void)loop;
-
-+ (AndroidOsLooper *)myLooper;
-
-+ (AndroidOsMessageQueue *)myQueue;
-
-- (void)nudge;
-
-+ (void)prepare;
-
-+ (void)prepareMainLooper;
-
-- (void)quit;
-
-- (void)setMessageLoggingWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsLooper)
-
-J2OBJC_FIELD_SETTER(AndroidOsLooper, mQueue_, AndroidOsMessageQueue *)
-J2OBJC_FIELD_SETTER(AndroidOsLooper, mThread_, JavaLangThread *)
-
-inline JavaLangThreadLocal *AndroidOsLooper_get_sThreadLocal();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaLangThreadLocal *AndroidOsLooper_sThreadLocal;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsLooper, sThreadLocal, JavaLangThreadLocal *)
-
-FOUNDATION_EXPORT void AndroidOsLooper_prepare();
-
-FOUNDATION_EXPORT void AndroidOsLooper_prepareMainLooper();
-
-FOUNDATION_EXPORT AndroidOsLooper *AndroidOsLooper_getMainLooper();
-
-FOUNDATION_EXPORT void AndroidOsLooper_loop();
-
-FOUNDATION_EXPORT AndroidOsLooper *AndroidOsLooper_myLooper();
-
-FOUNDATION_EXPORT AndroidOsMessageQueue *AndroidOsLooper_myQueue();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsLooper)
-
-#endif
-
-#if !defined (AndroidOsLooper_Profiler_) && (INCLUDE_ALL_AndroidOsLooper || defined(INCLUDE_AndroidOsLooper_Profiler))
-#define AndroidOsLooper_Profiler_
-
-@class AndroidOsMessage;
-
-@protocol AndroidOsLooper_Profiler < JavaObject >
-
-- (void)profileWithAndroidOsMessage:(AndroidOsMessage *)message
-                           withLong:(jlong)wallStart
-                           withLong:(jlong)wallTime
-                           withLong:(jlong)threadStart
-                           withLong:(jlong)threadTime;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsLooper_Profiler)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsLooper_Profiler)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsLooper")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsLooper.m b/core/iostest/daggerframework/main/androidbase/AndroidOsLooper.m
deleted file mode 100644
index 025a7724c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsLooper.m
+++ /dev/null
@@ -1,287 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsHandler.h"
-#include "AndroidOsLooper.h"
-#include "AndroidOsMessage.h"
-#include "AndroidOsMessageQueue.h"
-#include "J2ObjC_source.h"
-#include "android/util/Printer.h"
-#include "java/lang/Integer.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/System.h"
-#include "java/lang/Thread.h"
-#include "java/lang/ThreadLocal.h"
-
-@interface AndroidOsLooper () {
- @public
-  id<AndroidUtilPrinter> mLogging_;
-}
-
-+ (void)setMainLooperWithAndroidOsLooper:(AndroidOsLooper *)looper;
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidOsLooper, mLogging_, id<AndroidUtilPrinter>)
-
-inline NSString *AndroidOsLooper_get_TAG();
-static NSString *AndroidOsLooper_TAG = @"Looper";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsLooper, TAG, NSString *)
-
-inline AndroidOsLooper *AndroidOsLooper_get_mMainLooper();
-inline AndroidOsLooper *AndroidOsLooper_set_mMainLooper(AndroidOsLooper *value);
-static AndroidOsLooper *AndroidOsLooper_mMainLooper;
-J2OBJC_STATIC_FIELD_OBJ(AndroidOsLooper, mMainLooper, AndroidOsLooper *)
-
-__attribute__((unused)) static void AndroidOsLooper_setMainLooperWithAndroidOsLooper_(AndroidOsLooper *looper);
-
-__attribute__((unused)) static void AndroidOsLooper_init(AndroidOsLooper *self);
-
-__attribute__((unused)) static AndroidOsLooper *new_AndroidOsLooper_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidOsLooper *create_AndroidOsLooper_init();
-
-@interface AndroidOsLooper_Profiler : NSObject
-
-@end
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsLooper)
-
-JavaLangThreadLocal *AndroidOsLooper_sThreadLocal;
-
-@implementation AndroidOsLooper
-
-+ (void)prepare {
-  AndroidOsLooper_prepare();
-}
-
-+ (void)prepareMainLooper {
-  AndroidOsLooper_prepareMainLooper();
-}
-
-+ (void)setMainLooperWithAndroidOsLooper:(AndroidOsLooper *)looper {
-  AndroidOsLooper_setMainLooperWithAndroidOsLooper_(looper);
-}
-
-+ (AndroidOsLooper *)getMainLooper {
-  return AndroidOsLooper_getMainLooper();
-}
-
-- (void)nudge {
-  AndroidOsLooper_loop();
-}
-
-+ (void)loop {
-  AndroidOsLooper_loop();
-}
-
-+ (AndroidOsLooper *)myLooper {
-  return AndroidOsLooper_myLooper();
-}
-
-- (void)setMessageLoggingWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer {
-  JreStrongAssign(&mLogging_, printer);
-}
-
-+ (AndroidOsMessageQueue *)myQueue {
-  return AndroidOsLooper_myQueue();
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsLooper_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)quit {
-  AndroidOsMessage *msg = AndroidOsMessage_obtain();
-  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) enqueueMessageWithAndroidOsMessage:msg withLong:0];
-}
-
-- (JavaLangThread *)getThread {
-  return mThread_;
-}
-
-- (AndroidOsMessageQueue *)getQueue {
-  return mQueue_;
-}
-
-- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)pw
-                      withNSString:(NSString *)prefix {
-}
-
-- (NSString *)description {
-  return JreStrcat("$$C", @"Looper{", JavaLangInteger_toHexStringWithInt_(JavaLangSystem_identityHashCodeWithId_(self)), '}');
-}
-
-- (void)dealloc {
-  RELEASE_(mQueue_);
-  RELEASE_(mThread_);
-  RELEASE_(mLogging_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2a, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsLooper;", 0x29, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsLooper;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessageQueue;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangThread;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessageQueue;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(prepare);
-  methods[1].selector = @selector(prepareMainLooper);
-  methods[2].selector = @selector(setMainLooperWithAndroidOsLooper:);
-  methods[3].selector = @selector(getMainLooper);
-  methods[4].selector = @selector(nudge);
-  methods[5].selector = @selector(loop);
-  methods[6].selector = @selector(myLooper);
-  methods[7].selector = @selector(setMessageLoggingWithAndroidUtilPrinter:);
-  methods[8].selector = @selector(myQueue);
-  methods[9].selector = @selector(init);
-  methods[10].selector = @selector(quit);
-  methods[11].selector = @selector(getThread);
-  methods[12].selector = @selector(getQueue);
-  methods[13].selector = @selector(dumpWithAndroidUtilPrinter:withNSString:);
-  methods[14].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
-    { "sThreadLocal", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x18, -1, 8, 9, -1 },
-    { "mQueue_", "LAndroidOsMessageQueue;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-    { "mThread_", "LJavaLangThread;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-    { "mRun_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
-    { "mLogging_", "LAndroidUtilPrinter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mMainLooper", "LAndroidOsLooper;", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
-  };
-  static const void *ptrTable[] = { "setMainLooper", "LAndroidOsLooper;", "setMessageLogging", "LAndroidUtilPrinter;", "dump", "LAndroidUtilPrinter;LNSString;", "toString", &AndroidOsLooper_TAG, &AndroidOsLooper_sThreadLocal, "Ljava/lang/ThreadLocal<Landroid/os/Looper;>;", &AndroidOsLooper_mMainLooper, "LAndroidOsLooper_Profiler;" };
-  static const J2ObjcClassInfo _AndroidOsLooper = { "Looper", "android.os", ptrTable, methods, fields, 7, 0x1, 15, 7, -1, 11, -1, -1, -1 };
-  return &_AndroidOsLooper;
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsLooper class]) {
-    JreStrongAssignAndConsume(&AndroidOsLooper_sThreadLocal, new_JavaLangThreadLocal_init());
-    JreStrongAssign(&AndroidOsLooper_mMainLooper, nil);
-    J2OBJC_SET_INITIALIZED(AndroidOsLooper)
-  }
-}
-
-@end
-
-void AndroidOsLooper_prepare() {
-  AndroidOsLooper_initialize();
-  if ([((JavaLangThreadLocal *) nil_chk(AndroidOsLooper_sThreadLocal)) get] != nil) {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"Only one Looper may be created per thread");
-  }
-  [AndroidOsLooper_sThreadLocal setWithId:create_AndroidOsLooper_init()];
-}
-
-void AndroidOsLooper_prepareMainLooper() {
-  AndroidOsLooper_initialize();
-  AndroidOsLooper_prepare();
-  AndroidOsLooper_setMainLooperWithAndroidOsLooper_(AndroidOsLooper_myLooper());
-  ((AndroidOsMessageQueue *) nil_chk(((AndroidOsLooper *) nil_chk(AndroidOsLooper_myLooper()))->mQueue_))->mQuitAllowed_ = false;
-}
-
-void AndroidOsLooper_setMainLooperWithAndroidOsLooper_(AndroidOsLooper *looper) {
-  AndroidOsLooper_initialize();
-  @synchronized(AndroidOsLooper_class_()) {
-    JreStrongAssign(&AndroidOsLooper_mMainLooper, looper);
-  }
-}
-
-AndroidOsLooper *AndroidOsLooper_getMainLooper() {
-  AndroidOsLooper_initialize();
-  @synchronized(AndroidOsLooper_class_()) {
-    return AndroidOsLooper_mMainLooper;
-  }
-}
-
-void AndroidOsLooper_loop() {
-  AndroidOsLooper_initialize();
-  AndroidOsLooper *me = AndroidOsLooper_myLooper();
-  if (me == nil) {
-    AndroidOsLooper_prepare();
-    me = AndroidOsLooper_myLooper();
-  }
-  AndroidOsMessageQueue *queue = ((AndroidOsLooper *) nil_chk(me))->mQueue_;
-  while (true) {
-    AndroidOsMessage *msg = [((AndroidOsMessageQueue *) nil_chk(queue)) next];
-    if (msg == nil) {
-      return;
-    }
-    else {
-      if (msg->target_ == nil) {
-        return;
-      }
-      jlong wallStart = 0;
-      jlong threadStart = 0;
-      [msg->target_ dispatchMessageWithAndroidOsMessage:msg];
-      [msg recycle];
-    }
-  }
-}
-
-AndroidOsLooper *AndroidOsLooper_myLooper() {
-  AndroidOsLooper_initialize();
-  return [((JavaLangThreadLocal *) nil_chk(AndroidOsLooper_sThreadLocal)) get];
-}
-
-AndroidOsMessageQueue *AndroidOsLooper_myQueue() {
-  AndroidOsLooper_initialize();
-  return ((AndroidOsLooper *) nil_chk(AndroidOsLooper_myLooper()))->mQueue_;
-}
-
-void AndroidOsLooper_init(AndroidOsLooper *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mLogging_, nil);
-  JreStrongAssignAndConsume(&self->mQueue_, new_AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(self));
-  JreAssignVolatileBoolean(&self->mRun_, true);
-  JreStrongAssign(&self->mThread_, JavaLangThread_currentThread());
-}
-
-AndroidOsLooper *new_AndroidOsLooper_init() {
-  J2OBJC_NEW_IMPL(AndroidOsLooper, init)
-}
-
-AndroidOsLooper *create_AndroidOsLooper_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsLooper, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsLooper)
-
-@implementation AndroidOsLooper_Profiler
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(profileWithAndroidOsMessage:withLong:withLong:withLong:withLong:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "profile", "LAndroidOsMessage;JJJJ", "LAndroidOsLooper;" };
-  static const J2ObjcClassInfo _AndroidOsLooper_Profiler = { "Profiler", "android.os", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
-  return &_AndroidOsLooper_Profiler;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsLooper_Profiler)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsMessage.h b/core/iostest/daggerframework/main/androidbase/AndroidOsMessage.h
deleted file mode 100644
index cb1ddd76f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsMessage.h
+++ /dev/null
@@ -1,149 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsMessage")
-#ifdef RESTRICT_AndroidOsMessage
-#define INCLUDE_ALL_AndroidOsMessage 0
-#else
-#define INCLUDE_ALL_AndroidOsMessage 1
-#endif
-#undef RESTRICT_AndroidOsMessage
-
-#if !defined (AndroidOsMessage_) && (INCLUDE_ALL_AndroidOsMessage || defined(INCLUDE_AndroidOsMessage))
-#define AndroidOsMessage_
-
-@class AndroidOsBundle;
-@class AndroidOsHandler;
-@protocol JavaLangRunnable;
-
-@interface AndroidOsMessage : NSObject {
- @public
-  jint what_;
-  jint arg1_;
-  jint arg2_;
-  id obj_;
-  jint flags_;
-  jlong when_;
-  AndroidOsBundle *data_;
-  AndroidOsHandler *target_;
-  id<JavaLangRunnable> callback_;
-  AndroidOsMessage *next_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)copyFromWithAndroidOsMessage:(AndroidOsMessage *)o OBJC_METHOD_FAMILY_NONE;
-
-- (jint)describeContents;
-
-- (id<JavaLangRunnable>)getCallback;
-
-- (AndroidOsBundle *)getData;
-
-- (AndroidOsHandler *)getTarget;
-
-- (jlong)getWhen;
-
-+ (AndroidOsMessage *)obtain;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what
-                                         withInt:(jint)arg1
-                                         withInt:(jint)arg2;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what
-                                         withInt:(jint)arg1
-                                         withInt:(jint)arg2
-                                          withId:(id)obj;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what
-                                          withId:(id)obj;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                            withJavaLangRunnable:(id<JavaLangRunnable>)callback;
-
-+ (AndroidOsMessage *)obtainWithAndroidOsMessage:(AndroidOsMessage *)orig;
-
-- (AndroidOsBundle *)peekData;
-
-- (void)recycle;
-
-- (void)sendToTarget;
-
-- (void)setDataWithAndroidOsBundle:(AndroidOsBundle *)data;
-
-- (void)setTargetWithAndroidOsHandler:(AndroidOsHandler *)target;
-
-- (NSString *)description;
-
-#pragma mark Package-Private
-
-- (void)clearForRecycle;
-
-- (jboolean)isInUse;
-
-- (void)markInUse;
-
-- (NSString *)toStringWithLong:(jlong)now;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsMessage)
-
-J2OBJC_FIELD_SETTER(AndroidOsMessage, obj_, id)
-J2OBJC_FIELD_SETTER(AndroidOsMessage, data_, AndroidOsBundle *)
-J2OBJC_FIELD_SETTER(AndroidOsMessage, target_, AndroidOsHandler *)
-J2OBJC_FIELD_SETTER(AndroidOsMessage, callback_, id<JavaLangRunnable>)
-J2OBJC_FIELD_SETTER(AndroidOsMessage, next_, AndroidOsMessage *)
-
-inline jint AndroidOsMessage_get_FLAG_IN_USE();
-#define AndroidOsMessage_FLAG_IN_USE 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsMessage, FLAG_IN_USE, jint)
-
-inline jint AndroidOsMessage_get_FLAGS_RESERVED();
-#define AndroidOsMessage_FLAGS_RESERVED -2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsMessage, FLAGS_RESERVED, jint)
-
-inline jint AndroidOsMessage_get_FLAGS_TO_CLEAR_ON_COPY_FROM();
-#define AndroidOsMessage_FLAGS_TO_CLEAR_ON_COPY_FROM -1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsMessage, FLAGS_TO_CLEAR_ON_COPY_FROM, jint)
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtain();
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsMessage_(AndroidOsMessage *orig);
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_(AndroidOsHandler *h);
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withJavaLangRunnable_(AndroidOsHandler *h, id<JavaLangRunnable> callback);
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(AndroidOsHandler *h, jint what);
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(AndroidOsHandler *h, jint what, id obj);
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(AndroidOsHandler *h, jint what, jint arg1, jint arg2);
-
-FOUNDATION_EXPORT AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(AndroidOsHandler *h, jint what, jint arg1, jint arg2, id obj);
-
-FOUNDATION_EXPORT void AndroidOsMessage_init(AndroidOsMessage *self);
-
-FOUNDATION_EXPORT AndroidOsMessage *new_AndroidOsMessage_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsMessage *create_AndroidOsMessage_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsMessage)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsMessage")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsMessage.m b/core/iostest/daggerframework/main/androidbase/AndroidOsMessage.m
deleted file mode 100644
index 5c7c07c5f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsMessage.m
+++ /dev/null
@@ -1,389 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsBundle.h"
-#include "AndroidOsHandler.h"
-#include "AndroidOsMessage.h"
-#include "AndroidUtilTimeUtils.h"
-#include "J2ObjC_source.h"
-#include "android/os/SystemClock.h"
-#include "java/lang/Runnable.h"
-#include "java/lang/StringBuilder.h"
-
-inline id AndroidOsMessage_get_sPoolSync();
-static id AndroidOsMessage_sPoolSync;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsMessage, sPoolSync, id)
-
-inline AndroidOsMessage *AndroidOsMessage_get_sPool();
-inline AndroidOsMessage *AndroidOsMessage_set_sPool(AndroidOsMessage *value);
-static AndroidOsMessage *AndroidOsMessage_sPool;
-J2OBJC_STATIC_FIELD_OBJ(AndroidOsMessage, sPool, AndroidOsMessage *)
-
-inline jint AndroidOsMessage_get_sPoolSize();
-inline jint AndroidOsMessage_set_sPoolSize(jint value);
-inline jint *AndroidOsMessage_getRef_sPoolSize();
-static jint AndroidOsMessage_sPoolSize = 0;
-J2OBJC_STATIC_FIELD_PRIMITIVE(AndroidOsMessage, sPoolSize, jint)
-
-inline jint AndroidOsMessage_get_MAX_POOL_SIZE();
-#define AndroidOsMessage_MAX_POOL_SIZE 10
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsMessage, MAX_POOL_SIZE, jint)
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsMessage)
-
-@implementation AndroidOsMessage
-
-+ (AndroidOsMessage *)obtain {
-  return AndroidOsMessage_obtain();
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsMessage:(AndroidOsMessage *)orig {
-  return AndroidOsMessage_obtainWithAndroidOsMessage_(orig);
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_(h);
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                            withJavaLangRunnable:(id<JavaLangRunnable>)callback {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withJavaLangRunnable_(h, callback);
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(h, what);
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what
-                                          withId:(id)obj {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(h, what, obj);
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what
-                                         withInt:(jint)arg1
-                                         withInt:(jint)arg2 {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(h, what, arg1, arg2);
-}
-
-+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
-                                         withInt:(jint)what
-                                         withInt:(jint)arg1
-                                         withInt:(jint)arg2
-                                          withId:(id)obj {
-  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(h, what, arg1, arg2, obj);
-}
-
-- (void)recycle {
-  [self clearForRecycle];
-  @synchronized(AndroidOsMessage_sPoolSync) {
-    if (AndroidOsMessage_sPoolSize < AndroidOsMessage_MAX_POOL_SIZE) {
-      JreStrongAssign(&next_, AndroidOsMessage_sPool);
-      JreStrongAssign(&AndroidOsMessage_sPool, self);
-      AndroidOsMessage_sPoolSize++;
-    }
-  }
-}
-
-- (void)copyFromWithAndroidOsMessage:(AndroidOsMessage *)o {
-  self->flags_ = ((AndroidOsMessage *) nil_chk(o))->flags_ & ~AndroidOsMessage_FLAGS_TO_CLEAR_ON_COPY_FROM;
-  self->what_ = o->what_;
-  self->arg1_ = o->arg1_;
-  self->arg2_ = o->arg2_;
-  JreStrongAssign(&self->obj_, o->obj_);
-  if (o->data_ != nil) {
-    JreStrongAssign(&self->data_, (AndroidOsBundle *) cast_chk([o->data_ java_clone], [AndroidOsBundle class]));
-  }
-  else {
-    JreStrongAssign(&self->data_, nil);
-  }
-}
-
-- (jlong)getWhen {
-  return when_;
-}
-
-- (void)setTargetWithAndroidOsHandler:(AndroidOsHandler *)target {
-  JreStrongAssign(&self->target_, target);
-}
-
-- (AndroidOsHandler *)getTarget {
-  return target_;
-}
-
-- (id<JavaLangRunnable>)getCallback {
-  return callback_;
-}
-
-- (AndroidOsBundle *)getData {
-  if (data_ == nil) {
-    JreStrongAssignAndConsume(&data_, new_AndroidOsBundle_init());
-  }
-  return data_;
-}
-
-- (AndroidOsBundle *)peekData {
-  return data_;
-}
-
-- (void)setDataWithAndroidOsBundle:(AndroidOsBundle *)data {
-  JreStrongAssign(&self->data_, data);
-}
-
-- (void)sendToTarget {
-  [((AndroidOsHandler *) nil_chk(target_)) sendMessageWithAndroidOsMessage:self];
-}
-
-- (void)clearForRecycle {
-  flags_ = 0;
-  what_ = 0;
-  arg1_ = 0;
-  arg2_ = 0;
-  JreStrongAssign(&obj_, nil);
-  when_ = 0;
-  JreStrongAssign(&target_, nil);
-  JreStrongAssign(&callback_, nil);
-  JreStrongAssign(&data_, nil);
-}
-
-- (jboolean)isInUse {
-  return (flags_ & AndroidOsMessage_FLAG_IN_USE) == AndroidOsMessage_FLAG_IN_USE;
-}
-
-- (void)markInUse {
-  flags_ |= AndroidOsMessage_FLAG_IN_USE;
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsMessage_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (NSString *)description {
-  return [self toStringWithLong:AndroidOsSystemClock_uptimeMillis()];
-}
-
-- (NSString *)toStringWithLong:(jlong)now {
-  JavaLangStringBuilder *b = create_JavaLangStringBuilder_init();
-  [b appendWithNSString:@"{ what="];
-  [b appendWithInt:what_];
-  [b appendWithNSString:@" when="];
-  AndroidUtilTimeUtils_formatDurationWithLong_withJavaLangStringBuilder_(when_ - now, b);
-  if (arg1_ != 0) {
-    [b appendWithNSString:@" arg1="];
-    [b appendWithInt:arg1_];
-  }
-  if (arg2_ != 0) {
-    [b appendWithNSString:@" arg2="];
-    [b appendWithInt:arg2_];
-  }
-  if (obj_ != nil) {
-    [b appendWithNSString:@" obj="];
-    [b appendWithId:obj_];
-  }
-  [b appendWithNSString:@" }"];
-  return [b description];
-}
-
-- (jint)describeContents {
-  return 0;
-}
-
-- (void)dealloc {
-  RELEASE_(obj_);
-  RELEASE_(data_);
-  RELEASE_(target_);
-  RELEASE_(callback_);
-  RELEASE_(next_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidOsMessage;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 2, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 3, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 4, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 5, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 6, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x9, 0, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 9, 2, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsHandler;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangRunnable;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x0, 12, 13, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(obtain);
-  methods[1].selector = @selector(obtainWithAndroidOsMessage:);
-  methods[2].selector = @selector(obtainWithAndroidOsHandler:);
-  methods[3].selector = @selector(obtainWithAndroidOsHandler:withJavaLangRunnable:);
-  methods[4].selector = @selector(obtainWithAndroidOsHandler:withInt:);
-  methods[5].selector = @selector(obtainWithAndroidOsHandler:withInt:withId:);
-  methods[6].selector = @selector(obtainWithAndroidOsHandler:withInt:withInt:withInt:);
-  methods[7].selector = @selector(obtainWithAndroidOsHandler:withInt:withInt:withInt:withId:);
-  methods[8].selector = @selector(recycle);
-  methods[9].selector = @selector(copyFromWithAndroidOsMessage:);
-  methods[10].selector = @selector(getWhen);
-  methods[11].selector = @selector(setTargetWithAndroidOsHandler:);
-  methods[12].selector = @selector(getTarget);
-  methods[13].selector = @selector(getCallback);
-  methods[14].selector = @selector(getData);
-  methods[15].selector = @selector(peekData);
-  methods[16].selector = @selector(setDataWithAndroidOsBundle:);
-  methods[17].selector = @selector(sendToTarget);
-  methods[18].selector = @selector(clearForRecycle);
-  methods[19].selector = @selector(isInUse);
-  methods[20].selector = @selector(markInUse);
-  methods[21].selector = @selector(init);
-  methods[22].selector = @selector(description);
-  methods[23].selector = @selector(toStringWithLong:);
-  methods[24].selector = @selector(describeContents);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "what_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "arg1_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "arg2_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "obj_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
-    { "FLAG_IN_USE", "I", .constantValue.asInt = AndroidOsMessage_FLAG_IN_USE, 0x18, -1, -1, -1, -1 },
-    { "FLAGS_RESERVED", "I", .constantValue.asInt = AndroidOsMessage_FLAGS_RESERVED, 0x18, -1, -1, -1, -1 },
-    { "FLAGS_TO_CLEAR_ON_COPY_FROM", "I", .constantValue.asInt = AndroidOsMessage_FLAGS_TO_CLEAR_ON_COPY_FROM, 0x18, -1, -1, -1, -1 },
-    { "flags_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "when_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "data_", "LAndroidOsBundle;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "target_", "LAndroidOsHandler;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "callback_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "next_", "LAndroidOsMessage;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "sPoolSync", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
-    { "sPool", "LAndroidOsMessage;", .constantValue.asLong = 0, 0xa, -1, 15, -1, -1 },
-    { "sPoolSize", "I", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
-    { "MAX_POOL_SIZE", "I", .constantValue.asInt = AndroidOsMessage_MAX_POOL_SIZE, 0x1a, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "obtain", "LAndroidOsMessage;", "LAndroidOsHandler;", "LAndroidOsHandler;LJavaLangRunnable;", "LAndroidOsHandler;I", "LAndroidOsHandler;ILNSObject;", "LAndroidOsHandler;III", "LAndroidOsHandler;IIILNSObject;", "copyFrom", "setTarget", "setData", "LAndroidOsBundle;", "toString", "J", &AndroidOsMessage_sPoolSync, &AndroidOsMessage_sPool, &AndroidOsMessage_sPoolSize };
-  static const J2ObjcClassInfo _AndroidOsMessage = { "Message", "android.os", ptrTable, methods, fields, 7, 0x11, 25, 17, -1, -1, -1, -1, -1 };
-  return &_AndroidOsMessage;
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsMessage class]) {
-    JreStrongAssignAndConsume(&AndroidOsMessage_sPoolSync, new_NSObject_init());
-    J2OBJC_SET_INITIALIZED(AndroidOsMessage)
-  }
-}
-
-@end
-
-AndroidOsMessage *AndroidOsMessage_obtain() {
-  AndroidOsMessage_initialize();
-  @synchronized(AndroidOsMessage_sPoolSync) {
-    if (AndroidOsMessage_sPool != nil) {
-      AndroidOsMessage *m = AndroidOsMessage_sPool;
-      JreStrongAssign(&AndroidOsMessage_sPool, m->next_);
-      JreStrongAssign(&m->next_, nil);
-      AndroidOsMessage_sPoolSize--;
-      return m;
-    }
-  }
-  return create_AndroidOsMessage_init();
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsMessage_(AndroidOsMessage *orig) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  ((AndroidOsMessage *) nil_chk(m))->what_ = ((AndroidOsMessage *) nil_chk(orig))->what_;
-  m->arg1_ = orig->arg1_;
-  m->arg2_ = orig->arg2_;
-  JreStrongAssign(&m->obj_, orig->obj_);
-  if (orig->data_ != nil) {
-    JreStrongAssignAndConsume(&m->data_, new_AndroidOsBundle_initWithAndroidOsBundle_(orig->data_));
-  }
-  JreStrongAssign(&m->target_, orig->target_);
-  JreStrongAssign(&m->callback_, orig->callback_);
-  return m;
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_(AndroidOsHandler *h) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->target_, h);
-  return m;
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withJavaLangRunnable_(AndroidOsHandler *h, id<JavaLangRunnable> callback) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->target_, h);
-  JreStrongAssign(&m->callback_, callback);
-  return m;
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(AndroidOsHandler *h, jint what) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->target_, h);
-  m->what_ = what;
-  return m;
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(AndroidOsHandler *h, jint what, id obj) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->target_, h);
-  m->what_ = what;
-  JreStrongAssign(&m->obj_, obj);
-  return m;
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(AndroidOsHandler *h, jint what, jint arg1, jint arg2) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->target_, h);
-  m->what_ = what;
-  m->arg1_ = arg1;
-  m->arg2_ = arg2;
-  return m;
-}
-
-AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(AndroidOsHandler *h, jint what, jint arg1, jint arg2, id obj) {
-  AndroidOsMessage_initialize();
-  AndroidOsMessage *m = AndroidOsMessage_obtain();
-  JreStrongAssign(&((AndroidOsMessage *) nil_chk(m))->target_, h);
-  m->what_ = what;
-  m->arg1_ = arg1;
-  m->arg2_ = arg2;
-  JreStrongAssign(&m->obj_, obj);
-  return m;
-}
-
-void AndroidOsMessage_init(AndroidOsMessage *self) {
-  NSObject_init(self);
-}
-
-AndroidOsMessage *new_AndroidOsMessage_init() {
-  J2OBJC_NEW_IMPL(AndroidOsMessage, init)
-}
-
-AndroidOsMessage *create_AndroidOsMessage_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsMessage, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsMessage)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsMessageQueue.h b/core/iostest/daggerframework/main/androidbase/AndroidOsMessageQueue.h
deleted file mode 100644
index 04ec863b1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsMessageQueue.h
+++ /dev/null
@@ -1,88 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsMessageQueue")
-#ifdef RESTRICT_AndroidOsMessageQueue
-#define INCLUDE_ALL_AndroidOsMessageQueue 0
-#else
-#define INCLUDE_ALL_AndroidOsMessageQueue 1
-#endif
-#undef RESTRICT_AndroidOsMessageQueue
-
-#if !defined (AndroidOsMessageQueue_) && (INCLUDE_ALL_AndroidOsMessageQueue || defined(INCLUDE_AndroidOsMessageQueue))
-#define AndroidOsMessageQueue_
-
-@class AndroidOsHandler;
-@class AndroidOsMessage;
-@protocol AndroidOsMessageQueue_IdleHandler;
-@protocol AndroidOsThreadNudger;
-@protocol JavaLangRunnable;
-
-@interface AndroidOsMessageQueue : NSObject {
- @public
-  AndroidOsMessage *mMessages_;
-  jboolean mQuitAllowed_;
-}
-
-#pragma mark Public
-
-- (void)addIdleHandlerWithAndroidOsMessageQueue_IdleHandler:(id<AndroidOsMessageQueue_IdleHandler>)handler;
-
-- (void)removeIdleHandlerWithAndroidOsMessageQueue_IdleHandler:(id<AndroidOsMessageQueue_IdleHandler>)handler;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithAndroidOsThreadNudger:(id<AndroidOsThreadNudger>)threadNudger;
-
-- (jboolean)enqueueMessageWithAndroidOsMessage:(AndroidOsMessage *)msg
-                                      withLong:(jlong)when;
-
-- (AndroidOsMessage *)next;
-
-- (void)removeCallbacksAndMessagesWithAndroidOsHandler:(AndroidOsHandler *)h
-                                                withId:(id)object;
-
-- (jboolean)removeMessagesWithAndroidOsHandler:(AndroidOsHandler *)h
-                                       withInt:(jint)what
-                                        withId:(id)object
-                                   withBoolean:(jboolean)doRemove;
-
-- (void)removeMessagesWithAndroidOsHandler:(AndroidOsHandler *)h
-                      withJavaLangRunnable:(id<JavaLangRunnable>)r
-                                    withId:(id)object;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsMessageQueue)
-
-J2OBJC_FIELD_SETTER(AndroidOsMessageQueue, mMessages_, AndroidOsMessage *)
-
-FOUNDATION_EXPORT void AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(AndroidOsMessageQueue *self, id<AndroidOsThreadNudger> threadNudger);
-
-FOUNDATION_EXPORT AndroidOsMessageQueue *new_AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(id<AndroidOsThreadNudger> threadNudger) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsMessageQueue *create_AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(id<AndroidOsThreadNudger> threadNudger);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsMessageQueue)
-
-#endif
-
-#if !defined (AndroidOsMessageQueue_IdleHandler_) && (INCLUDE_ALL_AndroidOsMessageQueue || defined(INCLUDE_AndroidOsMessageQueue_IdleHandler))
-#define AndroidOsMessageQueue_IdleHandler_
-
-@protocol AndroidOsMessageQueue_IdleHandler < JavaObject >
-
-- (jboolean)queueIdle;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsMessageQueue_IdleHandler)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsMessageQueue_IdleHandler)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsMessageQueue")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsMessageQueue.m b/core/iostest/daggerframework/main/androidbase/AndroidOsMessageQueue.m
deleted file mode 100644
index 5c39c04e5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsMessageQueue.m
+++ /dev/null
@@ -1,449 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsHandler.h"
-#include "AndroidOsMessage.h"
-#include "AndroidOsMessageQueue.h"
-#include "AndroidOsThreadNudger.h"
-#include "AndroidUtilAndroidRuntimeException.h"
-#include "J2ObjC_source.h"
-#include "android/os/SystemClock.h"
-#include "android/util/Log.h"
-#include "java/lang/Integer.h"
-#include "java/lang/InterruptedException.h"
-#include "java/lang/Math.h"
-#include "java/lang/Runnable.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/Thread.h"
-#include "java/lang/UnsupportedOperationException.h"
-
-@interface AndroidOsMessageQueue () {
- @public
-  __unsafe_unretained id<AndroidOsThreadNudger> mThreadNudger_;
-  jboolean mQuiting_;
-  jboolean mBlocked_;
-  jint mPtr_;
-}
-
-- (void)nativeInit;
-
-- (void)nativeDestroy;
-
-- (void)dopNudgeThreadNow;
-
-- (void)dopNudgeThreadAtWithInt:(jint)timeoutMillis;
-
-- (void)testThreadTimerWithInt:(jint)timeout;
-
-- (void)callNudgeOnThread;
-
-- (void)callNudge;
-
-@end
-
-__attribute__((unused)) static void AndroidOsMessageQueue_nativeInit(AndroidOsMessageQueue *self);
-
-__attribute__((unused)) static void AndroidOsMessageQueue_dopNudgeThreadNow(AndroidOsMessageQueue *self);
-
-__attribute__((unused)) static void AndroidOsMessageQueue_dopNudgeThreadAtWithInt_(AndroidOsMessageQueue *self, jint timeoutMillis);
-
-@interface AndroidOsMessageQueue_1 : JavaLangThread {
- @public
-  AndroidOsMessageQueue *this$0_;
-  jint val$timeout_;
-}
-
-- (instancetype)initWithAndroidOsMessageQueue:(AndroidOsMessageQueue *)outer$
-                                      withInt:(jint)capture$0;
-
-- (void)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsMessageQueue_1)
-
-__attribute__((unused)) static void AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(AndroidOsMessageQueue_1 *self, AndroidOsMessageQueue *outer$, jint capture$0);
-
-__attribute__((unused)) static AndroidOsMessageQueue_1 *new_AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(AndroidOsMessageQueue *outer$, jint capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidOsMessageQueue_1 *create_AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(AndroidOsMessageQueue *outer$, jint capture$0);
-
-@interface AndroidOsMessageQueue_IdleHandler : NSObject
-
-@end
-
-@implementation AndroidOsMessageQueue
-
-NSOperationQueue *opQueue;
-
-- (void)nativeInit {
-  AndroidOsMessageQueue_nativeInit(self);
-}
-
-- (void)nativeDestroy {
-  
-}
-
-- (void)dopNudgeThreadNow {
-  AndroidOsMessageQueue_dopNudgeThreadNow(self);
-}
-
-- (void)dopNudgeThreadAtWithInt:(jint)timeoutMillis {
-  AndroidOsMessageQueue_dopNudgeThreadAtWithInt_(self, timeoutMillis);
-}
-
-- (void)testThreadTimerWithInt:(jint)timeout {
-  [create_AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(self, timeout) start];
-}
-
-- (void)callNudgeOnThread {
-  [opQueue addOperation:[NSBlockOperation blockOperationWithBlock:^{
-    [self callNudge];
-  }]];
-}
-
-- (void)callNudge {
-  [((id<AndroidOsThreadNudger>) nil_chk(mThreadNudger_)) nudge];
-}
-
-- (void)addIdleHandlerWithAndroidOsMessageQueue_IdleHandler:(id<AndroidOsMessageQueue_IdleHandler>)handler {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"We will be handing control back to native iOS thread, so no idle. May add back in the future.");
-}
-
-- (void)removeIdleHandlerWithAndroidOsMessageQueue_IdleHandler:(id<AndroidOsMessageQueue_IdleHandler>)handler {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"We will be handing control back to native iOS thread, so no idle. May add back in the future.");
-}
-
-- (instancetype)initWithAndroidOsThreadNudger:(id<AndroidOsThreadNudger>)threadNudger {
-  AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(self, threadNudger);
-  return self;
-}
-
-- (AndroidOsMessage *)next {
-  @synchronized(self) {
-    jlong now = AndroidOsSystemClock_uptimeMillis();
-    AndroidOsMessage *msg = mMessages_;
-    if (msg != nil) {
-      jlong when = msg->when_;
-      if (now >= when) {
-        mBlocked_ = false;
-        JreStrongAssign(&mMessages_, msg->next_);
-        JreStrongAssign(&msg->next_, nil);
-        [msg markInUse];
-        return msg;
-      }
-      else {
-        jint nudgeTimeout = (jint) JavaLangMath_minWithLong_withLong_(when - now, JavaLangInteger_MAX_VALUE);
-        AndroidOsMessageQueue_dopNudgeThreadAtWithInt_(self, nudgeTimeout);
-      }
-    }
-    mBlocked_ = true;
-    return nil;
-  }
-}
-
-- (jboolean)enqueueMessageWithAndroidOsMessage:(AndroidOsMessage *)msg
-                                      withLong:(jlong)when {
-  if ([((AndroidOsMessage *) nil_chk(msg)) isInUse]) {
-    @throw create_AndroidUtilAndroidRuntimeException_initWithNSString_(JreStrcat("@$", msg, @" This message is already in use."));
-  }
-  if (msg->target_ == nil && !mQuitAllowed_) {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"Main thread not allowed to quit");
-  }
-  jboolean needWake;
-  @synchronized(self) {
-    if (mQuiting_) {
-      JavaLangRuntimeException *e = create_JavaLangRuntimeException_initWithNSString_(JreStrcat("@$", msg->target_, @" sending message to a Handler on a dead thread"));
-      AndroidUtilLog_wWithNSString_withNSString_withNSException_(@"MessageQueue", [e getMessage], e);
-      return false;
-    }
-    else if (msg->target_ == nil) {
-      mQuiting_ = true;
-    }
-    msg->when_ = when;
-    AndroidOsMessage *p = mMessages_;
-    if (p == nil || when == 0 || when < p->when_) {
-      JreStrongAssign(&msg->next_, p);
-      JreStrongAssign(&mMessages_, msg);
-      needWake = mBlocked_;
-    }
-    else {
-      AndroidOsMessage *prev = nil;
-      while (p != nil && p->when_ <= when) {
-        prev = p;
-        p = p->next_;
-      }
-      JreStrongAssign(&msg->next_, ((AndroidOsMessage *) nil_chk(prev))->next_);
-      JreStrongAssign(&prev->next_, msg);
-      needWake = false;
-    }
-  }
-  if (needWake) {
-    AndroidOsMessageQueue_dopNudgeThreadNow(self);
-  }
-  return true;
-}
-
-- (jboolean)removeMessagesWithAndroidOsHandler:(AndroidOsHandler *)h
-                                       withInt:(jint)what
-                                        withId:(id)object
-                                   withBoolean:(jboolean)doRemove {
-  @synchronized(self) {
-    AndroidOsMessage *p = mMessages_;
-    jboolean found = false;
-    while (p != nil && p->target_ == h && p->what_ == what && (object == nil || p->obj_ == object)) {
-      if (!doRemove) return true;
-      found = true;
-      AndroidOsMessage *n = p->next_;
-      JreStrongAssign(&mMessages_, n);
-      [p recycle];
-      p = n;
-    }
-    while (p != nil) {
-      AndroidOsMessage *n = p->next_;
-      if (n != nil) {
-        if (n->target_ == h && n->what_ == what && (object == nil || n->obj_ == object)) {
-          if (!doRemove) return true;
-          found = true;
-          AndroidOsMessage *nn = n->next_;
-          [n recycle];
-          JreStrongAssign(&p->next_, nn);
-          continue;
-        }
-      }
-      p = n;
-    }
-    return found;
-  }
-}
-
-- (void)removeMessagesWithAndroidOsHandler:(AndroidOsHandler *)h
-                      withJavaLangRunnable:(id<JavaLangRunnable>)r
-                                    withId:(id)object {
-  if (r == nil) {
-    return;
-  }
-  @synchronized(self) {
-    AndroidOsMessage *p = mMessages_;
-    while (p != nil && p->target_ == h && p->callback_ == r && (object == nil || p->obj_ == object)) {
-      AndroidOsMessage *n = p->next_;
-      JreStrongAssign(&mMessages_, n);
-      [p recycle];
-      p = n;
-    }
-    while (p != nil) {
-      AndroidOsMessage *n = p->next_;
-      if (n != nil) {
-        if (n->target_ == h && n->callback_ == r && (object == nil || n->obj_ == object)) {
-          AndroidOsMessage *nn = n->next_;
-          [n recycle];
-          JreStrongAssign(&p->next_, nn);
-          continue;
-        }
-      }
-      p = n;
-    }
-  }
-}
-
-- (void)removeCallbacksAndMessagesWithAndroidOsHandler:(AndroidOsHandler *)h
-                                                withId:(id)object {
-  @synchronized(self) {
-    AndroidOsMessage *p = mMessages_;
-    while (p != nil && p->target_ == h && (object == nil || p->obj_ == object)) {
-      AndroidOsMessage *n = p->next_;
-      JreStrongAssign(&mMessages_, n);
-      [p recycle];
-      p = n;
-    }
-    while (p != nil) {
-      AndroidOsMessage *n = p->next_;
-      if (n != nil) {
-        if (n->target_ == h && (object == nil || n->obj_ == object)) {
-          AndroidOsMessage *nn = n->next_;
-          [n recycle];
-          JreStrongAssign(&p->next_, nn);
-          continue;
-        }
-      }
-      p = n;
-    }
-  }
-}
-
-- (void)__javaClone:(AndroidOsMessageQueue *)original {
-  [super __javaClone:original];
-  [mThreadNudger_ release];
-}
-
-- (void)dealloc {
-  RELEASE_(mMessages_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x102, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x102, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x102, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 2, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x102, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 5, 4, -1, -1, -1, -1 },
-    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsMessage;", 0x10, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10, 7, 8, -1, -1, -1, -1 },
-    { NULL, "Z", 0x10, 9, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x10, 9, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x10, 12, 13, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(nativeInit);
-  methods[1].selector = @selector(nativeDestroy);
-  methods[2].selector = @selector(dopNudgeThreadNow);
-  methods[3].selector = @selector(dopNudgeThreadAtWithInt:);
-  methods[4].selector = @selector(testThreadTimerWithInt:);
-  methods[5].selector = @selector(callNudgeOnThread);
-  methods[6].selector = @selector(callNudge);
-  methods[7].selector = @selector(addIdleHandlerWithAndroidOsMessageQueue_IdleHandler:);
-  methods[8].selector = @selector(removeIdleHandlerWithAndroidOsMessageQueue_IdleHandler:);
-  methods[9].selector = @selector(initWithAndroidOsThreadNudger:);
-  methods[10].selector = @selector(next);
-  methods[11].selector = @selector(enqueueMessageWithAndroidOsMessage:withLong:);
-  methods[12].selector = @selector(removeMessagesWithAndroidOsHandler:withInt:withId:withBoolean:);
-  methods[13].selector = @selector(removeMessagesWithAndroidOsHandler:withJavaLangRunnable:withId:);
-  methods[14].selector = @selector(removeCallbacksAndMessagesWithAndroidOsHandler:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mThreadNudger_", "LAndroidOsThreadNudger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mMessages_", "LAndroidOsMessage;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "mQuiting_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mQuitAllowed_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-    { "mBlocked_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mPtr_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "dopNudgeThreadAt", "I", "testThreadTimer", "addIdleHandler", "LAndroidOsMessageQueue_IdleHandler;", "removeIdleHandler", "LAndroidOsThreadNudger;", "enqueueMessage", "LAndroidOsMessage;J", "removeMessages", "LAndroidOsHandler;ILNSObject;Z", "LAndroidOsHandler;LJavaLangRunnable;LNSObject;", "removeCallbacksAndMessages", "LAndroidOsHandler;LNSObject;" };
-  static const J2ObjcClassInfo _AndroidOsMessageQueue = { "MessageQueue", "android.os", ptrTable, methods, fields, 7, 0x1, 15, 6, -1, 4, -1, -1, -1 };
-  return &_AndroidOsMessageQueue;
-}
-
-@end
-
-void AndroidOsMessageQueue_nativeInit(AndroidOsMessageQueue *self) {
-  if([NSThread isMainThread])
-  opQueue = [NSOperationQueue mainQueue];
-  else
-  opQueue = [[NSOperationQueue alloc] init];
-}
-
-void AndroidOsMessageQueue_dopNudgeThreadNow(AndroidOsMessageQueue *self) {
-  AndroidOsMessageQueue_dopNudgeThreadAtWithInt_(self, 0);
-}
-
-void AndroidOsMessageQueue_dopNudgeThreadAtWithInt_(AndroidOsMessageQueue *self, jint timeoutMillis) {
-  if(timeoutMillis <= 0){
-    [self callNudgeOnThread];
-  }else{
-    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (long)timeoutMillis + (long)1000000), dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
-      [self callNudgeOnThread];
-    });
-  }
-}
-
-void AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(AndroidOsMessageQueue *self, id<AndroidOsThreadNudger> threadNudger) {
-  NSObject_init(self);
-  self->mQuitAllowed_ = true;
-  self->mBlocked_ = true;
-  self->mThreadNudger_ = threadNudger;
-  AndroidOsMessageQueue_nativeInit(self);
-}
-
-AndroidOsMessageQueue *new_AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(id<AndroidOsThreadNudger> threadNudger) {
-  J2OBJC_NEW_IMPL(AndroidOsMessageQueue, initWithAndroidOsThreadNudger_, threadNudger)
-}
-
-AndroidOsMessageQueue *create_AndroidOsMessageQueue_initWithAndroidOsThreadNudger_(id<AndroidOsThreadNudger> threadNudger) {
-  J2OBJC_CREATE_IMPL(AndroidOsMessageQueue, initWithAndroidOsThreadNudger_, threadNudger)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsMessageQueue)
-
-@implementation AndroidOsMessageQueue_1
-
-- (instancetype)initWithAndroidOsMessageQueue:(AndroidOsMessageQueue *)outer$
-                                      withInt:(jint)capture$0 {
-  AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)run {
-  @try {
-    JavaLangThread_sleepWithLong_(val$timeout_);
-    AndroidOsMessageQueue_dopNudgeThreadNow(this$0_);
-  }
-  @catch (JavaLangInterruptedException *e) {
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidOsMessageQueue:withInt:);
-  methods[1].selector = @selector(run);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LAndroidOsMessageQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$timeout_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidOsMessageQueue;", "testThreadTimerWithInt:" };
-  static const J2ObjcClassInfo _AndroidOsMessageQueue_1 = { "", "android.os", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
-  return &_AndroidOsMessageQueue_1;
-}
-
-@end
-
-void AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(AndroidOsMessageQueue_1 *self, AndroidOsMessageQueue *outer$, jint capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$timeout_ = capture$0;
-  JavaLangThread_init(self);
-}
-
-AndroidOsMessageQueue_1 *new_AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(AndroidOsMessageQueue *outer$, jint capture$0) {
-  J2OBJC_NEW_IMPL(AndroidOsMessageQueue_1, initWithAndroidOsMessageQueue_withInt_, outer$, capture$0)
-}
-
-AndroidOsMessageQueue_1 *create_AndroidOsMessageQueue_1_initWithAndroidOsMessageQueue_withInt_(AndroidOsMessageQueue *outer$, jint capture$0) {
-  J2OBJC_CREATE_IMPL(AndroidOsMessageQueue_1, initWithAndroidOsMessageQueue_withInt_, outer$, capture$0)
-}
-
-@implementation AndroidOsMessageQueue_IdleHandler
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(queueIdle);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LAndroidOsMessageQueue;" };
-  static const J2ObjcClassInfo _AndroidOsMessageQueue_IdleHandler = { "IdleHandler", "android.os", ptrTable, methods, NULL, 7, 0x609, 1, 0, 0, -1, -1, -1, -1 };
-  return &_AndroidOsMessageQueue_IdleHandler;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsMessageQueue_IdleHandler)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsParcel.h b/core/iostest/daggerframework/main/androidbase/AndroidOsParcel.h
deleted file mode 100644
index 9fc316826..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsParcel.h
+++ /dev/null
@@ -1,314 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsParcel")
-#ifdef RESTRICT_AndroidOsParcel
-#define INCLUDE_ALL_AndroidOsParcel 0
-#else
-#define INCLUDE_ALL_AndroidOsParcel 1
-#endif
-#undef RESTRICT_AndroidOsParcel
-
-#if !defined (AndroidOsParcel_) && (INCLUDE_ALL_AndroidOsParcel || defined(INCLUDE_AndroidOsParcel))
-#define AndroidOsParcel_
-
-@class AndroidOsBundle;
-@class AndroidOsParcelFileDescriptor;
-@class AndroidUtilSparseArray;
-@class AndroidUtilSparseBooleanArray;
-@class IOSBooleanArray;
-@class IOSByteArray;
-@class IOSCharArray;
-@class IOSDoubleArray;
-@class IOSFloatArray;
-@class IOSIntArray;
-@class IOSLongArray;
-@class IOSObjectArray;
-@class JavaIoFileDescriptor;
-@class JavaLangClassLoader;
-@class JavaLangException;
-@class JavaUtilArrayList;
-@class JavaUtilHashMap;
-@protocol AndroidOsIBinder;
-@protocol AndroidOsIInterface;
-@protocol AndroidOsParcelable;
-@protocol AndroidOsParcelable_Creator;
-@protocol JavaIoSerializable;
-@protocol JavaLangCharSequence;
-@protocol JavaUtilList;
-@protocol JavaUtilMap;
-
-@interface AndroidOsParcel : NSObject
-
-#pragma mark Public
-
-- (void)appendFromWithAndroidOsParcel:(AndroidOsParcel *)parcel
-                              withInt:(jint)offset
-                              withInt:(jint)length;
-
-- (IOSObjectArray *)createBinderArray;
-
-- (JavaUtilArrayList *)createBinderArrayList;
-
-- (IOSBooleanArray *)createBooleanArray;
-
-- (IOSByteArray *)createByteArray;
-
-- (IOSCharArray *)createCharArray;
-
-- (IOSDoubleArray *)createDoubleArray;
-
-- (IOSFloatArray *)createFloatArray;
-
-- (IOSIntArray *)createIntArray;
-
-- (IOSLongArray *)createLongArray;
-
-- (IOSObjectArray *)createStringArray;
-
-- (JavaUtilArrayList *)createStringArrayList;
-
-- (IOSObjectArray *)createTypedArrayWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c;
-
-- (JavaUtilArrayList *)createTypedArrayListWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c;
-
-- (jint)dataAvail;
-
-- (jint)dataCapacity;
-
-- (jint)dataPosition;
-
-- (jint)dataSize;
-
-- (void)enforceInterfaceWithNSString:(NSString *)interfaceName;
-
-- (jboolean)hasFileDescriptors;
-
-- (IOSByteArray *)marshall;
-
-+ (AndroidOsParcel *)obtain;
-
-- (IOSObjectArray *)readArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (JavaUtilArrayList *)readArrayListWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (void)readBinderArrayWithAndroidOsIBinderArray:(IOSObjectArray *)val;
-
-- (void)readBinderListWithJavaUtilList:(id<JavaUtilList>)list;
-
-- (void)readBooleanArrayWithBooleanArray:(IOSBooleanArray *)val;
-
-- (AndroidOsBundle *)readBundle;
-
-- (AndroidOsBundle *)readBundleWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (jbyte)readByte;
-
-- (void)readByteArrayWithByteArray:(IOSByteArray *)val;
-
-- (void)readCharArrayWithCharArray:(IOSCharArray *)val;
-
-- (id<JavaLangCharSequence>)readCharSequence;
-
-- (IOSObjectArray *)readCharSequenceArray;
-
-- (jdouble)readDouble;
-
-- (void)readDoubleArrayWithDoubleArray:(IOSDoubleArray *)val;
-
-- (void)readException;
-
-- (void)readExceptionWithInt:(jint)code
-                withNSString:(NSString *)msg;
-
-- (jint)readExceptionCode;
-
-- (AndroidOsParcelFileDescriptor *)readFileDescriptor;
-
-- (jfloat)readFloat;
-
-- (void)readFloatArrayWithFloatArray:(IOSFloatArray *)val;
-
-- (JavaUtilHashMap *)readHashMapWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (jint)readInt;
-
-- (void)readIntArrayWithIntArray:(IOSIntArray *)val;
-
-- (void)readListWithJavaUtilList:(id<JavaUtilList>)outVal
-         withJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (jlong)readLong;
-
-- (void)readLongArrayWithLongArray:(IOSLongArray *)val;
-
-- (void)readMapWithJavaUtilMap:(id<JavaUtilMap>)outVal
-       withJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (id<AndroidOsParcelable>)readParcelableWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (IOSObjectArray *)readParcelableArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (id<JavaIoSerializable>)readSerializable;
-
-- (AndroidUtilSparseArray *)readSparseArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (AndroidUtilSparseBooleanArray *)readSparseBooleanArray;
-
-- (NSString *)readString;
-
-- (IOSObjectArray *)readStringArray;
-
-- (void)readStringArrayWithNSStringArray:(IOSObjectArray *)val;
-
-- (void)readStringListWithJavaUtilList:(id<JavaUtilList>)list;
-
-- (id<AndroidOsIBinder>)readStrongBinder;
-
-- (IOSObjectArray *)readTypedArrayWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c;
-
-- (void)readTypedArrayWithNSObjectArray:(IOSObjectArray *)val
-        withAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c;
-
-- (void)readTypedListWithJavaUtilList:(id<JavaUtilList>)list
-      withAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c;
-
-- (id)readValueWithJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (void)recycle;
-
-- (void)setDataCapacityWithInt:(jint)size;
-
-- (void)setDataPositionWithInt:(jint)pos;
-
-- (void)setDataSizeWithInt:(jint)size;
-
-- (void)unmarshallWithByteArray:(IOSByteArray *)data
-                        withInt:(jint)offest
-                        withInt:(jint)length;
-
-- (void)writeArrayWithNSObjectArray:(IOSObjectArray *)val;
-
-- (void)writeBinderArrayWithAndroidOsIBinderArray:(IOSObjectArray *)val;
-
-- (void)writeBinderListWithJavaUtilList:(id<JavaUtilList>)val;
-
-- (void)writeBooleanArrayWithBooleanArray:(IOSBooleanArray *)val;
-
-- (void)writeBundleWithAndroidOsBundle:(AndroidOsBundle *)val;
-
-- (void)writeByteWithByte:(jbyte)val;
-
-- (void)writeByteArrayWithByteArray:(IOSByteArray *)b;
-
-- (void)writeByteArrayWithByteArray:(IOSByteArray *)b
-                            withInt:(jint)offset
-                            withInt:(jint)len;
-
-- (void)writeCharArrayWithCharArray:(IOSCharArray *)val;
-
-- (void)writeCharSequenceWithJavaLangCharSequence:(id<JavaLangCharSequence>)val;
-
-- (void)writeCharSequenceArrayWithJavaLangCharSequenceArray:(IOSObjectArray *)val;
-
-- (void)writeDoubleWithDouble:(jdouble)val;
-
-- (void)writeDoubleArrayWithDoubleArray:(IOSDoubleArray *)val;
-
-- (void)writeExceptionWithJavaLangException:(JavaLangException *)e;
-
-- (void)writeFileDescriptorWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)val;
-
-- (void)writeFloatWithFloat:(jfloat)val;
-
-- (void)writeFloatArrayWithFloatArray:(IOSFloatArray *)val;
-
-- (void)writeIntWithInt:(jint)val;
-
-- (void)writeIntArrayWithIntArray:(IOSIntArray *)val;
-
-- (void)writeInterfaceTokenWithNSString:(NSString *)interfaceName;
-
-- (void)writeListWithJavaUtilList:(id<JavaUtilList>)val;
-
-- (void)writeLongWithLong:(jlong)val;
-
-- (void)writeLongArrayWithLongArray:(IOSLongArray *)val;
-
-- (void)writeMapWithJavaUtilMap:(id<JavaUtilMap>)val;
-
-- (void)writeNoException;
-
-- (void)writeParcelableWithAndroidOsParcelable:(id<AndroidOsParcelable>)p
-                                       withInt:(jint)parcelableFlags;
-
-- (void)writeParcelableArrayWithAndroidOsParcelableArray:(IOSObjectArray *)value
-                                                 withInt:(jint)parcelableFlags;
-
-- (void)writeSerializableWithJavaIoSerializable:(id<JavaIoSerializable>)s;
-
-- (void)writeSparseArrayWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)val;
-
-- (void)writeSparseBooleanArrayWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)val;
-
-- (void)writeStringWithNSString:(NSString *)val;
-
-- (void)writeStringArrayWithNSStringArray:(IOSObjectArray *)val;
-
-- (void)writeStringListWithJavaUtilList:(id<JavaUtilList>)val;
-
-- (void)writeStrongBinderWithAndroidOsIBinder:(id<AndroidOsIBinder>)val;
-
-- (void)writeStrongInterfaceWithAndroidOsIInterface:(id<AndroidOsIInterface>)val;
-
-- (void)writeTypedArrayWithAndroidOsParcelableArray:(IOSObjectArray *)val
-                                            withInt:(jint)parcelableFlags;
-
-- (void)writeTypedListWithJavaUtilList:(id<JavaUtilList>)val;
-
-- (void)writeValueWithId:(id)v;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-+ (AndroidOsParcel *)obtainWithInt:(jint)obj;
-
-#pragma mark Package-Private
-
-+ (void)closeFileDescriptorWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)desc;
-
-+ (JavaIoFileDescriptor *)openFileDescriptorWithNSString:(NSString *)file
-                                                 withInt:(jint)mode;
-
-- (void)readMapInternalWithJavaUtilMap:(id<JavaUtilMap>)outVal
-                               withInt:(jint)N
-               withJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (void)writeMapInternalWithJavaUtilMap:(id<JavaUtilMap>)val;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsParcel)
-
-inline id<AndroidOsParcelable_Creator> AndroidOsParcel_get_STRING_CREATOR();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT id<AndroidOsParcelable_Creator> AndroidOsParcel_STRING_CREATOR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, STRING_CREATOR, id<AndroidOsParcelable_Creator>)
-
-FOUNDATION_EXPORT AndroidOsParcel *AndroidOsParcel_obtain();
-
-FOUNDATION_EXPORT JavaIoFileDescriptor *AndroidOsParcel_openFileDescriptorWithNSString_withInt_(NSString *file, jint mode);
-
-FOUNDATION_EXPORT void AndroidOsParcel_closeFileDescriptorWithJavaIoFileDescriptor_(JavaIoFileDescriptor *desc);
-
-FOUNDATION_EXPORT AndroidOsParcel *AndroidOsParcel_obtainWithInt_(jint obj);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsParcel)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsParcel")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsParcel.m b/core/iostest/daggerframework/main/androidbase/AndroidOsParcel.m
deleted file mode 100644
index decbdfb1d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsParcel.m
+++ /dev/null
@@ -1,2007 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsBadParcelableException.h"
-#include "AndroidOsBundle.h"
-#include "AndroidOsIBinder.h"
-#include "AndroidOsIInterface.h"
-#include "AndroidOsParcel.h"
-#include "AndroidOsParcelFileDescriptor.h"
-#include "AndroidOsParcelable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/Log.h"
-#include "android/util/SparseArray.h"
-#include "android/util/SparseBooleanArray.h"
-#include "java/io/ByteArrayInputStream.h"
-#include "java/io/ByteArrayOutputStream.h"
-#include "java/io/FileDescriptor.h"
-#include "java/io/IOException.h"
-#include "java/io/ObjectInputStream.h"
-#include "java/io/ObjectOutputStream.h"
-#include "java/io/Serializable.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Byte.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/ClassLoader.h"
-#include "java/lang/ClassNotFoundException.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Double.h"
-#include "java/lang/Exception.h"
-#include "java/lang/Float.h"
-#include "java/lang/IllegalAccessException.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/NoSuchFieldException.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/SecurityException.h"
-#include "java/lang/Short.h"
-#include "java/lang/System.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/reflect/Field.h"
-#include "java/util/ArrayList.h"
-#include "java/util/HashMap.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-
-@interface AndroidOsParcel () {
- @public
-  jint mObject_;
-  jint mOwnObject_;
-  JavaLangRuntimeException *mStack_;
-}
-
-- (void)writeNativeWithByteArray:(IOSByteArray *)b
-                         withInt:(jint)offset
-                         withInt:(jint)len;
-
-- (JavaIoFileDescriptor *)internalReadFileDescriptor;
-
-- (instancetype)initWithInt:(jint)obj;
-
-- (void)freeBuffer;
-
-- (void)init__WithInt:(jint)obj OBJC_METHOD_FAMILY_NONE;
-
-- (void)destroy;
-
-- (void)readListInternalWithJavaUtilList:(id<JavaUtilList>)outVal
-                                 withInt:(jint)N
-                 withJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (void)readArrayInternalWithNSObjectArray:(IOSObjectArray *)outVal
-                                   withInt:(jint)N
-                   withJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (void)readSparseArrayInternalWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)outVal
-                                                  withInt:(jint)N
-                                  withJavaLangClassLoader:(JavaLangClassLoader *)loader;
-
-- (void)readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)outVal
-                                                                withInt:(jint)N;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidOsParcel, mStack_, JavaLangRuntimeException *)
-
-inline jboolean AndroidOsParcel_get_DEBUG_RECYCLE();
-#define AndroidOsParcel_DEBUG_RECYCLE false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, DEBUG_RECYCLE, jboolean)
-
-inline NSString *AndroidOsParcel_get_TAG();
-static NSString *AndroidOsParcel_TAG = @"Parcel";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, TAG, NSString *)
-
-inline jint AndroidOsParcel_get_POOL_SIZE();
-#define AndroidOsParcel_POOL_SIZE 6
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, POOL_SIZE, jint)
-
-inline IOSObjectArray *AndroidOsParcel_get_sOwnedPool();
-static IOSObjectArray *AndroidOsParcel_sOwnedPool;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, sOwnedPool, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidOsParcel_get_sHolderPool();
-static IOSObjectArray *AndroidOsParcel_sHolderPool;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, sHolderPool, IOSObjectArray *)
-
-inline jint AndroidOsParcel_get_VAL_NULL();
-#define AndroidOsParcel_VAL_NULL -1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_NULL, jint)
-
-inline jint AndroidOsParcel_get_VAL_STRING();
-#define AndroidOsParcel_VAL_STRING 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_STRING, jint)
-
-inline jint AndroidOsParcel_get_VAL_INTEGER();
-#define AndroidOsParcel_VAL_INTEGER 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_INTEGER, jint)
-
-inline jint AndroidOsParcel_get_VAL_MAP();
-#define AndroidOsParcel_VAL_MAP 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_MAP, jint)
-
-inline jint AndroidOsParcel_get_VAL_BUNDLE();
-#define AndroidOsParcel_VAL_BUNDLE 3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BUNDLE, jint)
-
-inline jint AndroidOsParcel_get_VAL_PARCELABLE();
-#define AndroidOsParcel_VAL_PARCELABLE 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_PARCELABLE, jint)
-
-inline jint AndroidOsParcel_get_VAL_SHORT();
-#define AndroidOsParcel_VAL_SHORT 5
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SHORT, jint)
-
-inline jint AndroidOsParcel_get_VAL_LONG();
-#define AndroidOsParcel_VAL_LONG 6
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_LONG, jint)
-
-inline jint AndroidOsParcel_get_VAL_FLOAT();
-#define AndroidOsParcel_VAL_FLOAT 7
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_FLOAT, jint)
-
-inline jint AndroidOsParcel_get_VAL_DOUBLE();
-#define AndroidOsParcel_VAL_DOUBLE 8
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_DOUBLE, jint)
-
-inline jint AndroidOsParcel_get_VAL_BOOLEAN();
-#define AndroidOsParcel_VAL_BOOLEAN 9
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BOOLEAN, jint)
-
-inline jint AndroidOsParcel_get_VAL_CHARSEQUENCE();
-#define AndroidOsParcel_VAL_CHARSEQUENCE 10
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_CHARSEQUENCE, jint)
-
-inline jint AndroidOsParcel_get_VAL_LIST();
-#define AndroidOsParcel_VAL_LIST 11
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_LIST, jint)
-
-inline jint AndroidOsParcel_get_VAL_SPARSEARRAY();
-#define AndroidOsParcel_VAL_SPARSEARRAY 12
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SPARSEARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_BYTEARRAY();
-#define AndroidOsParcel_VAL_BYTEARRAY 13
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BYTEARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_STRINGARRAY();
-#define AndroidOsParcel_VAL_STRINGARRAY 14
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_STRINGARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_IBINDER();
-#define AndroidOsParcel_VAL_IBINDER 15
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_IBINDER, jint)
-
-inline jint AndroidOsParcel_get_VAL_PARCELABLEARRAY();
-#define AndroidOsParcel_VAL_PARCELABLEARRAY 16
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_PARCELABLEARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_OBJECTARRAY();
-#define AndroidOsParcel_VAL_OBJECTARRAY 17
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_OBJECTARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_INTARRAY();
-#define AndroidOsParcel_VAL_INTARRAY 18
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_INTARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_LONGARRAY();
-#define AndroidOsParcel_VAL_LONGARRAY 19
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_LONGARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_BYTE();
-#define AndroidOsParcel_VAL_BYTE 20
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BYTE, jint)
-
-inline jint AndroidOsParcel_get_VAL_SERIALIZABLE();
-#define AndroidOsParcel_VAL_SERIALIZABLE 21
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SERIALIZABLE, jint)
-
-inline jint AndroidOsParcel_get_VAL_SPARSEBOOLEANARRAY();
-#define AndroidOsParcel_VAL_SPARSEBOOLEANARRAY 22
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_SPARSEBOOLEANARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_BOOLEANARRAY();
-#define AndroidOsParcel_VAL_BOOLEANARRAY 23
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_BOOLEANARRAY, jint)
-
-inline jint AndroidOsParcel_get_VAL_CHARSEQUENCEARRAY();
-#define AndroidOsParcel_VAL_CHARSEQUENCEARRAY 24
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, VAL_CHARSEQUENCEARRAY, jint)
-
-inline jint AndroidOsParcel_get_EX_SECURITY();
-#define AndroidOsParcel_EX_SECURITY -1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_SECURITY, jint)
-
-inline jint AndroidOsParcel_get_EX_BAD_PARCELABLE();
-#define AndroidOsParcel_EX_BAD_PARCELABLE -2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_BAD_PARCELABLE, jint)
-
-inline jint AndroidOsParcel_get_EX_ILLEGAL_ARGUMENT();
-#define AndroidOsParcel_EX_ILLEGAL_ARGUMENT -3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_ILLEGAL_ARGUMENT, jint)
-
-inline jint AndroidOsParcel_get_EX_NULL_POINTER();
-#define AndroidOsParcel_EX_NULL_POINTER -4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_NULL_POINTER, jint)
-
-inline jint AndroidOsParcel_get_EX_ILLEGAL_STATE();
-#define AndroidOsParcel_EX_ILLEGAL_STATE -5
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_ILLEGAL_STATE, jint)
-
-inline jint AndroidOsParcel_get_EX_HAS_REPLY_HEADER();
-#define AndroidOsParcel_EX_HAS_REPLY_HEADER -128
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcel, EX_HAS_REPLY_HEADER, jint)
-
-inline JavaUtilHashMap *AndroidOsParcel_get_mCreators();
-static JavaUtilHashMap *AndroidOsParcel_mCreators;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcel, mCreators, JavaUtilHashMap *)
-
-__attribute__((unused)) static jint AndroidOsParcel_dataAvail(AndroidOsParcel *self);
-
-__attribute__((unused)) static jint AndroidOsParcel_dataPosition(AndroidOsParcel *self);
-
-__attribute__((unused)) static void AndroidOsParcel_writeByteArrayWithByteArray_(AndroidOsParcel *self, IOSByteArray *b);
-
-__attribute__((unused)) static void AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(AndroidOsParcel *self, IOSByteArray *b, jint offset, jint len);
-
-__attribute__((unused)) static void AndroidOsParcel_writeIntWithInt_(AndroidOsParcel *self, jint val);
-
-__attribute__((unused)) static void AndroidOsParcel_writeLongWithLong_(AndroidOsParcel *self, jlong val);
-
-__attribute__((unused)) static void AndroidOsParcel_writeFloatWithFloat_(AndroidOsParcel *self, jfloat val);
-
-__attribute__((unused)) static void AndroidOsParcel_writeStringWithNSString_(AndroidOsParcel *self, NSString *val);
-
-__attribute__((unused)) static void AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(AndroidOsParcel *self, id<AndroidOsIBinder> val);
-
-__attribute__((unused)) static void AndroidOsParcel_writeByteWithByte_(AndroidOsParcel *self, jbyte val);
-
-__attribute__((unused)) static IOSBooleanArray *AndroidOsParcel_createBooleanArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static IOSIntArray *AndroidOsParcel_createIntArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static IOSLongArray *AndroidOsParcel_createLongArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static void AndroidOsParcel_writeValueWithId_(AndroidOsParcel *self, id v);
-
-__attribute__((unused)) static void AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(AndroidOsParcel *self, id<AndroidOsParcelable> p, jint parcelableFlags);
-
-__attribute__((unused)) static jint AndroidOsParcel_readExceptionCode(AndroidOsParcel *self);
-
-__attribute__((unused)) static void AndroidOsParcel_readExceptionWithInt_withNSString_(AndroidOsParcel *self, jint code, NSString *msg);
-
-__attribute__((unused)) static jint AndroidOsParcel_readInt(AndroidOsParcel *self);
-
-__attribute__((unused)) static jlong AndroidOsParcel_readLong(AndroidOsParcel *self);
-
-__attribute__((unused)) static jfloat AndroidOsParcel_readFloat(AndroidOsParcel *self);
-
-__attribute__((unused)) static jdouble AndroidOsParcel_readDouble(AndroidOsParcel *self);
-
-__attribute__((unused)) static NSString *AndroidOsParcel_readString(AndroidOsParcel *self);
-
-__attribute__((unused)) static id<JavaLangCharSequence> AndroidOsParcel_readCharSequence(AndroidOsParcel *self);
-
-__attribute__((unused)) static id<AndroidOsIBinder> AndroidOsParcel_readStrongBinder(AndroidOsParcel *self);
-
-__attribute__((unused)) static JavaIoFileDescriptor *AndroidOsParcel_internalReadFileDescriptor(AndroidOsParcel *self);
-
-__attribute__((unused)) static jbyte AndroidOsParcel_readByte(AndroidOsParcel *self);
-
-__attribute__((unused)) static JavaUtilHashMap *AndroidOsParcel_readHashMapWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static AndroidOsBundle *AndroidOsParcel_readBundleWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static IOSByteArray *AndroidOsParcel_createByteArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readStringArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readCharSequenceArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static JavaUtilArrayList *AndroidOsParcel_readArrayListWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static AndroidUtilSparseArray *AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static AndroidUtilSparseBooleanArray *AndroidOsParcel_readSparseBooleanArray(AndroidOsParcel *self);
-
-__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(AndroidOsParcel *self, id<AndroidOsParcelable_Creator> c);
-
-__attribute__((unused)) static id AndroidOsParcel_readValueWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static id<AndroidOsParcelable> AndroidOsParcel_readParcelableWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static IOSObjectArray *AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static id<JavaIoSerializable> AndroidOsParcel_readSerializable(AndroidOsParcel *self);
-
-__attribute__((unused)) static void AndroidOsParcel_initWithInt_(AndroidOsParcel *self, jint obj);
-
-__attribute__((unused)) static AndroidOsParcel *new_AndroidOsParcel_initWithInt_(jint obj) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidOsParcel *create_AndroidOsParcel_initWithInt_(jint obj);
-
-__attribute__((unused)) static void AndroidOsParcel_init__WithInt_(AndroidOsParcel *self, jint obj);
-
-__attribute__((unused)) static void AndroidOsParcel_destroy(AndroidOsParcel *self);
-
-__attribute__((unused)) static void AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, id<JavaUtilList> outVal, jint N, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static void AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, IOSObjectArray *outVal, jint N, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static void AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, AndroidUtilSparseArray *outVal, jint N, JavaLangClassLoader *loader);
-
-__attribute__((unused)) static void AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(AndroidOsParcel *self, AndroidUtilSparseBooleanArray *outVal, jint N);
-
-__attribute__((unused)) static IOSObjectArray *AndroidOsParcel__Annotations$0();
-
-@interface AndroidOsParcel_1 : NSObject < AndroidOsParcelable_Creator >
-
-- (instancetype)init;
-
-- (NSString *)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)source;
-
-- (IOSObjectArray *)newArrayWithInt:(jint)size OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcel_1)
-
-__attribute__((unused)) static void AndroidOsParcel_1_init(AndroidOsParcel_1 *self);
-
-__attribute__((unused)) static AndroidOsParcel_1 *new_AndroidOsParcel_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidOsParcel_1 *create_AndroidOsParcel_1_init();
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsParcel)
-
-id<AndroidOsParcelable_Creator> AndroidOsParcel_STRING_CREATOR;
-
-@implementation AndroidOsParcel
-
-+ (AndroidOsParcel *)obtain {
-  return AndroidOsParcel_obtain();
-}
-
-- (void)recycle {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (jint)dataSize {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (jint)dataAvail {
-  return AndroidOsParcel_dataAvail(self);
-}
-
-- (jint)dataPosition {
-  return AndroidOsParcel_dataPosition(self);
-}
-
-- (jint)dataCapacity {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)setDataSizeWithInt:(jint)size {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)setDataPositionWithInt:(jint)pos {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)setDataCapacityWithInt:(jint)size {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (IOSByteArray *)marshall {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)unmarshallWithByteArray:(IOSByteArray *)data
-                        withInt:(jint)offest
-                        withInt:(jint)length {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)appendFromWithAndroidOsParcel:(AndroidOsParcel *)parcel
-                              withInt:(jint)offset
-                              withInt:(jint)length {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (jboolean)hasFileDescriptors {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeInterfaceTokenWithNSString:(NSString *)interfaceName {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)enforceInterfaceWithNSString:(NSString *)interfaceName {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeByteArrayWithByteArray:(IOSByteArray *)b {
-  AndroidOsParcel_writeByteArrayWithByteArray_(self, b);
-}
-
-- (void)writeByteArrayWithByteArray:(IOSByteArray *)b
-                            withInt:(jint)offset
-                            withInt:(jint)len {
-  AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(self, b, offset, len);
-}
-
-- (void)writeNativeWithByteArray:(IOSByteArray *)b
-                         withInt:(jint)offset
-                         withInt:(jint)len {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeIntWithInt:(jint)val {
-  AndroidOsParcel_writeIntWithInt_(self, val);
-}
-
-- (void)writeLongWithLong:(jlong)val {
-  AndroidOsParcel_writeLongWithLong_(self, val);
-}
-
-- (void)writeFloatWithFloat:(jfloat)val {
-  AndroidOsParcel_writeFloatWithFloat_(self, val);
-}
-
-- (void)writeDoubleWithDouble:(jdouble)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeStringWithNSString:(NSString *)val {
-  AndroidOsParcel_writeStringWithNSString_(self, val);
-}
-
-- (void)writeCharSequenceWithJavaLangCharSequence:(id<JavaLangCharSequence>)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeStrongBinderWithAndroidOsIBinder:(id<AndroidOsIBinder>)val {
-  AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(self, val);
-}
-
-- (void)writeStrongInterfaceWithAndroidOsIInterface:(id<AndroidOsIInterface>)val {
-  AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(self, val == nil ? nil : [val asBinder]);
-}
-
-- (void)writeFileDescriptorWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeByteWithByte:(jbyte)val {
-  AndroidOsParcel_writeByteWithByte_(self, val);
-}
-
-- (void)writeMapWithJavaUtilMap:(id<JavaUtilMap>)val {
-  [self writeMapInternalWithJavaUtilMap:val];
-}
-
-- (void)writeMapInternalWithJavaUtilMap:(id<JavaUtilMap>)val {
-  if (val == nil) {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-    return;
-  }
-  id<JavaUtilSet> entries = [val entrySet];
-  AndroidOsParcel_writeIntWithInt_(self, [((id<JavaUtilSet>) nil_chk(entries)) size]);
-  for (id<JavaUtilMap_Entry> __strong e in entries) {
-    AndroidOsParcel_writeValueWithId_(self, [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]);
-    AndroidOsParcel_writeValueWithId_(self, [e getValue]);
-  }
-}
-
-- (void)writeBundleWithAndroidOsBundle:(AndroidOsBundle *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeListWithJavaUtilList:(id<JavaUtilList>)val {
-  if (val == nil) {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-    return;
-  }
-  jint N = [val size];
-  jint i = 0;
-  AndroidOsParcel_writeIntWithInt_(self, N);
-  while (i < N) {
-    AndroidOsParcel_writeValueWithId_(self, [val getWithInt:i]);
-    i++;
-  }
-}
-
-- (void)writeArrayWithNSObjectArray:(IOSObjectArray *)val {
-  if (val == nil) {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-    return;
-  }
-  jint N = val->size_;
-  jint i = 0;
-  AndroidOsParcel_writeIntWithInt_(self, N);
-  while (i < N) {
-    AndroidOsParcel_writeValueWithId_(self, IOSObjectArray_Get(val, i));
-    i++;
-  }
-}
-
-- (void)writeSparseArrayWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)val {
-  if (val == nil) {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-    return;
-  }
-  jint N = [val size];
-  AndroidOsParcel_writeIntWithInt_(self, N);
-  jint i = 0;
-  while (i < N) {
-    AndroidOsParcel_writeIntWithInt_(self, [val keyAtWithInt:i]);
-    AndroidOsParcel_writeValueWithId_(self, [val valueAtWithInt:i]);
-    i++;
-  }
-}
-
-- (void)writeSparseBooleanArrayWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)val {
-  if (val == nil) {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-    return;
-  }
-  jint N = [val size];
-  AndroidOsParcel_writeIntWithInt_(self, N);
-  jint i = 0;
-  while (i < N) {
-    AndroidOsParcel_writeIntWithInt_(self, [val keyAtWithInt:i]);
-    AndroidOsParcel_writeByteWithByte_(self, (jbyte) ([val valueAtWithInt:i] ? 1 : 0));
-    i++;
-  }
-}
-
-- (void)writeBooleanArrayWithBooleanArray:(IOSBooleanArray *)val {
-  if (val != nil) {
-    jint N = val->size_;
-    AndroidOsParcel_writeIntWithInt_(self, N);
-    for (jint i = 0; i < N; i++) {
-      AndroidOsParcel_writeIntWithInt_(self, IOSBooleanArray_Get(val, i) ? 1 : 0);
-    }
-  }
-  else {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-  }
-}
-
-- (IOSBooleanArray *)createBooleanArray {
-  return AndroidOsParcel_createBooleanArray(self);
-}
-
-- (void)readBooleanArrayWithBooleanArray:(IOSBooleanArray *)val {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N == ((IOSBooleanArray *) nil_chk(val))->size_) {
-    for (jint i = 0; i < N; i++) {
-      *IOSBooleanArray_GetRef(val, i) = (AndroidOsParcel_readInt(self) != 0);
-    }
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (void)writeCharArrayWithCharArray:(IOSCharArray *)val {
-  if (val != nil) {
-    jint N = val->size_;
-    AndroidOsParcel_writeIntWithInt_(self, N);
-    for (jint i = 0; i < N; i++) {
-      AndroidOsParcel_writeIntWithInt_(self, (jint) IOSCharArray_Get(val, i));
-    }
-  }
-  else {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-  }
-}
-
-- (IOSCharArray *)createCharArray {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
-    IOSCharArray *val = [IOSCharArray arrayWithLength:N];
-    for (jint i = 0; i < N; i++) {
-      *IOSCharArray_GetRef(val, i) = (jchar) AndroidOsParcel_readInt(self);
-    }
-    return val;
-  }
-  else {
-    return nil;
-  }
-}
-
-- (void)readCharArrayWithCharArray:(IOSCharArray *)val {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N == ((IOSCharArray *) nil_chk(val))->size_) {
-    for (jint i = 0; i < N; i++) {
-      *IOSCharArray_GetRef(val, i) = (jchar) AndroidOsParcel_readInt(self);
-    }
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (void)writeIntArrayWithIntArray:(IOSIntArray *)val {
-  if (val != nil) {
-    jint N = val->size_;
-    AndroidOsParcel_writeIntWithInt_(self, N);
-    for (jint i = 0; i < N; i++) {
-      AndroidOsParcel_writeIntWithInt_(self, IOSIntArray_Get(val, i));
-    }
-  }
-  else {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-  }
-}
-
-- (IOSIntArray *)createIntArray {
-  return AndroidOsParcel_createIntArray(self);
-}
-
-- (void)readIntArrayWithIntArray:(IOSIntArray *)val {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N == ((IOSIntArray *) nil_chk(val))->size_) {
-    for (jint i = 0; i < N; i++) {
-      *IOSIntArray_GetRef(val, i) = AndroidOsParcel_readInt(self);
-    }
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (void)writeLongArrayWithLongArray:(IOSLongArray *)val {
-  if (val != nil) {
-    jint N = val->size_;
-    AndroidOsParcel_writeIntWithInt_(self, N);
-    for (jint i = 0; i < N; i++) {
-      AndroidOsParcel_writeLongWithLong_(self, IOSLongArray_Get(val, i));
-    }
-  }
-  else {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-  }
-}
-
-- (IOSLongArray *)createLongArray {
-  return AndroidOsParcel_createLongArray(self);
-}
-
-- (void)readLongArrayWithLongArray:(IOSLongArray *)val {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N == ((IOSLongArray *) nil_chk(val))->size_) {
-    for (jint i = 0; i < N; i++) {
-      *IOSLongArray_GetRef(val, i) = AndroidOsParcel_readLong(self);
-    }
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (void)writeFloatArrayWithFloatArray:(IOSFloatArray *)val {
-  if (val != nil) {
-    jint N = val->size_;
-    AndroidOsParcel_writeIntWithInt_(self, N);
-    for (jint i = 0; i < N; i++) {
-      AndroidOsParcel_writeFloatWithFloat_(self, IOSFloatArray_Get(val, i));
-    }
-  }
-  else {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-  }
-}
-
-- (IOSFloatArray *)createFloatArray {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
-    IOSFloatArray *val = [IOSFloatArray arrayWithLength:N];
-    for (jint i = 0; i < N; i++) {
-      *IOSFloatArray_GetRef(val, i) = AndroidOsParcel_readFloat(self);
-    }
-    return val;
-  }
-  else {
-    return nil;
-  }
-}
-
-- (void)readFloatArrayWithFloatArray:(IOSFloatArray *)val {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N == ((IOSFloatArray *) nil_chk(val))->size_) {
-    for (jint i = 0; i < N; i++) {
-      *IOSFloatArray_GetRef(val, i) = AndroidOsParcel_readFloat(self);
-    }
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (void)writeDoubleArrayWithDoubleArray:(IOSDoubleArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (IOSDoubleArray *)createDoubleArray {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)readDoubleArrayWithDoubleArray:(IOSDoubleArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeStringArrayWithNSStringArray:(IOSObjectArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (IOSObjectArray *)createStringArray {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)readStringArrayWithNSStringArray:(IOSObjectArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeBinderArrayWithAndroidOsIBinderArray:(IOSObjectArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeCharSequenceArrayWithJavaLangCharSequenceArray:(IOSObjectArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (IOSObjectArray *)createBinderArray {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)readBinderArrayWithAndroidOsIBinderArray:(IOSObjectArray *)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeTypedListWithJavaUtilList:(id<JavaUtilList>)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeStringListWithJavaUtilList:(id<JavaUtilList>)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeBinderListWithJavaUtilList:(id<JavaUtilList>)val {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeTypedArrayWithAndroidOsParcelableArray:(IOSObjectArray *)val
-                                            withInt:(jint)parcelableFlags {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeValueWithId:(id)v {
-  AndroidOsParcel_writeValueWithId_(self, v);
-}
-
-- (void)writeParcelableWithAndroidOsParcelable:(id<AndroidOsParcelable>)p
-                                       withInt:(jint)parcelableFlags {
-  AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(self, p, parcelableFlags);
-}
-
-- (void)writeSerializableWithJavaIoSerializable:(id<JavaIoSerializable>)s {
-  if (s == nil) {
-    AndroidOsParcel_writeStringWithNSString_(self, nil);
-    return;
-  }
-  NSString *name = [[s java_getClass] getName];
-  AndroidOsParcel_writeStringWithNSString_(self, name);
-  JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_init();
-  @try {
-    JavaIoObjectOutputStream *oos = create_JavaIoObjectOutputStream_initWithJavaIoOutputStream_(baos);
-    [oos writeObjectWithId:s];
-    [oos close];
-    AndroidOsParcel_writeByteArrayWithByteArray_(self, [baos toByteArray]);
-  }
-  @catch (JavaIoIOException *ioe) {
-    @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$C", @"Parcelable encountered IOException writing serializable object (name = ", name, ')'), ioe);
-  }
-}
-
-- (void)writeExceptionWithJavaLangException:(JavaLangException *)e {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)writeNoException {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)readException {
-  jint code = AndroidOsParcel_readExceptionCode(self);
-  if (code != 0) {
-    NSString *msg = AndroidOsParcel_readString(self);
-    AndroidOsParcel_readExceptionWithInt_withNSString_(self, code, msg);
-  }
-}
-
-- (jint)readExceptionCode {
-  return AndroidOsParcel_readExceptionCode(self);
-}
-
-- (void)readExceptionWithInt:(jint)code
-                withNSString:(NSString *)msg {
-  AndroidOsParcel_readExceptionWithInt_withNSString_(self, code, msg);
-}
-
-- (jint)readInt {
-  return AndroidOsParcel_readInt(self);
-}
-
-- (jlong)readLong {
-  return AndroidOsParcel_readLong(self);
-}
-
-- (jfloat)readFloat {
-  return AndroidOsParcel_readFloat(self);
-}
-
-- (jdouble)readDouble {
-  return AndroidOsParcel_readDouble(self);
-}
-
-- (NSString *)readString {
-  return AndroidOsParcel_readString(self);
-}
-
-- (id<JavaLangCharSequence>)readCharSequence {
-  return AndroidOsParcel_readCharSequence(self);
-}
-
-- (id<AndroidOsIBinder>)readStrongBinder {
-  return AndroidOsParcel_readStrongBinder(self);
-}
-
-- (AndroidOsParcelFileDescriptor *)readFileDescriptor {
-  JavaIoFileDescriptor *fd = AndroidOsParcel_internalReadFileDescriptor(self);
-  return fd != nil ? create_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(fd) : nil;
-}
-
-- (JavaIoFileDescriptor *)internalReadFileDescriptor {
-  return AndroidOsParcel_internalReadFileDescriptor(self);
-}
-
-+ (JavaIoFileDescriptor *)openFileDescriptorWithNSString:(NSString *)file
-                                                 withInt:(jint)mode {
-  return AndroidOsParcel_openFileDescriptorWithNSString_withInt_(file, mode);
-}
-
-+ (void)closeFileDescriptorWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)desc {
-  AndroidOsParcel_closeFileDescriptorWithJavaIoFileDescriptor_(desc);
-}
-
-- (jbyte)readByte {
-  return AndroidOsParcel_readByte(self);
-}
-
-- (void)readMapWithJavaUtilMap:(id<JavaUtilMap>)outVal
-       withJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  jint N = AndroidOsParcel_readInt(self);
-  [self readMapInternalWithJavaUtilMap:outVal withInt:N withJavaLangClassLoader:loader];
-}
-
-- (void)readListWithJavaUtilList:(id<JavaUtilList>)outVal
-         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  jint N = AndroidOsParcel_readInt(self);
-  AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
-}
-
-- (JavaUtilHashMap *)readHashMapWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readHashMapWithJavaLangClassLoader_(self, loader);
-}
-
-- (AndroidOsBundle *)readBundle {
-  return AndroidOsParcel_readBundleWithJavaLangClassLoader_(self, nil);
-}
-
-- (AndroidOsBundle *)readBundleWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readBundleWithJavaLangClassLoader_(self, loader);
-}
-
-- (IOSByteArray *)createByteArray {
-  return AndroidOsParcel_createByteArray(self);
-}
-
-- (void)readByteArrayWithByteArray:(IOSByteArray *)val {
-  IOSByteArray *ba = AndroidOsParcel_createByteArray(self);
-  if (((IOSByteArray *) nil_chk(ba))->size_ == ((IOSByteArray *) nil_chk(val))->size_) {
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(ba, 0, val, 0, ba->size_);
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (IOSObjectArray *)readStringArray {
-  return AndroidOsParcel_readStringArray(self);
-}
-
-- (IOSObjectArray *)readCharSequenceArray {
-  return AndroidOsParcel_readCharSequenceArray(self);
-}
-
-- (JavaUtilArrayList *)readArrayListWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readArrayListWithJavaLangClassLoader_(self, loader);
-}
-
-- (IOSObjectArray *)readArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readArrayWithJavaLangClassLoader_(self, loader);
-}
-
-- (AndroidUtilSparseArray *)readSparseArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(self, loader);
-}
-
-- (AndroidUtilSparseBooleanArray *)readSparseBooleanArray {
-  return AndroidOsParcel_readSparseBooleanArray(self);
-}
-
-- (JavaUtilArrayList *)createTypedArrayListWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
-  while (N > 0) {
-    if (AndroidOsParcel_readInt(self) != 0) {
-      [l addWithId:[((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]];
-    }
-    else {
-      [l addWithId:nil];
-    }
-    N--;
-  }
-  return l;
-}
-
-- (void)readTypedListWithJavaUtilList:(id<JavaUtilList>)list
-      withAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
-  jint M = [((id<JavaUtilList>) nil_chk(list)) size];
-  jint N = AndroidOsParcel_readInt(self);
-  jint i = 0;
-  for (; i < M && i < N; i++) {
-    if (AndroidOsParcel_readInt(self) != 0) {
-      [list setWithInt:i withId:[((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]];
-    }
-    else {
-      [list setWithInt:i withId:nil];
-    }
-  }
-  for (; i < N; i++) {
-    if (AndroidOsParcel_readInt(self) != 0) {
-      [list addWithId:[((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]];
-    }
-    else {
-      [list addWithId:nil];
-    }
-  }
-  for (; i < M; i++) {
-    [list removeWithInt:N];
-  }
-}
-
-- (JavaUtilArrayList *)createStringArrayList {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
-  while (N > 0) {
-    [l addWithId:AndroidOsParcel_readString(self)];
-    N--;
-  }
-  return l;
-}
-
-- (JavaUtilArrayList *)createBinderArrayList {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
-  while (N > 0) {
-    [l addWithId:AndroidOsParcel_readStrongBinder(self)];
-    N--;
-  }
-  return l;
-}
-
-- (void)readStringListWithJavaUtilList:(id<JavaUtilList>)list {
-  jint M = [((id<JavaUtilList>) nil_chk(list)) size];
-  jint N = AndroidOsParcel_readInt(self);
-  jint i = 0;
-  for (; i < M && i < N; i++) {
-    [list setWithInt:i withId:AndroidOsParcel_readString(self)];
-  }
-  for (; i < N; i++) {
-    [list addWithId:AndroidOsParcel_readString(self)];
-  }
-  for (; i < M; i++) {
-    [list removeWithInt:N];
-  }
-}
-
-- (void)readBinderListWithJavaUtilList:(id<JavaUtilList>)list {
-  jint M = [((id<JavaUtilList>) nil_chk(list)) size];
-  jint N = AndroidOsParcel_readInt(self);
-  jint i = 0;
-  for (; i < M && i < N; i++) {
-    [list setWithInt:i withId:AndroidOsParcel_readStrongBinder(self)];
-  }
-  for (; i < N; i++) {
-    [list addWithId:AndroidOsParcel_readStrongBinder(self)];
-  }
-  for (; i < M; i++) {
-    [list removeWithInt:N];
-  }
-}
-
-- (IOSObjectArray *)createTypedArrayWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
-  return AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(self, c);
-}
-
-- (void)readTypedArrayWithNSObjectArray:(IOSObjectArray *)val
-        withAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N == ((IOSObjectArray *) nil_chk(val))->size_) {
-    for (jint i = 0; i < N; i++) {
-      if (AndroidOsParcel_readInt(self) != 0) {
-        IOSObjectArray_Set(val, i, [((id<AndroidOsParcelable_Creator>) nil_chk(c)) createFromParcelWithAndroidOsParcel:self]);
-      }
-      else {
-        IOSObjectArray_Set(val, i, nil);
-      }
-    }
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(@"bad array lengths");
-  }
-}
-
-- (IOSObjectArray *)readTypedArrayWithAndroidOsParcelable_Creator:(id<AndroidOsParcelable_Creator>)c {
-  return AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(self, c);
-}
-
-- (void)writeParcelableArrayWithAndroidOsParcelableArray:(IOSObjectArray *)value
-                                                 withInt:(jint)parcelableFlags {
-  if (value != nil) {
-    jint N = value->size_;
-    AndroidOsParcel_writeIntWithInt_(self, N);
-    for (jint i = 0; i < N; i++) {
-      AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(self, IOSObjectArray_Get(value, i), parcelableFlags);
-    }
-  }
-  else {
-    AndroidOsParcel_writeIntWithInt_(self, -1);
-  }
-}
-
-- (id)readValueWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
-}
-
-- (id<AndroidOsParcelable>)readParcelableWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readParcelableWithJavaLangClassLoader_(self, loader);
-}
-
-- (IOSObjectArray *)readParcelableArrayWithJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  return AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(self, loader);
-}
-
-- (id<JavaIoSerializable>)readSerializable {
-  return AndroidOsParcel_readSerializable(self);
-}
-
-+ (AndroidOsParcel *)obtainWithInt:(jint)obj {
-  return AndroidOsParcel_obtainWithInt_(obj);
-}
-
-- (instancetype)initWithInt:(jint)obj {
-  AndroidOsParcel_initWithInt_(self, obj);
-  return self;
-}
-
-- (void)java_finalize {
-  AndroidOsParcel_destroy(self);
-}
-
-- (void)freeBuffer {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)init__WithInt:(jint)obj {
-  AndroidOsParcel_init__WithInt_(self, obj);
-}
-
-- (void)destroy {
-  AndroidOsParcel_destroy(self);
-}
-
-- (void)readMapInternalWithJavaUtilMap:(id<JavaUtilMap>)outVal
-                               withInt:(jint)N
-               withJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  while (N > 0) {
-    id key = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
-    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
-    [((id<JavaUtilMap>) nil_chk(outVal)) putWithId:key withId:value];
-    N--;
-  }
-}
-
-- (void)readListInternalWithJavaUtilList:(id<JavaUtilList>)outVal
-                                 withInt:(jint)N
-                 withJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
-}
-
-- (void)readArrayInternalWithNSObjectArray:(IOSObjectArray *)outVal
-                                   withInt:(jint)N
-                   withJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
-}
-
-- (void)readSparseArrayInternalWithAndroidUtilSparseArray:(AndroidUtilSparseArray *)outVal
-                                                  withInt:(jint)N
-                                  withJavaLangClassLoader:(JavaLangClassLoader *)loader {
-  AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(self, outVal, N, loader);
-}
-
-- (void)readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray:(AndroidUtilSparseBooleanArray *)outVal
-                                                                withInt:(jint)N {
-  AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(self, outVal, N);
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidOsParcel class]);
-  RELEASE_(mStack_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidOsParcel;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 2, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 3, 1, -1, -1, -1, -1 },
-    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 6, 7, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 10, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 11, 12, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 11, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 13, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 14, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 15, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 17, 18, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 19, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 21, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 22, 23, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 24, 25, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 26, 27, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 28, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 30, 31, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 32, 33, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 34, 33, -1, 35, -1, -1 },
-    { NULL, "V", 0x11, 36, 37, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 38, 39, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 40, 41, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 42, 43, -1, 44, -1, -1 },
-    { NULL, "V", 0x11, 45, 46, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 47, 48, -1, -1, -1, -1 },
-    { NULL, "[Z", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 49, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 50, 51, -1, -1, -1, -1 },
-    { NULL, "[C", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 52, 51, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 53, 54, -1, -1, -1, -1 },
-    { NULL, "[I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 55, 54, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 56, 57, -1, -1, -1, -1 },
-    { NULL, "[J", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 58, 57, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 59, 60, -1, -1, -1, -1 },
-    { NULL, "[F", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 61, 60, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 62, 63, -1, -1, -1, -1 },
-    { NULL, "[D", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 64, 63, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 65, 66, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 67, 66, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 68, 69, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 70, 71, -1, -1, -1, -1 },
-    { NULL, "[LAndroidOsIBinder;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 72, 69, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 73, 39, -1, 74, -1, -1 },
-    { NULL, "V", 0x11, 75, 39, -1, 76, -1, -1 },
-    { NULL, "V", 0x11, 77, 39, -1, 78, -1, -1 },
-    { NULL, "V", 0x11, 79, 80, -1, 81, -1, -1 },
-    { NULL, "V", 0x11, 82, 83, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 84, 85, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 86, 87, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 88, 89, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 90, 91, -1, -1, -1, -1 },
-    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "F", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "D", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangCharSequence;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsIBinder;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsParcelFileDescriptor;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileDescriptor;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileDescriptor;", 0x8, 92, 93, 94, -1, -1, -1 },
-    { NULL, "V", 0x8, 95, 29, 96, -1, -1, -1 },
-    { NULL, "B", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 97, 98, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 99, 100, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilHashMap;", 0x11, 101, 102, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsBundle;", 0x11, 103, 102, -1, -1, -1, -1 },
-    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 104, 12, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LJavaLangCharSequence;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x11, 105, 102, -1, -1, -1, -1 },
-    { NULL, "[LNSObject;", 0x11, 106, 102, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilSparseArray;", 0x11, 107, 102, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilSparseBooleanArray;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x11, 108, 109, -1, 110, -1, -1 },
-    { NULL, "V", 0x11, 111, 112, -1, 113, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x11, -1, -1, -1, 114, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x11, -1, -1, -1, 115, -1, -1 },
-    { NULL, "V", 0x11, 116, 39, -1, 76, -1, -1 },
-    { NULL, "V", 0x11, 117, 39, -1, 78, -1, -1 },
-    { NULL, "[LNSObject;", 0x11, 118, 109, -1, 119, -1, -1 },
-    { NULL, "V", 0x11, 120, 121, -1, 122, -1, -1 },
-    { NULL, "[LNSObject;", 0x11, 120, 109, -1, 119, 123, -1 },
-    { NULL, "V", 0x11, 124, 80, -1, 81, -1, -1 },
-    { NULL, "LNSObject;", 0x11, 125, 102, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsParcelable;", 0x11, 126, 102, -1, 127, -1, -1 },
-    { NULL, "[LAndroidOsParcelable;", 0x11, 128, 102, -1, -1, -1, -1 },
-    { NULL, "LJavaIoSerializable;", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsParcel;", 0x1c, 129, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 130, -1, 131, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 132, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 133, 134, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 135, 136, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 137, 138, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 139, 140, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 141, 142, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(obtain);
-  methods[1].selector = @selector(recycle);
-  methods[2].selector = @selector(dataSize);
-  methods[3].selector = @selector(dataAvail);
-  methods[4].selector = @selector(dataPosition);
-  methods[5].selector = @selector(dataCapacity);
-  methods[6].selector = @selector(setDataSizeWithInt:);
-  methods[7].selector = @selector(setDataPositionWithInt:);
-  methods[8].selector = @selector(setDataCapacityWithInt:);
-  methods[9].selector = @selector(marshall);
-  methods[10].selector = @selector(unmarshallWithByteArray:withInt:withInt:);
-  methods[11].selector = @selector(appendFromWithAndroidOsParcel:withInt:withInt:);
-  methods[12].selector = @selector(hasFileDescriptors);
-  methods[13].selector = @selector(writeInterfaceTokenWithNSString:);
-  methods[14].selector = @selector(enforceInterfaceWithNSString:);
-  methods[15].selector = @selector(writeByteArrayWithByteArray:);
-  methods[16].selector = @selector(writeByteArrayWithByteArray:withInt:withInt:);
-  methods[17].selector = @selector(writeNativeWithByteArray:withInt:withInt:);
-  methods[18].selector = @selector(writeIntWithInt:);
-  methods[19].selector = @selector(writeLongWithLong:);
-  methods[20].selector = @selector(writeFloatWithFloat:);
-  methods[21].selector = @selector(writeDoubleWithDouble:);
-  methods[22].selector = @selector(writeStringWithNSString:);
-  methods[23].selector = @selector(writeCharSequenceWithJavaLangCharSequence:);
-  methods[24].selector = @selector(writeStrongBinderWithAndroidOsIBinder:);
-  methods[25].selector = @selector(writeStrongInterfaceWithAndroidOsIInterface:);
-  methods[26].selector = @selector(writeFileDescriptorWithJavaIoFileDescriptor:);
-  methods[27].selector = @selector(writeByteWithByte:);
-  methods[28].selector = @selector(writeMapWithJavaUtilMap:);
-  methods[29].selector = @selector(writeMapInternalWithJavaUtilMap:);
-  methods[30].selector = @selector(writeBundleWithAndroidOsBundle:);
-  methods[31].selector = @selector(writeListWithJavaUtilList:);
-  methods[32].selector = @selector(writeArrayWithNSObjectArray:);
-  methods[33].selector = @selector(writeSparseArrayWithAndroidUtilSparseArray:);
-  methods[34].selector = @selector(writeSparseBooleanArrayWithAndroidUtilSparseBooleanArray:);
-  methods[35].selector = @selector(writeBooleanArrayWithBooleanArray:);
-  methods[36].selector = @selector(createBooleanArray);
-  methods[37].selector = @selector(readBooleanArrayWithBooleanArray:);
-  methods[38].selector = @selector(writeCharArrayWithCharArray:);
-  methods[39].selector = @selector(createCharArray);
-  methods[40].selector = @selector(readCharArrayWithCharArray:);
-  methods[41].selector = @selector(writeIntArrayWithIntArray:);
-  methods[42].selector = @selector(createIntArray);
-  methods[43].selector = @selector(readIntArrayWithIntArray:);
-  methods[44].selector = @selector(writeLongArrayWithLongArray:);
-  methods[45].selector = @selector(createLongArray);
-  methods[46].selector = @selector(readLongArrayWithLongArray:);
-  methods[47].selector = @selector(writeFloatArrayWithFloatArray:);
-  methods[48].selector = @selector(createFloatArray);
-  methods[49].selector = @selector(readFloatArrayWithFloatArray:);
-  methods[50].selector = @selector(writeDoubleArrayWithDoubleArray:);
-  methods[51].selector = @selector(createDoubleArray);
-  methods[52].selector = @selector(readDoubleArrayWithDoubleArray:);
-  methods[53].selector = @selector(writeStringArrayWithNSStringArray:);
-  methods[54].selector = @selector(createStringArray);
-  methods[55].selector = @selector(readStringArrayWithNSStringArray:);
-  methods[56].selector = @selector(writeBinderArrayWithAndroidOsIBinderArray:);
-  methods[57].selector = @selector(writeCharSequenceArrayWithJavaLangCharSequenceArray:);
-  methods[58].selector = @selector(createBinderArray);
-  methods[59].selector = @selector(readBinderArrayWithAndroidOsIBinderArray:);
-  methods[60].selector = @selector(writeTypedListWithJavaUtilList:);
-  methods[61].selector = @selector(writeStringListWithJavaUtilList:);
-  methods[62].selector = @selector(writeBinderListWithJavaUtilList:);
-  methods[63].selector = @selector(writeTypedArrayWithAndroidOsParcelableArray:withInt:);
-  methods[64].selector = @selector(writeValueWithId:);
-  methods[65].selector = @selector(writeParcelableWithAndroidOsParcelable:withInt:);
-  methods[66].selector = @selector(writeSerializableWithJavaIoSerializable:);
-  methods[67].selector = @selector(writeExceptionWithJavaLangException:);
-  methods[68].selector = @selector(writeNoException);
-  methods[69].selector = @selector(readException);
-  methods[70].selector = @selector(readExceptionCode);
-  methods[71].selector = @selector(readExceptionWithInt:withNSString:);
-  methods[72].selector = @selector(readInt);
-  methods[73].selector = @selector(readLong);
-  methods[74].selector = @selector(readFloat);
-  methods[75].selector = @selector(readDouble);
-  methods[76].selector = @selector(readString);
-  methods[77].selector = @selector(readCharSequence);
-  methods[78].selector = @selector(readStrongBinder);
-  methods[79].selector = @selector(readFileDescriptor);
-  methods[80].selector = @selector(internalReadFileDescriptor);
-  methods[81].selector = @selector(openFileDescriptorWithNSString:withInt:);
-  methods[82].selector = @selector(closeFileDescriptorWithJavaIoFileDescriptor:);
-  methods[83].selector = @selector(readByte);
-  methods[84].selector = @selector(readMapWithJavaUtilMap:withJavaLangClassLoader:);
-  methods[85].selector = @selector(readListWithJavaUtilList:withJavaLangClassLoader:);
-  methods[86].selector = @selector(readHashMapWithJavaLangClassLoader:);
-  methods[87].selector = @selector(readBundle);
-  methods[88].selector = @selector(readBundleWithJavaLangClassLoader:);
-  methods[89].selector = @selector(createByteArray);
-  methods[90].selector = @selector(readByteArrayWithByteArray:);
-  methods[91].selector = @selector(readStringArray);
-  methods[92].selector = @selector(readCharSequenceArray);
-  methods[93].selector = @selector(readArrayListWithJavaLangClassLoader:);
-  methods[94].selector = @selector(readArrayWithJavaLangClassLoader:);
-  methods[95].selector = @selector(readSparseArrayWithJavaLangClassLoader:);
-  methods[96].selector = @selector(readSparseBooleanArray);
-  methods[97].selector = @selector(createTypedArrayListWithAndroidOsParcelable_Creator:);
-  methods[98].selector = @selector(readTypedListWithJavaUtilList:withAndroidOsParcelable_Creator:);
-  methods[99].selector = @selector(createStringArrayList);
-  methods[100].selector = @selector(createBinderArrayList);
-  methods[101].selector = @selector(readStringListWithJavaUtilList:);
-  methods[102].selector = @selector(readBinderListWithJavaUtilList:);
-  methods[103].selector = @selector(createTypedArrayWithAndroidOsParcelable_Creator:);
-  methods[104].selector = @selector(readTypedArrayWithNSObjectArray:withAndroidOsParcelable_Creator:);
-  methods[105].selector = @selector(readTypedArrayWithAndroidOsParcelable_Creator:);
-  methods[106].selector = @selector(writeParcelableArrayWithAndroidOsParcelableArray:withInt:);
-  methods[107].selector = @selector(readValueWithJavaLangClassLoader:);
-  methods[108].selector = @selector(readParcelableWithJavaLangClassLoader:);
-  methods[109].selector = @selector(readParcelableArrayWithJavaLangClassLoader:);
-  methods[110].selector = @selector(readSerializable);
-  methods[111].selector = @selector(obtainWithInt:);
-  methods[112].selector = @selector(initWithInt:);
-  methods[113].selector = @selector(java_finalize);
-  methods[114].selector = @selector(freeBuffer);
-  methods[115].selector = @selector(init__WithInt:);
-  methods[116].selector = @selector(destroy);
-  methods[117].selector = @selector(readMapInternalWithJavaUtilMap:withInt:withJavaLangClassLoader:);
-  methods[118].selector = @selector(readListInternalWithJavaUtilList:withInt:withJavaLangClassLoader:);
-  methods[119].selector = @selector(readArrayInternalWithNSObjectArray:withInt:withJavaLangClassLoader:);
-  methods[120].selector = @selector(readSparseArrayInternalWithAndroidUtilSparseArray:withInt:withJavaLangClassLoader:);
-  methods[121].selector = @selector(readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "DEBUG_RECYCLE", "Z", .constantValue.asBOOL = AndroidOsParcel_DEBUG_RECYCLE, 0x1a, -1, -1, -1, -1 },
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 143, -1, -1 },
-    { "mObject_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mOwnObject_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mStack_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "POOL_SIZE", "I", .constantValue.asInt = AndroidOsParcel_POOL_SIZE, 0x1a, -1, -1, -1, -1 },
-    { "sOwnedPool", "[LAndroidOsParcel;", .constantValue.asLong = 0, 0x1a, -1, 144, -1, -1 },
-    { "sHolderPool", "[LAndroidOsParcel;", .constantValue.asLong = 0, 0x1a, -1, 145, -1, -1 },
-    { "VAL_NULL", "I", .constantValue.asInt = AndroidOsParcel_VAL_NULL, 0x1a, -1, -1, -1, -1 },
-    { "VAL_STRING", "I", .constantValue.asInt = AndroidOsParcel_VAL_STRING, 0x1a, -1, -1, -1, -1 },
-    { "VAL_INTEGER", "I", .constantValue.asInt = AndroidOsParcel_VAL_INTEGER, 0x1a, -1, -1, -1, -1 },
-    { "VAL_MAP", "I", .constantValue.asInt = AndroidOsParcel_VAL_MAP, 0x1a, -1, -1, -1, -1 },
-    { "VAL_BUNDLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_BUNDLE, 0x1a, -1, -1, -1, -1 },
-    { "VAL_PARCELABLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_PARCELABLE, 0x1a, -1, -1, -1, -1 },
-    { "VAL_SHORT", "I", .constantValue.asInt = AndroidOsParcel_VAL_SHORT, 0x1a, -1, -1, -1, -1 },
-    { "VAL_LONG", "I", .constantValue.asInt = AndroidOsParcel_VAL_LONG, 0x1a, -1, -1, -1, -1 },
-    { "VAL_FLOAT", "I", .constantValue.asInt = AndroidOsParcel_VAL_FLOAT, 0x1a, -1, -1, -1, -1 },
-    { "VAL_DOUBLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_DOUBLE, 0x1a, -1, -1, -1, -1 },
-    { "VAL_BOOLEAN", "I", .constantValue.asInt = AndroidOsParcel_VAL_BOOLEAN, 0x1a, -1, -1, -1, -1 },
-    { "VAL_CHARSEQUENCE", "I", .constantValue.asInt = AndroidOsParcel_VAL_CHARSEQUENCE, 0x1a, -1, -1, -1, -1 },
-    { "VAL_LIST", "I", .constantValue.asInt = AndroidOsParcel_VAL_LIST, 0x1a, -1, -1, -1, -1 },
-    { "VAL_SPARSEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_SPARSEARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_BYTEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_BYTEARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_STRINGARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_STRINGARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_IBINDER", "I", .constantValue.asInt = AndroidOsParcel_VAL_IBINDER, 0x1a, -1, -1, -1, -1 },
-    { "VAL_PARCELABLEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_PARCELABLEARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_OBJECTARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_OBJECTARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_INTARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_INTARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_LONGARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_LONGARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_BYTE", "I", .constantValue.asInt = AndroidOsParcel_VAL_BYTE, 0x1a, -1, -1, -1, -1 },
-    { "VAL_SERIALIZABLE", "I", .constantValue.asInt = AndroidOsParcel_VAL_SERIALIZABLE, 0x1a, -1, -1, -1, -1 },
-    { "VAL_SPARSEBOOLEANARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_SPARSEBOOLEANARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_BOOLEANARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_BOOLEANARRAY, 0x1a, -1, -1, -1, -1 },
-    { "VAL_CHARSEQUENCEARRAY", "I", .constantValue.asInt = AndroidOsParcel_VAL_CHARSEQUENCEARRAY, 0x1a, -1, -1, -1, -1 },
-    { "EX_SECURITY", "I", .constantValue.asInt = AndroidOsParcel_EX_SECURITY, 0x1a, -1, -1, -1, -1 },
-    { "EX_BAD_PARCELABLE", "I", .constantValue.asInt = AndroidOsParcel_EX_BAD_PARCELABLE, 0x1a, -1, -1, -1, -1 },
-    { "EX_ILLEGAL_ARGUMENT", "I", .constantValue.asInt = AndroidOsParcel_EX_ILLEGAL_ARGUMENT, 0x1a, -1, -1, -1, -1 },
-    { "EX_NULL_POINTER", "I", .constantValue.asInt = AndroidOsParcel_EX_NULL_POINTER, 0x1a, -1, -1, -1, -1 },
-    { "EX_ILLEGAL_STATE", "I", .constantValue.asInt = AndroidOsParcel_EX_ILLEGAL_STATE, 0x1a, -1, -1, -1, -1 },
-    { "EX_HAS_REPLY_HEADER", "I", .constantValue.asInt = AndroidOsParcel_EX_HAS_REPLY_HEADER, 0x1a, -1, -1, -1, -1 },
-    { "STRING_CREATOR", "LAndroidOsParcelable_Creator;", .constantValue.asLong = 0, 0x19, -1, 146, 147, -1 },
-    { "mCreators", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 148, 149, -1 },
-  };
-  static const void *ptrTable[] = { "setDataSize", "I", "setDataPosition", "setDataCapacity", "unmarshall", "[BII", "appendFrom", "LAndroidOsParcel;II", "writeInterfaceToken", "LNSString;", "enforceInterface", "writeByteArray", "[B", "writeNative", "writeInt", "writeLong", "J", "writeFloat", "F", "writeDouble", "D", "writeString", "writeCharSequence", "LJavaLangCharSequence;", "writeStrongBinder", "LAndroidOsIBinder;", "writeStrongInterface", "LAndroidOsIInterface;", "writeFileDescriptor", "LJavaIoFileDescriptor;", "writeByte", "B", "writeMap", "LJavaUtilMap;", "writeMapInternal", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", "writeBundle", "LAndroidOsBundle;", "writeList", "LJavaUtilList;", "writeArray", "[LNSObject;", "writeSparseArray", "LAndroidUtilSparseArray;", "(Landroid/util/SparseArray<Ljava/lang/Object;>;)V", "writeSparseBooleanArray", "LAndroidUtilSparseBooleanArray;", "writeBooleanArray", "[Z", "readBooleanArray", "writeCharArray", "[C", "readCharArray", "writeIntArray", "[I", "readIntArray", "writeLongArray", "[J", "readLongArray", "writeFloatArray", "[F", "readFloatArray", "writeDoubleArray", "[D", "readDoubleArray", "writeStringArray", "[LNSString;", "readStringArray", "writeBinderArray", "[LAndroidOsIBinder;", "writeCharSequenceArray", "[LJavaLangCharSequence;", "readBinderArray", "writeTypedList", "<T::Landroid/os/Parcelable;>(Ljava/util/List<TT;>;)V", "writeStringList", "(Ljava/util/List<Ljava/lang/String;>;)V", "writeBinderList", "(Ljava/util/List<Landroid/os/IBinder;>;)V", "writeTypedArray", "[LAndroidOsParcelable;I", "<T::Landroid/os/Parcelable;>([TT;I)V", "writeValue", "LNSObject;", "writeParcelable", "LAndroidOsParcelable;I", "writeSerializable", "LJavaIoSerializable;", "writeException", "LJavaLangException;", "readException", "ILNSString;", "openFileDescriptor", "LNSString;I", "LJavaIoFileNotFoundException;", "closeFileDescriptor", "LJavaIoIOException;", "readMap", "LJavaUtilMap;LJavaLangClassLoader;", "readList", "LJavaUtilList;LJavaLangClassLoader;", "readHashMap", "LJavaLangClassLoader;", "readBundle", "readByteArray", "readArrayList", "readArray", "readSparseArray", "createTypedArrayList", "LAndroidOsParcelable_Creator;", "<T:Ljava/lang/Object;>(Landroid/os/Parcelable$Creator<TT;>;)Ljava/util/ArrayList<TT;>;", "readTypedList", "LJavaUtilList;LAndroidOsParcelable_Creator;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Landroid/os/Parcelable$Creator<TT;>;)V", "()Ljava/util/ArrayList<Ljava/lang/String;>;", "()Ljava/util/ArrayList<Landroid/os/IBinder;>;", "readStringList", "readBinderList", "createTypedArray", "<T:Ljava/lang/Object;>(Landroid/os/Parcelable$Creator<TT;>;)[TT;", "readTypedArray", "[LNSObject;LAndroidOsParcelable_Creator;", "<T:Ljava/lang/Object;>([TT;Landroid/os/Parcelable$Creator<TT;>;)V", (void *)&AndroidOsParcel__Annotations$0, "writeParcelableArray", "readValue", "readParcelable", "<T::Landroid/os/Parcelable;>(Ljava/lang/ClassLoader;)TT;", "readParcelableArray", "obtain", "finalize", "LNSException;", "init", "readMapInternal", "LJavaUtilMap;ILJavaLangClassLoader;", "readListInternal", "LJavaUtilList;ILJavaLangClassLoader;", "readArrayInternal", "[LNSObject;ILJavaLangClassLoader;", "readSparseArrayInternal", "LAndroidUtilSparseArray;ILJavaLangClassLoader;", "readSparseBooleanArrayInternal", "LAndroidUtilSparseBooleanArray;I", &AndroidOsParcel_TAG, &AndroidOsParcel_sOwnedPool, &AndroidOsParcel_sHolderPool, &AndroidOsParcel_STRING_CREATOR, "Landroid/os/Parcelable$Creator<Ljava/lang/String;>;", &AndroidOsParcel_mCreators, "Ljava/util/HashMap<Ljava/lang/ClassLoader;Ljava/util/HashMap<Ljava/lang/String;Landroid/os/Parcelable$Creator;>;>;" };
-  static const J2ObjcClassInfo _AndroidOsParcel = { "Parcel", "android.os", ptrTable, methods, fields, 7, 0x11, 122, 42, -1, -1, -1, -1, -1 };
-  return &_AndroidOsParcel;
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsParcel class]) {
-    JreStrongAssignAndConsume(&AndroidOsParcel_sOwnedPool, [IOSObjectArray newArrayWithLength:AndroidOsParcel_POOL_SIZE type:AndroidOsParcel_class_()]);
-    JreStrongAssignAndConsume(&AndroidOsParcel_sHolderPool, [IOSObjectArray newArrayWithLength:AndroidOsParcel_POOL_SIZE type:AndroidOsParcel_class_()]);
-    JreStrongAssignAndConsume(&AndroidOsParcel_STRING_CREATOR, new_AndroidOsParcel_1_init());
-    JreStrongAssignAndConsume(&AndroidOsParcel_mCreators, new_JavaUtilHashMap_init());
-    J2OBJC_SET_INITIALIZED(AndroidOsParcel)
-  }
-}
-
-@end
-
-AndroidOsParcel *AndroidOsParcel_obtain() {
-  AndroidOsParcel_initialize();
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jint AndroidOsParcel_dataAvail(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jint AndroidOsParcel_dataPosition(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeByteArrayWithByteArray_(AndroidOsParcel *self, IOSByteArray *b) {
-  AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(self, b, 0, (b != nil) ? ((IOSByteArray *) nil_chk(b))->size_ : 0);
-}
-
-void AndroidOsParcel_writeByteArrayWithByteArray_withInt_withInt_(AndroidOsParcel *self, IOSByteArray *b, jint offset, jint len) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeIntWithInt_(AndroidOsParcel *self, jint val) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeLongWithLong_(AndroidOsParcel *self, jlong val) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeFloatWithFloat_(AndroidOsParcel *self, jfloat val) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeStringWithNSString_(AndroidOsParcel *self, NSString *val) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeStrongBinderWithAndroidOsIBinder_(AndroidOsParcel *self, id<AndroidOsIBinder> val) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeByteWithByte_(AndroidOsParcel *self, jbyte val) {
-  AndroidOsParcel_writeIntWithInt_(self, val);
-}
-
-IOSBooleanArray *AndroidOsParcel_createBooleanArray(AndroidOsParcel *self) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
-    IOSBooleanArray *val = [IOSBooleanArray arrayWithLength:N];
-    for (jint i = 0; i < N; i++) {
-      *IOSBooleanArray_GetRef(val, i) = (AndroidOsParcel_readInt(self) != 0);
-    }
-    return val;
-  }
-  else {
-    return nil;
-  }
-}
-
-IOSIntArray *AndroidOsParcel_createIntArray(AndroidOsParcel *self) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 2))) {
-    IOSIntArray *val = [IOSIntArray arrayWithLength:N];
-    for (jint i = 0; i < N; i++) {
-      *IOSIntArray_GetRef(val, i) = AndroidOsParcel_readInt(self);
-    }
-    return val;
-  }
-  else {
-    return nil;
-  }
-}
-
-IOSLongArray *AndroidOsParcel_createLongArray(AndroidOsParcel *self) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N >= 0 && N <= (JreRShift32(AndroidOsParcel_dataAvail(self), 3))) {
-    IOSLongArray *val = [IOSLongArray arrayWithLength:N];
-    for (jint i = 0; i < N; i++) {
-      *IOSLongArray_GetRef(val, i) = AndroidOsParcel_readLong(self);
-    }
-    return val;
-  }
-  else {
-    return nil;
-  }
-}
-
-void AndroidOsParcel_writeValueWithId_(AndroidOsParcel *self, id v) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_writeParcelableWithAndroidOsParcelable_withInt_(AndroidOsParcel *self, id<AndroidOsParcelable> p, jint parcelableFlags) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jint AndroidOsParcel_readExceptionCode(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_readExceptionWithInt_withNSString_(AndroidOsParcel *self, jint code, NSString *msg) {
-  switch (code) {
-    case AndroidOsParcel_EX_SECURITY:
-    @throw create_JavaLangSecurityException_initWithNSString_(msg);
-    case AndroidOsParcel_EX_BAD_PARCELABLE:
-    @throw create_AndroidOsBadParcelableException_initWithNSString_(msg);
-    case AndroidOsParcel_EX_ILLEGAL_ARGUMENT:
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(msg);
-    case AndroidOsParcel_EX_NULL_POINTER:
-    @throw create_JavaLangNullPointerException_initWithNSString_(msg);
-    case AndroidOsParcel_EX_ILLEGAL_STATE:
-    @throw create_JavaLangIllegalStateException_initWithNSString_(msg);
-  }
-  @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I$$", @"Unknown exception code: ", code, @" msg ", msg));
-}
-
-jint AndroidOsParcel_readInt(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jlong AndroidOsParcel_readLong(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jfloat AndroidOsParcel_readFloat(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jdouble AndroidOsParcel_readDouble(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-NSString *AndroidOsParcel_readString(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-id<JavaLangCharSequence> AndroidOsParcel_readCharSequence(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-id<AndroidOsIBinder> AndroidOsParcel_readStrongBinder(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-JavaIoFileDescriptor *AndroidOsParcel_internalReadFileDescriptor(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-JavaIoFileDescriptor *AndroidOsParcel_openFileDescriptorWithNSString_withInt_(NSString *file, jint mode) {
-  AndroidOsParcel_initialize();
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_closeFileDescriptorWithJavaIoFileDescriptor_(JavaIoFileDescriptor *desc) {
-  AndroidOsParcel_initialize();
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-jbyte AndroidOsParcel_readByte(AndroidOsParcel *self) {
-  return (jbyte) (AndroidOsParcel_readInt(self) & (jint) 0xff);
-}
-
-JavaUtilHashMap *AndroidOsParcel_readHashMapWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  JavaUtilHashMap *m = create_JavaUtilHashMap_initWithInt_(N);
-  [self readMapInternalWithJavaUtilMap:m withInt:N withJavaLangClassLoader:loader];
-  return m;
-}
-
-AndroidOsBundle *AndroidOsParcel_readBundleWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-IOSByteArray *AndroidOsParcel_createByteArray(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-IOSObjectArray *AndroidOsParcel_readStringArray(AndroidOsParcel *self) {
-  IOSObjectArray *array = nil;
-  jint length = AndroidOsParcel_readInt(self);
-  if (length >= 0) {
-    array = [IOSObjectArray arrayWithLength:length type:NSString_class_()];
-    for (jint i = 0; i < length; i++) {
-      IOSObjectArray_Set(array, i, AndroidOsParcel_readString(self));
-    }
-  }
-  return array;
-}
-
-IOSObjectArray *AndroidOsParcel_readCharSequenceArray(AndroidOsParcel *self) {
-  IOSObjectArray *array = nil;
-  jint length = AndroidOsParcel_readInt(self);
-  if (length >= 0) {
-    array = [IOSObjectArray arrayWithLength:length type:JavaLangCharSequence_class_()];
-    for (jint i = 0; i < length; i++) {
-      IOSObjectArray_Set(array, i, AndroidOsParcel_readCharSequence(self));
-    }
-  }
-  return array;
-}
-
-JavaUtilArrayList *AndroidOsParcel_readArrayListWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  JavaUtilArrayList *l = create_JavaUtilArrayList_initWithInt_(N);
-  AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(self, l, N, loader);
-  return l;
-}
-
-IOSObjectArray *AndroidOsParcel_readArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  IOSObjectArray *l = [IOSObjectArray arrayWithLength:N type:NSObject_class_()];
-  AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(self, l, N, loader);
-  return l;
-}
-
-AndroidUtilSparseArray *AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  AndroidUtilSparseArray *sa = create_AndroidUtilSparseArray_initWithInt_(N);
-  AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(self, sa, N, loader);
-  return sa;
-}
-
-AndroidUtilSparseBooleanArray *AndroidOsParcel_readSparseBooleanArray(AndroidOsParcel *self) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  AndroidUtilSparseBooleanArray *sa = create_AndroidUtilSparseBooleanArray_initWithInt_(N);
-  AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(self, sa, N);
-  return sa;
-}
-
-IOSObjectArray *AndroidOsParcel_createTypedArrayWithAndroidOsParcelable_Creator_(AndroidOsParcel *self, id<AndroidOsParcelable_Creator> c) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  IOSObjectArray *l = [((id<AndroidOsParcelable_Creator>) nil_chk(c)) newArrayWithInt:N];
-  for (jint i = 0; i < N; i++) {
-    if (AndroidOsParcel_readInt(self) != 0) {
-      IOSObjectArray_Set(nil_chk(l), i, [c createFromParcelWithAndroidOsParcel:self]);
-    }
-  }
-  return l;
-}
-
-id AndroidOsParcel_readValueWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  jint type = AndroidOsParcel_readInt(self);
-  {
-    jint off;
-    switch (type) {
-      case AndroidOsParcel_VAL_NULL:
-      return nil;
-      case AndroidOsParcel_VAL_STRING:
-      return AndroidOsParcel_readString(self);
-      case AndroidOsParcel_VAL_INTEGER:
-      return JavaLangInteger_valueOfWithInt_(AndroidOsParcel_readInt(self));
-      case AndroidOsParcel_VAL_MAP:
-      return AndroidOsParcel_readHashMapWithJavaLangClassLoader_(self, loader);
-      case AndroidOsParcel_VAL_PARCELABLE:
-      return AndroidOsParcel_readParcelableWithJavaLangClassLoader_(self, loader);
-      case AndroidOsParcel_VAL_SHORT:
-      return JavaLangShort_valueOfWithShort_((jshort) AndroidOsParcel_readInt(self));
-      case AndroidOsParcel_VAL_LONG:
-      return JavaLangLong_valueOfWithLong_(AndroidOsParcel_readLong(self));
-      case AndroidOsParcel_VAL_FLOAT:
-      return JavaLangFloat_valueOfWithFloat_(AndroidOsParcel_readFloat(self));
-      case AndroidOsParcel_VAL_DOUBLE:
-      return JavaLangDouble_valueOfWithDouble_(AndroidOsParcel_readDouble(self));
-      case AndroidOsParcel_VAL_BOOLEAN:
-      return JavaLangBoolean_valueOfWithBoolean_(AndroidOsParcel_readInt(self) == 1);
-      case AndroidOsParcel_VAL_CHARSEQUENCE:
-      return AndroidOsParcel_readCharSequence(self);
-      case AndroidOsParcel_VAL_LIST:
-      return AndroidOsParcel_readArrayListWithJavaLangClassLoader_(self, loader);
-      case AndroidOsParcel_VAL_BOOLEANARRAY:
-      return AndroidOsParcel_createBooleanArray(self);
-      case AndroidOsParcel_VAL_BYTEARRAY:
-      return AndroidOsParcel_createByteArray(self);
-      case AndroidOsParcel_VAL_STRINGARRAY:
-      return AndroidOsParcel_readStringArray(self);
-      case AndroidOsParcel_VAL_CHARSEQUENCEARRAY:
-      return AndroidOsParcel_readCharSequenceArray(self);
-      case AndroidOsParcel_VAL_IBINDER:
-      return AndroidOsParcel_readStrongBinder(self);
-      case AndroidOsParcel_VAL_OBJECTARRAY:
-      return AndroidOsParcel_readArrayWithJavaLangClassLoader_(self, loader);
-      case AndroidOsParcel_VAL_INTARRAY:
-      return AndroidOsParcel_createIntArray(self);
-      case AndroidOsParcel_VAL_LONGARRAY:
-      return AndroidOsParcel_createLongArray(self);
-      case AndroidOsParcel_VAL_BYTE:
-      return JavaLangByte_valueOfWithByte_(AndroidOsParcel_readByte(self));
-      case AndroidOsParcel_VAL_SERIALIZABLE:
-      return AndroidOsParcel_readSerializable(self);
-      case AndroidOsParcel_VAL_PARCELABLEARRAY:
-      return AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(self, loader);
-      case AndroidOsParcel_VAL_SPARSEARRAY:
-      return AndroidOsParcel_readSparseArrayWithJavaLangClassLoader_(self, loader);
-      case AndroidOsParcel_VAL_SPARSEBOOLEANARRAY:
-      return AndroidOsParcel_readSparseBooleanArray(self);
-      case AndroidOsParcel_VAL_BUNDLE:
-      return AndroidOsParcel_readBundleWithJavaLangClassLoader_(self, loader);
-      default:
-      off = AndroidOsParcel_dataPosition(self) - 4;
-      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@$I$I", @"Parcel ", self, @": Unmarshalling unknown type code ", type, @" at offset ", off));
-    }
-  }
-}
-
-id<AndroidOsParcelable> AndroidOsParcel_readParcelableWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  NSString *name = AndroidOsParcel_readString(self);
-  if (name == nil) {
-    return nil;
-  }
-  id<AndroidOsParcelable_Creator> creator;
-  @synchronized(AndroidOsParcel_mCreators) {
-    JavaUtilHashMap *map = [((JavaUtilHashMap *) nil_chk(AndroidOsParcel_mCreators)) getWithId:loader];
-    if (map == nil) {
-      map = create_JavaUtilHashMap_init();
-      [AndroidOsParcel_mCreators putWithId:loader withId:map];
-    }
-    creator = [map getWithId:name];
-    if (creator == nil) {
-      @try {
-        IOSClass *c = loader == nil ? IOSClass_forName_(name) : IOSClass_forName_initialize_classLoader_(name, true, loader);
-        JavaLangReflectField *f = [c getField:@"CREATOR"];
-        creator = (id<AndroidOsParcelable_Creator>) cast_check([((JavaLangReflectField *) nil_chk(f)) getWithId:nil], AndroidOsParcelable_Creator_class_());
-      }
-      @catch (JavaLangIllegalAccessException *e) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidOsParcel_TAG, JreStrcat("$$$@", @"Class not found when unmarshalling: ", name, @", e: ", e));
-        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"IllegalAccessException when unmarshalling: ", name));
-      }
-      @catch (JavaLangClassNotFoundException *e) {
-        AndroidUtilLog_eWithNSString_withNSString_(AndroidOsParcel_TAG, JreStrcat("$$$@", @"Class not found when unmarshalling: ", name, @", e: ", e));
-        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"ClassNotFoundException when unmarshalling: ", name));
-      }
-      @catch (JavaLangClassCastException *e) {
-        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ", name));
-      }
-      @catch (JavaLangNoSuchFieldException *e) {
-        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ", name));
-      }
-      if (creator == nil) {
-        @throw create_AndroidOsBadParcelableException_initWithNSString_(JreStrcat("$$", @"Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ", name));
-      }
-      [map putWithId:name withId:creator];
-    }
-  }
-  return [creator createFromParcelWithAndroidOsParcel:self];
-}
-
-IOSObjectArray *AndroidOsParcel_readParcelableArrayWithJavaLangClassLoader_(AndroidOsParcel *self, JavaLangClassLoader *loader) {
-  jint N = AndroidOsParcel_readInt(self);
-  if (N < 0) {
-    return nil;
-  }
-  IOSObjectArray *p = [IOSObjectArray arrayWithLength:N type:AndroidOsParcelable_class_()];
-  for (jint i = 0; i < N; i++) {
-    IOSObjectArray_Set(p, i, AndroidOsParcel_readParcelableWithJavaLangClassLoader_(self, loader));
-  }
-  return p;
-}
-
-id<JavaIoSerializable> AndroidOsParcel_readSerializable(AndroidOsParcel *self) {
-  NSString *name = AndroidOsParcel_readString(self);
-  if (name == nil) {
-    return nil;
-  }
-  IOSByteArray *serializedData = AndroidOsParcel_createByteArray(self);
-  JavaIoByteArrayInputStream *bais = create_JavaIoByteArrayInputStream_initWithByteArray_(serializedData);
-  @try {
-    JavaIoObjectInputStream *ois = create_JavaIoObjectInputStream_initWithJavaIoInputStream_(bais);
-    return (id<JavaIoSerializable>) cast_check([ois readObject], JavaIoSerializable_class_());
-  }
-  @catch (JavaIoIOException *ioe) {
-    @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$C", @"Parcelable encountered IOException reading a Serializable object (name = ", name, ')'), ioe);
-  }
-  @catch (JavaLangClassNotFoundException *cnfe) {
-    @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$C", @"Parcelable encounteredClassNotFoundException reading a Serializable object (name = ", name, ')'), cnfe);
-  }
-}
-
-AndroidOsParcel *AndroidOsParcel_obtainWithInt_(jint obj) {
-  AndroidOsParcel_initialize();
-  IOSObjectArray *pool = AndroidOsParcel_sHolderPool;
-  @synchronized(pool) {
-    AndroidOsParcel *p;
-    for (jint i = 0; i < AndroidOsParcel_POOL_SIZE; i++) {
-      p = IOSObjectArray_Get(nil_chk(pool), i);
-      if (p != nil) {
-        IOSObjectArray_Set(pool, i, nil);
-        AndroidOsParcel_init__WithInt_(p, obj);
-        return p;
-      }
-    }
-  }
-  return create_AndroidOsParcel_initWithInt_(obj);
-}
-
-void AndroidOsParcel_initWithInt_(AndroidOsParcel *self, jint obj) {
-  NSObject_init(self);
-  AndroidOsParcel_init__WithInt_(self, obj);
-}
-
-AndroidOsParcel *new_AndroidOsParcel_initWithInt_(jint obj) {
-  J2OBJC_NEW_IMPL(AndroidOsParcel, initWithInt_, obj)
-}
-
-AndroidOsParcel *create_AndroidOsParcel_initWithInt_(jint obj) {
-  J2OBJC_CREATE_IMPL(AndroidOsParcel, initWithInt_, obj)
-}
-
-void AndroidOsParcel_init__WithInt_(AndroidOsParcel *self, jint obj) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_destroy(AndroidOsParcel *self) {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcel_readListInternalWithJavaUtilList_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, id<JavaUtilList> outVal, jint N, JavaLangClassLoader *loader) {
-  while (N > 0) {
-    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
-    [((id<JavaUtilList>) nil_chk(outVal)) addWithId:value];
-    N--;
-  }
-}
-
-void AndroidOsParcel_readArrayInternalWithNSObjectArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, IOSObjectArray *outVal, jint N, JavaLangClassLoader *loader) {
-  for (jint i = 0; i < N; i++) {
-    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
-    IOSObjectArray_Set(nil_chk(outVal), i, value);
-  }
-}
-
-void AndroidOsParcel_readSparseArrayInternalWithAndroidUtilSparseArray_withInt_withJavaLangClassLoader_(AndroidOsParcel *self, AndroidUtilSparseArray *outVal, jint N, JavaLangClassLoader *loader) {
-  while (N > 0) {
-    jint key = AndroidOsParcel_readInt(self);
-    id value = AndroidOsParcel_readValueWithJavaLangClassLoader_(self, loader);
-    [((AndroidUtilSparseArray *) nil_chk(outVal)) appendWithInt:key withId:value];
-    N--;
-  }
-}
-
-void AndroidOsParcel_readSparseBooleanArrayInternalWithAndroidUtilSparseBooleanArray_withInt_(AndroidOsParcel *self, AndroidUtilSparseBooleanArray *outVal, jint N) {
-  while (N > 0) {
-    jint key = AndroidOsParcel_readInt(self);
-    jboolean value = AndroidOsParcel_readByte(self) == 1;
-    [((AndroidUtilSparseBooleanArray *) nil_chk(outVal)) appendWithInt:key withBoolean:value];
-    N--;
-  }
-}
-
-IOSObjectArray *AndroidOsParcel__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsParcel)
-
-@implementation AndroidOsParcel_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsParcel_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (NSString *)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)source {
-  return AndroidOsParcel_readString(nil_chk(source));
-}
-
-- (IOSObjectArray *)newArrayWithInt:(jint)size {
-  return [IOSObjectArray arrayWithLength:size type:NSString_class_()];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "[LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(createFromParcelWithAndroidOsParcel:);
-  methods[2].selector = @selector(newArrayWithInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "createFromParcel", "LAndroidOsParcel;", "newArray", "I", "Ljava/lang/Object;Landroid/os/Parcelable$Creator<Ljava/lang/String;>;" };
-  static const J2ObjcClassInfo _AndroidOsParcel_1 = { "", "android.os", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 1, -1, -1, 4, -1 };
-  return &_AndroidOsParcel_1;
-}
-
-@end
-
-void AndroidOsParcel_1_init(AndroidOsParcel_1 *self) {
-  NSObject_init(self);
-}
-
-AndroidOsParcel_1 *new_AndroidOsParcel_1_init() {
-  J2OBJC_NEW_IMPL(AndroidOsParcel_1, init)
-}
-
-AndroidOsParcel_1 *create_AndroidOsParcel_1_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsParcel_1, init)
-}
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelFileDescriptor.h b/core/iostest/daggerframework/main/androidbase/AndroidOsParcelFileDescriptor.h
deleted file mode 100644
index ab9fdaf89..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelFileDescriptor.h
+++ /dev/null
@@ -1,190 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsParcelFileDescriptor")
-#ifdef RESTRICT_AndroidOsParcelFileDescriptor
-#define INCLUDE_ALL_AndroidOsParcelFileDescriptor 0
-#else
-#define INCLUDE_ALL_AndroidOsParcelFileDescriptor 1
-#endif
-#undef RESTRICT_AndroidOsParcelFileDescriptor
-
-#if !defined (AndroidOsParcelFileDescriptor_) && (INCLUDE_ALL_AndroidOsParcelFileDescriptor || defined(INCLUDE_AndroidOsParcelFileDescriptor))
-#define AndroidOsParcelFileDescriptor_
-
-#define RESTRICT_AndroidOsParcelable 1
-#define INCLUDE_AndroidOsParcelable 1
-#include "AndroidOsParcelable.h"
-
-@class AndroidOsParcel;
-@class IOSObjectArray;
-@class JavaIoFile;
-@class JavaIoFileDescriptor;
-@class JavaNetSocket;
-@protocol AndroidOsParcelable_Creator;
-
-@interface AndroidOsParcelFileDescriptor : NSObject < AndroidOsParcelable >
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidOsParcelFileDescriptor:(AndroidOsParcelFileDescriptor *)descriptor;
-
-- (void)close;
-
-+ (IOSObjectArray *)createPipe;
-
-- (jint)describeContents;
-
-+ (AndroidOsParcelFileDescriptor *)fromSocketWithJavaNetSocket:(JavaNetSocket *)socket;
-
-- (JavaIoFileDescriptor *)getFileDescriptor;
-
-- (jlong)getStatSize;
-
-+ (AndroidOsParcelFileDescriptor *)openWithJavaIoFile:(JavaIoFile *)file
-                                              withInt:(jint)mode;
-
-- (jlong)seekToWithLong:(jlong)pos;
-
-- (NSString *)description;
-
-- (void)writeToParcelWithAndroidOsParcel:(AndroidOsParcel *)outArg
-                                 withInt:(jint)flags;
-
-#pragma mark Protected
-
-- (void)java_finalize;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)descriptor;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsParcelFileDescriptor)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_WORLD_READABLE();
-#define AndroidOsParcelFileDescriptor_MODE_WORLD_READABLE 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_WORLD_READABLE, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_WORLD_WRITEABLE();
-#define AndroidOsParcelFileDescriptor_MODE_WORLD_WRITEABLE 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_WORLD_WRITEABLE, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_READ_ONLY();
-#define AndroidOsParcelFileDescriptor_MODE_READ_ONLY 268435456
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_READ_ONLY, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_WRITE_ONLY();
-#define AndroidOsParcelFileDescriptor_MODE_WRITE_ONLY 536870912
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_WRITE_ONLY, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_READ_WRITE();
-#define AndroidOsParcelFileDescriptor_MODE_READ_WRITE 805306368
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_READ_WRITE, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_CREATE();
-#define AndroidOsParcelFileDescriptor_MODE_CREATE 134217728
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_CREATE, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_TRUNCATE();
-#define AndroidOsParcelFileDescriptor_MODE_TRUNCATE 67108864
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_TRUNCATE, jint)
-
-inline jint AndroidOsParcelFileDescriptor_get_MODE_APPEND();
-#define AndroidOsParcelFileDescriptor_MODE_APPEND 33554432
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelFileDescriptor, MODE_APPEND, jint)
-
-inline id<AndroidOsParcelable_Creator> AndroidOsParcelFileDescriptor_get_CREATOR();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT id<AndroidOsParcelable_Creator> AndroidOsParcelFileDescriptor_CREATOR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsParcelFileDescriptor, CREATOR, id<AndroidOsParcelable_Creator>)
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor *AndroidOsParcelFileDescriptor_openWithJavaIoFile_withInt_(JavaIoFile *file, jint mode);
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor *AndroidOsParcelFileDescriptor_fromSocketWithJavaNetSocket_(JavaNetSocket *socket);
-
-FOUNDATION_EXPORT IOSObjectArray *AndroidOsParcelFileDescriptor_createPipe();
-
-FOUNDATION_EXPORT void AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *self, AndroidOsParcelFileDescriptor *descriptor);
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor *new_AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *descriptor) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor *create_AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *descriptor);
-
-FOUNDATION_EXPORT void AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(AndroidOsParcelFileDescriptor *self, JavaIoFileDescriptor *descriptor);
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor *new_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *descriptor) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor *create_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *descriptor);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsParcelFileDescriptor)
-
-#endif
-
-#if !defined (AndroidOsParcelFileDescriptor_AutoCloseInputStream_) && (INCLUDE_ALL_AndroidOsParcelFileDescriptor || defined(INCLUDE_AndroidOsParcelFileDescriptor_AutoCloseInputStream))
-#define AndroidOsParcelFileDescriptor_AutoCloseInputStream_
-
-#define RESTRICT_JavaIoFileInputStream 1
-#define INCLUDE_JavaIoFileInputStream 1
-#include "java/io/FileInputStream.h"
-
-@class AndroidOsParcelFileDescriptor;
-
-@interface AndroidOsParcelFileDescriptor_AutoCloseInputStream : JavaIoFileInputStream
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidOsParcelFileDescriptor:(AndroidOsParcelFileDescriptor *)fd;
-
-- (void)close;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcelFileDescriptor_AutoCloseInputStream)
-
-FOUNDATION_EXPORT void AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor_AutoCloseInputStream *self, AndroidOsParcelFileDescriptor *fd);
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor_AutoCloseInputStream *new_AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor_AutoCloseInputStream *create_AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsParcelFileDescriptor_AutoCloseInputStream)
-
-#endif
-
-#if !defined (AndroidOsParcelFileDescriptor_AutoCloseOutputStream_) && (INCLUDE_ALL_AndroidOsParcelFileDescriptor || defined(INCLUDE_AndroidOsParcelFileDescriptor_AutoCloseOutputStream))
-#define AndroidOsParcelFileDescriptor_AutoCloseOutputStream_
-
-#define RESTRICT_JavaIoFileOutputStream 1
-#define INCLUDE_JavaIoFileOutputStream 1
-#include "java/io/FileOutputStream.h"
-
-@class AndroidOsParcelFileDescriptor;
-
-@interface AndroidOsParcelFileDescriptor_AutoCloseOutputStream : JavaIoFileOutputStream
-
-#pragma mark Public
-
-- (instancetype)initWithAndroidOsParcelFileDescriptor:(AndroidOsParcelFileDescriptor *)fd;
-
-- (void)close;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcelFileDescriptor_AutoCloseOutputStream)
-
-FOUNDATION_EXPORT void AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor_AutoCloseOutputStream *self, AndroidOsParcelFileDescriptor *fd);
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor_AutoCloseOutputStream *new_AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsParcelFileDescriptor_AutoCloseOutputStream *create_AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsParcelFileDescriptor_AutoCloseOutputStream)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsParcelFileDescriptor")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelFileDescriptor.m b/core/iostest/daggerframework/main/androidbase/AndroidOsParcelFileDescriptor.m
deleted file mode 100644
index 6823e3939..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelFileDescriptor.m
+++ /dev/null
@@ -1,472 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsParcel.h"
-#include "AndroidOsParcelFileDescriptor.h"
-#include "AndroidOsParcelable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/File.h"
-#include "java/io/FileDescriptor.h"
-#include "java/io/FileInputStream.h"
-#include "java/io/FileOutputStream.h"
-#include "java/io/IOException.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/SecurityManager.h"
-#include "java/lang/System.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/net/Socket.h"
-
-@interface AndroidOsParcelFileDescriptor () {
- @public
-  JavaIoFileDescriptor *mFileDescriptor_;
-  jboolean mClosed_;
-  AndroidOsParcelFileDescriptor *mParcelDescriptor_;
-}
-
-+ (JavaIoFileDescriptor *)getFileDescriptorFromSocketWithJavaNetSocket:(JavaNetSocket *)socket;
-
-+ (jint)createPipeNativeWithJavaIoFileDescriptorArray:(IOSObjectArray *)outFds;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidOsParcelFileDescriptor, mFileDescriptor_, JavaIoFileDescriptor *)
-J2OBJC_FIELD_SETTER(AndroidOsParcelFileDescriptor, mParcelDescriptor_, AndroidOsParcelFileDescriptor *)
-
-__attribute__((unused)) static JavaIoFileDescriptor *AndroidOsParcelFileDescriptor_getFileDescriptorFromSocketWithJavaNetSocket_(JavaNetSocket *socket);
-
-__attribute__((unused)) static jint AndroidOsParcelFileDescriptor_createPipeNativeWithJavaIoFileDescriptorArray_(IOSObjectArray *outFds);
-
-@interface AndroidOsParcelFileDescriptor_AutoCloseInputStream () {
- @public
-  AndroidOsParcelFileDescriptor *mFd_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidOsParcelFileDescriptor_AutoCloseInputStream, mFd_, AndroidOsParcelFileDescriptor *)
-
-@interface AndroidOsParcelFileDescriptor_AutoCloseOutputStream () {
- @public
-  AndroidOsParcelFileDescriptor *mFd_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidOsParcelFileDescriptor_AutoCloseOutputStream, mFd_, AndroidOsParcelFileDescriptor *)
-
-@interface AndroidOsParcelFileDescriptor_1 : NSObject < AndroidOsParcelable_Creator >
-
-- (instancetype)init;
-
-- (AndroidOsParcelFileDescriptor *)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)inArg;
-
-- (IOSObjectArray *)newArrayWithInt:(jint)size OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcelFileDescriptor_1)
-
-__attribute__((unused)) static void AndroidOsParcelFileDescriptor_1_init(AndroidOsParcelFileDescriptor_1 *self);
-
-__attribute__((unused)) static AndroidOsParcelFileDescriptor_1 *new_AndroidOsParcelFileDescriptor_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidOsParcelFileDescriptor_1 *create_AndroidOsParcelFileDescriptor_1_init();
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsParcelFileDescriptor)
-
-id<AndroidOsParcelable_Creator> AndroidOsParcelFileDescriptor_CREATOR;
-
-@implementation AndroidOsParcelFileDescriptor
-
-+ (AndroidOsParcelFileDescriptor *)openWithJavaIoFile:(JavaIoFile *)file
-                                              withInt:(jint)mode {
-  return AndroidOsParcelFileDescriptor_openWithJavaIoFile_withInt_(file, mode);
-}
-
-+ (AndroidOsParcelFileDescriptor *)fromSocketWithJavaNetSocket:(JavaNetSocket *)socket {
-  return AndroidOsParcelFileDescriptor_fromSocketWithJavaNetSocket_(socket);
-}
-
-+ (JavaIoFileDescriptor *)getFileDescriptorFromSocketWithJavaNetSocket:(JavaNetSocket *)socket {
-  return AndroidOsParcelFileDescriptor_getFileDescriptorFromSocketWithJavaNetSocket_(socket);
-}
-
-+ (IOSObjectArray *)createPipe {
-  return AndroidOsParcelFileDescriptor_createPipe();
-}
-
-+ (jint)createPipeNativeWithJavaIoFileDescriptorArray:(IOSObjectArray *)outFds {
-  return AndroidOsParcelFileDescriptor_createPipeNativeWithJavaIoFileDescriptorArray_(outFds);
-}
-
-- (JavaIoFileDescriptor *)getFileDescriptor {
-  return mFileDescriptor_;
-}
-
-- (jlong)getStatSize {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (jlong)seekToWithLong:(jlong)pos {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)close {
-  @synchronized(self) {
-    if (mClosed_) return;
-    mClosed_ = true;
-  }
-  if (mParcelDescriptor_ != nil) {
-    [mParcelDescriptor_ close];
-  }
-  else {
-    AndroidOsParcel_closeFileDescriptorWithJavaIoFileDescriptor_(mFileDescriptor_);
-  }
-}
-
-- (NSString *)description {
-  return JreStrcat("$@C", @"{ParcelFileDescriptor: ", mFileDescriptor_, '}');
-}
-
-- (void)java_finalize {
-  @try {
-    if (!mClosed_) {
-      [self close];
-    }
-  }
-  @finally {
-    [super java_finalize];
-  }
-}
-
-- (instancetype)initWithAndroidOsParcelFileDescriptor:(AndroidOsParcelFileDescriptor *)descriptor {
-  AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(self, descriptor);
-  return self;
-}
-
-- (instancetype)initWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)descriptor {
-  AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(self, descriptor);
-  return self;
-}
-
-- (jint)describeContents {
-  return AndroidOsParcelable_CONTENTS_FILE_DESCRIPTOR;
-}
-
-- (void)writeToParcelWithAndroidOsParcel:(AndroidOsParcel *)outArg
-                                 withInt:(jint)flags {
-  [((AndroidOsParcel *) nil_chk(outArg)) writeFileDescriptorWithJavaIoFileDescriptor:mFileDescriptor_];
-  if ((flags & AndroidOsParcelable_PARCELABLE_WRITE_RETURN_VALUE) != 0 && !mClosed_) {
-    @try {
-      [self close];
-    }
-    @catch (JavaIoIOException *e) {
-    }
-  }
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidOsParcelFileDescriptor class]);
-  RELEASE_(mFileDescriptor_);
-  RELEASE_(mParcelDescriptor_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidOsParcelFileDescriptor;", 0x9, 0, 1, 2, -1, -1, -1 },
-    { NULL, "LAndroidOsParcelFileDescriptor;", 0x9, 3, 4, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileDescriptor;", 0xa, 5, 4, -1, -1, -1, -1 },
-    { NULL, "[LAndroidOsParcelFileDescriptor;", 0x9, -1, -1, 6, -1, -1, -1 },
-    { NULL, "I", 0xa, 7, 8, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFileDescriptor;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 9, 10, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 6, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 11, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 12, -1, 13, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 14, -1, -1, -1, -1 },
-    { NULL, NULL, 0x0, -1, 15, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(openWithJavaIoFile:withInt:);
-  methods[1].selector = @selector(fromSocketWithJavaNetSocket:);
-  methods[2].selector = @selector(getFileDescriptorFromSocketWithJavaNetSocket:);
-  methods[3].selector = @selector(createPipe);
-  methods[4].selector = @selector(createPipeNativeWithJavaIoFileDescriptorArray:);
-  methods[5].selector = @selector(getFileDescriptor);
-  methods[6].selector = @selector(getStatSize);
-  methods[7].selector = @selector(seekToWithLong:);
-  methods[8].selector = @selector(close);
-  methods[9].selector = @selector(description);
-  methods[10].selector = @selector(java_finalize);
-  methods[11].selector = @selector(initWithAndroidOsParcelFileDescriptor:);
-  methods[12].selector = @selector(initWithJavaIoFileDescriptor:);
-  methods[13].selector = @selector(describeContents);
-  methods[14].selector = @selector(writeToParcelWithAndroidOsParcel:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mFileDescriptor_", "LJavaIoFileDescriptor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mClosed_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mParcelDescriptor_", "LAndroidOsParcelFileDescriptor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "MODE_WORLD_READABLE", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_WORLD_READABLE, 0x19, -1, -1, -1, -1 },
-    { "MODE_WORLD_WRITEABLE", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_WORLD_WRITEABLE, 0x19, -1, -1, -1, -1 },
-    { "MODE_READ_ONLY", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_READ_ONLY, 0x19, -1, -1, -1, -1 },
-    { "MODE_WRITE_ONLY", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_WRITE_ONLY, 0x19, -1, -1, -1, -1 },
-    { "MODE_READ_WRITE", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_READ_WRITE, 0x19, -1, -1, -1, -1 },
-    { "MODE_CREATE", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_CREATE, 0x19, -1, -1, -1, -1 },
-    { "MODE_TRUNCATE", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_TRUNCATE, 0x19, -1, -1, -1, -1 },
-    { "MODE_APPEND", "I", .constantValue.asInt = AndroidOsParcelFileDescriptor_MODE_APPEND, 0x19, -1, -1, -1, -1 },
-    { "CREATOR", "LAndroidOsParcelable_Creator;", .constantValue.asLong = 0, 0x19, -1, 18, 19, -1 },
-  };
-  static const void *ptrTable[] = { "open", "LJavaIoFile;I", "LJavaIoFileNotFoundException;", "fromSocket", "LJavaNetSocket;", "getFileDescriptorFromSocket", "LJavaIoIOException;", "createPipeNative", "[LJavaIoFileDescriptor;", "seekTo", "J", "toString", "finalize", "LNSException;", "LAndroidOsParcelFileDescriptor;", "LJavaIoFileDescriptor;", "writeToParcel", "LAndroidOsParcel;I", &AndroidOsParcelFileDescriptor_CREATOR, "Landroid/os/Parcelable$Creator<Landroid/os/ParcelFileDescriptor;>;", "LAndroidOsParcelFileDescriptor_AutoCloseInputStream;LAndroidOsParcelFileDescriptor_AutoCloseOutputStream;" };
-  static const J2ObjcClassInfo _AndroidOsParcelFileDescriptor = { "ParcelFileDescriptor", "android.os", ptrTable, methods, fields, 7, 0x1, 15, 12, -1, 20, -1, -1, -1 };
-  return &_AndroidOsParcelFileDescriptor;
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsParcelFileDescriptor class]) {
-    JreStrongAssignAndConsume(&AndroidOsParcelFileDescriptor_CREATOR, new_AndroidOsParcelFileDescriptor_1_init());
-    J2OBJC_SET_INITIALIZED(AndroidOsParcelFileDescriptor)
-  }
-}
-
-@end
-
-AndroidOsParcelFileDescriptor *AndroidOsParcelFileDescriptor_openWithJavaIoFile_withInt_(JavaIoFile *file, jint mode) {
-  AndroidOsParcelFileDescriptor_initialize();
-  NSString *path = [((JavaIoFile *) nil_chk(file)) getPath];
-  JavaLangSecurityManager *security = JavaLangSystem_getSecurityManager();
-  if (security != nil) {
-    [security checkReadWithNSString:path];
-    if ((mode & AndroidOsParcelFileDescriptor_MODE_WRITE_ONLY) != 0) {
-      [security checkWriteWithNSString:path];
-    }
-  }
-  if ((mode & AndroidOsParcelFileDescriptor_MODE_READ_WRITE) == 0) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Must specify MODE_READ_ONLY, MODE_WRITE_ONLY, or MODE_READ_WRITE");
-  }
-  JavaIoFileDescriptor *fd = AndroidOsParcel_openFileDescriptorWithNSString_withInt_(path, mode);
-  return fd != nil ? create_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(fd) : nil;
-}
-
-AndroidOsParcelFileDescriptor *AndroidOsParcelFileDescriptor_fromSocketWithJavaNetSocket_(JavaNetSocket *socket) {
-  AndroidOsParcelFileDescriptor_initialize();
-  JavaIoFileDescriptor *fd = AndroidOsParcelFileDescriptor_getFileDescriptorFromSocketWithJavaNetSocket_(socket);
-  return fd != nil ? create_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(fd) : nil;
-}
-
-JavaIoFileDescriptor *AndroidOsParcelFileDescriptor_getFileDescriptorFromSocketWithJavaNetSocket_(JavaNetSocket *socket) {
-  AndroidOsParcelFileDescriptor_initialize();
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-IOSObjectArray *AndroidOsParcelFileDescriptor_createPipe() {
-  AndroidOsParcelFileDescriptor_initialize();
-  IOSObjectArray *fds = [IOSObjectArray arrayWithLength:2 type:JavaIoFileDescriptor_class_()];
-  jint res = AndroidOsParcelFileDescriptor_createPipeNativeWithJavaIoFileDescriptorArray_(fds);
-  if (res == 0) {
-    IOSObjectArray *pfds = [IOSObjectArray arrayWithLength:2 type:AndroidOsParcelFileDescriptor_class_()];
-    IOSObjectArray_SetAndConsume(pfds, 0, new_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(IOSObjectArray_Get(fds, 0)));
-    IOSObjectArray_SetAndConsume(pfds, 1, new_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(IOSObjectArray_Get(fds, 1)));
-    return pfds;
-  }
-  @throw create_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"Unable to create pipe: errno=", -res));
-}
-
-jint AndroidOsParcelFileDescriptor_createPipeNativeWithJavaIoFileDescriptorArray_(IOSObjectArray *outFds) {
-  AndroidOsParcelFileDescriptor_initialize();
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-void AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *self, AndroidOsParcelFileDescriptor *descriptor) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mParcelDescriptor_, descriptor);
-  JreStrongAssign(&self->mFileDescriptor_, ((AndroidOsParcelFileDescriptor *) nil_chk(self->mParcelDescriptor_))->mFileDescriptor_);
-}
-
-AndroidOsParcelFileDescriptor *new_AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *descriptor) {
-  J2OBJC_NEW_IMPL(AndroidOsParcelFileDescriptor, initWithAndroidOsParcelFileDescriptor_, descriptor)
-}
-
-AndroidOsParcelFileDescriptor *create_AndroidOsParcelFileDescriptor_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *descriptor) {
-  J2OBJC_CREATE_IMPL(AndroidOsParcelFileDescriptor, initWithAndroidOsParcelFileDescriptor_, descriptor)
-}
-
-void AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(AndroidOsParcelFileDescriptor *self, JavaIoFileDescriptor *descriptor) {
-  NSObject_init(self);
-  if (descriptor == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"descriptor must not be null");
-  }
-  JreStrongAssign(&self->mFileDescriptor_, descriptor);
-  JreStrongAssign(&self->mParcelDescriptor_, nil);
-}
-
-AndroidOsParcelFileDescriptor *new_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *descriptor) {
-  J2OBJC_NEW_IMPL(AndroidOsParcelFileDescriptor, initWithJavaIoFileDescriptor_, descriptor)
-}
-
-AndroidOsParcelFileDescriptor *create_AndroidOsParcelFileDescriptor_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *descriptor) {
-  J2OBJC_CREATE_IMPL(AndroidOsParcelFileDescriptor, initWithJavaIoFileDescriptor_, descriptor)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsParcelFileDescriptor)
-
-@implementation AndroidOsParcelFileDescriptor_AutoCloseInputStream
-
-- (instancetype)initWithAndroidOsParcelFileDescriptor:(AndroidOsParcelFileDescriptor *)fd {
-  AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(self, fd);
-  return self;
-}
-
-- (void)close {
-  [((AndroidOsParcelFileDescriptor *) nil_chk(mFd_)) close];
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidOsParcelFileDescriptor_AutoCloseInputStream class]);
-  RELEASE_(mFd_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidOsParcelFileDescriptor:);
-  methods[1].selector = @selector(close);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mFd_", "LAndroidOsParcelFileDescriptor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidOsParcelFileDescriptor;", "LJavaIoIOException;" };
-  static const J2ObjcClassInfo _AndroidOsParcelFileDescriptor_AutoCloseInputStream = { "AutoCloseInputStream", "android.os", ptrTable, methods, fields, 7, 0x9, 2, 1, 0, -1, -1, -1, -1 };
-  return &_AndroidOsParcelFileDescriptor_AutoCloseInputStream;
-}
-
-@end
-
-void AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor_AutoCloseInputStream *self, AndroidOsParcelFileDescriptor *fd) {
-  JavaIoFileInputStream_initWithJavaIoFileDescriptor_(self, [((AndroidOsParcelFileDescriptor *) nil_chk(fd)) getFileDescriptor]);
-  JreStrongAssign(&self->mFd_, fd);
-}
-
-AndroidOsParcelFileDescriptor_AutoCloseInputStream *new_AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd) {
-  J2OBJC_NEW_IMPL(AndroidOsParcelFileDescriptor_AutoCloseInputStream, initWithAndroidOsParcelFileDescriptor_, fd)
-}
-
-AndroidOsParcelFileDescriptor_AutoCloseInputStream *create_AndroidOsParcelFileDescriptor_AutoCloseInputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd) {
-  J2OBJC_CREATE_IMPL(AndroidOsParcelFileDescriptor_AutoCloseInputStream, initWithAndroidOsParcelFileDescriptor_, fd)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsParcelFileDescriptor_AutoCloseInputStream)
-
-@implementation AndroidOsParcelFileDescriptor_AutoCloseOutputStream
-
-- (instancetype)initWithAndroidOsParcelFileDescriptor:(AndroidOsParcelFileDescriptor *)fd {
-  AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(self, fd);
-  return self;
-}
-
-- (void)close {
-  [((AndroidOsParcelFileDescriptor *) nil_chk(mFd_)) close];
-}
-
-- (void)dealloc {
-  JreCheckFinalize(self, [AndroidOsParcelFileDescriptor_AutoCloseOutputStream class]);
-  RELEASE_(mFd_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithAndroidOsParcelFileDescriptor:);
-  methods[1].selector = @selector(close);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mFd_", "LAndroidOsParcelFileDescriptor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LAndroidOsParcelFileDescriptor;", "LJavaIoIOException;" };
-  static const J2ObjcClassInfo _AndroidOsParcelFileDescriptor_AutoCloseOutputStream = { "AutoCloseOutputStream", "android.os", ptrTable, methods, fields, 7, 0x9, 2, 1, 0, -1, -1, -1, -1 };
-  return &_AndroidOsParcelFileDescriptor_AutoCloseOutputStream;
-}
-
-@end
-
-void AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor_AutoCloseOutputStream *self, AndroidOsParcelFileDescriptor *fd) {
-  JavaIoFileOutputStream_initWithJavaIoFileDescriptor_(self, [((AndroidOsParcelFileDescriptor *) nil_chk(fd)) getFileDescriptor]);
-  JreStrongAssign(&self->mFd_, fd);
-}
-
-AndroidOsParcelFileDescriptor_AutoCloseOutputStream *new_AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd) {
-  J2OBJC_NEW_IMPL(AndroidOsParcelFileDescriptor_AutoCloseOutputStream, initWithAndroidOsParcelFileDescriptor_, fd)
-}
-
-AndroidOsParcelFileDescriptor_AutoCloseOutputStream *create_AndroidOsParcelFileDescriptor_AutoCloseOutputStream_initWithAndroidOsParcelFileDescriptor_(AndroidOsParcelFileDescriptor *fd) {
-  J2OBJC_CREATE_IMPL(AndroidOsParcelFileDescriptor_AutoCloseOutputStream, initWithAndroidOsParcelFileDescriptor_, fd)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsParcelFileDescriptor_AutoCloseOutputStream)
-
-@implementation AndroidOsParcelFileDescriptor_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsParcelFileDescriptor_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (AndroidOsParcelFileDescriptor *)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)inArg {
-  return [((AndroidOsParcel *) nil_chk(inArg)) readFileDescriptor];
-}
-
-- (IOSObjectArray *)newArrayWithInt:(jint)size {
-  return [IOSObjectArray arrayWithLength:size type:AndroidOsParcelFileDescriptor_class_()];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidOsParcelFileDescriptor;", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "[LAndroidOsParcelFileDescriptor;", 0x1, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(createFromParcelWithAndroidOsParcel:);
-  methods[2].selector = @selector(newArrayWithInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "createFromParcel", "LAndroidOsParcel;", "newArray", "I", "LAndroidOsParcelFileDescriptor;", "Ljava/lang/Object;Landroid/os/Parcelable$Creator<Landroid/os/ParcelFileDescriptor;>;" };
-  static const J2ObjcClassInfo _AndroidOsParcelFileDescriptor_1 = { "", "android.os", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 4, -1, -1, 5, -1 };
-  return &_AndroidOsParcelFileDescriptor_1;
-}
-
-@end
-
-void AndroidOsParcelFileDescriptor_1_init(AndroidOsParcelFileDescriptor_1 *self) {
-  NSObject_init(self);
-}
-
-AndroidOsParcelFileDescriptor_1 *new_AndroidOsParcelFileDescriptor_1_init() {
-  J2OBJC_NEW_IMPL(AndroidOsParcelFileDescriptor_1, init)
-}
-
-AndroidOsParcelFileDescriptor_1 *create_AndroidOsParcelFileDescriptor_1_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsParcelFileDescriptor_1, init)
-}
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelable.h b/core/iostest/daggerframework/main/androidbase/AndroidOsParcelable.h
deleted file mode 100644
index df39ccc3f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelable.h
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsParcelable")
-#ifdef RESTRICT_AndroidOsParcelable
-#define INCLUDE_ALL_AndroidOsParcelable 0
-#else
-#define INCLUDE_ALL_AndroidOsParcelable 1
-#endif
-#undef RESTRICT_AndroidOsParcelable
-
-#if !defined (AndroidOsParcelable_) && (INCLUDE_ALL_AndroidOsParcelable || defined(INCLUDE_AndroidOsParcelable))
-#define AndroidOsParcelable_
-
-@class AndroidOsParcel;
-
-@protocol AndroidOsParcelable < JavaObject >
-
-- (jint)describeContents;
-
-- (void)writeToParcelWithAndroidOsParcel:(AndroidOsParcel *)dest
-                                 withInt:(jint)flags;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcelable)
-
-inline jint AndroidOsParcelable_get_PARCELABLE_WRITE_RETURN_VALUE();
-#define AndroidOsParcelable_PARCELABLE_WRITE_RETURN_VALUE 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelable, PARCELABLE_WRITE_RETURN_VALUE, jint)
-
-inline jint AndroidOsParcelable_get_CONTENTS_FILE_DESCRIPTOR();
-#define AndroidOsParcelable_CONTENTS_FILE_DESCRIPTOR 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsParcelable, CONTENTS_FILE_DESCRIPTOR, jint)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsParcelable)
-
-#endif
-
-#if !defined (AndroidOsParcelable_Creator_) && (INCLUDE_ALL_AndroidOsParcelable || defined(INCLUDE_AndroidOsParcelable_Creator))
-#define AndroidOsParcelable_Creator_
-
-@class AndroidOsParcel;
-@class IOSObjectArray;
-
-@protocol AndroidOsParcelable_Creator < JavaObject >
-
-- (id)createFromParcelWithAndroidOsParcel:(AndroidOsParcel *)source;
-
-- (IOSObjectArray *)newArrayWithInt:(jint)size OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsParcelable_Creator)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsParcelable_Creator)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsParcelable")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelable.m b/core/iostest/daggerframework/main/androidbase/AndroidOsParcelable.m
deleted file mode 100644
index 28f9e08cd..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsParcelable.m
+++ /dev/null
@@ -1,60 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsParcelable.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidOsParcelable : NSObject
-
-@end
-
-@interface AndroidOsParcelable_Creator : NSObject
-
-@end
-
-@implementation AndroidOsParcelable
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(describeContents);
-  methods[1].selector = @selector(writeToParcelWithAndroidOsParcel:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "PARCELABLE_WRITE_RETURN_VALUE", "I", .constantValue.asInt = AndroidOsParcelable_PARCELABLE_WRITE_RETURN_VALUE, 0x19, -1, -1, -1, -1 },
-    { "CONTENTS_FILE_DESCRIPTOR", "I", .constantValue.asInt = AndroidOsParcelable_CONTENTS_FILE_DESCRIPTOR, 0x19, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "writeToParcel", "LAndroidOsParcel;I", "LAndroidOsParcelable_Creator;" };
-  static const J2ObjcClassInfo _AndroidOsParcelable = { "Parcelable", "android.os", ptrTable, methods, fields, 7, 0x609, 2, 2, -1, 2, -1, -1, -1 };
-  return &_AndroidOsParcelable;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsParcelable)
-
-@implementation AndroidOsParcelable_Creator
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSObject;", 0x401, 0, 1, -1, 2, -1, -1 },
-    { NULL, "[LNSObject;", 0x401, 3, 4, -1, 5, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(createFromParcelWithAndroidOsParcel:);
-  methods[1].selector = @selector(newArrayWithInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "createFromParcel", "LAndroidOsParcel;", "(Landroid/os/Parcel;)TT;", "newArray", "I", "(I)[TT;", "LAndroidOsParcelable;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _AndroidOsParcelable_Creator = { "Creator", "android.os", ptrTable, methods, NULL, 7, 0x609, 2, 0, 6, -1, -1, 7, -1 };
-  return &_AndroidOsParcelable_Creator;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsParcelable_Creator)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsRemoteException.h b/core/iostest/daggerframework/main/androidbase/AndroidOsRemoteException.h
deleted file mode 100644
index 2aa906c15..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsRemoteException.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsRemoteException")
-#ifdef RESTRICT_AndroidOsRemoteException
-#define INCLUDE_ALL_AndroidOsRemoteException 0
-#else
-#define INCLUDE_ALL_AndroidOsRemoteException 1
-#endif
-#undef RESTRICT_AndroidOsRemoteException
-
-#if !defined (AndroidOsRemoteException_) && (INCLUDE_ALL_AndroidOsRemoteException || defined(INCLUDE_AndroidOsRemoteException))
-#define AndroidOsRemoteException_
-
-#define RESTRICT_AndroidUtilAndroidException 1
-#define INCLUDE_AndroidUtilAndroidException 1
-#include "AndroidUtilAndroidException.h"
-
-@interface AndroidOsRemoteException : AndroidUtilAndroidException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsRemoteException)
-
-FOUNDATION_EXPORT void AndroidOsRemoteException_init(AndroidOsRemoteException *self);
-
-FOUNDATION_EXPORT AndroidOsRemoteException *new_AndroidOsRemoteException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidOsRemoteException *create_AndroidOsRemoteException_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsRemoteException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsRemoteException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsRemoteException.m b/core/iostest/daggerframework/main/androidbase/AndroidOsRemoteException.m
deleted file mode 100644
index 2b9e4767a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsRemoteException.m
+++ /dev/null
@@ -1,44 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsRemoteException.h"
-#include "AndroidUtilAndroidException.h"
-#include "J2ObjC_source.h"
-
-@implementation AndroidOsRemoteException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsRemoteException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _AndroidOsRemoteException = { "RemoteException", "android.os", NULL, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidOsRemoteException;
-}
-
-@end
-
-void AndroidOsRemoteException_init(AndroidOsRemoteException *self) {
-  AndroidUtilAndroidException_init(self);
-}
-
-AndroidOsRemoteException *new_AndroidOsRemoteException_init() {
-  J2OBJC_NEW_IMPL(AndroidOsRemoteException, init)
-}
-
-AndroidOsRemoteException *create_AndroidOsRemoteException_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsRemoteException, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsRemoteException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsThreadNudger.h b/core/iostest/daggerframework/main/androidbase/AndroidOsThreadNudger.h
deleted file mode 100644
index d734739b4..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsThreadNudger.h
+++ /dev/null
@@ -1,30 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsThreadNudger")
-#ifdef RESTRICT_AndroidOsThreadNudger
-#define INCLUDE_ALL_AndroidOsThreadNudger 0
-#else
-#define INCLUDE_ALL_AndroidOsThreadNudger 1
-#endif
-#undef RESTRICT_AndroidOsThreadNudger
-
-#if !defined (AndroidOsThreadNudger_) && (INCLUDE_ALL_AndroidOsThreadNudger || defined(INCLUDE_AndroidOsThreadNudger))
-#define AndroidOsThreadNudger_
-
-@protocol AndroidOsThreadNudger < JavaObject >
-
-- (void)nudge;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidOsThreadNudger)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsThreadNudger)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsThreadNudger")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsThreadNudger.m b/core/iostest/daggerframework/main/androidbase/AndroidOsThreadNudger.m
deleted file mode 100644
index 2fedbb7a9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsThreadNudger.m
+++ /dev/null
@@ -1,28 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsThreadNudger.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidOsThreadNudger : NSObject
-
-@end
-
-@implementation AndroidOsThreadNudger
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(nudge);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _AndroidOsThreadNudger = { "ThreadNudger", "android.os", NULL, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidOsThreadNudger;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsThreadNudger)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsTrace.h b/core/iostest/daggerframework/main/androidbase/AndroidOsTrace.h
deleted file mode 100644
index 2e3cdfdb5..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsTrace.h
+++ /dev/null
@@ -1,165 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidOsTrace")
-#ifdef RESTRICT_AndroidOsTrace
-#define INCLUDE_ALL_AndroidOsTrace 0
-#else
-#define INCLUDE_ALL_AndroidOsTrace 1
-#endif
-#undef RESTRICT_AndroidOsTrace
-
-#if !defined (AndroidOsTrace_) && (INCLUDE_ALL_AndroidOsTrace || defined(INCLUDE_AndroidOsTrace))
-#define AndroidOsTrace_
-
-@interface AndroidOsTrace : NSObject
-
-#pragma mark Public
-
-+ (void)asyncTraceBeginWithLong:(jlong)traceTag
-                   withNSString:(NSString *)methodName
-                        withInt:(jint)cookie;
-
-+ (void)asyncTraceEndWithLong:(jlong)traceTag
-                 withNSString:(NSString *)methodName
-                      withInt:(jint)cookie;
-
-+ (void)beginSectionWithNSString:(NSString *)sectionName;
-
-+ (void)endSection;
-
-+ (jboolean)isTagEnabledWithLong:(jlong)traceTag;
-
-+ (void)setAppTracingAllowedWithBoolean:(jboolean)allowed;
-
-+ (void)setTracingEnabledWithBoolean:(jboolean)enabled;
-
-+ (void)traceBeginWithLong:(jlong)traceTag
-              withNSString:(NSString *)methodName;
-
-+ (void)traceCounterWithLong:(jlong)traceTag
-                withNSString:(NSString *)counterName
-                     withInt:(jint)counterValue;
-
-+ (void)traceEndWithLong:(jlong)traceTag;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidOsTrace)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_NEVER();
-#define AndroidOsTrace_TRACE_TAG_NEVER 0LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_NEVER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_ALWAYS();
-#define AndroidOsTrace_TRACE_TAG_ALWAYS 1LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_ALWAYS, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_GRAPHICS();
-#define AndroidOsTrace_TRACE_TAG_GRAPHICS 2LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_GRAPHICS, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_INPUT();
-#define AndroidOsTrace_TRACE_TAG_INPUT 4LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_INPUT, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_VIEW();
-#define AndroidOsTrace_TRACE_TAG_VIEW 8LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_VIEW, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_WEBVIEW();
-#define AndroidOsTrace_TRACE_TAG_WEBVIEW 16LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_WEBVIEW, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_WINDOW_MANAGER();
-#define AndroidOsTrace_TRACE_TAG_WINDOW_MANAGER 32LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_WINDOW_MANAGER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_ACTIVITY_MANAGER();
-#define AndroidOsTrace_TRACE_TAG_ACTIVITY_MANAGER 64LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_ACTIVITY_MANAGER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_SYNC_MANAGER();
-#define AndroidOsTrace_TRACE_TAG_SYNC_MANAGER 128LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_SYNC_MANAGER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_AUDIO();
-#define AndroidOsTrace_TRACE_TAG_AUDIO 256LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_AUDIO, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_VIDEO();
-#define AndroidOsTrace_TRACE_TAG_VIDEO 512LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_VIDEO, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_CAMERA();
-#define AndroidOsTrace_TRACE_TAG_CAMERA 1024LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_CAMERA, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_HAL();
-#define AndroidOsTrace_TRACE_TAG_HAL 2048LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_HAL, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_APP();
-#define AndroidOsTrace_TRACE_TAG_APP 4096LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_APP, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_RESOURCES();
-#define AndroidOsTrace_TRACE_TAG_RESOURCES 8192LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_RESOURCES, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_DALVIK();
-#define AndroidOsTrace_TRACE_TAG_DALVIK 16384LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_DALVIK, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_RS();
-#define AndroidOsTrace_TRACE_TAG_RS 32768LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_RS, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_BIONIC();
-#define AndroidOsTrace_TRACE_TAG_BIONIC 65536LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_BIONIC, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_POWER();
-#define AndroidOsTrace_TRACE_TAG_POWER 131072LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_POWER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_PACKAGE_MANAGER();
-#define AndroidOsTrace_TRACE_TAG_PACKAGE_MANAGER 262144LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_PACKAGE_MANAGER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_SYSTEM_SERVER();
-#define AndroidOsTrace_TRACE_TAG_SYSTEM_SERVER 524288LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_SYSTEM_SERVER, jlong)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_DATABASE();
-#define AndroidOsTrace_TRACE_TAG_DATABASE 1048576LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_DATABASE, jlong)
-
-FOUNDATION_EXPORT jboolean AndroidOsTrace_isTagEnabledWithLong_(jlong traceTag);
-
-FOUNDATION_EXPORT void AndroidOsTrace_traceCounterWithLong_withNSString_withInt_(jlong traceTag, NSString *counterName, jint counterValue);
-
-FOUNDATION_EXPORT void AndroidOsTrace_setAppTracingAllowedWithBoolean_(jboolean allowed);
-
-FOUNDATION_EXPORT void AndroidOsTrace_setTracingEnabledWithBoolean_(jboolean enabled);
-
-FOUNDATION_EXPORT void AndroidOsTrace_traceBeginWithLong_withNSString_(jlong traceTag, NSString *methodName);
-
-FOUNDATION_EXPORT void AndroidOsTrace_traceEndWithLong_(jlong traceTag);
-
-FOUNDATION_EXPORT void AndroidOsTrace_asyncTraceBeginWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie);
-
-FOUNDATION_EXPORT void AndroidOsTrace_asyncTraceEndWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie);
-
-FOUNDATION_EXPORT void AndroidOsTrace_beginSectionWithNSString_(NSString *sectionName);
-
-FOUNDATION_EXPORT void AndroidOsTrace_endSection();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidOsTrace)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidOsTrace")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidOsTrace.m b/core/iostest/daggerframework/main/androidbase/AndroidOsTrace.m
deleted file mode 100644
index 3f82e2392..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidOsTrace.m
+++ /dev/null
@@ -1,403 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidOsTrace.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-
-@interface AndroidOsTrace ()
-
-+ (jlong)nativeGetEnabledTags;
-
-+ (void)nativeTraceCounterWithLong:(jlong)tag
-                      withNSString:(NSString *)name
-                           withInt:(jint)value;
-
-+ (void)nativeTraceBeginWithLong:(jlong)tag
-                    withNSString:(NSString *)name;
-
-+ (void)nativeTraceEndWithLong:(jlong)tag;
-
-+ (void)nativeAsyncTraceBeginWithLong:(jlong)tag
-                         withNSString:(NSString *)name
-                              withInt:(jint)cookie;
-
-+ (void)nativeAsyncTraceEndWithLong:(jlong)tag
-                       withNSString:(NSString *)name
-                            withInt:(jint)cookie;
-
-+ (void)nativeSetAppTracingAllowedWithBoolean:(jboolean)allowed;
-
-+ (void)nativeSetTracingEnabledWithBoolean:(jboolean)allowed;
-
-- (instancetype)init;
-
-+ (jlong)cacheEnabledTags;
-
-@end
-
-inline NSString *AndroidOsTrace_get_TAG();
-static NSString *AndroidOsTrace_TAG = @"Trace";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsTrace, TAG, NSString *)
-
-inline jlong AndroidOsTrace_get_TRACE_TAG_NOT_READY();
-#define AndroidOsTrace_TRACE_TAG_NOT_READY ((jlong) 0x8000000000000000LL)
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_NOT_READY, jlong)
-
-inline jint AndroidOsTrace_get_MAX_SECTION_NAME_LEN();
-#define AndroidOsTrace_MAX_SECTION_NAME_LEN 127
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, MAX_SECTION_NAME_LEN, jint)
-
-inline jlong AndroidOsTrace_get_sEnabledTags();
-inline jlong AndroidOsTrace_set_sEnabledTags(jlong value);
-static volatile_jlong AndroidOsTrace_sEnabledTags = -9223372036854775808;
-J2OBJC_STATIC_FIELD_PRIMITIVE_VOLATILE(AndroidOsTrace, sEnabledTags, jlong)
-
-__attribute__((unused)) static jlong AndroidOsTrace_nativeGetEnabledTags();
-
-__attribute__((unused)) static void AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(jlong tag, NSString *name, jint value);
-
-__attribute__((unused)) static void AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(jlong tag, NSString *name);
-
-__attribute__((unused)) static void AndroidOsTrace_nativeTraceEndWithLong_(jlong tag);
-
-__attribute__((unused)) static void AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie);
-
-__attribute__((unused)) static void AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie);
-
-__attribute__((unused)) static void AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(jboolean allowed);
-
-__attribute__((unused)) static void AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(jboolean allowed);
-
-__attribute__((unused)) static void AndroidOsTrace_init(AndroidOsTrace *self);
-
-__attribute__((unused)) static AndroidOsTrace *new_AndroidOsTrace_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidOsTrace *create_AndroidOsTrace_init();
-
-__attribute__((unused)) static jlong AndroidOsTrace_cacheEnabledTags();
-
-J2OBJC_INITIALIZED_DEFN(AndroidOsTrace)
-
-@implementation AndroidOsTrace
-
-+ (jlong)nativeGetEnabledTags {
-  return AndroidOsTrace_nativeGetEnabledTags();
-}
-
-+ (void)nativeTraceCounterWithLong:(jlong)tag
-                      withNSString:(NSString *)name
-                           withInt:(jint)value {
-  AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(tag, name, value);
-}
-
-+ (void)nativeTraceBeginWithLong:(jlong)tag
-                    withNSString:(NSString *)name {
-  AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(tag, name);
-}
-
-+ (void)nativeTraceEndWithLong:(jlong)tag {
-  AndroidOsTrace_nativeTraceEndWithLong_(tag);
-}
-
-+ (void)nativeAsyncTraceBeginWithLong:(jlong)tag
-                         withNSString:(NSString *)name
-                              withInt:(jint)cookie {
-  AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(tag, name, cookie);
-}
-
-+ (void)nativeAsyncTraceEndWithLong:(jlong)tag
-                       withNSString:(NSString *)name
-                            withInt:(jint)cookie {
-  AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(tag, name, cookie);
-}
-
-+ (void)nativeSetAppTracingAllowedWithBoolean:(jboolean)allowed {
-  AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(allowed);
-}
-
-+ (void)nativeSetTracingEnabledWithBoolean:(jboolean)allowed {
-  AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(allowed);
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidOsTrace_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jlong)cacheEnabledTags {
-  return AndroidOsTrace_cacheEnabledTags();
-}
-
-+ (jboolean)isTagEnabledWithLong:(jlong)traceTag {
-  return AndroidOsTrace_isTagEnabledWithLong_(traceTag);
-}
-
-+ (void)traceCounterWithLong:(jlong)traceTag
-                withNSString:(NSString *)counterName
-                     withInt:(jint)counterValue {
-  AndroidOsTrace_traceCounterWithLong_withNSString_withInt_(traceTag, counterName, counterValue);
-}
-
-+ (void)setAppTracingAllowedWithBoolean:(jboolean)allowed {
-  AndroidOsTrace_setAppTracingAllowedWithBoolean_(allowed);
-}
-
-+ (void)setTracingEnabledWithBoolean:(jboolean)enabled {
-  AndroidOsTrace_setTracingEnabledWithBoolean_(enabled);
-}
-
-+ (void)traceBeginWithLong:(jlong)traceTag
-              withNSString:(NSString *)methodName {
-  AndroidOsTrace_traceBeginWithLong_withNSString_(traceTag, methodName);
-}
-
-+ (void)traceEndWithLong:(jlong)traceTag {
-  AndroidOsTrace_traceEndWithLong_(traceTag);
-}
-
-+ (void)asyncTraceBeginWithLong:(jlong)traceTag
-                   withNSString:(NSString *)methodName
-                        withInt:(jint)cookie {
-  AndroidOsTrace_asyncTraceBeginWithLong_withNSString_withInt_(traceTag, methodName, cookie);
-}
-
-+ (void)asyncTraceEndWithLong:(jlong)traceTag
-                 withNSString:(NSString *)methodName
-                      withInt:(jint)cookie {
-  AndroidOsTrace_asyncTraceEndWithLong_withNSString_withInt_(traceTag, methodName, cookie);
-}
-
-+ (void)beginSectionWithNSString:(NSString *)sectionName {
-  AndroidOsTrace_beginSectionWithNSString_(sectionName);
-}
-
-+ (void)endSection {
-  AndroidOsTrace_endSection();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "J", 0x10a, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 6, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 7, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x10a, 10, 9, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0xa, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 11, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 12, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 13, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 14, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 15, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 16, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 17, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 18, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 19, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(nativeGetEnabledTags);
-  methods[1].selector = @selector(nativeTraceCounterWithLong:withNSString:withInt:);
-  methods[2].selector = @selector(nativeTraceBeginWithLong:withNSString:);
-  methods[3].selector = @selector(nativeTraceEndWithLong:);
-  methods[4].selector = @selector(nativeAsyncTraceBeginWithLong:withNSString:withInt:);
-  methods[5].selector = @selector(nativeAsyncTraceEndWithLong:withNSString:withInt:);
-  methods[6].selector = @selector(nativeSetAppTracingAllowedWithBoolean:);
-  methods[7].selector = @selector(nativeSetTracingEnabledWithBoolean:);
-  methods[8].selector = @selector(init);
-  methods[9].selector = @selector(cacheEnabledTags);
-  methods[10].selector = @selector(isTagEnabledWithLong:);
-  methods[11].selector = @selector(traceCounterWithLong:withNSString:withInt:);
-  methods[12].selector = @selector(setAppTracingAllowedWithBoolean:);
-  methods[13].selector = @selector(setTracingEnabledWithBoolean:);
-  methods[14].selector = @selector(traceBeginWithLong:withNSString:);
-  methods[15].selector = @selector(traceEndWithLong:);
-  methods[16].selector = @selector(asyncTraceBeginWithLong:withNSString:withInt:);
-  methods[17].selector = @selector(asyncTraceEndWithLong:withNSString:withInt:);
-  methods[18].selector = @selector(beginSectionWithNSString:);
-  methods[19].selector = @selector(endSection);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
-    { "TRACE_TAG_NEVER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_NEVER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_ALWAYS", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_ALWAYS, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_GRAPHICS", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_GRAPHICS, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_INPUT", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_INPUT, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_VIEW", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_VIEW, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_WEBVIEW", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_WEBVIEW, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_WINDOW_MANAGER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_WINDOW_MANAGER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_ACTIVITY_MANAGER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_ACTIVITY_MANAGER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_SYNC_MANAGER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_SYNC_MANAGER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_AUDIO", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_AUDIO, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_VIDEO", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_VIDEO, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_CAMERA", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_CAMERA, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_HAL", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_HAL, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_APP", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_APP, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_RESOURCES", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_RESOURCES, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_DALVIK", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_DALVIK, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_RS", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_RS, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_BIONIC", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_BIONIC, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_POWER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_POWER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_PACKAGE_MANAGER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_PACKAGE_MANAGER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_SYSTEM_SERVER", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_SYSTEM_SERVER, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_DATABASE", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_DATABASE, 0x19, -1, -1, -1, -1 },
-    { "TRACE_TAG_NOT_READY", "J", .constantValue.asLong = AndroidOsTrace_TRACE_TAG_NOT_READY, 0x1a, -1, -1, -1, -1 },
-    { "MAX_SECTION_NAME_LEN", "I", .constantValue.asInt = AndroidOsTrace_MAX_SECTION_NAME_LEN, 0x1a, -1, -1, -1, -1 },
-    { "sEnabledTags", "J", .constantValue.asLong = 0, 0x4a, -1, 22, -1, -1 },
-  };
-  static const void *ptrTable[] = { "nativeTraceCounter", "JLNSString;I", "nativeTraceBegin", "JLNSString;", "nativeTraceEnd", "J", "nativeAsyncTraceBegin", "nativeAsyncTraceEnd", "nativeSetAppTracingAllowed", "Z", "nativeSetTracingEnabled", "isTagEnabled", "traceCounter", "setAppTracingAllowed", "setTracingEnabled", "traceBegin", "traceEnd", "asyncTraceBegin", "asyncTraceEnd", "beginSection", "LNSString;", &AndroidOsTrace_TAG, &AndroidOsTrace_sEnabledTags };
-  static const J2ObjcClassInfo _AndroidOsTrace = { "Trace", "android.os", ptrTable, methods, fields, 7, 0x11, 20, 26, -1, -1, -1, -1, -1 };
-  return &_AndroidOsTrace;
-}
-
-+ (void)initialize {
-  if (self == [AndroidOsTrace class]) {
-    {
-    }
-    J2OBJC_SET_INITIALIZED(AndroidOsTrace)
-  }
-}
-
-@end
-
-jlong AndroidOsTrace_nativeGetEnabledTags() {
-  AndroidOsTrace_initialize();
-  return -1;
-}
-
-void AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(jlong tag, NSString *name, jint value) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(jlong tag, NSString *name) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_nativeTraceEndWithLong_(jlong tag) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(jboolean allowed) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(jboolean allowed) {
-  AndroidOsTrace_initialize();
-  
-}
-
-void AndroidOsTrace_init(AndroidOsTrace *self) {
-  NSObject_init(self);
-}
-
-AndroidOsTrace *new_AndroidOsTrace_init() {
-  J2OBJC_NEW_IMPL(AndroidOsTrace, init)
-}
-
-AndroidOsTrace *create_AndroidOsTrace_init() {
-  J2OBJC_CREATE_IMPL(AndroidOsTrace, init)
-}
-
-jlong AndroidOsTrace_cacheEnabledTags() {
-  AndroidOsTrace_initialize();
-  jlong tags = AndroidOsTrace_nativeGetEnabledTags();
-  JreAssignVolatileLong(&AndroidOsTrace_sEnabledTags, tags);
-  return tags;
-}
-
-jboolean AndroidOsTrace_isTagEnabledWithLong_(jlong traceTag) {
-  AndroidOsTrace_initialize();
-  jlong tags = JreLoadVolatileLong(&AndroidOsTrace_sEnabledTags);
-  if (tags == AndroidOsTrace_TRACE_TAG_NOT_READY) {
-    tags = AndroidOsTrace_cacheEnabledTags();
-  }
-  return (tags & traceTag) != 0;
-}
-
-void AndroidOsTrace_traceCounterWithLong_withNSString_withInt_(jlong traceTag, NSString *counterName, jint counterValue) {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
-    AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(traceTag, counterName, counterValue);
-  }
-}
-
-void AndroidOsTrace_setAppTracingAllowedWithBoolean_(jboolean allowed) {
-  AndroidOsTrace_initialize();
-  AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(allowed);
-  AndroidOsTrace_cacheEnabledTags();
-}
-
-void AndroidOsTrace_setTracingEnabledWithBoolean_(jboolean enabled) {
-  AndroidOsTrace_initialize();
-  AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(enabled);
-  AndroidOsTrace_cacheEnabledTags();
-}
-
-void AndroidOsTrace_traceBeginWithLong_withNSString_(jlong traceTag, NSString *methodName) {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
-    AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(traceTag, methodName);
-  }
-}
-
-void AndroidOsTrace_traceEndWithLong_(jlong traceTag) {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
-    AndroidOsTrace_nativeTraceEndWithLong_(traceTag);
-  }
-}
-
-void AndroidOsTrace_asyncTraceBeginWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie) {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
-    AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(traceTag, methodName, cookie);
-  }
-}
-
-void AndroidOsTrace_asyncTraceEndWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie) {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
-    AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(traceTag, methodName, cookie);
-  }
-}
-
-void AndroidOsTrace_beginSectionWithNSString_(NSString *sectionName) {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(AndroidOsTrace_TRACE_TAG_APP)) {
-    if (((jint) [((NSString *) nil_chk(sectionName)) length]) > AndroidOsTrace_MAX_SECTION_NAME_LEN) {
-      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sectionName is too long");
-    }
-    AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(AndroidOsTrace_TRACE_TAG_APP, sectionName);
-  }
-}
-
-void AndroidOsTrace_endSection() {
-  AndroidOsTrace_initialize();
-  if (AndroidOsTrace_isTagEnabledWithLong_(AndroidOsTrace_TRACE_TAG_APP)) {
-    AndroidOsTrace_nativeTraceEndWithLong_(AndroidOsTrace_TRACE_TAG_APP);
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsTrace)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidProviderBaseColumns.h b/core/iostest/daggerframework/main/androidbase/AndroidProviderBaseColumns.h
deleted file mode 100644
index c69bbfa6f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidProviderBaseColumns.h
+++ /dev/null
@@ -1,38 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidProviderBaseColumns")
-#ifdef RESTRICT_AndroidProviderBaseColumns
-#define INCLUDE_ALL_AndroidProviderBaseColumns 0
-#else
-#define INCLUDE_ALL_AndroidProviderBaseColumns 1
-#endif
-#undef RESTRICT_AndroidProviderBaseColumns
-
-#if !defined (AndroidProviderBaseColumns_) && (INCLUDE_ALL_AndroidProviderBaseColumns || defined(INCLUDE_AndroidProviderBaseColumns))
-#define AndroidProviderBaseColumns_
-
-@protocol AndroidProviderBaseColumns < JavaObject >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidProviderBaseColumns)
-
-inline NSString *AndroidProviderBaseColumns_get__ID();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidProviderBaseColumns__ID;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidProviderBaseColumns, _ID, NSString *)
-
-inline NSString *AndroidProviderBaseColumns_get__COUNT();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidProviderBaseColumns__COUNT;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidProviderBaseColumns, _COUNT, NSString *)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidProviderBaseColumns)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidProviderBaseColumns")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidProviderBaseColumns.m b/core/iostest/daggerframework/main/androidbase/AndroidProviderBaseColumns.m
deleted file mode 100644
index 080246185..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidProviderBaseColumns.m
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidProviderBaseColumns.h"
-#include "J2ObjC_source.h"
-
-@interface AndroidProviderBaseColumns : NSObject
-
-@end
-
-NSString *AndroidProviderBaseColumns__ID = @"_id";
-NSString *AndroidProviderBaseColumns__COUNT = @"_count";
-
-@implementation AndroidProviderBaseColumns
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const J2ObjcFieldInfo fields[] = {
-    { "_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
-    { "_COUNT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
-  };
-  static const void *ptrTable[] = { &AndroidProviderBaseColumns__ID, &AndroidProviderBaseColumns__COUNT };
-  static const J2ObjcClassInfo _AndroidProviderBaseColumns = { "BaseColumns", "android.provider", ptrTable, NULL, fields, 7, 0x609, 0, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidProviderBaseColumns;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidProviderBaseColumns)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationCheckResult.h b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationCheckResult.h
deleted file mode 100644
index e01e33244..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationCheckResult.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidSupportAnnotationCheckResult")
-#ifdef RESTRICT_AndroidSupportAnnotationCheckResult
-#define INCLUDE_ALL_AndroidSupportAnnotationCheckResult 0
-#else
-#define INCLUDE_ALL_AndroidSupportAnnotationCheckResult 1
-#endif
-#undef RESTRICT_AndroidSupportAnnotationCheckResult
-
-#if !defined (AndroidSupportAnnotationCheckResult_) && (INCLUDE_ALL_AndroidSupportAnnotationCheckResult || defined(INCLUDE_AndroidSupportAnnotationCheckResult))
-#define AndroidSupportAnnotationCheckResult_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidSupportAnnotationCheckResult < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidSupportAnnotationCheckResult)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationCheckResult)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidSupportAnnotationCheckResult")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationCheckResult.m b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationCheckResult.m
deleted file mode 100644
index a9022d29b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationCheckResult.m
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidSupportAnnotationCheckResult.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidSupportAnnotationCheckResult : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationCheckResult__Annotations$0();
-
-@implementation AndroidSupportAnnotationCheckResult
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(suggest);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&AndroidSupportAnnotationCheckResult__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidSupportAnnotationCheckResult = { "CheckResult", "android.support.annotation", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidSupportAnnotationCheckResult;
-}
-
-@end
-
-IOSObjectArray *AndroidSupportAnnotationCheckResult__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationCheckResult)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationIntDef.h b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationIntDef.h
deleted file mode 100644
index 1c38ab6dc..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationIntDef.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidSupportAnnotationIntDef")
-#ifdef RESTRICT_AndroidSupportAnnotationIntDef
-#define INCLUDE_ALL_AndroidSupportAnnotationIntDef 0
-#else
-#define INCLUDE_ALL_AndroidSupportAnnotationIntDef 1
-#endif
-#undef RESTRICT_AndroidSupportAnnotationIntDef
-
-#if !defined (AndroidSupportAnnotationIntDef_) && (INCLUDE_ALL_AndroidSupportAnnotationIntDef || defined(INCLUDE_AndroidSupportAnnotationIntDef))
-#define AndroidSupportAnnotationIntDef_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSLongArray;
-
-@protocol AndroidSupportAnnotationIntDef < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidSupportAnnotationIntDef)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationIntDef)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidSupportAnnotationIntDef")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationIntDef.m b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationIntDef.m
deleted file mode 100644
index 2381abd6e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationIntDef.m
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidSupportAnnotationIntDef.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidSupportAnnotationIntDef : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationIntDef__Annotations$0();
-
-@implementation AndroidSupportAnnotationIntDef
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[J", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  methods[1].selector = @selector(flag);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&AndroidSupportAnnotationIntDef__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidSupportAnnotationIntDef = { "IntDef", "android.support.annotation", ptrTable, methods, NULL, 7, 0x2609, 2, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidSupportAnnotationIntDef;
-}
-
-@end
-
-IOSObjectArray *AndroidSupportAnnotationIntDef__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationIntDef)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNonNull.h b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNonNull.h
deleted file mode 100644
index e970549c4..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNonNull.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidSupportAnnotationNonNull")
-#ifdef RESTRICT_AndroidSupportAnnotationNonNull
-#define INCLUDE_ALL_AndroidSupportAnnotationNonNull 0
-#else
-#define INCLUDE_ALL_AndroidSupportAnnotationNonNull 1
-#endif
-#undef RESTRICT_AndroidSupportAnnotationNonNull
-
-#if !defined (AndroidSupportAnnotationNonNull_) && (INCLUDE_ALL_AndroidSupportAnnotationNonNull || defined(INCLUDE_AndroidSupportAnnotationNonNull))
-#define AndroidSupportAnnotationNonNull_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidSupportAnnotationNonNull < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidSupportAnnotationNonNull)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationNonNull)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidSupportAnnotationNonNull")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNonNull.m b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNonNull.m
deleted file mode 100644
index 75e0a8722..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNonNull.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidSupportAnnotationNonNull.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidSupportAnnotationNonNull : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationNonNull__Annotations$0();
-
-@implementation AndroidSupportAnnotationNonNull
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&AndroidSupportAnnotationNonNull__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidSupportAnnotationNonNull = { "NonNull", "android.support.annotation", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidSupportAnnotationNonNull;
-}
-
-@end
-
-IOSObjectArray *AndroidSupportAnnotationNonNull__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER), JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:3 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationNonNull)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNullable.h b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNullable.h
deleted file mode 100644
index f1a0ade9b..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNullable.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidSupportAnnotationNullable")
-#ifdef RESTRICT_AndroidSupportAnnotationNullable
-#define INCLUDE_ALL_AndroidSupportAnnotationNullable 0
-#else
-#define INCLUDE_ALL_AndroidSupportAnnotationNullable 1
-#endif
-#undef RESTRICT_AndroidSupportAnnotationNullable
-
-#if !defined (AndroidSupportAnnotationNullable_) && (INCLUDE_ALL_AndroidSupportAnnotationNullable || defined(INCLUDE_AndroidSupportAnnotationNullable))
-#define AndroidSupportAnnotationNullable_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidSupportAnnotationNullable < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidSupportAnnotationNullable)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationNullable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidSupportAnnotationNullable")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNullable.m b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNullable.m
deleted file mode 100644
index efb26a981..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationNullable.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidSupportAnnotationNullable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface AndroidSupportAnnotationNullable : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationNullable__Annotations$0();
-
-@implementation AndroidSupportAnnotationNullable
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&AndroidSupportAnnotationNullable__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidSupportAnnotationNullable = { "Nullable", "android.support.annotation", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidSupportAnnotationNullable;
-}
-
-@end
-
-IOSObjectArray *AndroidSupportAnnotationNullable__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER), JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:3 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationNullable)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationVisibleForTesting.h b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationVisibleForTesting.h
deleted file mode 100644
index 2f7d50736..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationVisibleForTesting.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidSupportAnnotationVisibleForTesting")
-#ifdef RESTRICT_AndroidSupportAnnotationVisibleForTesting
-#define INCLUDE_ALL_AndroidSupportAnnotationVisibleForTesting 0
-#else
-#define INCLUDE_ALL_AndroidSupportAnnotationVisibleForTesting 1
-#endif
-#undef RESTRICT_AndroidSupportAnnotationVisibleForTesting
-
-#if !defined (AndroidSupportAnnotationVisibleForTesting_) && (INCLUDE_ALL_AndroidSupportAnnotationVisibleForTesting || defined(INCLUDE_AndroidSupportAnnotationVisibleForTesting))
-#define AndroidSupportAnnotationVisibleForTesting_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol AndroidSupportAnnotationVisibleForTesting < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidSupportAnnotationVisibleForTesting)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidSupportAnnotationVisibleForTesting)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidSupportAnnotationVisibleForTesting")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationVisibleForTesting.m b/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationVisibleForTesting.m
deleted file mode 100644
index 75c31b690..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidSupportAnnotationVisibleForTesting.m
+++ /dev/null
@@ -1,33 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidSupportAnnotationVisibleForTesting.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-
-@interface AndroidSupportAnnotationVisibleForTesting : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *AndroidSupportAnnotationVisibleForTesting__Annotations$0();
-
-@implementation AndroidSupportAnnotationVisibleForTesting
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&AndroidSupportAnnotationVisibleForTesting__Annotations$0 };
-  static const J2ObjcClassInfo _AndroidSupportAnnotationVisibleForTesting = { "VisibleForTesting", "android.support.annotation", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_AndroidSupportAnnotationVisibleForTesting;
-}
-
-@end
-
-IOSObjectArray *AndroidSupportAnnotationVisibleForTesting__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidSupportAnnotationVisibleForTesting)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyJapanesePhoneNumberFormatter.h b/core/iostest/daggerframework/main/androidbase/AndroidTelephonyJapanesePhoneNumberFormatter.h
deleted file mode 100644
index 1413b0a12..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyJapanesePhoneNumberFormatter.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidTelephonyJapanesePhoneNumberFormatter")
-#ifdef RESTRICT_AndroidTelephonyJapanesePhoneNumberFormatter
-#define INCLUDE_ALL_AndroidTelephonyJapanesePhoneNumberFormatter 0
-#else
-#define INCLUDE_ALL_AndroidTelephonyJapanesePhoneNumberFormatter 1
-#endif
-#undef RESTRICT_AndroidTelephonyJapanesePhoneNumberFormatter
-
-#if !defined (AndroidTelephonyJapanesePhoneNumberFormatter_) && (INCLUDE_ALL_AndroidTelephonyJapanesePhoneNumberFormatter || defined(INCLUDE_AndroidTelephonyJapanesePhoneNumberFormatter))
-#define AndroidTelephonyJapanesePhoneNumberFormatter_
-
-@protocol AndroidTextEditable;
-
-@interface AndroidTelephonyJapanesePhoneNumberFormatter : NSObject
-
-#pragma mark Public
-
-+ (void)formatWithAndroidTextEditable:(id<AndroidTextEditable>)text;
-
-#pragma mark Package-Private
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidTelephonyJapanesePhoneNumberFormatter)
-
-FOUNDATION_EXPORT void AndroidTelephonyJapanesePhoneNumberFormatter_init(AndroidTelephonyJapanesePhoneNumberFormatter *self);
-
-FOUNDATION_EXPORT AndroidTelephonyJapanesePhoneNumberFormatter *new_AndroidTelephonyJapanesePhoneNumberFormatter_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidTelephonyJapanesePhoneNumberFormatter *create_AndroidTelephonyJapanesePhoneNumberFormatter_init();
-
-FOUNDATION_EXPORT void AndroidTelephonyJapanesePhoneNumberFormatter_formatWithAndroidTextEditable_(id<AndroidTextEditable> text);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidTelephonyJapanesePhoneNumberFormatter)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidTelephonyJapanesePhoneNumberFormatter")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyJapanesePhoneNumberFormatter.m b/core/iostest/daggerframework/main/androidbase/AndroidTelephonyJapanesePhoneNumberFormatter.m
deleted file mode 100644
index 55dc05580..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyJapanesePhoneNumberFormatter.m
+++ /dev/null
@@ -1,128 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidTelephonyJapanesePhoneNumberFormatter.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/text/Editable.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Character.h"
-#include "java/lang/Math.h"
-
-inline IOSShortArray *AndroidTelephonyJapanesePhoneNumberFormatter_get_FORMAT_MAP();
-inline IOSShortArray *AndroidTelephonyJapanesePhoneNumberFormatter_set_FORMAT_MAP(IOSShortArray *value);
-static IOSShortArray *AndroidTelephonyJapanesePhoneNumberFormatter_FORMAT_MAP;
-J2OBJC_STATIC_FIELD_OBJ(AndroidTelephonyJapanesePhoneNumberFormatter, FORMAT_MAP, IOSShortArray *)
-
-J2OBJC_INITIALIZED_DEFN(AndroidTelephonyJapanesePhoneNumberFormatter)
-
-@implementation AndroidTelephonyJapanesePhoneNumberFormatter
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidTelephonyJapanesePhoneNumberFormatter_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (void)formatWithAndroidTextEditable:(id<AndroidTextEditable>)text {
-  AndroidTelephonyJapanesePhoneNumberFormatter_formatWithAndroidTextEditable_(text);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(formatWithAndroidTextEditable:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "FORMAT_MAP", "[S", .constantValue.asLong = 0, 0xa, -1, 2, -1, -1 },
-  };
-  static const void *ptrTable[] = { "format", "LAndroidTextEditable;", &AndroidTelephonyJapanesePhoneNumberFormatter_FORMAT_MAP };
-  static const J2ObjcClassInfo _AndroidTelephonyJapanesePhoneNumberFormatter = { "JapanesePhoneNumberFormatter", "android.telephony", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidTelephonyJapanesePhoneNumberFormatter;
-}
-
-+ (void)initialize {
-  if (self == [AndroidTelephonyJapanesePhoneNumberFormatter class]) {
-    JreStrongAssignAndConsume(&AndroidTelephonyJapanesePhoneNumberFormatter_FORMAT_MAP, [IOSShortArray newArrayWithShorts:(jshort[]){ -100, 10, 220, -15, 410, 530, -15, 670, 780, 1060, -100, -25, 20, 40, 70, 100, 150, 190, 200, 210, -36, -100, -100, -35, -35, -35, 30, -100, -100, -100, -35, -35, -35, -35, -35, -35, -35, -45, -35, -35, -100, -100, -100, -35, -35, -35, -35, 50, -35, 60, -35, -35, -45, -35, -45, -35, -35, -45, -35, -35, -35, -35, -45, -35, -35, -35, -35, -45, -45, -35, -100, -100, -35, -35, -35, 80, 90, -100, -100, -100, -35, -35, -35, -35, -35, -35, -45, -45, -35, -35, -35, -35, -35, -35, -35, -35, -45, -35, -35, -35, -25, -25, -35, -35, 110, 120, 130, -35, 140, -25, -35, -25, -35, -35, -35, -35, -35, -45, -25, -35, -35, -25, -35, -35, -35, -35, -35, -25, -45, -35, -35, -35, -35, -35, -45, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -45, -45, -35, -35, -100, -100, -35, 160, 170, 180, -35, -35, -100, -100, -35, -35, -45, -35, -45, -45, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -45, -35, -35, -35, -35, -35, -45, -45, -45, -35, -45, -35, -25, -25, -35, -35, -35, -35, -35, -25, -35, -35, -25, -25, -35, -35, -35, -35, -35, -35, -25, -25, -25, -35, -35, -35, -35, -35, -25, -35, -35, -25, -100, -100, 230, 250, 260, 270, 320, 340, 360, 390, -35, -25, -25, 240, -35, -35, -35, -25, -35, -35, -25, -35, -35, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -35, -35, -35, -25, -35, -35, -25, -35, -35, -35, -35, -35, -25, -35, -35, -35, -25, -35, -25, -25, -25, -35, 280, 290, 300, 310, -35, -25, -25, -25, -25, -25, -25, -25, -35, -35, -25, -25, -35, -35, -35, -35, -35, -35, -35, -35, -35, -25, -25, -35, -35, -35, -25, -25, -25, -25, -25, -25, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -25, -35, 330, -35, -35, -35, -35, -35, -25, -35, -35, -35, -35, -35, -25, -25, -25, -25, -35, -25, -25, -25, -35, -25, -35, -35, 350, -35, -25, -35, -35, -35, -35, -35, -35, -35, -25, -25, -35, -25, -35, 370, -35, -35, -25, -35, -35, 380, -25, -35, -35, -25, -25, -35, -35, -35, -35, -35, -25, -35, -25, -25, -25, -25, -35, -35, -35, -35, -25, -35, -25, 400, -35, -35, -35, -35, -25, -35, -25, -35, -35, -35, -35, -25, -25, -25, -25, -25, -15, -15, 420, 460, -25, -25, 470, 480, 500, 510, -15, -25, 430, -25, -25, -25, -25, -25, 440, 450, -25, -35, -35, -35, -35, -35, -35, -35, -35, -35, -25, -25, -35, -35, -25, -25, -25, -35, -35, -35, -15, -25, -15, -15, -15, -15, -15, -25, -25, -15, -25, -25, -25, -25, -25, -25, -35, -25, -35, -35, -35, -25, -25, -35, -25, -35, -35, -35, -25, -25, 490, -15, -25, -25, -25, -35, -35, -25, -35, -35, -15, -35, -35, -35, -35, -35, -35, -35, -35, -15, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -35, -35, -35, -25, -25, -25, 520, -100, -100, -45, -100, -45, -100, -45, -100, -45, -100, -25, -100, -25, 540, 580, 590, 600, 610, 630, 640, -25, -35, -35, -35, -25, -25, -35, -35, -35, 550, -35, -35, -25, -25, -25, -25, 560, 570, -25, -35, -35, -35, -35, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -35, -25, -25, -35, -25, -25, -25, -25, -25, -25, -35, -35, -25, -35, -35, -25, -35, -35, -25, -35, -35, -35, -35, -35, -35, -25, -100, -35, -35, -35, -35, -35, -35, -35, -35, -35, -36, -100, -35, -35, -35, -35, 620, -35, -35, -100, -35, -35, -35, -35, -35, -35, -35, -35, -35, -45, -25, -35, -25, -25, -35, -35, -35, -35, -25, -25, -25, -25, -25, -25, -35, -35, -35, 650, -35, 660, -35, -35, -35, -35, -45, -35, -35, -35, -35, -45, -35, -35, -35, -35, -35, -35, -35, -35, -35, -25, -26, -100, 680, 690, 700, -25, 720, 730, -25, 740, -25, -35, -25, -25, -25, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -35, -35, -35, -35, -35, -35, -100, -35, -35, -35, -35, 710, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -45, -35, -25, -35, -25, -35, -25, -35, -35, -35, -35, -25, -35, -35, -35, -35, -35, -25, -35, -25, -35, -35, -35, -35, -25, -25, 750, 760, 770, -35, -35, -35, -25, -35, -25, -25, -25, -25, -35, -35, -35, -25, -25, -35, -35, -35, -35, -25, -25, -35, -35, -25, -25, -35, -35, -35, -35, -35, -25, -25, -35, -35, 790, -100, 800, 850, 900, 920, 940, 1030, 1040, 1050, -36, -26, -26, -26, -26, -26, -26, -26, -26, -26, -35, -25, -25, -35, 810, -25, -35, -35, -25, 820, -25, -35, -25, -25, -35, -35, -35, -35, -35, -25, -25, -35, 830, -35, 840, -35, -25, -35, -35, -25, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -100, -25, -25, -25, -100, -100, -100, -100, -100, -100, -25, -25, -35, -35, -35, -35, 860, -35, 870, 880, -25, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -45, -45, -35, -100, -100, -100, -100, -100, -100, 890, -100, -100, -100, -25, -45, -45, -25, -45, -45, -25, -45, -45, -45, -25, -25, -25, -25, -25, -35, -35, 910, -35, -25, -35, -35, -35, -35, -35, -35, -35, -45, -35, -35, -100, 930, -35, -35, -35, -35, -35, -35, -35, -35, -100, -100, -45, -100, -45, -100, -100, -100, -100, -100, -25, -25, -25, 950, -25, 970, 990, -35, 1000, 1010, -35, -35, -35, -35, -35, -35, 960, -35, -35, -35, -45, -45, -45, -45, -45, -45, -35, -45, -45, -45, -35, -35, -25, -35, -35, 980, -35, -35, -35, -35, -100, -100, -25, -25, -100, -100, -100, -100, -100, -100, -25, -35, -35, -35, -35, -35, -35, -35, -35, -35, -25, -35, -35, -35, -35, -35, -35, -35, -35, -25, -25, -35, -35, -35, -25, -25, -35, -35, -35, 1020, -45, -45, -35, -35, -45, -45, -45, -45, -45, -45, -25, -25, -25, -25, -25, -35, -25, -35, -25, -35, -35, -25, -25, -35, -35, -35, -25, -35, -25, -35, -25, -25, -35, -35, -35, -35, -35, -35, -35, -25, -26, -100, 1070, 1080, 1090, 1110, 1120, 1130, 1140, 1160, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -35, -25, -25, -25, -25, -25, -25, -25, -25, -25, -35, -100, -35, -35, -35, -100, -35, -35, -35, 1100, -35, -35, -35, -35, -35, -35, -45, -35, -35, -35, -35, -25, -35, -25, -35, -35, -35, -35, -25, -35, -25, -25, -25, -25, -35, -35, -35, -35, -35, -35, -25, -25, -35, -35, -35, -25, -25, -35, -35, -35, 1150, -25, -35, -35, -35, -35, -35, -35, -25, -25, -35, -35, -45, -35, -35, -35, -35, -35, -35, -35, -35, 1170, -25, -35, 1180, -35, 1190, -35, -25, -25, -100, -100, -45, -45, -100, -100, -100, -100, -100, -100, -25, -35, -35, -35, -35, -35, -35, -25, -25, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -45 } count:1200]);
-    J2OBJC_SET_INITIALIZED(AndroidTelephonyJapanesePhoneNumberFormatter)
-  }
-}
-
-@end
-
-void AndroidTelephonyJapanesePhoneNumberFormatter_init(AndroidTelephonyJapanesePhoneNumberFormatter *self) {
-  NSObject_init(self);
-}
-
-AndroidTelephonyJapanesePhoneNumberFormatter *new_AndroidTelephonyJapanesePhoneNumberFormatter_init() {
-  J2OBJC_NEW_IMPL(AndroidTelephonyJapanesePhoneNumberFormatter, init)
-}
-
-AndroidTelephonyJapanesePhoneNumberFormatter *create_AndroidTelephonyJapanesePhoneNumberFormatter_init() {
-  J2OBJC_CREATE_IMPL(AndroidTelephonyJapanesePhoneNumberFormatter, init)
-}
-
-void AndroidTelephonyJapanesePhoneNumberFormatter_formatWithAndroidTextEditable_(id<AndroidTextEditable> text) {
-  AndroidTelephonyJapanesePhoneNumberFormatter_initialize();
-  jint rootIndex = 1;
-  jint length = [((id<AndroidTextEditable>) nil_chk(text)) length];
-  if (length > 3 && [((NSString *) nil_chk([((id<JavaLangCharSequence>) nil_chk([text subSequenceFrom:0 to:3])) description])) isEqual:@"+81"]) {
-    rootIndex = 3;
-  }
-  else if (length < 1 || [text charAtWithInt:0] != '0') {
-    return;
-  }
-  id<JavaLangCharSequence> saved = [text subSequenceFrom:0 to:length];
-  jint i = 0;
-  while (i < [text length]) {
-    if ([text charAtWithInt:i] == '-') {
-      [text delete__WithInt:i withInt:i + 1];
-    }
-    else {
-      i++;
-    }
-  }
-  length = [text length];
-  jint dashposition;
-  i = rootIndex;
-  jint base = 0;
-  while (i < length) {
-    jchar ch = [text charAtWithInt:i];
-    if (!JavaLangCharacter_isDigitWithChar_(ch)) {
-      [text replaceWithInt:0 withInt:length withJavaLangCharSequence:saved];
-      return;
-    }
-    jshort value = IOSShortArray_Get(nil_chk(AndroidTelephonyJapanesePhoneNumberFormatter_FORMAT_MAP), base + ch - '0');
-    if (value < 0) {
-      if (value <= -100) {
-        [text replaceWithInt:0 withInt:length withJavaLangCharSequence:saved];
-        return;
-      }
-      jint dashPos2 = rootIndex + (JavaLangMath_absWithInt_(value) % 10);
-      if (length > dashPos2) {
-        [text insertWithInt:dashPos2 withJavaLangCharSequence:@"-"];
-      }
-      jint dashPos1 = rootIndex + (JavaLangMath_absWithInt_(value) / 10);
-      if (length > dashPos1) {
-        [text insertWithInt:dashPos1 withJavaLangCharSequence:@"-"];
-      }
-      break;
-    }
-    else {
-      base = value;
-      i++;
-    }
-  }
-  if (length > 3 && rootIndex == 3) {
-    [text insertWithInt:rootIndex withJavaLangCharSequence:@"-"];
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidTelephonyJapanesePhoneNumberFormatter)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyPhoneNumberUtils.h b/core/iostest/daggerframework/main/androidbase/AndroidTelephonyPhoneNumberUtils.h
deleted file mode 100644
index 70efa527c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyPhoneNumberUtils.h
+++ /dev/null
@@ -1,233 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidTelephonyPhoneNumberUtils")
-#ifdef RESTRICT_AndroidTelephonyPhoneNumberUtils
-#define INCLUDE_ALL_AndroidTelephonyPhoneNumberUtils 0
-#else
-#define INCLUDE_ALL_AndroidTelephonyPhoneNumberUtils 1
-#endif
-#undef RESTRICT_AndroidTelephonyPhoneNumberUtils
-
-#if !defined (AndroidTelephonyPhoneNumberUtils_) && (INCLUDE_ALL_AndroidTelephonyPhoneNumberUtils || defined(INCLUDE_AndroidTelephonyPhoneNumberUtils))
-#define AndroidTelephonyPhoneNumberUtils_
-
-@class IOSByteArray;
-@class JavaUtilLocale;
-@protocol AndroidTextEditable;
-
-@interface AndroidTelephonyPhoneNumberUtils : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (NSString *)calledPartyBCDFragmentToStringWithByteArray:(IOSByteArray *)bytes
-                                                  withInt:(jint)offset
-                                                  withInt:(jint)length;
-
-+ (NSString *)calledPartyBCDToStringWithByteArray:(IOSByteArray *)bytes
-                                          withInt:(jint)offset
-                                          withInt:(jint)length;
-
-+ (jboolean)compareWithNSString:(NSString *)a
-                   withNSString:(NSString *)b;
-
-+ (jboolean)compareWithNSString:(NSString *)a
-                   withNSString:(NSString *)b
-                    withBoolean:(jboolean)useStrictComparation;
-
-+ (jboolean)compareLooselyWithNSString:(NSString *)a
-                          withNSString:(NSString *)b;
-
-+ (jboolean)compareStrictlyWithNSString:(NSString *)a
-                           withNSString:(NSString *)b;
-
-+ (jboolean)compareStrictlyWithNSString:(NSString *)a
-                           withNSString:(NSString *)b
-                            withBoolean:(jboolean)acceptInvalidCCCPrefix;
-
-+ (NSString *)convertKeypadLettersToDigitsWithNSString:(NSString *)input;
-
-+ (NSString *)extractNetworkPortionWithNSString:(NSString *)phoneNumber;
-
-+ (NSString *)extractNetworkPortionAltWithNSString:(NSString *)phoneNumber;
-
-+ (NSString *)extractPostDialPortionWithNSString:(NSString *)phoneNumber;
-
-+ (void)formatJapaneseNumberWithAndroidTextEditable:(id<AndroidTextEditable>)text;
-
-+ (void)formatNanpNumberWithAndroidTextEditable:(id<AndroidTextEditable>)text;
-
-+ (void)formatNumberWithAndroidTextEditable:(id<AndroidTextEditable>)text
-                                    withInt:(jint)defaultFormattingType;
-
-+ (NSString *)formatNumberWithNSString:(NSString *)source;
-
-+ (NSString *)formatNumberWithNSString:(NSString *)source
-                               withInt:(jint)defaultFormattingType;
-
-+ (jint)getFormatTypeForLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale;
-
-+ (NSString *)getStrippedReversedWithNSString:(NSString *)phoneNumber;
-
-+ (jboolean)is12KeyWithChar:(jchar)c;
-
-+ (jboolean)isDialableWithChar:(jchar)c;
-
-+ (jboolean)isGlobalPhoneNumberWithNSString:(NSString *)phoneNumber;
-
-+ (jboolean)isISODigitWithChar:(jchar)c;
-
-+ (jboolean)isNonSeparatorWithChar:(jchar)c;
-
-+ (jboolean)isReallyDialableWithChar:(jchar)c;
-
-+ (jboolean)isStartsPostDialWithChar:(jchar)c;
-
-+ (jboolean)isUriNumberWithNSString:(NSString *)number;
-
-+ (jboolean)isWellFormedSmsAddressWithNSString:(NSString *)address;
-
-+ (IOSByteArray *)networkPortionToCalledPartyBCDWithNSString:(NSString *)s;
-
-+ (IOSByteArray *)networkPortionToCalledPartyBCDWithLengthWithNSString:(NSString *)s;
-
-+ (IOSByteArray *)numberToCalledPartyBCDWithNSString:(NSString *)number;
-
-+ (NSString *)stringFromStringAndTOAWithNSString:(NSString *)s
-                                         withInt:(jint)TOA;
-
-+ (NSString *)stripSeparatorsWithNSString:(NSString *)phoneNumber;
-
-+ (jint)toaFromStringWithNSString:(NSString *)s;
-
-+ (NSString *)toCallerIDMinMatchWithNSString:(NSString *)phoneNumber;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidTelephonyPhoneNumberUtils)
-
-inline jchar AndroidTelephonyPhoneNumberUtils_get_PAUSE();
-#define AndroidTelephonyPhoneNumberUtils_PAUSE ','
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, PAUSE, jchar)
-
-inline jchar AndroidTelephonyPhoneNumberUtils_get_WAIT();
-#define AndroidTelephonyPhoneNumberUtils_WAIT ';'
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, WAIT, jchar)
-
-inline jchar AndroidTelephonyPhoneNumberUtils_get_WILD();
-#define AndroidTelephonyPhoneNumberUtils_WILD 'N'
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, WILD, jchar)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_TOA_International();
-#define AndroidTelephonyPhoneNumberUtils_TOA_International 145
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, TOA_International, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_TOA_Unknown();
-#define AndroidTelephonyPhoneNumberUtils_TOA_Unknown 129
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, TOA_Unknown, jint)
-
-inline NSString *AndroidTelephonyPhoneNumberUtils_get_LOG_TAG();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_LOG_TAG;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, LOG_TAG, NSString *)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_FORMAT_UNKNOWN();
-#define AndroidTelephonyPhoneNumberUtils_FORMAT_UNKNOWN 0
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, FORMAT_UNKNOWN, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_FORMAT_NANP();
-#define AndroidTelephonyPhoneNumberUtils_FORMAT_NANP 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, FORMAT_NANP, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_FORMAT_JAPAN();
-#define AndroidTelephonyPhoneNumberUtils_FORMAT_JAPAN 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, FORMAT_JAPAN, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_MIN_MATCH();
-#define AndroidTelephonyPhoneNumberUtils_MIN_MATCH 7
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, MIN_MATCH, jint)
-
-FOUNDATION_EXPORT void AndroidTelephonyPhoneNumberUtils_init(AndroidTelephonyPhoneNumberUtils *self);
-
-FOUNDATION_EXPORT AndroidTelephonyPhoneNumberUtils *new_AndroidTelephonyPhoneNumberUtils_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidTelephonyPhoneNumberUtils *create_AndroidTelephonyPhoneNumberUtils_init();
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isISODigitWithChar_(jchar c);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_is12KeyWithChar_(jchar c);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(jchar c);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isReallyDialableWithChar_(jchar c);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(jchar c);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isStartsPostDialWithChar_(jchar c);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_extractNetworkPortionWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_extractNetworkPortionAltWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_stripSeparatorsWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_extractPostDialPortionWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_(NSString *a, NSString *b);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_withBoolean_(NSString *a, NSString *b, jboolean useStrictComparation);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_compareLooselyWithNSString_withNSString_(NSString *a, NSString *b);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_(NSString *a, NSString *b);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_withBoolean_(NSString *a, NSString *b, jboolean acceptInvalidCCCPrefix);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_toCallerIDMinMatchWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_getStrippedReversedWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_stringFromStringAndTOAWithNSString_withInt_(NSString *s, jint TOA);
-
-FOUNDATION_EXPORT jint AndroidTelephonyPhoneNumberUtils_toaFromStringWithNSString_(NSString *s);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_calledPartyBCDToStringWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_calledPartyBCDFragmentToStringWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isWellFormedSmsAddressWithNSString_(NSString *address);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isGlobalPhoneNumberWithNSString_(NSString *phoneNumber);
-
-FOUNDATION_EXPORT IOSByteArray *AndroidTelephonyPhoneNumberUtils_networkPortionToCalledPartyBCDWithNSString_(NSString *s);
-
-FOUNDATION_EXPORT IOSByteArray *AndroidTelephonyPhoneNumberUtils_networkPortionToCalledPartyBCDWithLengthWithNSString_(NSString *s);
-
-FOUNDATION_EXPORT IOSByteArray *AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDWithNSString_(NSString *number);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_formatNumberWithNSString_(NSString *source);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_formatNumberWithNSString_withInt_(NSString *source, jint defaultFormattingType);
-
-FOUNDATION_EXPORT jint AndroidTelephonyPhoneNumberUtils_getFormatTypeForLocaleWithJavaUtilLocale_(JavaUtilLocale *locale);
-
-FOUNDATION_EXPORT void AndroidTelephonyPhoneNumberUtils_formatNumberWithAndroidTextEditable_withInt_(id<AndroidTextEditable> text, jint defaultFormattingType);
-
-FOUNDATION_EXPORT void AndroidTelephonyPhoneNumberUtils_formatNanpNumberWithAndroidTextEditable_(id<AndroidTextEditable> text);
-
-FOUNDATION_EXPORT void AndroidTelephonyPhoneNumberUtils_formatJapaneseNumberWithAndroidTextEditable_(id<AndroidTextEditable> text);
-
-FOUNDATION_EXPORT NSString *AndroidTelephonyPhoneNumberUtils_convertKeypadLettersToDigitsWithNSString_(NSString *input);
-
-FOUNDATION_EXPORT jboolean AndroidTelephonyPhoneNumberUtils_isUriNumberWithNSString_(NSString *number);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidTelephonyPhoneNumberUtils)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidTelephonyPhoneNumberUtils")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyPhoneNumberUtils.m b/core/iostest/daggerframework/main/androidbase/AndroidTelephonyPhoneNumberUtils.m
deleted file mode 100644
index e8301d981..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidTelephonyPhoneNumberUtils.m
+++ /dev/null
@@ -1,1833 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidTelephonyJapanesePhoneNumberFormatter.h"
-#include "AndroidTelephonyPhoneNumberUtils.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/text/Editable.h"
-#include "android/text/SpannableStringBuilder.h"
-#include "android/text/TextUtils.h"
-#include "android/util/Log.h"
-#include "android/util/SparseIntArray.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/util/Locale.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-
-@class AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex;
-
-@interface AndroidTelephonyPhoneNumberUtils ()
-
-+ (jboolean)isSeparatorWithChar:(jchar)ch;
-
-+ (jint)minPositiveWithInt:(jint)a
-                   withInt:(jint)b;
-
-+ (void)logWithNSString:(NSString *)msg;
-
-+ (jint)indexOfLastNetworkCharWithNSString:(NSString *)a;
-
-+ (NSString *)internalGetStrippedReversedWithNSString:(NSString *)np
-                                              withInt:(jint)numDigits;
-
-+ (void)internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
-                                                          withByteArray:(IOSByteArray *)bytes
-                                                                withInt:(jint)offset
-                                                                withInt:(jint)length;
-
-+ (jchar)bcdToCharWithByte:(jbyte)b;
-
-+ (jint)charToBCDWithChar:(jchar)c;
-
-+ (jboolean)isDialableWithNSString:(NSString *)address;
-
-+ (jboolean)isNonSeparatorWithNSString:(NSString *)address;
-
-+ (IOSByteArray *)numberToCalledPartyBCDHelperWithNSString:(NSString *)number
-                                               withBoolean:(jboolean)includeLength;
-
-+ (jboolean)isTwoToNineWithChar:(jchar)c;
-
-+ (jint)getFormatTypeFromCountryCodeWithNSString:(NSString *)country;
-
-+ (jboolean)isNanpWithNSString:(NSString *)dialStr;
-
-+ (jboolean)isOneNanpWithNSString:(NSString *)dialStr;
-
-+ (jint)findDialableIndexFromPostDialStrWithNSString:(NSString *)postDialStr;
-
-+ (NSString *)appendPwCharBackToOrigDialStrWithInt:(jint)dialableIndex
-                                      withNSString:(NSString *)origStr
-                                      withNSString:(NSString *)dialStr;
-
-+ (jboolean)matchIntlPrefixWithNSString:(NSString *)a
-                                withInt:(jint)len;
-
-+ (jboolean)matchIntlPrefixAndCCWithNSString:(NSString *)a
-                                     withInt:(jint)len;
-
-+ (jboolean)matchTrunkPrefixWithNSString:(NSString *)a
-                                 withInt:(jint)len;
-
-+ (jboolean)isCountryCallingCodeWithInt:(jint)countryCallingCodeCandidate;
-
-+ (jint)tryGetISODigitWithChar:(jchar)ch;
-
-+ (AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *)tryGetCountryCallingCodeAndNewIndexWithNSString:(NSString *)str
-                                                                                                        withBoolean:(jboolean)acceptThailandCase;
-
-+ (jint)tryGetTrunkPrefixOmittedIndexWithNSString:(NSString *)str
-                                          withInt:(jint)currentIndex;
-
-+ (jboolean)checkPrefixIsIgnorableWithNSString:(NSString *)str
-                                       withInt:(jint)forwardIndex
-                                       withInt:(jint)backwardIndex;
-
-@end
-
-inline jboolean AndroidTelephonyPhoneNumberUtils_get_DBG();
-#define AndroidTelephonyPhoneNumberUtils_DBG false
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, DBG, jboolean)
-
-inline JavaUtilRegexPattern *AndroidTelephonyPhoneNumberUtils_get_GLOBAL_PHONE_NUMBER_PATTERN();
-static JavaUtilRegexPattern *AndroidTelephonyPhoneNumberUtils_GLOBAL_PHONE_NUMBER_PATTERN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, GLOBAL_PHONE_NUMBER_PATTERN, JavaUtilRegexPattern *)
-
-inline IOSObjectArray *AndroidTelephonyPhoneNumberUtils_get_NANP_COUNTRIES();
-static IOSObjectArray *AndroidTelephonyPhoneNumberUtils_NANP_COUNTRIES;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, NANP_COUNTRIES, IOSObjectArray *)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_NANP_STATE_DIGIT();
-#define AndroidTelephonyPhoneNumberUtils_NANP_STATE_DIGIT 1
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, NANP_STATE_DIGIT, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_NANP_STATE_PLUS();
-#define AndroidTelephonyPhoneNumberUtils_NANP_STATE_PLUS 2
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, NANP_STATE_PLUS, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_NANP_STATE_ONE();
-#define AndroidTelephonyPhoneNumberUtils_NANP_STATE_ONE 3
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, NANP_STATE_ONE, jint)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_NANP_STATE_DASH();
-#define AndroidTelephonyPhoneNumberUtils_NANP_STATE_DASH 4
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, NANP_STATE_DASH, jint)
-
-inline AndroidUtilSparseIntArray *AndroidTelephonyPhoneNumberUtils_get_KEYPAD_MAP();
-static AndroidUtilSparseIntArray *AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, KEYPAD_MAP, AndroidUtilSparseIntArray *)
-
-inline jchar AndroidTelephonyPhoneNumberUtils_get_PLUS_SIGN_CHAR();
-#define AndroidTelephonyPhoneNumberUtils_PLUS_SIGN_CHAR '+'
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, PLUS_SIGN_CHAR, jchar)
-
-inline NSString *AndroidTelephonyPhoneNumberUtils_get_PLUS_SIGN_STRING();
-static NSString *AndroidTelephonyPhoneNumberUtils_PLUS_SIGN_STRING = @"+";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, PLUS_SIGN_STRING, NSString *)
-
-inline NSString *AndroidTelephonyPhoneNumberUtils_get_NANP_IDP_STRING();
-static NSString *AndroidTelephonyPhoneNumberUtils_NANP_IDP_STRING = @"011";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, NANP_IDP_STRING, NSString *)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_NANP_LENGTH();
-#define AndroidTelephonyPhoneNumberUtils_NANP_LENGTH 10
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidTelephonyPhoneNumberUtils, NANP_LENGTH, jint)
-
-inline IOSBooleanArray *AndroidTelephonyPhoneNumberUtils_get_COUNTLY_CALLING_CALL();
-static IOSBooleanArray *AndroidTelephonyPhoneNumberUtils_COUNTLY_CALLING_CALL;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidTelephonyPhoneNumberUtils, COUNTLY_CALLING_CALL, IOSBooleanArray *)
-
-inline jint AndroidTelephonyPhoneNumberUtils_get_CCC_LENGTH();
-static jint AndroidTelephonyPhoneNumberUtils_CCC_LENGTH;
-J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(AndroidTelephonyPhoneNumberUtils, CCC_LENGTH, jint)
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isSeparatorWithChar_(jchar ch);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_minPositiveWithInt_withInt_(jint a, jint b);
-
-__attribute__((unused)) static void AndroidTelephonyPhoneNumberUtils_logWithNSString_(NSString *msg);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_indexOfLastNetworkCharWithNSString_(NSString *a);
-
-__attribute__((unused)) static NSString *AndroidTelephonyPhoneNumberUtils_internalGetStrippedReversedWithNSString_withInt_(NSString *np, jint numDigits);
-
-__attribute__((unused)) static void AndroidTelephonyPhoneNumberUtils_internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder_withByteArray_withInt_withInt_(JavaLangStringBuilder *sb, IOSByteArray *bytes, jint offset, jint length);
-
-__attribute__((unused)) static jchar AndroidTelephonyPhoneNumberUtils_bcdToCharWithByte_(jbyte b);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_charToBCDWithChar_(jchar c);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isDialableWithNSString_(NSString *address);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithNSString_(NSString *address);
-
-__attribute__((unused)) static IOSByteArray *AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDHelperWithNSString_withBoolean_(NSString *number, jboolean includeLength);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isTwoToNineWithChar_(jchar c);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_getFormatTypeFromCountryCodeWithNSString_(NSString *country);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isNanpWithNSString_(NSString *dialStr);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isOneNanpWithNSString_(NSString *dialStr);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_findDialableIndexFromPostDialStrWithNSString_(NSString *postDialStr);
-
-__attribute__((unused)) static NSString *AndroidTelephonyPhoneNumberUtils_appendPwCharBackToOrigDialStrWithInt_withNSString_withNSString_(jint dialableIndex, NSString *origStr, NSString *dialStr);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_matchIntlPrefixWithNSString_withInt_(NSString *a, jint len);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_matchIntlPrefixAndCCWithNSString_withInt_(NSString *a, jint len);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_matchTrunkPrefixWithNSString_withInt_(NSString *a, jint len);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_isCountryCallingCodeWithInt_(jint countryCallingCodeCandidate);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(jchar ch);
-
-__attribute__((unused)) static AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *AndroidTelephonyPhoneNumberUtils_tryGetCountryCallingCodeAndNewIndexWithNSString_withBoolean_(NSString *str, jboolean acceptThailandCase);
-
-__attribute__((unused)) static jint AndroidTelephonyPhoneNumberUtils_tryGetTrunkPrefixOmittedIndexWithNSString_withInt_(NSString *str, jint currentIndex);
-
-__attribute__((unused)) static jboolean AndroidTelephonyPhoneNumberUtils_checkPrefixIsIgnorableWithNSString_withInt_withInt_(NSString *str, jint forwardIndex, jint backwardIndex);
-
-@interface AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex : NSObject {
- @public
-  jint countryCallingCode_;
-  jint newIndex_;
-}
-
-- (instancetype)initWithInt:(jint)countryCode
-                    withInt:(jint)newIndex;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex)
-
-__attribute__((unused)) static void AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *self, jint countryCode, jint newIndex);
-
-__attribute__((unused)) static AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *new_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(jint countryCode, jint newIndex) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *create_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(jint countryCode, jint newIndex);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex)
-
-J2OBJC_INITIALIZED_DEFN(AndroidTelephonyPhoneNumberUtils)
-
-NSString *AndroidTelephonyPhoneNumberUtils_LOG_TAG = @"PhoneNumberUtils";
-
-@implementation AndroidTelephonyPhoneNumberUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidTelephonyPhoneNumberUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jboolean)isISODigitWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_isISODigitWithChar_(c);
-}
-
-+ (jboolean)is12KeyWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_is12KeyWithChar_(c);
-}
-
-+ (jboolean)isDialableWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(c);
-}
-
-+ (jboolean)isReallyDialableWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_isReallyDialableWithChar_(c);
-}
-
-+ (jboolean)isNonSeparatorWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c);
-}
-
-+ (jboolean)isStartsPostDialWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_isStartsPostDialWithChar_(c);
-}
-
-+ (jboolean)isSeparatorWithChar:(jchar)ch {
-  return AndroidTelephonyPhoneNumberUtils_isSeparatorWithChar_(ch);
-}
-
-+ (NSString *)extractNetworkPortionWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_extractNetworkPortionWithNSString_(phoneNumber);
-}
-
-+ (NSString *)extractNetworkPortionAltWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_extractNetworkPortionAltWithNSString_(phoneNumber);
-}
-
-+ (NSString *)stripSeparatorsWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_stripSeparatorsWithNSString_(phoneNumber);
-}
-
-+ (jint)minPositiveWithInt:(jint)a
-                   withInt:(jint)b {
-  return AndroidTelephonyPhoneNumberUtils_minPositiveWithInt_withInt_(a, b);
-}
-
-+ (void)logWithNSString:(NSString *)msg {
-  AndroidTelephonyPhoneNumberUtils_logWithNSString_(msg);
-}
-
-+ (jint)indexOfLastNetworkCharWithNSString:(NSString *)a {
-  return AndroidTelephonyPhoneNumberUtils_indexOfLastNetworkCharWithNSString_(a);
-}
-
-+ (NSString *)extractPostDialPortionWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_extractPostDialPortionWithNSString_(phoneNumber);
-}
-
-+ (jboolean)compareWithNSString:(NSString *)a
-                   withNSString:(NSString *)b {
-  return AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_(a, b);
-}
-
-+ (jboolean)compareWithNSString:(NSString *)a
-                   withNSString:(NSString *)b
-                    withBoolean:(jboolean)useStrictComparation {
-  return AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_withBoolean_(a, b, useStrictComparation);
-}
-
-+ (jboolean)compareLooselyWithNSString:(NSString *)a
-                          withNSString:(NSString *)b {
-  return AndroidTelephonyPhoneNumberUtils_compareLooselyWithNSString_withNSString_(a, b);
-}
-
-+ (jboolean)compareStrictlyWithNSString:(NSString *)a
-                           withNSString:(NSString *)b {
-  return AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_(a, b);
-}
-
-+ (jboolean)compareStrictlyWithNSString:(NSString *)a
-                           withNSString:(NSString *)b
-                            withBoolean:(jboolean)acceptInvalidCCCPrefix {
-  return AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_withBoolean_(a, b, acceptInvalidCCCPrefix);
-}
-
-+ (NSString *)toCallerIDMinMatchWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_toCallerIDMinMatchWithNSString_(phoneNumber);
-}
-
-+ (NSString *)getStrippedReversedWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_getStrippedReversedWithNSString_(phoneNumber);
-}
-
-+ (NSString *)internalGetStrippedReversedWithNSString:(NSString *)np
-                                              withInt:(jint)numDigits {
-  return AndroidTelephonyPhoneNumberUtils_internalGetStrippedReversedWithNSString_withInt_(np, numDigits);
-}
-
-+ (NSString *)stringFromStringAndTOAWithNSString:(NSString *)s
-                                         withInt:(jint)TOA {
-  return AndroidTelephonyPhoneNumberUtils_stringFromStringAndTOAWithNSString_withInt_(s, TOA);
-}
-
-+ (jint)toaFromStringWithNSString:(NSString *)s {
-  return AndroidTelephonyPhoneNumberUtils_toaFromStringWithNSString_(s);
-}
-
-+ (NSString *)calledPartyBCDToStringWithByteArray:(IOSByteArray *)bytes
-                                          withInt:(jint)offset
-                                          withInt:(jint)length {
-  return AndroidTelephonyPhoneNumberUtils_calledPartyBCDToStringWithByteArray_withInt_withInt_(bytes, offset, length);
-}
-
-+ (void)internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
-                                                          withByteArray:(IOSByteArray *)bytes
-                                                                withInt:(jint)offset
-                                                                withInt:(jint)length {
-  AndroidTelephonyPhoneNumberUtils_internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder_withByteArray_withInt_withInt_(sb, bytes, offset, length);
-}
-
-+ (NSString *)calledPartyBCDFragmentToStringWithByteArray:(IOSByteArray *)bytes
-                                                  withInt:(jint)offset
-                                                  withInt:(jint)length {
-  return AndroidTelephonyPhoneNumberUtils_calledPartyBCDFragmentToStringWithByteArray_withInt_withInt_(bytes, offset, length);
-}
-
-+ (jchar)bcdToCharWithByte:(jbyte)b {
-  return AndroidTelephonyPhoneNumberUtils_bcdToCharWithByte_(b);
-}
-
-+ (jint)charToBCDWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_charToBCDWithChar_(c);
-}
-
-+ (jboolean)isWellFormedSmsAddressWithNSString:(NSString *)address {
-  return AndroidTelephonyPhoneNumberUtils_isWellFormedSmsAddressWithNSString_(address);
-}
-
-+ (jboolean)isGlobalPhoneNumberWithNSString:(NSString *)phoneNumber {
-  return AndroidTelephonyPhoneNumberUtils_isGlobalPhoneNumberWithNSString_(phoneNumber);
-}
-
-+ (jboolean)isDialableWithNSString:(NSString *)address {
-  return AndroidTelephonyPhoneNumberUtils_isDialableWithNSString_(address);
-}
-
-+ (jboolean)isNonSeparatorWithNSString:(NSString *)address {
-  return AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithNSString_(address);
-}
-
-+ (IOSByteArray *)networkPortionToCalledPartyBCDWithNSString:(NSString *)s {
-  return AndroidTelephonyPhoneNumberUtils_networkPortionToCalledPartyBCDWithNSString_(s);
-}
-
-+ (IOSByteArray *)networkPortionToCalledPartyBCDWithLengthWithNSString:(NSString *)s {
-  return AndroidTelephonyPhoneNumberUtils_networkPortionToCalledPartyBCDWithLengthWithNSString_(s);
-}
-
-+ (IOSByteArray *)numberToCalledPartyBCDWithNSString:(NSString *)number {
-  return AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDWithNSString_(number);
-}
-
-+ (IOSByteArray *)numberToCalledPartyBCDHelperWithNSString:(NSString *)number
-                                               withBoolean:(jboolean)includeLength {
-  return AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDHelperWithNSString_withBoolean_(number, includeLength);
-}
-
-+ (NSString *)formatNumberWithNSString:(NSString *)source {
-  return AndroidTelephonyPhoneNumberUtils_formatNumberWithNSString_(source);
-}
-
-+ (NSString *)formatNumberWithNSString:(NSString *)source
-                               withInt:(jint)defaultFormattingType {
-  return AndroidTelephonyPhoneNumberUtils_formatNumberWithNSString_withInt_(source, defaultFormattingType);
-}
-
-+ (jint)getFormatTypeForLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale {
-  return AndroidTelephonyPhoneNumberUtils_getFormatTypeForLocaleWithJavaUtilLocale_(locale);
-}
-
-+ (void)formatNumberWithAndroidTextEditable:(id<AndroidTextEditable>)text
-                                    withInt:(jint)defaultFormattingType {
-  AndroidTelephonyPhoneNumberUtils_formatNumberWithAndroidTextEditable_withInt_(text, defaultFormattingType);
-}
-
-+ (void)formatNanpNumberWithAndroidTextEditable:(id<AndroidTextEditable>)text {
-  AndroidTelephonyPhoneNumberUtils_formatNanpNumberWithAndroidTextEditable_(text);
-}
-
-+ (void)formatJapaneseNumberWithAndroidTextEditable:(id<AndroidTextEditable>)text {
-  AndroidTelephonyPhoneNumberUtils_formatJapaneseNumberWithAndroidTextEditable_(text);
-}
-
-+ (NSString *)convertKeypadLettersToDigitsWithNSString:(NSString *)input {
-  return AndroidTelephonyPhoneNumberUtils_convertKeypadLettersToDigitsWithNSString_(input);
-}
-
-+ (jboolean)isTwoToNineWithChar:(jchar)c {
-  return AndroidTelephonyPhoneNumberUtils_isTwoToNineWithChar_(c);
-}
-
-+ (jint)getFormatTypeFromCountryCodeWithNSString:(NSString *)country {
-  return AndroidTelephonyPhoneNumberUtils_getFormatTypeFromCountryCodeWithNSString_(country);
-}
-
-+ (jboolean)isNanpWithNSString:(NSString *)dialStr {
-  return AndroidTelephonyPhoneNumberUtils_isNanpWithNSString_(dialStr);
-}
-
-+ (jboolean)isOneNanpWithNSString:(NSString *)dialStr {
-  return AndroidTelephonyPhoneNumberUtils_isOneNanpWithNSString_(dialStr);
-}
-
-+ (jboolean)isUriNumberWithNSString:(NSString *)number {
-  return AndroidTelephonyPhoneNumberUtils_isUriNumberWithNSString_(number);
-}
-
-+ (jint)findDialableIndexFromPostDialStrWithNSString:(NSString *)postDialStr {
-  return AndroidTelephonyPhoneNumberUtils_findDialableIndexFromPostDialStrWithNSString_(postDialStr);
-}
-
-+ (NSString *)appendPwCharBackToOrigDialStrWithInt:(jint)dialableIndex
-                                      withNSString:(NSString *)origStr
-                                      withNSString:(NSString *)dialStr {
-  return AndroidTelephonyPhoneNumberUtils_appendPwCharBackToOrigDialStrWithInt_withNSString_withNSString_(dialableIndex, origStr, dialStr);
-}
-
-+ (jboolean)matchIntlPrefixWithNSString:(NSString *)a
-                                withInt:(jint)len {
-  return AndroidTelephonyPhoneNumberUtils_matchIntlPrefixWithNSString_withInt_(a, len);
-}
-
-+ (jboolean)matchIntlPrefixAndCCWithNSString:(NSString *)a
-                                     withInt:(jint)len {
-  return AndroidTelephonyPhoneNumberUtils_matchIntlPrefixAndCCWithNSString_withInt_(a, len);
-}
-
-+ (jboolean)matchTrunkPrefixWithNSString:(NSString *)a
-                                 withInt:(jint)len {
-  return AndroidTelephonyPhoneNumberUtils_matchTrunkPrefixWithNSString_withInt_(a, len);
-}
-
-+ (jboolean)isCountryCallingCodeWithInt:(jint)countryCallingCodeCandidate {
-  return AndroidTelephonyPhoneNumberUtils_isCountryCallingCodeWithInt_(countryCallingCodeCandidate);
-}
-
-+ (jint)tryGetISODigitWithChar:(jchar)ch {
-  return AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(ch);
-}
-
-+ (AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *)tryGetCountryCallingCodeAndNewIndexWithNSString:(NSString *)str
-                                                                                                        withBoolean:(jboolean)acceptThailandCase {
-  return AndroidTelephonyPhoneNumberUtils_tryGetCountryCallingCodeAndNewIndexWithNSString_withBoolean_(str, acceptThailandCase);
-}
-
-+ (jint)tryGetTrunkPrefixOmittedIndexWithNSString:(NSString *)str
-                                          withInt:(jint)currentIndex {
-  return AndroidTelephonyPhoneNumberUtils_tryGetTrunkPrefixOmittedIndexWithNSString_withInt_(str, currentIndex);
-}
-
-+ (jboolean)checkPrefixIsIgnorableWithNSString:(NSString *)str
-                                       withInt:(jint)forwardIndex
-                                       withInt:(jint)backwardIndex {
-  return AndroidTelephonyPhoneNumberUtils_checkPrefixIsIgnorableWithNSString_withInt_withInt_(str, forwardIndex, backwardIndex);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 2, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 3, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 4, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 5, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x19, 6, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 7, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 8, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 10, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 11, 9, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 12, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0xa, 14, 9, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 15, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 16, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 17, 18, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 17, 19, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 20, 18, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 21, 18, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 21, 19, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 22, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 23, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 24, 25, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 26, 25, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 27, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 28, 29, -1, -1, -1, -1 },
-    { NULL, "V", 0xa, 30, 31, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 32, 29, -1, -1, -1, -1 },
-    { NULL, "C", 0xa, 33, 34, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 35, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 36, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 37, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 3, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 5, 9, -1, -1, -1, -1 },
-    { NULL, "[B", 0x9, 38, 9, -1, -1, -1, -1 },
-    { NULL, "[B", 0x9, 39, 9, -1, -1, -1, -1 },
-    { NULL, "[B", 0x9, 40, 9, -1, -1, -1, -1 },
-    { NULL, "[B", 0xa, 41, 42, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 43, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 43, 25, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 44, 45, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 43, 46, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 47, 48, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 49, 48, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 50, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 51, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 52, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 53, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 54, 9, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 55, 9, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 56, 9, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 57, 58, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 59, 25, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 60, 25, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 61, 25, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 62, 63, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 64, 1, -1, -1, -1, -1 },
-    { NULL, "LAndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex;", 0xa, 65, 42, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 66, 25, -1, -1, -1, -1 },
-    { NULL, "Z", 0xa, 67, 68, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(isISODigitWithChar:);
-  methods[2].selector = @selector(is12KeyWithChar:);
-  methods[3].selector = @selector(isDialableWithChar:);
-  methods[4].selector = @selector(isReallyDialableWithChar:);
-  methods[5].selector = @selector(isNonSeparatorWithChar:);
-  methods[6].selector = @selector(isStartsPostDialWithChar:);
-  methods[7].selector = @selector(isSeparatorWithChar:);
-  methods[8].selector = @selector(extractNetworkPortionWithNSString:);
-  methods[9].selector = @selector(extractNetworkPortionAltWithNSString:);
-  methods[10].selector = @selector(stripSeparatorsWithNSString:);
-  methods[11].selector = @selector(minPositiveWithInt:withInt:);
-  methods[12].selector = @selector(logWithNSString:);
-  methods[13].selector = @selector(indexOfLastNetworkCharWithNSString:);
-  methods[14].selector = @selector(extractPostDialPortionWithNSString:);
-  methods[15].selector = @selector(compareWithNSString:withNSString:);
-  methods[16].selector = @selector(compareWithNSString:withNSString:withBoolean:);
-  methods[17].selector = @selector(compareLooselyWithNSString:withNSString:);
-  methods[18].selector = @selector(compareStrictlyWithNSString:withNSString:);
-  methods[19].selector = @selector(compareStrictlyWithNSString:withNSString:withBoolean:);
-  methods[20].selector = @selector(toCallerIDMinMatchWithNSString:);
-  methods[21].selector = @selector(getStrippedReversedWithNSString:);
-  methods[22].selector = @selector(internalGetStrippedReversedWithNSString:withInt:);
-  methods[23].selector = @selector(stringFromStringAndTOAWithNSString:withInt:);
-  methods[24].selector = @selector(toaFromStringWithNSString:);
-  methods[25].selector = @selector(calledPartyBCDToStringWithByteArray:withInt:withInt:);
-  methods[26].selector = @selector(internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder:withByteArray:withInt:withInt:);
-  methods[27].selector = @selector(calledPartyBCDFragmentToStringWithByteArray:withInt:withInt:);
-  methods[28].selector = @selector(bcdToCharWithByte:);
-  methods[29].selector = @selector(charToBCDWithChar:);
-  methods[30].selector = @selector(isWellFormedSmsAddressWithNSString:);
-  methods[31].selector = @selector(isGlobalPhoneNumberWithNSString:);
-  methods[32].selector = @selector(isDialableWithNSString:);
-  methods[33].selector = @selector(isNonSeparatorWithNSString:);
-  methods[34].selector = @selector(networkPortionToCalledPartyBCDWithNSString:);
-  methods[35].selector = @selector(networkPortionToCalledPartyBCDWithLengthWithNSString:);
-  methods[36].selector = @selector(numberToCalledPartyBCDWithNSString:);
-  methods[37].selector = @selector(numberToCalledPartyBCDHelperWithNSString:withBoolean:);
-  methods[38].selector = @selector(formatNumberWithNSString:);
-  methods[39].selector = @selector(formatNumberWithNSString:withInt:);
-  methods[40].selector = @selector(getFormatTypeForLocaleWithJavaUtilLocale:);
-  methods[41].selector = @selector(formatNumberWithAndroidTextEditable:withInt:);
-  methods[42].selector = @selector(formatNanpNumberWithAndroidTextEditable:);
-  methods[43].selector = @selector(formatJapaneseNumberWithAndroidTextEditable:);
-  methods[44].selector = @selector(convertKeypadLettersToDigitsWithNSString:);
-  methods[45].selector = @selector(isTwoToNineWithChar:);
-  methods[46].selector = @selector(getFormatTypeFromCountryCodeWithNSString:);
-  methods[47].selector = @selector(isNanpWithNSString:);
-  methods[48].selector = @selector(isOneNanpWithNSString:);
-  methods[49].selector = @selector(isUriNumberWithNSString:);
-  methods[50].selector = @selector(findDialableIndexFromPostDialStrWithNSString:);
-  methods[51].selector = @selector(appendPwCharBackToOrigDialStrWithInt:withNSString:withNSString:);
-  methods[52].selector = @selector(matchIntlPrefixWithNSString:withInt:);
-  methods[53].selector = @selector(matchIntlPrefixAndCCWithNSString:withInt:);
-  methods[54].selector = @selector(matchTrunkPrefixWithNSString:withInt:);
-  methods[55].selector = @selector(isCountryCallingCodeWithInt:);
-  methods[56].selector = @selector(tryGetISODigitWithChar:);
-  methods[57].selector = @selector(tryGetCountryCallingCodeAndNewIndexWithNSString:withBoolean:);
-  methods[58].selector = @selector(tryGetTrunkPrefixOmittedIndexWithNSString:withInt:);
-  methods[59].selector = @selector(checkPrefixIsIgnorableWithNSString:withInt:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "PAUSE", "C", .constantValue.asUnichar = AndroidTelephonyPhoneNumberUtils_PAUSE, 0x19, -1, -1, -1, -1 },
-    { "WAIT", "C", .constantValue.asUnichar = AndroidTelephonyPhoneNumberUtils_WAIT, 0x19, -1, -1, -1, -1 },
-    { "WILD", "C", .constantValue.asUnichar = AndroidTelephonyPhoneNumberUtils_WILD, 0x19, -1, -1, -1, -1 },
-    { "TOA_International", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_TOA_International, 0x19, -1, -1, -1, -1 },
-    { "TOA_Unknown", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_TOA_Unknown, 0x19, -1, -1, -1, -1 },
-    { "LOG_TAG", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 69, -1, -1 },
-    { "DBG", "Z", .constantValue.asBOOL = AndroidTelephonyPhoneNumberUtils_DBG, 0x1a, -1, -1, -1, -1 },
-    { "GLOBAL_PHONE_NUMBER_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 70, -1, -1 },
-    { "FORMAT_UNKNOWN", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_FORMAT_UNKNOWN, 0x19, -1, -1, -1, -1 },
-    { "FORMAT_NANP", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_FORMAT_NANP, 0x19, -1, -1, -1, -1 },
-    { "FORMAT_JAPAN", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_FORMAT_JAPAN, 0x19, -1, -1, -1, -1 },
-    { "NANP_COUNTRIES", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 71, -1, -1 },
-    { "NANP_STATE_DIGIT", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_NANP_STATE_DIGIT, 0x1a, -1, -1, -1, -1 },
-    { "NANP_STATE_PLUS", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_NANP_STATE_PLUS, 0x1a, -1, -1, -1, -1 },
-    { "NANP_STATE_ONE", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_NANP_STATE_ONE, 0x1a, -1, -1, -1, -1 },
-    { "NANP_STATE_DASH", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_NANP_STATE_DASH, 0x1a, -1, -1, -1, -1 },
-    { "MIN_MATCH", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_MIN_MATCH, 0x18, -1, -1, -1, -1 },
-    { "KEYPAD_MAP", "LAndroidUtilSparseIntArray;", .constantValue.asLong = 0, 0x1a, -1, 72, -1, -1 },
-    { "PLUS_SIGN_CHAR", "C", .constantValue.asUnichar = AndroidTelephonyPhoneNumberUtils_PLUS_SIGN_CHAR, 0x1a, -1, -1, -1, -1 },
-    { "PLUS_SIGN_STRING", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 73, -1, -1 },
-    { "NANP_IDP_STRING", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 74, -1, -1 },
-    { "NANP_LENGTH", "I", .constantValue.asInt = AndroidTelephonyPhoneNumberUtils_NANP_LENGTH, 0x1a, -1, -1, -1, -1 },
-    { "COUNTLY_CALLING_CALL", "[Z", .constantValue.asLong = 0, 0x1a, -1, 75, -1, -1 },
-    { "CCC_LENGTH", "I", .constantValue.asLong = 0, 0x1a, -1, 76, -1, -1 },
-  };
-  static const void *ptrTable[] = { "isISODigit", "C", "is12Key", "isDialable", "isReallyDialable", "isNonSeparator", "isStartsPostDial", "isSeparator", "extractNetworkPortion", "LNSString;", "extractNetworkPortionAlt", "stripSeparators", "minPositive", "II", "log", "indexOfLastNetworkChar", "extractPostDialPortion", "compare", "LNSString;LNSString;", "LNSString;LNSString;Z", "compareLoosely", "compareStrictly", "toCallerIDMinMatch", "getStrippedReversed", "internalGetStrippedReversed", "LNSString;I", "stringFromStringAndTOA", "toaFromString", "calledPartyBCDToString", "[BII", "internalCalledPartyBCDFragmentToString", "LJavaLangStringBuilder;[BII", "calledPartyBCDFragmentToString", "bcdToChar", "B", "charToBCD", "isWellFormedSmsAddress", "isGlobalPhoneNumber", "networkPortionToCalledPartyBCD", "networkPortionToCalledPartyBCDWithLength", "numberToCalledPartyBCD", "numberToCalledPartyBCDHelper", "LNSString;Z", "formatNumber", "getFormatTypeForLocale", "LJavaUtilLocale;", "LAndroidTextEditable;I", "formatNanpNumber", "LAndroidTextEditable;", "formatJapaneseNumber", "convertKeypadLettersToDigits", "isTwoToNine", "getFormatTypeFromCountryCode", "isNanp", "isOneNanp", "isUriNumber", "findDialableIndexFromPostDialStr", "appendPwCharBackToOrigDialStr", "ILNSString;LNSString;", "matchIntlPrefix", "matchIntlPrefixAndCC", "matchTrunkPrefix", "isCountryCallingCode", "I", "tryGetISODigit", "tryGetCountryCallingCodeAndNewIndex", "tryGetTrunkPrefixOmittedIndex", "checkPrefixIsIgnorable", "LNSString;II", &AndroidTelephonyPhoneNumberUtils_LOG_TAG, &AndroidTelephonyPhoneNumberUtils_GLOBAL_PHONE_NUMBER_PATTERN, &AndroidTelephonyPhoneNumberUtils_NANP_COUNTRIES, &AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP, &AndroidTelephonyPhoneNumberUtils_PLUS_SIGN_STRING, &AndroidTelephonyPhoneNumberUtils_NANP_IDP_STRING, &AndroidTelephonyPhoneNumberUtils_COUNTLY_CALLING_CALL, &AndroidTelephonyPhoneNumberUtils_CCC_LENGTH, "LAndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex;" };
-  static const J2ObjcClassInfo _AndroidTelephonyPhoneNumberUtils = { "PhoneNumberUtils", "android.telephony", ptrTable, methods, fields, 7, 0x1, 60, 24, -1, 77, -1, -1, -1 };
-  return &_AndroidTelephonyPhoneNumberUtils;
-}
-
-+ (void)initialize {
-  if (self == [AndroidTelephonyPhoneNumberUtils class]) {
-    JreStrongAssign(&AndroidTelephonyPhoneNumberUtils_GLOBAL_PHONE_NUMBER_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"[\\+]?[0-9.-]+"));
-    JreStrongAssignAndConsume(&AndroidTelephonyPhoneNumberUtils_NANP_COUNTRIES, [IOSObjectArray newArrayWithObjects:(id[]){ @"US", @"CA", @"AS", @"AI", @"AG", @"BS", @"BB", @"BM", @"VG", @"KY", @"DM", @"DO", @"GD", @"GU", @"JM", @"PR", @"MS", @"MP", @"KN", @"LC", @"VC", @"TT", @"TC", @"VI" } count:24 type:NSString_class_()]);
-    JreStrongAssignAndConsume(&AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP, new_AndroidUtilSparseIntArray_init());
-    {
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'a' withInt:'2'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'b' withInt:'2'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'c' withInt:'2'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'A' withInt:'2'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'B' withInt:'2'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'C' withInt:'2'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'d' withInt:'3'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'e' withInt:'3'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'f' withInt:'3'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'D' withInt:'3'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'E' withInt:'3'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'F' withInt:'3'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'g' withInt:'4'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'h' withInt:'4'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'i' withInt:'4'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'G' withInt:'4'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'H' withInt:'4'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'I' withInt:'4'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'j' withInt:'5'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'k' withInt:'5'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'l' withInt:'5'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'J' withInt:'5'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'K' withInt:'5'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'L' withInt:'5'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'m' withInt:'6'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'n' withInt:'6'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'o' withInt:'6'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'M' withInt:'6'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'N' withInt:'6'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'O' withInt:'6'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'p' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'q' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'r' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'s' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'P' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'Q' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'R' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'S' withInt:'7'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'t' withInt:'8'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'u' withInt:'8'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'v' withInt:'8'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'T' withInt:'8'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'U' withInt:'8'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'V' withInt:'8'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'w' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'x' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'y' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'z' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'W' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'X' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'Y' withInt:'9'];
-      [AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP putWithInt:'Z' withInt:'9'];
-    }
-    JreStrongAssignAndConsume(&AndroidTelephonyPhoneNumberUtils_COUNTLY_CALLING_CALL, [IOSBooleanArray newArrayWithBooleans:(jboolean[]){ true, true, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, true, true, false, true, true, true, true, true, false, true, false, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, false, true, false, false, true, true, true, true, true, true, true, false, false, true, false } count:100]);
-    AndroidTelephonyPhoneNumberUtils_CCC_LENGTH = AndroidTelephonyPhoneNumberUtils_COUNTLY_CALLING_CALL->size_;
-    J2OBJC_SET_INITIALIZED(AndroidTelephonyPhoneNumberUtils)
-  }
-}
-
-@end
-
-void AndroidTelephonyPhoneNumberUtils_init(AndroidTelephonyPhoneNumberUtils *self) {
-  NSObject_init(self);
-}
-
-AndroidTelephonyPhoneNumberUtils *new_AndroidTelephonyPhoneNumberUtils_init() {
-  J2OBJC_NEW_IMPL(AndroidTelephonyPhoneNumberUtils, init)
-}
-
-AndroidTelephonyPhoneNumberUtils *create_AndroidTelephonyPhoneNumberUtils_init() {
-  J2OBJC_CREATE_IMPL(AndroidTelephonyPhoneNumberUtils, init)
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isISODigitWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return c >= '0' && c <= '9';
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_is12KeyWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return (c >= '0' && c <= '9') || c == '*' || c == '#';
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return (c >= '0' && c <= '9') || c == '*' || c == '#' || c == '+' || c == AndroidTelephonyPhoneNumberUtils_WILD;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isReallyDialableWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return (c >= '0' && c <= '9') || c == '*' || c == '#' || c == '+';
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return (c >= '0' && c <= '9') || c == '*' || c == '#' || c == '+' || c == AndroidTelephonyPhoneNumberUtils_WILD || c == AndroidTelephonyPhoneNumberUtils_WAIT || c == AndroidTelephonyPhoneNumberUtils_PAUSE;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isStartsPostDialWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return c == AndroidTelephonyPhoneNumberUtils_PAUSE || c == AndroidTelephonyPhoneNumberUtils_WAIT;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isSeparatorWithChar_(jchar ch) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return !AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch) && !(('a' <= ch && ch <= 'z') || ('A' <= ch && ch <= 'Z'));
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_extractNetworkPortionWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (phoneNumber == nil) {
-    return nil;
-  }
-  jint len = ((jint) [phoneNumber length]);
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithInt_(len);
-  jboolean firstCharAdded = false;
-  for (jint i = 0; i < len; i++) {
-    jchar c = [phoneNumber charAtWithInt:i];
-    if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(c) && (c != '+' || !firstCharAdded)) {
-      firstCharAdded = true;
-      [ret appendWithChar:c];
-    }
-    else if (AndroidTelephonyPhoneNumberUtils_isStartsPostDialWithChar_(c)) {
-      break;
-    }
-  }
-  return [ret description];
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_extractNetworkPortionAltWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (phoneNumber == nil) {
-    return nil;
-  }
-  jint len = ((jint) [phoneNumber length]);
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithInt_(len);
-  jboolean haveSeenPlus = false;
-  for (jint i = 0; i < len; i++) {
-    jchar c = [phoneNumber charAtWithInt:i];
-    if (c == '+') {
-      if (haveSeenPlus) {
-        continue;
-      }
-      haveSeenPlus = true;
-    }
-    if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(c)) {
-      [ret appendWithChar:c];
-    }
-    else if (AndroidTelephonyPhoneNumberUtils_isStartsPostDialWithChar_(c)) {
-      break;
-    }
-  }
-  return [ret description];
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_stripSeparatorsWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (phoneNumber == nil) {
-    return nil;
-  }
-  jint len = ((jint) [phoneNumber length]);
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithInt_(len);
-  for (jint i = 0; i < len; i++) {
-    jchar c = [phoneNumber charAtWithInt:i];
-    if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) {
-      [ret appendWithChar:c];
-    }
-  }
-  return [ret description];
-}
-
-jint AndroidTelephonyPhoneNumberUtils_minPositiveWithInt_withInt_(jint a, jint b) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (a >= 0 && b >= 0) {
-    return (a < b) ? a : b;
-  }
-  else if (a >= 0) {
-    return a;
-  }
-  else if (b >= 0) {
-    return b;
-  }
-  else {
-    return -1;
-  }
-}
-
-void AndroidTelephonyPhoneNumberUtils_logWithNSString_(NSString *msg) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  AndroidUtilLog_dWithNSString_withNSString_(AndroidTelephonyPhoneNumberUtils_LOG_TAG, msg);
-}
-
-jint AndroidTelephonyPhoneNumberUtils_indexOfLastNetworkCharWithNSString_(NSString *a) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint pIndex;
-  jint wIndex;
-  jint origLength;
-  jint trimIndex;
-  origLength = ((jint) [((NSString *) nil_chk(a)) length]);
-  pIndex = [a java_indexOf:AndroidTelephonyPhoneNumberUtils_PAUSE];
-  wIndex = [a java_indexOf:AndroidTelephonyPhoneNumberUtils_WAIT];
-  trimIndex = AndroidTelephonyPhoneNumberUtils_minPositiveWithInt_withInt_(pIndex, wIndex);
-  if (trimIndex < 0) {
-    return origLength - 1;
-  }
-  else {
-    return trimIndex - 1;
-  }
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_extractPostDialPortionWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (phoneNumber == nil) return nil;
-  jint trimIndex;
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_init();
-  trimIndex = AndroidTelephonyPhoneNumberUtils_indexOfLastNetworkCharWithNSString_(phoneNumber);
-  for (jint i = trimIndex + 1, s = ((jint) [phoneNumber length]); i < s; i++) {
-    jchar c = [phoneNumber charAtWithInt:i];
-    if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) {
-      [ret appendWithChar:c];
-    }
-  }
-  return [ret description];
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_(NSString *a, NSString *b) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_withBoolean_(a, b, false);
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_withBoolean_(NSString *a, NSString *b, jboolean useStrictComparation) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return (useStrictComparation ? AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_(a, b) : AndroidTelephonyPhoneNumberUtils_compareLooselyWithNSString_withNSString_(a, b));
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_compareLooselyWithNSString_withNSString_(NSString *a, NSString *b) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint ia;
-  jint ib;
-  jint matched;
-  jint numNonDialableCharsInA = 0;
-  jint numNonDialableCharsInB = 0;
-  if (a == nil || b == nil) return a == b;
-  if (((jint) [a length]) == 0 || ((jint) [b length]) == 0) {
-    return false;
-  }
-  ia = AndroidTelephonyPhoneNumberUtils_indexOfLastNetworkCharWithNSString_(a);
-  ib = AndroidTelephonyPhoneNumberUtils_indexOfLastNetworkCharWithNSString_(b);
-  matched = 0;
-  while (ia >= 0 && ib >= 0) {
-    jchar ca;
-    jchar cb;
-    jboolean skipCmp = false;
-    ca = [a charAtWithInt:ia];
-    if (!AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ca)) {
-      ia--;
-      skipCmp = true;
-      numNonDialableCharsInA++;
-    }
-    cb = [b charAtWithInt:ib];
-    if (!AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(cb)) {
-      ib--;
-      skipCmp = true;
-      numNonDialableCharsInB++;
-    }
-    if (!skipCmp) {
-      if (cb != ca && ca != AndroidTelephonyPhoneNumberUtils_WILD && cb != AndroidTelephonyPhoneNumberUtils_WILD) {
-        break;
-      }
-      ia--;
-      ib--;
-      matched++;
-    }
-  }
-  if (matched < AndroidTelephonyPhoneNumberUtils_MIN_MATCH) {
-    jint effectiveALen = ((jint) [a length]) - numNonDialableCharsInA;
-    jint effectiveBLen = ((jint) [b length]) - numNonDialableCharsInB;
-    if (effectiveALen == effectiveBLen && effectiveALen == matched) {
-      return true;
-    }
-    return false;
-  }
-  if (matched >= AndroidTelephonyPhoneNumberUtils_MIN_MATCH && (ia < 0 || ib < 0)) {
-    return true;
-  }
-  if (AndroidTelephonyPhoneNumberUtils_matchIntlPrefixWithNSString_withInt_(a, ia + 1) && AndroidTelephonyPhoneNumberUtils_matchIntlPrefixWithNSString_withInt_(b, ib + 1)) {
-    return true;
-  }
-  if (AndroidTelephonyPhoneNumberUtils_matchTrunkPrefixWithNSString_withInt_(a, ia + 1) && AndroidTelephonyPhoneNumberUtils_matchIntlPrefixAndCCWithNSString_withInt_(b, ib + 1)) {
-    return true;
-  }
-  if (AndroidTelephonyPhoneNumberUtils_matchTrunkPrefixWithNSString_withInt_(b, ib + 1) && AndroidTelephonyPhoneNumberUtils_matchIntlPrefixAndCCWithNSString_withInt_(a, ia + 1)) {
-    return true;
-  }
-  return false;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_(NSString *a, NSString *b) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_withBoolean_(a, b, true);
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_compareStrictlyWithNSString_withNSString_withBoolean_(NSString *a, NSString *b, jboolean acceptInvalidCCCPrefix) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (a == nil || b == nil) {
-    return a == b;
-  }
-  else if (((jint) [a length]) == 0 && ((jint) [b length]) == 0) {
-    return false;
-  }
-  jint forwardIndexA = 0;
-  jint forwardIndexB = 0;
-  AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *cccA = AndroidTelephonyPhoneNumberUtils_tryGetCountryCallingCodeAndNewIndexWithNSString_withBoolean_(a, acceptInvalidCCCPrefix);
-  AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *cccB = AndroidTelephonyPhoneNumberUtils_tryGetCountryCallingCodeAndNewIndexWithNSString_withBoolean_(b, acceptInvalidCCCPrefix);
-  jboolean bothHasCountryCallingCode = false;
-  jboolean okToIgnorePrefix = true;
-  jboolean trunkPrefixIsOmittedA = false;
-  jboolean trunkPrefixIsOmittedB = false;
-  if (cccA != nil && cccB != nil) {
-    if (cccA->countryCallingCode_ != cccB->countryCallingCode_) {
-      return false;
-    }
-    okToIgnorePrefix = false;
-    bothHasCountryCallingCode = true;
-    forwardIndexA = cccA->newIndex_;
-    forwardIndexB = cccB->newIndex_;
-  }
-  else if (cccA == nil && cccB == nil) {
-    okToIgnorePrefix = false;
-  }
-  else {
-    if (cccA != nil) {
-      forwardIndexA = cccA->newIndex_;
-    }
-    else {
-      jint tmp = AndroidTelephonyPhoneNumberUtils_tryGetTrunkPrefixOmittedIndexWithNSString_withInt_(b, 0);
-      if (tmp >= 0) {
-        forwardIndexA = tmp;
-        trunkPrefixIsOmittedA = true;
-      }
-    }
-    if (cccB != nil) {
-      forwardIndexB = cccB->newIndex_;
-    }
-    else {
-      jint tmp = AndroidTelephonyPhoneNumberUtils_tryGetTrunkPrefixOmittedIndexWithNSString_withInt_(b, 0);
-      if (tmp >= 0) {
-        forwardIndexB = tmp;
-        trunkPrefixIsOmittedB = true;
-      }
-    }
-  }
-  jint backwardIndexA = ((jint) [a length]) - 1;
-  jint backwardIndexB = ((jint) [b length]) - 1;
-  while (backwardIndexA >= forwardIndexA && backwardIndexB >= forwardIndexB) {
-    jboolean skip_compare = false;
-    jchar chA = [a charAtWithInt:backwardIndexA];
-    jchar chB = [b charAtWithInt:backwardIndexB];
-    if (AndroidTelephonyPhoneNumberUtils_isSeparatorWithChar_(chA)) {
-      backwardIndexA--;
-      skip_compare = true;
-    }
-    if (AndroidTelephonyPhoneNumberUtils_isSeparatorWithChar_(chB)) {
-      backwardIndexB--;
-      skip_compare = true;
-    }
-    if (!skip_compare) {
-      if (chA != chB) {
-        return false;
-      }
-      backwardIndexA--;
-      backwardIndexB--;
-    }
-  }
-  if (okToIgnorePrefix) {
-    if ((trunkPrefixIsOmittedA && forwardIndexA <= backwardIndexA) || !AndroidTelephonyPhoneNumberUtils_checkPrefixIsIgnorableWithNSString_withInt_withInt_(a, forwardIndexA, backwardIndexA)) {
-      if (acceptInvalidCCCPrefix) {
-        return AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_withBoolean_(a, b, false);
-      }
-      else {
-        return false;
-      }
-    }
-    if ((trunkPrefixIsOmittedB && forwardIndexB <= backwardIndexB) || !AndroidTelephonyPhoneNumberUtils_checkPrefixIsIgnorableWithNSString_withInt_withInt_(b, forwardIndexA, backwardIndexB)) {
-      if (acceptInvalidCCCPrefix) {
-        return AndroidTelephonyPhoneNumberUtils_compareWithNSString_withNSString_withBoolean_(a, b, false);
-      }
-      else {
-        return false;
-      }
-    }
-  }
-  else {
-    jboolean maybeNamp = !bothHasCountryCallingCode;
-    while (backwardIndexA >= forwardIndexA) {
-      jchar chA = [a charAtWithInt:backwardIndexA];
-      if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(chA)) {
-        if (maybeNamp && AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(chA) == 1) {
-          maybeNamp = false;
-        }
-        else {
-          return false;
-        }
-      }
-      backwardIndexA--;
-    }
-    while (backwardIndexB >= forwardIndexB) {
-      jchar chB = [b charAtWithInt:backwardIndexB];
-      if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(chB)) {
-        if (maybeNamp && AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(chB) == 1) {
-          maybeNamp = false;
-        }
-        else {
-          return false;
-        }
-      }
-      backwardIndexB--;
-    }
-  }
-  return true;
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_toCallerIDMinMatchWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *np = AndroidTelephonyPhoneNumberUtils_extractNetworkPortionAltWithNSString_(phoneNumber);
-  return AndroidTelephonyPhoneNumberUtils_internalGetStrippedReversedWithNSString_withInt_(np, AndroidTelephonyPhoneNumberUtils_MIN_MATCH);
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_getStrippedReversedWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *np = AndroidTelephonyPhoneNumberUtils_extractNetworkPortionAltWithNSString_(phoneNumber);
-  if (np == nil) return nil;
-  return AndroidTelephonyPhoneNumberUtils_internalGetStrippedReversedWithNSString_withInt_(np, ((jint) [np length]));
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_internalGetStrippedReversedWithNSString_withInt_(NSString *np, jint numDigits) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (np == nil) return nil;
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithInt_(numDigits);
-  jint length = ((jint) [np length]);
-  for (jint i = length - 1, s = length; i >= 0 && (s - i) <= numDigits; i--) {
-    jchar c = [np charAtWithInt:i];
-    [ret appendWithChar:c];
-  }
-  return [ret description];
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_stringFromStringAndTOAWithNSString_withInt_(NSString *s, jint TOA) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (s == nil) return nil;
-  if (TOA == AndroidTelephonyPhoneNumberUtils_TOA_International && ((jint) [s length]) > 0 && [s charAtWithInt:0] != '+') {
-    return JreStrcat("C$", '+', s);
-  }
-  return s;
-}
-
-jint AndroidTelephonyPhoneNumberUtils_toaFromStringWithNSString_(NSString *s) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (s != nil && ((jint) [s length]) > 0 && [s charAtWithInt:0] == '+') {
-    return AndroidTelephonyPhoneNumberUtils_TOA_International;
-  }
-  return AndroidTelephonyPhoneNumberUtils_TOA_Unknown;
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_calledPartyBCDToStringWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jboolean prependPlus = false;
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithInt_(1 + length * 2);
-  if (length < 2) {
-    return @"";
-  }
-  if ((IOSByteArray_Get(nil_chk(bytes), offset) & (jint) 0xf0) == (AndroidTelephonyPhoneNumberUtils_TOA_International & (jint) 0xf0)) {
-    prependPlus = true;
-  }
-  AndroidTelephonyPhoneNumberUtils_internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder_withByteArray_withInt_withInt_(ret, bytes, offset + 1, length - 1);
-  if (prependPlus && [ret length] == 0) {
-    return @"";
-  }
-  if (prependPlus) {
-    NSString *retString = [ret description];
-    JavaUtilRegexPattern *p = JavaUtilRegexPattern_compileWithNSString_(@"(^[#*])(.*)([#*])(.*)(#)$");
-    JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:retString];
-    if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
-      if ([@"" isEqual:[m groupWithInt:2]]) {
-        ret = create_JavaLangStringBuilder_init();
-        [ret appendWithNSString:[m groupWithInt:1]];
-        [ret appendWithNSString:[m groupWithInt:3]];
-        [ret appendWithNSString:[m groupWithInt:4]];
-        [ret appendWithNSString:[m groupWithInt:5]];
-        [ret appendWithNSString:@"+"];
-      }
-      else {
-        ret = create_JavaLangStringBuilder_init();
-        [ret appendWithNSString:[m groupWithInt:1]];
-        [ret appendWithNSString:[m groupWithInt:2]];
-        [ret appendWithNSString:[m groupWithInt:3]];
-        [ret appendWithNSString:@"+"];
-        [ret appendWithNSString:[m groupWithInt:4]];
-        [ret appendWithNSString:[m groupWithInt:5]];
-      }
-    }
-    else {
-      p = JavaUtilRegexPattern_compileWithNSString_(@"(^[#*])(.*)([#*])(.*)");
-      m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:retString];
-      if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
-        ret = create_JavaLangStringBuilder_init();
-        [ret appendWithNSString:[m groupWithInt:1]];
-        [ret appendWithNSString:[m groupWithInt:2]];
-        [ret appendWithNSString:[m groupWithInt:3]];
-        [ret appendWithNSString:@"+"];
-        [ret appendWithNSString:[m groupWithInt:4]];
-      }
-      else {
-        ret = create_JavaLangStringBuilder_init();
-        [ret appendWithChar:'+'];
-        [ret appendWithNSString:retString];
-      }
-    }
-  }
-  return [ret description];
-}
-
-void AndroidTelephonyPhoneNumberUtils_internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder_withByteArray_withInt_withInt_(JavaLangStringBuilder *sb, IOSByteArray *bytes, jint offset, jint length) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  for (jint i = offset; i < length + offset; i++) {
-    jbyte b;
-    jchar c;
-    c = AndroidTelephonyPhoneNumberUtils_bcdToCharWithByte_((jbyte) (IOSByteArray_Get(nil_chk(bytes), i) & (jint) 0xf));
-    if (c == 0) {
-      return;
-    }
-    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:c];
-    b = (jbyte) ((JreRShift32(IOSByteArray_Get(bytes, i), 4)) & (jint) 0xf);
-    if (b == (jint) 0xf && i + 1 == length + offset) {
-      break;
-    }
-    c = AndroidTelephonyPhoneNumberUtils_bcdToCharWithByte_(b);
-    if (c == 0) {
-      return;
-    }
-    [sb appendWithChar:c];
-  }
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_calledPartyBCDFragmentToStringWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithInt_(length * 2);
-  AndroidTelephonyPhoneNumberUtils_internalCalledPartyBCDFragmentToStringWithJavaLangStringBuilder_withByteArray_withInt_withInt_(ret, bytes, offset, length);
-  return [ret description];
-}
-
-jchar AndroidTelephonyPhoneNumberUtils_bcdToCharWithByte_(jbyte b) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (b < (jint) 0xa) {
-    return (jchar) ('0' + b);
-  }
-  else switch (b) {
-    case (jint) 0xa:
-    return '*';
-    case (jint) 0xb:
-    return '#';
-    case (jint) 0xc:
-    return AndroidTelephonyPhoneNumberUtils_PAUSE;
-    case (jint) 0xd:
-    return AndroidTelephonyPhoneNumberUtils_WILD;
-    default:
-    return 0;
-  }
-}
-
-jint AndroidTelephonyPhoneNumberUtils_charToBCDWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (c >= '0' && c <= '9') {
-    return c - '0';
-  }
-  else if (c == '*') {
-    return (jint) 0xa;
-  }
-  else if (c == '#') {
-    return (jint) 0xb;
-  }
-  else if (c == AndroidTelephonyPhoneNumberUtils_PAUSE) {
-    return (jint) 0xc;
-  }
-  else if (c == AndroidTelephonyPhoneNumberUtils_WILD) {
-    return (jint) 0xd;
-  }
-  else {
-    @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$C", @"invalid char for BCD ", c));
-  }
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isWellFormedSmsAddressWithNSString_(NSString *address) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *networkPortion = AndroidTelephonyPhoneNumberUtils_extractNetworkPortionWithNSString_(address);
-  return (!([((NSString *) nil_chk(networkPortion)) isEqual:@"+"] || AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(networkPortion))) && AndroidTelephonyPhoneNumberUtils_isDialableWithNSString_(networkPortion);
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isGlobalPhoneNumberWithNSString_(NSString *phoneNumber) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(phoneNumber)) {
-    return false;
-  }
-  JavaUtilRegexMatcher *match = [((JavaUtilRegexPattern *) nil_chk(AndroidTelephonyPhoneNumberUtils_GLOBAL_PHONE_NUMBER_PATTERN)) matcherWithJavaLangCharSequence:phoneNumber];
-  return [((JavaUtilRegexMatcher *) nil_chk(match)) matches];
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isDialableWithNSString_(NSString *address) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  for (jint i = 0, count = ((jint) [((NSString *) nil_chk(address)) length]); i < count; i++) {
-    if (!AndroidTelephonyPhoneNumberUtils_isDialableWithChar_([address charAtWithInt:i])) {
-      return false;
-    }
-  }
-  return true;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithNSString_(NSString *address) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  for (jint i = 0, count = ((jint) [((NSString *) nil_chk(address)) length]); i < count; i++) {
-    if (!AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_([address charAtWithInt:i])) {
-      return false;
-    }
-  }
-  return true;
-}
-
-IOSByteArray *AndroidTelephonyPhoneNumberUtils_networkPortionToCalledPartyBCDWithNSString_(NSString *s) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *networkPortion = AndroidTelephonyPhoneNumberUtils_extractNetworkPortionWithNSString_(s);
-  return AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDHelperWithNSString_withBoolean_(networkPortion, false);
-}
-
-IOSByteArray *AndroidTelephonyPhoneNumberUtils_networkPortionToCalledPartyBCDWithLengthWithNSString_(NSString *s) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *networkPortion = AndroidTelephonyPhoneNumberUtils_extractNetworkPortionWithNSString_(s);
-  return AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDHelperWithNSString_withBoolean_(networkPortion, true);
-}
-
-IOSByteArray *AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDWithNSString_(NSString *number) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDHelperWithNSString_withBoolean_(number, false);
-}
-
-IOSByteArray *AndroidTelephonyPhoneNumberUtils_numberToCalledPartyBCDHelperWithNSString_withBoolean_(NSString *number, jboolean includeLength) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint numberLenReal = ((jint) [((NSString *) nil_chk(number)) length]);
-  jint numberLenEffective = numberLenReal;
-  jboolean hasPlus = [number java_indexOf:'+'] != -1;
-  if (hasPlus) numberLenEffective--;
-  if (numberLenEffective == 0) return nil;
-  jint resultLen = (numberLenEffective + 1) / 2;
-  jint extraBytes = 1;
-  if (includeLength) extraBytes++;
-  resultLen += extraBytes;
-  IOSByteArray *result = [IOSByteArray arrayWithLength:resultLen];
-  jint digitCount = 0;
-  for (jint i = 0; i < numberLenReal; i++) {
-    jchar c = [number charAtWithInt:i];
-    if (c == '+') continue;
-    jint shift = ((digitCount & (jint) 0x01) == 1) ? 4 : 0;
-    *IOSByteArray_GetRef(result, extraBytes + (JreRShift32(digitCount, 1))) |= (jbyte) (JreLShift32((AndroidTelephonyPhoneNumberUtils_charToBCDWithChar_(c) & (jint) 0x0F), shift));
-    digitCount++;
-  }
-  if ((digitCount & (jint) 0x01) == 1) *IOSByteArray_GetRef(result, extraBytes + (JreRShift32(digitCount, 1))) |= (jint) 0xF0;
-  jint offset = 0;
-  if (includeLength) *IOSByteArray_GetRef(result, offset++) = (jbyte) (resultLen - 1);
-  *IOSByteArray_GetRef(result, offset) = (jbyte) (hasPlus ? AndroidTelephonyPhoneNumberUtils_TOA_International : AndroidTelephonyPhoneNumberUtils_TOA_Unknown);
-  return result;
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_formatNumberWithNSString_(NSString *source) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  AndroidTextSpannableStringBuilder *text = create_AndroidTextSpannableStringBuilder_initWithJavaLangCharSequence_(source);
-  AndroidTelephonyPhoneNumberUtils_formatNumberWithAndroidTextEditable_withInt_(text, AndroidTelephonyPhoneNumberUtils_getFormatTypeForLocaleWithJavaUtilLocale_(JavaUtilLocale_getDefault()));
-  return [text description];
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_formatNumberWithNSString_withInt_(NSString *source, jint defaultFormattingType) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  AndroidTextSpannableStringBuilder *text = create_AndroidTextSpannableStringBuilder_initWithJavaLangCharSequence_(source);
-  AndroidTelephonyPhoneNumberUtils_formatNumberWithAndroidTextEditable_withInt_(text, defaultFormattingType);
-  return [text description];
-}
-
-jint AndroidTelephonyPhoneNumberUtils_getFormatTypeForLocaleWithJavaUtilLocale_(JavaUtilLocale *locale) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *country = [((JavaUtilLocale *) nil_chk(locale)) getCountry];
-  return AndroidTelephonyPhoneNumberUtils_getFormatTypeFromCountryCodeWithNSString_(country);
-}
-
-void AndroidTelephonyPhoneNumberUtils_formatNumberWithAndroidTextEditable_withInt_(id<AndroidTextEditable> text, jint defaultFormattingType) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint formatType = defaultFormattingType;
-  if ([((id<AndroidTextEditable>) nil_chk(text)) length] > 2 && [text charAtWithInt:0] == '+') {
-    if ([text charAtWithInt:1] == '1') {
-      formatType = AndroidTelephonyPhoneNumberUtils_FORMAT_NANP;
-    }
-    else if ([text length] >= 3 && [text charAtWithInt:1] == '8' && [text charAtWithInt:2] == '1') {
-      formatType = AndroidTelephonyPhoneNumberUtils_FORMAT_JAPAN;
-    }
-    else {
-      return;
-    }
-  }
-  switch (formatType) {
-    case AndroidTelephonyPhoneNumberUtils_FORMAT_NANP:
-    AndroidTelephonyPhoneNumberUtils_formatNanpNumberWithAndroidTextEditable_(text);
-    return;
-    case AndroidTelephonyPhoneNumberUtils_FORMAT_JAPAN:
-    AndroidTelephonyPhoneNumberUtils_formatJapaneseNumberWithAndroidTextEditable_(text);
-    return;
-  }
-}
-
-void AndroidTelephonyPhoneNumberUtils_formatNanpNumberWithAndroidTextEditable_(id<AndroidTextEditable> text) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint length = [((id<AndroidTextEditable>) nil_chk(text)) length];
-  if (length > ((jint) [@"+1-nnn-nnn-nnnn" length])) {
-    return;
-  }
-  else if (length <= 5) {
-    return;
-  }
-  id<JavaLangCharSequence> saved = [text subSequenceFrom:0 to:length];
-  jint p = 0;
-  while (p < [text length]) {
-    if ([text charAtWithInt:p] == '-') {
-      [text delete__WithInt:p withInt:p + 1];
-    }
-    else {
-      p++;
-    }
-  }
-  length = [text length];
-  IOSIntArray *dashPositions = [IOSIntArray arrayWithLength:3];
-  jint numDashes = 0;
-  jint state = AndroidTelephonyPhoneNumberUtils_NANP_STATE_DIGIT;
-  jint numDigits = 0;
-  for (jint i = 0; i < length; i++) {
-    jchar c = [text charAtWithInt:i];
-    switch (c) {
-      case '1':
-      if (numDigits == 0 || state == AndroidTelephonyPhoneNumberUtils_NANP_STATE_PLUS) {
-        state = AndroidTelephonyPhoneNumberUtils_NANP_STATE_ONE;
-        break;
-      }
-      case '2':
-      case '3':
-      case '4':
-      case '5':
-      case '6':
-      case '7':
-      case '8':
-      case '9':
-      case '0':
-      if (state == AndroidTelephonyPhoneNumberUtils_NANP_STATE_PLUS) {
-        [text replaceWithInt:0 withInt:length withJavaLangCharSequence:saved];
-        return;
-      }
-      else if (state == AndroidTelephonyPhoneNumberUtils_NANP_STATE_ONE) {
-        *IOSIntArray_GetRef(dashPositions, numDashes++) = i;
-      }
-      else if (state != AndroidTelephonyPhoneNumberUtils_NANP_STATE_DASH && (numDigits == 3 || numDigits == 6)) {
-        *IOSIntArray_GetRef(dashPositions, numDashes++) = i;
-      }
-      state = AndroidTelephonyPhoneNumberUtils_NANP_STATE_DIGIT;
-      numDigits++;
-      break;
-      case '-':
-      state = AndroidTelephonyPhoneNumberUtils_NANP_STATE_DASH;
-      break;
-      case '+':
-      if (i == 0) {
-        state = AndroidTelephonyPhoneNumberUtils_NANP_STATE_PLUS;
-        break;
-      }
-      default:
-      [text replaceWithInt:0 withInt:length withJavaLangCharSequence:saved];
-      return;
-    }
-  }
-  if (numDigits == 7) {
-    numDashes--;
-  }
-  for (jint i = 0; i < numDashes; i++) {
-    jint pos = IOSIntArray_Get(dashPositions, i);
-    [text replaceWithInt:pos + i withInt:pos + i withJavaLangCharSequence:@"-"];
-  }
-  jint len = [text length];
-  while (len > 0) {
-    if ([text charAtWithInt:len - 1] == '-') {
-      [text delete__WithInt:len - 1 withInt:len];
-      len--;
-    }
-    else {
-      break;
-    }
-  }
-}
-
-void AndroidTelephonyPhoneNumberUtils_formatJapaneseNumberWithAndroidTextEditable_(id<AndroidTextEditable> text) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  AndroidTelephonyJapanesePhoneNumberFormatter_formatWithAndroidTextEditable_(text);
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_convertKeypadLettersToDigitsWithNSString_(NSString *input) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (input == nil) {
-    return input;
-  }
-  jint len = ((jint) [input length]);
-  if (len == 0) {
-    return input;
-  }
-  IOSCharArray *out = [input java_toCharArray];
-  for (jint i = 0; i < len; i++) {
-    jchar c = IOSCharArray_Get(nil_chk(out), i);
-    *IOSCharArray_GetRef(out, i) = (jchar) [((AndroidUtilSparseIntArray *) nil_chk(AndroidTelephonyPhoneNumberUtils_KEYPAD_MAP)) getWithInt:c withInt:c];
-  }
-  return [NSString java_stringWithCharacters:out];
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isTwoToNineWithChar_(jchar c) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if (c >= '2' && c <= '9') {
-    return true;
-  }
-  else {
-    return false;
-  }
-}
-
-jint AndroidTelephonyPhoneNumberUtils_getFormatTypeFromCountryCodeWithNSString_(NSString *country) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint length = ((IOSObjectArray *) nil_chk(AndroidTelephonyPhoneNumberUtils_NANP_COUNTRIES))->size_;
-  for (jint i = 0; i < length; i++) {
-    if ([((NSString *) nil_chk(IOSObjectArray_Get(AndroidTelephonyPhoneNumberUtils_NANP_COUNTRIES, i))) java_compareToIgnoreCase:country] == 0) {
-      return AndroidTelephonyPhoneNumberUtils_FORMAT_NANP;
-    }
-  }
-  if ([@"jp" java_compareToIgnoreCase:country] == 0) {
-    return AndroidTelephonyPhoneNumberUtils_FORMAT_JAPAN;
-  }
-  return AndroidTelephonyPhoneNumberUtils_FORMAT_UNKNOWN;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isNanpWithNSString_(NSString *dialStr) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jboolean retVal = false;
-  if (dialStr != nil) {
-    if (((jint) [dialStr length]) == AndroidTelephonyPhoneNumberUtils_NANP_LENGTH) {
-      if (AndroidTelephonyPhoneNumberUtils_isTwoToNineWithChar_([dialStr charAtWithInt:0]) && AndroidTelephonyPhoneNumberUtils_isTwoToNineWithChar_([dialStr charAtWithInt:3])) {
-        retVal = true;
-        for (jint i = 1; i < AndroidTelephonyPhoneNumberUtils_NANP_LENGTH; i++) {
-          jchar c = [dialStr charAtWithInt:i];
-          if (!AndroidTelephonyPhoneNumberUtils_isISODigitWithChar_(c)) {
-            retVal = false;
-            break;
-          }
-        }
-      }
-    }
-  }
-  else {
-    AndroidUtilLog_eWithNSString_withNSString_(@"isNanp: null dialStr passed in", dialStr);
-  }
-  return retVal;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isOneNanpWithNSString_(NSString *dialStr) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jboolean retVal = false;
-  if (dialStr != nil) {
-    NSString *newDialStr = [dialStr java_substring:1];
-    if (([dialStr charAtWithInt:0] == '1') && AndroidTelephonyPhoneNumberUtils_isNanpWithNSString_(newDialStr)) {
-      retVal = true;
-    }
-  }
-  else {
-    AndroidUtilLog_eWithNSString_withNSString_(@"isOneNanp: null dialStr passed in", dialStr);
-  }
-  return retVal;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isUriNumberWithNSString_(NSString *number) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return number != nil && ([number java_contains:@"@"] || [number java_contains:@"%40"]);
-}
-
-jint AndroidTelephonyPhoneNumberUtils_findDialableIndexFromPostDialStrWithNSString_(NSString *postDialStr) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  for (jint index = 0; index < ((jint) [((NSString *) nil_chk(postDialStr)) length]); index++) {
-    jchar c = [postDialStr charAtWithInt:index];
-    if (AndroidTelephonyPhoneNumberUtils_isReallyDialableWithChar_(c)) {
-      return index;
-    }
-  }
-  return -1;
-}
-
-NSString *AndroidTelephonyPhoneNumberUtils_appendPwCharBackToOrigDialStrWithInt_withNSString_withNSString_(jint dialableIndex, NSString *origStr, NSString *dialStr) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  NSString *retStr;
-  if (dialableIndex == 1) {
-    JavaLangStringBuilder *ret = create_JavaLangStringBuilder_initWithNSString_(origStr);
-    ret = [ret appendWithChar:[((NSString *) nil_chk(dialStr)) charAtWithInt:0]];
-    retStr = [((JavaLangStringBuilder *) nil_chk(ret)) description];
-  }
-  else {
-    NSString *nonDigitStr = [((NSString *) nil_chk(dialStr)) java_substring:0 endIndex:dialableIndex];
-    retStr = [((NSString *) nil_chk(origStr)) java_concat:nonDigitStr];
-  }
-  return retStr;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_matchIntlPrefixWithNSString_withInt_(NSString *a, jint len) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint state = 0;
-  for (jint i = 0; i < len; i++) {
-    jchar c = [((NSString *) nil_chk(a)) charAtWithInt:i];
-    switch (state) {
-      case 0:
-      if (c == '+') state = 1;
-      else if (c == '0') state = 2;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      case 2:
-      if (c == '0') state = 3;
-      else if (c == '1') state = 4;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      case 4:
-      if (c == '1') state = 5;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      default:
-      if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-    }
-  }
-  return state == 1 || state == 3 || state == 5;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_matchIntlPrefixAndCCWithNSString_withInt_(NSString *a, jint len) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint state = 0;
-  for (jint i = 0; i < len; i++) {
-    jchar c = [((NSString *) nil_chk(a)) charAtWithInt:i];
-    switch (state) {
-      case 0:
-      if (c == '+') state = 1;
-      else if (c == '0') state = 2;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      case 2:
-      if (c == '0') state = 3;
-      else if (c == '1') state = 4;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      case 4:
-      if (c == '1') state = 5;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      case 1:
-      case 3:
-      case 5:
-      if (AndroidTelephonyPhoneNumberUtils_isISODigitWithChar_(c)) state = 6;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      case 6:
-      case 7:
-      if (AndroidTelephonyPhoneNumberUtils_isISODigitWithChar_(c)) state++;
-      else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-      break;
-      default:
-      if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) return false;
-    }
-  }
-  return state == 6 || state == 7 || state == 8;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_matchTrunkPrefixWithNSString_withInt_(NSString *a, jint len) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jboolean found;
-  found = false;
-  for (jint i = 0; i < len; i++) {
-    jchar c = [((NSString *) nil_chk(a)) charAtWithInt:i];
-    if (c == '0' && !found) {
-      found = true;
-    }
-    else if (AndroidTelephonyPhoneNumberUtils_isNonSeparatorWithChar_(c)) {
-      return false;
-    }
-  }
-  return found;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_isCountryCallingCodeWithInt_(jint countryCallingCodeCandidate) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  return countryCallingCodeCandidate > 0 && countryCallingCodeCandidate < AndroidTelephonyPhoneNumberUtils_CCC_LENGTH && IOSBooleanArray_Get(nil_chk(AndroidTelephonyPhoneNumberUtils_COUNTLY_CALLING_CALL), countryCallingCodeCandidate);
-}
-
-jint AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(jchar ch) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  if ('0' <= ch && ch <= '9') {
-    return ch - '0';
-  }
-  else {
-    return -1;
-  }
-}
-
-AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *AndroidTelephonyPhoneNumberUtils_tryGetCountryCallingCodeAndNewIndexWithNSString_withBoolean_(NSString *str, jboolean acceptThailandCase) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint state = 0;
-  jint ccc = 0;
-  jint length = ((jint) [((NSString *) nil_chk(str)) length]);
-  for (jint i = 0; i < length; i++) {
-    jchar ch = [str charAtWithInt:i];
-    switch (state) {
-      case 0:
-      if (ch == '+') state = 1;
-      else if (ch == '0') state = 2;
-      else if (ch == '1') {
-        if (acceptThailandCase) {
-          state = 8;
-        }
-        else {
-          return nil;
-        }
-      }
-      else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch)) {
-        return nil;
-      }
-      break;
-      case 2:
-      if (ch == '0') state = 3;
-      else if (ch == '1') state = 4;
-      else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch)) {
-        return nil;
-      }
-      break;
-      case 4:
-      if (ch == '1') state = 5;
-      else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch)) {
-        return nil;
-      }
-      break;
-      case 1:
-      case 3:
-      case 5:
-      case 6:
-      case 7:
-      {
-        jint ret = AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(ch);
-        if (ret > 0) {
-          ccc = ccc * 10 + ret;
-          if (ccc >= 100 || AndroidTelephonyPhoneNumberUtils_isCountryCallingCodeWithInt_(ccc)) {
-            return create_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(ccc, i + 1);
-          }
-          if (state == 1 || state == 3 || state == 5) {
-            state = 6;
-          }
-          else {
-            state++;
-          }
-        }
-        else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch)) {
-          return nil;
-        }
-      }
-      break;
-      case 8:
-      if (ch == '6') state = 9;
-      else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch)) {
-        return nil;
-      }
-      break;
-      case 9:
-      if (ch == '6') {
-        return create_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(66, i + 1);
-      }
-      else {
-        return nil;
-      }
-      default:
-      return nil;
-    }
-  }
-  return nil;
-}
-
-jint AndroidTelephonyPhoneNumberUtils_tryGetTrunkPrefixOmittedIndexWithNSString_withInt_(NSString *str, jint currentIndex) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jint length = ((jint) [((NSString *) nil_chk(str)) length]);
-  for (jint i = currentIndex; i < length; i++) {
-    jchar ch = [str charAtWithInt:i];
-    if (AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_(ch) >= 0) {
-      return i + 1;
-    }
-    else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_(ch)) {
-      return -1;
-    }
-  }
-  return -1;
-}
-
-jboolean AndroidTelephonyPhoneNumberUtils_checkPrefixIsIgnorableWithNSString_withInt_withInt_(NSString *str, jint forwardIndex, jint backwardIndex) {
-  AndroidTelephonyPhoneNumberUtils_initialize();
-  jboolean trunk_prefix_was_read = false;
-  while (backwardIndex >= forwardIndex) {
-    if (AndroidTelephonyPhoneNumberUtils_tryGetISODigitWithChar_([((NSString *) nil_chk(str)) charAtWithInt:backwardIndex]) >= 0) {
-      if (trunk_prefix_was_read) {
-        return false;
-      }
-      else {
-        trunk_prefix_was_read = true;
-      }
-    }
-    else if (AndroidTelephonyPhoneNumberUtils_isDialableWithChar_([str charAtWithInt:backwardIndex])) {
-      return false;
-    }
-    backwardIndex--;
-  }
-  return true;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidTelephonyPhoneNumberUtils)
-
-@implementation AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex
-
-- (instancetype)initWithInt:(jint)countryCode
-                    withInt:(jint)newIndex {
-  AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(self, countryCode, newIndex);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithInt:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "countryCallingCode_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-    { "newIndex_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "II", "LAndroidTelephonyPhoneNumberUtils;" };
-  static const J2ObjcClassInfo _AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex = { "CountryCallingCodeAndNewIndex", "android.telephony", ptrTable, methods, fields, 7, 0xa, 1, 2, 1, -1, -1, -1, -1 };
-  return &_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex;
-}
-
-@end
-
-void AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *self, jint countryCode, jint newIndex) {
-  NSObject_init(self);
-  self->countryCallingCode_ = countryCode;
-  self->newIndex_ = newIndex;
-}
-
-AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *new_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(jint countryCode, jint newIndex) {
-  J2OBJC_NEW_IMPL(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex, initWithInt_withInt_, countryCode, newIndex)
-}
-
-AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex *create_AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex_initWithInt_withInt_(jint countryCode, jint newIndex) {
-  J2OBJC_CREATE_IMPL(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex, initWithInt_withInt_, countryCode, newIndex)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidTelephonyPhoneNumberUtils_CountryCallingCodeAndNewIndex)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidException.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidException.h
deleted file mode 100644
index fb50a2dde..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidException.h
+++ /dev/null
@@ -1,58 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilAndroidException")
-#ifdef RESTRICT_AndroidUtilAndroidException
-#define INCLUDE_ALL_AndroidUtilAndroidException 0
-#else
-#define INCLUDE_ALL_AndroidUtilAndroidException 1
-#endif
-#undef RESTRICT_AndroidUtilAndroidException
-
-#if !defined (AndroidUtilAndroidException_) && (INCLUDE_ALL_AndroidUtilAndroidException || defined(INCLUDE_AndroidUtilAndroidException))
-#define AndroidUtilAndroidException_
-
-#define RESTRICT_JavaLangException 1
-#define INCLUDE_JavaLangException 1
-#include "java/lang/Exception.h"
-
-@interface AndroidUtilAndroidException : JavaLangException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithJavaLangException:(JavaLangException *)cause;
-
-- (instancetype)initWithNSString:(NSString *)name;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilAndroidException)
-
-FOUNDATION_EXPORT void AndroidUtilAndroidException_init(AndroidUtilAndroidException *self);
-
-FOUNDATION_EXPORT AndroidUtilAndroidException *new_AndroidUtilAndroidException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidException *create_AndroidUtilAndroidException_init();
-
-FOUNDATION_EXPORT void AndroidUtilAndroidException_initWithNSString_(AndroidUtilAndroidException *self, NSString *name);
-
-FOUNDATION_EXPORT AndroidUtilAndroidException *new_AndroidUtilAndroidException_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidException *create_AndroidUtilAndroidException_initWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT void AndroidUtilAndroidException_initWithJavaLangException_(AndroidUtilAndroidException *self, JavaLangException *cause);
-
-FOUNDATION_EXPORT AndroidUtilAndroidException *new_AndroidUtilAndroidException_initWithJavaLangException_(JavaLangException *cause) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidException *create_AndroidUtilAndroidException_initWithJavaLangException_(JavaLangException *cause);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilAndroidException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilAndroidException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidException.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidException.m
deleted file mode 100644
index 87e90a5c8..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidException.m
+++ /dev/null
@@ -1,83 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilAndroidException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Exception.h"
-
-@implementation AndroidUtilAndroidException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilAndroidException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)name {
-  AndroidUtilAndroidException_initWithNSString_(self, name);
-  return self;
-}
-
-- (instancetype)initWithJavaLangException:(JavaLangException *)cause {
-  AndroidUtilAndroidException_initWithJavaLangException_(self, cause);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  methods[2].selector = @selector(initWithJavaLangException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;", "LJavaLangException;" };
-  static const J2ObjcClassInfo _AndroidUtilAndroidException = { "AndroidException", "android.util", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilAndroidException;
-}
-
-@end
-
-void AndroidUtilAndroidException_init(AndroidUtilAndroidException *self) {
-  JavaLangException_init(self);
-}
-
-AndroidUtilAndroidException *new_AndroidUtilAndroidException_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidException, init)
-}
-
-AndroidUtilAndroidException *create_AndroidUtilAndroidException_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidException, init)
-}
-
-void AndroidUtilAndroidException_initWithNSString_(AndroidUtilAndroidException *self, NSString *name) {
-  JavaLangException_initWithNSString_(self, name);
-}
-
-AndroidUtilAndroidException *new_AndroidUtilAndroidException_initWithNSString_(NSString *name) {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidException, initWithNSString_, name)
-}
-
-AndroidUtilAndroidException *create_AndroidUtilAndroidException_initWithNSString_(NSString *name) {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidException, initWithNSString_, name)
-}
-
-void AndroidUtilAndroidException_initWithJavaLangException_(AndroidUtilAndroidException *self, JavaLangException *cause) {
-  JavaLangException_initWithNSException_(self, cause);
-}
-
-AndroidUtilAndroidException *new_AndroidUtilAndroidException_initWithJavaLangException_(JavaLangException *cause) {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidException, initWithJavaLangException_, cause)
-}
-
-AndroidUtilAndroidException *create_AndroidUtilAndroidException_initWithJavaLangException_(JavaLangException *cause) {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidException, initWithJavaLangException_, cause)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilAndroidException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidRuntimeException.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidRuntimeException.h
deleted file mode 100644
index 3e3171506..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidRuntimeException.h
+++ /dev/null
@@ -1,69 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilAndroidRuntimeException")
-#ifdef RESTRICT_AndroidUtilAndroidRuntimeException
-#define INCLUDE_ALL_AndroidUtilAndroidRuntimeException 0
-#else
-#define INCLUDE_ALL_AndroidUtilAndroidRuntimeException 1
-#endif
-#undef RESTRICT_AndroidUtilAndroidRuntimeException
-
-#if !defined (AndroidUtilAndroidRuntimeException_) && (INCLUDE_ALL_AndroidUtilAndroidRuntimeException || defined(INCLUDE_AndroidUtilAndroidRuntimeException))
-#define AndroidUtilAndroidRuntimeException_
-
-#define RESTRICT_JavaLangRuntimeException 1
-#define INCLUDE_JavaLangRuntimeException 1
-#include "java/lang/RuntimeException.h"
-
-@class JavaLangException;
-
-@interface AndroidUtilAndroidRuntimeException : JavaLangRuntimeException
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithJavaLangException:(JavaLangException *)cause;
-
-- (instancetype)initWithNSString:(NSString *)name;
-
-- (instancetype)initWithNSString:(NSString *)name
-                 withNSException:(NSException *)cause;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilAndroidRuntimeException)
-
-FOUNDATION_EXPORT void AndroidUtilAndroidRuntimeException_init(AndroidUtilAndroidRuntimeException *self);
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_init();
-
-FOUNDATION_EXPORT void AndroidUtilAndroidRuntimeException_initWithNSString_(AndroidUtilAndroidRuntimeException *self, NSString *name);
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT void AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(AndroidUtilAndroidRuntimeException *self, NSString *name, NSException *cause);
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(NSString *name, NSException *cause) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(NSString *name, NSException *cause);
-
-FOUNDATION_EXPORT void AndroidUtilAndroidRuntimeException_initWithJavaLangException_(AndroidUtilAndroidRuntimeException *self, JavaLangException *cause);
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithJavaLangException_(JavaLangException *cause) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithJavaLangException_(JavaLangException *cause);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilAndroidRuntimeException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilAndroidRuntimeException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidRuntimeException.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidRuntimeException.m
deleted file mode 100644
index 77bc20aa9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilAndroidRuntimeException.m
+++ /dev/null
@@ -1,104 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilAndroidRuntimeException.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Exception.h"
-#include "java/lang/RuntimeException.h"
-
-@implementation AndroidUtilAndroidRuntimeException
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilAndroidRuntimeException_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)name {
-  AndroidUtilAndroidRuntimeException_initWithNSString_(self, name);
-  return self;
-}
-
-- (instancetype)initWithNSString:(NSString *)name
-                 withNSException:(NSException *)cause {
-  AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(self, name, cause);
-  return self;
-}
-
-- (instancetype)initWithJavaLangException:(JavaLangException *)cause {
-  AndroidUtilAndroidRuntimeException_initWithJavaLangException_(self, cause);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  methods[2].selector = @selector(initWithNSString:withNSException:);
-  methods[3].selector = @selector(initWithJavaLangException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSException;", "LJavaLangException;" };
-  static const J2ObjcClassInfo _AndroidUtilAndroidRuntimeException = { "AndroidRuntimeException", "android.util", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilAndroidRuntimeException;
-}
-
-@end
-
-void AndroidUtilAndroidRuntimeException_init(AndroidUtilAndroidRuntimeException *self) {
-  JavaLangRuntimeException_init(self);
-}
-
-AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, init)
-}
-
-AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, init)
-}
-
-void AndroidUtilAndroidRuntimeException_initWithNSString_(AndroidUtilAndroidRuntimeException *self, NSString *name) {
-  JavaLangRuntimeException_initWithNSString_(self, name);
-}
-
-AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithNSString_(NSString *name) {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_, name)
-}
-
-AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithNSString_(NSString *name) {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_, name)
-}
-
-void AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(AndroidUtilAndroidRuntimeException *self, NSString *name, NSException *cause) {
-  JavaLangRuntimeException_initWithNSString_withNSException_(self, name, cause);
-}
-
-AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(NSString *name, NSException *cause) {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_withNSException_, name, cause)
-}
-
-AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithNSString_withNSException_(NSString *name, NSException *cause) {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, initWithNSString_withNSException_, name, cause)
-}
-
-void AndroidUtilAndroidRuntimeException_initWithJavaLangException_(AndroidUtilAndroidRuntimeException *self, JavaLangException *cause) {
-  JavaLangRuntimeException_initWithNSException_(self, cause);
-}
-
-AndroidUtilAndroidRuntimeException *new_AndroidUtilAndroidRuntimeException_initWithJavaLangException_(JavaLangException *cause) {
-  J2OBJC_NEW_IMPL(AndroidUtilAndroidRuntimeException, initWithJavaLangException_, cause)
-}
-
-AndroidUtilAndroidRuntimeException *create_AndroidUtilAndroidRuntimeException_initWithJavaLangException_(JavaLangException *cause) {
-  J2OBJC_CREATE_IMPL(AndroidUtilAndroidRuntimeException, initWithJavaLangException_, cause)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilAndroidRuntimeException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilEmptyArray.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilEmptyArray.h
deleted file mode 100644
index 6d2a413cb..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilEmptyArray.h
+++ /dev/null
@@ -1,101 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilEmptyArray")
-#ifdef RESTRICT_AndroidUtilEmptyArray
-#define INCLUDE_ALL_AndroidUtilEmptyArray 0
-#else
-#define INCLUDE_ALL_AndroidUtilEmptyArray 1
-#endif
-#undef RESTRICT_AndroidUtilEmptyArray
-
-#if !defined (AndroidUtilEmptyArray_) && (INCLUDE_ALL_AndroidUtilEmptyArray || defined(INCLUDE_AndroidUtilEmptyArray))
-#define AndroidUtilEmptyArray_
-
-@class IOSBooleanArray;
-@class IOSByteArray;
-@class IOSCharArray;
-@class IOSDoubleArray;
-@class IOSIntArray;
-@class IOSLongArray;
-@class IOSObjectArray;
-
-@interface AndroidUtilEmptyArray : NSObject
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilEmptyArray)
-
-inline IOSBooleanArray *AndroidUtilEmptyArray_get_BOOLEAN();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSBooleanArray *AndroidUtilEmptyArray_BOOLEAN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, BOOLEAN, IOSBooleanArray *)
-
-inline IOSByteArray *AndroidUtilEmptyArray_get_BYTE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSByteArray *AndroidUtilEmptyArray_BYTE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, BYTE, IOSByteArray *)
-
-inline IOSCharArray *AndroidUtilEmptyArray_get_CHAR();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSCharArray *AndroidUtilEmptyArray_CHAR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, CHAR, IOSCharArray *)
-
-inline IOSDoubleArray *AndroidUtilEmptyArray_get_DOUBLE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSDoubleArray *AndroidUtilEmptyArray_DOUBLE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, DOUBLE, IOSDoubleArray *)
-
-inline IOSIntArray *AndroidUtilEmptyArray_get_INT();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSIntArray *AndroidUtilEmptyArray_INT;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, INT, IOSIntArray *)
-
-inline IOSLongArray *AndroidUtilEmptyArray_get_LONG();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSLongArray *AndroidUtilEmptyArray_LONG;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, LONG, IOSLongArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_CLASS();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_CLASS;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, CLASS, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_OBJECT();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_OBJECT;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, OBJECT, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_STRING();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_STRING;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, STRING, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_THROWABLE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_THROWABLE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, THROWABLE, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_STACK_TRACE_ELEMENT();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_STACK_TRACE_ELEMENT;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, STACK_TRACE_ELEMENT, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_TYPE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_TYPE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, TYPE, IOSObjectArray *)
-
-inline IOSObjectArray *AndroidUtilEmptyArray_get_TYPE_VARIABLE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilEmptyArray_TYPE_VARIABLE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilEmptyArray, TYPE_VARIABLE, IOSObjectArray *)
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilEmptyArray)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilEmptyArray")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilEmptyArray.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilEmptyArray.m
deleted file mode 100644
index 4ece5e62f..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilEmptyArray.m
+++ /dev/null
@@ -1,112 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilEmptyArray.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/StackTraceElement.h"
-#include "java/lang/reflect/Type.h"
-#include "java/lang/reflect/TypeVariable.h"
-
-@interface AndroidUtilEmptyArray ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void AndroidUtilEmptyArray_init(AndroidUtilEmptyArray *self);
-
-__attribute__((unused)) static AndroidUtilEmptyArray *new_AndroidUtilEmptyArray_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidUtilEmptyArray *create_AndroidUtilEmptyArray_init();
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilEmptyArray)
-
-IOSBooleanArray *AndroidUtilEmptyArray_BOOLEAN;
-IOSByteArray *AndroidUtilEmptyArray_BYTE;
-IOSCharArray *AndroidUtilEmptyArray_CHAR;
-IOSDoubleArray *AndroidUtilEmptyArray_DOUBLE;
-IOSIntArray *AndroidUtilEmptyArray_INT;
-IOSLongArray *AndroidUtilEmptyArray_LONG;
-IOSObjectArray *AndroidUtilEmptyArray_CLASS;
-IOSObjectArray *AndroidUtilEmptyArray_OBJECT;
-IOSObjectArray *AndroidUtilEmptyArray_STRING;
-IOSObjectArray *AndroidUtilEmptyArray_THROWABLE;
-IOSObjectArray *AndroidUtilEmptyArray_STACK_TRACE_ELEMENT;
-IOSObjectArray *AndroidUtilEmptyArray_TYPE;
-IOSObjectArray *AndroidUtilEmptyArray_TYPE_VARIABLE;
-
-@implementation AndroidUtilEmptyArray
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilEmptyArray_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "BOOLEAN", "[Z", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
-    { "BYTE", "[B", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
-    { "CHAR", "[C", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
-    { "DOUBLE", "[D", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
-    { "INT", "[I", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
-    { "LONG", "[J", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
-    { "CLASS", "[LIOSClass;", .constantValue.asLong = 0, 0x19, -1, 6, 7, -1 },
-    { "OBJECT", "[LNSObject;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
-    { "STRING", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
-    { "THROWABLE", "[LNSException;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
-    { "STACK_TRACE_ELEMENT", "[LJavaLangStackTraceElement;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
-    { "TYPE", "[LJavaLangReflectType;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
-    { "TYPE_VARIABLE", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
-  };
-  static const void *ptrTable[] = { &AndroidUtilEmptyArray_BOOLEAN, &AndroidUtilEmptyArray_BYTE, &AndroidUtilEmptyArray_CHAR, &AndroidUtilEmptyArray_DOUBLE, &AndroidUtilEmptyArray_INT, &AndroidUtilEmptyArray_LONG, &AndroidUtilEmptyArray_CLASS, "[Ljava/lang/Class<*>;", &AndroidUtilEmptyArray_OBJECT, &AndroidUtilEmptyArray_STRING, &AndroidUtilEmptyArray_THROWABLE, &AndroidUtilEmptyArray_STACK_TRACE_ELEMENT, &AndroidUtilEmptyArray_TYPE, &AndroidUtilEmptyArray_TYPE_VARIABLE };
-  static const J2ObjcClassInfo _AndroidUtilEmptyArray = { "EmptyArray", "android.util", ptrTable, methods, fields, 7, 0x11, 1, 13, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilEmptyArray;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilEmptyArray class]) {
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_BOOLEAN, [IOSBooleanArray newArrayWithLength:0]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_BYTE, [IOSByteArray newArrayWithLength:0]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_CHAR, [IOSCharArray newArrayWithLength:0]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_DOUBLE, [IOSDoubleArray newArrayWithLength:0]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_INT, [IOSIntArray newArrayWithLength:0]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_LONG, [IOSLongArray newArrayWithLength:0]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_CLASS, [IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_OBJECT, [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_STRING, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_THROWABLE, [IOSObjectArray newArrayWithLength:0 type:NSException_class_()]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_STACK_TRACE_ELEMENT, [IOSObjectArray newArrayWithLength:0 type:JavaLangStackTraceElement_class_()]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_TYPE, [IOSObjectArray newArrayWithLength:0 type:JavaLangReflectType_class_()]);
-    JreStrongAssignAndConsume(&AndroidUtilEmptyArray_TYPE_VARIABLE, [IOSObjectArray newArrayWithLength:0 type:JavaLangReflectTypeVariable_class_()]);
-    J2OBJC_SET_INITIALIZED(AndroidUtilEmptyArray)
-  }
-}
-
-@end
-
-void AndroidUtilEmptyArray_init(AndroidUtilEmptyArray *self) {
-  NSObject_init(self);
-}
-
-AndroidUtilEmptyArray *new_AndroidUtilEmptyArray_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilEmptyArray, init)
-}
-
-AndroidUtilEmptyArray *create_AndroidUtilEmptyArray_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilEmptyArray, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilEmptyArray)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonReader.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonReader.h
deleted file mode 100644
index 33e2df373..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonReader.h
+++ /dev/null
@@ -1,81 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilJsonReader")
-#ifdef RESTRICT_AndroidUtilJsonReader
-#define INCLUDE_ALL_AndroidUtilJsonReader 0
-#else
-#define INCLUDE_ALL_AndroidUtilJsonReader 1
-#endif
-#undef RESTRICT_AndroidUtilJsonReader
-
-#if !defined (AndroidUtilJsonReader_) && (INCLUDE_ALL_AndroidUtilJsonReader || defined(INCLUDE_AndroidUtilJsonReader))
-#define AndroidUtilJsonReader_
-
-#define RESTRICT_JavaIoCloseable 1
-#define INCLUDE_JavaIoCloseable 1
-#include "java/io/Closeable.h"
-
-@class AndroidUtilJsonToken;
-@class JavaIoReader;
-
-@interface AndroidUtilJsonReader : NSObject < JavaIoCloseable >
-
-#pragma mark Public
-
-- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg;
-
-- (void)beginArray;
-
-- (void)beginObject;
-
-- (void)close;
-
-- (void)endArray;
-
-- (void)endObject;
-
-- (jboolean)hasNext;
-
-- (jboolean)isLenient;
-
-- (jboolean)nextBoolean;
-
-- (jdouble)nextDouble;
-
-- (jint)nextInt;
-
-- (jlong)nextLong;
-
-- (NSString *)nextName;
-
-- (void)nextNull;
-
-- (NSString *)nextString;
-
-- (AndroidUtilJsonToken *)peek;
-
-- (void)setLenientWithBoolean:(jboolean)lenient;
-
-- (void)skipValue;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilJsonReader)
-
-FOUNDATION_EXPORT void AndroidUtilJsonReader_initWithJavaIoReader_(AndroidUtilJsonReader *self, JavaIoReader *inArg);
-
-FOUNDATION_EXPORT AndroidUtilJsonReader *new_AndroidUtilJsonReader_initWithJavaIoReader_(JavaIoReader *inArg) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilJsonReader *create_AndroidUtilJsonReader_initWithJavaIoReader_(JavaIoReader *inArg);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilJsonReader)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilJsonReader")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonReader.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonReader.m
deleted file mode 100644
index fd6f75b9c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonReader.m
+++ /dev/null
@@ -1,1137 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilJsonReader.h"
-#include "AndroidUtilJsonScope.h"
-#include "AndroidUtilJsonToken.h"
-#include "AndroidUtilMalformedJsonException.h"
-#include "IOSClass.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/EOFException.h"
-#include "java/io/IOException.h"
-#include "java/io/Reader.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Double.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/Math.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/NumberFormatException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/System.h"
-#include "java/util/ArrayList.h"
-#include "java/util/List.h"
-#include "libcore/internal/StringPool.h"
-
-@interface AndroidUtilJsonReader () {
- @public
-  LibcoreInternalStringPool *stringPool_;
-  JavaIoReader *in_;
-  jboolean lenient_;
-  IOSCharArray *buffer_;
-  jint pos_;
-  jint limit_;
-  jint bufferStartLine_;
-  jint bufferStartColumn_;
-  id<JavaUtilList> stack_;
-  AndroidUtilJsonToken *token_;
-  NSString *name_;
-  NSString *value_;
-  jint valuePos_;
-  jint valueLength_;
-  jboolean skipping_;
-}
-
-- (void)expectWithAndroidUtilJsonToken:(AndroidUtilJsonToken *)expected;
-
-- (AndroidUtilJsonToken *)advance;
-
-- (AndroidUtilJsonScope *)peekStack;
-
-- (AndroidUtilJsonScope *)pop;
-
-- (void)pushWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)newTop;
-
-- (void)replaceTopWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)newTop;
-
-- (AndroidUtilJsonToken *)nextInArrayWithBoolean:(jboolean)firstElement;
-
-- (AndroidUtilJsonToken *)nextInObjectWithBoolean:(jboolean)firstElement;
-
-- (AndroidUtilJsonToken *)objectValue;
-
-- (AndroidUtilJsonToken *)nextValue;
-
-- (jboolean)fillBufferWithInt:(jint)minimum;
-
-- (jint)getLineNumber;
-
-- (jint)getColumnNumber;
-
-- (jint)nextNonWhitespace;
-
-- (void)checkLenient;
-
-- (void)skipToEndOfLine;
-
-- (jboolean)skipToWithNSString:(NSString *)toFind;
-
-- (NSString *)nextStringWithChar:(jchar)quote;
-
-- (NSString *)nextLiteralWithBoolean:(jboolean)assignOffsetsOnly;
-
-- (jchar)readEscapeCharacter;
-
-- (AndroidUtilJsonToken *)readLiteral;
-
-- (AndroidUtilJsonToken *)decodeLiteral;
-
-- (AndroidUtilJsonToken *)decodeNumberWithCharArray:(IOSCharArray *)chars
-                                            withInt:(jint)offset
-                                            withInt:(jint)length;
-
-- (JavaIoIOException *)syntaxErrorWithNSString:(NSString *)message;
-
-- (id<JavaLangCharSequence>)getSnippet;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, stringPool_, LibcoreInternalStringPool *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, in_, JavaIoReader *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, buffer_, IOSCharArray *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, stack_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, token_, AndroidUtilJsonToken *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, name_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonReader, value_, NSString *)
-
-inline NSString *AndroidUtilJsonReader_get_TRUE();
-static NSString *AndroidUtilJsonReader_TRUE = @"true";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilJsonReader, TRUE, NSString *)
-
-inline NSString *AndroidUtilJsonReader_get_FALSE();
-static NSString *AndroidUtilJsonReader_FALSE = @"false";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilJsonReader, FALSE, NSString *)
-
-__attribute__((unused)) static void AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(AndroidUtilJsonReader *self, AndroidUtilJsonToken *expected);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_advance(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static AndroidUtilJsonScope *AndroidUtilJsonReader_peekStack(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static AndroidUtilJsonScope *AndroidUtilJsonReader_pop(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static void AndroidUtilJsonReader_pushWithAndroidUtilJsonScope_(AndroidUtilJsonReader *self, AndroidUtilJsonScope *newTop);
-
-__attribute__((unused)) static void AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(AndroidUtilJsonReader *self, AndroidUtilJsonScope *newTop);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_nextInArrayWithBoolean_(AndroidUtilJsonReader *self, jboolean firstElement);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_nextInObjectWithBoolean_(AndroidUtilJsonReader *self, jboolean firstElement);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_objectValue(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_nextValue(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static jboolean AndroidUtilJsonReader_fillBufferWithInt_(AndroidUtilJsonReader *self, jint minimum);
-
-__attribute__((unused)) static jint AndroidUtilJsonReader_getLineNumber(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static jint AndroidUtilJsonReader_getColumnNumber(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static jint AndroidUtilJsonReader_nextNonWhitespace(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static void AndroidUtilJsonReader_checkLenient(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static void AndroidUtilJsonReader_skipToEndOfLine(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static jboolean AndroidUtilJsonReader_skipToWithNSString_(AndroidUtilJsonReader *self, NSString *toFind);
-
-__attribute__((unused)) static NSString *AndroidUtilJsonReader_nextStringWithChar_(AndroidUtilJsonReader *self, jchar quote);
-
-__attribute__((unused)) static NSString *AndroidUtilJsonReader_nextLiteralWithBoolean_(AndroidUtilJsonReader *self, jboolean assignOffsetsOnly);
-
-__attribute__((unused)) static jchar AndroidUtilJsonReader_readEscapeCharacter(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_readLiteral(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_decodeLiteral(AndroidUtilJsonReader *self);
-
-__attribute__((unused)) static AndroidUtilJsonToken *AndroidUtilJsonReader_decodeNumberWithCharArray_withInt_withInt_(AndroidUtilJsonReader *self, IOSCharArray *chars, jint offset, jint length);
-
-__attribute__((unused)) static JavaIoIOException *AndroidUtilJsonReader_syntaxErrorWithNSString_(AndroidUtilJsonReader *self, NSString *message);
-
-__attribute__((unused)) static id<JavaLangCharSequence> AndroidUtilJsonReader_getSnippet(AndroidUtilJsonReader *self);
-
-@implementation AndroidUtilJsonReader
-
-- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg {
-  AndroidUtilJsonReader_initWithJavaIoReader_(self, inArg);
-  return self;
-}
-
-- (void)setLenientWithBoolean:(jboolean)lenient {
-  self->lenient_ = lenient;
-}
-
-- (jboolean)isLenient {
-  return lenient_;
-}
-
-- (void)beginArray {
-  AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(self, JreLoadEnum(AndroidUtilJsonToken, BEGIN_ARRAY));
-}
-
-- (void)endArray {
-  AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(self, JreLoadEnum(AndroidUtilJsonToken, END_ARRAY));
-}
-
-- (void)beginObject {
-  AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(self, JreLoadEnum(AndroidUtilJsonToken, BEGIN_OBJECT));
-}
-
-- (void)endObject {
-  AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(self, JreLoadEnum(AndroidUtilJsonToken, END_OBJECT));
-}
-
-- (void)expectWithAndroidUtilJsonToken:(AndroidUtilJsonToken *)expected {
-  AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(self, expected);
-}
-
-- (jboolean)hasNext {
-  [self peek];
-  return token_ != JreLoadEnum(AndroidUtilJsonToken, END_OBJECT) && token_ != JreLoadEnum(AndroidUtilJsonToken, END_ARRAY);
-}
-
-- (AndroidUtilJsonToken *)peek {
-  if (token_ != nil) {
-    return token_;
-  }
-  {
-    AndroidUtilJsonToken *firstToken;
-    switch ([AndroidUtilJsonReader_peekStack(self) ordinal]) {
-      case AndroidUtilJsonScope_Enum_EMPTY_DOCUMENT:
-      AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_DOCUMENT));
-      firstToken = AndroidUtilJsonReader_nextValue(self);
-      if (!lenient_ && token_ != JreLoadEnum(AndroidUtilJsonToken, BEGIN_ARRAY) && token_ != JreLoadEnum(AndroidUtilJsonToken, BEGIN_OBJECT)) {
-        @throw create_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Expected JSON document to start with '[' or '{' but was ", token_));
-      }
-      return firstToken;
-      case AndroidUtilJsonScope_Enum_EMPTY_ARRAY:
-      return AndroidUtilJsonReader_nextInArrayWithBoolean_(self, true);
-      case AndroidUtilJsonScope_Enum_NONEMPTY_ARRAY:
-      return AndroidUtilJsonReader_nextInArrayWithBoolean_(self, false);
-      case AndroidUtilJsonScope_Enum_EMPTY_OBJECT:
-      return AndroidUtilJsonReader_nextInObjectWithBoolean_(self, true);
-      case AndroidUtilJsonScope_Enum_DANGLING_NAME:
-      return AndroidUtilJsonReader_objectValue(self);
-      case AndroidUtilJsonScope_Enum_NONEMPTY_OBJECT:
-      return AndroidUtilJsonReader_nextInObjectWithBoolean_(self, false);
-      case AndroidUtilJsonScope_Enum_NONEMPTY_DOCUMENT:
-      @try {
-        AndroidUtilJsonToken *token = AndroidUtilJsonReader_nextValue(self);
-        if (lenient_) {
-          return token;
-        }
-        @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Expected EOF");
-      }
-      @catch (JavaIoEOFException *e) {
-        return JreStrongAssign(&token_, JreLoadEnum(AndroidUtilJsonToken, END_DOCUMENT));
-      }
-      case AndroidUtilJsonScope_Enum_CLOSED:
-      @throw create_JavaLangIllegalStateException_initWithNSString_(@"JsonReader is closed");
-      default:
-      @throw create_JavaLangAssertionError_init();
-    }
-  }
-}
-
-- (AndroidUtilJsonToken *)advance {
-  return AndroidUtilJsonReader_advance(self);
-}
-
-- (NSString *)nextName {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, NAME)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected a name but was ", [self peek]));
-  }
-  NSString *result = name_;
-  AndroidUtilJsonReader_advance(self);
-  return result;
-}
-
-- (NSString *)nextString {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, STRING) && token_ != JreLoadEnum(AndroidUtilJsonToken, NUMBER)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected a string but was ", [self peek]));
-  }
-  NSString *result = value_;
-  AndroidUtilJsonReader_advance(self);
-  return result;
-}
-
-- (jboolean)nextBoolean {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, BOOLEAN)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected a boolean but was ", token_));
-  }
-  jboolean result = value_ == AndroidUtilJsonReader_TRUE;
-  AndroidUtilJsonReader_advance(self);
-  return result;
-}
-
-- (void)nextNull {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, NULL)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected null but was ", token_));
-  }
-  AndroidUtilJsonReader_advance(self);
-}
-
-- (jdouble)nextDouble {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, STRING) && token_ != JreLoadEnum(AndroidUtilJsonToken, NUMBER)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected a double but was ", token_));
-  }
-  jdouble result = JavaLangDouble_parseDoubleWithNSString_(value_);
-  AndroidUtilJsonReader_advance(self);
-  return result;
-}
-
-- (jlong)nextLong {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, STRING) && token_ != JreLoadEnum(AndroidUtilJsonToken, NUMBER)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected a long but was ", token_));
-  }
-  jlong result;
-  @try {
-    result = JavaLangLong_parseLongWithNSString_(value_);
-  }
-  @catch (JavaLangNumberFormatException *ignored) {
-    jdouble asDouble = JavaLangDouble_parseDoubleWithNSString_(value_);
-    result = JreFpToLong(asDouble);
-    if ((jdouble) result != asDouble) {
-      @throw create_JavaLangNumberFormatException_initWithNSString_(value_);
-    }
-  }
-  AndroidUtilJsonReader_advance(self);
-  return result;
-}
-
-- (jint)nextInt {
-  [self peek];
-  if (token_ != JreLoadEnum(AndroidUtilJsonToken, STRING) && token_ != JreLoadEnum(AndroidUtilJsonToken, NUMBER)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected an int but was ", token_));
-  }
-  jint result;
-  @try {
-    result = JavaLangInteger_parseIntWithNSString_(value_);
-  }
-  @catch (JavaLangNumberFormatException *ignored) {
-    jdouble asDouble = JavaLangDouble_parseDoubleWithNSString_(value_);
-    result = JreFpToInt(asDouble);
-    if ((jdouble) result != asDouble) {
-      @throw create_JavaLangNumberFormatException_initWithNSString_(value_);
-    }
-  }
-  AndroidUtilJsonReader_advance(self);
-  return result;
-}
-
-- (void)close {
-  JreStrongAssign(&value_, nil);
-  JreStrongAssign(&token_, nil);
-  [((id<JavaUtilList>) nil_chk(stack_)) clear];
-  [stack_ addWithId:JreLoadEnum(AndroidUtilJsonScope, CLOSED)];
-  [((JavaIoReader *) nil_chk(in_)) close];
-}
-
-- (void)skipValue {
-  skipping_ = true;
-  @try {
-    jint count = 0;
-    do {
-      AndroidUtilJsonToken *token = AndroidUtilJsonReader_advance(self);
-      if (token == JreLoadEnum(AndroidUtilJsonToken, BEGIN_ARRAY) || token == JreLoadEnum(AndroidUtilJsonToken, BEGIN_OBJECT)) {
-        count++;
-      }
-      else if (token == JreLoadEnum(AndroidUtilJsonToken, END_ARRAY) || token == JreLoadEnum(AndroidUtilJsonToken, END_OBJECT)) {
-        count--;
-      }
-    }
-    while (count != 0);
-  }
-  @finally {
-    skipping_ = false;
-  }
-}
-
-- (AndroidUtilJsonScope *)peekStack {
-  return AndroidUtilJsonReader_peekStack(self);
-}
-
-- (AndroidUtilJsonScope *)pop {
-  return AndroidUtilJsonReader_pop(self);
-}
-
-- (void)pushWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)newTop {
-  AndroidUtilJsonReader_pushWithAndroidUtilJsonScope_(self, newTop);
-}
-
-- (void)replaceTopWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)newTop {
-  AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(self, newTop);
-}
-
-- (AndroidUtilJsonToken *)nextInArrayWithBoolean:(jboolean)firstElement {
-  return AndroidUtilJsonReader_nextInArrayWithBoolean_(self, firstElement);
-}
-
-- (AndroidUtilJsonToken *)nextInObjectWithBoolean:(jboolean)firstElement {
-  return AndroidUtilJsonReader_nextInObjectWithBoolean_(self, firstElement);
-}
-
-- (AndroidUtilJsonToken *)objectValue {
-  return AndroidUtilJsonReader_objectValue(self);
-}
-
-- (AndroidUtilJsonToken *)nextValue {
-  return AndroidUtilJsonReader_nextValue(self);
-}
-
-- (jboolean)fillBufferWithInt:(jint)minimum {
-  return AndroidUtilJsonReader_fillBufferWithInt_(self, minimum);
-}
-
-- (jint)getLineNumber {
-  return AndroidUtilJsonReader_getLineNumber(self);
-}
-
-- (jint)getColumnNumber {
-  return AndroidUtilJsonReader_getColumnNumber(self);
-}
-
-- (jint)nextNonWhitespace {
-  return AndroidUtilJsonReader_nextNonWhitespace(self);
-}
-
-- (void)checkLenient {
-  AndroidUtilJsonReader_checkLenient(self);
-}
-
-- (void)skipToEndOfLine {
-  AndroidUtilJsonReader_skipToEndOfLine(self);
-}
-
-- (jboolean)skipToWithNSString:(NSString *)toFind {
-  return AndroidUtilJsonReader_skipToWithNSString_(self, toFind);
-}
-
-- (NSString *)nextStringWithChar:(jchar)quote {
-  return AndroidUtilJsonReader_nextStringWithChar_(self, quote);
-}
-
-- (NSString *)nextLiteralWithBoolean:(jboolean)assignOffsetsOnly {
-  return AndroidUtilJsonReader_nextLiteralWithBoolean_(self, assignOffsetsOnly);
-}
-
-- (NSString *)description {
-  return JreStrcat("$$@", [[self java_getClass] getSimpleName], @" near ", AndroidUtilJsonReader_getSnippet(self));
-}
-
-- (jchar)readEscapeCharacter {
-  return AndroidUtilJsonReader_readEscapeCharacter(self);
-}
-
-- (AndroidUtilJsonToken *)readLiteral {
-  return AndroidUtilJsonReader_readLiteral(self);
-}
-
-- (AndroidUtilJsonToken *)decodeLiteral {
-  return AndroidUtilJsonReader_decodeLiteral(self);
-}
-
-- (AndroidUtilJsonToken *)decodeNumberWithCharArray:(IOSCharArray *)chars
-                                            withInt:(jint)offset
-                                            withInt:(jint)length {
-  return AndroidUtilJsonReader_decodeNumberWithCharArray_withInt_withInt_(self, chars, offset, length);
-}
-
-- (JavaIoIOException *)syntaxErrorWithNSString:(NSString *)message {
-  return AndroidUtilJsonReader_syntaxErrorWithNSString_(self, message);
-}
-
-- (id<JavaLangCharSequence>)getSnippet {
-  return AndroidUtilJsonReader_getSnippet(self);
-}
-
-- (void)dealloc {
-  RELEASE_(stringPool_);
-  RELEASE_(in_);
-  RELEASE_(buffer_);
-  RELEASE_(stack_);
-  RELEASE_(token_);
-  RELEASE_(name_);
-  RELEASE_(value_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x2, 4, 5, 3, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "D", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "J", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonScope;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonScope;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 8, 7, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, 9, 2, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, 10, 2, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "Z", 0x2, 11, 12, 3, -1, -1, -1 },
-    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "Z", 0x2, 13, 14, 3, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 15, 16, 3, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 17, 2, 3, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 18, -1, -1, -1, -1, -1 },
-    { NULL, "C", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, -1, -1, 3, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x2, 19, 20, -1, -1, -1, -1 },
-    { NULL, "LJavaIoIOException;", 0x2, 21, 14, 3, -1, -1, -1 },
-    { NULL, "LJavaLangCharSequence;", 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaIoReader:);
-  methods[1].selector = @selector(setLenientWithBoolean:);
-  methods[2].selector = @selector(isLenient);
-  methods[3].selector = @selector(beginArray);
-  methods[4].selector = @selector(endArray);
-  methods[5].selector = @selector(beginObject);
-  methods[6].selector = @selector(endObject);
-  methods[7].selector = @selector(expectWithAndroidUtilJsonToken:);
-  methods[8].selector = @selector(hasNext);
-  methods[9].selector = @selector(peek);
-  methods[10].selector = @selector(advance);
-  methods[11].selector = @selector(nextName);
-  methods[12].selector = @selector(nextString);
-  methods[13].selector = @selector(nextBoolean);
-  methods[14].selector = @selector(nextNull);
-  methods[15].selector = @selector(nextDouble);
-  methods[16].selector = @selector(nextLong);
-  methods[17].selector = @selector(nextInt);
-  methods[18].selector = @selector(close);
-  methods[19].selector = @selector(skipValue);
-  methods[20].selector = @selector(peekStack);
-  methods[21].selector = @selector(pop);
-  methods[22].selector = @selector(pushWithAndroidUtilJsonScope:);
-  methods[23].selector = @selector(replaceTopWithAndroidUtilJsonScope:);
-  methods[24].selector = @selector(nextInArrayWithBoolean:);
-  methods[25].selector = @selector(nextInObjectWithBoolean:);
-  methods[26].selector = @selector(objectValue);
-  methods[27].selector = @selector(nextValue);
-  methods[28].selector = @selector(fillBufferWithInt:);
-  methods[29].selector = @selector(getLineNumber);
-  methods[30].selector = @selector(getColumnNumber);
-  methods[31].selector = @selector(nextNonWhitespace);
-  methods[32].selector = @selector(checkLenient);
-  methods[33].selector = @selector(skipToEndOfLine);
-  methods[34].selector = @selector(skipToWithNSString:);
-  methods[35].selector = @selector(nextStringWithChar:);
-  methods[36].selector = @selector(nextLiteralWithBoolean:);
-  methods[37].selector = @selector(description);
-  methods[38].selector = @selector(readEscapeCharacter);
-  methods[39].selector = @selector(readLiteral);
-  methods[40].selector = @selector(decodeLiteral);
-  methods[41].selector = @selector(decodeNumberWithCharArray:withInt:withInt:);
-  methods[42].selector = @selector(syntaxErrorWithNSString:);
-  methods[43].selector = @selector(getSnippet);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TRUE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
-    { "FALSE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
-    { "stringPool_", "LLibcoreInternalStringPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "in_", "LJavaIoReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "lenient_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "buffer_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "pos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "limit_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "bufferStartLine_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "bufferStartColumn_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "stack_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 24, -1 },
-    { "token_", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "value_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "valuePos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "valueLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "skipping_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaIoReader;", "setLenient", "Z", "LJavaIoIOException;", "expect", "LAndroidUtilJsonToken;", "push", "LAndroidUtilJsonScope;", "replaceTop", "nextInArray", "nextInObject", "fillBuffer", "I", "skipTo", "LNSString;", "nextString", "C", "nextLiteral", "toString", "decodeNumber", "[CII", "syntaxError", &AndroidUtilJsonReader_TRUE, &AndroidUtilJsonReader_FALSE, "Ljava/util/List<Landroid/util/JsonScope;>;" };
-  static const J2ObjcClassInfo _AndroidUtilJsonReader = { "JsonReader", "android.util", ptrTable, methods, fields, 7, 0x11, 44, 17, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilJsonReader;
-}
-
-@end
-
-void AndroidUtilJsonReader_initWithJavaIoReader_(AndroidUtilJsonReader *self, JavaIoReader *inArg) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->stringPool_, new_LibcoreInternalStringPool_init());
-  self->lenient_ = false;
-  JreStrongAssignAndConsume(&self->buffer_, [IOSCharArray newArrayWithLength:1024]);
-  self->pos_ = 0;
-  self->limit_ = 0;
-  self->bufferStartLine_ = 1;
-  self->bufferStartColumn_ = 1;
-  JreStrongAssignAndConsume(&self->stack_, new_JavaUtilArrayList_init());
-  {
-    AndroidUtilJsonReader_pushWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_DOCUMENT));
-  }
-  self->skipping_ = false;
-  if (inArg == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"in == null");
-  }
-  JreStrongAssign(&self->in_, inArg);
-}
-
-AndroidUtilJsonReader *new_AndroidUtilJsonReader_initWithJavaIoReader_(JavaIoReader *inArg) {
-  J2OBJC_NEW_IMPL(AndroidUtilJsonReader, initWithJavaIoReader_, inArg)
-}
-
-AndroidUtilJsonReader *create_AndroidUtilJsonReader_initWithJavaIoReader_(JavaIoReader *inArg) {
-  J2OBJC_CREATE_IMPL(AndroidUtilJsonReader, initWithJavaIoReader_, inArg)
-}
-
-void AndroidUtilJsonReader_expectWithAndroidUtilJsonToken_(AndroidUtilJsonReader *self, AndroidUtilJsonToken *expected) {
-  [self peek];
-  if (self->token_ != expected) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@", @"Expected ", expected, @" but was ", [self peek]));
-  }
-  AndroidUtilJsonReader_advance(self);
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_advance(AndroidUtilJsonReader *self) {
-  [self peek];
-  AndroidUtilJsonToken *result = self->token_;
-  JreStrongAssign(&self->token_, nil);
-  JreStrongAssign(&self->value_, nil);
-  JreStrongAssign(&self->name_, nil);
-  return result;
-}
-
-AndroidUtilJsonScope *AndroidUtilJsonReader_peekStack(AndroidUtilJsonReader *self) {
-  return [((id<JavaUtilList>) nil_chk(self->stack_)) getWithInt:[self->stack_ size] - 1];
-}
-
-AndroidUtilJsonScope *AndroidUtilJsonReader_pop(AndroidUtilJsonReader *self) {
-  return [((id<JavaUtilList>) nil_chk(self->stack_)) removeWithInt:[self->stack_ size] - 1];
-}
-
-void AndroidUtilJsonReader_pushWithAndroidUtilJsonScope_(AndroidUtilJsonReader *self, AndroidUtilJsonScope *newTop) {
-  [((id<JavaUtilList>) nil_chk(self->stack_)) addWithId:newTop];
-}
-
-void AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(AndroidUtilJsonReader *self, AndroidUtilJsonScope *newTop) {
-  [((id<JavaUtilList>) nil_chk(self->stack_)) setWithInt:[self->stack_ size] - 1 withId:newTop];
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_nextInArrayWithBoolean_(AndroidUtilJsonReader *self, jboolean firstElement) {
-  if (firstElement) {
-    AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_ARRAY));
-  }
-  else {
-    switch (AndroidUtilJsonReader_nextNonWhitespace(self)) {
-      case ']':
-      AndroidUtilJsonReader_pop(self);
-      return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, END_ARRAY));
-      case ';':
-      AndroidUtilJsonReader_checkLenient(self);
-      case ',':
-      break;
-      default:
-      @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Unterminated array");
-    }
-  }
-  switch (AndroidUtilJsonReader_nextNonWhitespace(self)) {
-    case ']':
-    if (firstElement) {
-      AndroidUtilJsonReader_pop(self);
-      return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, END_ARRAY));
-    }
-    case ';':
-    case ',':
-    AndroidUtilJsonReader_checkLenient(self);
-    self->pos_--;
-    JreStrongAssign(&self->value_, @"null");
-    return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, NULL));
-    default:
-    self->pos_--;
-    return AndroidUtilJsonReader_nextValue(self);
-  }
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_nextInObjectWithBoolean_(AndroidUtilJsonReader *self, jboolean firstElement) {
-  if (firstElement) {
-    switch (AndroidUtilJsonReader_nextNonWhitespace(self)) {
-      case '}':
-      AndroidUtilJsonReader_pop(self);
-      return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, END_OBJECT));
-      default:
-      self->pos_--;
-    }
-  }
-  else {
-    switch (AndroidUtilJsonReader_nextNonWhitespace(self)) {
-      case '}':
-      AndroidUtilJsonReader_pop(self);
-      return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, END_OBJECT));
-      case ';':
-      case ',':
-      break;
-      default:
-      @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Unterminated object");
-    }
-  }
-  jint quote = AndroidUtilJsonReader_nextNonWhitespace(self);
-  switch (quote) {
-    case '\'':
-    AndroidUtilJsonReader_checkLenient(self);
-    case '"':
-    JreStrongAssign(&self->name_, AndroidUtilJsonReader_nextStringWithChar_(self, (jchar) quote));
-    break;
-    default:
-    AndroidUtilJsonReader_checkLenient(self);
-    self->pos_--;
-    JreStrongAssign(&self->name_, AndroidUtilJsonReader_nextLiteralWithBoolean_(self, false));
-    if ([((NSString *) nil_chk(self->name_)) java_isEmpty]) {
-      @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Expected name");
-    }
-  }
-  AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, DANGLING_NAME));
-  return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, NAME));
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_objectValue(AndroidUtilJsonReader *self) {
-  switch (AndroidUtilJsonReader_nextNonWhitespace(self)) {
-    case ':':
-    break;
-    case '=':
-    AndroidUtilJsonReader_checkLenient(self);
-    if ((self->pos_ < self->limit_ || AndroidUtilJsonReader_fillBufferWithInt_(self, 1)) && IOSCharArray_Get(nil_chk(self->buffer_), self->pos_) == '>') {
-      self->pos_++;
-    }
-    break;
-    default:
-    @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Expected ':'");
-  }
-  AndroidUtilJsonReader_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_OBJECT));
-  return AndroidUtilJsonReader_nextValue(self);
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_nextValue(AndroidUtilJsonReader *self) {
-  jint c = AndroidUtilJsonReader_nextNonWhitespace(self);
-  switch (c) {
-    case '{':
-    AndroidUtilJsonReader_pushWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_OBJECT));
-    return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, BEGIN_OBJECT));
-    case '[':
-    AndroidUtilJsonReader_pushWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_ARRAY));
-    return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, BEGIN_ARRAY));
-    case '\'':
-    AndroidUtilJsonReader_checkLenient(self);
-    case '"':
-    JreStrongAssign(&self->value_, AndroidUtilJsonReader_nextStringWithChar_(self, (jchar) c));
-    return JreStrongAssign(&self->token_, JreLoadEnum(AndroidUtilJsonToken, STRING));
-    default:
-    self->pos_--;
-    return AndroidUtilJsonReader_readLiteral(self);
-  }
-}
-
-jboolean AndroidUtilJsonReader_fillBufferWithInt_(AndroidUtilJsonReader *self, jint minimum) {
-  for (jint i = 0; i < self->pos_; i++) {
-    if (IOSCharArray_Get(nil_chk(self->buffer_), i) == 0x000a) {
-      self->bufferStartLine_++;
-      self->bufferStartColumn_ = 1;
-    }
-    else {
-      self->bufferStartColumn_++;
-    }
-  }
-  if (self->limit_ != self->pos_) {
-    self->limit_ -= self->pos_;
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->buffer_, self->pos_, self->buffer_, 0, self->limit_);
-  }
-  else {
-    self->limit_ = 0;
-  }
-  self->pos_ = 0;
-  jint total;
-  while ((total = [((JavaIoReader *) nil_chk(self->in_)) readWithCharArray:self->buffer_ withInt:self->limit_ withInt:((IOSCharArray *) nil_chk(self->buffer_))->size_ - self->limit_]) != -1) {
-    self->limit_ += total;
-    if (self->bufferStartLine_ == 1 && self->bufferStartColumn_ == 1 && self->limit_ > 0 && IOSCharArray_Get(self->buffer_, 0) == 0xfeff) {
-      self->pos_++;
-      self->bufferStartColumn_--;
-    }
-    if (self->limit_ >= minimum) {
-      return true;
-    }
-  }
-  return false;
-}
-
-jint AndroidUtilJsonReader_getLineNumber(AndroidUtilJsonReader *self) {
-  jint result = self->bufferStartLine_;
-  for (jint i = 0; i < self->pos_; i++) {
-    if (IOSCharArray_Get(nil_chk(self->buffer_), i) == 0x000a) {
-      result++;
-    }
-  }
-  return result;
-}
-
-jint AndroidUtilJsonReader_getColumnNumber(AndroidUtilJsonReader *self) {
-  jint result = self->bufferStartColumn_;
-  for (jint i = 0; i < self->pos_; i++) {
-    if (IOSCharArray_Get(nil_chk(self->buffer_), i) == 0x000a) {
-      result = 1;
-    }
-    else {
-      result++;
-    }
-  }
-  return result;
-}
-
-jint AndroidUtilJsonReader_nextNonWhitespace(AndroidUtilJsonReader *self) {
-  while (self->pos_ < self->limit_ || AndroidUtilJsonReader_fillBufferWithInt_(self, 1)) {
-    jint c = IOSCharArray_Get(nil_chk(self->buffer_), self->pos_++);
-    {
-      jchar peek;
-      switch (c) {
-        case 0x0009:
-        case ' ':
-        case 0x000a:
-        case 0x000d:
-        continue;
-        case '/':
-        if (self->pos_ == self->limit_ && !AndroidUtilJsonReader_fillBufferWithInt_(self, 1)) {
-          return c;
-        }
-        AndroidUtilJsonReader_checkLenient(self);
-        peek = IOSCharArray_Get(self->buffer_, self->pos_);
-        switch (peek) {
-          case '*':
-          self->pos_++;
-          if (!AndroidUtilJsonReader_skipToWithNSString_(self, @"*/")) {
-            @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Unterminated comment");
-          }
-          self->pos_ += 2;
-          continue;
-          case '/':
-          self->pos_++;
-          AndroidUtilJsonReader_skipToEndOfLine(self);
-          continue;
-          default:
-          return c;
-        }
-        case '#':
-        AndroidUtilJsonReader_checkLenient(self);
-        AndroidUtilJsonReader_skipToEndOfLine(self);
-        continue;
-        default:
-        return c;
-      }
-    }
-  }
-  @throw create_JavaIoEOFException_initWithNSString_(@"End of input");
-}
-
-void AndroidUtilJsonReader_checkLenient(AndroidUtilJsonReader *self) {
-  if (!self->lenient_) {
-    @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Use JsonReader.setLenient(true) to accept malformed JSON");
-  }
-}
-
-void AndroidUtilJsonReader_skipToEndOfLine(AndroidUtilJsonReader *self) {
-  while (self->pos_ < self->limit_ || AndroidUtilJsonReader_fillBufferWithInt_(self, 1)) {
-    jchar c = IOSCharArray_Get(nil_chk(self->buffer_), self->pos_++);
-    if (c == 0x000d || c == 0x000a) {
-      break;
-    }
-  }
-}
-
-jboolean AndroidUtilJsonReader_skipToWithNSString_(AndroidUtilJsonReader *self, NSString *toFind) {
-  for (; self->pos_ + ((jint) [((NSString *) nil_chk(toFind)) length]) <= self->limit_ || AndroidUtilJsonReader_fillBufferWithInt_(self, ((jint) [toFind length])); self->pos_++) {
-    {
-      for (jint c = 0; c < ((jint) [toFind length]); c++) {
-        if (IOSCharArray_Get(nil_chk(self->buffer_), self->pos_ + c) != [toFind charAtWithInt:c]) {
-          goto continue_outer;
-        }
-      }
-      return true;
-    }
-    continue_outer: ;
-  }
-  return false;
-}
-
-NSString *AndroidUtilJsonReader_nextStringWithChar_(AndroidUtilJsonReader *self, jchar quote) {
-  JavaLangStringBuilder *builder = nil;
-  do {
-    jint start = self->pos_;
-    while (self->pos_ < self->limit_) {
-      jint c = IOSCharArray_Get(nil_chk(self->buffer_), self->pos_++);
-      if (c == quote) {
-        if (self->skipping_) {
-          return @"skipped!";
-        }
-        else if (builder == nil) {
-          return [((LibcoreInternalStringPool *) nil_chk(self->stringPool_)) getWithCharArray:self->buffer_ withInt:start withInt:self->pos_ - start - 1];
-        }
-        else {
-          [builder appendWithCharArray:self->buffer_ withInt:start withInt:self->pos_ - start - 1];
-          return [builder description];
-        }
-      }
-      else if (c == '\\') {
-        if (builder == nil) {
-          builder = create_JavaLangStringBuilder_init();
-        }
-        [builder appendWithCharArray:self->buffer_ withInt:start withInt:self->pos_ - start - 1];
-        [builder appendWithChar:AndroidUtilJsonReader_readEscapeCharacter(self)];
-        start = self->pos_;
-      }
-    }
-    if (builder == nil) {
-      builder = create_JavaLangStringBuilder_init();
-    }
-    [builder appendWithCharArray:self->buffer_ withInt:start withInt:self->pos_ - start];
-  }
-  while (AndroidUtilJsonReader_fillBufferWithInt_(self, 1));
-  @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Unterminated string");
-}
-
-NSString *AndroidUtilJsonReader_nextLiteralWithBoolean_(AndroidUtilJsonReader *self, jboolean assignOffsetsOnly) {
-  JavaLangStringBuilder *builder = nil;
-  self->valuePos_ = -1;
-  self->valueLength_ = 0;
-  jint i = 0;
-  while (true) {
-    for (; self->pos_ + i < self->limit_; i++) {
-      switch (IOSCharArray_Get(nil_chk(self->buffer_), self->pos_ + i)) {
-        case '/':
-        case '\\':
-        case ';':
-        case '#':
-        case '=':
-        AndroidUtilJsonReader_checkLenient(self);
-        case '{':
-        case '}':
-        case '[':
-        case ']':
-        case ':':
-        case ',':
-        case ' ':
-        case 0x0009:
-        case 0x000c:
-        case 0x000d:
-        case 0x000a:
-        goto break_findNonLiteralCharacter;
-      }
-    }
-    if (i < ((IOSCharArray *) nil_chk(self->buffer_))->size_) {
-      if (AndroidUtilJsonReader_fillBufferWithInt_(self, i + 1)) {
-        continue;
-      }
-      else {
-        *IOSCharArray_GetRef(self->buffer_, self->limit_) = 0x0000;
-        break;
-      }
-    }
-    if (builder == nil) {
-      builder = create_JavaLangStringBuilder_init();
-    }
-    [builder appendWithCharArray:self->buffer_ withInt:self->pos_ withInt:i];
-    self->valueLength_ += i;
-    self->pos_ += i;
-    i = 0;
-    if (!AndroidUtilJsonReader_fillBufferWithInt_(self, 1)) {
-      break;
-    }
-  }
-  break_findNonLiteralCharacter: ;
-  NSString *result;
-  if (assignOffsetsOnly && builder == nil) {
-    self->valuePos_ = self->pos_;
-    result = nil;
-  }
-  else if (self->skipping_) {
-    result = @"skipped!";
-  }
-  else if (builder == nil) {
-    result = [((LibcoreInternalStringPool *) nil_chk(self->stringPool_)) getWithCharArray:self->buffer_ withInt:self->pos_ withInt:i];
-  }
-  else {
-    [builder appendWithCharArray:self->buffer_ withInt:self->pos_ withInt:i];
-    result = [builder description];
-  }
-  self->valueLength_ += i;
-  self->pos_ += i;
-  return result;
-}
-
-jchar AndroidUtilJsonReader_readEscapeCharacter(AndroidUtilJsonReader *self) {
-  if (self->pos_ == self->limit_ && !AndroidUtilJsonReader_fillBufferWithInt_(self, 1)) {
-    @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Unterminated escape sequence");
-  }
-  jchar escaped = IOSCharArray_Get(nil_chk(self->buffer_), self->pos_++);
-  {
-    NSString *hex;
-    switch (escaped) {
-      case 'u':
-      if (self->pos_ + 4 > self->limit_ && !AndroidUtilJsonReader_fillBufferWithInt_(self, 4)) {
-        @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Unterminated escape sequence");
-      }
-      hex = [((LibcoreInternalStringPool *) nil_chk(self->stringPool_)) getWithCharArray:self->buffer_ withInt:self->pos_ withInt:4];
-      self->pos_ += 4;
-      return (jchar) JavaLangInteger_parseIntWithNSString_withInt_(hex, 16);
-      case 't':
-      return 0x0009;
-      case 'b':
-      return 0x0008;
-      case 'n':
-      return 0x000a;
-      case 'r':
-      return 0x000d;
-      case 'f':
-      return 0x000c;
-      case '\'':
-      case '"':
-      case '\\':
-      default:
-      return escaped;
-    }
-  }
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_readLiteral(AndroidUtilJsonReader *self) {
-  JreStrongAssign(&self->value_, AndroidUtilJsonReader_nextLiteralWithBoolean_(self, true));
-  if (self->valueLength_ == 0) {
-    @throw AndroidUtilJsonReader_syntaxErrorWithNSString_(self, @"Expected literal value");
-  }
-  JreStrongAssign(&self->token_, AndroidUtilJsonReader_decodeLiteral(self));
-  if (self->token_ == JreLoadEnum(AndroidUtilJsonToken, STRING)) {
-    AndroidUtilJsonReader_checkLenient(self);
-  }
-  return self->token_;
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_decodeLiteral(AndroidUtilJsonReader *self) {
-  if (self->valuePos_ == -1) {
-    return JreLoadEnum(AndroidUtilJsonToken, STRING);
-  }
-  else if (self->valueLength_ == 4 && ('n' == IOSCharArray_Get(nil_chk(self->buffer_), self->valuePos_) || 'N' == IOSCharArray_Get(self->buffer_, self->valuePos_)) && ('u' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 1) || 'U' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 1)) && ('l' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 2) || 'L' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 2)) && ('l' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 3) || 'L' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 3))) {
-    JreStrongAssign(&self->value_, @"null");
-    return JreLoadEnum(AndroidUtilJsonToken, NULL);
-  }
-  else if (self->valueLength_ == 4 && ('t' == IOSCharArray_Get(nil_chk(self->buffer_), self->valuePos_) || 'T' == IOSCharArray_Get(self->buffer_, self->valuePos_)) && ('r' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 1) || 'R' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 1)) && ('u' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 2) || 'U' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 2)) && ('e' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 3) || 'E' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 3))) {
-    JreStrongAssign(&self->value_, AndroidUtilJsonReader_TRUE);
-    return JreLoadEnum(AndroidUtilJsonToken, BOOLEAN);
-  }
-  else if (self->valueLength_ == 5 && ('f' == IOSCharArray_Get(nil_chk(self->buffer_), self->valuePos_) || 'F' == IOSCharArray_Get(self->buffer_, self->valuePos_)) && ('a' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 1) || 'A' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 1)) && ('l' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 2) || 'L' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 2)) && ('s' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 3) || 'S' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 3)) && ('e' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 4) || 'E' == IOSCharArray_Get(self->buffer_, self->valuePos_ + 4))) {
-    JreStrongAssign(&self->value_, AndroidUtilJsonReader_FALSE);
-    return JreLoadEnum(AndroidUtilJsonToken, BOOLEAN);
-  }
-  else {
-    JreStrongAssign(&self->value_, [((LibcoreInternalStringPool *) nil_chk(self->stringPool_)) getWithCharArray:self->buffer_ withInt:self->valuePos_ withInt:self->valueLength_]);
-    return AndroidUtilJsonReader_decodeNumberWithCharArray_withInt_withInt_(self, self->buffer_, self->valuePos_, self->valueLength_);
-  }
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonReader_decodeNumberWithCharArray_withInt_withInt_(AndroidUtilJsonReader *self, IOSCharArray *chars, jint offset, jint length) {
-  jint i = offset;
-  jint c = IOSCharArray_Get(nil_chk(chars), i);
-  if (c == '-') {
-    c = IOSCharArray_Get(chars, ++i);
-  }
-  if (c == '0') {
-    c = IOSCharArray_Get(chars, ++i);
-  }
-  else if (c >= '1' && c <= '9') {
-    c = IOSCharArray_Get(chars, ++i);
-    while (c >= '0' && c <= '9') {
-      c = IOSCharArray_Get(chars, ++i);
-    }
-  }
-  else {
-    return JreLoadEnum(AndroidUtilJsonToken, STRING);
-  }
-  if (c == '.') {
-    c = IOSCharArray_Get(chars, ++i);
-    while (c >= '0' && c <= '9') {
-      c = IOSCharArray_Get(chars, ++i);
-    }
-  }
-  if (c == 'e' || c == 'E') {
-    c = IOSCharArray_Get(chars, ++i);
-    if (c == '+' || c == '-') {
-      c = IOSCharArray_Get(chars, ++i);
-    }
-    if (c >= '0' && c <= '9') {
-      c = IOSCharArray_Get(chars, ++i);
-      while (c >= '0' && c <= '9') {
-        c = IOSCharArray_Get(chars, ++i);
-      }
-    }
-    else {
-      return JreLoadEnum(AndroidUtilJsonToken, STRING);
-    }
-  }
-  if (i == offset + length) {
-    return JreLoadEnum(AndroidUtilJsonToken, NUMBER);
-  }
-  else {
-    return JreLoadEnum(AndroidUtilJsonToken, STRING);
-  }
-}
-
-JavaIoIOException *AndroidUtilJsonReader_syntaxErrorWithNSString_(AndroidUtilJsonReader *self, NSString *message) {
-  @throw create_AndroidUtilMalformedJsonException_initWithNSString_(JreStrcat("$$I$I", message, @" at line ", AndroidUtilJsonReader_getLineNumber(self), @" column ", AndroidUtilJsonReader_getColumnNumber(self)));
-}
-
-id<JavaLangCharSequence> AndroidUtilJsonReader_getSnippet(AndroidUtilJsonReader *self) {
-  JavaLangStringBuilder *snippet = create_JavaLangStringBuilder_init();
-  jint beforePos = JavaLangMath_minWithInt_withInt_(self->pos_, 20);
-  [snippet appendWithCharArray:self->buffer_ withInt:self->pos_ - beforePos withInt:beforePos];
-  jint afterPos = JavaLangMath_minWithInt_withInt_(self->limit_ - self->pos_, 20);
-  [snippet appendWithCharArray:self->buffer_ withInt:self->pos_ withInt:afterPos];
-  return snippet;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilJsonReader)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonScope.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonScope.h
deleted file mode 100644
index 287bf0fa9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonScope.h
+++ /dev/null
@@ -1,88 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilJsonScope")
-#ifdef RESTRICT_AndroidUtilJsonScope
-#define INCLUDE_ALL_AndroidUtilJsonScope 0
-#else
-#define INCLUDE_ALL_AndroidUtilJsonScope 1
-#endif
-#undef RESTRICT_AndroidUtilJsonScope
-
-#if !defined (AndroidUtilJsonScope_) && (INCLUDE_ALL_AndroidUtilJsonScope || defined(INCLUDE_AndroidUtilJsonScope))
-#define AndroidUtilJsonScope_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, AndroidUtilJsonScope_Enum) {
-  AndroidUtilJsonScope_Enum_EMPTY_ARRAY = 0,
-  AndroidUtilJsonScope_Enum_NONEMPTY_ARRAY = 1,
-  AndroidUtilJsonScope_Enum_EMPTY_OBJECT = 2,
-  AndroidUtilJsonScope_Enum_DANGLING_NAME = 3,
-  AndroidUtilJsonScope_Enum_NONEMPTY_OBJECT = 4,
-  AndroidUtilJsonScope_Enum_EMPTY_DOCUMENT = 5,
-  AndroidUtilJsonScope_Enum_NONEMPTY_DOCUMENT = 6,
-  AndroidUtilJsonScope_Enum_CLOSED = 7,
-};
-
-@interface AndroidUtilJsonScope : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (AndroidUtilJsonScope *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilJsonScope)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT AndroidUtilJsonScope *AndroidUtilJsonScope_values_[];
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_EMPTY_ARRAY();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, EMPTY_ARRAY)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_NONEMPTY_ARRAY();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, NONEMPTY_ARRAY)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_EMPTY_OBJECT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, EMPTY_OBJECT)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_DANGLING_NAME();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, DANGLING_NAME)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_NONEMPTY_OBJECT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, NONEMPTY_OBJECT)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_EMPTY_DOCUMENT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, EMPTY_DOCUMENT)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_NONEMPTY_DOCUMENT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, NONEMPTY_DOCUMENT)
-
-inline AndroidUtilJsonScope *AndroidUtilJsonScope_get_CLOSED();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonScope, CLOSED)
-
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilJsonScope_values();
-
-FOUNDATION_EXPORT AndroidUtilJsonScope *AndroidUtilJsonScope_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT AndroidUtilJsonScope *AndroidUtilJsonScope_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilJsonScope)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilJsonScope")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonScope.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonScope.m
deleted file mode 100644
index 6638dd8b1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonScope.m
+++ /dev/null
@@ -1,104 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilJsonScope.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-
-__attribute__((unused)) static void AndroidUtilJsonScope_initWithNSString_withInt_(AndroidUtilJsonScope *self, NSString *__name, jint __ordinal);
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilJsonScope)
-
-AndroidUtilJsonScope *AndroidUtilJsonScope_values_[8];
-
-@implementation AndroidUtilJsonScope
-
-+ (IOSObjectArray *)values {
-  return AndroidUtilJsonScope_values();
-}
-
-+ (AndroidUtilJsonScope *)valueOfWithNSString:(NSString *)name {
-  return AndroidUtilJsonScope_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LAndroidUtilJsonScope;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonScope;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EMPTY_ARRAY", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "NONEMPTY_ARRAY", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-    { "EMPTY_OBJECT", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
-    { "DANGLING_NAME", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
-    { "NONEMPTY_OBJECT", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
-    { "EMPTY_DOCUMENT", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
-    { "NONEMPTY_DOCUMENT", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
-    { "CLOSED", "LAndroidUtilJsonScope;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidUtilJsonScope, EMPTY_ARRAY), &JreEnum(AndroidUtilJsonScope, NONEMPTY_ARRAY), &JreEnum(AndroidUtilJsonScope, EMPTY_OBJECT), &JreEnum(AndroidUtilJsonScope, DANGLING_NAME), &JreEnum(AndroidUtilJsonScope, NONEMPTY_OBJECT), &JreEnum(AndroidUtilJsonScope, EMPTY_DOCUMENT), &JreEnum(AndroidUtilJsonScope, NONEMPTY_DOCUMENT), &JreEnum(AndroidUtilJsonScope, CLOSED), "Ljava/lang/Enum<Landroid/util/JsonScope;>;" };
-  static const J2ObjcClassInfo _AndroidUtilJsonScope = { "JsonScope", "android.util", ptrTable, methods, fields, 7, 0x4010, 2, 8, -1, -1, -1, 10, -1 };
-  return &_AndroidUtilJsonScope;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilJsonScope class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 8 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"EMPTY_ARRAY", @"NONEMPTY_ARRAY", @"EMPTY_OBJECT", @"DANGLING_NAME", @"NONEMPTY_OBJECT", @"EMPTY_DOCUMENT", @"NONEMPTY_DOCUMENT", @"CLOSED",
-    };
-    for (jint i = 0; i < 8; i++) {
-      (AndroidUtilJsonScope_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      AndroidUtilJsonScope_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(AndroidUtilJsonScope)
-  }
-}
-
-@end
-
-void AndroidUtilJsonScope_initWithNSString_withInt_(AndroidUtilJsonScope *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *AndroidUtilJsonScope_values() {
-  AndroidUtilJsonScope_initialize();
-  return [IOSObjectArray arrayWithObjects:AndroidUtilJsonScope_values_ count:8 type:AndroidUtilJsonScope_class_()];
-}
-
-AndroidUtilJsonScope *AndroidUtilJsonScope_valueOfWithNSString_(NSString *name) {
-  AndroidUtilJsonScope_initialize();
-  for (int i = 0; i < 8; i++) {
-    AndroidUtilJsonScope *e = AndroidUtilJsonScope_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-AndroidUtilJsonScope *AndroidUtilJsonScope_fromOrdinal(NSUInteger ordinal) {
-  AndroidUtilJsonScope_initialize();
-  if (ordinal >= 8) {
-    return nil;
-  }
-  return AndroidUtilJsonScope_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilJsonScope)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonToken.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonToken.h
deleted file mode 100644
index 4bde8a486..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonToken.h
+++ /dev/null
@@ -1,96 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilJsonToken")
-#ifdef RESTRICT_AndroidUtilJsonToken
-#define INCLUDE_ALL_AndroidUtilJsonToken 0
-#else
-#define INCLUDE_ALL_AndroidUtilJsonToken 1
-#endif
-#undef RESTRICT_AndroidUtilJsonToken
-
-#if !defined (AndroidUtilJsonToken_) && (INCLUDE_ALL_AndroidUtilJsonToken || defined(INCLUDE_AndroidUtilJsonToken))
-#define AndroidUtilJsonToken_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, AndroidUtilJsonToken_Enum) {
-  AndroidUtilJsonToken_Enum_BEGIN_ARRAY = 0,
-  AndroidUtilJsonToken_Enum_END_ARRAY = 1,
-  AndroidUtilJsonToken_Enum_BEGIN_OBJECT = 2,
-  AndroidUtilJsonToken_Enum_END_OBJECT = 3,
-  AndroidUtilJsonToken_Enum_NAME = 4,
-  AndroidUtilJsonToken_Enum_STRING = 5,
-  AndroidUtilJsonToken_Enum_NUMBER = 6,
-  AndroidUtilJsonToken_Enum_BOOLEAN = 7,
-  AndroidUtilJsonToken_Enum_NULL = 8,
-  AndroidUtilJsonToken_Enum_END_DOCUMENT = 9,
-};
-
-@interface AndroidUtilJsonToken : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (AndroidUtilJsonToken *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilJsonToken)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT AndroidUtilJsonToken *AndroidUtilJsonToken_values_[];
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_BEGIN_ARRAY();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, BEGIN_ARRAY)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_END_ARRAY();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, END_ARRAY)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_BEGIN_OBJECT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, BEGIN_OBJECT)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_END_OBJECT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, END_OBJECT)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_NAME();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, NAME)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_STRING();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, STRING)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_NUMBER();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, NUMBER)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_BOOLEAN();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, BOOLEAN)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_NULL();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, NULL)
-
-inline AndroidUtilJsonToken *AndroidUtilJsonToken_get_END_DOCUMENT();
-J2OBJC_ENUM_CONSTANT(AndroidUtilJsonToken, END_DOCUMENT)
-
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilJsonToken_values();
-
-FOUNDATION_EXPORT AndroidUtilJsonToken *AndroidUtilJsonToken_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT AndroidUtilJsonToken *AndroidUtilJsonToken_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilJsonToken)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilJsonToken")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonToken.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonToken.m
deleted file mode 100644
index 6b9594a9d..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonToken.m
+++ /dev/null
@@ -1,106 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilJsonToken.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-
-__attribute__((unused)) static void AndroidUtilJsonToken_initWithNSString_withInt_(AndroidUtilJsonToken *self, NSString *__name, jint __ordinal);
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilJsonToken)
-
-AndroidUtilJsonToken *AndroidUtilJsonToken_values_[10];
-
-@implementation AndroidUtilJsonToken
-
-+ (IOSObjectArray *)values {
-  return AndroidUtilJsonToken_values();
-}
-
-+ (AndroidUtilJsonToken *)valueOfWithNSString:(NSString *)name {
-  return AndroidUtilJsonToken_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LAndroidUtilJsonToken;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonToken;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "BEGIN_ARRAY", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "END_ARRAY", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-    { "BEGIN_OBJECT", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
-    { "END_OBJECT", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
-    { "NAME", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
-    { "STRING", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
-    { "NUMBER", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
-    { "BOOLEAN", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
-    { "NULL", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
-    { "END_DOCUMENT", "LAndroidUtilJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidUtilJsonToken, BEGIN_ARRAY), &JreEnum(AndroidUtilJsonToken, END_ARRAY), &JreEnum(AndroidUtilJsonToken, BEGIN_OBJECT), &JreEnum(AndroidUtilJsonToken, END_OBJECT), &JreEnum(AndroidUtilJsonToken, NAME), &JreEnum(AndroidUtilJsonToken, STRING), &JreEnum(AndroidUtilJsonToken, NUMBER), &JreEnum(AndroidUtilJsonToken, BOOLEAN), &JreEnum(AndroidUtilJsonToken, NULL), &JreEnum(AndroidUtilJsonToken, END_DOCUMENT), "Ljava/lang/Enum<Landroid/util/JsonToken;>;" };
-  static const J2ObjcClassInfo _AndroidUtilJsonToken = { "JsonToken", "android.util", ptrTable, methods, fields, 7, 0x4011, 2, 10, -1, -1, -1, 12, -1 };
-  return &_AndroidUtilJsonToken;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilJsonToken class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 10 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"BEGIN_ARRAY", @"END_ARRAY", @"BEGIN_OBJECT", @"END_OBJECT", @"NAME", @"STRING", @"NUMBER", @"BOOLEAN", @"NULL", @"END_DOCUMENT",
-    };
-    for (jint i = 0; i < 10; i++) {
-      (AndroidUtilJsonToken_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      AndroidUtilJsonToken_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(AndroidUtilJsonToken)
-  }
-}
-
-@end
-
-void AndroidUtilJsonToken_initWithNSString_withInt_(AndroidUtilJsonToken *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *AndroidUtilJsonToken_values() {
-  AndroidUtilJsonToken_initialize();
-  return [IOSObjectArray arrayWithObjects:AndroidUtilJsonToken_values_ count:10 type:AndroidUtilJsonToken_class_()];
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonToken_valueOfWithNSString_(NSString *name) {
-  AndroidUtilJsonToken_initialize();
-  for (int i = 0; i < 10; i++) {
-    AndroidUtilJsonToken *e = AndroidUtilJsonToken_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-AndroidUtilJsonToken *AndroidUtilJsonToken_fromOrdinal(NSUInteger ordinal) {
-  AndroidUtilJsonToken_initialize();
-  if (ordinal >= 10) {
-    return nil;
-  }
-  return AndroidUtilJsonToken_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilJsonToken)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonWriter.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonWriter.h
deleted file mode 100644
index 098a394a8..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonWriter.h
+++ /dev/null
@@ -1,76 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilJsonWriter")
-#ifdef RESTRICT_AndroidUtilJsonWriter
-#define INCLUDE_ALL_AndroidUtilJsonWriter 0
-#else
-#define INCLUDE_ALL_AndroidUtilJsonWriter 1
-#endif
-#undef RESTRICT_AndroidUtilJsonWriter
-
-#if !defined (AndroidUtilJsonWriter_) && (INCLUDE_ALL_AndroidUtilJsonWriter || defined(INCLUDE_AndroidUtilJsonWriter))
-#define AndroidUtilJsonWriter_
-
-#define RESTRICT_JavaIoCloseable 1
-#define INCLUDE_JavaIoCloseable 1
-#include "java/io/Closeable.h"
-
-@class JavaIoWriter;
-
-@interface AndroidUtilJsonWriter : NSObject < JavaIoCloseable >
-
-#pragma mark Public
-
-- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)outArg;
-
-- (AndroidUtilJsonWriter *)beginArray;
-
-- (AndroidUtilJsonWriter *)beginObject;
-
-- (void)close;
-
-- (AndroidUtilJsonWriter *)endArray;
-
-- (AndroidUtilJsonWriter *)endObject;
-
-- (void)flush;
-
-- (jboolean)isLenient;
-
-- (AndroidUtilJsonWriter *)nameWithNSString:(NSString *)name;
-
-- (AndroidUtilJsonWriter *)nullValue;
-
-- (void)setIndentWithNSString:(NSString *)indent;
-
-- (void)setLenientWithBoolean:(jboolean)lenient;
-
-- (AndroidUtilJsonWriter *)valueWithBoolean:(jboolean)value;
-
-- (AndroidUtilJsonWriter *)valueWithDouble:(jdouble)value;
-
-- (AndroidUtilJsonWriter *)valueWithLong:(jlong)value;
-
-- (AndroidUtilJsonWriter *)valueWithNSNumber:(NSNumber *)value;
-
-- (AndroidUtilJsonWriter *)valueWithNSString:(NSString *)value;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilJsonWriter)
-
-FOUNDATION_EXPORT void AndroidUtilJsonWriter_initWithJavaIoWriter_(AndroidUtilJsonWriter *self, JavaIoWriter *outArg);
-
-FOUNDATION_EXPORT AndroidUtilJsonWriter *new_AndroidUtilJsonWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilJsonWriter *create_AndroidUtilJsonWriter_initWithJavaIoWriter_(JavaIoWriter *outArg);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilJsonWriter)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilJsonWriter")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonWriter.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonWriter.m
deleted file mode 100644
index ce84fc28e..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilJsonWriter.m
+++ /dev/null
@@ -1,436 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilJsonScope.h"
-#include "AndroidUtilJsonWriter.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/IOException.h"
-#include "java/io/Writer.h"
-#include "java/lang/Double.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/NullPointerException.h"
-#include "java/util/ArrayList.h"
-#include "java/util/List.h"
-
-@interface AndroidUtilJsonWriter () {
- @public
-  JavaIoWriter *out_;
-  id<JavaUtilList> stack_;
-  NSString *indent_;
-  NSString *separator_;
-  jboolean lenient_;
-}
-
-- (AndroidUtilJsonWriter *)openWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)empty
-                                           withNSString:(NSString *)openBracket;
-
-- (AndroidUtilJsonWriter *)closeWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)empty
-                                withAndroidUtilJsonScope:(AndroidUtilJsonScope *)nonempty
-                                            withNSString:(NSString *)closeBracket;
-
-- (AndroidUtilJsonScope *)peek;
-
-- (void)replaceTopWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)topOfStack;
-
-- (void)stringWithNSString:(NSString *)value;
-
-- (void)newline OBJC_METHOD_FAMILY_NONE;
-
-- (void)beforeName;
-
-- (void)beforeValueWithBoolean:(jboolean)root;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidUtilJsonWriter, out_, JavaIoWriter *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonWriter, stack_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonWriter, indent_, NSString *)
-J2OBJC_FIELD_SETTER(AndroidUtilJsonWriter, separator_, NSString *)
-
-__attribute__((unused)) static AndroidUtilJsonWriter *AndroidUtilJsonWriter_openWithAndroidUtilJsonScope_withNSString_(AndroidUtilJsonWriter *self, AndroidUtilJsonScope *empty, NSString *openBracket);
-
-__attribute__((unused)) static AndroidUtilJsonWriter *AndroidUtilJsonWriter_closeWithAndroidUtilJsonScope_withAndroidUtilJsonScope_withNSString_(AndroidUtilJsonWriter *self, AndroidUtilJsonScope *empty, AndroidUtilJsonScope *nonempty, NSString *closeBracket);
-
-__attribute__((unused)) static AndroidUtilJsonScope *AndroidUtilJsonWriter_peek(AndroidUtilJsonWriter *self);
-
-__attribute__((unused)) static void AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(AndroidUtilJsonWriter *self, AndroidUtilJsonScope *topOfStack);
-
-__attribute__((unused)) static void AndroidUtilJsonWriter_stringWithNSString_(AndroidUtilJsonWriter *self, NSString *value);
-
-__attribute__((unused)) static void AndroidUtilJsonWriter_newline(AndroidUtilJsonWriter *self);
-
-__attribute__((unused)) static void AndroidUtilJsonWriter_beforeName(AndroidUtilJsonWriter *self);
-
-__attribute__((unused)) static void AndroidUtilJsonWriter_beforeValueWithBoolean_(AndroidUtilJsonWriter *self, jboolean root);
-
-@implementation AndroidUtilJsonWriter
-
-- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)outArg {
-  AndroidUtilJsonWriter_initWithJavaIoWriter_(self, outArg);
-  return self;
-}
-
-- (void)setIndentWithNSString:(NSString *)indent {
-  if ([((NSString *) nil_chk(indent)) java_isEmpty]) {
-    JreStrongAssign(&self->indent_, nil);
-    JreStrongAssign(&self->separator_, @":");
-  }
-  else {
-    JreStrongAssign(&self->indent_, indent);
-    JreStrongAssign(&self->separator_, @": ");
-  }
-}
-
-- (void)setLenientWithBoolean:(jboolean)lenient {
-  self->lenient_ = lenient;
-}
-
-- (jboolean)isLenient {
-  return lenient_;
-}
-
-- (AndroidUtilJsonWriter *)beginArray {
-  return AndroidUtilJsonWriter_openWithAndroidUtilJsonScope_withNSString_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_ARRAY), @"[");
-}
-
-- (AndroidUtilJsonWriter *)endArray {
-  return AndroidUtilJsonWriter_closeWithAndroidUtilJsonScope_withAndroidUtilJsonScope_withNSString_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_ARRAY), JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_ARRAY), @"]");
-}
-
-- (AndroidUtilJsonWriter *)beginObject {
-  return AndroidUtilJsonWriter_openWithAndroidUtilJsonScope_withNSString_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_OBJECT), @"{");
-}
-
-- (AndroidUtilJsonWriter *)endObject {
-  return AndroidUtilJsonWriter_closeWithAndroidUtilJsonScope_withAndroidUtilJsonScope_withNSString_(self, JreLoadEnum(AndroidUtilJsonScope, EMPTY_OBJECT), JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_OBJECT), @"}");
-}
-
-- (AndroidUtilJsonWriter *)openWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)empty
-                                           withNSString:(NSString *)openBracket {
-  return AndroidUtilJsonWriter_openWithAndroidUtilJsonScope_withNSString_(self, empty, openBracket);
-}
-
-- (AndroidUtilJsonWriter *)closeWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)empty
-                                withAndroidUtilJsonScope:(AndroidUtilJsonScope *)nonempty
-                                            withNSString:(NSString *)closeBracket {
-  return AndroidUtilJsonWriter_closeWithAndroidUtilJsonScope_withAndroidUtilJsonScope_withNSString_(self, empty, nonempty, closeBracket);
-}
-
-- (AndroidUtilJsonScope *)peek {
-  return AndroidUtilJsonWriter_peek(self);
-}
-
-- (void)replaceTopWithAndroidUtilJsonScope:(AndroidUtilJsonScope *)topOfStack {
-  AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(self, topOfStack);
-}
-
-- (AndroidUtilJsonWriter *)nameWithNSString:(NSString *)name {
-  if (name == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"name == null");
-  }
-  AndroidUtilJsonWriter_beforeName(self);
-  AndroidUtilJsonWriter_stringWithNSString_(self, name);
-  return self;
-}
-
-- (AndroidUtilJsonWriter *)valueWithNSString:(NSString *)value {
-  if (value == nil) {
-    return [self nullValue];
-  }
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, false);
-  AndroidUtilJsonWriter_stringWithNSString_(self, value);
-  return self;
-}
-
-- (AndroidUtilJsonWriter *)nullValue {
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, false);
-  [((JavaIoWriter *) nil_chk(out_)) writeWithNSString:@"null"];
-  return self;
-}
-
-- (AndroidUtilJsonWriter *)valueWithBoolean:(jboolean)value {
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, false);
-  [((JavaIoWriter *) nil_chk(out_)) writeWithNSString:value ? @"true" : @"false"];
-  return self;
-}
-
-- (AndroidUtilJsonWriter *)valueWithDouble:(jdouble)value {
-  if (!lenient_ && (JavaLangDouble_isNaNWithDouble_(value) || JavaLangDouble_isInfiniteWithDouble_(value))) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"Numeric values must be finite, but was ", value));
-  }
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, false);
-  [((JavaIoWriter *) nil_chk(out_)) appendWithJavaLangCharSequence:JavaLangDouble_toStringWithDouble_(value)];
-  return self;
-}
-
-- (AndroidUtilJsonWriter *)valueWithLong:(jlong)value {
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, false);
-  [((JavaIoWriter *) nil_chk(out_)) writeWithNSString:JavaLangLong_toStringWithLong_(value)];
-  return self;
-}
-
-- (AndroidUtilJsonWriter *)valueWithNSNumber:(NSNumber *)value {
-  if (value == nil) {
-    return [self nullValue];
-  }
-  NSString *string = [value description];
-  if (!lenient_ && ([((NSString *) nil_chk(string)) isEqual:@"-Infinity"] || [string isEqual:@"Infinity"] || [string isEqual:@"NaN"])) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Numeric values must be finite, but was ", value));
-  }
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, false);
-  [((JavaIoWriter *) nil_chk(out_)) appendWithJavaLangCharSequence:string];
-  return self;
-}
-
-- (void)flush {
-  [((JavaIoWriter *) nil_chk(out_)) flush];
-}
-
-- (void)close {
-  [((JavaIoWriter *) nil_chk(out_)) close];
-  if (AndroidUtilJsonWriter_peek(self) != JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_DOCUMENT)) {
-    @throw create_JavaIoIOException_initWithNSString_(@"Incomplete document");
-  }
-}
-
-- (void)stringWithNSString:(NSString *)value {
-  AndroidUtilJsonWriter_stringWithNSString_(self, value);
-}
-
-- (void)newline {
-  AndroidUtilJsonWriter_newline(self);
-}
-
-- (void)beforeName {
-  AndroidUtilJsonWriter_beforeName(self);
-}
-
-- (void)beforeValueWithBoolean:(jboolean)root {
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, root);
-}
-
-- (void)dealloc {
-  RELEASE_(out_);
-  RELEASE_(stack_);
-  RELEASE_(indent_);
-  RELEASE_(separator_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x2, 6, 7, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x2, 8, 9, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonScope;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, 12, 2, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, 13, 2, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, 13, 4, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, 13, 14, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, 13, 15, 5, -1, -1, -1 },
-    { NULL, "LAndroidUtilJsonWriter;", 0x1, 13, 16, 5, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 5, -1, -1, -1 },
-    { NULL, "V", 0x2, 17, 2, 5, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, 5, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, 5, -1, -1, -1 },
-    { NULL, "V", 0x2, 18, 4, 5, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaIoWriter:);
-  methods[1].selector = @selector(setIndentWithNSString:);
-  methods[2].selector = @selector(setLenientWithBoolean:);
-  methods[3].selector = @selector(isLenient);
-  methods[4].selector = @selector(beginArray);
-  methods[5].selector = @selector(endArray);
-  methods[6].selector = @selector(beginObject);
-  methods[7].selector = @selector(endObject);
-  methods[8].selector = @selector(openWithAndroidUtilJsonScope:withNSString:);
-  methods[9].selector = @selector(closeWithAndroidUtilJsonScope:withAndroidUtilJsonScope:withNSString:);
-  methods[10].selector = @selector(peek);
-  methods[11].selector = @selector(replaceTopWithAndroidUtilJsonScope:);
-  methods[12].selector = @selector(nameWithNSString:);
-  methods[13].selector = @selector(valueWithNSString:);
-  methods[14].selector = @selector(nullValue);
-  methods[15].selector = @selector(valueWithBoolean:);
-  methods[16].selector = @selector(valueWithDouble:);
-  methods[17].selector = @selector(valueWithLong:);
-  methods[18].selector = @selector(valueWithNSNumber:);
-  methods[19].selector = @selector(flush);
-  methods[20].selector = @selector(close);
-  methods[21].selector = @selector(stringWithNSString:);
-  methods[22].selector = @selector(newline);
-  methods[23].selector = @selector(beforeName);
-  methods[24].selector = @selector(beforeValueWithBoolean:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "out_", "LJavaIoWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "stack_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
-    { "indent_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "separator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "lenient_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaIoWriter;", "setIndent", "LNSString;", "setLenient", "Z", "LJavaIoIOException;", "open", "LAndroidUtilJsonScope;LNSString;", "close", "LAndroidUtilJsonScope;LAndroidUtilJsonScope;LNSString;", "replaceTop", "LAndroidUtilJsonScope;", "name", "value", "D", "J", "LNSNumber;", "string", "beforeValue", "Ljava/util/List<Landroid/util/JsonScope;>;" };
-  static const J2ObjcClassInfo _AndroidUtilJsonWriter = { "JsonWriter", "android.util", ptrTable, methods, fields, 7, 0x11, 25, 5, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilJsonWriter;
-}
-
-@end
-
-void AndroidUtilJsonWriter_initWithJavaIoWriter_(AndroidUtilJsonWriter *self, JavaIoWriter *outArg) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->stack_, new_JavaUtilArrayList_init());
-  {
-    [self->stack_ addWithId:JreLoadEnum(AndroidUtilJsonScope, EMPTY_DOCUMENT)];
-  }
-  JreStrongAssign(&self->separator_, @":");
-  if (outArg == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"out == null");
-  }
-  JreStrongAssign(&self->out_, outArg);
-}
-
-AndroidUtilJsonWriter *new_AndroidUtilJsonWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) {
-  J2OBJC_NEW_IMPL(AndroidUtilJsonWriter, initWithJavaIoWriter_, outArg)
-}
-
-AndroidUtilJsonWriter *create_AndroidUtilJsonWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) {
-  J2OBJC_CREATE_IMPL(AndroidUtilJsonWriter, initWithJavaIoWriter_, outArg)
-}
-
-AndroidUtilJsonWriter *AndroidUtilJsonWriter_openWithAndroidUtilJsonScope_withNSString_(AndroidUtilJsonWriter *self, AndroidUtilJsonScope *empty, NSString *openBracket) {
-  AndroidUtilJsonWriter_beforeValueWithBoolean_(self, true);
-  [((id<JavaUtilList>) nil_chk(self->stack_)) addWithId:empty];
-  [((JavaIoWriter *) nil_chk(self->out_)) writeWithNSString:openBracket];
-  return self;
-}
-
-AndroidUtilJsonWriter *AndroidUtilJsonWriter_closeWithAndroidUtilJsonScope_withAndroidUtilJsonScope_withNSString_(AndroidUtilJsonWriter *self, AndroidUtilJsonScope *empty, AndroidUtilJsonScope *nonempty, NSString *closeBracket) {
-  AndroidUtilJsonScope *context = AndroidUtilJsonWriter_peek(self);
-  if (context != nonempty && context != empty) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Nesting problem: ", self->stack_));
-  }
-  [((id<JavaUtilList>) nil_chk(self->stack_)) removeWithInt:[self->stack_ size] - 1];
-  if (context == nonempty) {
-    AndroidUtilJsonWriter_newline(self);
-  }
-  [((JavaIoWriter *) nil_chk(self->out_)) writeWithNSString:closeBracket];
-  return self;
-}
-
-AndroidUtilJsonScope *AndroidUtilJsonWriter_peek(AndroidUtilJsonWriter *self) {
-  return [((id<JavaUtilList>) nil_chk(self->stack_)) getWithInt:[self->stack_ size] - 1];
-}
-
-void AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(AndroidUtilJsonWriter *self, AndroidUtilJsonScope *topOfStack) {
-  [((id<JavaUtilList>) nil_chk(self->stack_)) setWithInt:[self->stack_ size] - 1 withId:topOfStack];
-}
-
-void AndroidUtilJsonWriter_stringWithNSString_(AndroidUtilJsonWriter *self, NSString *value) {
-  [((JavaIoWriter *) nil_chk(self->out_)) writeWithNSString:@"\""];
-  for (jint i = 0, length = ((jint) [((NSString *) nil_chk(value)) length]); i < length; i++) {
-    jchar c = [value charAtWithInt:i];
-    switch (c) {
-      case '"':
-      case '\\':
-      [self->out_ writeWithInt:'\\'];
-      [self->out_ writeWithInt:c];
-      break;
-      case 0x0009:
-      [self->out_ writeWithNSString:@"\\t"];
-      break;
-      case 0x0008:
-      [self->out_ writeWithNSString:@"\\b"];
-      break;
-      case 0x000a:
-      [self->out_ writeWithNSString:@"\\n"];
-      break;
-      case 0x000d:
-      [self->out_ writeWithNSString:@"\\r"];
-      break;
-      case 0x000c:
-      [self->out_ writeWithNSString:@"\\f"];
-      break;
-      case 0x2028:
-      case 0x2029:
-      [self->out_ writeWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"\\u%04x", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_((jint) c) } count:1 type:NSObject_class_()])];
-      break;
-      default:
-      if (c <= (jint) 0x1F) {
-        [self->out_ writeWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"\\u%04x", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_((jint) c) } count:1 type:NSObject_class_()])];
-      }
-      else {
-        [self->out_ writeWithInt:c];
-      }
-      break;
-    }
-  }
-  [self->out_ writeWithNSString:@"\""];
-}
-
-void AndroidUtilJsonWriter_newline(AndroidUtilJsonWriter *self) {
-  if (self->indent_ == nil) {
-    return;
-  }
-  [((JavaIoWriter *) nil_chk(self->out_)) writeWithNSString:@"\n"];
-  for (jint i = 1; i < [((id<JavaUtilList>) nil_chk(self->stack_)) size]; i++) {
-    [self->out_ writeWithNSString:self->indent_];
-  }
-}
-
-void AndroidUtilJsonWriter_beforeName(AndroidUtilJsonWriter *self) {
-  AndroidUtilJsonScope *context = AndroidUtilJsonWriter_peek(self);
-  if (context == JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_OBJECT)) {
-    [((JavaIoWriter *) nil_chk(self->out_)) writeWithInt:','];
-  }
-  else if (context != JreLoadEnum(AndroidUtilJsonScope, EMPTY_OBJECT)) {
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Nesting problem: ", self->stack_));
-  }
-  AndroidUtilJsonWriter_newline(self);
-  AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, DANGLING_NAME));
-}
-
-void AndroidUtilJsonWriter_beforeValueWithBoolean_(AndroidUtilJsonWriter *self, jboolean root) {
-  switch ([AndroidUtilJsonWriter_peek(self) ordinal]) {
-    case AndroidUtilJsonScope_Enum_EMPTY_DOCUMENT:
-    if (!self->lenient_ && !root) {
-      @throw create_JavaLangIllegalStateException_initWithNSString_(@"JSON must start with an array or an object.");
-    }
-    AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_DOCUMENT));
-    break;
-    case AndroidUtilJsonScope_Enum_EMPTY_ARRAY:
-    AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_ARRAY));
-    AndroidUtilJsonWriter_newline(self);
-    break;
-    case AndroidUtilJsonScope_Enum_NONEMPTY_ARRAY:
-    [((JavaIoWriter *) nil_chk(self->out_)) appendWithChar:','];
-    AndroidUtilJsonWriter_newline(self);
-    break;
-    case AndroidUtilJsonScope_Enum_DANGLING_NAME:
-    [((JavaIoWriter *) nil_chk(self->out_)) appendWithJavaLangCharSequence:self->separator_];
-    AndroidUtilJsonWriter_replaceTopWithAndroidUtilJsonScope_(self, JreLoadEnum(AndroidUtilJsonScope, NONEMPTY_OBJECT));
-    break;
-    case AndroidUtilJsonScope_Enum_NONEMPTY_DOCUMENT:
-    @throw create_JavaLangIllegalStateException_initWithNSString_(@"JSON must have only one top-level value.");
-    default:
-    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Nesting problem: ", self->stack_));
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilJsonWriter)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilLongSparseArray.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilLongSparseArray.h
deleted file mode 100644
index 6eb934f81..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilLongSparseArray.h
+++ /dev/null
@@ -1,82 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilLongSparseArray")
-#ifdef RESTRICT_AndroidUtilLongSparseArray
-#define INCLUDE_ALL_AndroidUtilLongSparseArray 0
-#else
-#define INCLUDE_ALL_AndroidUtilLongSparseArray 1
-#endif
-#undef RESTRICT_AndroidUtilLongSparseArray
-
-#if !defined (AndroidUtilLongSparseArray_) && (INCLUDE_ALL_AndroidUtilLongSparseArray || defined(INCLUDE_AndroidUtilLongSparseArray))
-#define AndroidUtilLongSparseArray_
-
-@interface AndroidUtilLongSparseArray : NSObject < NSCopying >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithInt:(jint)initialCapacity;
-
-- (void)appendWithLong:(jlong)key
-                withId:(id)value;
-
-- (void)clear;
-
-- (AndroidUtilLongSparseArray *)java_clone;
-
-- (void)delete__WithLong:(jlong)key;
-
-- (id)getWithLong:(jlong)key;
-
-- (id)getWithLong:(jlong)key
-           withId:(id)valueIfKeyNotFound;
-
-- (jint)indexOfKeyWithLong:(jlong)key;
-
-- (jint)indexOfValueWithId:(id)value;
-
-- (jlong)keyAtWithInt:(jint)index;
-
-- (void)putWithLong:(jlong)key
-             withId:(id)value;
-
-- (void)removeWithLong:(jlong)key;
-
-- (void)removeAtWithInt:(jint)index;
-
-- (void)setValueAtWithInt:(jint)index
-                   withId:(id)value;
-
-- (jint)size;
-
-- (NSString *)description;
-
-- (id)valueAtWithInt:(jint)index;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilLongSparseArray)
-
-FOUNDATION_EXPORT void AndroidUtilLongSparseArray_init(AndroidUtilLongSparseArray *self);
-
-FOUNDATION_EXPORT AndroidUtilLongSparseArray *new_AndroidUtilLongSparseArray_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilLongSparseArray *create_AndroidUtilLongSparseArray_init();
-
-FOUNDATION_EXPORT void AndroidUtilLongSparseArray_initWithInt_(AndroidUtilLongSparseArray *self, jint initialCapacity);
-
-FOUNDATION_EXPORT AndroidUtilLongSparseArray *new_AndroidUtilLongSparseArray_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilLongSparseArray *create_AndroidUtilLongSparseArray_initWithInt_(jint initialCapacity);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilLongSparseArray)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilLongSparseArray")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilLongSparseArray.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilLongSparseArray.m
deleted file mode 100644
index f934e3001..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilLongSparseArray.m
+++ /dev/null
@@ -1,350 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilEmptyArray.h"
-#include "AndroidUtilLongSparseArray.h"
-#include "ComAndroidInternalUtilGrowingArrayUtils.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "android/util/ContainerHelpers.h"
-#include "com/android/internal/util/ArrayUtils.h"
-#include "java/lang/CloneNotSupportedException.h"
-#include "java/lang/StringBuilder.h"
-
-@interface AndroidUtilLongSparseArray () {
- @public
-  jboolean mGarbage_;
-  IOSLongArray *mKeys_;
-  IOSObjectArray *mValues_;
-  jint mSize_;
-}
-
-- (void)gc;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidUtilLongSparseArray, mKeys_, IOSLongArray *)
-J2OBJC_FIELD_SETTER(AndroidUtilLongSparseArray, mValues_, IOSObjectArray *)
-
-inline id AndroidUtilLongSparseArray_get_DELETED();
-static id AndroidUtilLongSparseArray_DELETED;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilLongSparseArray, DELETED, id)
-
-__attribute__((unused)) static void AndroidUtilLongSparseArray_gc(AndroidUtilLongSparseArray *self);
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilLongSparseArray)
-
-@implementation AndroidUtilLongSparseArray
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilLongSparseArray_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithInt:(jint)initialCapacity {
-  AndroidUtilLongSparseArray_initWithInt_(self, initialCapacity);
-  return self;
-}
-
-- (AndroidUtilLongSparseArray *)java_clone {
-  AndroidUtilLongSparseArray *clone = nil;
-  @try {
-    clone = (AndroidUtilLongSparseArray *) cast_chk([super java_clone], [AndroidUtilLongSparseArray class]);
-    JreStrongAssign(&((AndroidUtilLongSparseArray *) nil_chk(clone))->mKeys_, [((IOSLongArray *) nil_chk(mKeys_)) java_clone]);
-    JreStrongAssign(&clone->mValues_, [((IOSObjectArray *) nil_chk(mValues_)) java_clone]);
-  }
-  @catch (JavaLangCloneNotSupportedException *cnse) {
-  }
-  return clone;
-}
-
-- (id)getWithLong:(jlong)key {
-  return [self getWithLong:key withId:nil];
-}
-
-- (id)getWithLong:(jlong)key
-           withId:(id)valueIfKeyNotFound {
-  jint i = AndroidUtilContainerHelpers_binarySearchWithLongArray_withInt_withLong_(mKeys_, mSize_, key);
-  if (i < 0 || IOSObjectArray_Get(nil_chk(mValues_), i) == AndroidUtilLongSparseArray_DELETED) {
-    return valueIfKeyNotFound;
-  }
-  else {
-    return IOSObjectArray_Get(nil_chk(mValues_), i);
-  }
-}
-
-- (void)delete__WithLong:(jlong)key {
-  jint i = AndroidUtilContainerHelpers_binarySearchWithLongArray_withInt_withLong_(mKeys_, mSize_, key);
-  if (i >= 0) {
-    if (IOSObjectArray_Get(nil_chk(mValues_), i) != AndroidUtilLongSparseArray_DELETED) {
-      IOSObjectArray_Set(mValues_, i, AndroidUtilLongSparseArray_DELETED);
-      mGarbage_ = true;
-    }
-  }
-}
-
-- (void)removeWithLong:(jlong)key {
-  [self delete__WithLong:key];
-}
-
-- (void)removeAtWithInt:(jint)index {
-  if (IOSObjectArray_Get(nil_chk(mValues_), index) != AndroidUtilLongSparseArray_DELETED) {
-    IOSObjectArray_Set(mValues_, index, AndroidUtilLongSparseArray_DELETED);
-    mGarbage_ = true;
-  }
-}
-
-- (void)gc {
-  AndroidUtilLongSparseArray_gc(self);
-}
-
-- (void)putWithLong:(jlong)key
-             withId:(id)value {
-  jint i = AndroidUtilContainerHelpers_binarySearchWithLongArray_withInt_withLong_(mKeys_, mSize_, key);
-  if (i >= 0) {
-    IOSObjectArray_Set(nil_chk(mValues_), i, value);
-  }
-  else {
-    i = ~i;
-    if (i < mSize_ && IOSObjectArray_Get(nil_chk(mValues_), i) == AndroidUtilLongSparseArray_DELETED) {
-      *IOSLongArray_GetRef(nil_chk(mKeys_), i) = key;
-      IOSObjectArray_Set(nil_chk(mValues_), i, value);
-      return;
-    }
-    if (mGarbage_ && mSize_ >= ((IOSLongArray *) nil_chk(mKeys_))->size_) {
-      AndroidUtilLongSparseArray_gc(self);
-      i = ~AndroidUtilContainerHelpers_binarySearchWithLongArray_withInt_withLong_(mKeys_, mSize_, key);
-    }
-    JreStrongAssign(&mKeys_, ComAndroidInternalUtilGrowingArrayUtils_insertWithLongArray_withInt_withInt_withLong_(mKeys_, mSize_, i, key));
-    JreStrongAssign(&mValues_, ComAndroidInternalUtilGrowingArrayUtils_insertWithNSObjectArray_withInt_withInt_withId_(mValues_, mSize_, i, value));
-    mSize_++;
-  }
-}
-
-- (jint)size {
-  if (mGarbage_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  return mSize_;
-}
-
-- (jlong)keyAtWithInt:(jint)index {
-  if (mGarbage_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  return IOSLongArray_Get(nil_chk(mKeys_), index);
-}
-
-- (id)valueAtWithInt:(jint)index {
-  if (mGarbage_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  return IOSObjectArray_Get(nil_chk(mValues_), index);
-}
-
-- (void)setValueAtWithInt:(jint)index
-                   withId:(id)value {
-  if (mGarbage_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  IOSObjectArray_Set(nil_chk(mValues_), index, value);
-}
-
-- (jint)indexOfKeyWithLong:(jlong)key {
-  if (mGarbage_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  return AndroidUtilContainerHelpers_binarySearchWithLongArray_withInt_withLong_(mKeys_, mSize_, key);
-}
-
-- (jint)indexOfValueWithId:(id)value {
-  if (mGarbage_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  for (jint i = 0; i < mSize_; i++) if (IOSObjectArray_Get(nil_chk(mValues_), i) == value) return i;
-  return -1;
-}
-
-- (void)clear {
-  jint n = mSize_;
-  IOSObjectArray *values = mValues_;
-  for (jint i = 0; i < n; i++) {
-    IOSObjectArray_Set(nil_chk(values), i, nil);
-  }
-  mSize_ = 0;
-  mGarbage_ = false;
-}
-
-- (void)appendWithLong:(jlong)key
-                withId:(id)value {
-  if (mSize_ != 0 && key <= IOSLongArray_Get(nil_chk(mKeys_), mSize_ - 1)) {
-    [self putWithLong:key withId:value];
-    return;
-  }
-  if (mGarbage_ && mSize_ >= ((IOSLongArray *) nil_chk(mKeys_))->size_) {
-    AndroidUtilLongSparseArray_gc(self);
-  }
-  JreStrongAssign(&mKeys_, ComAndroidInternalUtilGrowingArrayUtils_appendWithLongArray_withInt_withLong_(mKeys_, mSize_, key));
-  JreStrongAssign(&mValues_, ComAndroidInternalUtilGrowingArrayUtils_appendWithNSObjectArray_withInt_withId_(mValues_, mSize_, value));
-  mSize_++;
-}
-
-- (NSString *)description {
-  if ([self size] <= 0) {
-    return @"{}";
-  }
-  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_initWithInt_(mSize_ * 28);
-  [buffer appendWithChar:'{'];
-  for (jint i = 0; i < mSize_; i++) {
-    if (i > 0) {
-      [buffer appendWithNSString:@", "];
-    }
-    jlong key = [self keyAtWithInt:i];
-    [buffer appendWithLong:key];
-    [buffer appendWithChar:'='];
-    id value = [self valueAtWithInt:i];
-    if (value != self) {
-      [buffer appendWithId:value];
-    }
-    else {
-      [buffer appendWithNSString:@"(this Map)"];
-    }
-  }
-  [buffer appendWithChar:'}'];
-  return [buffer description];
-}
-
-- (void)dealloc {
-  RELEASE_(mKeys_);
-  RELEASE_(mValues_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilLongSparseArray;", 0x1, 1, -1, -1, 2, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 3, 4, -1, 5, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 3, 6, -1, 7, -1, -1 },
-    { NULL, "V", 0x1, 8, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 9, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 11, 6, -1, 12, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "J", 0x1, 13, 0, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 14, 0, -1, 15, -1, -1 },
-    { NULL, "V", 0x1, 16, 17, -1, 18, -1, -1 },
-    { NULL, "I", 0x1, 19, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 20, 21, -1, 22, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 23, 6, -1, 12, -1, -1 },
-    { NULL, "LNSString;", 0x1, 24, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithInt:);
-  methods[2].selector = @selector(java_clone);
-  methods[3].selector = @selector(getWithLong:);
-  methods[4].selector = @selector(getWithLong:withId:);
-  methods[5].selector = @selector(delete__WithLong:);
-  methods[6].selector = @selector(removeWithLong:);
-  methods[7].selector = @selector(removeAtWithInt:);
-  methods[8].selector = @selector(gc);
-  methods[9].selector = @selector(putWithLong:withId:);
-  methods[10].selector = @selector(size);
-  methods[11].selector = @selector(keyAtWithInt:);
-  methods[12].selector = @selector(valueAtWithInt:);
-  methods[13].selector = @selector(setValueAtWithInt:withId:);
-  methods[14].selector = @selector(indexOfKeyWithLong:);
-  methods[15].selector = @selector(indexOfValueWithId:);
-  methods[16].selector = @selector(clear);
-  methods[17].selector = @selector(appendWithLong:withId:);
-  methods[18].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "DELETED", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
-    { "mGarbage_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mKeys_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mValues_", "[LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "mSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "I", "clone", "()Landroid/util/LongSparseArray<TE;>;", "get", "J", "(J)TE;", "JLNSObject;", "(JTE;)TE;", "delete", "remove", "removeAt", "put", "(JTE;)V", "keyAt", "valueAt", "(I)TE;", "setValueAt", "ILNSObject;", "(ITE;)V", "indexOfKey", "indexOfValue", "LNSObject;", "(TE;)I", "append", "toString", &AndroidUtilLongSparseArray_DELETED, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Cloneable;" };
-  static const J2ObjcClassInfo _AndroidUtilLongSparseArray = { "LongSparseArray", "android.util", ptrTable, methods, fields, 7, 0x1, 19, 5, -1, -1, -1, 26, -1 };
-  return &_AndroidUtilLongSparseArray;
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return [[self java_clone] retain];
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilLongSparseArray class]) {
-    JreStrongAssignAndConsume(&AndroidUtilLongSparseArray_DELETED, new_NSObject_init());
-    J2OBJC_SET_INITIALIZED(AndroidUtilLongSparseArray)
-  }
-}
-
-@end
-
-void AndroidUtilLongSparseArray_init(AndroidUtilLongSparseArray *self) {
-  AndroidUtilLongSparseArray_initWithInt_(self, 10);
-}
-
-AndroidUtilLongSparseArray *new_AndroidUtilLongSparseArray_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilLongSparseArray, init)
-}
-
-AndroidUtilLongSparseArray *create_AndroidUtilLongSparseArray_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilLongSparseArray, init)
-}
-
-void AndroidUtilLongSparseArray_initWithInt_(AndroidUtilLongSparseArray *self, jint initialCapacity) {
-  NSObject_init(self);
-  self->mGarbage_ = false;
-  if (initialCapacity == 0) {
-    JreStrongAssign(&self->mKeys_, JreLoadStatic(AndroidUtilEmptyArray, LONG));
-    JreStrongAssign(&self->mValues_, JreLoadStatic(AndroidUtilEmptyArray, OBJECT));
-  }
-  else {
-    JreStrongAssign(&self->mKeys_, ComAndroidInternalUtilArrayUtils_newUnpaddedLongArrayWithInt_(initialCapacity));
-    JreStrongAssign(&self->mValues_, ComAndroidInternalUtilArrayUtils_newUnpaddedObjectArrayWithInt_(initialCapacity));
-  }
-  self->mSize_ = 0;
-}
-
-AndroidUtilLongSparseArray *new_AndroidUtilLongSparseArray_initWithInt_(jint initialCapacity) {
-  J2OBJC_NEW_IMPL(AndroidUtilLongSparseArray, initWithInt_, initialCapacity)
-}
-
-AndroidUtilLongSparseArray *create_AndroidUtilLongSparseArray_initWithInt_(jint initialCapacity) {
-  J2OBJC_CREATE_IMPL(AndroidUtilLongSparseArray, initWithInt_, initialCapacity)
-}
-
-void AndroidUtilLongSparseArray_gc(AndroidUtilLongSparseArray *self) {
-  jint n = self->mSize_;
-  jint o = 0;
-  IOSLongArray *keys = self->mKeys_;
-  IOSObjectArray *values = self->mValues_;
-  for (jint i = 0; i < n; i++) {
-    id val = IOSObjectArray_Get(nil_chk(values), i);
-    if (val != AndroidUtilLongSparseArray_DELETED) {
-      if (i != o) {
-        *IOSLongArray_GetRef(nil_chk(keys), o) = IOSLongArray_Get(keys, i);
-        IOSObjectArray_Set(values, o, val);
-        IOSObjectArray_Set(values, i, nil);
-      }
-      o++;
-    }
-  }
-  self->mGarbage_ = false;
-  self->mSize_ = o;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilLongSparseArray)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilMalformedJsonException.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilMalformedJsonException.h
deleted file mode 100644
index 4f6b7a7da..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilMalformedJsonException.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilMalformedJsonException")
-#ifdef RESTRICT_AndroidUtilMalformedJsonException
-#define INCLUDE_ALL_AndroidUtilMalformedJsonException 0
-#else
-#define INCLUDE_ALL_AndroidUtilMalformedJsonException 1
-#endif
-#undef RESTRICT_AndroidUtilMalformedJsonException
-
-#if !defined (AndroidUtilMalformedJsonException_) && (INCLUDE_ALL_AndroidUtilMalformedJsonException || defined(INCLUDE_AndroidUtilMalformedJsonException))
-#define AndroidUtilMalformedJsonException_
-
-#define RESTRICT_JavaIoIOException 1
-#define INCLUDE_JavaIoIOException 1
-#include "java/io/IOException.h"
-
-@interface AndroidUtilMalformedJsonException : JavaIoIOException
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)message;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilMalformedJsonException)
-
-FOUNDATION_EXPORT void AndroidUtilMalformedJsonException_initWithNSString_(AndroidUtilMalformedJsonException *self, NSString *message);
-
-FOUNDATION_EXPORT AndroidUtilMalformedJsonException *new_AndroidUtilMalformedJsonException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilMalformedJsonException *create_AndroidUtilMalformedJsonException_initWithNSString_(NSString *message);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilMalformedJsonException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilMalformedJsonException")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilMalformedJsonException.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilMalformedJsonException.m
deleted file mode 100644
index ddcfb8e32..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilMalformedJsonException.m
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilMalformedJsonException.h"
-#include "J2ObjC_source.h"
-#include "java/io/IOException.h"
-
-inline jlong AndroidUtilMalformedJsonException_get_serialVersionUID();
-#define AndroidUtilMalformedJsonException_serialVersionUID 1LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidUtilMalformedJsonException, serialVersionUID, jlong)
-
-@implementation AndroidUtilMalformedJsonException
-
-- (instancetype)initWithNSString:(NSString *)message {
-  AndroidUtilMalformedJsonException_initWithNSString_(self, message);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "serialVersionUID", "J", .constantValue.asLong = AndroidUtilMalformedJsonException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;" };
-  static const J2ObjcClassInfo _AndroidUtilMalformedJsonException = { "MalformedJsonException", "android.util", ptrTable, methods, fields, 7, 0x11, 1, 1, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilMalformedJsonException;
-}
-
-@end
-
-void AndroidUtilMalformedJsonException_initWithNSString_(AndroidUtilMalformedJsonException *self, NSString *message) {
-  JavaIoIOException_initWithNSString_(self, message);
-}
-
-AndroidUtilMalformedJsonException *new_AndroidUtilMalformedJsonException_initWithNSString_(NSString *message) {
-  J2OBJC_NEW_IMPL(AndroidUtilMalformedJsonException, initWithNSString_, message)
-}
-
-AndroidUtilMalformedJsonException *create_AndroidUtilMalformedJsonException_initWithNSString_(NSString *message) {
-  J2OBJC_CREATE_IMPL(AndroidUtilMalformedJsonException, initWithNSString_, message)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilMalformedJsonException)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilPatterns.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilPatterns.h
deleted file mode 100644
index 6b965b856..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilPatterns.h
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilPatterns")
-#ifdef RESTRICT_AndroidUtilPatterns
-#define INCLUDE_ALL_AndroidUtilPatterns 0
-#else
-#define INCLUDE_ALL_AndroidUtilPatterns 1
-#endif
-#undef RESTRICT_AndroidUtilPatterns
-
-#if !defined (AndroidUtilPatterns_) && (INCLUDE_ALL_AndroidUtilPatterns || defined(INCLUDE_AndroidUtilPatterns))
-#define AndroidUtilPatterns_
-
-@class JavaUtilRegexMatcher;
-@class JavaUtilRegexPattern;
-
-@interface AndroidUtilPatterns : NSObject
-
-#pragma mark Public
-
-+ (NSString *)concatGroupsWithJavaUtilRegexMatcher:(JavaUtilRegexMatcher *)matcher;
-
-+ (NSString *)digitsAndPlusOnlyWithJavaUtilRegexMatcher:(JavaUtilRegexMatcher *)matcher;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilPatterns)
-
-inline NSString *AndroidUtilPatterns_get_TOP_LEVEL_DOMAIN_STR();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, TOP_LEVEL_DOMAIN_STR, NSString *)
-
-inline JavaUtilRegexPattern *AndroidUtilPatterns_get_TOP_LEVEL_DOMAIN();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *AndroidUtilPatterns_TOP_LEVEL_DOMAIN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, TOP_LEVEL_DOMAIN, JavaUtilRegexPattern *)
-
-inline NSString *AndroidUtilPatterns_get_TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL, NSString *)
-
-inline NSString *AndroidUtilPatterns_get_GOOD_IRI_CHAR();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidUtilPatterns_GOOD_IRI_CHAR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, GOOD_IRI_CHAR, NSString *)
-
-inline JavaUtilRegexPattern *AndroidUtilPatterns_get_WEB_URL();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *AndroidUtilPatterns_WEB_URL;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, WEB_URL, JavaUtilRegexPattern *)
-
-inline JavaUtilRegexPattern *AndroidUtilPatterns_get_IP_ADDRESS();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *AndroidUtilPatterns_IP_ADDRESS;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, IP_ADDRESS, JavaUtilRegexPattern *)
-
-inline JavaUtilRegexPattern *AndroidUtilPatterns_get_DOMAIN_NAME();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *AndroidUtilPatterns_DOMAIN_NAME;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, DOMAIN_NAME, JavaUtilRegexPattern *)
-
-inline JavaUtilRegexPattern *AndroidUtilPatterns_get_EMAIL_ADDRESS();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *AndroidUtilPatterns_EMAIL_ADDRESS;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, EMAIL_ADDRESS, JavaUtilRegexPattern *)
-
-inline JavaUtilRegexPattern *AndroidUtilPatterns_get_PHONE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *AndroidUtilPatterns_PHONE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilPatterns, PHONE, JavaUtilRegexPattern *)
-
-FOUNDATION_EXPORT NSString *AndroidUtilPatterns_concatGroupsWithJavaUtilRegexMatcher_(JavaUtilRegexMatcher *matcher);
-
-FOUNDATION_EXPORT NSString *AndroidUtilPatterns_digitsAndPlusOnlyWithJavaUtilRegexMatcher_(JavaUtilRegexMatcher *matcher);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilPatterns)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilPatterns")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilPatterns.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilPatterns.m
deleted file mode 100644
index c32800208..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilPatterns.m
+++ /dev/null
@@ -1,136 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilPatterns.h"
-#include "J2ObjC_source.h"
-#include "java/io/PrintStream.h"
-#include "java/lang/Character.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/System.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-
-@interface AndroidUtilPatterns ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void AndroidUtilPatterns_init(AndroidUtilPatterns *self);
-
-__attribute__((unused)) static AndroidUtilPatterns *new_AndroidUtilPatterns_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidUtilPatterns *create_AndroidUtilPatterns_init();
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilPatterns)
-
-NSString *AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR = @"((aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(biz|b[abdefghijmnorstvwyz])|(cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(edu|e[cegrstu])|f[ijkmor]|(gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(info|int|i[delmnoqrst])|(jobs|j[emop])|k[eghimnprwyz]|l[abcikrstuvy]|(mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])|(name|net|n[acefgilopruz])|(org|om)|(pro|p[aefghklmnrstwy])|qa|r[eosuw]|s[abcdeghijklmnortuvyz]|(tel|travel|t[cdfghjklmnoprtvwz])|u[agksyz]|v[aceginu]|w[fs]|(xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-80akhbyknj4f|xn\\-\\-9t4b11yi5a|xn\\-\\-deba0ad|xn\\-\\-g6w251d|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-zckzah)|y[etu]|z[amw])";
-JavaUtilRegexPattern *AndroidUtilPatterns_TOP_LEVEL_DOMAIN;
-NSString *AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL = @"(?:(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(?:biz|b[abdefghijmnorstvwyz])|(?:cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(?:edu|e[cegrstu])|f[ijkmor]|(?:gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(?:info|int|i[delmnoqrst])|(?:jobs|j[emop])|k[eghimnprwyz]|l[abcikrstuvy]|(?:mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])|(?:name|net|n[acefgilopruz])|(?:org|om)|(?:pro|p[aefghklmnrstwy])|qa|r[eosuw]|s[abcdeghijklmnortuvyz]|(?:tel|travel|t[cdfghjklmnoprtvwz])|u[agksyz]|v[aceginu]|w[fs]|(?:xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-80akhbyknj4f|xn\\-\\-9t4b11yi5a|xn\\-\\-deba0ad|xn\\-\\-g6w251d|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-zckzah)|y[etu]|z[amw]))";
-NSString *AndroidUtilPatterns_GOOD_IRI_CHAR = @"a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef";
-JavaUtilRegexPattern *AndroidUtilPatterns_WEB_URL;
-JavaUtilRegexPattern *AndroidUtilPatterns_IP_ADDRESS;
-JavaUtilRegexPattern *AndroidUtilPatterns_DOMAIN_NAME;
-JavaUtilRegexPattern *AndroidUtilPatterns_EMAIL_ADDRESS;
-JavaUtilRegexPattern *AndroidUtilPatterns_PHONE;
-
-@implementation AndroidUtilPatterns
-
-+ (NSString *)concatGroupsWithJavaUtilRegexMatcher:(JavaUtilRegexMatcher *)matcher {
-  return AndroidUtilPatterns_concatGroupsWithJavaUtilRegexMatcher_(matcher);
-}
-
-+ (NSString *)digitsAndPlusOnlyWithJavaUtilRegexMatcher:(JavaUtilRegexMatcher *)matcher {
-  return AndroidUtilPatterns_digitsAndPlusOnlyWithJavaUtilRegexMatcher_(matcher);
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilPatterns_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x19, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x19, 2, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(concatGroupsWithJavaUtilRegexMatcher:);
-  methods[1].selector = @selector(digitsAndPlusOnlyWithJavaUtilRegexMatcher:);
-  methods[2].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TOP_LEVEL_DOMAIN_STR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
-    { "TOP_LEVEL_DOMAIN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
-    { "TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
-    { "GOOD_IRI_CHAR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
-    { "WEB_URL", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
-    { "IP_ADDRESS", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
-    { "DOMAIN_NAME", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
-    { "EMAIL_ADDRESS", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
-    { "PHONE", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
-  };
-  static const void *ptrTable[] = { "concatGroups", "LJavaUtilRegexMatcher;", "digitsAndPlusOnly", &AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR, &AndroidUtilPatterns_TOP_LEVEL_DOMAIN, &AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL, &AndroidUtilPatterns_GOOD_IRI_CHAR, &AndroidUtilPatterns_WEB_URL, &AndroidUtilPatterns_IP_ADDRESS, &AndroidUtilPatterns_DOMAIN_NAME, &AndroidUtilPatterns_EMAIL_ADDRESS, &AndroidUtilPatterns_PHONE };
-  static const J2ObjcClassInfo _AndroidUtilPatterns = { "Patterns", "android.util", ptrTable, methods, fields, 7, 0x1, 3, 9, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilPatterns;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilPatterns class]) {
-    JreStrongAssign(&AndroidUtilPatterns_TOP_LEVEL_DOMAIN, JavaUtilRegexPattern_compileWithNSString_(AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR));
-    JreStrongAssign(&AndroidUtilPatterns_WEB_URL, JavaUtilRegexPattern_compileWithNSString_(JreStrcat("$$$$$$$$$", @"((?:(http|https|Http|Https|rtsp|Rtsp):\\/\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,64}(?:\\:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,25})?\\@)?)?((?:(?:[", AndroidUtilPatterns_GOOD_IRI_CHAR, @"][", AndroidUtilPatterns_GOOD_IRI_CHAR, @"\\-]{0,64}\\.)+", AndroidUtilPatterns_TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL, @"|(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[0-9])))(?:\\:\\d{1,5})?)(\\/(?:(?:[", AndroidUtilPatterns_GOOD_IRI_CHAR, @"\\;\\/\\?\\:\\@\\&\\=\\#\\~\\-\\.\\+\\!\\*\\'\\(\\)\\,\\_])|(?:\\%[a-fA-F0-9]{2}))*)?(?:\\b|$)")));
-    JreStrongAssign(&AndroidUtilPatterns_IP_ADDRESS, JavaUtilRegexPattern_compileWithNSString_(@"((25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[0-9]))"));
-    JreStrongAssign(&AndroidUtilPatterns_DOMAIN_NAME, JavaUtilRegexPattern_compileWithNSString_(JreStrcat("$$$$$$$@$@C", @"(((([", AndroidUtilPatterns_GOOD_IRI_CHAR, @"][", AndroidUtilPatterns_GOOD_IRI_CHAR, @"\\-]*)*[", AndroidUtilPatterns_GOOD_IRI_CHAR, @"]\\.)+", AndroidUtilPatterns_TOP_LEVEL_DOMAIN, @")|", AndroidUtilPatterns_IP_ADDRESS, ')')));
-    JreStrongAssign(&AndroidUtilPatterns_EMAIL_ADDRESS, JavaUtilRegexPattern_compileWithNSString_(@"[a-zA-Z0-9\\+\\.\\_\\%\\-\\+]{1,256}\\@[a-zA-Z0-9][a-zA-Z0-9\\-]{0,64}(\\.[a-zA-Z0-9][a-zA-Z0-9\\-]{0,25})+"));
-    JreStrongAssign(&AndroidUtilPatterns_PHONE, JavaUtilRegexPattern_compileWithNSString_(@"(\\+[0-9]+[\\- \\.]*)?(\\([0-9]+\\)[\\- \\.]*)?([0-9][0-9\\- \\.][0-9\\- \\.]+[0-9])"));
-    J2OBJC_SET_INITIALIZED(AndroidUtilPatterns)
-  }
-}
-
-@end
-
-NSString *AndroidUtilPatterns_concatGroupsWithJavaUtilRegexMatcher_(JavaUtilRegexMatcher *matcher) {
-  AndroidUtilPatterns_initialize();
-  JavaLangStringBuilder *b = create_JavaLangStringBuilder_init();
-  jint numGroups = [((JavaUtilRegexMatcher *) nil_chk(matcher)) groupCount];
-  for (jint i = 1; i <= numGroups; i++) {
-    NSString *s = [matcher groupWithInt:i];
-    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$I$$", @"Group(", i, @") : ", s)];
-    if (s != nil) {
-      [b appendWithNSString:s];
-    }
-  }
-  return [b description];
-}
-
-NSString *AndroidUtilPatterns_digitsAndPlusOnlyWithJavaUtilRegexMatcher_(JavaUtilRegexMatcher *matcher) {
-  AndroidUtilPatterns_initialize();
-  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
-  NSString *matchingRegion = [((JavaUtilRegexMatcher *) nil_chk(matcher)) group];
-  for (jint i = 0, size = ((jint) [((NSString *) nil_chk(matchingRegion)) length]); i < size; i++) {
-    jchar character = [matchingRegion charAtWithInt:i];
-    if (character == '+' || JavaLangCharacter_isDigitWithChar_(character)) {
-      [buffer appendWithChar:character];
-    }
-  }
-  return [buffer description];
-}
-
-void AndroidUtilPatterns_init(AndroidUtilPatterns *self) {
-  NSObject_init(self);
-}
-
-AndroidUtilPatterns *new_AndroidUtilPatterns_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilPatterns, init)
-}
-
-AndroidUtilPatterns *create_AndroidUtilPatterns_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilPatterns, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilPatterns)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilPrefixPrinter.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilPrefixPrinter.h
deleted file mode 100644
index 38af388ba..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilPrefixPrinter.h
+++ /dev/null
@@ -1,41 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilPrefixPrinter")
-#ifdef RESTRICT_AndroidUtilPrefixPrinter
-#define INCLUDE_ALL_AndroidUtilPrefixPrinter 0
-#else
-#define INCLUDE_ALL_AndroidUtilPrefixPrinter 1
-#endif
-#undef RESTRICT_AndroidUtilPrefixPrinter
-
-#if !defined (AndroidUtilPrefixPrinter_) && (INCLUDE_ALL_AndroidUtilPrefixPrinter || defined(INCLUDE_AndroidUtilPrefixPrinter))
-#define AndroidUtilPrefixPrinter_
-
-#define RESTRICT_AndroidUtilPrinter 1
-#define INCLUDE_AndroidUtilPrinter 1
-#include "android/util/Printer.h"
-
-@interface AndroidUtilPrefixPrinter : NSObject < AndroidUtilPrinter >
-
-#pragma mark Public
-
-+ (id<AndroidUtilPrinter>)createWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                                          withNSString:(NSString *)prefix;
-
-- (void)printlnWithNSString:(NSString *)str;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilPrefixPrinter)
-
-FOUNDATION_EXPORT id<AndroidUtilPrinter> AndroidUtilPrefixPrinter_createWithAndroidUtilPrinter_withNSString_(id<AndroidUtilPrinter> printer, NSString *prefix);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilPrefixPrinter)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilPrefixPrinter")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilPrefixPrinter.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilPrefixPrinter.m
deleted file mode 100644
index 4c49115c7..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilPrefixPrinter.m
+++ /dev/null
@@ -1,97 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilPrefixPrinter.h"
-#include "J2ObjC_source.h"
-#include "android/util/Printer.h"
-
-@interface AndroidUtilPrefixPrinter () {
- @public
-  id<AndroidUtilPrinter> mPrinter_;
-  NSString *mPrefix_;
-}
-
-- (instancetype)initWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                              withNSString:(NSString *)prefix;
-
-@end
-
-J2OBJC_FIELD_SETTER(AndroidUtilPrefixPrinter, mPrinter_, id<AndroidUtilPrinter>)
-J2OBJC_FIELD_SETTER(AndroidUtilPrefixPrinter, mPrefix_, NSString *)
-
-__attribute__((unused)) static void AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(AndroidUtilPrefixPrinter *self, id<AndroidUtilPrinter> printer, NSString *prefix);
-
-__attribute__((unused)) static AndroidUtilPrefixPrinter *new_AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(id<AndroidUtilPrinter> printer, NSString *prefix) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static AndroidUtilPrefixPrinter *create_AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(id<AndroidUtilPrinter> printer, NSString *prefix);
-
-@implementation AndroidUtilPrefixPrinter
-
-+ (id<AndroidUtilPrinter>)createWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                                          withNSString:(NSString *)prefix {
-  return AndroidUtilPrefixPrinter_createWithAndroidUtilPrinter_withNSString_(printer, prefix);
-}
-
-- (instancetype)initWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)printer
-                              withNSString:(NSString *)prefix {
-  AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(self, printer, prefix);
-  return self;
-}
-
-- (void)printlnWithNSString:(NSString *)str {
-  [((id<AndroidUtilPrinter>) nil_chk(mPrinter_)) printlnWithNSString:JreStrcat("$$", mPrefix_, str)];
-}
-
-- (void)dealloc {
-  RELEASE_(mPrinter_);
-  RELEASE_(mPrefix_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LAndroidUtilPrinter;", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(createWithAndroidUtilPrinter:withNSString:);
-  methods[1].selector = @selector(initWithAndroidUtilPrinter:withNSString:);
-  methods[2].selector = @selector(printlnWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mPrinter_", "LAndroidUtilPrinter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mPrefix_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "create", "LAndroidUtilPrinter;LNSString;", "println", "LNSString;" };
-  static const J2ObjcClassInfo _AndroidUtilPrefixPrinter = { "PrefixPrinter", "android.util", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilPrefixPrinter;
-}
-
-@end
-
-id<AndroidUtilPrinter> AndroidUtilPrefixPrinter_createWithAndroidUtilPrinter_withNSString_(id<AndroidUtilPrinter> printer, NSString *prefix) {
-  AndroidUtilPrefixPrinter_initialize();
-  if (prefix == nil || [prefix isEqual:@""]) {
-    return printer;
-  }
-  return create_AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(printer, prefix);
-}
-
-void AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(AndroidUtilPrefixPrinter *self, id<AndroidUtilPrinter> printer, NSString *prefix) {
-  NSObject_init(self);
-  JreStrongAssign(&self->mPrinter_, printer);
-  JreStrongAssign(&self->mPrefix_, prefix);
-}
-
-AndroidUtilPrefixPrinter *new_AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(id<AndroidUtilPrinter> printer, NSString *prefix) {
-  J2OBJC_NEW_IMPL(AndroidUtilPrefixPrinter, initWithAndroidUtilPrinter_withNSString_, printer, prefix)
-}
-
-AndroidUtilPrefixPrinter *create_AndroidUtilPrefixPrinter_initWithAndroidUtilPrinter_withNSString_(id<AndroidUtilPrinter> printer, NSString *prefix) {
-  J2OBJC_CREATE_IMPL(AndroidUtilPrefixPrinter, initWithAndroidUtilPrinter_withNSString_, printer, prefix)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilPrefixPrinter)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilSize.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilSize.h
deleted file mode 100644
index cbc8603a1..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilSize.h
+++ /dev/null
@@ -1,53 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilSize")
-#ifdef RESTRICT_AndroidUtilSize
-#define INCLUDE_ALL_AndroidUtilSize 0
-#else
-#define INCLUDE_ALL_AndroidUtilSize 1
-#endif
-#undef RESTRICT_AndroidUtilSize
-
-#if !defined (AndroidUtilSize_) && (INCLUDE_ALL_AndroidUtilSize || defined(INCLUDE_AndroidUtilSize))
-#define AndroidUtilSize_
-
-@interface AndroidUtilSize : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithInt:(jint)width
-                    withInt:(jint)height;
-
-- (jboolean)isEqual:(id)obj;
-
-- (jint)getHeight;
-
-- (jint)getWidth;
-
-- (NSUInteger)hash;
-
-+ (AndroidUtilSize *)parseSizeWithNSString:(NSString *)string;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilSize)
-
-FOUNDATION_EXPORT void AndroidUtilSize_initWithInt_withInt_(AndroidUtilSize *self, jint width, jint height);
-
-FOUNDATION_EXPORT AndroidUtilSize *new_AndroidUtilSize_initWithInt_withInt_(jint width, jint height) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilSize *create_AndroidUtilSize_initWithInt_withInt_(jint width, jint height);
-
-FOUNDATION_EXPORT AndroidUtilSize *AndroidUtilSize_parseSizeWithNSString_(NSString *string);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilSize)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilSize")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilSize.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilSize.m
deleted file mode 100644
index e33b84cd3..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilSize.m
+++ /dev/null
@@ -1,137 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilSize.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Integer.h"
-#include "java/lang/NumberFormatException.h"
-
-@interface AndroidUtilSize () {
- @public
-  jint mWidth_;
-  jint mHeight_;
-}
-
-+ (JavaLangNumberFormatException *)invalidSizeWithNSString:(NSString *)s;
-
-@end
-
-__attribute__((unused)) static JavaLangNumberFormatException *AndroidUtilSize_invalidSizeWithNSString_(NSString *s);
-
-@implementation AndroidUtilSize
-
-- (instancetype)initWithInt:(jint)width
-                    withInt:(jint)height {
-  AndroidUtilSize_initWithInt_withInt_(self, width, height);
-  return self;
-}
-
-- (jint)getWidth {
-  return mWidth_;
-}
-
-- (jint)getHeight {
-  return mHeight_;
-}
-
-- (jboolean)isEqual:(id)obj {
-  if (obj == nil) {
-    return false;
-  }
-  if (self == obj) {
-    return true;
-  }
-  if ([obj isKindOfClass:[AndroidUtilSize class]]) {
-    AndroidUtilSize *other = (AndroidUtilSize *) cast_chk(obj, [AndroidUtilSize class]);
-    return mWidth_ == other->mWidth_ && mHeight_ == other->mHeight_;
-  }
-  return false;
-}
-
-- (NSString *)description {
-  return JreStrcat("ICI", mWidth_, 'x', mHeight_);
-}
-
-+ (JavaLangNumberFormatException *)invalidSizeWithNSString:(NSString *)s {
-  return AndroidUtilSize_invalidSizeWithNSString_(s);
-}
-
-+ (AndroidUtilSize *)parseSizeWithNSString:(NSString *)string {
-  return AndroidUtilSize_parseSizeWithNSString_(string);
-}
-
-- (NSUInteger)hash {
-  return mHeight_ ^ ((JreLShift32(mWidth_, (JavaLangInteger_SIZE / 2))) | (JreURShift32(mWidth_, (JavaLangInteger_SIZE / 2))));
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangNumberFormatException;", 0xa, 4, 5, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilSize;", 0x9, 6, 5, 7, -1, -1, -1 },
-    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithInt:withInt:);
-  methods[1].selector = @selector(getWidth);
-  methods[2].selector = @selector(getHeight);
-  methods[3].selector = @selector(isEqual:);
-  methods[4].selector = @selector(description);
-  methods[5].selector = @selector(invalidSizeWithNSString:);
-  methods[6].selector = @selector(parseSizeWithNSString:);
-  methods[7].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mWidth_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mHeight_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "II", "equals", "LNSObject;", "toString", "invalidSize", "LNSString;", "parseSize", "LJavaLangNumberFormatException;", "hashCode" };
-  static const J2ObjcClassInfo _AndroidUtilSize = { "Size", "android.util", ptrTable, methods, fields, 7, 0x11, 8, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilSize;
-}
-
-@end
-
-void AndroidUtilSize_initWithInt_withInt_(AndroidUtilSize *self, jint width, jint height) {
-  NSObject_init(self);
-  self->mWidth_ = width;
-  self->mHeight_ = height;
-}
-
-AndroidUtilSize *new_AndroidUtilSize_initWithInt_withInt_(jint width, jint height) {
-  J2OBJC_NEW_IMPL(AndroidUtilSize, initWithInt_withInt_, width, height)
-}
-
-AndroidUtilSize *create_AndroidUtilSize_initWithInt_withInt_(jint width, jint height) {
-  J2OBJC_CREATE_IMPL(AndroidUtilSize, initWithInt_withInt_, width, height)
-}
-
-JavaLangNumberFormatException *AndroidUtilSize_invalidSizeWithNSString_(NSString *s) {
-  AndroidUtilSize_initialize();
-  @throw create_JavaLangNumberFormatException_initWithNSString_(JreStrcat("$$C", @"Invalid Size: \"", s, '"'));
-}
-
-AndroidUtilSize *AndroidUtilSize_parseSizeWithNSString_(NSString *string) {
-  AndroidUtilSize_initialize();
-  jint sep_ix = [((NSString *) nil_chk(string)) java_indexOf:'*'];
-  if (sep_ix < 0) {
-    sep_ix = [string java_indexOf:'x'];
-  }
-  if (sep_ix < 0) {
-    @throw AndroidUtilSize_invalidSizeWithNSString_(string);
-  }
-  @try {
-    return create_AndroidUtilSize_initWithInt_withInt_(JavaLangInteger_parseIntWithNSString_([string java_substring:0 endIndex:sep_ix]), JavaLangInteger_parseIntWithNSString_([string java_substring:sep_ix + 1]));
-  }
-  @catch (JavaLangNumberFormatException *e) {
-    @throw AndroidUtilSize_invalidSizeWithNSString_(string);
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilSize)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilSizeF.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilSizeF.h
deleted file mode 100644
index 47d25ab52..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilSizeF.h
+++ /dev/null
@@ -1,58 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilSizeF")
-#ifdef RESTRICT_AndroidUtilSizeF
-#define INCLUDE_ALL_AndroidUtilSizeF 0
-#else
-#define INCLUDE_ALL_AndroidUtilSizeF 1
-#endif
-#undef RESTRICT_AndroidUtilSizeF
-
-#if !defined (AndroidUtilSizeF_) && (INCLUDE_ALL_AndroidUtilSizeF || defined(INCLUDE_AndroidUtilSizeF))
-#define AndroidUtilSizeF_
-
-@interface AndroidUtilSizeF : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithFloat:(jfloat)width
-                    withFloat:(jfloat)height;
-
-+ (jfloat)checkArgumentFiniteWithFloat:(jfloat)value
-                          withNSString:(NSString *)valueName;
-
-- (jboolean)isEqual:(id)obj;
-
-- (jfloat)getHeight;
-
-- (jfloat)getWidth;
-
-- (NSUInteger)hash;
-
-+ (AndroidUtilSizeF *)parseSizeFWithNSString:(NSString *)string;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilSizeF)
-
-FOUNDATION_EXPORT void AndroidUtilSizeF_initWithFloat_withFloat_(AndroidUtilSizeF *self, jfloat width, jfloat height);
-
-FOUNDATION_EXPORT AndroidUtilSizeF *new_AndroidUtilSizeF_initWithFloat_withFloat_(jfloat width, jfloat height) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilSizeF *create_AndroidUtilSizeF_initWithFloat_withFloat_(jfloat width, jfloat height);
-
-FOUNDATION_EXPORT jfloat AndroidUtilSizeF_checkArgumentFiniteWithFloat_withNSString_(jfloat value, NSString *valueName);
-
-FOUNDATION_EXPORT AndroidUtilSizeF *AndroidUtilSizeF_parseSizeFWithNSString_(NSString *string);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilSizeF)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilSizeF")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilSizeF.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilSizeF.m
deleted file mode 100644
index 8c0483f02..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilSizeF.m
+++ /dev/null
@@ -1,160 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilSizeF.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Float.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/NumberFormatException.h"
-
-@interface AndroidUtilSizeF () {
- @public
-  jfloat mWidth_;
-  jfloat mHeight_;
-}
-
-+ (JavaLangNumberFormatException *)invalidSizeFWithNSString:(NSString *)s;
-
-@end
-
-__attribute__((unused)) static JavaLangNumberFormatException *AndroidUtilSizeF_invalidSizeFWithNSString_(NSString *s);
-
-@implementation AndroidUtilSizeF
-
-- (instancetype)initWithFloat:(jfloat)width
-                    withFloat:(jfloat)height {
-  AndroidUtilSizeF_initWithFloat_withFloat_(self, width, height);
-  return self;
-}
-
-+ (jfloat)checkArgumentFiniteWithFloat:(jfloat)value
-                          withNSString:(NSString *)valueName {
-  return AndroidUtilSizeF_checkArgumentFiniteWithFloat_withNSString_(value, valueName);
-}
-
-- (jfloat)getWidth {
-  return mWidth_;
-}
-
-- (jfloat)getHeight {
-  return mHeight_;
-}
-
-- (jboolean)isEqual:(id)obj {
-  if (obj == nil) {
-    return false;
-  }
-  if (self == obj) {
-    return true;
-  }
-  if ([obj isKindOfClass:[AndroidUtilSizeF class]]) {
-    AndroidUtilSizeF *other = (AndroidUtilSizeF *) cast_chk(obj, [AndroidUtilSizeF class]);
-    return mWidth_ == other->mWidth_ && mHeight_ == other->mHeight_;
-  }
-  return false;
-}
-
-- (NSString *)description {
-  return JreStrcat("FCF", mWidth_, 'x', mHeight_);
-}
-
-+ (JavaLangNumberFormatException *)invalidSizeFWithNSString:(NSString *)s {
-  return AndroidUtilSizeF_invalidSizeFWithNSString_(s);
-}
-
-+ (AndroidUtilSizeF *)parseSizeFWithNSString:(NSString *)string {
-  return AndroidUtilSizeF_parseSizeFWithNSString_(string);
-}
-
-- (NSUInteger)hash {
-  return JavaLangFloat_floatToIntBitsWithFloat_(mWidth_) ^ JavaLangFloat_floatToIntBitsWithFloat_(mHeight_);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "F", 0x9, 1, 2, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangNumberFormatException;", 0xa, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilSizeF;", 0x9, 8, 7, 9, -1, -1, -1 },
-    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithFloat:withFloat:);
-  methods[1].selector = @selector(checkArgumentFiniteWithFloat:withNSString:);
-  methods[2].selector = @selector(getWidth);
-  methods[3].selector = @selector(getHeight);
-  methods[4].selector = @selector(isEqual:);
-  methods[5].selector = @selector(description);
-  methods[6].selector = @selector(invalidSizeFWithNSString:);
-  methods[7].selector = @selector(parseSizeFWithNSString:);
-  methods[8].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mWidth_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "mHeight_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "FF", "checkArgumentFinite", "FLNSString;", "equals", "LNSObject;", "toString", "invalidSizeF", "LNSString;", "parseSizeF", "LJavaLangNumberFormatException;", "hashCode" };
-  static const J2ObjcClassInfo _AndroidUtilSizeF = { "SizeF", "android.util", ptrTable, methods, fields, 7, 0x11, 9, 2, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilSizeF;
-}
-
-@end
-
-void AndroidUtilSizeF_initWithFloat_withFloat_(AndroidUtilSizeF *self, jfloat width, jfloat height) {
-  NSObject_init(self);
-  self->mWidth_ = AndroidUtilSizeF_checkArgumentFiniteWithFloat_withNSString_(width, @"width");
-  self->mHeight_ = AndroidUtilSizeF_checkArgumentFiniteWithFloat_withNSString_(height, @"height");
-}
-
-AndroidUtilSizeF *new_AndroidUtilSizeF_initWithFloat_withFloat_(jfloat width, jfloat height) {
-  J2OBJC_NEW_IMPL(AndroidUtilSizeF, initWithFloat_withFloat_, width, height)
-}
-
-AndroidUtilSizeF *create_AndroidUtilSizeF_initWithFloat_withFloat_(jfloat width, jfloat height) {
-  J2OBJC_CREATE_IMPL(AndroidUtilSizeF, initWithFloat_withFloat_, width, height)
-}
-
-jfloat AndroidUtilSizeF_checkArgumentFiniteWithFloat_withNSString_(jfloat value, NSString *valueName) {
-  AndroidUtilSizeF_initialize();
-  if (JavaLangFloat_isNaNWithFloat_(value)) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", valueName, @" must not be NaN"));
-  }
-  else if (JavaLangFloat_isInfiniteWithFloat_(value)) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", valueName, @" must not be infinite"));
-  }
-  return value;
-}
-
-JavaLangNumberFormatException *AndroidUtilSizeF_invalidSizeFWithNSString_(NSString *s) {
-  AndroidUtilSizeF_initialize();
-  @throw create_JavaLangNumberFormatException_initWithNSString_(JreStrcat("$$C", @"Invalid SizeF: \"", s, '"'));
-}
-
-AndroidUtilSizeF *AndroidUtilSizeF_parseSizeFWithNSString_(NSString *string) {
-  AndroidUtilSizeF_initialize();
-  if (string == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"string must not be null");
-  jint sep_ix = [string java_indexOf:'*'];
-  if (sep_ix < 0) {
-    sep_ix = [string java_indexOf:'x'];
-  }
-  if (sep_ix < 0) {
-    @throw AndroidUtilSizeF_invalidSizeFWithNSString_(string);
-  }
-  @try {
-    return create_AndroidUtilSizeF_initWithFloat_withFloat_(JavaLangFloat_parseFloatWithNSString_([string java_substring:0 endIndex:sep_ix]), JavaLangFloat_parseFloatWithNSString_([string java_substring:sep_ix + 1]));
-  }
-  @catch (JavaLangNumberFormatException *e) {
-    @throw AndroidUtilSizeF_invalidSizeFWithNSString_(string);
-  }
-  @catch (JavaLangIllegalArgumentException *e) {
-    @throw AndroidUtilSizeF_invalidSizeFWithNSString_(string);
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilSizeF)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilTimeUtils.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilTimeUtils.h
deleted file mode 100644
index 3336d9fb9..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilTimeUtils.h
+++ /dev/null
@@ -1,53 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilTimeUtils")
-#ifdef RESTRICT_AndroidUtilTimeUtils
-#define INCLUDE_ALL_AndroidUtilTimeUtils 0
-#else
-#define INCLUDE_ALL_AndroidUtilTimeUtils 1
-#endif
-#undef RESTRICT_AndroidUtilTimeUtils
-
-#if !defined (AndroidUtilTimeUtils_) && (INCLUDE_ALL_AndroidUtilTimeUtils || defined(INCLUDE_AndroidUtilTimeUtils))
-#define AndroidUtilTimeUtils_
-
-@class JavaLangStringBuilder;
-
-@interface AndroidUtilTimeUtils : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (void)formatDurationWithLong:(jlong)duration
-     withJavaLangStringBuilder:(JavaLangStringBuilder *)builder;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilTimeUtils)
-
-inline jint AndroidUtilTimeUtils_get_HUNDRED_DAY_FIELD_LEN();
-#define AndroidUtilTimeUtils_HUNDRED_DAY_FIELD_LEN 19
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidUtilTimeUtils, HUNDRED_DAY_FIELD_LEN, jint)
-
-inline jlong AndroidUtilTimeUtils_get_NANOS_PER_MS();
-#define AndroidUtilTimeUtils_NANOS_PER_MS 1000000LL
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidUtilTimeUtils, NANOS_PER_MS, jlong)
-
-FOUNDATION_EXPORT void AndroidUtilTimeUtils_init(AndroidUtilTimeUtils *self);
-
-FOUNDATION_EXPORT AndroidUtilTimeUtils *new_AndroidUtilTimeUtils_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilTimeUtils *create_AndroidUtilTimeUtils_init();
-
-FOUNDATION_EXPORT void AndroidUtilTimeUtils_formatDurationWithLong_withJavaLangStringBuilder_(jlong duration, JavaLangStringBuilder *builder);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilTimeUtils)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilTimeUtils")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilTimeUtils.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilTimeUtils.m
deleted file mode 100644
index d818d292c..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilTimeUtils.m
+++ /dev/null
@@ -1,292 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilTimeUtils.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Math.h"
-#include "java/lang/StringBuilder.h"
-
-@interface AndroidUtilTimeUtils ()
-
-+ (jint)accumFieldWithInt:(jint)amt
-                  withInt:(jint)suffix
-              withBoolean:(jboolean)always
-                  withInt:(jint)zeropad;
-
-+ (jint)printFieldLockedWithCharArray:(IOSCharArray *)formatStr
-                              withInt:(jint)amt
-                             withChar:(jchar)suffix
-                              withInt:(jint)pos
-                          withBoolean:(jboolean)always
-                              withInt:(jint)zeropad;
-
-+ (jint)formatDurationLockedWithLong:(jlong)duration
-                             withInt:(jint)fieldLen;
-
-@end
-
-inline jint AndroidUtilTimeUtils_get_SECONDS_PER_MINUTE();
-#define AndroidUtilTimeUtils_SECONDS_PER_MINUTE 60
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidUtilTimeUtils, SECONDS_PER_MINUTE, jint)
-
-inline jint AndroidUtilTimeUtils_get_SECONDS_PER_HOUR();
-#define AndroidUtilTimeUtils_SECONDS_PER_HOUR 3600
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidUtilTimeUtils, SECONDS_PER_HOUR, jint)
-
-inline jint AndroidUtilTimeUtils_get_SECONDS_PER_DAY();
-#define AndroidUtilTimeUtils_SECONDS_PER_DAY 86400
-J2OBJC_STATIC_FIELD_CONSTANT(AndroidUtilTimeUtils, SECONDS_PER_DAY, jint)
-
-inline id AndroidUtilTimeUtils_get_sFormatSync();
-static id AndroidUtilTimeUtils_sFormatSync;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilTimeUtils, sFormatSync, id)
-
-inline IOSCharArray *AndroidUtilTimeUtils_get_sFormatStr();
-inline IOSCharArray *AndroidUtilTimeUtils_set_sFormatStr(IOSCharArray *value);
-static IOSCharArray *AndroidUtilTimeUtils_sFormatStr;
-J2OBJC_STATIC_FIELD_OBJ(AndroidUtilTimeUtils, sFormatStr, IOSCharArray *)
-
-inline IOSCharArray *AndroidUtilTimeUtils_get_sTmpFormatStr();
-inline IOSCharArray *AndroidUtilTimeUtils_set_sTmpFormatStr(IOSCharArray *value);
-static IOSCharArray *AndroidUtilTimeUtils_sTmpFormatStr;
-J2OBJC_STATIC_FIELD_OBJ(AndroidUtilTimeUtils, sTmpFormatStr, IOSCharArray *)
-
-__attribute__((unused)) static jint AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(jint amt, jint suffix, jboolean always, jint zeropad);
-
-__attribute__((unused)) static jint AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(IOSCharArray *formatStr, jint amt, jchar suffix, jint pos, jboolean always, jint zeropad);
-
-__attribute__((unused)) static jint AndroidUtilTimeUtils_formatDurationLockedWithLong_withInt_(jlong duration, jint fieldLen);
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilTimeUtils)
-
-@implementation AndroidUtilTimeUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilTimeUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jint)accumFieldWithInt:(jint)amt
-                  withInt:(jint)suffix
-              withBoolean:(jboolean)always
-                  withInt:(jint)zeropad {
-  return AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(amt, suffix, always, zeropad);
-}
-
-+ (jint)printFieldLockedWithCharArray:(IOSCharArray *)formatStr
-                              withInt:(jint)amt
-                             withChar:(jchar)suffix
-                              withInt:(jint)pos
-                          withBoolean:(jboolean)always
-                              withInt:(jint)zeropad {
-  return AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(formatStr, amt, suffix, pos, always, zeropad);
-}
-
-+ (jint)formatDurationLockedWithLong:(jlong)duration
-                             withInt:(jint)fieldLen {
-  return AndroidUtilTimeUtils_formatDurationLockedWithLong_withInt_(duration, fieldLen);
-}
-
-+ (void)formatDurationWithLong:(jlong)duration
-     withJavaLangStringBuilder:(JavaLangStringBuilder *)builder {
-  AndroidUtilTimeUtils_formatDurationWithLong_withJavaLangStringBuilder_(duration, builder);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 2, 3, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(accumFieldWithInt:withInt:withBoolean:withInt:);
-  methods[2].selector = @selector(printFieldLockedWithCharArray:withInt:withChar:withInt:withBoolean:withInt:);
-  methods[3].selector = @selector(formatDurationLockedWithLong:withInt:);
-  methods[4].selector = @selector(formatDurationWithLong:withJavaLangStringBuilder:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "HUNDRED_DAY_FIELD_LEN", "I", .constantValue.asInt = AndroidUtilTimeUtils_HUNDRED_DAY_FIELD_LEN, 0x19, -1, -1, -1, -1 },
-    { "SECONDS_PER_MINUTE", "I", .constantValue.asInt = AndroidUtilTimeUtils_SECONDS_PER_MINUTE, 0x1a, -1, -1, -1, -1 },
-    { "SECONDS_PER_HOUR", "I", .constantValue.asInt = AndroidUtilTimeUtils_SECONDS_PER_HOUR, 0x1a, -1, -1, -1, -1 },
-    { "SECONDS_PER_DAY", "I", .constantValue.asInt = AndroidUtilTimeUtils_SECONDS_PER_DAY, 0x1a, -1, -1, -1, -1 },
-    { "NANOS_PER_MS", "J", .constantValue.asLong = AndroidUtilTimeUtils_NANOS_PER_MS, 0x19, -1, -1, -1, -1 },
-    { "sFormatSync", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
-    { "sFormatStr", "[C", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
-    { "sTmpFormatStr", "[C", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
-  };
-  static const void *ptrTable[] = { "accumField", "IIZI", "printFieldLocked", "[CICIZI", "formatDurationLocked", "JI", "formatDuration", "JLJavaLangStringBuilder;", &AndroidUtilTimeUtils_sFormatSync, &AndroidUtilTimeUtils_sFormatStr, &AndroidUtilTimeUtils_sTmpFormatStr };
-  static const J2ObjcClassInfo _AndroidUtilTimeUtils = { "TimeUtils", "android.util", ptrTable, methods, fields, 7, 0x1, 5, 8, -1, -1, -1, -1, -1 };
-  return &_AndroidUtilTimeUtils;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilTimeUtils class]) {
-    JreStrongAssignAndConsume(&AndroidUtilTimeUtils_sFormatSync, new_NSObject_init());
-    JreStrongAssignAndConsume(&AndroidUtilTimeUtils_sFormatStr, [IOSCharArray newArrayWithLength:AndroidUtilTimeUtils_HUNDRED_DAY_FIELD_LEN + 10]);
-    JreStrongAssignAndConsume(&AndroidUtilTimeUtils_sTmpFormatStr, [IOSCharArray newArrayWithLength:AndroidUtilTimeUtils_HUNDRED_DAY_FIELD_LEN + 10]);
-    J2OBJC_SET_INITIALIZED(AndroidUtilTimeUtils)
-  }
-}
-
-@end
-
-void AndroidUtilTimeUtils_init(AndroidUtilTimeUtils *self) {
-  NSObject_init(self);
-}
-
-AndroidUtilTimeUtils *new_AndroidUtilTimeUtils_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilTimeUtils, init)
-}
-
-AndroidUtilTimeUtils *create_AndroidUtilTimeUtils_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilTimeUtils, init)
-}
-
-jint AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(jint amt, jint suffix, jboolean always, jint zeropad) {
-  AndroidUtilTimeUtils_initialize();
-  if (amt > 999) {
-    jint num = 0;
-    while (amt != 0) {
-      num++;
-      amt /= 10;
-    }
-    return num + suffix;
-  }
-  else {
-    if (amt > 99 || (always && zeropad >= 3)) {
-      return 3 + suffix;
-    }
-    if (amt > 9 || (always && zeropad >= 2)) {
-      return 2 + suffix;
-    }
-    if (always || amt > 0) {
-      return 1 + suffix;
-    }
-  }
-  return 0;
-}
-
-jint AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(IOSCharArray *formatStr, jint amt, jchar suffix, jint pos, jboolean always, jint zeropad) {
-  AndroidUtilTimeUtils_initialize();
-  if (always || amt > 0) {
-    jint startPos = pos;
-    if (amt > 999) {
-      jint tmp = 0;
-      while (amt != 0 && tmp < ((IOSCharArray *) nil_chk(AndroidUtilTimeUtils_sTmpFormatStr))->size_) {
-        jint dig = amt % 10;
-        *IOSCharArray_GetRef(nil_chk(AndroidUtilTimeUtils_sTmpFormatStr), tmp) = (jchar) (dig + '0');
-        tmp++;
-        amt /= 10;
-      }
-      tmp--;
-      while (tmp >= 0) {
-        *IOSCharArray_GetRef(nil_chk(formatStr), pos) = IOSCharArray_Get(nil_chk(AndroidUtilTimeUtils_sTmpFormatStr), tmp);
-        pos++;
-        tmp--;
-      }
-    }
-    else {
-      if ((always && zeropad >= 3) || amt > 99) {
-        jint dig = amt / 100;
-        *IOSCharArray_GetRef(nil_chk(formatStr), pos) = (jchar) (dig + '0');
-        pos++;
-        amt -= (dig * 100);
-      }
-      if ((always && zeropad >= 2) || amt > 9 || startPos != pos) {
-        jint dig = amt / 10;
-        *IOSCharArray_GetRef(nil_chk(formatStr), pos) = (jchar) (dig + '0');
-        pos++;
-        amt -= (dig * 10);
-      }
-      *IOSCharArray_GetRef(nil_chk(formatStr), pos) = (jchar) (amt + '0');
-      pos++;
-    }
-    *IOSCharArray_GetRef(nil_chk(formatStr), pos) = suffix;
-    pos++;
-  }
-  return pos;
-}
-
-jint AndroidUtilTimeUtils_formatDurationLockedWithLong_withInt_(jlong duration, jint fieldLen) {
-  AndroidUtilTimeUtils_initialize();
-  if (((IOSCharArray *) nil_chk(AndroidUtilTimeUtils_sFormatStr))->size_ < fieldLen) {
-    JreStrongAssignAndConsume(&AndroidUtilTimeUtils_sFormatStr, [IOSCharArray newArrayWithLength:fieldLen]);
-  }
-  IOSCharArray *formatStr = AndroidUtilTimeUtils_sFormatStr;
-  if (duration == 0) {
-    jint pos = 0;
-    fieldLen -= 1;
-    while (pos < fieldLen) {
-      *IOSCharArray_GetRef(formatStr, pos++) = ' ';
-    }
-    *IOSCharArray_GetRef(formatStr, pos) = '0';
-    return pos + 1;
-  }
-  jchar prefix;
-  if (duration > 0) {
-    prefix = '+';
-  }
-  else {
-    prefix = '-';
-    duration = -duration;
-  }
-  jint millis = (jint) (duration % 1000);
-  jint seconds = JreFpToInt(JavaLangMath_floorWithDouble_(duration / 1000));
-  jint days = 0;
-  jint hours = 0;
-  jint minutes = 0;
-  if (seconds > AndroidUtilTimeUtils_SECONDS_PER_DAY) {
-    days = seconds / AndroidUtilTimeUtils_SECONDS_PER_DAY;
-    seconds -= days * AndroidUtilTimeUtils_SECONDS_PER_DAY;
-  }
-  if (seconds > AndroidUtilTimeUtils_SECONDS_PER_HOUR) {
-    hours = seconds / AndroidUtilTimeUtils_SECONDS_PER_HOUR;
-    seconds -= hours * AndroidUtilTimeUtils_SECONDS_PER_HOUR;
-  }
-  if (seconds > AndroidUtilTimeUtils_SECONDS_PER_MINUTE) {
-    minutes = seconds / AndroidUtilTimeUtils_SECONDS_PER_MINUTE;
-    seconds -= minutes * AndroidUtilTimeUtils_SECONDS_PER_MINUTE;
-  }
-  jint pos = 0;
-  if (fieldLen != 0) {
-    jint myLen = AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(days, 1, false, 0);
-    myLen += AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(hours, 1, myLen > 0, 2);
-    myLen += AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(minutes, 1, myLen > 0, 2);
-    myLen += AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(seconds, 1, myLen > 0, 2);
-    myLen += AndroidUtilTimeUtils_accumFieldWithInt_withInt_withBoolean_withInt_(millis, 2, true, myLen > 0 ? 3 : 0) + 1;
-    while (myLen < fieldLen) {
-      *IOSCharArray_GetRef(formatStr, pos) = ' ';
-      pos++;
-      myLen++;
-    }
-  }
-  *IOSCharArray_GetRef(formatStr, pos) = prefix;
-  pos++;
-  jint start = pos;
-  jboolean zeropad = fieldLen != 0;
-  pos = AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(formatStr, days, 'd', pos, false, 0);
-  pos = AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(formatStr, hours, 'h', pos, pos != start, zeropad ? 2 : 0);
-  pos = AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(formatStr, minutes, 'm', pos, pos != start, zeropad ? 2 : 0);
-  pos = AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(formatStr, seconds, 's', pos, pos != start, zeropad ? 2 : 0);
-  pos = AndroidUtilTimeUtils_printFieldLockedWithCharArray_withInt_withChar_withInt_withBoolean_withInt_(formatStr, millis, 'm', pos, true, (zeropad && pos != start) ? 3 : 0);
-  *IOSCharArray_GetRef(formatStr, pos) = 's';
-  return pos + 1;
-}
-
-void AndroidUtilTimeUtils_formatDurationWithLong_withJavaLangStringBuilder_(jlong duration, JavaLangStringBuilder *builder) {
-  AndroidUtilTimeUtils_initialize();
-  @synchronized(AndroidUtilTimeUtils_sFormatSync) {
-    jint len = AndroidUtilTimeUtils_formatDurationLockedWithLong_withInt_(duration, 0);
-    [((JavaLangStringBuilder *) nil_chk(builder)) appendWithCharArray:AndroidUtilTimeUtils_sFormatStr withInt:0 withInt:len];
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilTimeUtils)
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilXml.h b/core/iostest/daggerframework/main/androidbase/AndroidUtilXml.h
deleted file mode 100644
index 6a64bf064..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilXml.h
+++ /dev/null
@@ -1,151 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_AndroidUtilXml")
-#ifdef RESTRICT_AndroidUtilXml
-#define INCLUDE_ALL_AndroidUtilXml 0
-#else
-#define INCLUDE_ALL_AndroidUtilXml 1
-#endif
-#undef RESTRICT_AndroidUtilXml
-
-#if !defined (AndroidUtilXml_) && (INCLUDE_ALL_AndroidUtilXml || defined(INCLUDE_AndroidUtilXml))
-#define AndroidUtilXml_
-
-@class AndroidUtilXml_Encoding;
-@protocol OrgXmlpullV1XmlPullParser;
-@protocol OrgXmlpullV1XmlSerializer;
-
-@interface AndroidUtilXml : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (AndroidUtilXml_Encoding *)findEncodingByNameWithNSString:(NSString *)encodingName;
-
-+ (id<OrgXmlpullV1XmlPullParser>)newPullParser OBJC_METHOD_FAMILY_NONE;
-
-+ (id<OrgXmlpullV1XmlSerializer>)newSerializer OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(AndroidUtilXml)
-
-FOUNDATION_EXPORT void AndroidUtilXml_init(AndroidUtilXml *self);
-
-FOUNDATION_EXPORT AndroidUtilXml *new_AndroidUtilXml_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilXml *create_AndroidUtilXml_init();
-
-FOUNDATION_EXPORT id<OrgXmlpullV1XmlPullParser> AndroidUtilXml_newPullParser();
-
-FOUNDATION_EXPORT id<OrgXmlpullV1XmlSerializer> AndroidUtilXml_newSerializer();
-
-FOUNDATION_EXPORT AndroidUtilXml_Encoding *AndroidUtilXml_findEncodingByNameWithNSString_(NSString *encodingName);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilXml)
-
-#endif
-
-#if !defined (AndroidUtilXml_XmlSerializerFactory_) && (INCLUDE_ALL_AndroidUtilXml || defined(INCLUDE_AndroidUtilXml_XmlSerializerFactory))
-#define AndroidUtilXml_XmlSerializerFactory_
-
-@class OrgXmlpullV1XmlPullParserFactory;
-
-@interface AndroidUtilXml_XmlSerializerFactory : NSObject
-
-#pragma mark Package-Private
-
-- (instancetype)init;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilXml_XmlSerializerFactory)
-
-inline NSString *AndroidUtilXml_XmlSerializerFactory_get_TYPE();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT NSString *AndroidUtilXml_XmlSerializerFactory_TYPE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilXml_XmlSerializerFactory, TYPE, NSString *)
-
-inline OrgXmlpullV1XmlPullParserFactory *AndroidUtilXml_XmlSerializerFactory_get_instance();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT OrgXmlpullV1XmlPullParserFactory *AndroidUtilXml_XmlSerializerFactory_instance;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidUtilXml_XmlSerializerFactory, instance, OrgXmlpullV1XmlPullParserFactory *)
-
-FOUNDATION_EXPORT void AndroidUtilXml_XmlSerializerFactory_init(AndroidUtilXml_XmlSerializerFactory *self);
-
-FOUNDATION_EXPORT AndroidUtilXml_XmlSerializerFactory *new_AndroidUtilXml_XmlSerializerFactory_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT AndroidUtilXml_XmlSerializerFactory *create_AndroidUtilXml_XmlSerializerFactory_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilXml_XmlSerializerFactory)
-
-#endif
-
-#if !defined (AndroidUtilXml_Encoding_) && (INCLUDE_ALL_AndroidUtilXml || defined(INCLUDE_AndroidUtilXml_Encoding))
-#define AndroidUtilXml_Encoding_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, AndroidUtilXml_Encoding_Enum) {
-  AndroidUtilXml_Encoding_Enum_US_ASCII = 0,
-  AndroidUtilXml_Encoding_Enum_UTF_8 = 1,
-  AndroidUtilXml_Encoding_Enum_UTF_16 = 2,
-  AndroidUtilXml_Encoding_Enum_ISO_8859_1 = 3,
-};
-
-@interface AndroidUtilXml_Encoding : JavaLangEnum < NSCopying > {
- @public
-  NSString *expatName_;
-}
-
-#pragma mark Public
-
-+ (AndroidUtilXml_Encoding *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(AndroidUtilXml_Encoding)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_values_[];
-
-inline AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_get_US_ASCII();
-J2OBJC_ENUM_CONSTANT(AndroidUtilXml_Encoding, US_ASCII)
-
-inline AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_get_UTF_8();
-J2OBJC_ENUM_CONSTANT(AndroidUtilXml_Encoding, UTF_8)
-
-inline AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_get_UTF_16();
-J2OBJC_ENUM_CONSTANT(AndroidUtilXml_Encoding, UTF_16)
-
-inline AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_get_ISO_8859_1();
-J2OBJC_ENUM_CONSTANT(AndroidUtilXml_Encoding, ISO_8859_1)
-
-J2OBJC_FIELD_SETTER(AndroidUtilXml_Encoding, expatName_, NSString *)
-
-FOUNDATION_EXPORT IOSObjectArray *AndroidUtilXml_Encoding_values();
-
-FOUNDATION_EXPORT AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilXml_Encoding)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_AndroidUtilXml")
diff --git a/core/iostest/daggerframework/main/androidbase/AndroidUtilXml.m b/core/iostest/daggerframework/main/androidbase/AndroidUtilXml.m
deleted file mode 100644
index 1f8a4749a..000000000
--- a/core/iostest/daggerframework/main/androidbase/AndroidUtilXml.m
+++ /dev/null
@@ -1,265 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidUtilXml.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/UnsupportedEncodingException.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/RuntimeException.h"
-#include "org/xmlpull/v1/XmlPullParser.h"
-#include "org/xmlpull/v1/XmlPullParserException.h"
-#include "org/xmlpull/v1/XmlPullParserFactory.h"
-#include "org/xmlpull/v1/XmlSerializer.h"
-
-__attribute__((unused)) static void AndroidUtilXml_Encoding_initWithNSString_withNSString_withInt_(AndroidUtilXml_Encoding *self, NSString *expatName, NSString *__name, jint __ordinal);
-
-@implementation AndroidUtilXml
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilXml_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id<OrgXmlpullV1XmlPullParser>)newPullParser {
-  return AndroidUtilXml_newPullParser();
-}
-
-+ (id<OrgXmlpullV1XmlSerializer>)newSerializer {
-  return AndroidUtilXml_newSerializer();
-}
-
-+ (AndroidUtilXml_Encoding *)findEncodingByNameWithNSString:(NSString *)encodingName {
-  return AndroidUtilXml_findEncodingByNameWithNSString_(encodingName);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlPullParser;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilXml_Encoding;", 0x9, 0, 1, 2, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(newPullParser);
-  methods[2].selector = @selector(newSerializer);
-  methods[3].selector = @selector(findEncodingByNameWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "findEncodingByName", "LNSString;", "LJavaIoUnsupportedEncodingException;", "LAndroidUtilXml_XmlSerializerFactory;LAndroidUtilXml_Encoding;" };
-  static const J2ObjcClassInfo _AndroidUtilXml = { "Xml", "android.util", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, 3, -1, -1, -1 };
-  return &_AndroidUtilXml;
-}
-
-@end
-
-void AndroidUtilXml_init(AndroidUtilXml *self) {
-  NSObject_init(self);
-}
-
-AndroidUtilXml *new_AndroidUtilXml_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilXml, init)
-}
-
-AndroidUtilXml *create_AndroidUtilXml_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilXml, init)
-}
-
-id<OrgXmlpullV1XmlPullParser> AndroidUtilXml_newPullParser() {
-  AndroidUtilXml_initialize();
-  @try {
-    id<OrgXmlpullV1XmlPullParser> xmlPullParser = [((OrgXmlpullV1XmlPullParserFactory *) nil_chk(OrgXmlpullV1XmlPullParserFactory_newInstance())) newPullParser];
-    return xmlPullParser;
-  }
-  @catch (OrgXmlpullV1XmlPullParserException *e) {
-    @throw create_JavaLangRuntimeException_initWithNSException_(e);
-  }
-}
-
-id<OrgXmlpullV1XmlSerializer> AndroidUtilXml_newSerializer() {
-  AndroidUtilXml_initialize();
-  @try {
-    return [((OrgXmlpullV1XmlPullParserFactory *) nil_chk(JreLoadStatic(AndroidUtilXml_XmlSerializerFactory, instance))) newSerializer];
-  }
-  @catch (OrgXmlpullV1XmlPullParserException *e) {
-    @throw create_JavaLangAssertionError_initWithId_(e);
-  }
-}
-
-AndroidUtilXml_Encoding *AndroidUtilXml_findEncodingByNameWithNSString_(NSString *encodingName) {
-  AndroidUtilXml_initialize();
-  if (encodingName == nil) {
-    return JreLoadEnum(AndroidUtilXml_Encoding, UTF_8);
-  }
-  {
-    IOSObjectArray *a__ = AndroidUtilXml_Encoding_values();
-    AndroidUtilXml_Encoding * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
-    AndroidUtilXml_Encoding * const *e__ = b__ + a__->size_;
-    while (b__ < e__) {
-      AndroidUtilXml_Encoding *encoding = *b__++;
-      if ([((NSString *) nil_chk(((AndroidUtilXml_Encoding *) nil_chk(encoding))->expatName_)) java_equalsIgnoreCase:encodingName]) return encoding;
-    }
-  }
-  @throw create_JavaIoUnsupportedEncodingException_initWithNSString_(encodingName);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilXml)
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilXml_XmlSerializerFactory)
-
-NSString *AndroidUtilXml_XmlSerializerFactory_TYPE = @"org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer";
-OrgXmlpullV1XmlPullParserFactory *AndroidUtilXml_XmlSerializerFactory_instance;
-
-@implementation AndroidUtilXml_XmlSerializerFactory
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  AndroidUtilXml_XmlSerializerFactory_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TYPE", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
-    { "instance", "LOrgXmlpullV1XmlPullParserFactory;", .constantValue.asLong = 0, 0x18, -1, 1, -1, -1 },
-  };
-  static const void *ptrTable[] = { &AndroidUtilXml_XmlSerializerFactory_TYPE, &AndroidUtilXml_XmlSerializerFactory_instance, "LAndroidUtilXml;" };
-  static const J2ObjcClassInfo _AndroidUtilXml_XmlSerializerFactory = { "XmlSerializerFactory", "android.util", ptrTable, methods, fields, 7, 0x8, 1, 2, 2, -1, -1, -1, -1 };
-  return &_AndroidUtilXml_XmlSerializerFactory;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilXml_XmlSerializerFactory class]) {
-    {
-      @try {
-        JreStrongAssign(&AndroidUtilXml_XmlSerializerFactory_instance, OrgXmlpullV1XmlPullParserFactory_newInstanceWithNSString_withIOSClass_(AndroidUtilXml_XmlSerializerFactory_TYPE, nil));
-      }
-      @catch (OrgXmlpullV1XmlPullParserException *e) {
-        @throw create_JavaLangAssertionError_initWithId_(e);
-      }
-    }
-    J2OBJC_SET_INITIALIZED(AndroidUtilXml_XmlSerializerFactory)
-  }
-}
-
-@end
-
-void AndroidUtilXml_XmlSerializerFactory_init(AndroidUtilXml_XmlSerializerFactory *self) {
-  NSObject_init(self);
-}
-
-AndroidUtilXml_XmlSerializerFactory *new_AndroidUtilXml_XmlSerializerFactory_init() {
-  J2OBJC_NEW_IMPL(AndroidUtilXml_XmlSerializerFactory, init)
-}
-
-AndroidUtilXml_XmlSerializerFactory *create_AndroidUtilXml_XmlSerializerFactory_init() {
-  J2OBJC_CREATE_IMPL(AndroidUtilXml_XmlSerializerFactory, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilXml_XmlSerializerFactory)
-
-J2OBJC_INITIALIZED_DEFN(AndroidUtilXml_Encoding)
-
-AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_values_[4];
-
-@implementation AndroidUtilXml_Encoding
-
-+ (IOSObjectArray *)values {
-  return AndroidUtilXml_Encoding_values();
-}
-
-+ (AndroidUtilXml_Encoding *)valueOfWithNSString:(NSString *)name {
-  return AndroidUtilXml_Encoding_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LAndroidUtilXml_Encoding;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidUtilXml_Encoding;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "US_ASCII", "LAndroidUtilXml_Encoding;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "UTF_8", "LAndroidUtilXml_Encoding;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-    { "UTF_16", "LAndroidUtilXml_Encoding;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
-    { "ISO_8859_1", "LAndroidUtilXml_Encoding;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
-    { "expatName_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(AndroidUtilXml_Encoding, US_ASCII), &JreEnum(AndroidUtilXml_Encoding, UTF_8), &JreEnum(AndroidUtilXml_Encoding, UTF_16), &JreEnum(AndroidUtilXml_Encoding, ISO_8859_1), "LAndroidUtilXml;", "Ljava/lang/Enum<Landroid/util/Xml$Encoding;>;" };
-  static const J2ObjcClassInfo _AndroidUtilXml_Encoding = { "Encoding", "android.util", ptrTable, methods, fields, 7, 0x4019, 2, 5, 6, -1, -1, 7, -1 };
-  return &_AndroidUtilXml_Encoding;
-}
-
-+ (void)initialize {
-  if (self == [AndroidUtilXml_Encoding class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 4 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    (JreEnum(AndroidUtilXml_Encoding, US_ASCII) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    AndroidUtilXml_Encoding_initWithNSString_withNSString_withInt_(e, @"US-ASCII", @"US_ASCII", 0);
-    (JreEnum(AndroidUtilXml_Encoding, UTF_8) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    AndroidUtilXml_Encoding_initWithNSString_withNSString_withInt_(e, @"UTF-8", @"UTF_8", 1);
-    (JreEnum(AndroidUtilXml_Encoding, UTF_16) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    AndroidUtilXml_Encoding_initWithNSString_withNSString_withInt_(e, @"UTF-16", @"UTF_16", 2);
-    (JreEnum(AndroidUtilXml_Encoding, ISO_8859_1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    AndroidUtilXml_Encoding_initWithNSString_withNSString_withInt_(e, @"ISO-8859-1", @"ISO_8859_1", 3);
-    J2OBJC_SET_INITIALIZED(AndroidUtilXml_Encoding)
-  }
-}
-
-@end
-
-void AndroidUtilXml_Encoding_initWithNSString_withNSString_withInt_(AndroidUtilXml_Encoding *self, NSString *expatName, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-  JreStrongAssign(&self->expatName_, expatName);
-}
-
-IOSObjectArray *AndroidUtilXml_Encoding_values() {
-  AndroidUtilXml_Encoding_initialize();
-  return [IOSObjectArray arrayWithObjects:AndroidUtilXml_Encoding_values_ count:4 type:AndroidUtilXml_Encoding_class_()];
-}
-
-AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_valueOfWithNSString_(NSString *name) {
-  AndroidUtilXml_Encoding_initialize();
-  for (int i = 0; i < 4; i++) {
-    AndroidUtilXml_Encoding *e = AndroidUtilXml_Encoding_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-AndroidUtilXml_Encoding *AndroidUtilXml_Encoding_fromOrdinal(NSUInteger ordinal) {
-  AndroidUtilXml_Encoding_initialize();
-  if (ordinal >= 4) {
-    return nil;
-  }
-  return AndroidUtilXml_Encoding_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidUtilXml_Encoding)
diff --git a/core/iostest/daggerframework/main/androidbase/ComAndroidInternalUtilGrowingArrayUtils.h b/core/iostest/daggerframework/main/androidbase/ComAndroidInternalUtilGrowingArrayUtils.h
deleted file mode 100644
index eb8ffac6d..000000000
--- a/core/iostest/daggerframework/main/androidbase/ComAndroidInternalUtilGrowingArrayUtils.h
+++ /dev/null
@@ -1,91 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComAndroidInternalUtilGrowingArrayUtils")
-#ifdef RESTRICT_ComAndroidInternalUtilGrowingArrayUtils
-#define INCLUDE_ALL_ComAndroidInternalUtilGrowingArrayUtils 0
-#else
-#define INCLUDE_ALL_ComAndroidInternalUtilGrowingArrayUtils 1
-#endif
-#undef RESTRICT_ComAndroidInternalUtilGrowingArrayUtils
-
-#if !defined (ComAndroidInternalUtilGrowingArrayUtils_) && (INCLUDE_ALL_ComAndroidInternalUtilGrowingArrayUtils || defined(INCLUDE_ComAndroidInternalUtilGrowingArrayUtils))
-#define ComAndroidInternalUtilGrowingArrayUtils_
-
-@class IOSBooleanArray;
-@class IOSIntArray;
-@class IOSLongArray;
-@class IOSObjectArray;
-
-@interface ComAndroidInternalUtilGrowingArrayUtils : NSObject
-
-#pragma mark Public
-
-+ (IOSBooleanArray *)appendWithBooleanArray:(IOSBooleanArray *)array
-                                    withInt:(jint)currentSize
-                                withBoolean:(jboolean)element;
-
-+ (IOSIntArray *)appendWithIntArray:(IOSIntArray *)array
-                            withInt:(jint)currentSize
-                            withInt:(jint)element;
-
-+ (IOSLongArray *)appendWithLongArray:(IOSLongArray *)array
-                              withInt:(jint)currentSize
-                             withLong:(jlong)element;
-
-+ (IOSObjectArray *)appendWithNSObjectArray:(IOSObjectArray *)array
-                                    withInt:(jint)currentSize
-                                     withId:(id)element;
-
-+ (jint)growSizeWithInt:(jint)currentSize;
-
-+ (IOSBooleanArray *)insertWithBooleanArray:(IOSBooleanArray *)array
-                                    withInt:(jint)currentSize
-                                    withInt:(jint)index
-                                withBoolean:(jboolean)element;
-
-+ (IOSIntArray *)insertWithIntArray:(IOSIntArray *)array
-                            withInt:(jint)currentSize
-                            withInt:(jint)index
-                            withInt:(jint)element;
-
-+ (IOSLongArray *)insertWithLongArray:(IOSLongArray *)array
-                              withInt:(jint)currentSize
-                              withInt:(jint)index
-                             withLong:(jlong)element;
-
-+ (IOSObjectArray *)insertWithNSObjectArray:(IOSObjectArray *)array
-                                    withInt:(jint)currentSize
-                                    withInt:(jint)index
-                                     withId:(id)element;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComAndroidInternalUtilGrowingArrayUtils)
-
-FOUNDATION_EXPORT IOSObjectArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithNSObjectArray_withInt_withId_(IOSObjectArray *array, jint currentSize, id element);
-
-FOUNDATION_EXPORT IOSIntArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithIntArray_withInt_withInt_(IOSIntArray *array, jint currentSize, jint element);
-
-FOUNDATION_EXPORT IOSLongArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithLongArray_withInt_withLong_(IOSLongArray *array, jint currentSize, jlong element);
-
-FOUNDATION_EXPORT IOSBooleanArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithBooleanArray_withInt_withBoolean_(IOSBooleanArray *array, jint currentSize, jboolean element);
-
-FOUNDATION_EXPORT IOSObjectArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithNSObjectArray_withInt_withInt_withId_(IOSObjectArray *array, jint currentSize, jint index, id element);
-
-FOUNDATION_EXPORT IOSIntArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint currentSize, jint index, jint element);
-
-FOUNDATION_EXPORT IOSLongArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithLongArray_withInt_withInt_withLong_(IOSLongArray *array, jint currentSize, jint index, jlong element);
-
-FOUNDATION_EXPORT IOSBooleanArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithBooleanArray_withInt_withInt_withBoolean_(IOSBooleanArray *array, jint currentSize, jint index, jboolean element);
-
-FOUNDATION_EXPORT jint ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(jint currentSize);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComAndroidInternalUtilGrowingArrayUtils)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComAndroidInternalUtilGrowingArrayUtils")
diff --git a/core/iostest/daggerframework/main/androidbase/ComAndroidInternalUtilGrowingArrayUtils.m b/core/iostest/daggerframework/main/androidbase/ComAndroidInternalUtilGrowingArrayUtils.m
deleted file mode 100644
index b5844d6e9..000000000
--- a/core/iostest/daggerframework/main/androidbase/ComAndroidInternalUtilGrowingArrayUtils.m
+++ /dev/null
@@ -1,248 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComAndroidInternalUtilGrowingArrayUtils.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/android/internal/util/ArrayUtils.h"
-#include "java/lang/System.h"
-
-@interface ComAndroidInternalUtilGrowingArrayUtils ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComAndroidInternalUtilGrowingArrayUtils_init(ComAndroidInternalUtilGrowingArrayUtils *self);
-
-__attribute__((unused)) static ComAndroidInternalUtilGrowingArrayUtils *new_ComAndroidInternalUtilGrowingArrayUtils_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComAndroidInternalUtilGrowingArrayUtils *create_ComAndroidInternalUtilGrowingArrayUtils_init();
-
-@implementation ComAndroidInternalUtilGrowingArrayUtils
-
-+ (IOSObjectArray *)appendWithNSObjectArray:(IOSObjectArray *)array
-                                    withInt:(jint)currentSize
-                                     withId:(id)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_appendWithNSObjectArray_withInt_withId_(array, currentSize, element);
-}
-
-+ (IOSIntArray *)appendWithIntArray:(IOSIntArray *)array
-                            withInt:(jint)currentSize
-                            withInt:(jint)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_appendWithIntArray_withInt_withInt_(array, currentSize, element);
-}
-
-+ (IOSLongArray *)appendWithLongArray:(IOSLongArray *)array
-                              withInt:(jint)currentSize
-                             withLong:(jlong)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_appendWithLongArray_withInt_withLong_(array, currentSize, element);
-}
-
-+ (IOSBooleanArray *)appendWithBooleanArray:(IOSBooleanArray *)array
-                                    withInt:(jint)currentSize
-                                withBoolean:(jboolean)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_appendWithBooleanArray_withInt_withBoolean_(array, currentSize, element);
-}
-
-+ (IOSObjectArray *)insertWithNSObjectArray:(IOSObjectArray *)array
-                                    withInt:(jint)currentSize
-                                    withInt:(jint)index
-                                     withId:(id)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_insertWithNSObjectArray_withInt_withInt_withId_(array, currentSize, index, element);
-}
-
-+ (IOSIntArray *)insertWithIntArray:(IOSIntArray *)array
-                            withInt:(jint)currentSize
-                            withInt:(jint)index
-                            withInt:(jint)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_insertWithIntArray_withInt_withInt_withInt_(array, currentSize, index, element);
-}
-
-+ (IOSLongArray *)insertWithLongArray:(IOSLongArray *)array
-                              withInt:(jint)currentSize
-                              withInt:(jint)index
-                             withLong:(jlong)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_insertWithLongArray_withInt_withInt_withLong_(array, currentSize, index, element);
-}
-
-+ (IOSBooleanArray *)insertWithBooleanArray:(IOSBooleanArray *)array
-                                    withInt:(jint)currentSize
-                                    withInt:(jint)index
-                                withBoolean:(jboolean)element {
-  return ComAndroidInternalUtilGrowingArrayUtils_insertWithBooleanArray_withInt_withInt_withBoolean_(array, currentSize, index, element);
-}
-
-+ (jint)growSizeWithInt:(jint)currentSize {
-  return ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize);
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComAndroidInternalUtilGrowingArrayUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LNSObject;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "[I", 0x9, 0, 3, -1, -1, -1, -1 },
-    { NULL, "[J", 0x9, 0, 4, -1, -1, -1, -1 },
-    { NULL, "[Z", 0x9, 0, 5, -1, -1, -1, -1 },
-    { NULL, "[LNSObject;", 0x9, 6, 7, -1, 8, -1, -1 },
-    { NULL, "[I", 0x9, 6, 9, -1, -1, -1, -1 },
-    { NULL, "[J", 0x9, 6, 10, -1, -1, -1, -1 },
-    { NULL, "[Z", 0x9, 6, 11, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 12, 13, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(appendWithNSObjectArray:withInt:withId:);
-  methods[1].selector = @selector(appendWithIntArray:withInt:withInt:);
-  methods[2].selector = @selector(appendWithLongArray:withInt:withLong:);
-  methods[3].selector = @selector(appendWithBooleanArray:withInt:withBoolean:);
-  methods[4].selector = @selector(insertWithNSObjectArray:withInt:withInt:withId:);
-  methods[5].selector = @selector(insertWithIntArray:withInt:withInt:withInt:);
-  methods[6].selector = @selector(insertWithLongArray:withInt:withInt:withLong:);
-  methods[7].selector = @selector(insertWithBooleanArray:withInt:withInt:withBoolean:);
-  methods[8].selector = @selector(growSizeWithInt:);
-  methods[9].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "append", "[LNSObject;ILNSObject;", "<T:Ljava/lang/Object;>([TT;ITT;)[TT;", "[III", "[JIJ", "[ZIZ", "insert", "[LNSObject;IILNSObject;", "<T:Ljava/lang/Object;>([TT;IITT;)[TT;", "[IIII", "[JIIJ", "[ZIIZ", "growSize", "I" };
-  static const J2ObjcClassInfo _ComAndroidInternalUtilGrowingArrayUtils = { "GrowingArrayUtils", "com.android.internal.util", ptrTable, methods, NULL, 7, 0x11, 10, 0, -1, -1, -1, -1, -1 };
-  return &_ComAndroidInternalUtilGrowingArrayUtils;
-}
-
-@end
-
-IOSObjectArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithNSObjectArray_withInt_withId_(IOSObjectArray *array, jint currentSize, id element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSObjectArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:41 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 > array->size_) {
-    IOSObjectArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedArrayWithIOSClass_withInt_([[array java_getClass] getComponentType], ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, currentSize);
-    array = newArray;
-  }
-  IOSObjectArray_Set(nil_chk(array), currentSize, element);
-  return array;
-}
-
-IOSIntArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithIntArray_withInt_withInt_(IOSIntArray *array, jint currentSize, jint element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSIntArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:58 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 > array->size_) {
-    IOSIntArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedIntArrayWithInt_(ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, currentSize);
-    array = newArray;
-  }
-  *IOSIntArray_GetRef(nil_chk(array), currentSize) = element;
-  return array;
-}
-
-IOSLongArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithLongArray_withInt_withLong_(IOSLongArray *array, jint currentSize, jlong element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSLongArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:73 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 > array->size_) {
-    IOSLongArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedLongArrayWithInt_(ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, currentSize);
-    array = newArray;
-  }
-  *IOSLongArray_GetRef(nil_chk(array), currentSize) = element;
-  return array;
-}
-
-IOSBooleanArray *ComAndroidInternalUtilGrowingArrayUtils_appendWithBooleanArray_withInt_withBoolean_(IOSBooleanArray *array, jint currentSize, jboolean element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSBooleanArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:88 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 > array->size_) {
-    IOSBooleanArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedBooleanArrayWithInt_(ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, currentSize);
-    array = newArray;
-  }
-  *IOSBooleanArray_GetRef(nil_chk(array), currentSize) = element;
-  return array;
-}
-
-IOSObjectArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithNSObjectArray_withInt_withInt_withId_(IOSObjectArray *array, jint currentSize, jint index, id element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSObjectArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:111 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 <= array->size_) {
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, array, index + 1, currentSize - index);
-    IOSObjectArray_Set(array, index, element);
-    return array;
-  }
-  IOSObjectArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedArrayWithIOSClass_withInt_([[array java_getClass] getComponentType], ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, index);
-  IOSObjectArray_Set(nil_chk(newArray), index, element);
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, newArray, index + 1, array->size_ - index);
-  return newArray;
-}
-
-IOSIntArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint currentSize, jint index, jint element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSIntArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:132 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 <= array->size_) {
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, array, index + 1, currentSize - index);
-    *IOSIntArray_GetRef(array, index) = element;
-    return array;
-  }
-  IOSIntArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedIntArrayWithInt_(ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, index);
-  *IOSIntArray_GetRef(nil_chk(newArray), index) = element;
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, newArray, index + 1, array->size_ - index);
-  return newArray;
-}
-
-IOSLongArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithLongArray_withInt_withInt_withLong_(IOSLongArray *array, jint currentSize, jint index, jlong element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSLongArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:151 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 <= array->size_) {
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, array, index + 1, currentSize - index);
-    *IOSLongArray_GetRef(array, index) = element;
-    return array;
-  }
-  IOSLongArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedLongArrayWithInt_(ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, index);
-  *IOSLongArray_GetRef(nil_chk(newArray), index) = element;
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, newArray, index + 1, array->size_ - index);
-  return newArray;
-}
-
-IOSBooleanArray *ComAndroidInternalUtilGrowingArrayUtils_insertWithBooleanArray_withInt_withInt_withBoolean_(IOSBooleanArray *array, jint currentSize, jint index, jboolean element) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  JreAssert((currentSize <= ((IOSBooleanArray *) nil_chk(array))->size_), (@"com/android/internal/util/GrowingArrayUtils.java:170 condition failed: assert currentSize <= array.length;"));
-  if (currentSize + 1 <= array->size_) {
-    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, array, index + 1, currentSize - index);
-    *IOSBooleanArray_GetRef(array, index) = element;
-    return array;
-  }
-  IOSBooleanArray *newArray = ComAndroidInternalUtilArrayUtils_newUnpaddedBooleanArrayWithInt_(ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(currentSize));
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, index);
-  *IOSBooleanArray_GetRef(nil_chk(newArray), index) = element;
-  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, newArray, index + 1, array->size_ - index);
-  return newArray;
-}
-
-jint ComAndroidInternalUtilGrowingArrayUtils_growSizeWithInt_(jint currentSize) {
-  ComAndroidInternalUtilGrowingArrayUtils_initialize();
-  return currentSize <= 4 ? 8 : currentSize * 2;
-}
-
-void ComAndroidInternalUtilGrowingArrayUtils_init(ComAndroidInternalUtilGrowingArrayUtils *self) {
-  NSObject_init(self);
-}
-
-ComAndroidInternalUtilGrowingArrayUtils *new_ComAndroidInternalUtilGrowingArrayUtils_init() {
-  J2OBJC_NEW_IMPL(ComAndroidInternalUtilGrowingArrayUtils, init)
-}
-
-ComAndroidInternalUtilGrowingArrayUtils *create_ComAndroidInternalUtilGrowingArrayUtils_init() {
-  J2OBJC_CREATE_IMPL(ComAndroidInternalUtilGrowingArrayUtils, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAndroidInternalUtilGrowingArrayUtils)
diff --git a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoAnnotation.h b/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoAnnotation.h
deleted file mode 100644
index 509f83a03..000000000
--- a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoAnnotation.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleAutoValueAutoAnnotation")
-#ifdef RESTRICT_ComGoogleAutoValueAutoAnnotation
-#define INCLUDE_ALL_ComGoogleAutoValueAutoAnnotation 0
-#else
-#define INCLUDE_ALL_ComGoogleAutoValueAutoAnnotation 1
-#endif
-#undef RESTRICT_ComGoogleAutoValueAutoAnnotation
-
-#if !defined (ComGoogleAutoValueAutoAnnotation_) && (INCLUDE_ALL_ComGoogleAutoValueAutoAnnotation || defined(INCLUDE_ComGoogleAutoValueAutoAnnotation))
-#define ComGoogleAutoValueAutoAnnotation_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleAutoValueAutoAnnotation < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleAutoValueAutoAnnotation)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleAutoValueAutoAnnotation)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleAutoValueAutoAnnotation")
diff --git a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoAnnotation.m b/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoAnnotation.m
deleted file mode 100644
index 4c071172d..000000000
--- a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoAnnotation.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleAutoValueAutoAnnotation.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleAutoValueAutoAnnotation : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleAutoValueAutoAnnotation__Annotations$0();
-
-@implementation ComGoogleAutoValueAutoAnnotation
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleAutoValueAutoAnnotation__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleAutoValueAutoAnnotation = { "AutoAnnotation", "com.google.auto.value", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleAutoValueAutoAnnotation;
-}
-
-@end
-
-IOSObjectArray *ComGoogleAutoValueAutoAnnotation__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleAutoValueAutoAnnotation)
diff --git a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoValue.h b/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoValue.h
deleted file mode 100644
index b09a7e515..000000000
--- a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoValue.h
+++ /dev/null
@@ -1,68 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleAutoValueAutoValue")
-#ifdef RESTRICT_ComGoogleAutoValueAutoValue
-#define INCLUDE_ALL_ComGoogleAutoValueAutoValue 0
-#else
-#define INCLUDE_ALL_ComGoogleAutoValueAutoValue 1
-#endif
-#undef RESTRICT_ComGoogleAutoValueAutoValue
-
-#if !defined (ComGoogleAutoValueAutoValue_) && (INCLUDE_ALL_ComGoogleAutoValueAutoValue || defined(INCLUDE_ComGoogleAutoValueAutoValue))
-#define ComGoogleAutoValueAutoValue_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleAutoValueAutoValue < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleAutoValueAutoValue)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleAutoValueAutoValue)
-
-#endif
-
-#if !defined (ComGoogleAutoValueAutoValue_Builder_) && (INCLUDE_ALL_ComGoogleAutoValueAutoValue || defined(INCLUDE_ComGoogleAutoValueAutoValue_Builder))
-#define ComGoogleAutoValueAutoValue_Builder_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleAutoValueAutoValue_Builder < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleAutoValueAutoValue_Builder)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleAutoValueAutoValue_Builder)
-
-#endif
-
-#if !defined (ComGoogleAutoValueAutoValue_CopyAnnotations_) && (INCLUDE_ALL_ComGoogleAutoValueAutoValue || defined(INCLUDE_ComGoogleAutoValueAutoValue_CopyAnnotations))
-#define ComGoogleAutoValueAutoValue_CopyAnnotations_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol ComGoogleAutoValueAutoValue_CopyAnnotations < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleAutoValueAutoValue_CopyAnnotations)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleAutoValueAutoValue_CopyAnnotations)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleAutoValueAutoValue")
diff --git a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoValue.m b/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoValue.m
deleted file mode 100644
index 296cb32cc..000000000
--- a/core/iostest/daggerframework/main/androidbase/ComGoogleAutoValueAutoValue.m
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleAutoValueAutoValue.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleAutoValueAutoValue : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleAutoValueAutoValue__Annotations$0();
-
-@interface ComGoogleAutoValueAutoValue_Builder : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleAutoValueAutoValue_Builder__Annotations$0();
-
-@interface ComGoogleAutoValueAutoValue_CopyAnnotations : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleAutoValueAutoValue_CopyAnnotations__Annotations$0();
-
-@implementation ComGoogleAutoValueAutoValue
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { "LComGoogleAutoValueAutoValue_Builder;LComGoogleAutoValueAutoValue_CopyAnnotations;", (void *)&ComGoogleAutoValueAutoValue__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleAutoValueAutoValue = { "AutoValue", "com.google.auto.value", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, 0, -1, -1, 1 };
-  return &_ComGoogleAutoValueAutoValue;
-}
-
-@end
-
-IOSObjectArray *ComGoogleAutoValueAutoValue__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleAutoValueAutoValue)
-
-@implementation ComGoogleAutoValueAutoValue_Builder
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { "LComGoogleAutoValueAutoValue;", (void *)&ComGoogleAutoValueAutoValue_Builder__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleAutoValueAutoValue_Builder = { "Builder", "com.google.auto.value", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, 0, -1, -1, -1, 1 };
-  return &_ComGoogleAutoValueAutoValue_Builder;
-}
-
-@end
-
-IOSObjectArray *ComGoogleAutoValueAutoValue_Builder__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleAutoValueAutoValue_Builder)
-
-@implementation ComGoogleAutoValueAutoValue_CopyAnnotations
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(exclude);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleAutoValueAutoValue;", (void *)&ComGoogleAutoValueAutoValue_CopyAnnotations__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleAutoValueAutoValue_CopyAnnotations = { "CopyAnnotations", "com.google.auto.value", ptrTable, methods, NULL, 7, 0x2609, 1, 0, 0, -1, -1, -1, 1 };
-  return &_ComGoogleAutoValueAutoValue_CopyAnnotations;
-}
-
-@end
-
-IOSObjectArray *ComGoogleAutoValueAutoValue_CopyAnnotations__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, SOURCE)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleAutoValueAutoValue_CopyAnnotations)
diff --git a/core/iostest/daggerframework/main/androidbase/CursorWindowNative.h b/core/iostest/daggerframework/main/androidbase/CursorWindowNative.h
deleted file mode 100644
index 3d5e2c5f7..000000000
--- a/core/iostest/daggerframework/main/androidbase/CursorWindowNative.h
+++ /dev/null
@@ -1,145 +0,0 @@
-/*
- * Copyright (C) 2006-2007 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-//
-//  CursorWindow.h
-//  squidb-ios
-//  This file is a fork/port of AOSP CursorWindow.h (https://github.com/android/platform_frameworks_base/blob/master/include/androidfw/CursorWindow.h)
-//  The core logic/structures defined in the file have been left intact; this is just a translation to use Objective-C
-//  syntax instead of C++ to make working with the j2objc tool easier.
-//
-    
-#import <Foundation/Foundation.h>
-#import "IOSPrimitiveArray.h"
-#import "SQLiteErrors.h"
-
-static const uint32_t ROW_SLOT_CHUNK_NUM_ROWS = 100;
-
-@interface CursorWindowNative : NSObject
-
-enum {
-    FIELD_TYPE_NULL = 0,
-    FIELD_TYPE_INTEGER = 1,
-    FIELD_TYPE_FLOAT = 2,
-    FIELD_TYPE_STRING = 3,
-    FIELD_TYPE_BLOB = 4,
-};
-
-struct Header {
-    // Offset of the lowest unused byte in the window.
-    uint32_t freeOffset;
-
-    // Offset of the first row slot chunk.
-    uint32_t firstChunkOffset;
-
-    uint32_t numRows;
-    uint32_t numColumns;
-};
-
-struct RowSlot {
-    uint32_t offset;
-};
-
-struct RowSlotChunk {
-    struct RowSlot slots[ROW_SLOT_CHUNK_NUM_ROWS];
-    uint32_t nextChunkOffset;
-};
-
-struct FieldSlot {
-    int32_t type;
-    union {
-        double d;
-        int64_t l;
-        struct {
-            uint32_t offset;
-            uint32_t size;
-        } buffer;
-    } data;
-};
-
-+ (id<NSObject>)nativeCreate:(NSString *)name cursorWindowSize:(jint)cursorWindowSize;
-
-+ (void) nativeDispose:(id<NSObject>)windowPtr;
-
-+ (void) nativeClear:(id<NSObject>)windowPtr;
-
-+ (jint) nativeGetNumRows:(id<NSObject>)windowPtr;
-
-+ (jboolean) nativeSetNumColumns:(id<NSObject>)windowPtr columnNum:(jint)columnNum;
-
-+ (jboolean) nativeAllocRow:(id<NSObject>)windowPtr;
-
-+ (void) nativeFreeLastRow:(id<NSObject>)windowPtr;
-
-+ (jint) nativeGetType:(id<NSObject>)windowPtr row:(jint)row column:(jint)column;
-
-+ (IOSByteArray *) nativeGetBlob:(id<NSObject>)windowPtr row:(jint)row column:(jint)column;
-
-+ (NSString *) nativeGetString:(id<NSObject>)windowPtr row:(jint) row column:(jint) column;
-
-+ (jlong) nativeGetLong:(id<NSObject>)windowPtr row:(jint) row column:(jint) column;
-
-+ (jdouble) nativeGetDouble:(id<NSObject>)windowPtr row:(jint) row column:(jint) column;
-
-//private static native void nativeCopyStringToBuffer(Object windowPtr, int row, int column, CharArrayBuffer buffer);
-
-+ (jboolean) nativePutBlob:(id<NSObject>)windowPtr value:(IOSByteArray *)value row:(jint)row column:(jint)column;
-
-+ (jboolean) nativePutString:(id<NSObject>)windowPtr value:(NSString *)value row:(jint)row column:(jint)column;
-
-+ (jboolean) nativePutLong:(id<NSObject>)windowPtr value:(jlong)value row:(jint)row column:(jint)column;
-
-+ (jboolean) nativePutDouble:(id<NSObject>)windowPtr value:(jdouble)value row:(jint)row column:(jint)column;
-
-+ (jboolean) nativePutNull:(id<NSObject>)windowPtr row:(jint)row column:(jint)column;
-
-@property uint32_t mSize;
-@property BOOL mIsReadOnly;
-
-- (id) initWithName:(NSString *)name size:(uint32_t)size isReadOnly:(BOOL)readOnly;
-
-- (status_t) clear;
-
-- (status_t) setNumColumns:(uint32_t)numColumns;
-
-- (status_t) allocRow;
-
-- (status_t) freeLastRow;
-
-- (jint) getNumRows;
-
-- (jint) getNumColumns;
-
-- (struct RowSlot *) getRowSlot:(uint32_t)row;
-
-- (struct RowSlot *)allocRowSlot;
-
-- (struct FieldSlot *) getFieldSlot:(uint32_t)row column:(uint32_t)column;
-
-- (status_t) putBlobInRow:(uint32_t)row column:(uint32_t)column value:(const void *)value size:(uint32_t)size;
-
-- (status_t) putStringInRow:(uint32_t)row column:(uint32_t)column value:(const char *)value
-                       size:(uint32_t)sizeIncludingNull;
-
-- (status_t) putBlobOrStringInRow:(uint32_t)row column:(uint32_t) column
-                            value:(const void *)value size:(uint32_t)size type:(int32_t)type;
-
-- (status_t) putLongInRow:(uint32_t)row column:(uint32_t)column value:(jlong)value;
-
-- (status_t) putDoubleInRow:(uint32_t)row column:(uint32_t)column value:(jdouble)value;
-
-- (status_t) putNullInRow:(uint32_t)row column:(uint32_t)column;
-
-@end
diff --git a/core/iostest/daggerframework/main/androidbase/CursorWindowNative.m b/core/iostest/daggerframework/main/androidbase/CursorWindowNative.m
deleted file mode 100644
index 6f4061c01..000000000
--- a/core/iostest/daggerframework/main/androidbase/CursorWindowNative.m
+++ /dev/null
@@ -1,606 +0,0 @@
-/*
- * Copyright (C) 2006-2007 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-//
-//  CursorWindow.m
-//  squidb-ios
-//  This file is a fork/port of AOSP CursowWindow.cpp (https://github.com/android/platform_frameworks_base/blob/master/libs/androidfw/CursorWindow.cpp)
-//  The core logic/structures defined in the file have been left intact; this is just a translation to use Objective-C
-//  syntax instead of C++ to make working with the j2objc tool easier.
-//
-
-#import "CursorWindowNative.h"
-#import "java/lang/IllegalStateException.h"
-#import "NSString+JavaString.h"
-#import "android/util/Log.h"
-
-@implementation CursorWindowNative {
-    void *data;
-    struct Header *mHeader;
-}
-
-static void throwExceptionWithRowCol(jint row, jint column) {
-    @throw [[JavaLangIllegalStateException alloc]
-            initWithNSString:[NSString stringWithFormat:@"Couldn't read row %d, col %d from CursorWindow. Make sure the Cursor is initialized correctly before accessing data from it.", row, column]];
-}
-
-static void throwUnknownTypeException(jint type) {
-    @throw [[JavaLangIllegalStateException alloc]
-            initWithNSString:[NSString stringWithFormat:@"UNKNOWN type %d", type]];
-}
-
-// Class methods
-+ (id<NSObject>) nativeCreate:(NSString *)name cursorWindowSize:(jint)cursorWindowSize {
-CursorWindowNative* ret = [[CursorWindowNative alloc] initWithName:name size:cursorWindowSize isReadOnly:NO];
-//[ret autorelease];
-    return ret;
-}
-
-+ (void) nativeDispose:(id<NSObject>)windowPtr {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    [window hardDump];
-    [window release];
-}
-
-- (void)hardDump {
-    AndroidUtilLog_wWithNSString_withNSString_(@"SQLITE",
-            [NSString stringWithFormat:@"Closing %d", data]);
-    if(data == NULL)
-    {
-        AndroidUtilLog_wWithNSString_withNSString_(@"SQLITE",
-                [NSString stringWithFormat:@"IS NULL!!! %d", data]);
-    }
-    free(data);
-    data = NULL;
-}
-
-+ (void) nativeClear:(id<NSObject>)windowPtr {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    status_t status = [window clear];
-    if (status) {
-//        LOG_WINDOW("Could not clear window. error=%d", status);
-    }
-}
-
-+ (jint) nativeGetNumRows:(id<NSObject>)windowPtr {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    return [window getNumRows];
-}
-
-+ (jboolean) nativeSetNumColumns:(id<NSObject>)windowPtr columnNum:(jint)columnNum {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    status_t status = [window setNumColumns:columnNum];
-    return status == OK;
-}
-
-+ (jboolean) nativeAllocRow:(id<NSObject>)windowPtr {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    status_t status = [window allocRow];
-    return status == OK;
-}
-
-+ (void) nativeFreeLastRow:(id<NSObject>)windowPtr {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    [window freeLastRow];
-}
-
-+ (jint) nativeGetType:(id<NSObject>)windowPtr row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-//    LOG_WINDOW("returning column type affinity for %d,%d from %p", row, column, window);
-
-    struct FieldSlot *fieldSlot = [window getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        // FIXME: This is really broken but we have CTS tests that depend
-        // on this legacy behavior.
-        // throwExceptionWithRowCol(row, column);
-        return FIELD_TYPE_NULL;
-    }
-    return fieldSlot->type;
-}
-
-// NATIVE GETTERS HERE
-
-const char* getFieldSlotValueString(CursorWindowNative *window, struct FieldSlot* fieldSlot,
-                                           uint32_t* outSizeIncludingNull) {
-    *outSizeIncludingNull = fieldSlot->data.buffer.size;
-    return (char *)[window offsetToPtr:fieldSlot->data.buffer.offset];
-}
-
-const void* getFieldSlotValueBlob(CursorWindowNative *window, struct FieldSlot* fieldSlot, uint32_t* outSize) {
-    *outSize = fieldSlot->data.buffer.size;
-    return [window offsetToPtr:fieldSlot->data.buffer.offset];
-}
-
-+ (IOSByteArray *)nativeGetBlob:(id<NSObject>)windowPtr row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-//    LOG_WINDOW("Getting blob for %d,%d from %p", row, column, window);
-
-    struct FieldSlot *fieldSlot = [window getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        throwExceptionWithRowCol(row, column);
-        return NULL;
-    }
-
-    int32_t type = fieldSlot->type;
-    if (type == FIELD_TYPE_BLOB || type == FIELD_TYPE_STRING) {
-        uint32_t size;
-        const void* value = getFieldSlotValueBlob(window, fieldSlot, &size);
-        IOSByteArray *byteArray = [IOSByteArray newArrayWithBytes:value count:size];
-//        jbyteArray byteArray = env->NewByteArray(size);
-        if (!byteArray) {
-//            env->ExceptionClear();
-            throw_sqlite3_exception_message(NULL, "Native could not create new byte[]");
-            return NULL;
-        }
-        [byteArray autorelease];
-//        env->SetByteArrayRegion(byteArray, 0, size, static_cast<const jbyte*>(value));
-        return byteArray;
-    } else if (type == FIELD_TYPE_INTEGER) {
-        throw_sqlite3_exception_message(NULL, "INTEGER data in nativeGetBlob ");
-    } else if (type == FIELD_TYPE_FLOAT) {
-        throw_sqlite3_exception_message(NULL, "FLOAT data in nativeGetBlob ");
-    } else if (type == FIELD_TYPE_NULL) {
-        // do nothing
-    } else {
-        throwUnknownTypeException(type);
-    }
-    return NULL;
-}
-
-+ (NSString *)nativeGetString:(id<NSObject>)windowPtr row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-//    LOG_WINDOW("Getting string for %d,%d from %p", row, column, window);
-
-    struct FieldSlot *fieldSlot = [window getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        throwExceptionWithRowCol(row, column);
-        return NULL;
-    }
-
-    int32_t type = fieldSlot->type;
-    if (type == FIELD_TYPE_STRING) {
-        uint32_t sizeIncludingNull;
-        const char* value = getFieldSlotValueString(window, fieldSlot, &sizeIncludingNull);
-        if (sizeIncludingNull <= 1) {
-            return @"";
-        }
-
-        IOSByteArray *bytes = [IOSByteArray newArrayWithBytes:(const jbyte *)value count:sizeIncludingNull - 1];
-        NSString *result = [NSString java_stringWithBytes:bytes offset:0 length:[bytes count] encoding:NSUTF8StringEncoding];
-
-#if ! __has_feature(objc_arc)
-[bytes release];
-#endif
-        return result;
-    } else if (type == FIELD_TYPE_INTEGER) {
-        int64_t value = fieldSlot->data.l;
-        return [NSString stringWithFormat:@"%lld", value];
-    } else if (type == FIELD_TYPE_FLOAT) {
-        double value = fieldSlot->data.d;
-        return [NSString stringWithFormat:@"%f", value];
-    } else if (type == FIELD_TYPE_NULL) {
-        return NULL;
-    } else if (type == FIELD_TYPE_BLOB) {
-        throw_sqlite3_exception_message(NULL, "Unable to convert BLOB to string");
-        return NULL;
-    } else {
-        throwUnknownTypeException(type);
-        return NULL;
-    }
-}
-
-+ (jlong) nativeGetLong:(id<NSObject>)windowPtr row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-//    LOG_WINDOW("Getting long for %d,%d from %p", row, column, window);
-
-    struct FieldSlot *fieldSlot = [window getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        throwExceptionWithRowCol(row, column);
-        return 0;
-    }
-
-    int32_t type = fieldSlot->type;
-    if (type == FIELD_TYPE_INTEGER) {
-        return fieldSlot->data.l;
-    } else if (type == FIELD_TYPE_STRING) {
-        uint32_t sizeIncludingNull;
-        const char* value = getFieldSlotValueString(window, fieldSlot, &sizeIncludingNull);
-        return sizeIncludingNull > 1 ? strtoll(value, NULL, 0) : 0L;
-    } else if (type == FIELD_TYPE_FLOAT) {
-        double fieldValue = fieldSlot->data.d;
-        return (jlong)fieldValue;
-    } else if (type == FIELD_TYPE_NULL) {
-        return 0;
-    } else if (type == FIELD_TYPE_BLOB) {
-        throw_sqlite3_exception_message(NULL, "Unable to convert BLOB to long");
-        return 0;
-    } else {
-        throwUnknownTypeException(type);
-        return 0;
-    }
-}
-
-+ (jdouble) nativeGetDouble:(id<NSObject>)windowPtr row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-//    LOG_WINDOW("Getting double for %d,%d from %p", row, column, window);
-
-    struct FieldSlot *fieldSlot = [window getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        throwExceptionWithRowCol(row, column);
-        return 0.0;
-    }
-
-    int32_t type = fieldSlot->type;
-    if (type == FIELD_TYPE_FLOAT) {
-        return fieldSlot->data.d;
-    } else if (type == FIELD_TYPE_STRING) {
-        uint32_t sizeIncludingNull;
-        const char* value = getFieldSlotValueString(window, fieldSlot, &sizeIncludingNull);
-        return sizeIncludingNull > 1 ? strtod(value, NULL) : 0.0;
-    } else if (type == FIELD_TYPE_INTEGER) {
-        jlong fieldValue = fieldSlot->data.l;
-        return (jdouble)fieldValue;
-    } else if (type == FIELD_TYPE_NULL) {
-        return 0.0;
-    } else if (type == FIELD_TYPE_BLOB) {
-        throw_sqlite3_exception_message(NULL, "Unable to convert BLOB to double");
-        return 0.0;
-    } else {
-        throwUnknownTypeException(type);
-        return 0.0;
-    }
-}
-
-+ (jboolean) nativePutBlob:(id<NSObject>)windowPtr value:(IOSByteArray *)value row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    jint len = [value length];
-
-    void* buffer = [value buffer]; //env->GetPrimitiveArrayCritical(valueObj, NULL);
-    status_t status = [window putBlobInRow:row column:column value:buffer size:len];
-//    env->ReleasePrimitiveArrayCritical(valueObj, buffer, JNI_ABORT);
-
-    if (status) {
-//        LOG_WINDOW("Failed to put blob. error=%d", status);
-        return false;
-    }
-
-//    LOG_WINDOW("%d,%d is BLOB with %u bytes", row, column, len);
-    return true;
-}
-
-+ (jboolean) nativePutString:(NSObject *)windowPtr value:(NSString *)value row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-
-    uint32_t sizeIncludingNull = (uint32_t)[value lengthOfBytesUsingEncoding:NSUTF8StringEncoding] + 1; //env->GetStringUTFLength(valueObj) + 1;
-    const char* valueStr = [value UTF8String]; //env->GetStringUTFChars(valueObj, NULL);
-    if (!valueStr) {
-//        LOG_WINDOW("value can't be transferred to UTFChars");
-        return false;
-    }
-    status_t status = [window putStringInRow:row column:column value:valueStr size:sizeIncludingNull];
-//    env->ReleaseStringUTFChars(valueObj, valueStr);
-
-    if (status) {
-//        LOG_WINDOW("Failed to put string. error=%d", status);
-        return false;
-    }
-
-//    LOG_WINDOW("%d,%d is TEXT with %u bytes", row, column, sizeIncludingNull);
-    return true;
-}
-
-+ (jboolean) nativePutLong:(NSObject *)windowPtr value:(jlong)value row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    status_t status = [window putLongInRow:row column:column value:value];
-
-    if (status) {
-//        LOG_WINDOW("Failed to put long. error=%d", status);
-        return false;
-    }
-
-//    LOG_WINDOW("%d,%d is INTEGER 0x%016llx", row, column, value);
-    return true;
-}
-
-+ (jboolean) nativePutDouble:(NSObject *)windowPtr value:(jdouble)value row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    status_t status = [window putDoubleInRow:row column:column value:value];
-
-    if (status) {
-//        LOG_WINDOW("Failed to put double. error=%d", status);
-        return false;
-    }
-
-//    LOG_WINDOW("%d,%d is FLOAT %lf", row, column, value);
-    return true;
-}
-
-+ (jboolean) nativePutNull:(NSObject *)windowPtr row:(jint)row column:(jint)column {
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-    status_t status = [window putNullInRow:row column:column];
-
-    if (status) {
-//        LOG_WINDOW("Failed to put null. error=%d", status);
-        return false;
-    }
-
-//    LOG_WINDOW("%d,%d is NULL", row, column);
-    return true;
-}
-
-// Instance methods
-@synthesize mSize;
-@synthesize mIsReadOnly;
-
-- (void *) offsetToPtr:(uint32_t) offset {
-    return (uint8_t *)(data) + offset;
-}
-
-- (id)initWithName:(NSString *)_name size:(uint32_t)_size isReadOnly:(BOOL)readOnly {
-    if (self = [super init]) {
-        self.mIsReadOnly = readOnly;
-        self.mSize = _size;
-        data = malloc(_size);
-        mHeader = (struct Header *)data;
-        if (data == NULL) {
-            return nil;
-        }
-    }
-    else {
-        AndroidUtilLog_wWithNSString_withNSString_(@"SQLITE", @"FAILED CURSOR INIT");
-        data = NULL;
-    }
-    return self;
-}
-
-- (status_t) clear {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    mHeader->freeOffset = sizeof(struct Header) + sizeof(struct RowSlotChunk);
-    mHeader->firstChunkOffset = sizeof(struct Header);
-    mHeader->numRows = 0;
-    mHeader->numColumns = 0;
-
-    struct RowSlotChunk* firstChunk = (struct RowSlotChunk *)[self offsetToPtr:mHeader->firstChunkOffset];
-    firstChunk->nextChunkOffset = 0;
-    return OK;
-}
-
-- (status_t) setNumColumns:(uint32_t)numColumns {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    uint32_t cur = mHeader->numColumns;
-    if ((cur > 0 || mHeader->numRows > 0) && cur != numColumns) {
-    AndroidUtilLog_wWithNSString_withNSString_(@"SQLITE",
-        [NSString stringWithFormat:@"Trying to go from %d columns to %d", cur, numColumns]);
-//        ALOGE("Trying to go from %d columns to %d", cur, numColumns);
-        return INVALID_OPERATION;
-    }
-    mHeader->numColumns = numColumns;
-    return OK;
-}
-
-- (uint32_t) alloc:(uint32_t)_size aligned:(bool)aligned {
-    uint32_t padding;
-    if (aligned) {
-        // 4 byte alignment
-        padding = (~mHeader->freeOffset + 1) & 3;
-    } else {
-        padding = 0;
-    }
-
-    uint32_t offset = mHeader->freeOffset + padding;
-    uint32_t nextFreeOffset = offset + _size;
-    if (nextFreeOffset > mSize) {
-//        ALOGW("Window is full: requested allocation %zu bytes, "
-//              "free space %zu bytes, window size %zu bytes",
-//              size, freeSpace(), mSize);
-        return 0;
-    }
-
-    mHeader->freeOffset = nextFreeOffset;
-    return offset;
-}
-
-- (struct RowSlot*) allocRowSlot {
-    uint32_t chunkPos = mHeader->numRows;
-    struct RowSlotChunk* chunk = (struct RowSlotChunk *)[self offsetToPtr:mHeader->firstChunkOffset];
-    while (chunkPos > ROW_SLOT_CHUNK_NUM_ROWS) {
-        chunk = (struct RowSlotChunk *)[self offsetToPtr:chunk->nextChunkOffset];
-        chunkPos -= ROW_SLOT_CHUNK_NUM_ROWS;
-    }
-    if (chunkPos == ROW_SLOT_CHUNK_NUM_ROWS) {
-        if (!chunk->nextChunkOffset) {
-            chunk->nextChunkOffset = [self alloc:sizeof(struct RowSlotChunk) aligned:true];
-            if (!chunk->nextChunkOffset) {
-                return NULL;
-            }
-        }
-        chunk = (struct RowSlotChunk *)[self offsetToPtr:chunk->nextChunkOffset];
-        chunk->nextChunkOffset = 0;
-        chunkPos = 0;
-    }
-    mHeader->numRows += 1;
-    return &chunk->slots[chunkPos];
-}
-
-- (status_t) allocRow {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    // Fill in the row slot
-    struct RowSlot* rowSlot = [self allocRowSlot];
-    if (rowSlot == NULL) {
-        return NO_MEMORY;
-    }
-
-    // Allocate the slots for the field directory
-    uint32_t fieldDirSize = mHeader->numColumns * sizeof(struct FieldSlot);
-    uint32_t fieldDirOffset = [self alloc:fieldDirSize aligned:true];
-    if (!fieldDirOffset) {
-        mHeader->numRows--;
-//        LOG_WINDOW("The row failed, so back out the new row accounting "
-//                   "from allocRowSlot %d", mHeader->numRows);
-        return NO_MEMORY;
-    }
-    struct FieldSlot* fieldDir = (struct FieldSlot *)[self offsetToPtr:fieldDirOffset];
-    memset(fieldDir, 0, fieldDirSize);
-
-//    LOG_WINDOW("Allocated row %u, rowSlot is at offset %u, fieldDir is %d bytes at offset %u\n",
-//               mHeader->numRows - 1, offsetFromPtr(rowSlot), fieldDirSize, fieldDirOffset);
-    rowSlot->offset = fieldDirOffset;
-    return OK;
-}
-
-- (status_t) freeLastRow {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    if (mHeader->numRows > 0) {
-        mHeader->numRows--;
-    }
-    return OK;
-}
-
-- (jint) getNumRows {
-    return mHeader->numRows;
-}
-
-- (jint) getNumColumns {
-    return mHeader->numColumns;
-}
-
-- (struct RowSlot *) getRowSlot:(uint32_t)row {
-    uint32_t chunkPos = row;
-    struct RowSlotChunk* chunk = (struct RowSlotChunk *)[self offsetToPtr:mHeader->firstChunkOffset];
-    while (chunkPos >= ROW_SLOT_CHUNK_NUM_ROWS) {
-        chunk = (struct RowSlotChunk *)[self offsetToPtr:chunk->nextChunkOffset];
-        chunkPos -= ROW_SLOT_CHUNK_NUM_ROWS;
-    }
-    return &chunk->slots[chunkPos];
-}
-
-- (struct FieldSlot *) getFieldSlot:(uint32_t)row column:(uint32_t)column {
-    if (row >= mHeader->numRows || column >= mHeader->numColumns) {
-    AndroidUtilLog_wWithNSString_withNSString_(@"SQLITE",
-    [NSString stringWithFormat:@"Failed to read row %d, column %d from a CursorWindow which has %d rows, %d columns.",
-                                                                                                        row, column, mHeader->numRows, mHeader->numColumns]);
-//        ALOGE("Failed to read row %d, column %d from a CursorWindow which "
-//              "has %d rows, %d columns.",
-//              row, column, mHeader->numRows, mHeader->numColumns);
-        return NULL;
-    }
-    struct RowSlot* rowSlot = [self getRowSlot:row];
-    if (!rowSlot) {
-    AndroidUtilLog_wWithNSString_withNSString_(@"SQLITE",
-        [NSString stringWithFormat:@"Failed to find rowSlot for row %d.", row]);
-//        ALOGE("Failed to find rowSlot for row %d.", row);
-        return NULL;
-    }
-    struct FieldSlot* fieldDir = (struct FieldSlot *)[self offsetToPtr:rowSlot->offset];
-    return &fieldDir[column];
-}
-
-- (status_t) putBlobInRow:(uint32_t)row column:(uint32_t)column value:(const void *)value size:(uint32_t)size {
-    return [self putBlobOrStringInRow:row column:column value:value size:size type:FIELD_TYPE_BLOB];
-}
-
-- (status_t) putStringInRow:(uint32_t)row column:(uint32_t)column value:(const char *)value
-                       size:(uint32_t)sizeIncludingNull {
-    return [self putBlobOrStringInRow:row column:column value:value size:sizeIncludingNull type:FIELD_TYPE_STRING];
-}
-
-- (status_t) putBlobOrStringInRow:(uint32_t)row column:(uint32_t) column
-            value:(const void *)value size:(uint32_t)size type:(int32_t)type {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    struct FieldSlot* fieldSlot = [self getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        return BAD_VALUE;
-    }
-
-    uint32_t offset = [self alloc:size aligned:false];
-    if (!offset) {
-        return NO_MEMORY;
-    }
-
-    memcpy([self offsetToPtr:offset], value, size);
-
-    fieldSlot->type = type;
-    fieldSlot->data.buffer.offset = offset;
-    fieldSlot->data.buffer.size = (uint32_t)size;
-    return OK;
-}
-
-- (status_t) putLongInRow:(uint32_t)row column:(uint32_t)column value:(jlong)value {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    struct FieldSlot* fieldSlot = [self getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        return BAD_VALUE;
-    }
-
-    fieldSlot->type = FIELD_TYPE_INTEGER;
-    fieldSlot->data.l = value;
-    return OK;
-}
-
-- (status_t) putDoubleInRow:(uint32_t)row column:(uint32_t)column value:(jdouble)value {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    struct FieldSlot* fieldSlot = [self getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        return BAD_VALUE;
-    }
-
-    fieldSlot->type = FIELD_TYPE_FLOAT;
-    fieldSlot->data.d = value;
-    return OK;
-}
-
-- (status_t) putNullInRow:(uint32_t)row column:(uint32_t)column {
-    if (self.mIsReadOnly) {
-        return INVALID_OPERATION;
-    }
-
-    struct FieldSlot* fieldSlot = [self getFieldSlot:row column:column];
-    if (!fieldSlot) {
-        return BAD_VALUE;
-    }
-
-    fieldSlot->type = FIELD_TYPE_NULL;
-    fieldSlot->data.buffer.offset = 0;
-    fieldSlot->data.buffer.size = 0;
-    return OK;
-}
-
-- (void)dealloc {
-    mHeader = NULL;
-    [super dealloc];
-}
-
-@end
diff --git a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectLists.h b/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectLists.h
deleted file mode 100644
index 1f1424c68..000000000
--- a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectLists.h
+++ /dev/null
@@ -1,49 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_RenameComGoogleAndroidCollectLists")
-#ifdef RESTRICT_RenameComGoogleAndroidCollectLists
-#define INCLUDE_ALL_RenameComGoogleAndroidCollectLists 0
-#else
-#define INCLUDE_ALL_RenameComGoogleAndroidCollectLists 1
-#endif
-#undef RESTRICT_RenameComGoogleAndroidCollectLists
-
-#if !defined (RenameComGoogleAndroidCollectLists_) && (INCLUDE_ALL_RenameComGoogleAndroidCollectLists || defined(INCLUDE_RenameComGoogleAndroidCollectLists))
-#define RenameComGoogleAndroidCollectLists_
-
-@class IOSObjectArray;
-@class JavaUtilArrayList;
-
-@interface RenameComGoogleAndroidCollectLists : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (JavaUtilArrayList *)newArrayList OBJC_METHOD_FAMILY_NONE;
-
-+ (JavaUtilArrayList *)newArrayListWithNSObjectArray:(IOSObjectArray *)elements OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(RenameComGoogleAndroidCollectLists)
-
-FOUNDATION_EXPORT void RenameComGoogleAndroidCollectLists_init(RenameComGoogleAndroidCollectLists *self);
-
-FOUNDATION_EXPORT RenameComGoogleAndroidCollectLists *new_RenameComGoogleAndroidCollectLists_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT RenameComGoogleAndroidCollectLists *create_RenameComGoogleAndroidCollectLists_init();
-
-FOUNDATION_EXPORT JavaUtilArrayList *RenameComGoogleAndroidCollectLists_newArrayList();
-
-FOUNDATION_EXPORT JavaUtilArrayList *RenameComGoogleAndroidCollectLists_newArrayListWithNSObjectArray_(IOSObjectArray *elements);
-
-J2OBJC_TYPE_LITERAL_HEADER(RenameComGoogleAndroidCollectLists)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_RenameComGoogleAndroidCollectLists")
diff --git a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectLists.m b/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectLists.m
deleted file mode 100644
index e854ffea0..000000000
--- a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectLists.m
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "RenameComGoogleAndroidCollectLists.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collections.h"
-
-@implementation RenameComGoogleAndroidCollectLists
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  RenameComGoogleAndroidCollectLists_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (JavaUtilArrayList *)newArrayList {
-  return RenameComGoogleAndroidCollectLists_newArrayList();
-}
-
-+ (JavaUtilArrayList *)newArrayListWithNSObjectArray:(IOSObjectArray *)elements {
-  return RenameComGoogleAndroidCollectLists_newArrayListWithNSObjectArray_(elements);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x9, -1, -1, -1, 0, -1, -1 },
-    { NULL, "LJavaUtilArrayList;", 0x89, 1, 2, -1, 3, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(newArrayList);
-  methods[2].selector = @selector(newArrayListWithNSObjectArray:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "<E:Ljava/lang/Object;>()Ljava/util/ArrayList<TE;>;", "newArrayList", "[LNSObject;", "<E:Ljava/lang/Object;>([TE;)Ljava/util/ArrayList<TE;>;" };
-  static const J2ObjcClassInfo _RenameComGoogleAndroidCollectLists = { "Lists", "rename.com.google.android.collect", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
-  return &_RenameComGoogleAndroidCollectLists;
-}
-
-@end
-
-void RenameComGoogleAndroidCollectLists_init(RenameComGoogleAndroidCollectLists *self) {
-  NSObject_init(self);
-}
-
-RenameComGoogleAndroidCollectLists *new_RenameComGoogleAndroidCollectLists_init() {
-  J2OBJC_NEW_IMPL(RenameComGoogleAndroidCollectLists, init)
-}
-
-RenameComGoogleAndroidCollectLists *create_RenameComGoogleAndroidCollectLists_init() {
-  J2OBJC_CREATE_IMPL(RenameComGoogleAndroidCollectLists, init)
-}
-
-JavaUtilArrayList *RenameComGoogleAndroidCollectLists_newArrayList() {
-  RenameComGoogleAndroidCollectLists_initialize();
-  return create_JavaUtilArrayList_init();
-}
-
-JavaUtilArrayList *RenameComGoogleAndroidCollectLists_newArrayListWithNSObjectArray_(IOSObjectArray *elements) {
-  RenameComGoogleAndroidCollectLists_initialize();
-  jint capacity = (((IOSObjectArray *) nil_chk(elements))->size_ * 110) / 100 + 5;
-  JavaUtilArrayList *list = create_JavaUtilArrayList_initWithInt_(capacity);
-  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(list, elements);
-  return list;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RenameComGoogleAndroidCollectLists)
diff --git a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectSets.h b/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectSets.h
deleted file mode 100644
index 3a8a4f54d..000000000
--- a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectSets.h
+++ /dev/null
@@ -1,58 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_RenameComGoogleAndroidCollectSets")
-#ifdef RESTRICT_RenameComGoogleAndroidCollectSets
-#define INCLUDE_ALL_RenameComGoogleAndroidCollectSets 0
-#else
-#define INCLUDE_ALL_RenameComGoogleAndroidCollectSets 1
-#endif
-#undef RESTRICT_RenameComGoogleAndroidCollectSets
-
-#if !defined (RenameComGoogleAndroidCollectSets_) && (INCLUDE_ALL_RenameComGoogleAndroidCollectSets || defined(INCLUDE_RenameComGoogleAndroidCollectSets))
-#define RenameComGoogleAndroidCollectSets_
-
-@class IOSObjectArray;
-@class JavaUtilHashSet;
-@protocol JavaUtilSortedSet;
-
-@interface RenameComGoogleAndroidCollectSets : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (JavaUtilHashSet *)newHashSet OBJC_METHOD_FAMILY_NONE;
-
-+ (JavaUtilHashSet *)newHashSetWithNSObjectArray:(IOSObjectArray *)elements OBJC_METHOD_FAMILY_NONE;
-
-+ (id<JavaUtilSortedSet>)newSortedSet OBJC_METHOD_FAMILY_NONE;
-
-+ (id<JavaUtilSortedSet>)newSortedSetWithNSObjectArray:(IOSObjectArray *)elements OBJC_METHOD_FAMILY_NONE;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(RenameComGoogleAndroidCollectSets)
-
-FOUNDATION_EXPORT void RenameComGoogleAndroidCollectSets_init(RenameComGoogleAndroidCollectSets *self);
-
-FOUNDATION_EXPORT RenameComGoogleAndroidCollectSets *new_RenameComGoogleAndroidCollectSets_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT RenameComGoogleAndroidCollectSets *create_RenameComGoogleAndroidCollectSets_init();
-
-FOUNDATION_EXPORT JavaUtilHashSet *RenameComGoogleAndroidCollectSets_newHashSet();
-
-FOUNDATION_EXPORT JavaUtilHashSet *RenameComGoogleAndroidCollectSets_newHashSetWithNSObjectArray_(IOSObjectArray *elements);
-
-FOUNDATION_EXPORT id<JavaUtilSortedSet> RenameComGoogleAndroidCollectSets_newSortedSet();
-
-FOUNDATION_EXPORT id<JavaUtilSortedSet> RenameComGoogleAndroidCollectSets_newSortedSetWithNSObjectArray_(IOSObjectArray *elements);
-
-J2OBJC_TYPE_LITERAL_HEADER(RenameComGoogleAndroidCollectSets)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_RenameComGoogleAndroidCollectSets")
diff --git a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectSets.m b/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectSets.m
deleted file mode 100644
index 518ed4fa3..000000000
--- a/core/iostest/daggerframework/main/androidbase/RenameComGoogleAndroidCollectSets.m
+++ /dev/null
@@ -1,98 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "RenameComGoogleAndroidCollectSets.h"
-#include "java/util/Collections.h"
-#include "java/util/HashSet.h"
-#include "java/util/SortedSet.h"
-#include "java/util/TreeSet.h"
-
-@implementation RenameComGoogleAndroidCollectSets
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  RenameComGoogleAndroidCollectSets_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (JavaUtilHashSet *)newHashSet {
-  return RenameComGoogleAndroidCollectSets_newHashSet();
-}
-
-+ (JavaUtilHashSet *)newHashSetWithNSObjectArray:(IOSObjectArray *)elements {
-  return RenameComGoogleAndroidCollectSets_newHashSetWithNSObjectArray_(elements);
-}
-
-+ (id<JavaUtilSortedSet>)newSortedSet {
-  return RenameComGoogleAndroidCollectSets_newSortedSet();
-}
-
-+ (id<JavaUtilSortedSet>)newSortedSetWithNSObjectArray:(IOSObjectArray *)elements {
-  return RenameComGoogleAndroidCollectSets_newSortedSetWithNSObjectArray_(elements);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilHashSet;", 0x9, -1, -1, -1, 0, -1, -1 },
-    { NULL, "LJavaUtilHashSet;", 0x89, 1, 2, -1, 3, -1, -1 },
-    { NULL, "LJavaUtilSortedSet;", 0x9, -1, -1, -1, 4, -1, -1 },
-    { NULL, "LJavaUtilSortedSet;", 0x89, 5, 2, -1, 6, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(newHashSet);
-  methods[2].selector = @selector(newHashSetWithNSObjectArray:);
-  methods[3].selector = @selector(newSortedSet);
-  methods[4].selector = @selector(newSortedSetWithNSObjectArray:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "<K:Ljava/lang/Object;>()Ljava/util/HashSet<TK;>;", "newHashSet", "[LNSObject;", "<E:Ljava/lang/Object;>([TE;)Ljava/util/HashSet<TE;>;", "<E:Ljava/lang/Object;>()Ljava/util/SortedSet<TE;>;", "newSortedSet", "<E:Ljava/lang/Object;>([TE;)Ljava/util/SortedSet<TE;>;" };
-  static const J2ObjcClassInfo _RenameComGoogleAndroidCollectSets = { "Sets", "rename.com.google.android.collect", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
-  return &_RenameComGoogleAndroidCollectSets;
-}
-
-@end
-
-void RenameComGoogleAndroidCollectSets_init(RenameComGoogleAndroidCollectSets *self) {
-  NSObject_init(self);
-}
-
-RenameComGoogleAndroidCollectSets *new_RenameComGoogleAndroidCollectSets_init() {
-  J2OBJC_NEW_IMPL(RenameComGoogleAndroidCollectSets, init)
-}
-
-RenameComGoogleAndroidCollectSets *create_RenameComGoogleAndroidCollectSets_init() {
-  J2OBJC_CREATE_IMPL(RenameComGoogleAndroidCollectSets, init)
-}
-
-JavaUtilHashSet *RenameComGoogleAndroidCollectSets_newHashSet() {
-  RenameComGoogleAndroidCollectSets_initialize();
-  return create_JavaUtilHashSet_init();
-}
-
-JavaUtilHashSet *RenameComGoogleAndroidCollectSets_newHashSetWithNSObjectArray_(IOSObjectArray *elements) {
-  RenameComGoogleAndroidCollectSets_initialize();
-  jint capacity = ((IOSObjectArray *) nil_chk(elements))->size_ * 4 / 3 + 1;
-  JavaUtilHashSet *set = create_JavaUtilHashSet_initWithInt_(capacity);
-  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(set, elements);
-  return set;
-}
-
-id<JavaUtilSortedSet> RenameComGoogleAndroidCollectSets_newSortedSet() {
-  RenameComGoogleAndroidCollectSets_initialize();
-  return create_JavaUtilTreeSet_init();
-}
-
-id<JavaUtilSortedSet> RenameComGoogleAndroidCollectSets_newSortedSetWithNSObjectArray_(IOSObjectArray *elements) {
-  RenameComGoogleAndroidCollectSets_initialize();
-  id<JavaUtilSortedSet> set = create_JavaUtilTreeSet_init();
-  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(set, elements);
-  return set;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RenameComGoogleAndroidCollectSets)
diff --git a/core/iostest/daggerframework/main/androidbase/SQLiteConnectionNative.h b/core/iostest/daggerframework/main/androidbase/SQLiteConnectionNative.h
deleted file mode 100644
index 37a881c63..000000000
--- a/core/iostest/daggerframework/main/androidbase/SQLiteConnectionNative.h
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2006-2007 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-//
-//  SQLiteConnectionNative.h
-//  squidb-ios
-//  This file is a fork/port of AOSP SQLiteConnection.cpp (https://github.com/android/platform_frameworks_base/blob/master/core/jni/android_database_SQLiteConnection.cpp)
-//  The core logic/structures defined in the file have been left intact; this is just a translation to use Objective-C
-//  syntax instead of C++ to make working with the j2objc tool easier.
-//
-
-#import <sqlite3.h>
-#import "IOSPrimitiveArray.h"
-
-@interface SQLiteConnectionNative : NSObject
-
-@property sqlite3 *db;
-@property (retain) NSString *path;
-@property (retain) NSString *label;
-@property int openFlags;
-
-+ (SQLiteConnectionNative *) nativeOpen:(NSString *)pathStr openFlags:(jint) openFlags labelStr:(NSString *)labelStr enableTrace:(jboolean)enableTrace enableProfile:(jboolean)enableProfile;
-
-+ (void) nativeClose:(NSObject *)connectionPtr;
-
-//+ (void) nativeRegisterLocalizedCollators:(NSObject *)connectionPtr withLocaleStr:(NSString *)localeStr;
-
-+ (NSObject *) nativePrepareStatement:(NSObject *)connectionPtr withSql:(NSString *)sqlString;
-
-+ (void) nativeFinalizeStatement:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jint) nativeGetParameterCount:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jboolean) nativeIsReadOnly:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jint) nativeGetColumnCount:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (NSString *) nativeGetColumnName:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index;
-
-+ (void) nativeBindNull:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index;
-
-+ (void) nativeBindLong:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(jlong)value;
-
-+ (void) nativeBindDouble:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(jdouble)value;
-
-+ (void) nativeBindBlob:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(IOSByteArray *)value;
-
-+ (void) nativeBindString:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(NSString *)value;
-
-+ (void) nativeResetStatementAndClearBindings:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (void) nativeExecute:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jlong) nativeExecuteForLong:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (NSString *) nativeExecuteForString:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jint) nativeExecuteForChangedRowCount:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jlong) nativeExecuteForLastInsertedRowId:(NSObject *)connectionPtr statement:(NSObject *)statementPtr;
-
-+ (jlong) nativeExecuteForCursorWindow:(NSObject *)connectionPtr statement:(NSObject *)statementPtr
-                               window:(NSObject *)windowPtr startPos:(jint)startPos requiredPos:(jint)requiredPos
-                               countAllRows:(jboolean)countAllRows;
-
-
-+ (jint) nativeGetDbLookaside:(NSObject *)connectionPtr;
-
-@end
diff --git a/core/iostest/daggerframework/main/androidbase/SQLiteConnectionNative.m b/core/iostest/daggerframework/main/androidbase/SQLiteConnectionNative.m
deleted file mode 100644
index e7c89230c..000000000
--- a/core/iostest/daggerframework/main/androidbase/SQLiteConnectionNative.m
+++ /dev/null
@@ -1,601 +0,0 @@
-/*
- * Copyright (C) 2006-2007 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-//
-//  SQLiteConnectionNative.m
-//  squidb-ios
-//  This file is a fork/port of AOSP SQLiteConnection.cpp (https://github.com/android/platform_frameworks_base/blob/master/core/jni/android_database_SQLiteConnection.cpp)
-//  The core logic/structures defined in the file have been left intact; this is just a translation to use Objective-C
-//  syntax instead of C++ to make working with the j2objc tool easier.
-//
-
-#import <Foundation/Foundation.h>
-#import "SQLiteConnectionNative.h"
-#import "SQLitePreparedStatement.h"
-#import "CursorWindowNative.h"
-#import "NSString+JavaString.h"
-
-@implementation SQLiteConnectionNative
-
-@synthesize db;
-@synthesize path;
-@synthesize label;
-@synthesize openFlags;
-
-static const int BUSY_TIMEOUT_MS = 2500;
-static const int SQLITE_SOFT_HEAP_LIMIT = (4 * 1024 * 1024);
-
-enum {
-    OPEN_READWRITE          = 0x00000000,
-    OPEN_READONLY           = 0x00000001,
-    OPEN_READ_MASK          = 0x00000001,
-    NO_LOCALIZED_COLLATORS  = 0x00000010,
-    CREATE_IF_NECESSARY     = 0x10000000,
-};
-
-enum CopyRowResult {
-    CPR_OK,
-    CPR_FULL,
-    CPR_ERROR,
-};
-
-static int coll_localized(
- void *not_used,
- int nKey1, const void *pKey1,
- int nKey2, const void *pKey2
-){
-    int rc, n;
-    n = nKey1<nKey2 ? nKey1 : nKey2;
-    rc = memcmp(pKey1, pKey2, n);
-    if( rc==0 ){
-        rc = nKey1 - nKey2;
-    }
-    return rc;
-}
-
-// Called each time a statement begins execution, when tracing is enabled.
-static void sqliteTraceCallback(void *data, const char *sql) {
-//    SQLiteConnection* connection = (__bridge SQLiteConnection *)(data);
-//    ALOG(LOG_VERBOSE, SQLITE_TRACE_TAG, "%s: \"%s\"\n",
-//         connection->label.c_str(), sql);
-}
-
-
-// Called each time a statement finishes execution, when profiling is enabled.
-static void sqliteProfileCallback(void *data, const char *sql, sqlite3_uint64 tm) {
-//    SQLiteConnection* connection = (__bridge SQLiteConnection *)(data);
-//    ALOG(LOG_VERBOSE, SQLITE_PROFILE_TAG, "%s: \"%s\" took %0.3f ms\n",
-//         connection->label.c_str(), sql, tm * 0.000001f);
-}
-
-+ (SQLiteConnectionNative *) nativeOpen:(NSString *)pathStr openFlags:(jint) openFlags labelStr:(NSString *)labelStr enableTrace:(jboolean)enableTrace enableProfile:(jboolean)enableProfile {
-    int sqliteFlags;
-    if (openFlags & CREATE_IF_NECESSARY) {
-        sqliteFlags = SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE;
-    } else if (openFlags & OPEN_READONLY) {
-        sqliteFlags = SQLITE_OPEN_READONLY;
-    } else {
-        sqliteFlags = SQLITE_OPEN_READWRITE;
-    }
-
-    const char* pathChars = [pathStr UTF8String];
-
-    sqlite3* db;
-    int err = sqlite3_open_v2(pathChars, &db, sqliteFlags, NULL);
-
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_errcode(err, "Could not open database");
-        return 0;
-    }
-    sqlite3_soft_heap_limit(SQLITE_SOFT_HEAP_LIMIT);
-    
-    err = sqlite3_create_collation(db, "localized", SQLITE_UTF8, 0, coll_localized);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_errcode(err, "Could not register collation");
-        sqlite3_close(db);
-        return 0;
-    }
-
-    // Check that the database is really read/write when that is what we asked for.
-    if ((sqliteFlags & SQLITE_OPEN_READWRITE) && sqlite3_db_readonly(db, NULL)) {
-        throw_sqlite3_exception_message(db, "Could not open the database in read/write mode.");
-        sqlite3_close(db);
-        return 0;
-    }
-
-    // Set the default busy handler to retry automatically before returning SQLITE_BUSY.
-    err = sqlite3_busy_timeout(db, BUSY_TIMEOUT_MS);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_message(db, "Could not set busy timeout");
-        sqlite3_close(db);
-        return 0;
-    }
-
-    // Register custom Android functions.
-#if 0
-    err = register_android_functions(db, UTF16_STORAGE);
-    if (err) {
-        throw_sqlite3_exception_message(db, "Could not register Android SQL functions.");
-        sqlite3_close(db);
-        return 0;
-    }
-#endif
-
-    // Create wrapper object.
-    SQLiteConnectionNative *connection = [[SQLiteConnectionNative alloc] init]; //new SQLiteConnection(db, openFlags, path, label);
-    connection.path = pathStr;
-    connection.label = labelStr;
-    connection.openFlags = openFlags;
-    connection.db = db;
-
-    // Enable tracing and profiling if requested.
-    if (enableTrace) {
-        sqlite3_trace(db, &sqliteTraceCallback, (__bridge void *)(connection));
-    }
-    if (enableProfile) {
-        sqlite3_profile(db, &sqliteProfileCallback, (__bridge void *)(connection));
-    }
-
-//    ALOGV("Opened connection %p with label '%s'", db, label.c_str());
-    return connection;
-}
-
-+ (void) nativeClose:(NSObject *)connectionPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)connectionPtr;
-    if (connection) {
-        int err = sqlite3_close(connection.db);
-        if (err != SQLITE_OK) {
-//            ALOGE("sqlite3_close(%p) failed: %d", connection->db, err);
-            throw_sqlite3_exception_message(connection.db, "Count not close db.");
-            return;
-        }
-    }
-}
-
-/*+ (void) nativeRegisterLocalizedCollators:(NSObject *)connectionPtr withLocaleStr:(NSString *)localeStr {
-    IOSByteArray *sql = [localeStr java_getBytesWithEncoding:NSUTF16StringEncoding];
-    uint32_t sqlLength = [sql length];
-    SQLiteConnectionNative* connection = (SQLiteConnectionNative *)(connectionPtr);
-
-   int err = register_localized_collators(connection->db, [sql buffer], UTF16_STORAGE);
-       if (err != SQLITE_OK) {
-//            ALOGE("sqlite3_close(%p) failed: %d", connection->db, err);
-           throw_sqlite3_exception_message(connection.db, "failed nativeRegisterLocalizedCollators");
-           return;
-       }
-   }
-}*/
-
-+ (NSObject *) nativePrepareStatement:(NSObject *)connectionPtr withSql:(NSString *)sqlString {
-    SQLiteConnectionNative* connection = (SQLiteConnectionNative *)(connectionPtr);
-
-    IOSByteArray *sql = [sqlString java_getBytesWithEncoding:NSUTF16StringEncoding];
-    uint32_t sqlLength = [sql length];
-    sqlite3_stmt* statement;
-    int err = sqlite3_prepare16_v2(connection->db, [sql buffer], sqlLength, &statement, NULL);
-
-    if (err != SQLITE_OK) {
-        // Error messages like 'near ")": syntax error' are not
-        // always helpful enough, so construct an error string that
-        // includes the query itself.
-        const char *query = [sqlString UTF8String];
-        char *message = (char*) malloc(strlen(query) + 50);
-        if (message) {
-            strcpy(message, ", while compiling: "); // less than 50 chars
-            strcat(message, query);
-        }
-        throw_sqlite3_exception_message(connection.db, message);
-        free(message);
-        return nil;
-    }
-
-//    ALOGV("Prepared statement %p on connection %p", statement, connection->db);
-    return [[SQLitePreparedStatement alloc] initWithStatement:statement];
-}
-
-+ (void) nativeFinalizeStatement:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-//    SQLiteConnection* connection = (SQLiteConnection *)(connectionPtr);
-    SQLitePreparedStatement *preparedStatement = (SQLitePreparedStatement *)(statementPtr);
-    sqlite3_stmt* statement = preparedStatement.statement;
-
-    // We ignore the result of sqlite3_finalize because it is really telling us about
-    // whether any errors occurred while executing the statement.  The statement itself
-    // is always finalized regardless.
-//    ALOGV("Finalized statement %p on connection %p", statement, connection->db);
-    sqlite3_finalize(statement);
-    preparedStatement.statement = nil;
-
-}
-
-+ (jint) nativeGetParameterCount:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-//    SQLiteConnection* connection = (SQLiteConnection *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    return sqlite3_bind_parameter_count(statement.statement);
-}
-
-+ (jboolean) nativeIsReadOnly:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-//    SQLiteConnection *connection = (SQLiteConnection* )(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    return sqlite3_stmt_readonly(statement.statement) != 0;
-}
-
-+ (jint) nativeGetColumnCount:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-//    SQLiteConnection *connection = (SQLiteConnection *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    return sqlite3_column_count(statement.statement);
-}
-
-+ (NSString *) nativeGetColumnName:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index {
-//    SQLiteConnection *connection = (SQLiteConnection *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    const jchar* name = (const jchar *)(sqlite3_column_name16(statement.statement, index));
-    if (name) {
-        size_t length = 0;
-        while (name[length]) {
-            length += 1;
-        }
-        IOSCharArray *chars = [IOSCharArray newArrayWithChars:name count:length];
-        NSString* asdf = [NSString java_stringWithCharacters:chars];
-        [chars release];
-        return asdf;
-    }
-    return nil;
-}
-
-+ (void) nativeBindNull:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-    int err = sqlite3_bind_null(statement.statement, index);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-}
-
-+ (void) nativeBindLong:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(jlong)value {
-        SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-    int err = sqlite3_bind_int64(statement.statement, index, value);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-}
-
-+ (void) nativeBindDouble:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(jdouble)value {
-        SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-    int err = sqlite3_bind_double(statement.statement, index, value);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-}
-
-+ (void) nativeBindBlob:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(IOSByteArray *)value {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    int valueLength = [value length];
-    void * buffer = [value buffer];
-//    jbyte* value = static_cast<jbyte*>(env->GetPrimitiveArrayCritical(valueArray, NULL));
-    int err = sqlite3_bind_blob(statement.statement, index, buffer, valueLength, SQLITE_TRANSIENT);
-//    env->ReleasePrimitiveArrayCritical(valueArray, value, JNI_ABORT);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-}
-
-+ (void) nativeBindString:(NSObject *)connectionPtr statement:(NSObject *)statementPtr index:(jint)index value:(NSString *)value {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    //TODO: Figure this out with UTF16...
-    const IOSByteArray *bytes = [value java_getBytesWithEncoding:NSUTF8StringEncoding];
-    int err = sqlite3_bind_text(statement.statement, index, [bytes buffer], [bytes length],
-                                  SQLITE_TRANSIENT);
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-}
-
-+ (void) nativeResetStatementAndClearBindings:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    int err = sqlite3_reset(statement.statement);
-    if (err == SQLITE_OK) {
-        err = sqlite3_clear_bindings(statement.statement);
-    }
-    if (err != SQLITE_OK) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-}
-
-+ (jint) executeNonQuery:(SQLiteConnectionNative *)connection statement:(SQLitePreparedStatement *)statement {
-    int err = sqlite3_step(statement.statement);
-    if (err == SQLITE_ROW) {
-        throw_sqlite3_exception_message(NULL,
-                                "Queries can be performed using SQLiteDatabase query or rawQuery methods only.");
-    } else if (err != SQLITE_DONE) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-    return err;
-}
-
-+ (void) nativeExecute:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    [SQLiteConnectionNative executeNonQuery:connection statement:statement];
-}
-
-+ (jint) executeOneRowQuery:(SQLiteConnectionNative *)connection statement:(SQLitePreparedStatement *)statement {
-    jint err = sqlite3_step(statement.statement);
-    if (err != SQLITE_ROW) {
-        throw_sqlite3_exception_handle(connection.db);
-    }
-    return err;
-}
-
-+ (jlong) nativeExecuteForLong:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    int err = [SQLiteConnectionNative executeOneRowQuery:connection statement:statement];
-    if (err == SQLITE_ROW && sqlite3_column_count(statement.statement) >= 1) {
-        return sqlite3_column_int64(statement.statement, 0);
-    }
-    return -1;
-}
-
-+ (NSString *) nativeExecuteForString:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    int err = [SQLiteConnectionNative executeOneRowQuery:connection statement:statement];
-    if (err == SQLITE_ROW && sqlite3_column_count(statement.statement) >= 1) {
-        const jchar* text = (const jchar *)(sqlite3_column_text16(statement.statement, 0));
-        if (text) {
-            size_t length = sqlite3_column_bytes16(statement.statement, 0) / sizeof(jchar);
-            IOSCharArray *chars = [IOSCharArray newArrayWithChars:text count:length];
-            NSString* asdf = [NSString java_stringWithCharacters:chars];
-            [chars release];
-            return asdf;
-        }
-    }
-    return NULL;
-}
-
-+ (jint) nativeExecuteForChangedRowCount:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    int err = [SQLiteConnectionNative executeNonQuery:connection statement:statement];
-    return err == SQLITE_DONE ? sqlite3_changes(connection.db) : -1;
-}
-
-+ (jlong) nativeExecuteForLastInsertedRowId:(NSObject *)connectionPtr statement:(NSObject *)statementPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-
-    int err = [SQLiteConnectionNative executeNonQuery:connection statement:statement];
-    return err == SQLITE_DONE && sqlite3_changes(connection.db) > 0
-    ? sqlite3_last_insert_rowid(connection->db) : -1;
-}
-
-static enum CopyRowResult copyRow(CursorWindowNative* window,
-                             sqlite3_stmt* statement, int numColumns, int startPos, int addedRows) {
-    // Allocate a new field directory for the row.
-    status_t status = [window allocRow];
-    if (status) {
-//        LOG_WINDOW("Failed allocating fieldDir at startPos %d row %d, error=%d",
-//                   startPos, addedRows, status);
-        return CPR_FULL;
-    }
-
-    // Pack the row into the window.
-    enum CopyRowResult result = CPR_OK;
-    for (int i = 0; i < numColumns; i++) {
-        int type = sqlite3_column_type(statement, i);
-        if (type == SQLITE_TEXT) {
-            // TEXT data
-            const char* text = (const char*)(sqlite3_column_text(statement, i));
-            // SQLite does not include the NULL terminator in size, but does
-            // ensure all strings are NULL terminated, so increase size by
-            // one to make sure we store the terminator.
-            uint32_t sizeIncludingNull = sqlite3_column_bytes(statement, i) + 1;
-            status = [window putStringInRow:addedRows column:i value:text size:sizeIncludingNull];
-            if (status) {
-//                LOG_WINDOW("Failed allocating %u bytes for text at %d,%d, error=%d",
-//                           sizeIncludingNull, startPos + addedRows, i, status);
-                result = CPR_FULL;
-                break;
-            }
-//            LOG_WINDOW("%d,%d is TEXT with %u bytes",
-//                       startPos + addedRows, i, sizeIncludingNull);
-        } else if (type == SQLITE_INTEGER) {
-            // INTEGER data
-            int64_t value = sqlite3_column_int64(statement, i);
-            status = [window putLongInRow:addedRows column:i value:value];
-            if (status) {
-//                LOG_WINDOW("Failed allocating space for a long in column %d, error=%d",
-//                           i, status);
-                result = CPR_FULL;
-                break;
-            }
-//            LOG_WINDOW("%d,%d is INTEGER 0x%016llx", startPos + addedRows, i, value);
-        } else if (type == SQLITE_FLOAT) {
-            // FLOAT data
-            double value = sqlite3_column_double(statement, i);
-            status = [window putDoubleInRow:addedRows column:i value:value];
-            if (status) {
-//                LOG_WINDOW("Failed allocating space for a double in column %d, error=%d",
-//                           i, status);
-                result = CPR_FULL;
-                break;
-            }
-//            LOG_WINDOW("%d,%d is FLOAT %lf", startPos + addedRows, i, value);
-        } else if (type == SQLITE_BLOB) {
-            // BLOB data
-            const void* blob = sqlite3_column_blob(statement, i);
-            uint32_t size = sqlite3_column_bytes(statement, i);
-            status = [window putBlobInRow:addedRows column:i value:blob size:size];
-            if (status) {
-//                LOG_WINDOW("Failed allocating %u bytes for blob at %d,%d, error=%d",
-//                           size, startPos + addedRows, i, status);
-                result = CPR_FULL;
-                break;
-            }
-//            LOG_WINDOW("%d,%d is Blob with %u bytes",
-//                       startPos + addedRows, i, size);
-        } else if (type == SQLITE_NULL) {
-            // NULL field
-            status = [window putNullInRow:addedRows column:i];
-            if (status) {
-//                LOG_WINDOW("Failed allocating space for a null in column %d, error=%d",
-//                           i, status);
-                result = CPR_FULL;
-                break;
-            }
-
-//            LOG_WINDOW("%d,%d is NULL", startPos + addedRows, i);
-        } else {
-            // Unknown data
-//            ALOGE("Unknown column type when filling database window");
-            throw_sqlite3_exception_message(NULL, "Unknown column type when filling window");
-            result = CPR_ERROR;
-            break;
-        }
-    }
-
-    // Free the last row if if was not successfully copied.
-    if (result != CPR_OK) {
-        [window freeLastRow];
-    }
-    return result;
-}
-
-+ (jlong) nativeExecuteForCursorWindow:(NSObject *)connectionPtr statement:(NSObject *)statementPtr window:(NSObject *)windowPtr startPos:(jint)startPos requiredPos:(jint)requiredPos countAllRows:(jboolean)countAllRows {
-
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-    SQLitePreparedStatement *statement = (SQLitePreparedStatement *)(statementPtr);
-    CursorWindowNative *window = (CursorWindowNative *)(windowPtr);
-
-    status_t status = [window clear];
-    if (status) {
-        NSString *message = [NSString stringWithFormat:@"Failed to clear the cursor window, status=%d", status];
-        throw_sqlite3_exception_message(connection.db, [message UTF8String]);
-        return 0;
-    }
-
-    int numColumns = sqlite3_column_count(statement.statement);
-    status = [window setNumColumns:numColumns];
-    if (status) {
-        NSString *message = [NSString stringWithFormat:
-                             @"Failed to set the cursor window column count to %d, status=%d", numColumns, status];
-        throw_sqlite3_exception_message(connection.db, [message UTF8String]);
-        return 0;
-    }
-
-    int retryCount = 0;
-    int totalRows = 0;
-    int addedRows = 0;
-    bool windowFull = false;
-    bool gotException = false;
-    while (!gotException && (!windowFull || countAllRows)) {
-        int err = sqlite3_step(statement.statement);
-        if (err == SQLITE_ROW) {
-//            LOG_WINDOW("Stepped statement %p to row %d", statement, totalRows);
-            retryCount = 0;
-            totalRows += 1;
-
-            // Skip the row if the window is full or we haven't reached the start position yet.
-            if (startPos >= totalRows || windowFull) {
-                continue;
-            }
-
-            enum CopyRowResult cpr = copyRow(window, statement.statement, numColumns, startPos, addedRows);
-            if (cpr == CPR_FULL && addedRows && startPos + addedRows <= requiredPos) {
-                // We filled the window before we got to the one row that we really wanted.
-                // Clear the window and start filling it again from here.
-                // TODO: Would be nicer if we could progressively replace earlier rows.
-                [window clear];
-                [window setNumColumns:numColumns];
-                startPos += addedRows;
-                addedRows = 0;
-                cpr = copyRow(window, statement.statement, numColumns, startPos, addedRows);
-            }
-
-            if (cpr == CPR_OK) {
-                addedRows += 1;
-            } else if (cpr == CPR_FULL) {
-                windowFull = true;
-            } else {
-                gotException = true;
-            }
-        } else if (err == SQLITE_DONE) {
-            // All rows processed, bail
-//            LOG_WINDOW("Processed all rows");
-            break;
-        } else if (err == SQLITE_LOCKED || err == SQLITE_BUSY) {
-            // The table is locked, retry
-//            LOG_WINDOW("Database locked, retrying");
-            if (retryCount > 50) {
-//                ALOGE("Bailing on database busy retry");
-                throw_sqlite3_exception_message(connection.db, "retrycount exceeded");
-                gotException = true;
-            } else {
-                // Sleep to give the thread holding the lock a chance to finish
-                usleep(1000);
-                retryCount++;
-            }
-        } else {
-            throw_sqlite3_exception_handle(connection.db);
-            gotException = true;
-        }
-    }
-
-//    LOG_WINDOW("Resetting statement %p after fetching %d rows and adding %d rows"
-//               "to the window in %d bytes",
-//               statement, totalRows, addedRows, window->size() - window->freeSpace());
-    sqlite3_reset(statement.statement);
-
-    // Report the total number of rows on request.
-    if (startPos > totalRows) {
-//        ALOGE("startPos %d > actual rows %d", startPos, totalRows);
-    }
-    jlong result = (jlong)(startPos) << 32 | (jlong)(totalRows);
-    return result;
-}
-
-+ (jint) nativeGetDbLookaside:(NSObject *)connectionPtr {
-    SQLiteConnectionNative *connection = (SQLiteConnectionNative *)(connectionPtr);
-
-    int cur = -1;
-    int unused;
-    sqlite3_db_status(connection.db, SQLITE_DBSTATUS_LOOKASIDE_USED, &cur, &unused, 0);
-    return cur;
-}
-
-- (void)dealloc {
-path = nil;
-label = nil;
-[super dealloc];
-}
-
-
-@end
diff --git a/core/iostest/daggerframework/main/androidbase/SQLiteErrors.h b/core/iostest/daggerframework/main/androidbase/SQLiteErrors.h
deleted file mode 100644
index 221aebb8f..000000000
--- a/core/iostest/daggerframework/main/androidbase/SQLiteErrors.h
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Copyright (C) 2006-2007 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-//
-//  SQLiteErrors.h
-//  squidb-ios
-//  This file extracts portions of AOSP SQLiteCommon.cpp (https://github.com/android/platform_frameworks_base/blob/master/core/jni/android_database_SQLiteCommon.cpp)
-//  The core logic/structures defined in the file have been left intact; this is just a translation to use Objective-C
-//  syntax instead of C++ to make working with the j2objc tool easier.
-//
-
-#import <sqlite3.h>
-
-typedef int32_t     status_t;
-
-enum {
-    OK                = 0,    // Everything's swell.
-    NO_ERROR          = 0,    // No errors.
-
-    UNKNOWN_ERROR       = 0x80000000,
-
-    NO_MEMORY           = -ENOMEM,
-    INVALID_OPERATION   = -ENOSYS,
-    BAD_VALUE           = -EINVAL,
-    BAD_TYPE            = 0x80000001,
-    NAME_NOT_FOUND      = -ENOENT,
-    PERMISSION_DENIED   = -EPERM,
-    NO_INIT             = -ENODEV,
-    ALREADY_EXISTS      = -EEXIST,
-    DEAD_OBJECT         = -EPIPE,
-    FAILED_TRANSACTION  = 0x80000002,
-    JPARKS_BROKE_IT     = -EPIPE,
-#if !defined(HAVE_MS_C_RUNTIME)
-    BAD_INDEX           = -EOVERFLOW,
-    NOT_ENOUGH_DATA     = -ENODATA,
-    WOULD_BLOCK         = -EWOULDBLOCK,
-    TIMED_OUT           = -ETIMEDOUT,
-    UNKNOWN_TRANSACTION = -EBADMSG,
-#else
-    BAD_INDEX           = -E2BIG,
-    NOT_ENOUGH_DATA     = 0x80000003,
-    WOULD_BLOCK         = 0x80000004,
-    TIMED_OUT           = 0x80000005,
-    UNKNOWN_TRANSACTION = 0x80000006,
-#endif
-};
-
-/* throw a SQLiteException with a message appropriate for the error in handle */
-void throw_sqlite3_exception_handle(sqlite3* handle);
-
-/* throw a SQLiteException with a message appropriate for the error in handle
- concatenated with the given message
- */
-void throw_sqlite3_exception_message(sqlite3* handle, const char* message);
-
-/* throw a SQLiteException for a given error code */
-void throw_sqlite3_exception_errcode(int errcode, const char* message);
-
-void throw_sqlite3_exception(int errcode, const char* sqlite3Message, const char* message);
diff --git a/core/iostest/daggerframework/main/androidbase/SQLiteErrors.m b/core/iostest/daggerframework/main/androidbase/SQLiteErrors.m
deleted file mode 100644
index 71d8fac47..000000000
--- a/core/iostest/daggerframework/main/androidbase/SQLiteErrors.m
+++ /dev/null
@@ -1,162 +0,0 @@
-/*
- * Copyright (C) 2006-2007 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-//
-//  SQLiteErrors.m
-//  squidb-ios
-//  This file extracts portions of AOSP SQLiteCommon.cpp (https://github.com/android/platform_frameworks_base/blob/master/core/jni/android_database_SQLiteCommon.cpp)
-//  The core logic/structures defined in the file have been left intact; this is just a translation to use Objective-C
-//  syntax instead of C++ to make working with the j2objc tool easier.
-//
-
-#import <Foundation/Foundation.h>
-#import "SQLiteErrors.h"
-#import "AndroidDatabaseSqliteSQLiteException.h"
-#import "AndroidDatabaseSqliteSQLiteDiskIOException.h"
-#import "AndroidDatabaseSqliteSQLiteDatabaseCorruptException.h"
-#import "AndroidDatabaseSqliteSQLiteConstraintException.h"
-#import "AndroidDatabaseSqliteSQLiteAbortException.h"
-#import "AndroidDatabaseSqliteSQLiteDoneException.h"
-#import "AndroidDatabaseSqliteSQLiteFullException.h"
-#import "AndroidDatabaseSqliteSQLiteMisuseException.h"
-#import "AndroidDatabaseSqliteSQLiteAccessPermException.h"
-#import "AndroidDatabaseSqliteSQLiteDatabaseLockedException.h"
-#import "AndroidDatabaseSqliteSQLiteTableLockedException.h"
-#import "AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException.h"
-#import "AndroidDatabaseSqliteSQLiteCantOpenDatabaseException.h"
-#import "AndroidDatabaseSqliteSQLiteBlobTooBigException.h"
-#import "AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException.h"
-#import "AndroidDatabaseSqliteSQLiteOutOfMemoryException.h"
-#import "AndroidDatabaseSqliteSQLiteDatatypeMismatchException.h"
-
-/* throw a SQLiteException with a message appropriate for the error in handle */
-void throw_sqlite3_exception_handle(sqlite3* handle) {
-    throw_sqlite3_exception_message(handle, NULL);
-}
-
-/* throw a SQLiteException with a message appropriate for the error in handle
- concatenated with the given message
- */
-void throw_sqlite3_exception_message(sqlite3* handle, const char* message) {
-    if (handle) {
-        // get the error code and message from the SQLite connection
-        // the error message may contain more information than the error code
-        // because it is based on the extended error code rather than the simplified
-        // error code that SQLite normally returns.
-        throw_sqlite3_exception(sqlite3_extended_errcode(handle),
-                                sqlite3_errmsg(handle), message);
-    } else {
-        // we use SQLITE_OK so that a generic SQLiteException is thrown;
-        // any code not specified in the switch statement below would do.
-        throw_sqlite3_exception(SQLITE_OK, "unknown error", message);
-    }
-}
-
-/* throw a SQLiteException for a given error code
- * should only be used when the database connection is not available because the
- * error information will not be quite as rich */
-void throw_sqlite3_exception_errcode(int errcode, const char* message) {
-    throw_sqlite3_exception(errcode, "unknown error", message);
-}
-
-/* throw a SQLiteException for a given error code, sqlite3message, and
- user message
- */
-void throw_sqlite3_exception(int errcode, const char* sqlite3Message, const char* message) {
-
-    int errcodeMask = errcode & 0xff; /* mask off extended error code */
-    if (errcodeMask == SQLITE_DONE) {
-        sqlite3Message = NULL; // SQLite error message is irrelevant in this case
-    }
-
-    NSString *exceptionMessage;
-    if (sqlite3Message) {
-        char *zFullmsg = sqlite3_mprintf(
-             "%s (code %d)%s%s", sqlite3Message, errcode,
-             (message ? ": " : ""), (message ? message : "")
-         );
-
-        exceptionMessage = [NSString stringWithUTF8String:zFullmsg];
-        sqlite3_free(zFullmsg);
-    }
-    else
-    {
-        if(message)
-        {
-            exceptionMessage = [NSString stringWithUTF8String:message];
-        }
-        else
-        {
-            exceptionMessage = @"(null)";
-        }
-    }
-    switch (errcodeMask) {
-        case SQLITE_IOERR:
-            @throw [[AndroidDatabaseSqliteSQLiteDiskIOException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_CORRUPT:
-        case SQLITE_NOTADB: // treat "unsupported file format" error as corruption also
-            @throw [[AndroidDatabaseSqliteSQLiteDatabaseCorruptException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_CONSTRAINT:
-            @throw [[AndroidDatabaseSqliteSQLiteConstraintException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_ABORT:
-            @throw [[AndroidDatabaseSqliteSQLiteAbortException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_DONE:
-            @throw [[AndroidDatabaseSqliteSQLiteDoneException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_FULL:
-            @throw [[AndroidDatabaseSqliteSQLiteFullException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_MISUSE:
-            @throw [[AndroidDatabaseSqliteSQLiteMisuseException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_PERM:
-            @throw [[AndroidDatabaseSqliteSQLiteAccessPermException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_BUSY:
-            @throw [[AndroidDatabaseSqliteSQLiteDatabaseLockedException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_LOCKED:
-            @throw [[AndroidDatabaseSqliteSQLiteTableLockedException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_READONLY:
-            @throw [[AndroidDatabaseSqliteSQLiteReadOnlyDatabaseException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_CANTOPEN:
-            @throw [[AndroidDatabaseSqliteSQLiteCantOpenDatabaseException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_TOOBIG:
-            @throw [[AndroidDatabaseSqliteSQLiteBlobTooBigException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_RANGE:
-            @throw [[AndroidDatabaseSqliteSQLiteBindOrColumnIndexOutOfRangeException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_NOMEM:
-            @throw [[AndroidDatabaseSqliteSQLiteOutOfMemoryException alloc] initWithNSString:exceptionMessage];
-            break;
-        case SQLITE_MISMATCH:
-            @throw [[AndroidDatabaseSqliteSQLiteDatatypeMismatchException alloc] initWithNSString:exceptionMessage];
-            break;
-//        case SQLITE_INTERRUPT:
-//            @throw [[AndroidDatabaseSqliteOperationCanceledException alloc] initWithNSString:exceptionMessage];
-//            break;
-        default:
-            @throw [[AndroidDatabaseSqliteSQLiteException alloc] initWithNSString:exceptionMessage];
-            break;
-    }
-}
diff --git a/core/iostest/daggerframework/main/androidbase/SQLitePreparedStatement.h b/core/iostest/daggerframework/main/androidbase/SQLitePreparedStatement.h
deleted file mode 100644
index fad87dea5..000000000
--- a/core/iostest/daggerframework/main/androidbase/SQLitePreparedStatement.h
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Copyright 2015, Yahoo Inc.
- * Copyrights licensed under the Apache 2.0 License.
- * See the accompanying LICENSE file for terms.
- */
-//
-//  SQLitePreparedStatement.h
-//  squidb-ios
-//
-
-#import <Foundation/Foundation.h>
-#import <sqlite3.h>
-#include "J2ObjC_header.h"
-
-@interface SQLitePreparedStatement : NSObject
-
-@property sqlite3_stmt *statement;
-
-- (id) initWithStatement:(sqlite3_stmt *)_statement;
-
-@end
diff --git a/core/iostest/daggerframework/main/androidbase/SQLitePreparedStatement.m b/core/iostest/daggerframework/main/androidbase/SQLitePreparedStatement.m
deleted file mode 100644
index 95f766c17..000000000
--- a/core/iostest/daggerframework/main/androidbase/SQLitePreparedStatement.m
+++ /dev/null
@@ -1,27 +0,0 @@
-/*
- * Copyright 2015, Yahoo Inc.
- * Copyrights licensed under the Apache 2.0 License.
- * See the accompanying LICENSE file for terms.
- */
-//
-//  SQLitePreparedStatement.m
-//  squidb-ios
-//
-
-#import "SQLitePreparedStatement.h"
-
-@implementation SQLitePreparedStatement
-@synthesize statement;
-
-- (id) initWithStatement:(sqlite3_stmt *)_statement {
-    if (self = [super init])  {
-        self.statement = _statement;
-    }
-    return self;
-}
-
-- (void) dealloc {
-    [super dealloc];
-}
-
-@end
diff --git a/core/iostest/daggerframework/test/DaggerInternalDoubleCheckTest.h b/core/iostest/daggerframework/test/DaggerInternalDoubleCheckTest.h
deleted file mode 100644
index 3a2aa9cb2..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalDoubleCheckTest.h
+++ /dev/null
@@ -1,54 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalDoubleCheckTest")
-#ifdef RESTRICT_DaggerInternalDoubleCheckTest
-#define INCLUDE_ALL_DaggerInternalDoubleCheckTest 0
-#else
-#define INCLUDE_ALL_DaggerInternalDoubleCheckTest 1
-#endif
-#undef RESTRICT_DaggerInternalDoubleCheckTest
-
-#if !defined (DaggerInternalDoubleCheckTest_) && (INCLUDE_ALL_DaggerInternalDoubleCheckTest || defined(INCLUDE_DaggerInternalDoubleCheckTest))
-#define DaggerInternalDoubleCheckTest_
-
-@interface DaggerInternalDoubleCheckTest : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)doubleWrapping_lazy;
-
-- (void)doubleWrapping_provider;
-
-- (void)get;
-
-- (void)lazy_nullPointerException;
-
-- (void)provider_nullPointerException;
-
-- (void)reentranceReturningDifferentInstances_throwsIllegalStateException;
-
-- (void)reentranceReturningSameInstance;
-
-- (void)reentranceWithoutCondition_throwsStackOverflow;
-
-@end
-
-J2OBJC_STATIC_INIT(DaggerInternalDoubleCheckTest)
-
-FOUNDATION_EXPORT void DaggerInternalDoubleCheckTest_init(DaggerInternalDoubleCheckTest *self);
-
-FOUNDATION_EXPORT DaggerInternalDoubleCheckTest *new_DaggerInternalDoubleCheckTest_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT DaggerInternalDoubleCheckTest *create_DaggerInternalDoubleCheckTest_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalDoubleCheckTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalDoubleCheckTest")
diff --git a/core/iostest/daggerframework/test/DaggerInternalDoubleCheckTest.m b/core/iostest/daggerframework/test/DaggerInternalDoubleCheckTest.m
deleted file mode 100644
index f30a4aa66..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalDoubleCheckTest.m
+++ /dev/null
@@ -1,686 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplUtilsPlatformUtils.h"
-#include "ComGoogleCommonTruthIntegerSubject.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "ComGoogleCommonTruthTruth.h"
-#include "DaggerInternalDoubleCheck.h"
-#include "DaggerInternalDoubleCheckTest.h"
-#include "DaggerLazy.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/collect/Lists.h"
-#include "com/google/common/collect/Sets.h"
-#include "com/google/common/util/concurrent/Uninterruptibles.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/StackOverflowError.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/List.h"
-#include "java/util/Set.h"
-#include "java/util/concurrent/Callable.h"
-#include "java/util/concurrent/CountDownLatch.h"
-#include "java/util/concurrent/ExecutorService.h"
-#include "java/util/concurrent/Executors.h"
-#include "java/util/concurrent/Future.h"
-#include "java/util/concurrent/atomic/AtomicInteger.h"
-#include "java/util/concurrent/atomic/AtomicReference.h"
-#include "javax/inject/Provider.h"
-#include "org/junit/Assert.h"
-#include "org/junit/Test.h"
-#include "org/junit/runner/RunWith.h"
-#include "org/junit/runners/JUnit4.h"
-
-inline id<JavaxInjectProvider> DaggerInternalDoubleCheckTest_get_DOUBLE_CHECK_OBJECT_PROVIDER();
-static id<JavaxInjectProvider> DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalDoubleCheckTest, DOUBLE_CHECK_OBJECT_PROVIDER, id<JavaxInjectProvider>)
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$8();
-
-@interface DaggerInternalDoubleCheckTest_1 : NSObject < JavaxInjectProvider >
-
-- (instancetype)init;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDoubleCheckTest_1)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheckTest_1_init(DaggerInternalDoubleCheckTest_1 *self);
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_1 *new_DaggerInternalDoubleCheckTest_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_1 *create_DaggerInternalDoubleCheckTest_1_init();
-
-@interface DaggerInternalDoubleCheckTest_2 : NSObject < JavaUtilConcurrentCallable > {
- @public
-  JavaUtilConcurrentCountDownLatch *val$latch_;
-  id<DaggerLazy> val$lazy_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
-                                          withDaggerLazy:(id<DaggerLazy>)capture$1;
-
-- (id)call;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDoubleCheckTest_2)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(DaggerInternalDoubleCheckTest_2 *self, JavaUtilConcurrentCountDownLatch *capture$0, id<DaggerLazy> capture$1);
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_2 *new_DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(JavaUtilConcurrentCountDownLatch *capture$0, id<DaggerLazy> capture$1) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_2 *create_DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(JavaUtilConcurrentCountDownLatch *capture$0, id<DaggerLazy> capture$1);
-
-@interface DaggerInternalDoubleCheckTest_LatchedProvider : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicInteger *provisions_;
-  JavaUtilConcurrentCountDownLatch *latch_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDoubleCheckTest_LatchedProvider)
-
-J2OBJC_FIELD_SETTER(DaggerInternalDoubleCheckTest_LatchedProvider, provisions_, JavaUtilConcurrentAtomicAtomicInteger *)
-J2OBJC_FIELD_SETTER(DaggerInternalDoubleCheckTest_LatchedProvider, latch_, JavaUtilConcurrentCountDownLatch *)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(DaggerInternalDoubleCheckTest_LatchedProvider *self, JavaUtilConcurrentCountDownLatch *latch);
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_LatchedProvider *new_DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_LatchedProvider *create_DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch);
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalDoubleCheckTest_LatchedProvider)
-
-@interface DaggerInternalDoubleCheckTest_3 : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicReference *val$doubleCheckReference_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDoubleCheckTest_3)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(DaggerInternalDoubleCheckTest_3 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_3 *new_DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_3 *create_DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);
-
-@interface DaggerInternalDoubleCheckTest_4 : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicInteger *val$invocationCount_;
-  JavaUtilConcurrentAtomicAtomicReference *val$doubleCheckReference_;
-  id val$object_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
-                  withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
-                                                       withId:(id)capture$2;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDoubleCheckTest_4)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(DaggerInternalDoubleCheckTest_4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id capture$2);
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_4 *new_DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id capture$2) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_4 *create_DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id capture$2);
-
-@interface DaggerInternalDoubleCheckTest_5 : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicInteger *val$invocationCount_;
-  JavaUtilConcurrentAtomicAtomicReference *val$doubleCheckReference_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
-                  withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalDoubleCheckTest_5)
-
-__attribute__((unused)) static void DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(DaggerInternalDoubleCheckTest_5 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1);
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_5 *new_DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalDoubleCheckTest_5 *create_DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1);
-
-J2OBJC_INITIALIZED_DEFN(DaggerInternalDoubleCheckTest)
-
-@implementation DaggerInternalDoubleCheckTest
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalDoubleCheckTest_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)provider_nullPointerException {
-  @try {
-    DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(nil);
-    OrgJunitAssert_fail();
-  }
-  @catch (JavaLangNullPointerException *expected) {
-  }
-}
-
-- (void)lazy_nullPointerException {
-  @try {
-    DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(nil);
-    OrgJunitAssert_fail();
-  }
-  @catch (JavaLangNullPointerException *expected) {
-  }
-}
-
-- (void)doubleWrapping_provider {
-  [((ComGoogleCommonTruthSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithId_(DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER)))) isSameAsWithId:DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER];
-}
-
-- (void)doubleWrapping_lazy {
-  [((ComGoogleCommonTruthSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithId_(DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER)))) isSameAsWithId:DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER];
-}
-
-- (void)get {
-  jint numThreads = 10;
-  id<JavaUtilConcurrentExecutorService> executor = JavaUtilConcurrentExecutors_newFixedThreadPoolWithInt_(numThreads);
-  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(numThreads);
-  DaggerInternalDoubleCheckTest_LatchedProvider *provider = create_DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(latch);
-  id<DaggerLazy> lazy = DaggerInternalDoubleCheck_lazyWithJavaxInjectProvider_(provider);
-  id<JavaUtilList> tasks = ComGoogleCommonCollectLists_newArrayListWithCapacityWithInt_(numThreads);
-  for (jint i = 0; i < numThreads; i++) {
-    [((id<JavaUtilList>) nil_chk(tasks)) addWithId:create_DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(latch, lazy)];
-  }
-  id<JavaUtilList> futures = [((id<JavaUtilConcurrentExecutorService>) nil_chk(executor)) invokeAllWithJavaUtilCollection:tasks];
-  [((ComGoogleCommonTruthIntegerSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangInteger:JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(provider->provisions_)) get])])) isEqualToWithId:JavaLangInteger_valueOfWithInt_(1)];
-  id<JavaUtilSet> results = ComGoogleCommonCollectSets_newIdentityHashSet();
-  for (id<JavaUtilConcurrentFuture> __strong future in nil_chk(futures)) {
-    [((id<JavaUtilSet>) nil_chk(results)) addWithId:[((id<JavaUtilConcurrentFuture>) nil_chk(future)) get]];
-  }
-  [((ComGoogleCommonTruthIntegerSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangInteger:JavaLangInteger_valueOfWithInt_([((id<JavaUtilSet>) nil_chk(results)) size])])) isEqualToWithId:JavaLangInteger_valueOfWithInt_(1)];
-}
-
-- (void)reentranceWithoutCondition_throwsStackOverflow {
-  if (CoTouchlabDopplUtilsPlatformUtils_isJ2objc()) return;
-  JavaUtilConcurrentAtomicAtomicReference *doubleCheckReference = create_JavaUtilConcurrentAtomicAtomicReference_init();
-  id<JavaxInjectProvider> doubleCheck = DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(create_DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(doubleCheckReference));
-  [doubleCheckReference setWithId:doubleCheck];
-  @try {
-    [((id<JavaxInjectProvider>) nil_chk(doubleCheck)) get];
-    OrgJunitAssert_fail();
-  }
-  @catch (JavaLangStackOverflowError *expected) {
-  }
-}
-
-- (void)reentranceReturningSameInstance {
-  JavaUtilConcurrentAtomicAtomicReference *doubleCheckReference = create_JavaUtilConcurrentAtomicAtomicReference_init();
-  JavaUtilConcurrentAtomicAtomicInteger *invocationCount = create_JavaUtilConcurrentAtomicAtomicInteger_init();
-  id object = create_NSObject_init();
-  id<JavaxInjectProvider> doubleCheck = DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(create_DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(invocationCount, doubleCheckReference, object));
-  [doubleCheckReference setWithId:doubleCheck];
-  [((ComGoogleCommonTruthSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithId_([((id<JavaxInjectProvider>) nil_chk(doubleCheck)) get]))) isSameAsWithId:object];
-}
-
-- (void)reentranceReturningDifferentInstances_throwsIllegalStateException {
-  JavaUtilConcurrentAtomicAtomicReference *doubleCheckReference = create_JavaUtilConcurrentAtomicAtomicReference_init();
-  JavaUtilConcurrentAtomicAtomicInteger *invocationCount = create_JavaUtilConcurrentAtomicAtomicInteger_init();
-  id<JavaxInjectProvider> doubleCheck = DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(create_DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(invocationCount, doubleCheckReference));
-  [doubleCheckReference setWithId:doubleCheck];
-  @try {
-    [((id<JavaxInjectProvider>) nil_chk(doubleCheck)) get];
-    OrgJunitAssert_fail();
-  }
-  @catch (JavaLangIllegalStateException *expected) {
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
-    { NULL, "V", 0x1, -1, -1, 4, -1, 5, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(provider_nullPointerException);
-  methods[2].selector = @selector(lazy_nullPointerException);
-  methods[3].selector = @selector(doubleWrapping_provider);
-  methods[4].selector = @selector(doubleWrapping_lazy);
-  methods[5].selector = @selector(get);
-  methods[6].selector = @selector(reentranceWithoutCondition_throwsStackOverflow);
-  methods[7].selector = @selector(reentranceReturningSameInstance);
-  methods[8].selector = @selector(reentranceReturningDifferentInstances_throwsIllegalStateException);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "DOUBLE_CHECK_OBJECT_PROVIDER", "LJavaxInjectProvider;", .constantValue.asLong = 0, 0x1a, -1, 9, 10, -1 },
-  };
-  static const void *ptrTable[] = { (void *)&DaggerInternalDoubleCheckTest__Annotations$0, (void *)&DaggerInternalDoubleCheckTest__Annotations$1, (void *)&DaggerInternalDoubleCheckTest__Annotations$2, (void *)&DaggerInternalDoubleCheckTest__Annotations$3, "LJavaLangException;", (void *)&DaggerInternalDoubleCheckTest__Annotations$4, (void *)&DaggerInternalDoubleCheckTest__Annotations$5, (void *)&DaggerInternalDoubleCheckTest__Annotations$6, (void *)&DaggerInternalDoubleCheckTest__Annotations$7, &DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER, "Ljavax/inject/Provider<Ljava/lang/Object;>;", "LDaggerInternalDoubleCheckTest_LatchedProvider;", (void *)&DaggerInternalDoubleCheckTest__Annotations$8 };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest = { "DoubleCheckTest", "dagger.internal", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, 11, -1, -1, 12 };
-  return &_DaggerInternalDoubleCheckTest;
-}
-
-+ (void)initialize {
-  if (self == [DaggerInternalDoubleCheckTest class]) {
-    JreStrongAssign(&DaggerInternalDoubleCheckTest_DOUBLE_CHECK_OBJECT_PROVIDER, DaggerInternalDoubleCheck_providerWithJavaxInjectProvider_(create_DaggerInternalDoubleCheckTest_1_init()));
-    J2OBJC_SET_INITIALIZED(DaggerInternalDoubleCheckTest)
-  }
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_init(DaggerInternalDoubleCheckTest *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalDoubleCheckTest *new_DaggerInternalDoubleCheckTest_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest, init)
-}
-
-DaggerInternalDoubleCheckTest *create_DaggerInternalDoubleCheckTest_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest, init)
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalDoubleCheckTest__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(OrgJunitRunnersJUnit4_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalDoubleCheckTest)
-
-@implementation DaggerInternalDoubleCheckTest_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalDoubleCheckTest_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (id)get {
-  return create_NSObject_init();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LDaggerInternalDoubleCheckTest;", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest_1 = { "", "dagger.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 0, -1, -1, 1, -1 };
-  return &_DaggerInternalDoubleCheckTest_1;
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_1_init(DaggerInternalDoubleCheckTest_1 *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalDoubleCheckTest_1 *new_DaggerInternalDoubleCheckTest_1_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest_1, init)
-}
-
-DaggerInternalDoubleCheckTest_1 *create_DaggerInternalDoubleCheckTest_1_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest_1, init)
-}
-
-@implementation DaggerInternalDoubleCheckTest_2
-
-- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
-                                          withDaggerLazy:(id<DaggerLazy>)capture$1 {
-  DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(self, capture$0, capture$1);
-  return self;
-}
-
-- (id)call {
-  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
-  return [((id<DaggerLazy>) nil_chk(val$lazy_)) get];
-}
-
-- (void)dealloc {
-  RELEASE_(val$latch_);
-  RELEASE_(val$lazy_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, 0, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withDaggerLazy:);
-  methods[1].selector = @selector(call);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$lazy_", "LDaggerLazy;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaLangException;", "Ldagger/Lazy<Ljava/lang/Object;>;", "LDaggerInternalDoubleCheckTest;", "get", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest_2 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
-  return &_DaggerInternalDoubleCheckTest_2;
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(DaggerInternalDoubleCheckTest_2 *self, JavaUtilConcurrentCountDownLatch *capture$0, id<DaggerLazy> capture$1) {
-  JreStrongAssign(&self->val$latch_, capture$0);
-  JreStrongAssign(&self->val$lazy_, capture$1);
-  NSObject_init(self);
-}
-
-DaggerInternalDoubleCheckTest_2 *new_DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(JavaUtilConcurrentCountDownLatch *capture$0, id<DaggerLazy> capture$1) {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest_2, initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_, capture$0, capture$1)
-}
-
-DaggerInternalDoubleCheckTest_2 *create_DaggerInternalDoubleCheckTest_2_initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_(JavaUtilConcurrentCountDownLatch *capture$0, id<DaggerLazy> capture$1) {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest_2, initWithJavaUtilConcurrentCountDownLatch_withDaggerLazy_, capture$0, capture$1)
-}
-
-@implementation DaggerInternalDoubleCheckTest_LatchedProvider
-
-- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch {
-  DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(self, latch);
-  return self;
-}
-
-- (id)get {
-  if (latch_ != nil) {
-    ComGoogleCommonUtilConcurrentUninterruptibles_awaitUninterruptiblyWithJavaUtilConcurrentCountDownLatch_(latch_);
-  }
-  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(provisions_)) incrementAndGet];
-  return create_NSObject_init();
-}
-
-- (void)dealloc {
-  RELEASE_(provisions_);
-  RELEASE_(latch_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "provisions_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-    { "latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaUtilConcurrentCountDownLatch;", "LDaggerInternalDoubleCheckTest;", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest_LatchedProvider = { "LatchedProvider", "dagger.internal", ptrTable, methods, fields, 7, 0xa, 2, 2, 1, -1, -1, 2, -1 };
-  return &_DaggerInternalDoubleCheckTest_LatchedProvider;
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(DaggerInternalDoubleCheckTest_LatchedProvider *self, JavaUtilConcurrentCountDownLatch *latch) {
-  NSObject_init(self);
-  JreStrongAssign(&self->latch_, latch);
-  JreStrongAssignAndConsume(&self->provisions_, new_JavaUtilConcurrentAtomicAtomicInteger_init());
-}
-
-DaggerInternalDoubleCheckTest_LatchedProvider *new_DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch) {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest_LatchedProvider, initWithJavaUtilConcurrentCountDownLatch_, latch)
-}
-
-DaggerInternalDoubleCheckTest_LatchedProvider *create_DaggerInternalDoubleCheckTest_LatchedProvider_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch) {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest_LatchedProvider, initWithJavaUtilConcurrentCountDownLatch_, latch)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalDoubleCheckTest_LatchedProvider)
-
-@implementation DaggerInternalDoubleCheckTest_3
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
-  DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
-  return self;
-}
-
-- (id)get {
-  return [((id<JavaxInjectProvider>) nil_chk([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$doubleCheckReference_)) get])) get];
-}
-
-- (void)dealloc {
-  RELEASE_(val$doubleCheckReference_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$doubleCheckReference_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
-  };
-  static const void *ptrTable[] = { "Ljava/util/concurrent/atomic/AtomicReference<Ljavax/inject/Provider<Ljava/lang/Object;>;>;", "LDaggerInternalDoubleCheckTest;", "reentranceWithoutCondition_throwsStackOverflow", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest_3 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
-  return &_DaggerInternalDoubleCheckTest_3;
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(DaggerInternalDoubleCheckTest_3 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
-  JreStrongAssign(&self->val$doubleCheckReference_, capture$0);
-  NSObject_init(self);
-}
-
-DaggerInternalDoubleCheckTest_3 *new_DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest_3, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
-}
-
-DaggerInternalDoubleCheckTest_3 *create_DaggerInternalDoubleCheckTest_3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest_3, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
-}
-
-@implementation DaggerInternalDoubleCheckTest_4
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
-                  withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
-                                                       withId:(id)capture$2 {
-  DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(self, capture$0, capture$1, capture$2);
-  return self;
-}
-
-- (id)get {
-  if ([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$invocationCount_)) incrementAndGet] == 1) {
-    [((id<JavaxInjectProvider>) nil_chk([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$doubleCheckReference_)) get])) get];
-  }
-  return val$object_;
-}
-
-- (void)dealloc {
-  RELEASE_(val$invocationCount_);
-  RELEASE_(val$doubleCheckReference_);
-  RELEASE_(val$object_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withJavaUtilConcurrentAtomicAtomicReference:withId:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$invocationCount_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$doubleCheckReference_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
-    { "val$object_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "Ljava/util/concurrent/atomic/AtomicReference<Ljavax/inject/Provider<Ljava/lang/Object;>;>;", "LDaggerInternalDoubleCheckTest;", "reentranceReturningSameInstance", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest_4 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, 3, -1 };
-  return &_DaggerInternalDoubleCheckTest_4;
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(DaggerInternalDoubleCheckTest_4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id capture$2) {
-  JreStrongAssign(&self->val$invocationCount_, capture$0);
-  JreStrongAssign(&self->val$doubleCheckReference_, capture$1);
-  JreStrongAssign(&self->val$object_, capture$2);
-  NSObject_init(self);
-}
-
-DaggerInternalDoubleCheckTest_4 *new_DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id capture$2) {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest_4, initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_, capture$0, capture$1, capture$2)
-}
-
-DaggerInternalDoubleCheckTest_4 *create_DaggerInternalDoubleCheckTest_4_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id capture$2) {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest_4, initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_withId_, capture$0, capture$1, capture$2)
-}
-
-@implementation DaggerInternalDoubleCheckTest_5
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
-                  withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1 {
-  DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(self, capture$0, capture$1);
-  return self;
-}
-
-- (id)get {
-  if ([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$invocationCount_)) incrementAndGet] == 1) {
-    [((id<JavaxInjectProvider>) nil_chk([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$doubleCheckReference_)) get])) get];
-  }
-  return create_NSObject_init();
-}
-
-- (void)dealloc {
-  RELEASE_(val$invocationCount_);
-  RELEASE_(val$doubleCheckReference_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withJavaUtilConcurrentAtomicAtomicReference:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$invocationCount_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$doubleCheckReference_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
-  };
-  static const void *ptrTable[] = { "Ljava/util/concurrent/atomic/AtomicReference<Ljavax/inject/Provider<Ljava/lang/Object;>;>;", "LDaggerInternalDoubleCheckTest;", "reentranceReturningDifferentInstances_throwsIllegalStateException", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _DaggerInternalDoubleCheckTest_5 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, 3, -1 };
-  return &_DaggerInternalDoubleCheckTest_5;
-}
-
-@end
-
-void DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(DaggerInternalDoubleCheckTest_5 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1) {
-  JreStrongAssign(&self->val$invocationCount_, capture$0);
-  JreStrongAssign(&self->val$doubleCheckReference_, capture$1);
-  NSObject_init(self);
-}
-
-DaggerInternalDoubleCheckTest_5 *new_DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1) {
-  J2OBJC_NEW_IMPL(DaggerInternalDoubleCheckTest_5, initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_, capture$0, capture$1)
-}
-
-DaggerInternalDoubleCheckTest_5 *create_DaggerInternalDoubleCheckTest_5_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1) {
-  J2OBJC_CREATE_IMPL(DaggerInternalDoubleCheckTest_5, initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicReference_, capture$0, capture$1)
-}
diff --git a/core/iostest/daggerframework/test/DaggerInternalInstanceFactoryTest.h b/core/iostest/daggerframework/test/DaggerInternalInstanceFactoryTest.h
deleted file mode 100644
index 8398baf86..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalInstanceFactoryTest.h
+++ /dev/null
@@ -1,49 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalInstanceFactoryTest")
-#ifdef RESTRICT_DaggerInternalInstanceFactoryTest
-#define INCLUDE_ALL_DaggerInternalInstanceFactoryTest 0
-#else
-#define INCLUDE_ALL_DaggerInternalInstanceFactoryTest 1
-#endif
-#undef RESTRICT_DaggerInternalInstanceFactoryTest
-
-#if !defined (DaggerInternalInstanceFactoryTest_) && (INCLUDE_ALL_DaggerInternalInstanceFactoryTest || defined(INCLUDE_DaggerInternalInstanceFactoryTest))
-#define DaggerInternalInstanceFactoryTest_
-
-@class OrgJunitRulesExpectedException;
-
-@interface DaggerInternalInstanceFactoryTest : NSObject {
- @public
-  OrgJunitRulesExpectedException *thrown_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)create_throwsNullPointerException;
-
-- (void)instanceFactory;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalInstanceFactoryTest)
-
-J2OBJC_FIELD_SETTER(DaggerInternalInstanceFactoryTest, thrown_, OrgJunitRulesExpectedException *)
-
-FOUNDATION_EXPORT void DaggerInternalInstanceFactoryTest_init(DaggerInternalInstanceFactoryTest *self);
-
-FOUNDATION_EXPORT DaggerInternalInstanceFactoryTest *new_DaggerInternalInstanceFactoryTest_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT DaggerInternalInstanceFactoryTest *create_DaggerInternalInstanceFactoryTest_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalInstanceFactoryTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalInstanceFactoryTest")
diff --git a/core/iostest/daggerframework/test/DaggerInternalInstanceFactoryTest.m b/core/iostest/daggerframework/test/DaggerInternalInstanceFactoryTest.m
deleted file mode 100644
index 72d72417a..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalInstanceFactoryTest.m
+++ /dev/null
@@ -1,108 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "ComGoogleCommonTruthTruth.h"
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalInstanceFactory.h"
-#include "DaggerInternalInstanceFactoryTest.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "org/junit/Rule.h"
-#include "org/junit/Test.h"
-#include "org/junit/rules/ExpectedException.h"
-#include "org/junit/runner/RunWith.h"
-#include "org/junit/runners/JUnit4.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$3();
-
-@implementation DaggerInternalInstanceFactoryTest
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalInstanceFactoryTest_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)instanceFactory {
-  id instance = create_NSObject_init();
-  id<DaggerInternalFactory> factory = DaggerInternalInstanceFactory_createWithId_(instance);
-  [((ComGoogleCommonTruthSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithId:[((id<DaggerInternalFactory>) nil_chk(factory)) get]])) isEqualToWithId:instance];
-  [((ComGoogleCommonTruthSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithId:[factory get]])) isEqualToWithId:instance];
-  [((ComGoogleCommonTruthSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithId:[factory get]])) isEqualToWithId:instance];
-}
-
-- (void)create_throwsNullPointerException {
-  [((OrgJunitRulesExpectedException *) nil_chk(thrown_)) expectWithIOSClass:JavaLangNullPointerException_class_()];
-  DaggerInternalInstanceFactory_createWithId_(nil);
-}
-
-- (void)dealloc {
-  RELEASE_(thrown_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(instanceFactory);
-  methods[2].selector = @selector(create_throwsNullPointerException);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "thrown_", "LOrgJunitRulesExpectedException;", .constantValue.asLong = 0, 0x11, -1, -1, -1, 2 },
-  };
-  static const void *ptrTable[] = { (void *)&DaggerInternalInstanceFactoryTest__Annotations$0, (void *)&DaggerInternalInstanceFactoryTest__Annotations$1, (void *)&DaggerInternalInstanceFactoryTest__Annotations$2, (void *)&DaggerInternalInstanceFactoryTest__Annotations$3 };
-  static const J2ObjcClassInfo _DaggerInternalInstanceFactoryTest = { "InstanceFactoryTest", "dagger.internal", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, 3 };
-  return &_DaggerInternalInstanceFactoryTest;
-}
-
-@end
-
-void DaggerInternalInstanceFactoryTest_init(DaggerInternalInstanceFactoryTest *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->thrown_, OrgJunitRulesExpectedException_none());
-}
-
-DaggerInternalInstanceFactoryTest *new_DaggerInternalInstanceFactoryTest_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalInstanceFactoryTest, init)
-}
-
-DaggerInternalInstanceFactoryTest *create_DaggerInternalInstanceFactoryTest_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalInstanceFactoryTest, init)
-}
-
-IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRule() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalInstanceFactoryTest__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(OrgJunitRunnersJUnit4_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalInstanceFactoryTest)
diff --git a/core/iostest/daggerframework/test/DaggerInternalMapProviderFactoryTest.h b/core/iostest/daggerframework/test/DaggerInternalMapProviderFactoryTest.h
deleted file mode 100644
index f4f604d1e..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalMapProviderFactoryTest.h
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalMapProviderFactoryTest")
-#ifdef RESTRICT_DaggerInternalMapProviderFactoryTest
-#define INCLUDE_ALL_DaggerInternalMapProviderFactoryTest 0
-#else
-#define INCLUDE_ALL_DaggerInternalMapProviderFactoryTest 1
-#endif
-#undef RESTRICT_DaggerInternalMapProviderFactoryTest
-
-#if !defined (DaggerInternalMapProviderFactoryTest_) && (INCLUDE_ALL_DaggerInternalMapProviderFactoryTest || defined(INCLUDE_DaggerInternalMapProviderFactoryTest))
-#define DaggerInternalMapProviderFactoryTest_
-
-@class OrgJunitRulesExpectedException;
-
-@interface DaggerInternalMapProviderFactoryTest : NSObject {
- @public
-  OrgJunitRulesExpectedException *thrown_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)iterationOrder;
-
-- (void)nullKey;
-
-- (void)nullValue;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalMapProviderFactoryTest)
-
-J2OBJC_FIELD_SETTER(DaggerInternalMapProviderFactoryTest, thrown_, OrgJunitRulesExpectedException *)
-
-FOUNDATION_EXPORT void DaggerInternalMapProviderFactoryTest_init(DaggerInternalMapProviderFactoryTest *self);
-
-FOUNDATION_EXPORT DaggerInternalMapProviderFactoryTest *new_DaggerInternalMapProviderFactoryTest_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT DaggerInternalMapProviderFactoryTest *create_DaggerInternalMapProviderFactoryTest_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalMapProviderFactoryTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalMapProviderFactoryTest")
diff --git a/core/iostest/daggerframework/test/DaggerInternalMapProviderFactoryTest.m b/core/iostest/daggerframework/test/DaggerInternalMapProviderFactoryTest.m
deleted file mode 100644
index 48869c940..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalMapProviderFactoryTest.m
+++ /dev/null
@@ -1,224 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthOrdered.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "ComGoogleCommonTruthTruth.h"
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalMapProviderFactory.h"
-#include "DaggerInternalMapProviderFactoryTest.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Integer.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/LinkedHashMap.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/concurrent/atomic/AtomicInteger.h"
-#include "javax/inject/Provider.h"
-#include "org/junit/Rule.h"
-#include "org/junit/Test.h"
-#include "org/junit/rules/ExpectedException.h"
-#include "org/junit/runner/RunWith.h"
-#include "org/junit/runners/JUnit4.h"
-
-@interface DaggerInternalMapProviderFactoryTest ()
-
-+ (id<JavaxInjectProvider>)incrementingIntegerProviderWithInt:(jint)seed;
-
-@end
-
-__attribute__((unused)) static id<JavaxInjectProvider> DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(jint seed);
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$4();
-
-@interface DaggerInternalMapProviderFactoryTest_1 : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicInteger *val$value_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;
-
-- (JavaLangInteger *)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalMapProviderFactoryTest_1)
-
-__attribute__((unused)) static void DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(DaggerInternalMapProviderFactoryTest_1 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);
-
-__attribute__((unused)) static DaggerInternalMapProviderFactoryTest_1 *new_DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalMapProviderFactoryTest_1 *create_DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);
-
-@implementation DaggerInternalMapProviderFactoryTest
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalMapProviderFactoryTest_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)nullKey {
-  [((OrgJunitRulesExpectedException *) nil_chk(thrown_)) expectWithIOSClass:JavaLangNullPointerException_class_()];
-  [((DaggerInternalMapProviderFactory_Builder *) nil_chk(DaggerInternalMapProviderFactory_builderWithInt_(1))) putWithId:nil withJavaxInjectProvider:DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(1)];
-}
-
-- (void)nullValue {
-  [((OrgJunitRulesExpectedException *) nil_chk(thrown_)) expectWithIOSClass:JavaLangNullPointerException_class_()];
-  [((DaggerInternalMapProviderFactory_Builder *) nil_chk(DaggerInternalMapProviderFactory_builderWithInt_(1))) putWithId:@"Hello" withJavaxInjectProvider:nil];
-}
-
-- (void)iterationOrder {
-  id<JavaxInjectProvider> p1 = DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(10);
-  id<JavaxInjectProvider> p2 = DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(20);
-  id<JavaxInjectProvider> p3 = DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(30);
-  id<JavaxInjectProvider> p4 = DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(40);
-  id<JavaxInjectProvider> p5 = DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(50);
-  id<DaggerInternalFactory> factory = [((DaggerInternalMapProviderFactory_Builder *) nil_chk([((DaggerInternalMapProviderFactory_Builder *) nil_chk([((DaggerInternalMapProviderFactory_Builder *) nil_chk([((DaggerInternalMapProviderFactory_Builder *) nil_chk([((DaggerInternalMapProviderFactory_Builder *) nil_chk([((DaggerInternalMapProviderFactory_Builder *) nil_chk(DaggerInternalMapProviderFactory_builderWithInt_(4))) putWithId:@"two" withJavaxInjectProvider:p2])) putWithId:@"one" withJavaxInjectProvider:p1])) putWithId:@"three" withJavaxInjectProvider:p3])) putWithId:@"one" withJavaxInjectProvider:p5])) putWithId:@"four" withJavaxInjectProvider:p4])) build];
-  id<JavaUtilMap> expectedMap = create_JavaUtilLinkedHashMap_init();
-  [expectedMap putWithId:@"two" withId:p2];
-  [expectedMap putWithId:@"one" withId:p1];
-  [expectedMap putWithId:@"three" withId:p3];
-  [expectedMap putWithId:@"one" withId:p5];
-  [expectedMap putWithId:@"four" withId:p4];
-  [((id<ComGoogleCommonTruthOrdered>) nil_chk([((ComGoogleCommonTruthIterableSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangIterable:[((id<JavaUtilMap>) nil_chk([((id<DaggerInternalFactory>) nil_chk(factory)) get])) entrySet]])) containsExactlyElementsInWithJavaLangIterable:[expectedMap entrySet]])) inOrder];
-}
-
-+ (id<JavaxInjectProvider>)incrementingIntegerProviderWithInt:(jint)seed {
-  return DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(seed);
-}
-
-- (void)dealloc {
-  RELEASE_(thrown_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
-    { NULL, "LJavaxInjectProvider;", 0xa, 3, 4, -1, 5, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(nullKey);
-  methods[2].selector = @selector(nullValue);
-  methods[3].selector = @selector(iterationOrder);
-  methods[4].selector = @selector(incrementingIntegerProviderWithInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "thrown_", "LOrgJunitRulesExpectedException;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 6 },
-  };
-  static const void *ptrTable[] = { (void *)&DaggerInternalMapProviderFactoryTest__Annotations$0, (void *)&DaggerInternalMapProviderFactoryTest__Annotations$1, (void *)&DaggerInternalMapProviderFactoryTest__Annotations$2, "incrementingIntegerProvider", "I", "(I)Ljavax/inject/Provider<Ljava/lang/Integer;>;", (void *)&DaggerInternalMapProviderFactoryTest__Annotations$3, (void *)&DaggerInternalMapProviderFactoryTest__Annotations$4 };
-  static const J2ObjcClassInfo _DaggerInternalMapProviderFactoryTest = { "MapProviderFactoryTest", "dagger.internal", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, 7 };
-  return &_DaggerInternalMapProviderFactoryTest;
-}
-
-@end
-
-void DaggerInternalMapProviderFactoryTest_init(DaggerInternalMapProviderFactoryTest *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->thrown_, OrgJunitRulesExpectedException_none());
-}
-
-DaggerInternalMapProviderFactoryTest *new_DaggerInternalMapProviderFactoryTest_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalMapProviderFactoryTest, init)
-}
-
-DaggerInternalMapProviderFactoryTest *create_DaggerInternalMapProviderFactoryTest_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalMapProviderFactoryTest, init)
-}
-
-id<JavaxInjectProvider> DaggerInternalMapProviderFactoryTest_incrementingIntegerProviderWithInt_(jint seed) {
-  DaggerInternalMapProviderFactoryTest_initialize();
-  JavaUtilConcurrentAtomicAtomicInteger *value = create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(seed);
-  return create_DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(value);
-}
-
-IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRule() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalMapProviderFactoryTest__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(OrgJunitRunnersJUnit4_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalMapProviderFactoryTest)
-
-@implementation DaggerInternalMapProviderFactoryTest_1
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
-  DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
-  return self;
-}
-
-- (JavaLangInteger *)get {
-  return JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$value_)) getAndIncrement]);
-}
-
-- (void)dealloc {
-  RELEASE_(val$value_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$value_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LDaggerInternalMapProviderFactoryTest;", "incrementingIntegerProviderWithInt:", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Integer;>;" };
-  static const J2ObjcClassInfo _DaggerInternalMapProviderFactoryTest_1 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, 2, -1 };
-  return &_DaggerInternalMapProviderFactoryTest_1;
-}
-
-@end
-
-void DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(DaggerInternalMapProviderFactoryTest_1 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  JreStrongAssign(&self->val$value_, capture$0);
-  NSObject_init(self);
-}
-
-DaggerInternalMapProviderFactoryTest_1 *new_DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  J2OBJC_NEW_IMPL(DaggerInternalMapProviderFactoryTest_1, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
-}
-
-DaggerInternalMapProviderFactoryTest_1 *create_DaggerInternalMapProviderFactoryTest_1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  J2OBJC_CREATE_IMPL(DaggerInternalMapProviderFactoryTest_1, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
-}
diff --git a/core/iostest/daggerframework/test/DaggerInternalSetFactoryTest.h b/core/iostest/daggerframework/test/DaggerInternalSetFactoryTest.h
deleted file mode 100644
index 484c2ebdc..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalSetFactoryTest.h
+++ /dev/null
@@ -1,53 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalSetFactoryTest")
-#ifdef RESTRICT_DaggerInternalSetFactoryTest
-#define INCLUDE_ALL_DaggerInternalSetFactoryTest 0
-#else
-#define INCLUDE_ALL_DaggerInternalSetFactoryTest 1
-#endif
-#undef RESTRICT_DaggerInternalSetFactoryTest
-
-#if !defined (DaggerInternalSetFactoryTest_) && (INCLUDE_ALL_DaggerInternalSetFactoryTest || defined(INCLUDE_DaggerInternalSetFactoryTest))
-#define DaggerInternalSetFactoryTest_
-
-@class OrgJunitRulesExpectedException;
-
-@interface DaggerInternalSetFactoryTest : NSObject {
- @public
-  OrgJunitRulesExpectedException *thrown_;
-}
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)invokesProvidersEveryTime;
-
-- (void)providerReturnsNull;
-
-- (void)providerReturnsNullSet;
-
-- (void)providerReturnsSetWithNullElement;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactoryTest)
-
-J2OBJC_FIELD_SETTER(DaggerInternalSetFactoryTest, thrown_, OrgJunitRulesExpectedException *)
-
-FOUNDATION_EXPORT void DaggerInternalSetFactoryTest_init(DaggerInternalSetFactoryTest *self);
-
-FOUNDATION_EXPORT DaggerInternalSetFactoryTest *new_DaggerInternalSetFactoryTest_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT DaggerInternalSetFactoryTest *create_DaggerInternalSetFactoryTest_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSetFactoryTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalSetFactoryTest")
diff --git a/core/iostest/daggerframework/test/DaggerInternalSetFactoryTest.m b/core/iostest/daggerframework/test/DaggerInternalSetFactoryTest.m
deleted file mode 100644
index 0470705d9..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalSetFactoryTest.m
+++ /dev/null
@@ -1,400 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthOrdered.h"
-#include "ComGoogleCommonTruthTruth.h"
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalSetFactory.h"
-#include "DaggerInternalSetFactoryTest.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/collect/ImmutableSet.h"
-#include "java/lang/Integer.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/LinkedHashSet.h"
-#include "java/util/List.h"
-#include "java/util/Set.h"
-#include "java/util/concurrent/atomic/AtomicInteger.h"
-#include "javax/inject/Provider.h"
-#include "org/junit/Rule.h"
-#include "org/junit/Test.h"
-#include "org/junit/rules/ExpectedException.h"
-#include "org/junit/runner/RunWith.h"
-#include "org/junit/runners/JUnit4.h"
-
-@interface DaggerInternalSetFactoryTest ()
-
-+ (id<JavaxInjectProvider>)providerOfWithId:(id)value;
-
-+ (id<JavaxInjectProvider>)incrementingIntegerProviderWithInt:(jint)seed;
-
-+ (id<JavaxInjectProvider>)incrementingIntegerSetProviderWithInt:(jint)seed;
-
-@end
-
-__attribute__((unused)) static id<JavaxInjectProvider> DaggerInternalSetFactoryTest_providerOfWithId_(id value);
-
-__attribute__((unused)) static id<JavaxInjectProvider> DaggerInternalSetFactoryTest_incrementingIntegerProviderWithInt_(jint seed);
-
-__attribute__((unused)) static id<JavaxInjectProvider> DaggerInternalSetFactoryTest_incrementingIntegerSetProviderWithInt_(jint seed);
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$5();
-
-@interface DaggerInternalSetFactoryTest_1 : NSObject < JavaxInjectProvider > {
- @public
-  id val$value_;
-}
-
-- (instancetype)initWithId:(id)capture$0;
-
-- (id)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactoryTest_1)
-
-__attribute__((unused)) static void DaggerInternalSetFactoryTest_1_initWithId_(DaggerInternalSetFactoryTest_1 *self, id capture$0);
-
-__attribute__((unused)) static DaggerInternalSetFactoryTest_1 *new_DaggerInternalSetFactoryTest_1_initWithId_(id capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSetFactoryTest_1 *create_DaggerInternalSetFactoryTest_1_initWithId_(id capture$0);
-
-@interface DaggerInternalSetFactoryTest_2 : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicInteger *val$value_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;
-
-- (JavaLangInteger *)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactoryTest_2)
-
-__attribute__((unused)) static void DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(DaggerInternalSetFactoryTest_2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);
-
-__attribute__((unused)) static DaggerInternalSetFactoryTest_2 *new_DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSetFactoryTest_2 *create_DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);
-
-@interface DaggerInternalSetFactoryTest_3 : NSObject < JavaxInjectProvider > {
- @public
-  JavaUtilConcurrentAtomicAtomicInteger *val$value_;
-}
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;
-
-- (id<JavaUtilSet>)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactoryTest_3)
-
-__attribute__((unused)) static void DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(DaggerInternalSetFactoryTest_3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);
-
-__attribute__((unused)) static DaggerInternalSetFactoryTest_3 *new_DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSetFactoryTest_3 *create_DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);
-
-@implementation DaggerInternalSetFactoryTest
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalSetFactoryTest_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)providerReturnsNull {
-  id<DaggerInternalFactory> factory = [((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk(DaggerInternalSetFactory_builderWithInt_withInt_(0, 1))) addCollectionProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_providerOfWithId_(nil)])) build];
-  [((OrgJunitRulesExpectedException *) nil_chk(thrown_)) expectWithIOSClass:JavaLangNullPointerException_class_()];
-  [((id<DaggerInternalFactory>) nil_chk(factory)) get];
-}
-
-- (void)providerReturnsNullSet {
-  id<DaggerInternalFactory> factory = [((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk(DaggerInternalSetFactory_builderWithInt_withInt_(1, 0))) addProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_providerOfWithId_(nil)])) build];
-  [((OrgJunitRulesExpectedException *) nil_chk(thrown_)) expectWithIOSClass:JavaLangNullPointerException_class_()];
-  [((id<DaggerInternalFactory>) nil_chk(factory)) get];
-}
-
-- (void)providerReturnsSetWithNullElement {
-  id<JavaUtilSet> set = create_JavaUtilLinkedHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), nil, JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]));
-  id<DaggerInternalFactory> factory = [((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk(DaggerInternalSetFactory_builderWithInt_withInt_(0, 1))) addCollectionProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_providerOfWithId_(set)])) build];
-  [((OrgJunitRulesExpectedException *) nil_chk(thrown_)) expectWithIOSClass:JavaLangNullPointerException_class_()];
-  [((id<DaggerInternalFactory>) nil_chk(factory)) get];
-}
-
-- (void)invokesProvidersEveryTime {
-  id<DaggerInternalFactory> factory = [((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk([((DaggerInternalSetFactory_Builder *) nil_chk(DaggerInternalSetFactory_builderWithInt_withInt_(2, 2))) addProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_incrementingIntegerProviderWithInt_(0)])) addProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_incrementingIntegerProviderWithInt_(10)])) addCollectionProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_incrementingIntegerSetProviderWithInt_(20)])) addCollectionProviderWithJavaxInjectProvider:DaggerInternalSetFactoryTest_incrementingIntegerSetProviderWithInt_(30)])) build];
-  [((ComGoogleCommonTruthIterableSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_([((id<DaggerInternalFactory>) nil_chk(factory)) get]))) containsExactlyWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(10), JavaLangInteger_valueOfWithInt_(20), JavaLangInteger_valueOfWithInt_(21), JavaLangInteger_valueOfWithInt_(30), JavaLangInteger_valueOfWithInt_(31) } count:6 type:NSObject_class_()]];
-  [((ComGoogleCommonTruthIterableSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_([factory get]))) containsExactlyWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(11), JavaLangInteger_valueOfWithInt_(22), JavaLangInteger_valueOfWithInt_(23), JavaLangInteger_valueOfWithInt_(32), JavaLangInteger_valueOfWithInt_(33) } count:6 type:NSObject_class_()]];
-  [((ComGoogleCommonTruthIterableSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_([factory get]))) containsExactlyWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(12), JavaLangInteger_valueOfWithInt_(24), JavaLangInteger_valueOfWithInt_(25), JavaLangInteger_valueOfWithInt_(34), JavaLangInteger_valueOfWithInt_(35) } count:6 type:NSObject_class_()]];
-}
-
-+ (id<JavaxInjectProvider>)providerOfWithId:(id)value {
-  return DaggerInternalSetFactoryTest_providerOfWithId_(value);
-}
-
-+ (id<JavaxInjectProvider>)incrementingIntegerProviderWithInt:(jint)seed {
-  return DaggerInternalSetFactoryTest_incrementingIntegerProviderWithInt_(seed);
-}
-
-+ (id<JavaxInjectProvider>)incrementingIntegerSetProviderWithInt:(jint)seed {
-  return DaggerInternalSetFactoryTest_incrementingIntegerSetProviderWithInt_(seed);
-}
-
-- (void)dealloc {
-  RELEASE_(thrown_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
-    { NULL, "LJavaxInjectProvider;", 0xa, 4, 5, -1, 6, -1, -1 },
-    { NULL, "LJavaxInjectProvider;", 0xa, 7, 8, -1, 9, -1, -1 },
-    { NULL, "LJavaxInjectProvider;", 0xa, 10, 8, -1, 11, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(providerReturnsNull);
-  methods[2].selector = @selector(providerReturnsNullSet);
-  methods[3].selector = @selector(providerReturnsSetWithNullElement);
-  methods[4].selector = @selector(invokesProvidersEveryTime);
-  methods[5].selector = @selector(providerOfWithId:);
-  methods[6].selector = @selector(incrementingIntegerProviderWithInt:);
-  methods[7].selector = @selector(incrementingIntegerSetProviderWithInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "thrown_", "LOrgJunitRulesExpectedException;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 12 },
-  };
-  static const void *ptrTable[] = { (void *)&DaggerInternalSetFactoryTest__Annotations$0, (void *)&DaggerInternalSetFactoryTest__Annotations$1, (void *)&DaggerInternalSetFactoryTest__Annotations$2, (void *)&DaggerInternalSetFactoryTest__Annotations$3, "providerOf", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Ljavax/inject/Provider<TT;>;", "incrementingIntegerProvider", "I", "(I)Ljavax/inject/Provider<Ljava/lang/Integer;>;", "incrementingIntegerSetProvider", "(I)Ljavax/inject/Provider<Ljava/util/Set<Ljava/lang/Integer;>;>;", (void *)&DaggerInternalSetFactoryTest__Annotations$4, (void *)&DaggerInternalSetFactoryTest__Annotations$5 };
-  static const J2ObjcClassInfo _DaggerInternalSetFactoryTest = { "SetFactoryTest", "dagger.internal", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, 13 };
-  return &_DaggerInternalSetFactoryTest;
-}
-
-@end
-
-void DaggerInternalSetFactoryTest_init(DaggerInternalSetFactoryTest *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->thrown_, OrgJunitRulesExpectedException_none());
-}
-
-DaggerInternalSetFactoryTest *new_DaggerInternalSetFactoryTest_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactoryTest, init)
-}
-
-DaggerInternalSetFactoryTest *create_DaggerInternalSetFactoryTest_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactoryTest, init)
-}
-
-id<JavaxInjectProvider> DaggerInternalSetFactoryTest_providerOfWithId_(id value) {
-  DaggerInternalSetFactoryTest_initialize();
-  return create_DaggerInternalSetFactoryTest_1_initWithId_(value);
-}
-
-id<JavaxInjectProvider> DaggerInternalSetFactoryTest_incrementingIntegerProviderWithInt_(jint seed) {
-  DaggerInternalSetFactoryTest_initialize();
-  JavaUtilConcurrentAtomicAtomicInteger *value = create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(seed);
-  return create_DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(value);
-}
-
-id<JavaxInjectProvider> DaggerInternalSetFactoryTest_incrementingIntegerSetProviderWithInt_(jint seed) {
-  DaggerInternalSetFactoryTest_initialize();
-  JavaUtilConcurrentAtomicAtomicInteger *value = create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(seed);
-  return create_DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(value);
-}
-
-IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRule() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSetFactoryTest__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(OrgJunitRunnersJUnit4_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactoryTest)
-
-@implementation DaggerInternalSetFactoryTest_1
-
-- (instancetype)initWithId:(id)capture$0 {
-  DaggerInternalSetFactoryTest_1_initWithId_(self, capture$0);
-  return self;
-}
-
-- (id)get {
-  return val$value_;
-}
-
-- (void)dealloc {
-  RELEASE_(val$value_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithId:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$value_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
-  };
-  static const void *ptrTable[] = { "()TT;", "TT;", "LDaggerInternalSetFactoryTest;", "providerOfWithId:", "Ljava/lang/Object;Ljavax/inject/Provider<TT;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSetFactoryTest_1 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
-  return &_DaggerInternalSetFactoryTest_1;
-}
-
-@end
-
-void DaggerInternalSetFactoryTest_1_initWithId_(DaggerInternalSetFactoryTest_1 *self, id capture$0) {
-  JreStrongAssign(&self->val$value_, capture$0);
-  NSObject_init(self);
-}
-
-DaggerInternalSetFactoryTest_1 *new_DaggerInternalSetFactoryTest_1_initWithId_(id capture$0) {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactoryTest_1, initWithId_, capture$0)
-}
-
-DaggerInternalSetFactoryTest_1 *create_DaggerInternalSetFactoryTest_1_initWithId_(id capture$0) {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactoryTest_1, initWithId_, capture$0)
-}
-
-@implementation DaggerInternalSetFactoryTest_2
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
-  DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
-  return self;
-}
-
-- (JavaLangInteger *)get {
-  return JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$value_)) getAndIncrement]);
-}
-
-- (void)dealloc {
-  RELEASE_(val$value_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$value_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LDaggerInternalSetFactoryTest;", "incrementingIntegerProviderWithInt:", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/lang/Integer;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSetFactoryTest_2 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, 2, -1 };
-  return &_DaggerInternalSetFactoryTest_2;
-}
-
-@end
-
-void DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(DaggerInternalSetFactoryTest_2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  JreStrongAssign(&self->val$value_, capture$0);
-  NSObject_init(self);
-}
-
-DaggerInternalSetFactoryTest_2 *new_DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactoryTest_2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
-}
-
-DaggerInternalSetFactoryTest_2 *create_DaggerInternalSetFactoryTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactoryTest_2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
-}
-
-@implementation DaggerInternalSetFactoryTest_3
-
-- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
-  DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
-  return self;
-}
-
-- (id<JavaUtilSet>)get {
-  return ComGoogleCommonCollectImmutableSet_ofWithId_withId_(JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$value_)) getAndIncrement]), JavaLangInteger_valueOfWithInt_([val$value_ getAndIncrement]));
-}
-
-- (void)dealloc {
-  RELEASE_(val$value_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 0, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$value_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "()Ljava/util/Set<Ljava/lang/Integer;>;", "LDaggerInternalSetFactoryTest;", "incrementingIntegerSetProviderWithInt:", "Ljava/lang/Object;Ljavax/inject/Provider<Ljava/util/Set<Ljava/lang/Integer;>;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSetFactoryTest_3 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
-  return &_DaggerInternalSetFactoryTest_3;
-}
-
-@end
-
-void DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(DaggerInternalSetFactoryTest_3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  JreStrongAssign(&self->val$value_, capture$0);
-  NSObject_init(self);
-}
-
-DaggerInternalSetFactoryTest_3 *new_DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  J2OBJC_NEW_IMPL(DaggerInternalSetFactoryTest_3, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
-}
-
-DaggerInternalSetFactoryTest_3 *create_DaggerInternalSetFactoryTest_3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
-  J2OBJC_CREATE_IMPL(DaggerInternalSetFactoryTest_3, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
-}
diff --git a/core/iostest/daggerframework/test/DaggerInternalSingleCheckTest.h b/core/iostest/daggerframework/test/DaggerInternalSingleCheckTest.h
deleted file mode 100644
index 62f3404ab..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalSingleCheckTest.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_DaggerInternalSingleCheckTest")
-#ifdef RESTRICT_DaggerInternalSingleCheckTest
-#define INCLUDE_ALL_DaggerInternalSingleCheckTest 0
-#else
-#define INCLUDE_ALL_DaggerInternalSingleCheckTest 1
-#endif
-#undef RESTRICT_DaggerInternalSingleCheckTest
-
-#if !defined (DaggerInternalSingleCheckTest_) && (INCLUDE_ALL_DaggerInternalSingleCheckTest || defined(INCLUDE_DaggerInternalSingleCheckTest))
-#define DaggerInternalSingleCheckTest_
-
-@interface DaggerInternalSingleCheckTest : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)create_nullPointerException;
-
-- (void)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSingleCheckTest)
-
-FOUNDATION_EXPORT void DaggerInternalSingleCheckTest_init(DaggerInternalSingleCheckTest *self);
-
-FOUNDATION_EXPORT DaggerInternalSingleCheckTest *new_DaggerInternalSingleCheckTest_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT DaggerInternalSingleCheckTest *create_DaggerInternalSingleCheckTest_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSingleCheckTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_DaggerInternalSingleCheckTest")
diff --git a/core/iostest/daggerframework/test/DaggerInternalSingleCheckTest.m b/core/iostest/daggerframework/test/DaggerInternalSingleCheckTest.m
deleted file mode 100644
index aeb88180b..000000000
--- a/core/iostest/daggerframework/test/DaggerInternalSingleCheckTest.m
+++ /dev/null
@@ -1,155 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthIntegerSubject.h"
-#include "ComGoogleCommonTruthTruth.h"
-#include "DaggerInternalFactory.h"
-#include "DaggerInternalSingleCheck.h"
-#include "DaggerInternalSingleCheckTest.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Integer.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/inject/Provider.h"
-#include "org/junit/Test.h"
-#include "org/junit/runner/RunWith.h"
-#include "org/junit/runners/JUnit4.h"
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSingleCheckTest__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSingleCheckTest__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *DaggerInternalSingleCheckTest__Annotations$2();
-
-@interface DaggerInternalSingleCheckTest_1 : NSObject < DaggerInternalFactory > {
- @public
-  jint i_;
-}
-
-- (instancetype)init;
-
-- (JavaLangInteger *)get;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSingleCheckTest_1)
-
-__attribute__((unused)) static void DaggerInternalSingleCheckTest_1_init(DaggerInternalSingleCheckTest_1 *self);
-
-__attribute__((unused)) static DaggerInternalSingleCheckTest_1 *new_DaggerInternalSingleCheckTest_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static DaggerInternalSingleCheckTest_1 *create_DaggerInternalSingleCheckTest_1_init();
-
-@implementation DaggerInternalSingleCheckTest
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalSingleCheckTest_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)create_nullPointerException {
-  DaggerInternalSingleCheck_providerWithDaggerInternalFactory_(nil);
-}
-
-- (void)get {
-  id<JavaxInjectProvider> provider = DaggerInternalSingleCheck_providerWithDaggerInternalFactory_(create_DaggerInternalSingleCheckTest_1_init());
-  [((ComGoogleCommonTruthIntegerSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_([((id<JavaxInjectProvider>) nil_chk(provider)) get]))) isEqualToWithId:JavaLangInteger_valueOfWithInt_(0)];
-  [((ComGoogleCommonTruthIntegerSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_([provider get]))) isEqualToWithId:JavaLangInteger_valueOfWithInt_(0)];
-  [((ComGoogleCommonTruthIntegerSubject *) nil_chk(ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_([provider get]))) isEqualToWithId:JavaLangInteger_valueOfWithInt_(0)];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(create_nullPointerException);
-  methods[2].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&DaggerInternalSingleCheckTest__Annotations$0, (void *)&DaggerInternalSingleCheckTest__Annotations$1, (void *)&DaggerInternalSingleCheckTest__Annotations$2 };
-  static const J2ObjcClassInfo _DaggerInternalSingleCheckTest = { "SingleCheckTest", "dagger.internal", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, 2 };
-  return &_DaggerInternalSingleCheckTest;
-}
-
-@end
-
-void DaggerInternalSingleCheckTest_init(DaggerInternalSingleCheckTest *self) {
-  NSObject_init(self);
-}
-
-DaggerInternalSingleCheckTest *new_DaggerInternalSingleCheckTest_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalSingleCheckTest, init)
-}
-
-DaggerInternalSingleCheckTest *create_DaggerInternalSingleCheckTest_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalSingleCheckTest, init)
-}
-
-IOSObjectArray *DaggerInternalSingleCheckTest__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaLangNullPointerException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSingleCheckTest__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *DaggerInternalSingleCheckTest__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(OrgJunitRunnersJUnit4_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSingleCheckTest)
-
-@implementation DaggerInternalSingleCheckTest_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  DaggerInternalSingleCheckTest_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (JavaLangInteger *)get {
-  return JavaLangInteger_valueOfWithInt_(i_++);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(get);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "i_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LDaggerInternalSingleCheckTest;", "get", "Ljava/lang/Object;Ldagger/internal/Factory<Ljava/lang/Integer;>;" };
-  static const J2ObjcClassInfo _DaggerInternalSingleCheckTest_1 = { "", "dagger.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, 2, -1 };
-  return &_DaggerInternalSingleCheckTest_1;
-}
-
-@end
-
-void DaggerInternalSingleCheckTest_1_init(DaggerInternalSingleCheckTest_1 *self) {
-  NSObject_init(self);
-  self->i_ = 0;
-}
-
-DaggerInternalSingleCheckTest_1 *new_DaggerInternalSingleCheckTest_1_init() {
-  J2OBJC_NEW_IMPL(DaggerInternalSingleCheckTest_1, init)
-}
-
-DaggerInternalSingleCheckTest_1 *create_DaggerInternalSingleCheckTest_1_init() {
-  J2OBJC_CREATE_IMPL(DaggerInternalSingleCheckTest_1, init)
-}
diff --git a/core/iostest/daggerframework/test/OneTest.h b/core/iostest/daggerframework/test/OneTest.h
deleted file mode 100644
index 064716a2e..000000000
--- a/core/iostest/daggerframework/test/OneTest.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OneTest")
-#ifdef RESTRICT_OneTest
-#define INCLUDE_ALL_OneTest 0
-#else
-#define INCLUDE_ALL_OneTest 1
-#endif
-#undef RESTRICT_OneTest
-
-#if !defined (OneTest_) && (INCLUDE_ALL_OneTest || defined(INCLUDE_OneTest))
-#define OneTest_
-
-@interface OneTest : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (jint)runTests;
-
-@end
-
-J2OBJC_STATIC_INIT(OneTest)
-
-FOUNDATION_EXPORT void OneTest_init(OneTest *self);
-
-FOUNDATION_EXPORT OneTest *new_OneTest_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OneTest *create_OneTest_init();
-
-FOUNDATION_EXPORT jint OneTest_runTests();
-
-J2OBJC_TYPE_LITERAL_HEADER(OneTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OneTest")
diff --git a/core/iostest/daggerframework/test/OneTest.m b/core/iostest/daggerframework/test/OneTest.m
deleted file mode 100644
index 28fa377c1..000000000
--- a/core/iostest/daggerframework/test/OneTest.m
+++ /dev/null
@@ -1,85 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingDopplJunitTestHelper.h"
-#include "DaggerInternalDoubleCheckTest.h"
-#include "DaggerInternalInstanceFactoryTest.h"
-#include "DaggerInternalMapProviderFactoryTest.h"
-#include "DaggerInternalSetFactoryTest.h"
-#include "DaggerInternalSingleCheckTest.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OneTest.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-
-inline IOSObjectArray *OneTest_get_alltests();
-inline IOSObjectArray *OneTest_set_alltests(IOSObjectArray *value);
-static IOSObjectArray *OneTest_alltests;
-J2OBJC_STATIC_FIELD_OBJ(OneTest, alltests, IOSObjectArray *)
-
-J2OBJC_INITIALIZED_DEFN(OneTest)
-
-@implementation OneTest
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OneTest_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jint)runTests {
-  return OneTest_runTests();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(runTests);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "alltests", "[LIOSClass;", .constantValue.asLong = 0, 0xa, -1, 0, -1, -1 },
-  };
-  static const void *ptrTable[] = { &OneTest_alltests };
-  static const J2ObjcClassInfo _OneTest = { "OneTest", NULL, ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
-  return &_OneTest;
-}
-
-+ (void)initialize {
-  if (self == [OneTest class]) {
-    JreStrongAssignAndConsume(&OneTest_alltests, [IOSObjectArray newArrayWithObjects:(id[]){ DaggerInternalDoubleCheckTest_class_(), DaggerInternalInstanceFactoryTest_class_(), DaggerInternalMapProviderFactoryTest_class_(), DaggerInternalSetFactoryTest_class_(), DaggerInternalSingleCheckTest_class_() } count:5 type:IOSClass_class_()]);
-    J2OBJC_SET_INITIALIZED(OneTest)
-  }
-}
-
-@end
-
-void OneTest_init(OneTest *self) {
-  NSObject_init(self);
-}
-
-OneTest *new_OneTest_init() {
-  J2OBJC_NEW_IMPL(OneTest, init)
-}
-
-OneTest *create_OneTest_init() {
-  J2OBJC_CREATE_IMPL(OneTest, init)
-}
-
-jint OneTest_runTests() {
-  OneTest_initialize();
-  id<JavaUtilList> smoothClasses = create_JavaUtilArrayList_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(OneTest_alltests));
-  IOSObjectArray *classes = [smoothClasses toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[smoothClasses size] type:IOSClass_class_()]];
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_(classes);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OneTest)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplContextTestRunner.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplContextTestRunner.h
deleted file mode 100644
index 3f821e478..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplContextTestRunner.h
+++ /dev/null
@@ -1,60 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplContextTestRunner")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplContextTestRunner
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplContextTestRunner 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplContextTestRunner 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplContextTestRunner
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplContextTestRunner_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplContextTestRunner || defined(INCLUDE_CoTouchlabDopplTestingDopplContextTestRunner))
-#define CoTouchlabDopplTestingDopplContextTestRunner_
-
-#define RESTRICT_OrgJunitRunnersBlockJUnit4ClassRunner 1
-#define INCLUDE_OrgJunitRunnersBlockJUnit4ClassRunner 1
-#include "org/junit/runners/BlockJUnit4ClassRunner.h"
-
-@class IOSClass;
-@class OrgJunitRunnerNotificationRunNotifier;
-@class OrgJunitRunnersModelFrameworkMethod;
-
-@interface CoTouchlabDopplTestingDopplContextTestRunner : OrgJunitRunnersBlockJUnit4ClassRunner
-
-#pragma mark Public
-
-- (instancetype)initWithIOSClass:(IOSClass *)klass;
-
-#pragma mark Protected
-
-- (void)runChildWithId:(OrgJunitRunnersModelFrameworkMethod *)method
-withOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplContextTestRunner)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(CoTouchlabDopplTestingDopplContextTestRunner *self, IOSClass *klass);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplContextTestRunner *new_CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(IOSClass *klass) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplContextTestRunner *create_CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(IOSClass *klass);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplContextTestRunner)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplContextTestRunner")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplContextTestRunner.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplContextTestRunner.m
deleted file mode 100644
index 142541ffb..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplContextTestRunner.m
+++ /dev/null
@@ -1,122 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppApplication.h"
-#include "CoTouchlabDopplTestingDopplContextTestRunner.h"
-#include "CoTouchlabDopplTestingDopplRuntimeEnvironment.h"
-#include "CoTouchlabDopplTestingTestingContext.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/File.h"
-#include "java/io/IOException.h"
-#include "java/lang/RuntimeException.h"
-#include "org/junit/runner/notification/RunNotifier.h"
-#include "org/junit/runners/BlockJUnit4ClassRunner.h"
-#include "org/junit/runners/model/FrameworkMethod.h"
-
-@interface CoTouchlabDopplTestingDopplContextTestRunner ()
-
-- (JavaIoFile *)initContext OBJC_METHOD_FAMILY_NONE;
-
-- (void)deleteRecursiveWithJavaIoFile:(JavaIoFile *)contextDataDir;
-
-@end
-
-__attribute__((unused)) static JavaIoFile *CoTouchlabDopplTestingDopplContextTestRunner_initContext(CoTouchlabDopplTestingDopplContextTestRunner *self);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplContextTestRunner_deleteRecursiveWithJavaIoFile_(CoTouchlabDopplTestingDopplContextTestRunner *self, JavaIoFile *contextDataDir);
-
-@implementation CoTouchlabDopplTestingDopplContextTestRunner
-
-- (instancetype)initWithIOSClass:(IOSClass *)klass {
-  CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(self, klass);
-  return self;
-}
-
-- (void)runChildWithId:(OrgJunitRunnersModelFrameworkMethod *)method
-withOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier {
-  JavaIoFile *contextDataDir = CoTouchlabDopplTestingDopplContextTestRunner_initContext(self);
-  @try {
-    [super runChildWithId:method withOrgJunitRunnerNotificationRunNotifier:notifier];
-  }
-  @finally {
-    CoTouchlabDopplTestingDopplContextTestRunner_deleteRecursiveWithJavaIoFile_(self, contextDataDir);
-    [((JavaIoFile *) nil_chk(contextDataDir)) delete__];
-  }
-}
-
-- (JavaIoFile *)initContext {
-  return CoTouchlabDopplTestingDopplContextTestRunner_initContext(self);
-}
-
-- (void)deleteRecursiveWithJavaIoFile:(JavaIoFile *)contextDataDir {
-  CoTouchlabDopplTestingDopplContextTestRunner_deleteRecursiveWithJavaIoFile_(self, contextDataDir);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
-    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithIOSClass:);
-  methods[1].selector = @selector(runChildWithId:withOrgJunitRunnerNotificationRunNotifier:);
-  methods[2].selector = @selector(initContext);
-  methods[3].selector = @selector(deleteRecursiveWithJavaIoFile:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LIOSClass;", "LOrgJunitRunnersModelInitializationError;", "(Ljava/lang/Class<*>;)V", "runChild", "LOrgJunitRunnersModelFrameworkMethod;LOrgJunitRunnerNotificationRunNotifier;", "deleteRecursive", "LJavaIoFile;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplContextTestRunner = { "DopplContextTestRunner", "co.touchlab.doppl.testing", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplContextTestRunner;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(CoTouchlabDopplTestingDopplContextTestRunner *self, IOSClass *klass) {
-  OrgJunitRunnersBlockJUnit4ClassRunner_initWithIOSClass_(self, klass);
-}
-
-CoTouchlabDopplTestingDopplContextTestRunner *new_CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(IOSClass *klass) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplContextTestRunner, initWithIOSClass_, klass)
-}
-
-CoTouchlabDopplTestingDopplContextTestRunner *create_CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(IOSClass *klass) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplContextTestRunner, initWithIOSClass_, klass)
-}
-
-JavaIoFile *CoTouchlabDopplTestingDopplContextTestRunner_initContext(CoTouchlabDopplTestingDopplContextTestRunner *self) {
-  @try {
-    JavaIoFile *context = JavaIoFile_createTempFileWithNSString_withNSString_(@"context", nil);
-    NSString *filename = [((JavaIoFile *) nil_chk(context)) getName];
-    if (![context isDirectory] && [((NSString *) nil_chk(filename)) hasSuffix:@".tmp"]) {
-      context = create_JavaIoFile_initWithJavaIoFile_withNSString_([context getParentFile], [((NSString *) nil_chk(filename)) java_substring:0 endIndex:[filename java_lastIndexOfString:@".tmp"]]);
-      if ([context exists]) @throw create_JavaLangRuntimeException_initWithNSString_(@"Can't create a new temp file for testing context");
-    }
-    [context mkdirs];
-    JreStrongAssignAndConsume(JreLoadStaticRef(CoTouchlabDopplTestingDopplRuntimeEnvironment, application), new_CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(context));
-    return context;
-  }
-  @catch (JavaIoIOException *e) {
-    @throw create_JavaLangRuntimeException_initWithNSException_(e);
-  }
-}
-
-void CoTouchlabDopplTestingDopplContextTestRunner_deleteRecursiveWithJavaIoFile_(CoTouchlabDopplTestingDopplContextTestRunner *self, JavaIoFile *contextDataDir) {
-  IOSObjectArray *files = [((JavaIoFile *) nil_chk(contextDataDir)) listFiles];
-  {
-    IOSObjectArray *a__ = files;
-    JavaIoFile * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
-    JavaIoFile * const *e__ = b__ + a__->size_;
-    while (b__ < e__) {
-      JavaIoFile *file = *b__++;
-      if ([((JavaIoFile *) nil_chk(file)) isDirectory]) CoTouchlabDopplTestingDopplContextTestRunner_deleteRecursiveWithJavaIoFile_(self, file);
-      [file delete__];
-    }
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplContextTestRunner)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplHacks.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplHacks.h
deleted file mode 100644
index 7b6084265..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplHacks.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplHacks")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplHacks
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplHacks 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplHacks 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplHacks
-
-#if !defined (CoTouchlabDopplTestingDopplHacks_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplHacks || defined(INCLUDE_CoTouchlabDopplTestingDopplHacks))
-#define CoTouchlabDopplTestingDopplHacks_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol CoTouchlabDopplTestingDopplHacks < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplHacks)
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplHacks)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplHacks")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplHacks.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplHacks.m
deleted file mode 100644
index aeae6bd83..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplHacks.m
+++ /dev/null
@@ -1,33 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingDopplHacks.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface CoTouchlabDopplTestingDopplHacks : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *CoTouchlabDopplTestingDopplHacks__Annotations$0();
-
-@implementation CoTouchlabDopplTestingDopplHacks
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&CoTouchlabDopplTestingDopplHacks__Annotations$0 };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplHacks = { "DopplHacks", "co.touchlab.doppl.testing", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_CoTouchlabDopplTestingDopplHacks;
-}
-
-@end
-
-IOSObjectArray *CoTouchlabDopplTestingDopplHacks__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplHacks)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplJunitTestHelper.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplJunitTestHelper.h
deleted file mode 100644
index 9f0d2fa86..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplJunitTestHelper.h
+++ /dev/null
@@ -1,309 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplJunitTestHelper
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplJunitTestHelper
-
-#if !defined (CoTouchlabDopplTestingDopplJunitTestHelper_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDopplTestingDopplJunitTestHelper))
-#define CoTouchlabDopplTestingDopplJunitTestHelper_
-
-@class CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;
-@class CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;
-@class IOSClass;
-@class IOSObjectArray;
-@class JavaIoPrintStream;
-@class OrgJunitRunnerJUnitCore;
-@class OrgJunitRunnerNotificationRunListener;
-@class OrgJunitRunnerResult;
-@protocol CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener;
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)outArg;
-
-+ (jint)mainWithNSStringArray:(IOSObjectArray *)args;
-
-- (OrgJunitRunnerNotificationRunListener *)newRunListenerWithCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat:(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *)outputFormat OBJC_METHOD_FAMILY_NONE;
-
-- (jint)run;
-
-+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes;
-
-+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener;
-
-+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
-withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener:(id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener>)dopplJunitListener;
-
-+ (jint)runWithNSStringArray:(IOSObjectArray *)classes;
-
-+ (jint)runWithNSStringArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener;
-
-+ (jint)runWithNSStringArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
-withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener:(id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener>)dopplListener;
-
-+ (OrgJunitRunnerResult *)runSpecificTestWithOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)junitCore
-                                                        withNSString:(NSString *)c;
-
-- (void)sortClassesWithIOSClassArray:(IOSObjectArray *)classes
-withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)sortOrder;
-
-#pragma mark Protected
-
-- (jboolean)isJUnit3TestClassWithIOSClass:(IOSClass *)cls;
-
-- (jboolean)isJUnit4TestClassWithIOSClass:(IOSClass *)cls;
-
-- (jboolean)isJUnitTestClassWithIOSClass:(IOSClass *)cls;
-
-#pragma mark Package-Private
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplJunitTestHelper_init(CoTouchlabDopplTestingDopplJunitTestHelper *self);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper *new_CoTouchlabDopplTestingDopplJunitTestHelper_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper *create_CoTouchlabDopplTestingDopplJunitTestHelper_init();
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(CoTouchlabDopplTestingDopplJunitTestHelper *self, JavaIoPrintStream *outArg);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper *new_CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper *create_CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_mainWithNSStringArray_(IOSObjectArray *args);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_(IOSObjectArray *classes);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener> dopplListener);
-
-FOUNDATION_EXPORT OrgJunitRunnerResult *CoTouchlabDopplTestingDopplJunitTestHelper_runSpecificTestWithOrgJunitRunnerJUnitCore_withNSString_(OrgJunitRunnerJUnitCore *junitCore, NSString *c);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_(IOSObjectArray *classes);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener);
-
-FOUNDATION_EXPORT jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener> dopplJunitListener);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper)
-
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat))
-#define CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_Enum) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_Enum_JUNIT = 0,
-  CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_Enum_GTM_UNIT_TESTING = 1,
-};
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values_[];
-
-inline CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_get_JUNIT();
-J2OBJC_ENUM_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat, JUNIT)
-
-inline CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_get_GTM_UNIT_TESTING();
-J2OBJC_ENUM_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat, GTM_UNIT_TESTING)
-
-FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values();
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat)
-
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder))
-#define CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_Enum) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_Enum_ALPHABETICAL = 0,
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_Enum_RANDOM = 1,
-};
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values_[];
-
-inline CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_get_ALPHABETICAL();
-J2OBJC_ENUM_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder, ALPHABETICAL)
-
-inline CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_get_RANDOM();
-J2OBJC_ENUM_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder, RANDOM)
-
-FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values();
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder)
-
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion))
-#define CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_Enum) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_Enum_INCLUDE = 0,
-  CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_Enum_EXCLUDE = 1,
-};
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-+ (CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values_[];
-
-inline CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_get_INCLUDE();
-J2OBJC_ENUM_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion, INCLUDE)
-
-inline CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_get_EXCLUDE();
-J2OBJC_ENUM_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion, EXCLUDE)
-
-FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values();
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion)
-
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener))
-#define CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_
-
-@protocol CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener < JavaObject >
-
-- (void)startRunWithNSString:(NSString *)run;
-
-- (void)endRunWithNSString:(NSString *)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener)
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener)
-
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer))
-#define CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_
-
-@class OrgJunitRunnerResult;
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer : NSObject {
- @public
-  OrgJunitRunnerResult *result_;
-  NSString *testClassName_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result
-                                withNSString:(NSString *)testClassName;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer)
-
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer, result_, OrgJunitRunnerResult *)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer, testClassName_, NSString *)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *self, OrgJunitRunnerResult *result, NSString *testClassName);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *new_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *create_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplJunitTestHelper")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplJunitTestHelper.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplJunitTestHelper.m
deleted file mode 100644
index 53364235c..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplJunitTestHelper.m
+++ /dev/null
@@ -1,1358 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingDopplJunitTestHelper.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/IOException.h"
-#include "java/io/InputStream.h"
-#include "java/io/PrintStream.h"
-#include "java/lang/ClassLoader.h"
-#include "java/lang/ClassNotFoundException.h"
-#include "java/lang/Double.h"
-#include "java/lang/Enum.h"
-#include "java/lang/Exception.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Package.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/System.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Arrays.h"
-#include "java/util/Collections.h"
-#include "java/util/Comparator.h"
-#include "java/util/HashMap.h"
-#include "java/util/HashSet.h"
-#include "java/util/Iterator.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Properties.h"
-#include "java/util/Random.h"
-#include "java/util/Set.h"
-#include "java/util/function/Function.h"
-#include "java/util/function/ToDoubleFunction.h"
-#include "java/util/function/ToIntFunction.h"
-#include "java/util/function/ToLongFunction.h"
-#include "junit/runner/Version.h"
-#include "org/junit/Test.h"
-#include "org/junit/internal/TextListener.h"
-#include "org/junit/runner/Computer.h"
-#include "org/junit/runner/Description.h"
-#include "org/junit/runner/JUnitCore.h"
-#include "org/junit/runner/Request.h"
-#include "org/junit/runner/Result.h"
-#include "org/junit/runner/RunWith.h"
-#include "org/junit/runner/notification/Failure.h"
-#include "org/junit/runner/notification/RunListener.h"
-#include "org/junit/runners/JUnit4.h"
-#include "org/junit/runners/Suite.h"
-
-#pragma clang diagnostic ignored "-Wprotocol"
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper () {
- @public
-  JavaIoPrintStream *out_;
-  id<JavaUtilSet> includePatterns_;
-  id<JavaUtilSet> excludePatterns_;
-  id<JavaUtilMap> nameMappings_;
-  id<JavaUtilMap> randomNames_;
-  JavaUtilRandom *random_;
-  CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *outputFormat_;
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *sortOrder_;
-}
-
-+ (jint)runInnerWithJavaUtilList:(id<JavaUtilList>)resultList
-                     withBoolean:(jboolean)hasError;
-
-- (NSString *)replaceAllWithNSString:(NSString *)value;
-
-- (NSString *)getSortKeyWithIOSClass:(IOSClass *)cls
-withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)sortOrder;
-
-- (id<JavaUtilSet>)getAllTestClasses;
-
-- (NSString *)getPackageNameWithIOSClass:(IOSClass *)cls;
-
-- (id<JavaUtilSet>)getTestClasses;
-
-- (jboolean)matchesPatternWithIOSClass:(IOSClass *)testClass
-                          withNSString:(NSString *)pattern;
-
-- (void)loadPropertiesWithJavaIoInputStream:(JavaIoInputStream *)stream;
-
-- (void)loadPropertiesFromResourceWithNSString:(NSString *)resourcePath;
-
-- (void)onErrorWithJavaLangException:(JavaLangException *)e;
-
-@end
-
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, out_, JavaIoPrintStream *)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, includePatterns_, id<JavaUtilSet>)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, excludePatterns_, id<JavaUtilSet>)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, nameMappings_, id<JavaUtilMap>)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, randomNames_, id<JavaUtilMap>)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, random_, JavaUtilRandom *)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, outputFormat_, CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *)
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper, sortOrder_, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)
-
-inline NSString *CoTouchlabDopplTestingDopplJunitTestHelper_get_PROPERTIES_FILE_NAME();
-static NSString *CoTouchlabDopplTestingDopplJunitTestHelper_PROPERTIES_FILE_NAME = @"JUnitTestRunner.properties";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabDopplTestingDopplJunitTestHelper, PROPERTIES_FILE_NAME, NSString *)
-
-__attribute__((unused)) static jint CoTouchlabDopplTestingDopplJunitTestHelper_runInnerWithJavaUtilList_withBoolean_(id<JavaUtilList> resultList, jboolean hasError);
-
-__attribute__((unused)) static NSString *CoTouchlabDopplTestingDopplJunitTestHelper_replaceAllWithNSString_(CoTouchlabDopplTestingDopplJunitTestHelper *self, NSString *value);
-
-__attribute__((unused)) static NSString *CoTouchlabDopplTestingDopplJunitTestHelper_getSortKeyWithIOSClass_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper *self, IOSClass *cls, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *sortOrder);
-
-__attribute__((unused)) static id<JavaUtilSet> CoTouchlabDopplTestingDopplJunitTestHelper_getAllTestClasses(CoTouchlabDopplTestingDopplJunitTestHelper *self);
-
-__attribute__((unused)) static NSString *CoTouchlabDopplTestingDopplJunitTestHelper_getPackageNameWithIOSClass_(CoTouchlabDopplTestingDopplJunitTestHelper *self, IOSClass *cls);
-
-__attribute__((unused)) static id<JavaUtilSet> CoTouchlabDopplTestingDopplJunitTestHelper_getTestClasses(CoTouchlabDopplTestingDopplJunitTestHelper *self);
-
-__attribute__((unused)) static jboolean CoTouchlabDopplTestingDopplJunitTestHelper_matchesPatternWithIOSClass_withNSString_(CoTouchlabDopplTestingDopplJunitTestHelper *self, IOSClass *testClass, NSString *pattern);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesWithJavaIoInputStream_(CoTouchlabDopplTestingDopplJunitTestHelper *self, JavaIoInputStream *stream);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesFromResourceWithNSString_(CoTouchlabDopplTestingDopplJunitTestHelper *self, NSString *resourcePath);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_onErrorWithJavaLangException_(CoTouchlabDopplTestingDopplJunitTestHelper *self, JavaLangException *e);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_initWithNSString_withInt_(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *self, NSString *__name, jint __ordinal);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_initWithNSString_withInt_(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *self, NSString *__name, jint __ordinal);
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_initWithNSString_withInt_(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *self, NSString *__name, jint __ordinal);
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener : NSObject
-
-@end
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_1 : NSObject < JavaUtilComparator >
-
-- (instancetype)init;
-
-- (jint)compareWithId:(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *)a
-               withId:(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *)b;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_1)
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_1_init(CoTouchlabDopplTestingDopplJunitTestHelper_1 *self);
-
-__attribute__((unused)) static CoTouchlabDopplTestingDopplJunitTestHelper_1 *new_CoTouchlabDopplTestingDopplJunitTestHelper_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static CoTouchlabDopplTestingDopplJunitTestHelper_1 *create_CoTouchlabDopplTestingDopplJunitTestHelper_1_init();
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_2 : NSObject < JavaUtilComparator > {
- @public
-  CoTouchlabDopplTestingDopplJunitTestHelper *this$0_;
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *val$sortOrder_;
-}
-
-- (instancetype)initWithCoTouchlabDopplTestingDopplJunitTestHelper:(CoTouchlabDopplTestingDopplJunitTestHelper *)outer$
-          withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)capture$0;
-
-- (jint)compareWithId:(IOSClass *)class1
-               withId:(IOSClass *)class2;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_2)
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper_2 *self, CoTouchlabDopplTestingDopplJunitTestHelper *outer$, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *capture$0);
-
-__attribute__((unused)) static CoTouchlabDopplTestingDopplJunitTestHelper_2 *new_CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static CoTouchlabDopplTestingDopplJunitTestHelper_2 *create_CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *capture$0);
-
-@interface CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener : OrgJunitRunnerNotificationRunListener {
- @public
-  __unsafe_unretained CoTouchlabDopplTestingDopplJunitTestHelper *this$0_;
-  jint numTests_;
-  jint numFailures_;
-  OrgJunitRunnerNotificationFailure *testFailure_;
-  jdouble testStartTime_;
-}
-
-- (instancetype)initWithCoTouchlabDopplTestingDopplJunitTestHelper:(CoTouchlabDopplTestingDopplJunitTestHelper *)outer$;
-
-- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result;
-
-- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;
-
-- (void)testFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;
-
-- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;
-
-- (NSString *)parseDescriptionWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener)
-
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener, testFailure_, OrgJunitRunnerNotificationFailure *)
-
-inline jint CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_get_numUnexpected();
-#define CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_numUnexpected 0
-J2OBJC_STATIC_FIELD_CONSTANT(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener, numUnexpected, jint)
-
-__attribute__((unused)) static void CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *self, CoTouchlabDopplTestingDopplJunitTestHelper *outer$);
-
-__attribute__((unused)) static CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *new_CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *create_CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$);
-
-__attribute__((unused)) static NSString *CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_parseDescriptionWithOrgJunitRunnerDescription_(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *self, OrgJunitRunnerDescription *description_);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener)
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  CoTouchlabDopplTestingDopplJunitTestHelper_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(self, outArg);
-  return self;
-}
-
-+ (jint)mainWithNSStringArray:(IOSObjectArray *)args {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_mainWithNSStringArray_(args);
-}
-
-+ (jint)runWithNSStringArray:(IOSObjectArray *)classes {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_(classes);
-}
-
-+ (jint)runWithNSStringArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_(classes, listener);
-}
-
-+ (jint)runWithNSStringArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
-withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener:(id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener>)dopplListener {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, listener, dopplListener);
-}
-
-+ (OrgJunitRunnerResult *)runSpecificTestWithOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)junitCore
-                                                        withNSString:(NSString *)c {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runSpecificTestWithOrgJunitRunnerJUnitCore_withNSString_(junitCore, c);
-}
-
-+ (jint)runInnerWithJavaUtilList:(id<JavaUtilList>)resultList
-                     withBoolean:(jboolean)hasError {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runInnerWithJavaUtilList_withBoolean_(resultList, hasError);
-}
-
-- (jint)run {
-  id<JavaUtilSet> classesSet = CoTouchlabDopplTestingDopplJunitTestHelper_getTestClasses(self);
-  IOSObjectArray *classes = [((id<JavaUtilSet>) nil_chk(classesSet)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[classesSet size] type:IOSClass_class_()]];
-  [self sortClassesWithIOSClassArray:classes withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:sortOrder_];
-  OrgJunitRunnerNotificationRunListener *listener = [self newRunListenerWithCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat:outputFormat_];
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, listener, nil);
-}
-
-+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_(classes);
-}
-
-+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_(classes, listener);
-}
-
-+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes
-withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
-withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener:(id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener>)dopplJunitListener {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, listener, dopplJunitListener);
-}
-
-- (OrgJunitRunnerNotificationRunListener *)newRunListenerWithCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat:(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *)outputFormat {
-  switch ([outputFormat ordinal]) {
-    case CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_Enum_JUNIT:
-    [((JavaIoPrintStream *) nil_chk(out_)) printlnWithNSString:JreStrcat("$$", @"JUnit version ", JunitRunnerVersion_id__())];
-    return create_OrgJunitInternalTextListener_initWithJavaIoPrintStream_(out_);
-    case CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_Enum_GTM_UNIT_TESTING:
-    return create_CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(self);
-    default:
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"outputFormat");
-  }
-}
-
-- (void)sortClassesWithIOSClassArray:(IOSObjectArray *)classes
-withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)sortOrder {
-  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(classes, create_CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(self, sortOrder));
-}
-
-- (NSString *)replaceAllWithNSString:(NSString *)value {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_replaceAllWithNSString_(self, value);
-}
-
-- (NSString *)getSortKeyWithIOSClass:(IOSClass *)cls
-withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)sortOrder {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_getSortKeyWithIOSClass_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(self, cls, sortOrder);
-}
-
-// Returns true if |cls| conforms to the NSObject protocol.
-BOOL IsNSObjectClass(Class cls) {
-  while (cls != nil) {
-    if (class_conformsToProtocol(cls, @protocol(NSObject))) {
-      return YES;
-    }
-    // class_conformsToProtocol() does not examine superclasses.
-    cls = class_getSuperclass(cls);
-  }
-  return NO;
-}
-
-- (id<JavaUtilSet>)getAllTestClasses {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_getAllTestClasses(self);
-}
-
-- (jboolean)isJUnitTestClassWithIOSClass:(IOSClass *)cls {
-  return [self isJUnit3TestClassWithIOSClass:cls] || [self isJUnit4TestClassWithIOSClass:cls];
-}
-
-- (jboolean)isJUnit3TestClassWithIOSClass:(IOSClass *)cls {
-  if ([OrgJunitTest_class_() isAssignableFrom:cls]) {
-    NSString *packageName = CoTouchlabDopplTestingDopplJunitTestHelper_getPackageNameWithIOSClass_(self, cls);
-    return ![((NSString *) nil_chk(packageName)) hasPrefix:@"junit.framework"] && ![packageName hasPrefix:@"junit.extensions"];
-  }
-  return false;
-}
-
-- (jboolean)isJUnit4TestClassWithIOSClass:(IOSClass *)cls {
-  if (![((NSString *) nil_chk([((IOSClass *) nil_chk(cls)) getName])) hasSuffix:@"Test"]) {
-    return false;
-  }
-  id<JavaLangAnnotationAnnotation> annotation = [cls getAnnotationWithIOSClass:OrgJunitRunnerRunWith_class_()];
-  if (annotation != nil) {
-    id<OrgJunitRunnerRunWith> runWith = (id<OrgJunitRunnerRunWith>) cast_check(annotation, OrgJunitRunnerRunWith_class_());
-    id value = [runWith value];
-    if ([nil_chk(value) isEqual:OrgJunitRunnersJUnit4_class_()] || [value isEqual:OrgJunitRunnersSuite_class_()]) {
-      return true;
-    }
-  }
-  return false;
-}
-
-- (NSString *)getPackageNameWithIOSClass:(IOSClass *)cls {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_getPackageNameWithIOSClass_(self, cls);
-}
-
-- (id<JavaUtilSet>)getTestClasses {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_getTestClasses(self);
-}
-
-- (jboolean)matchesPatternWithIOSClass:(IOSClass *)testClass
-                          withNSString:(NSString *)pattern {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_matchesPatternWithIOSClass_withNSString_(self, testClass, pattern);
-}
-
-- (void)loadPropertiesWithJavaIoInputStream:(JavaIoInputStream *)stream {
-  CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesWithJavaIoInputStream_(self, stream);
-}
-
-- (void)loadPropertiesFromResourceWithNSString:(NSString *)resourcePath {
-  CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesFromResourceWithNSString_(self, resourcePath);
-}
-
-- (void)onErrorWithJavaLangException:(JavaLangException *)e {
-  CoTouchlabDopplTestingDopplJunitTestHelper_onErrorWithJavaLangException_(self, e);
-}
-
-- (void)dealloc {
-  RELEASE_(out_);
-  RELEASE_(includePatterns_);
-  RELEASE_(excludePatterns_);
-  RELEASE_(nameMappings_);
-  RELEASE_(randomNames_);
-  RELEASE_(random_);
-  RELEASE_(outputFormat_);
-  RELEASE_(sortOrder_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 1, 2, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 3, 2, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 3, 5, -1, -1, -1, -1 },
-    { NULL, "LOrgJunitRunnerResult;", 0x9, 6, 7, 8, -1, -1, -1 },
-    { NULL, "I", 0xa, 9, 10, -1, 11, -1, -1 },
-    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 3, 12, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 3, 13, -1, -1, -1, -1 },
-    { NULL, "I", 0x9, 3, 14, -1, -1, -1, -1 },
-    { NULL, "LOrgJunitRunnerNotificationRunListener;", 0x1, 15, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 19, 20, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 21, 22, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x102, -1, -1, -1, 23, -1, -1 },
-    { NULL, "Z", 0x4, 24, 25, -1, -1, -1, -1 },
-    { NULL, "Z", 0x4, 26, 25, -1, -1, -1, -1 },
-    { NULL, "Z", 0x4, 27, 25, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 28, 25, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x2, -1, -1, -1, 23, -1, -1 },
-    { NULL, "Z", 0x2, 29, 30, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 31, 32, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 33, 20, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 34, 35, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithJavaIoPrintStream:);
-  methods[2].selector = @selector(mainWithNSStringArray:);
-  methods[3].selector = @selector(runWithNSStringArray:);
-  methods[4].selector = @selector(runWithNSStringArray:withOrgJunitRunnerNotificationRunListener:);
-  methods[5].selector = @selector(runWithNSStringArray:withOrgJunitRunnerNotificationRunListener:withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener:);
-  methods[6].selector = @selector(runSpecificTestWithOrgJunitRunnerJUnitCore:withNSString:);
-  methods[7].selector = @selector(runInnerWithJavaUtilList:withBoolean:);
-  methods[8].selector = @selector(run);
-  methods[9].selector = @selector(runWithIOSClassArray:);
-  methods[10].selector = @selector(runWithIOSClassArray:withOrgJunitRunnerNotificationRunListener:);
-  methods[11].selector = @selector(runWithIOSClassArray:withOrgJunitRunnerNotificationRunListener:withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener:);
-  methods[12].selector = @selector(newRunListenerWithCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat:);
-  methods[13].selector = @selector(sortClassesWithIOSClassArray:withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:);
-  methods[14].selector = @selector(replaceAllWithNSString:);
-  methods[15].selector = @selector(getSortKeyWithIOSClass:withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:);
-  methods[16].selector = @selector(getAllTestClasses);
-  methods[17].selector = @selector(isJUnitTestClassWithIOSClass:);
-  methods[18].selector = @selector(isJUnit3TestClassWithIOSClass:);
-  methods[19].selector = @selector(isJUnit4TestClassWithIOSClass:);
-  methods[20].selector = @selector(getPackageNameWithIOSClass:);
-  methods[21].selector = @selector(getTestClasses);
-  methods[22].selector = @selector(matchesPatternWithIOSClass:withNSString:);
-  methods[23].selector = @selector(loadPropertiesWithJavaIoInputStream:);
-  methods[24].selector = @selector(loadPropertiesFromResourceWithNSString:);
-  methods[25].selector = @selector(onErrorWithJavaLangException:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "PROPERTIES_FILE_NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
-    { "out_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "includePatterns_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 37, -1 },
-    { "excludePatterns_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 37, -1 },
-    { "nameMappings_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 38, -1 },
-    { "randomNames_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 38, -1 },
-    { "random_", "LJavaUtilRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "outputFormat_", "LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "sortOrder_", "LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaIoPrintStream;", "main", "[LNSString;", "run", "[LNSString;LOrgJunitRunnerNotificationRunListener;", "[LNSString;LOrgJunitRunnerNotificationRunListener;LCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener;", "runSpecificTest", "LOrgJunitRunnerJUnitCore;LNSString;", "LJavaLangClassNotFoundException;", "runInner", "LJavaUtilList;Z", "(Ljava/util/List<Lco/touchlab/doppl/testing/DopplJunitTestHelper$ResultContainer;>;Z)I", "[LIOSClass;", "[LIOSClass;LOrgJunitRunnerNotificationRunListener;", "[LIOSClass;LOrgJunitRunnerNotificationRunListener;LCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener;", "newRunListener", "LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;", "sortClasses", "[LIOSClass;LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", "replaceAll", "LNSString;", "getSortKey", "LIOSClass;LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", "()Ljava/util/Set<Ljava/lang/Class;>;", "isJUnitTestClass", "LIOSClass;", "isJUnit3TestClass", "isJUnit4TestClass", "getPackageName", "matchesPattern", "LIOSClass;LNSString;", "loadProperties", "LJavaIoInputStream;", "loadPropertiesFromResource", "onError", "LJavaLangException;", &CoTouchlabDopplTestingDopplJunitTestHelper_PROPERTIES_FILE_NAME, "Ljava/util/Set<Ljava/lang/String;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;LCoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion;LCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener;LCoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer;LCoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper = { "DopplJunitTestHelper", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x1, 26, 9, -1, 39, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_init(CoTouchlabDopplTestingDopplJunitTestHelper *self) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(self, JreLoadStatic(JavaLangSystem, out));
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper *new_CoTouchlabDopplTestingDopplJunitTestHelper_init() {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper, init)
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper *create_CoTouchlabDopplTestingDopplJunitTestHelper_init() {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper, init)
-}
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(CoTouchlabDopplTestingDopplJunitTestHelper *self, JavaIoPrintStream *outArg) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->includePatterns_, new_JavaUtilHashSet_init());
-  JreStrongAssignAndConsume(&self->excludePatterns_, new_JavaUtilHashSet_init());
-  JreStrongAssignAndConsume(&self->nameMappings_, new_JavaUtilHashMap_init());
-  JreStrongAssignAndConsume(&self->randomNames_, new_JavaUtilHashMap_init());
-  JreStrongAssignAndConsume(&self->random_, new_JavaUtilRandom_initWithLong_(JavaLangSystem_currentTimeMillis()));
-  JreStrongAssign(&self->outputFormat_, JreLoadEnum(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat, JUNIT));
-  JreStrongAssign(&self->sortOrder_, JreLoadEnum(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder, ALPHABETICAL));
-  JreStrongAssign(&self->out_, outArg);
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper *new_CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper, initWithJavaIoPrintStream_, outArg)
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper *create_CoTouchlabDopplTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper, initWithJavaIoPrintStream_, outArg)
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_mainWithNSStringArray_(IOSObjectArray *args) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  CoTouchlabDopplTestingDopplJunitTestHelper *runner = create_CoTouchlabDopplTestingDopplJunitTestHelper_init();
-  CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesFromResourceWithNSString_(runner, CoTouchlabDopplTestingDopplJunitTestHelper_PROPERTIES_FILE_NAME);
-  return [runner run];
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_(IOSObjectArray *classes) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, nil, nil);
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, listener, nil);
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener> dopplListener) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  @try {
-    OrgJunitRunnerJUnitCore *junitCore = create_OrgJunitRunnerJUnitCore_init();
-    if (listener != nil) [junitCore addListenerWithOrgJunitRunnerNotificationRunListener:listener];
-    jboolean hasError = false;
-    OrgJunitRunnerResult *result;
-    id<JavaUtilList> resultList = create_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(classes))->size_);
-    {
-      IOSObjectArray *a__ = classes;
-      NSString * const *b__ = a__->buffer_;
-      NSString * const *e__ = b__ + a__->size_;
-      while (b__ < e__) {
-        NSString *c = *b__++;
-        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$", @"\n\n********** Running ", c, @" **********")];
-        if (dopplListener != nil) [dopplListener startRunWithNSString:c];
-        result = CoTouchlabDopplTestingDopplJunitTestHelper_runSpecificTestWithOrgJunitRunnerJUnitCore_withNSString_(junitCore, c);
-        if (dopplListener != nil) [dopplListener endRunWithNSString:c];
-        [resultList addWithId:create_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(result, c)];
-        hasError = (hasError || ![((OrgJunitRunnerResult *) nil_chk(result)) wasSuccessful]);
-      }
-    }
-    return CoTouchlabDopplTestingDopplJunitTestHelper_runInnerWithJavaUtilList_withBoolean_(resultList, hasError);
-  }
-  @catch (JavaLangClassNotFoundException *e) {
-    @throw create_JavaLangRuntimeException_initWithNSException_(e);
-  }
-}
-
-OrgJunitRunnerResult *CoTouchlabDopplTestingDopplJunitTestHelper_runSpecificTestWithOrgJunitRunnerJUnitCore_withNSString_(OrgJunitRunnerJUnitCore *junitCore, NSString *c) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  OrgJunitRunnerResult *result;
-  if ([((NSString *) nil_chk(c)) java_contains:@"#"]) {
-    IOSObjectArray *split = [c java_split:@"#"];
-    IOSClass *clazz = IOSClass_forName_(IOSObjectArray_Get(nil_chk(split), 0));
-    OrgJunitRunnerRequest *request = OrgJunitRunnerRequest_classesWithOrgJunitRunnerComputer_withIOSClassArray_(create_OrgJunitRunnerComputer_init(), [IOSObjectArray arrayWithObjects:(id[]){ clazz } count:1 type:IOSClass_class_()]);
-    OrgJunitRunnerDescription *desiredDescription = OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_(clazz, IOSObjectArray_Get(split, 1));
-    request = [((OrgJunitRunnerRequest *) nil_chk(request)) filterWithWithOrgJunitRunnerDescription:desiredDescription];
-    result = [((OrgJunitRunnerJUnitCore *) nil_chk(junitCore)) runWithOrgJunitRunnerRequest:request];
-  }
-  else {
-    IOSClass *clazz = IOSClass_forName_(c);
-    result = [((OrgJunitRunnerJUnitCore *) nil_chk(junitCore)) runWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ clazz } count:1 type:IOSClass_class_()]];
-  }
-  return result;
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runInnerWithJavaUtilList_withBoolean_(id<JavaUtilList> resultList, jboolean hasError) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  jint bigTotal = 0;
-  jint failureTotal = 0;
-  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(resultList, create_CoTouchlabDopplTestingDopplJunitTestHelper_1_init());
-  for (CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer * __strong result in nil_chk(resultList)) {
-    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$", @"\n\n********** Result for ", ((CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *) nil_chk(result))->testClassName_, @" **********")];
-    if ([((OrgJunitRunnerResult *) nil_chk(result->result_)) wasSuccessful]) {
-      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"Success"];
-    }
-    else {
-      failureTotal += [result->result_ getFailureCount];
-      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I", @"Failures ", [result->result_ getFailureCount])];
-      id<JavaUtilList> failures = [result->result_ getFailures];
-      for (OrgJunitRunnerNotificationFailure * __strong failure in nil_chk(failures)) {
-        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[((OrgJunitRunnerNotificationFailure *) nil_chk(failure)) description]];
-        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"message: ", [failure getMessage])];
-        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"description: ", [((OrgJunitRunnerDescription *) nil_chk([failure getDescription])) description])];
-        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"trace: ", [failure getTrace])];
-      }
-    }
-    bigTotal += [result->result_ getRunCount];
-  }
-  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"Total: ", bigTotal)];
-  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I", @"Failures: ", failureTotal)];
-  return hasError ? 1 : 0;
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_(IOSObjectArray *classes) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, nil, nil);
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(classes, listener, nil);
-}
-
-jint CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener> dopplJunitListener) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_initialize();
-  id<JavaUtilList> classnameList = create_JavaUtilArrayList_init();
-  {
-    IOSObjectArray *a__ = classes;
-    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
-    IOSClass * const *e__ = b__ + a__->size_;
-    while (b__ < e__) {
-      IOSClass *cl = *b__++;
-      [classnameList addWithId:[((IOSClass *) nil_chk(cl)) getName]];
-    }
-  }
-  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_([classnameList toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[classnameList size] type:NSString_class_()]], listener, dopplJunitListener);
-}
-
-NSString *CoTouchlabDopplTestingDopplJunitTestHelper_replaceAllWithNSString_(CoTouchlabDopplTestingDopplJunitTestHelper *self, NSString *value) {
-  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(self->nameMappings_)) entrySet])) {
-    NSString *pattern = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
-    NSString *replacement = [entry_ getValue];
-    value = [((NSString *) nil_chk(value)) java_replaceAll:pattern withReplacement:replacement];
-  }
-  return value;
-}
-
-NSString *CoTouchlabDopplTestingDopplJunitTestHelper_getSortKeyWithIOSClass_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper *self, IOSClass *cls, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *sortOrder) {
-  NSString *className_ = [((IOSClass *) nil_chk(cls)) getName];
-  {
-    NSString *sortKey;
-    switch ([sortOrder ordinal]) {
-      case CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_Enum_ALPHABETICAL:
-      return CoTouchlabDopplTestingDopplJunitTestHelper_replaceAllWithNSString_(self, className_);
-      case CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_Enum_RANDOM:
-      sortKey = [((id<JavaUtilMap>) nil_chk(self->randomNames_)) getWithId:className_];
-      if (sortKey == nil) {
-        sortKey = JavaLangInteger_toStringWithInt_([((JavaUtilRandom *) nil_chk(self->random_)) nextInt]);
-        [self->randomNames_ putWithId:className_ withId:sortKey];
-      }
-      return sortKey;
-      default:
-      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"sortOrder");
-    }
-  }
-}
-
-id<JavaUtilSet> CoTouchlabDopplTestingDopplJunitTestHelper_getAllTestClasses(CoTouchlabDopplTestingDopplJunitTestHelper *self) {
-  int classCount = objc_getClassList(NULL, 0);
-  Class *classes = (Class *)malloc(classCount * sizeof(Class));
-  objc_getClassList(classes, classCount);
-  id<JavaUtilSet> result = AUTORELEASE([[JavaUtilHashSet alloc] init]);
-  for (int i = 0; i < classCount; i++) {
-    @try {
-      Class cls = classes[i];
-      if (IsNSObjectClass(cls)) {
-        IOSClass *javaClass = IOSClass_fromClass(cls);
-        if ([self isJUnitTestClassWithIOSClass:javaClass]) {
-          [result addWithId:javaClass];
-        }
-      }
-    }
-    @catch (NSException *e) {
-      // Ignore any exceptions thrown by class initialization.
-    }
-  }
-  free(classes);
-  return result;
-}
-
-NSString *CoTouchlabDopplTestingDopplJunitTestHelper_getPackageNameWithIOSClass_(CoTouchlabDopplTestingDopplJunitTestHelper *self, IOSClass *cls) {
-  JavaLangPackage *pkg = [((IOSClass *) nil_chk(cls)) getPackage];
-  return pkg != nil ? [pkg getName] : @"";
-}
-
-id<JavaUtilSet> CoTouchlabDopplTestingDopplJunitTestHelper_getTestClasses(CoTouchlabDopplTestingDopplJunitTestHelper *self) {
-  id<JavaUtilSet> allTestClasses = CoTouchlabDopplTestingDopplJunitTestHelper_getAllTestClasses(self);
-  id<JavaUtilSet> includedClasses = create_JavaUtilHashSet_init();
-  if ([((id<JavaUtilSet>) nil_chk(self->includePatterns_)) isEmpty]) {
-    includedClasses = allTestClasses;
-  }
-  else {
-    for (IOSClass * __strong testClass in nil_chk(allTestClasses)) {
-      for (NSString * __strong includePattern in self->includePatterns_) {
-        if (CoTouchlabDopplTestingDopplJunitTestHelper_matchesPatternWithIOSClass_withNSString_(self, testClass, includePattern)) {
-          [includedClasses addWithId:testClass];
-          break;
-        }
-      }
-    }
-  }
-  id<JavaUtilIterator> includedClassesIterator = [((id<JavaUtilSet>) nil_chk(includedClasses)) iterator];
-  while ([((id<JavaUtilIterator>) nil_chk(includedClassesIterator)) hasNext]) {
-    IOSClass *testClass = [includedClassesIterator next];
-    for (NSString * __strong excludePattern in nil_chk(self->excludePatterns_)) {
-      if (CoTouchlabDopplTestingDopplJunitTestHelper_matchesPatternWithIOSClass_withNSString_(self, testClass, excludePattern)) {
-        [includedClassesIterator remove];
-        break;
-      }
-    }
-  }
-  return includedClasses;
-}
-
-jboolean CoTouchlabDopplTestingDopplJunitTestHelper_matchesPatternWithIOSClass_withNSString_(CoTouchlabDopplTestingDopplJunitTestHelper *self, IOSClass *testClass, NSString *pattern) {
-  return [((NSString *) nil_chk([((IOSClass *) nil_chk(testClass)) getCanonicalName])) java_contains:pattern];
-}
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesWithJavaIoInputStream_(CoTouchlabDopplTestingDopplJunitTestHelper *self, JavaIoInputStream *stream) {
-  JavaUtilProperties *properties = create_JavaUtilProperties_init();
-  @try {
-    [properties load__WithJavaIoInputStream:stream];
-  }
-  @catch (JavaIoIOException *e) {
-    CoTouchlabDopplTestingDopplJunitTestHelper_onErrorWithJavaLangException_(self, e);
-  }
-  id<JavaUtilSet> propertyNames = [properties stringPropertyNames];
-  for (NSString * __strong key in nil_chk(propertyNames)) {
-    NSString *value = [properties getPropertyWithNSString:key];
-    @try {
-      if ([((NSString *) nil_chk(key)) isEqual:@"outputFormat"]) {
-        JreStrongAssign(&self->outputFormat_, CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_valueOfWithNSString_(value));
-      }
-      else if ([key isEqual:@"sortOrder"]) {
-        JreStrongAssign(&self->sortOrder_, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_valueOfWithNSString_(value));
-      }
-      else if ([((NSString *) nil_chk(value)) isEqual:[((CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *) nil_chk(JreLoadEnum(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion, INCLUDE))) name]]) {
-        [((id<JavaUtilSet>) nil_chk(self->includePatterns_)) addWithId:key];
-      }
-      else if ([value isEqual:[((CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *) nil_chk(JreLoadEnum(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion, EXCLUDE))) name]]) {
-        [((id<JavaUtilSet>) nil_chk(self->excludePatterns_)) addWithId:key];
-      }
-      else {
-        [((id<JavaUtilMap>) nil_chk(self->nameMappings_)) putWithId:key withId:value];
-      }
-    }
-    @catch (JavaLangIllegalArgumentException *e) {
-      CoTouchlabDopplTestingDopplJunitTestHelper_onErrorWithJavaLangException_(self, e);
-    }
-  }
-}
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesFromResourceWithNSString_(CoTouchlabDopplTestingDopplJunitTestHelper *self, NSString *resourcePath) {
-  @try {
-    JavaIoInputStream *stream = [((JavaLangClassLoader *) nil_chk(JavaLangClassLoader_getSystemClassLoader())) getResourceAsStreamWithNSString:resourcePath];
-    if (stream != nil) {
-      CoTouchlabDopplTestingDopplJunitTestHelper_loadPropertiesWithJavaIoInputStream_(self, stream);
-    }
-    else {
-      @throw create_JavaIoIOException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Resource not found: %s", [IOSObjectArray arrayWithObjects:(id[]){ resourcePath } count:1 type:NSObject_class_()]));
-    }
-  }
-  @catch (JavaLangException *e) {
-    CoTouchlabDopplTestingDopplJunitTestHelper_onErrorWithJavaLangException_(self, e);
-  }
-}
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_onErrorWithJavaLangException_(CoTouchlabDopplTestingDopplJunitTestHelper *self, JavaLangException *e) {
-  [((JavaLangException *) nil_chk(e)) printStackTraceWithJavaIoPrintStream:self->out_];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper)
-
-J2OBJC_INITIALIZED_DEFN(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat)
-
-CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values_[2];
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat
-
-+ (IOSObjectArray *)values {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values();
-}
-
-+ (CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *)valueOfWithNSString:(NSString *)name {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "JUNIT", "LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "GTM_UNIT_TESTING", "LCoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat, JUNIT), &JreEnum(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat, GTM_UNIT_TESTING), "LCoTouchlabDopplTestingDopplJunitTestHelper;", "Ljava/lang/Enum<Lco/touchlab/doppl/testing/DopplJunitTestHelper$OutputFormat;>;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat = { "OutputFormat", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat;
-}
-
-+ (void)initialize {
-  if (self == [CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 2 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"JUNIT", @"GTM_UNIT_TESTING",
-    };
-    for (jint i = 0; i < 2; i++) {
-      (CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat)
-  }
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_initWithNSString_withInt_(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values() {
-  CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_initialize();
-  return [IOSObjectArray arrayWithObjects:CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values_ count:2 type:CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_class_()];
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_valueOfWithNSString_(NSString *name) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_initialize();
-  for (int i = 0; i < 2; i++) {
-    CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *e = CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_fromOrdinal(NSUInteger ordinal) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_initialize();
-  if (ordinal >= 2) {
-    return nil;
-  }
-  return CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper_OutputFormat)
-
-J2OBJC_INITIALIZED_DEFN(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder)
-
-CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values_[2];
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder
-
-+ (IOSObjectArray *)values {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values();
-}
-
-+ (CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)valueOfWithNSString:(NSString *)name {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "ALPHABETICAL", "LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "RANDOM", "LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder, ALPHABETICAL), &JreEnum(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder, RANDOM), "LCoTouchlabDopplTestingDopplJunitTestHelper;", "Ljava/lang/Enum<Lco/touchlab/doppl/testing/DopplJunitTestHelper$SortOrder;>;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder = { "SortOrder", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;
-}
-
-+ (void)initialize {
-  if (self == [CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 2 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"ALPHABETICAL", @"RANDOM",
-    };
-    for (jint i = 0; i < 2; i++) {
-      (CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder)
-  }
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_initWithNSString_withInt_(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values() {
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_initialize();
-  return [IOSObjectArray arrayWithObjects:CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values_ count:2 type:CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_class_()];
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_valueOfWithNSString_(NSString *name) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_initialize();
-  for (int i = 0; i < 2; i++) {
-    CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *e = CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_fromOrdinal(NSUInteger ordinal) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_initialize();
-  if (ordinal >= 2) {
-    return nil;
-  }
-  return CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder)
-
-J2OBJC_INITIALIZED_DEFN(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion)
-
-CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values_[2];
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion
-
-+ (IOSObjectArray *)values {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values();
-}
-
-+ (CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *)valueOfWithNSString:(NSString *)name {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LCoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LCoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion;", 0x9, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(values);
-  methods[1].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "INCLUDE", "LCoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
-    { "EXCLUDE", "LCoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
-  };
-  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion, INCLUDE), &JreEnum(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion, EXCLUDE), "LCoTouchlabDopplTestingDopplJunitTestHelper;", "Ljava/lang/Enum<Lco/touchlab/doppl/testing/DopplJunitTestHelper$TestInclusion;>;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion = { "TestInclusion", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion;
-}
-
-+ (void)initialize {
-  if (self == [CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 2 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    id names[] = {
-      @"INCLUDE", @"EXCLUDE",
-    };
-    for (jint i = 0; i < 2; i++) {
-      (CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-      CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_initWithNSString_withInt_(e, names[i], i);
-    }
-    J2OBJC_SET_INITIALIZED(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion)
-  }
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_initWithNSString_withInt_(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *self, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-}
-
-IOSObjectArray *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values() {
-  CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_initialize();
-  return [IOSObjectArray arrayWithObjects:CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values_ count:2 type:CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_class_()];
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_valueOfWithNSString_(NSString *name) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_initialize();
-  for (int i = 0; i < 2; i++) {
-    CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *e = CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_fromOrdinal(NSUInteger ordinal) {
-  CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_initialize();
-  if (ordinal >= 2) {
-    return nil;
-  }
-  return CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper_TestInclusion)
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(startRunWithNSString:);
-  methods[1].selector = @selector(endRunWithNSString:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "startRun", "LNSString;", "endRun", "LCoTouchlabDopplTestingDopplJunitTestHelper;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener = { "DopplJunitListener", "co.touchlab.doppl.testing", ptrTable, methods, NULL, 7, 0x609, 2, 0, 3, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener)
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  CoTouchlabDopplTestingDopplJunitTestHelper_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (jint)compareWithId:(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *)a
-               withId:(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *)b {
-  if ([((OrgJunitRunnerResult *) nil_chk(((CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *) nil_chk(a))->result_)) wasSuccessful] == [((CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *) nil_chk(b))->result_ wasSuccessful]) {
-    return [((NSString *) nil_chk(a->testClassName_)) compareToWithId:b->testClassName_];
-  }
-  else {
-    return [a->result_ wasSuccessful] ? -1 : 1;
-  }
-}
-
-- (id<JavaUtilComparator>)reversed {
-  return JavaUtilComparator_reversed(self);
-}
-
-- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
-  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
-                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
-  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
-}
-
-- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
-  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
-  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
-  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
-  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(compareWithId:withId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "compare", "LCoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer;LCoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer;", "LCoTouchlabDopplTestingDopplJunitTestHelper;", "runInnerWithJavaUtilList:withBoolean:", "Ljava/lang/Object;Ljava/util/Comparator<Lco/touchlab/doppl/testing/DopplJunitTestHelper$ResultContainer;>;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_1 = { "", "co.touchlab.doppl.testing", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_1;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_1_init(CoTouchlabDopplTestingDopplJunitTestHelper_1 *self) {
-  NSObject_init(self);
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_1 *new_CoTouchlabDopplTestingDopplJunitTestHelper_1_init() {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_1, init)
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_1 *create_CoTouchlabDopplTestingDopplJunitTestHelper_1_init() {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_1, init)
-}
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer
-
-- (instancetype)initWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result
-                                withNSString:(NSString *)testClassName {
-  CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(self, result, testClassName);
-  return self;
-}
-
-- (void)dealloc {
-  RELEASE_(result_);
-  RELEASE_(testClassName_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithOrgJunitRunnerResult:withNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "result_", "LOrgJunitRunnerResult;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-    { "testClassName_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LOrgJunitRunnerResult;LNSString;", "LCoTouchlabDopplTestingDopplJunitTestHelper;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer = { "ResultContainer", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x8, 1, 2, 1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *self, OrgJunitRunnerResult *result, NSString *testClassName) {
-  NSObject_init(self);
-  JreStrongAssign(&self->result_, result);
-  JreStrongAssign(&self->testClassName_, testClassName);
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *new_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer, initWithOrgJunitRunnerResult_withNSString_, result, testClassName)
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer *create_CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer, initWithOrgJunitRunnerResult_withNSString_, result, testClassName)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper_ResultContainer)
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_2
-
-- (instancetype)initWithCoTouchlabDopplTestingDopplJunitTestHelper:(CoTouchlabDopplTestingDopplJunitTestHelper *)outer$
-          withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *)capture$0 {
-  CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(self, outer$, capture$0);
-  return self;
-}
-
-- (jint)compareWithId:(IOSClass *)class1
-               withId:(IOSClass *)class2 {
-  NSString *name1 = CoTouchlabDopplTestingDopplJunitTestHelper_getSortKeyWithIOSClass_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(this$0_, class1, val$sortOrder_);
-  NSString *name2 = CoTouchlabDopplTestingDopplJunitTestHelper_getSortKeyWithIOSClass_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(this$0_, class2, val$sortOrder_);
-  return [((NSString *) nil_chk(name1)) compareToWithId:name2];
-}
-
-- (id<JavaUtilComparator>)reversed {
-  return JavaUtilComparator_reversed(self);
-}
-
-- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
-  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
-                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
-  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
-}
-
-- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
-  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
-  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
-  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
-}
-
-- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
-  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(val$sortOrder_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithCoTouchlabDopplTestingDopplJunitTestHelper:withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:);
-  methods[1].selector = @selector(compareWithId:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LCoTouchlabDopplTestingDopplJunitTestHelper;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$sortOrder_", "LCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "compare", "LIOSClass;LIOSClass;", "LCoTouchlabDopplTestingDopplJunitTestHelper;", "sortClassesWithIOSClassArray:withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder:", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Class;>;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_2 = { "", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_2;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper_2 *self, CoTouchlabDopplTestingDopplJunitTestHelper *outer$, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JreStrongAssign(&self->val$sortOrder_, capture$0);
-  NSObject_init(self);
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_2 *new_CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *capture$0) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_2, initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_, outer$, capture$0)
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_2 *create_CoTouchlabDopplTestingDopplJunitTestHelper_2_initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$, CoTouchlabDopplTestingDopplJunitTestHelper_SortOrder *capture$0) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_2, initWithCoTouchlabDopplTestingDopplJunitTestHelper_withCoTouchlabDopplTestingDopplJunitTestHelper_SortOrder_, outer$, capture$0)
-}
-
-@implementation CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener
-
-- (instancetype)initWithCoTouchlabDopplTestingDopplJunitTestHelper:(CoTouchlabDopplTestingDopplJunitTestHelper *)outer$ {
-  CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(self, outer$);
-  return self;
-}
-
-- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
-  [((JavaIoPrintStream *) nil_chk(this$0_->out_)) printfWithNSString:@"Executed %d tests, with %d failures (%d unexpected)\n" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(numTests_), JavaLangInteger_valueOfWithInt_(numFailures_), JavaLangInteger_valueOfWithInt_(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_numUnexpected) } count:3 type:NSObject_class_()]];
-}
-
-- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
-  numTests_++;
-  JreStrongAssign(&testFailure_, nil);
-  testStartTime_ = JavaLangSystem_currentTimeMillis();
-  [((JavaIoPrintStream *) nil_chk(this$0_->out_)) printfWithNSString:@"Test Case '-[%s]' started.\n" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_parseDescriptionWithOrgJunitRunnerDescription_(self, description_) } count:1 type:NSObject_class_()]];
-}
-
-- (void)testFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
-  jdouble testEndTime = JavaLangSystem_currentTimeMillis();
-  jdouble elapsedSeconds = 0.001 * (testEndTime - testStartTime_);
-  NSString *statusMessage = @"passed";
-  if (testFailure_ != nil) {
-    statusMessage = @"failed";
-    [((JavaIoPrintStream *) nil_chk(this$0_->out_)) printWithNSString:[testFailure_ getTrace]];
-  }
-  [((JavaIoPrintStream *) nil_chk(this$0_->out_)) printfWithNSString:@"Test Case '-[%s]' %s (%.3f seconds).\n\n" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_parseDescriptionWithOrgJunitRunnerDescription_(self, description_), statusMessage, JavaLangDouble_valueOfWithDouble_(elapsedSeconds) } count:3 type:NSObject_class_()]];
-}
-
-- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure {
-  JreStrongAssign(&testFailure_, failure);
-  numFailures_++;
-}
-
-- (NSString *)parseDescriptionWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
-  return CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_parseDescriptionWithOrgJunitRunnerDescription_(self, description_);
-}
-
-- (void)__javaClone:(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *)original {
-  [super __javaClone:original];
-  [this$0_ release];
-}
-
-- (void)dealloc {
-  RELEASE_(testFailure_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, 2, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, 2, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 8, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithCoTouchlabDopplTestingDopplJunitTestHelper:);
-  methods[1].selector = @selector(testRunFinishedWithOrgJunitRunnerResult:);
-  methods[2].selector = @selector(testStartedWithOrgJunitRunnerDescription:);
-  methods[3].selector = @selector(testFinishedWithOrgJunitRunnerDescription:);
-  methods[4].selector = @selector(testFailureWithOrgJunitRunnerNotificationFailure:);
-  methods[5].selector = @selector(parseDescriptionWithOrgJunitRunnerDescription:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LCoTouchlabDopplTestingDopplJunitTestHelper;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "numTests_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "numFailures_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "numUnexpected", "I", .constantValue.asInt = CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_numUnexpected, 0x12, 9, -1, -1, -1 },
-    { "testFailure_", "LOrgJunitRunnerNotificationFailure;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "testStartTime_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "testRunFinished", "LOrgJunitRunnerResult;", "LJavaLangException;", "testStarted", "LOrgJunitRunnerDescription;", "testFinished", "testFailure", "LOrgJunitRunnerNotificationFailure;", "parseDescription", "numUnexpected", "LCoTouchlabDopplTestingDopplJunitTestHelper;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener = { "GtmUnitTestingTextListener", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x2, 6, 6, 10, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *self, CoTouchlabDopplTestingDopplJunitTestHelper *outer$) {
-  self->this$0_ = outer$;
-  OrgJunitRunnerNotificationRunListener_init(self);
-  self->numTests_ = 0;
-  self->numFailures_ = 0;
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *new_CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener, initWithCoTouchlabDopplTestingDopplJunitTestHelper_, outer$)
-}
-
-CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *create_CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_initWithCoTouchlabDopplTestingDopplJunitTestHelper_(CoTouchlabDopplTestingDopplJunitTestHelper *outer$) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener, initWithCoTouchlabDopplTestingDopplJunitTestHelper_, outer$)
-}
-
-NSString *CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener_parseDescriptionWithOrgJunitRunnerDescription_(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener *self, OrgJunitRunnerDescription *description_) {
-  NSString *displayName = [((OrgJunitRunnerDescription *) nil_chk(description_)) getDisplayName];
-  jint p1 = [((NSString *) nil_chk(displayName)) java_indexOfString:@"("];
-  jint p2 = [displayName java_indexOfString:@")"];
-  if (p1 < 0 || p2 < 0 || p2 <= p1) {
-    return displayName;
-  }
-  NSString *methodName = [displayName java_substring:0 endIndex:p1];
-  NSString *className_ = [displayName java_substring:p1 + 1 endIndex:p2];
-  return JreStrcat("$C$", CoTouchlabDopplTestingDopplJunitTestHelper_replaceAllWithNSString_(self->this$0_, className_), ' ', methodName);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplJunitTestHelper_GtmUnitTestingTextListener)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.h
deleted file mode 100644
index 5135e798a..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.h
+++ /dev/null
@@ -1,44 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner
-
-#if !defined (CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner || defined(INCLUDE_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner))
-#define CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_
-
-#define RESTRICT_OrgJunitRunnersParameterized 1
-#define INCLUDE_OrgJunitRunnersParameterized 1
-#include "org/junit/runners/Parameterized.h"
-
-@class IOSClass;
-
-@interface CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner : OrgJunitRunnersParameterized
-
-#pragma mark Public
-
-- (instancetype)initWithIOSClass:(IOSClass *)klass;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner *self, IOSClass *klass);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner *new_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(IOSClass *klass) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner *create_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(IOSClass *klass);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.m
deleted file mode 100644
index 44d29f863..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.m
+++ /dev/null
@@ -1,55 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppApplication.h"
-#include "CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner.h"
-#include "CoTouchlabDopplTestingDopplRuntimeEnvironment.h"
-#include "CoTouchlabDopplTestingTestingContext.h"
-#include "CoTouchlabDopplUtilsPlatformUtils.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "java/io/File.h"
-#include "java/lang/System.h"
-#include "org/junit/runners/Parameterized.h"
-
-@implementation CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner
-
-- (instancetype)initWithIOSClass:(IOSClass *)klass {
-  CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(self, klass);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithIOSClass:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LIOSClass;", "LNSException;", "(Ljava/lang/Class<*>;)V" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner = { "DopplParameterizedRobolectricTestRunner", "co.touchlab.doppl.testing", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner *self, IOSClass *klass) {
-  OrgJunitRunnersParameterized_initWithIOSClass_(self, klass);
-  if (CoTouchlabDopplUtilsPlatformUtils_isJ2objc()) {
-    JavaIoFile *rootDir = create_JavaIoFile_initWithNSString_(JreStrcat("$J", @"/Users/kgalligan/temp/test_", JavaLangSystem_currentTimeMillis()));
-    [rootDir mkdirs];
-    JreStrongAssignAndConsume(JreLoadStaticRef(CoTouchlabDopplTestingDopplRuntimeEnvironment, application), new_CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(rootDir));
-  }
-}
-
-CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner *new_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(IOSClass *klass) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner, initWithIOSClass_, klass)
-}
-
-CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner *create_CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner_initWithIOSClass_(IOSClass *klass) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner, initWithIOSClass_, klass)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplParameterizedRobolectricTestRunner)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRobolectricTestRunner.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRobolectricTestRunner.h
deleted file mode 100644
index 64ec56133..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRobolectricTestRunner.h
+++ /dev/null
@@ -1,64 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplRobolectricTestRunner")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplRobolectricTestRunner
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplRobolectricTestRunner 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplRobolectricTestRunner 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplRobolectricTestRunner
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (CoTouchlabDopplTestingDopplRobolectricTestRunner_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplRobolectricTestRunner || defined(INCLUDE_CoTouchlabDopplTestingDopplRobolectricTestRunner))
-#define CoTouchlabDopplTestingDopplRobolectricTestRunner_
-
-#define RESTRICT_OrgJunitRunnerRunner 1
-#define INCLUDE_OrgJunitRunnerRunner 1
-#include "org/junit/runner/Runner.h"
-
-@class IOSClass;
-@class OrgJunitRunnerDescription;
-@class OrgJunitRunnerNotificationRunNotifier;
-
-@interface CoTouchlabDopplTestingDopplRobolectricTestRunner : OrgJunitRunnerRunner
-
-#pragma mark Public
-
-- (instancetype)initWithIOSClass:(IOSClass *)testClass;
-
-- (OrgJunitRunnerDescription *)getDescription;
-
-+ (OrgJunitRunnerRunner *)loadPlatformSpecificRunnerWithIOSClass:(IOSClass *)testClass
-                                                    withNSString:(NSString *)className_;
-
-- (void)runWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplRobolectricTestRunner)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(CoTouchlabDopplTestingDopplRobolectricTestRunner *self, IOSClass *testClass);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplRobolectricTestRunner *new_CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(IOSClass *testClass) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplRobolectricTestRunner *create_CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(IOSClass *testClass);
-
-FOUNDATION_EXPORT OrgJunitRunnerRunner *CoTouchlabDopplTestingDopplRobolectricTestRunner_loadPlatformSpecificRunnerWithIOSClass_withNSString_(IOSClass *testClass, NSString *className_);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplRobolectricTestRunner)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplRobolectricTestRunner")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRobolectricTestRunner.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRobolectricTestRunner.m
deleted file mode 100644
index e854ad304..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRobolectricTestRunner.m
+++ /dev/null
@@ -1,110 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingDopplContextTestRunner.h"
-#include "CoTouchlabDopplTestingDopplRobolectricTestRunner.h"
-#include "CoTouchlabDopplUtilsPlatformUtils.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Exception.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/reflect/Constructor.h"
-#include "org/junit/runner/Description.h"
-#include "org/junit/runner/Runner.h"
-#include "org/junit/runner/notification/RunNotifier.h"
-#include "org/junit/runners/BlockJUnit4ClassRunner.h"
-
-@interface CoTouchlabDopplTestingDopplRobolectricTestRunner () {
- @public
-  OrgJunitRunnerRunner *delegateRunner_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingDopplRobolectricTestRunner, delegateRunner_, OrgJunitRunnerRunner *)
-
-@implementation CoTouchlabDopplTestingDopplRobolectricTestRunner
-
-- (instancetype)initWithIOSClass:(IOSClass *)testClass {
-  CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(self, testClass);
-  return self;
-}
-
-+ (OrgJunitRunnerRunner *)loadPlatformSpecificRunnerWithIOSClass:(IOSClass *)testClass
-                                                    withNSString:(NSString *)className_ {
-  return CoTouchlabDopplTestingDopplRobolectricTestRunner_loadPlatformSpecificRunnerWithIOSClass_withNSString_(testClass, className_);
-}
-
-- (OrgJunitRunnerDescription *)getDescription {
-  return [((OrgJunitRunnerRunner *) nil_chk(delegateRunner_)) getDescription];
-}
-
-- (void)runWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier {
-  [((OrgJunitRunnerRunner *) nil_chk(delegateRunner_)) runWithOrgJunitRunnerNotificationRunNotifier:notifier];
-}
-
-- (void)dealloc {
-  RELEASE_(delegateRunner_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
-    { NULL, "LOrgJunitRunnerRunner;", 0x9, 3, 4, 1, 5, -1, -1 },
-    { NULL, "LOrgJunitRunnerDescription;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithIOSClass:);
-  methods[1].selector = @selector(loadPlatformSpecificRunnerWithIOSClass:withNSString:);
-  methods[2].selector = @selector(getDescription);
-  methods[3].selector = @selector(runWithOrgJunitRunnerNotificationRunNotifier:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "delegateRunner_", "LOrgJunitRunnerRunner;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LIOSClass;", "LOrgJunitRunnersModelInitializationError;", "(Ljava/lang/Class<*>;)V", "loadPlatformSpecificRunner", "LIOSClass;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;)Lorg/junit/runner/Runner;", "run", "LOrgJunitRunnerNotificationRunNotifier;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplRobolectricTestRunner = { "DopplRobolectricTestRunner", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplRobolectricTestRunner;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(CoTouchlabDopplTestingDopplRobolectricTestRunner *self, IOSClass *testClass) {
-  OrgJunitRunnerRunner_init(self);
-  JreStrongAssign(&self->delegateRunner_, CoTouchlabDopplTestingDopplRobolectricTestRunner_loadPlatformSpecificRunnerWithIOSClass_withNSString_(testClass, @"org.robolectric.RobolectricTestRunner"));
-}
-
-CoTouchlabDopplTestingDopplRobolectricTestRunner *new_CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(IOSClass *testClass) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplRobolectricTestRunner, initWithIOSClass_, testClass)
-}
-
-CoTouchlabDopplTestingDopplRobolectricTestRunner *create_CoTouchlabDopplTestingDopplRobolectricTestRunner_initWithIOSClass_(IOSClass *testClass) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplRobolectricTestRunner, initWithIOSClass_, testClass)
-}
-
-OrgJunitRunnerRunner *CoTouchlabDopplTestingDopplRobolectricTestRunner_loadPlatformSpecificRunnerWithIOSClass_withNSString_(IOSClass *testClass, NSString *className_) {
-  CoTouchlabDopplTestingDopplRobolectricTestRunner_initialize();
-  OrgJunitRunnerRunner *delegateRunner;
-  if (CoTouchlabDopplUtilsPlatformUtils_isJ2objc()) {
-    OrgJunitRunnersBlockJUnit4ClassRunner *blockJUnit4ClassRunner = create_CoTouchlabDopplTestingDopplContextTestRunner_initWithIOSClass_(testClass);
-    delegateRunner = blockJUnit4ClassRunner;
-  }
-  else {
-    @try {
-      IOSClass *runnerClass = IOSClass_forName_(className_);
-      JavaLangReflectConstructor *constructor = IOSObjectArray_Get(nil_chk([((IOSClass *) nil_chk(runnerClass)) getConstructors]), 0);
-      delegateRunner = (OrgJunitRunnerRunner *) cast_chk([((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ testClass } count:1 type:NSObject_class_()]], [OrgJunitRunnerRunner class]);
-    }
-    @catch (JavaLangException *e) {
-      @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(@"RobolectricTestRunner cannot be instantiated", e);
-    }
-  }
-  return delegateRunner;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplRobolectricTestRunner)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRuntimeEnvironment.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRuntimeEnvironment.h
deleted file mode 100644
index 622af2e82..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRuntimeEnvironment.h
+++ /dev/null
@@ -1,54 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplRuntimeEnvironment")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplRuntimeEnvironment
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplRuntimeEnvironment 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplRuntimeEnvironment 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplRuntimeEnvironment
-
-#if !defined (CoTouchlabDopplTestingDopplRuntimeEnvironment_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplRuntimeEnvironment || defined(INCLUDE_CoTouchlabDopplTestingDopplRuntimeEnvironment))
-#define CoTouchlabDopplTestingDopplRuntimeEnvironment_
-
-@class AndroidAppApplication;
-
-@interface CoTouchlabDopplTestingDopplRuntimeEnvironment : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (AndroidAppApplication *)getApplication;
-
-+ (void)loadAndroid;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplRuntimeEnvironment)
-
-inline AndroidAppApplication *CoTouchlabDopplTestingDopplRuntimeEnvironment_get_application();
-inline AndroidAppApplication *CoTouchlabDopplTestingDopplRuntimeEnvironment_set_application(AndroidAppApplication *value);
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT AndroidAppApplication *CoTouchlabDopplTestingDopplRuntimeEnvironment_application;
-J2OBJC_STATIC_FIELD_OBJ(CoTouchlabDopplTestingDopplRuntimeEnvironment, application, AndroidAppApplication *)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplRuntimeEnvironment_init(CoTouchlabDopplTestingDopplRuntimeEnvironment *self);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplRuntimeEnvironment *new_CoTouchlabDopplTestingDopplRuntimeEnvironment_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingDopplRuntimeEnvironment *create_CoTouchlabDopplTestingDopplRuntimeEnvironment_init();
-
-FOUNDATION_EXPORT AndroidAppApplication *CoTouchlabDopplTestingDopplRuntimeEnvironment_getApplication();
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingDopplRuntimeEnvironment_loadAndroid();
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplRuntimeEnvironment)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplRuntimeEnvironment")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRuntimeEnvironment.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRuntimeEnvironment.m
deleted file mode 100644
index bb8a7731a..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplRuntimeEnvironment.m
+++ /dev/null
@@ -1,95 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidAppApplication.h"
-#include "CoTouchlabDopplTestingDopplRuntimeEnvironment.h"
-#include "CoTouchlabDopplUtilsPlatformUtils.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Exception.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/RuntimeException.h"
-#include "java/lang/reflect/Field.h"
-
-AndroidAppApplication *CoTouchlabDopplTestingDopplRuntimeEnvironment_application;
-
-@implementation CoTouchlabDopplTestingDopplRuntimeEnvironment
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  CoTouchlabDopplTestingDopplRuntimeEnvironment_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (AndroidAppApplication *)getApplication {
-  return CoTouchlabDopplTestingDopplRuntimeEnvironment_getApplication();
-}
-
-+ (void)loadAndroid {
-  CoTouchlabDopplTestingDopplRuntimeEnvironment_loadAndroid();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LAndroidAppApplication;", 0x29, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getApplication);
-  methods[2].selector = @selector(loadAndroid);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "application", "LAndroidAppApplication;", .constantValue.asLong = 0, 0x9, -1, 0, -1, -1 },
-  };
-  static const void *ptrTable[] = { &CoTouchlabDopplTestingDopplRuntimeEnvironment_application };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplRuntimeEnvironment = { "DopplRuntimeEnvironment", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingDopplRuntimeEnvironment;
-}
-
-@end
-
-void CoTouchlabDopplTestingDopplRuntimeEnvironment_init(CoTouchlabDopplTestingDopplRuntimeEnvironment *self) {
-  NSObject_init(self);
-}
-
-CoTouchlabDopplTestingDopplRuntimeEnvironment *new_CoTouchlabDopplTestingDopplRuntimeEnvironment_init() {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingDopplRuntimeEnvironment, init)
-}
-
-CoTouchlabDopplTestingDopplRuntimeEnvironment *create_CoTouchlabDopplTestingDopplRuntimeEnvironment_init() {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingDopplRuntimeEnvironment, init)
-}
-
-AndroidAppApplication *CoTouchlabDopplTestingDopplRuntimeEnvironment_getApplication() {
-  CoTouchlabDopplTestingDopplRuntimeEnvironment_initialize();
-  @synchronized(CoTouchlabDopplTestingDopplRuntimeEnvironment_class_()) {
-    if (CoTouchlabDopplTestingDopplRuntimeEnvironment_application == nil) {
-      if (CoTouchlabDopplUtilsPlatformUtils_isJ2objc()) {
-        @throw create_JavaLangIllegalStateException_initWithNSString_(@"Context not set up. Use @RunWith(DopplContextTestRunner), or set up on your own.");
-      }
-      else {
-        CoTouchlabDopplTestingDopplRuntimeEnvironment_loadAndroid();
-      }
-    }
-    return CoTouchlabDopplTestingDopplRuntimeEnvironment_application;
-  }
-}
-
-void CoTouchlabDopplTestingDopplRuntimeEnvironment_loadAndroid() {
-  CoTouchlabDopplTestingDopplRuntimeEnvironment_initialize();
-  @try {
-    IOSClass *robo = IOSClass_forName_(@"org.robolectric.RuntimeEnvironment");
-    JavaLangReflectField *application = [((IOSClass *) nil_chk(robo)) getDeclaredField:@"application"];
-    JreStrongAssign(&CoTouchlabDopplTestingDopplRuntimeEnvironment_application, (AndroidAppApplication *) cast_chk([((JavaLangReflectField *) nil_chk(application)) getWithId:nil], [AndroidAppApplication class]));
-  }
-  @catch (JavaLangException *e) {
-    @throw create_JavaLangRuntimeException_initWithNSException_(e);
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplRuntimeEnvironment)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplTest.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplTest.h
deleted file mode 100644
index e4f2edb66..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplTest.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplTest")
-#ifdef RESTRICT_CoTouchlabDopplTestingDopplTest
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplTest 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingDopplTest 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingDopplTest
-
-#if !defined (CoTouchlabDopplTestingDopplTest_) && (INCLUDE_ALL_CoTouchlabDopplTestingDopplTest || defined(INCLUDE_CoTouchlabDopplTestingDopplTest))
-#define CoTouchlabDopplTestingDopplTest_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol CoTouchlabDopplTestingDopplTest < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingDopplTest)
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingDopplTest)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingDopplTest")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplTest.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplTest.m
deleted file mode 100644
index 246637b99..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingDopplTest.m
+++ /dev/null
@@ -1,33 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingDopplTest.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface CoTouchlabDopplTestingDopplTest : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *CoTouchlabDopplTestingDopplTest__Annotations$0();
-
-@implementation CoTouchlabDopplTestingDopplTest
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&CoTouchlabDopplTestingDopplTest__Annotations$0 };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingDopplTest = { "DopplTest", "co.touchlab.doppl.testing", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_CoTouchlabDopplTestingDopplTest;
-}
-
-@end
-
-IOSObjectArray *CoTouchlabDopplTestingDopplTest__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingDopplTest)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingElementTreeDebug.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingElementTreeDebug.h
deleted file mode 100644
index 8990b1cb5..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingElementTreeDebug.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingElementTreeDebug")
-#ifdef RESTRICT_CoTouchlabDopplTestingElementTreeDebug
-#define INCLUDE_ALL_CoTouchlabDopplTestingElementTreeDebug 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingElementTreeDebug 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingElementTreeDebug
-
-#if !defined (CoTouchlabDopplTestingElementTreeDebug_) && (INCLUDE_ALL_CoTouchlabDopplTestingElementTreeDebug || defined(INCLUDE_CoTouchlabDopplTestingElementTreeDebug))
-#define CoTouchlabDopplTestingElementTreeDebug_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol CoTouchlabDopplTestingElementTreeDebug < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingElementTreeDebug)
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingElementTreeDebug)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingElementTreeDebug")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingElementTreeDebug.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingElementTreeDebug.m
deleted file mode 100644
index dbd208c5f..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingElementTreeDebug.m
+++ /dev/null
@@ -1,33 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingElementTreeDebug.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface CoTouchlabDopplTestingElementTreeDebug : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *CoTouchlabDopplTestingElementTreeDebug__Annotations$0();
-
-@implementation CoTouchlabDopplTestingElementTreeDebug
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&CoTouchlabDopplTestingElementTreeDebug__Annotations$0 };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingElementTreeDebug = { "ElementTreeDebug", "co.touchlab.doppl.testing", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_CoTouchlabDopplTestingElementTreeDebug;
-}
-
-@end
-
-IOSObjectArray *CoTouchlabDopplTestingElementTreeDebug__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingElementTreeDebug)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingMockGen.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingMockGen.h
deleted file mode 100644
index c5c8f3284..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingMockGen.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingMockGen")
-#ifdef RESTRICT_CoTouchlabDopplTestingMockGen
-#define INCLUDE_ALL_CoTouchlabDopplTestingMockGen 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingMockGen 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingMockGen
-
-#if !defined (CoTouchlabDopplTestingMockGen_) && (INCLUDE_ALL_CoTouchlabDopplTestingMockGen || defined(INCLUDE_CoTouchlabDopplTestingMockGen))
-#define CoTouchlabDopplTestingMockGen_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol CoTouchlabDopplTestingMockGen < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingMockGen)
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingMockGen)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingMockGen")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingMockGen.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingMockGen.m
deleted file mode 100644
index bb92c44ba..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingMockGen.m
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingMockGen.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface CoTouchlabDopplTestingMockGen : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *CoTouchlabDopplTestingMockGen__Annotations$0();
-
-@implementation CoTouchlabDopplTestingMockGen
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(classes);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&CoTouchlabDopplTestingMockGen__Annotations$0 };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingMockGen = { "MockGen", "co.touchlab.doppl.testing", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_CoTouchlabDopplTestingMockGen;
-}
-
-@end
-
-IOSObjectArray *CoTouchlabDopplTestingMockGen__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingMockGen)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingTestingContext.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingTestingContext.h
deleted file mode 100644
index c559491a0..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingTestingContext.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingTestingContext")
-#ifdef RESTRICT_CoTouchlabDopplTestingTestingContext
-#define INCLUDE_ALL_CoTouchlabDopplTestingTestingContext 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingTestingContext 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingTestingContext
-
-#if !defined (CoTouchlabDopplTestingTestingContext_) && (INCLUDE_ALL_CoTouchlabDopplTestingTestingContext || defined(INCLUDE_CoTouchlabDopplTestingTestingContext))
-#define CoTouchlabDopplTestingTestingContext_
-
-#define RESTRICT_AndroidContentIOSContext 1
-#define INCLUDE_AndroidContentIOSContext 1
-#include "AndroidContentIOSContext.h"
-
-@class JavaIoFile;
-
-@interface CoTouchlabDopplTestingTestingContext : AndroidContentIOSContext
-
-#pragma mark Public
-
-- (instancetype)initWithJavaIoFile:(JavaIoFile *)rootDir;
-
-- (JavaIoFile *)getRootDir;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingTestingContext)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(CoTouchlabDopplTestingTestingContext *self, JavaIoFile *rootDir);
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingTestingContext *new_CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(JavaIoFile *rootDir) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplTestingTestingContext *create_CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(JavaIoFile *rootDir);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingTestingContext)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingTestingContext")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingTestingContext.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingTestingContext.m
deleted file mode 100644
index cc8e5234f..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingTestingContext.m
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "AndroidContentIOSContext.h"
-#include "AndroidOsLooper.h"
-#include "CoTouchlabDopplTestingTestingContext.h"
-#include "J2ObjC_source.h"
-#include "java/io/File.h"
-
-@interface CoTouchlabDopplTestingTestingContext () {
- @public
-  JavaIoFile *rootDir_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(CoTouchlabDopplTestingTestingContext, rootDir_, JavaIoFile *)
-
-@implementation CoTouchlabDopplTestingTestingContext
-
-- (instancetype)initWithJavaIoFile:(JavaIoFile *)rootDir {
-  CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(self, rootDir);
-  return self;
-}
-
-- (JavaIoFile *)getRootDir {
-  [((JavaIoFile *) nil_chk(rootDir_)) mkdirs];
-  return rootDir_;
-}
-
-- (void)dealloc {
-  RELEASE_(rootDir_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LJavaIoFile;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithJavaIoFile:);
-  methods[1].selector = @selector(getRootDir);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "rootDir_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LJavaIoFile;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingTestingContext = { "TestingContext", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingTestingContext;
-}
-
-@end
-
-void CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(CoTouchlabDopplTestingTestingContext *self, JavaIoFile *rootDir) {
-  AndroidContentIOSContext_init(self);
-  JreStrongAssign(&self->rootDir_, rootDir);
-  if (AndroidOsLooper_getMainLooper() == nil) AndroidOsLooper_prepareMainLooper();
-}
-
-CoTouchlabDopplTestingTestingContext *new_CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(JavaIoFile *rootDir) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingTestingContext, initWithJavaIoFile_, rootDir)
-}
-
-CoTouchlabDopplTestingTestingContext *create_CoTouchlabDopplTestingTestingContext_initWithJavaIoFile_(JavaIoFile *rootDir) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingTestingContext, initWithJavaIoFile_, rootDir)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingTestingContext)
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingVisualJunitRunner.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingVisualJunitRunner.h
deleted file mode 100644
index bcd9287c5..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingVisualJunitRunner.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplTestingVisualJunitRunner")
-#ifdef RESTRICT_CoTouchlabDopplTestingVisualJunitRunner
-#define INCLUDE_ALL_CoTouchlabDopplTestingVisualJunitRunner 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplTestingVisualJunitRunner 1
-#endif
-#undef RESTRICT_CoTouchlabDopplTestingVisualJunitRunner
-
-#if !defined (CoTouchlabDopplTestingVisualJunitRunner_) && (INCLUDE_ALL_CoTouchlabDopplTestingVisualJunitRunner || defined(INCLUDE_CoTouchlabDopplTestingVisualJunitRunner))
-#define CoTouchlabDopplTestingVisualJunitRunner_
-
-@class IOSObjectArray;
-
-@interface CoTouchlabDopplTestingVisualJunitRunner : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)goRun;
-
-#pragma mark Protected
-
-- (IOSObjectArray *)testClasses;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingVisualJunitRunner)
-
-FOUNDATION_EXPORT void CoTouchlabDopplTestingVisualJunitRunner_init(CoTouchlabDopplTestingVisualJunitRunner *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplTestingVisualJunitRunner)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplTestingVisualJunitRunner")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingVisualJunitRunner.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingVisualJunitRunner.m
deleted file mode 100644
index 8eba55660..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplTestingVisualJunitRunner.m
+++ /dev/null
@@ -1,175 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplTestingVisualJunitRunner.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/io/PrintStream.h"
-#include "java/lang/System.h"
-#include "java/lang/Thread.h"
-#include "java/util/List.h"
-#include "org/junit/runner/Description.h"
-#include "org/junit/runner/JUnitCore.h"
-#include "org/junit/runner/Result.h"
-#include "org/junit/runner/notification/Failure.h"
-
-@interface CoTouchlabDopplTestingVisualJunitRunner ()
-
-- (void)runAllInBackground;
-
-- (OrgJunitRunnerResult *)runTestsByMyselfWithOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)junit;
-
-@end
-
-__attribute__((unused)) static void CoTouchlabDopplTestingVisualJunitRunner_runAllInBackground(CoTouchlabDopplTestingVisualJunitRunner *self);
-
-__attribute__((unused)) static OrgJunitRunnerResult *CoTouchlabDopplTestingVisualJunitRunner_runTestsByMyselfWithOrgJunitRunnerJUnitCore_(CoTouchlabDopplTestingVisualJunitRunner *self, OrgJunitRunnerJUnitCore *junit);
-
-@interface CoTouchlabDopplTestingVisualJunitRunner_1 : JavaLangThread {
- @public
-  CoTouchlabDopplTestingVisualJunitRunner *this$0_;
-}
-
-- (instancetype)initWithCoTouchlabDopplTestingVisualJunitRunner:(CoTouchlabDopplTestingVisualJunitRunner *)outer$;
-
-- (void)run;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplTestingVisualJunitRunner_1)
-
-__attribute__((unused)) static void CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(CoTouchlabDopplTestingVisualJunitRunner_1 *self, CoTouchlabDopplTestingVisualJunitRunner *outer$);
-
-__attribute__((unused)) static CoTouchlabDopplTestingVisualJunitRunner_1 *new_CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(CoTouchlabDopplTestingVisualJunitRunner *outer$) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static CoTouchlabDopplTestingVisualJunitRunner_1 *create_CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(CoTouchlabDopplTestingVisualJunitRunner *outer$);
-
-@implementation CoTouchlabDopplTestingVisualJunitRunner
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  CoTouchlabDopplTestingVisualJunitRunner_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)runAllInBackground {
-  CoTouchlabDopplTestingVisualJunitRunner_runAllInBackground(self);
-}
-
-- (OrgJunitRunnerResult *)runTestsByMyselfWithOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)junit {
-  return CoTouchlabDopplTestingVisualJunitRunner_runTestsByMyselfWithOrgJunitRunnerJUnitCore_(self, junit);
-}
-
-- (IOSObjectArray *)testClasses {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (void)goRun {
-  [create_CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(self) start];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgJunitRunnerResult;", 0x2, 0, 1, -1, -1, -1, -1 },
-    { NULL, "[LIOSClass;", 0x404, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(runAllInBackground);
-  methods[2].selector = @selector(runTestsByMyselfWithOrgJunitRunnerJUnitCore:);
-  methods[3].selector = @selector(testClasses);
-  methods[4].selector = @selector(goRun);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "runTestsByMyself", "LOrgJunitRunnerJUnitCore;" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingVisualJunitRunner = { "VisualJunitRunner", "co.touchlab.doppl.testing", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplTestingVisualJunitRunner;
-}
-
-@end
-
-void CoTouchlabDopplTestingVisualJunitRunner_init(CoTouchlabDopplTestingVisualJunitRunner *self) {
-  NSObject_init(self);
-}
-
-void CoTouchlabDopplTestingVisualJunitRunner_runAllInBackground(CoTouchlabDopplTestingVisualJunitRunner *self) {
-  OrgJunitRunnerJUnitCore *junit = create_OrgJunitRunnerJUnitCore_init();
-  OrgJunitRunnerResult *result = CoTouchlabDopplTestingVisualJunitRunner_runTestsByMyselfWithOrgJunitRunnerJUnitCore_(self, junit);
-  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Junit complete"];
-  if ([((OrgJunitRunnerResult *) nil_chk(result)) wasSuccessful]) {
-    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"Success"];
-  }
-  else {
-    id<JavaUtilList> failures = [result getFailures];
-    for (OrgJunitRunnerNotificationFailure * __strong failure in nil_chk(failures)) {
-      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[((OrgJunitRunnerNotificationFailure *) nil_chk(failure)) description]];
-      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"message: ", [failure getMessage])];
-      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"description: ", [((OrgJunitRunnerDescription *) nil_chk([failure getDescription])) description])];
-      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"trace: ", [failure getTrace])];
-    }
-    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I", @"Failures ", [result getFailureCount])];
-  }
-  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I", @"Total ", [result getRunCount])];
-}
-
-OrgJunitRunnerResult *CoTouchlabDopplTestingVisualJunitRunner_runTestsByMyselfWithOrgJunitRunnerJUnitCore_(CoTouchlabDopplTestingVisualJunitRunner *self, OrgJunitRunnerJUnitCore *junit) {
-  return [((OrgJunitRunnerJUnitCore *) nil_chk(junit)) runWithIOSClassArray:[self testClasses]];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplTestingVisualJunitRunner)
-
-@implementation CoTouchlabDopplTestingVisualJunitRunner_1
-
-- (instancetype)initWithCoTouchlabDopplTestingVisualJunitRunner:(CoTouchlabDopplTestingVisualJunitRunner *)outer$ {
-  CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(self, outer$);
-  return self;
-}
-
-- (void)run {
-  CoTouchlabDopplTestingVisualJunitRunner_runAllInBackground(this$0_);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithCoTouchlabDopplTestingVisualJunitRunner:);
-  methods[1].selector = @selector(run);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LCoTouchlabDopplTestingVisualJunitRunner;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LCoTouchlabDopplTestingVisualJunitRunner;", "goRun" };
-  static const J2ObjcClassInfo _CoTouchlabDopplTestingVisualJunitRunner_1 = { "", "co.touchlab.doppl.testing", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
-  return &_CoTouchlabDopplTestingVisualJunitRunner_1;
-}
-
-@end
-
-void CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(CoTouchlabDopplTestingVisualJunitRunner_1 *self, CoTouchlabDopplTestingVisualJunitRunner *outer$) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JavaLangThread_init(self);
-}
-
-CoTouchlabDopplTestingVisualJunitRunner_1 *new_CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(CoTouchlabDopplTestingVisualJunitRunner *outer$) {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplTestingVisualJunitRunner_1, initWithCoTouchlabDopplTestingVisualJunitRunner_, outer$)
-}
-
-CoTouchlabDopplTestingVisualJunitRunner_1 *create_CoTouchlabDopplTestingVisualJunitRunner_1_initWithCoTouchlabDopplTestingVisualJunitRunner_(CoTouchlabDopplTestingVisualJunitRunner *outer$) {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplTestingVisualJunitRunner_1, initWithCoTouchlabDopplTestingVisualJunitRunner_, outer$)
-}
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplUtilsPlatformUtils.h b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplUtilsPlatformUtils.h
deleted file mode 100644
index f9b215645..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplUtilsPlatformUtils.h
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_CoTouchlabDopplUtilsPlatformUtils")
-#ifdef RESTRICT_CoTouchlabDopplUtilsPlatformUtils
-#define INCLUDE_ALL_CoTouchlabDopplUtilsPlatformUtils 0
-#else
-#define INCLUDE_ALL_CoTouchlabDopplUtilsPlatformUtils 1
-#endif
-#undef RESTRICT_CoTouchlabDopplUtilsPlatformUtils
-
-#if !defined (CoTouchlabDopplUtilsPlatformUtils_) && (INCLUDE_ALL_CoTouchlabDopplUtilsPlatformUtils || defined(INCLUDE_CoTouchlabDopplUtilsPlatformUtils))
-#define CoTouchlabDopplUtilsPlatformUtils_
-
-@interface CoTouchlabDopplUtilsPlatformUtils : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-+ (jboolean)isJ2objc;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDopplUtilsPlatformUtils)
-
-FOUNDATION_EXPORT void CoTouchlabDopplUtilsPlatformUtils_init(CoTouchlabDopplUtilsPlatformUtils *self);
-
-FOUNDATION_EXPORT CoTouchlabDopplUtilsPlatformUtils *new_CoTouchlabDopplUtilsPlatformUtils_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT CoTouchlabDopplUtilsPlatformUtils *create_CoTouchlabDopplUtilsPlatformUtils_init();
-
-FOUNDATION_EXPORT jboolean CoTouchlabDopplUtilsPlatformUtils_isJ2objc();
-
-J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDopplUtilsPlatformUtils)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_CoTouchlabDopplUtilsPlatformUtils")
diff --git a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplUtilsPlatformUtils.m b/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplUtilsPlatformUtils.m
deleted file mode 100644
index 487ed78a0..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/CoTouchlabDopplUtilsPlatformUtils.m
+++ /dev/null
@@ -1,55 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "CoTouchlabDopplUtilsPlatformUtils.h"
-#include "J2ObjC_source.h"
-#include "java/lang/System.h"
-
-@implementation CoTouchlabDopplUtilsPlatformUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  CoTouchlabDopplUtilsPlatformUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jboolean)isJ2objc {
-  return CoTouchlabDopplUtilsPlatformUtils_isJ2objc();
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(isJ2objc);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _CoTouchlabDopplUtilsPlatformUtils = { "PlatformUtils", "co.touchlab.doppl.utils", NULL, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_CoTouchlabDopplUtilsPlatformUtils;
-}
-
-@end
-
-void CoTouchlabDopplUtilsPlatformUtils_init(CoTouchlabDopplUtilsPlatformUtils *self) {
-  NSObject_init(self);
-}
-
-CoTouchlabDopplUtilsPlatformUtils *new_CoTouchlabDopplUtilsPlatformUtils_init() {
-  J2OBJC_NEW_IMPL(CoTouchlabDopplUtilsPlatformUtils, init)
-}
-
-CoTouchlabDopplUtilsPlatformUtils *create_CoTouchlabDopplUtilsPlatformUtils_init() {
-  J2OBJC_CREATE_IMPL(CoTouchlabDopplUtilsPlatformUtils, init)
-}
-
-jboolean CoTouchlabDopplUtilsPlatformUtils_isJ2objc() {
-  CoTouchlabDopplUtilsPlatformUtils_initialize();
-  return [((NSString *) nil_chk(JavaLangSystem_getPropertyWithNSString_(@"java.vendor"))) java_contains:@"J2ObjC"];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabDopplUtilsPlatformUtils)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertArrayValueMatcher.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertArrayValueMatcher.h
deleted file mode 100644
index 52c3ebaef..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertArrayValueMatcher.h
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertArrayValueMatcher")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertArrayValueMatcher
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertArrayValueMatcher 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertArrayValueMatcher 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertArrayValueMatcher
-
-#if !defined (OrgSkyscreamerJsonassertArrayValueMatcher_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertArrayValueMatcher || defined(INCLUDE_OrgSkyscreamerJsonassertArrayValueMatcher))
-#define OrgSkyscreamerJsonassertArrayValueMatcher_
-
-#define RESTRICT_OrgSkyscreamerJsonassertLocationAwareValueMatcher 1
-#define INCLUDE_OrgSkyscreamerJsonassertLocationAwareValueMatcher 1
-#include "OrgSkyscreamerJsonassertLocationAwareValueMatcher.h"
-
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-@protocol OrgSkyscreamerJsonassertComparatorJSONComparator;
-
-@interface OrgSkyscreamerJsonassertArrayValueMatcher : NSObject < OrgSkyscreamerJsonassertLocationAwareValueMatcher >
-
-#pragma mark Public
-
-- (instancetype)initWithOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;
-
-- (instancetype)initWithOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator
-                                                                 withInt:(jint)index;
-
-- (instancetype)initWithOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator
-                                                                 withInt:(jint)from
-                                                                 withInt:(jint)to;
-
-- (jboolean)equalWithNSString:(NSString *)prefix
-                       withId:(id)actual
-                       withId:(id)expected
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (jboolean)equalWithId:(id)o1
-                 withId:(id)o2;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertArrayValueMatcher)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgSkyscreamerJsonassertArrayValueMatcher *self, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertArrayValueMatcher *new_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertArrayValueMatcher *create_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(OrgSkyscreamerJsonassertArrayValueMatcher *self, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint index);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertArrayValueMatcher *new_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint index) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertArrayValueMatcher *create_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint index);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(OrgSkyscreamerJsonassertArrayValueMatcher *self, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint from, jint to);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertArrayValueMatcher *new_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint from, jint to) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertArrayValueMatcher *create_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint from, jint to);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertArrayValueMatcher)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertArrayValueMatcher")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertArrayValueMatcher.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertArrayValueMatcher.m
deleted file mode 100644
index 25049437e..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertArrayValueMatcher.m
+++ /dev/null
@@ -1,155 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertArrayValueMatcher.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONComparator.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Math.h"
-#include "java/text/MessageFormat.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONException.h"
-
-@interface OrgSkyscreamerJsonassertArrayValueMatcher () {
- @public
-  id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator_;
-  jint from_;
-  jint to_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertArrayValueMatcher, comparator_, id<OrgSkyscreamerJsonassertComparatorJSONComparator>)
-
-@implementation OrgSkyscreamerJsonassertArrayValueMatcher
-
-- (instancetype)initWithOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
-  OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(self, comparator);
-  return self;
-}
-
-- (instancetype)initWithOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator
-                                                                 withInt:(jint)index {
-  OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(self, comparator, index);
-  return self;
-}
-
-- (instancetype)initWithOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator
-                                                                 withInt:(jint)from
-                                                                 withInt:(jint)to {
-  OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(self, comparator, from, to);
-  return self;
-}
-
-- (jboolean)equalWithId:(id)o1
-                 withId:(id)o2 {
-  return false;
-}
-
-- (jboolean)equalWithNSString:(NSString *)prefix
-                       withId:(id)actual
-                       withId:(id)expected
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  if (!([actual isKindOfClass:[OrgJsonJSONArray class]])) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"ArrayValueMatcher applied to non-array actual value");
-  }
-  @try {
-    OrgJsonJSONArray *actualArray = (OrgJsonJSONArray *) cast_chk(actual, [OrgJsonJSONArray class]);
-    OrgJsonJSONArray *expectedArray = [expected isKindOfClass:[OrgJsonJSONArray class]] ? (OrgJsonJSONArray *) cast_chk(expected, [OrgJsonJSONArray class]) : create_OrgJsonJSONArray_initWithId_([IOSObjectArray arrayWithObjects:(id[]){ expected } count:1 type:NSObject_class_()]);
-    jint first = JavaLangMath_maxWithInt_withInt_(0, from_);
-    jint last = JavaLangMath_minWithInt_withInt_([((OrgJsonJSONArray *) nil_chk(actualArray)) length] - 1, to_);
-    jint expectedLen = [expectedArray length];
-    for (jint i = first; i <= last; i++) {
-      NSString *elementPrefix = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0}[{1}]", [IOSObjectArray arrayWithObjects:(id[]){ prefix, JavaLangInteger_valueOfWithInt_(i) } count:2 type:NSObject_class_()]);
-      id actualElement = [actualArray getWithInt:i];
-      id expectedElement = [expectedArray getWithInt:(i - first) % expectedLen];
-      [((id<OrgSkyscreamerJsonassertComparatorJSONComparator>) nil_chk(comparator_)) compareValuesWithNSString:elementPrefix withId:expectedElement withId:actualElement withOrgSkyscreamerJsonassertJSONCompareResult:result];
-    }
-    return true;
-  }
-  @catch (OrgJsonJSONException *e) {
-    return false;
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(comparator_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 3, 4, -1, 5, -1, -1 },
-    { NULL, "Z", 0x1, 3, 6, -1, 7, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithOrgSkyscreamerJsonassertComparatorJSONComparator:);
-  methods[1].selector = @selector(initWithOrgSkyscreamerJsonassertComparatorJSONComparator:withInt:);
-  methods[2].selector = @selector(initWithOrgSkyscreamerJsonassertComparatorJSONComparator:withInt:withInt:);
-  methods[3].selector = @selector(equalWithId:withId:);
-  methods[4].selector = @selector(equalWithNSString:withId:withId:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "comparator_", "LOrgSkyscreamerJsonassertComparatorJSONComparator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "from_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "to_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LOrgSkyscreamerJsonassertComparatorJSONComparator;I", "LOrgSkyscreamerJsonassertComparatorJSONComparator;II", "equal", "LNSObject;LNSObject;", "(TT;TT;)Z", "LNSString;LNSObject;LNSObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "(Ljava/lang/String;TT;TT;Lorg/skyscreamer/jsonassert/JSONCompareResult;)Z", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/skyscreamer/jsonassert/LocationAwareValueMatcher<TT;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertArrayValueMatcher = { "ArrayValueMatcher", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, 8, -1 };
-  return &_OrgSkyscreamerJsonassertArrayValueMatcher;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgSkyscreamerJsonassertArrayValueMatcher *self, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(self, comparator, 0, JavaLangInteger_MAX_VALUE);
-}
-
-OrgSkyscreamerJsonassertArrayValueMatcher *new_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertArrayValueMatcher, initWithOrgSkyscreamerJsonassertComparatorJSONComparator_, comparator)
-}
-
-OrgSkyscreamerJsonassertArrayValueMatcher *create_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertArrayValueMatcher, initWithOrgSkyscreamerJsonassertComparatorJSONComparator_, comparator)
-}
-
-void OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(OrgSkyscreamerJsonassertArrayValueMatcher *self, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint index) {
-  OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(self, comparator, index, index);
-}
-
-OrgSkyscreamerJsonassertArrayValueMatcher *new_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint index) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertArrayValueMatcher, initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_, comparator, index)
-}
-
-OrgSkyscreamerJsonassertArrayValueMatcher *create_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint index) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertArrayValueMatcher, initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_, comparator, index)
-}
-
-void OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(OrgSkyscreamerJsonassertArrayValueMatcher *self, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint from, jint to) {
-  NSObject_init(self);
-  JreAssert((comparator != nil), (@"comparator null"));
-  JreAssert((from >= 0), (JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"from({0}) < 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(from) } count:1 type:NSObject_class_()])));
-  JreAssert((to >= from), (JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"to({0}) < from({1})", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(to), JavaLangInteger_valueOfWithInt_(from) } count:2 type:NSObject_class_()])));
-  JreStrongAssign(&self->comparator_, comparator);
-  self->from_ = from;
-  self->to_ = to;
-}
-
-OrgSkyscreamerJsonassertArrayValueMatcher *new_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint from, jint to) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertArrayValueMatcher, initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_, comparator, from, to)
-}
-
-OrgSkyscreamerJsonassertArrayValueMatcher *create_OrgSkyscreamerJsonassertArrayValueMatcher_initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_(id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator, jint from, jint to) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertArrayValueMatcher, initWithOrgSkyscreamerJsonassertComparatorJSONComparator_withInt_withInt_, comparator, from, to)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertArrayValueMatcher)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorAbstractComparator.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorAbstractComparator.h
deleted file mode 100644
index 67e7c35a7..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorAbstractComparator.h
+++ /dev/null
@@ -1,80 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorAbstractComparator")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertComparatorAbstractComparator
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorAbstractComparator 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorAbstractComparator 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertComparatorAbstractComparator
-
-#if !defined (OrgSkyscreamerJsonassertComparatorAbstractComparator_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorAbstractComparator || defined(INCLUDE_OrgSkyscreamerJsonassertComparatorAbstractComparator))
-#define OrgSkyscreamerJsonassertComparatorAbstractComparator_
-
-#define RESTRICT_OrgSkyscreamerJsonassertComparatorJSONComparator 1
-#define INCLUDE_OrgSkyscreamerJsonassertComparatorJSONComparator 1
-#include "OrgSkyscreamerJsonassertComparatorJSONComparator.h"
-
-@class OrgJsonJSONArray;
-@class OrgJsonJSONObject;
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-
-@interface OrgSkyscreamerJsonassertComparatorAbstractComparator : NSObject < OrgSkyscreamerJsonassertComparatorJSONComparator >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual;
-
-#pragma mark Protected
-
-- (void)checkJsonObjectKeysActualInExpectedWithNSString:(NSString *)prefix
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-          withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)checkJsonObjectKeysExpectedInActualWithNSString:(NSString *)prefix
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-          withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareJSONArrayOfJsonObjectsWithNSString:(NSString *)key
-                             withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                             withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-    withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareJSONArrayOfSimpleValuesWithNSString:(NSString *)key
-                              withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                              withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-     withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareJSONArrayWithStrictOrderWithNSString:(NSString *)key
-                               withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-      withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)recursivelyCompareJSONArrayWithNSString:(NSString *)key
-                           withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                           withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-  withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertComparatorAbstractComparator)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertComparatorAbstractComparator_init(OrgSkyscreamerJsonassertComparatorAbstractComparator *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertComparatorAbstractComparator)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorAbstractComparator")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorAbstractComparator.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorAbstractComparator.m
deleted file mode 100644
index 4926395be..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorAbstractComparator.m
+++ /dev/null
@@ -1,218 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorAbstractComparator.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONCompareUtil.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "java/lang/Integer.h"
-#include "java/util/HashSet.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONObject.h"
-
-#pragma clang diagnostic ignored "-Wprotocol"
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_(OrgSkyscreamerJsonassertComparatorAbstractComparator *self, OrgJsonJSONObject *expected, OrgJsonJSONObject *actual);
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_(OrgSkyscreamerJsonassertComparatorAbstractComparator *self, OrgJsonJSONArray *expected, OrgJsonJSONArray *actual);
-
-@implementation OrgSkyscreamerJsonassertComparatorAbstractComparator
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertComparatorAbstractComparator_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual {
-  return OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_(self, expected, actual);
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual {
-  return OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_(self, expected, actual);
-}
-
-- (void)checkJsonObjectKeysActualInExpectedWithNSString:(NSString *)prefix
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-          withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  id<JavaUtilSet> actualKeys = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getKeysWithOrgJsonJSONObject_(actual);
-  for (NSString * __strong key in nil_chk(actualKeys)) {
-    if (![((OrgJsonJSONObject *) nil_chk(expected)) hasWithNSString:key]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) unexpectedWithNSString:prefix withId:key];
-    }
-  }
-}
-
-- (void)checkJsonObjectKeysExpectedInActualWithNSString:(NSString *)prefix
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                  withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-          withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  id<JavaUtilSet> expectedKeys = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getKeysWithOrgJsonJSONObject_(expected);
-  for (NSString * __strong key in nil_chk(expectedKeys)) {
-    id expectedValue = [((OrgJsonJSONObject *) nil_chk(expected)) getWithNSString:key];
-    if ([((OrgJsonJSONObject *) nil_chk(actual)) hasWithNSString:key]) {
-      id actualValue = [actual getWithNSString:key];
-      [self compareValuesWithNSString:OrgSkyscreamerJsonassertComparatorJSONCompareUtil_qualifyWithNSString_withNSString_(prefix, key) withId:expectedValue withId:actualValue withOrgSkyscreamerJsonassertJSONCompareResult:result];
-    }
-    else {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) missingWithNSString:prefix withId:key];
-    }
-  }
-}
-
-- (void)compareJSONArrayOfJsonObjectsWithNSString:(NSString *)key
-                             withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                             withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-    withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  NSString *uniqueKey = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_findUniqueKeyWithOrgJsonJSONArray_(expected);
-  if (uniqueKey == nil || !OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isUsableAsUniqueKeyWithNSString_withOrgJsonJSONArray_(uniqueKey, actual)) {
-    [self recursivelyCompareJSONArrayWithNSString:key withOrgJsonJSONArray:expected withOrgJsonJSONArray:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-    return;
-  }
-  id<JavaUtilMap> expectedValueMap = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_arrayOfJsonObjectToMapWithOrgJsonJSONArray_withNSString_(expected, uniqueKey);
-  id<JavaUtilMap> actualValueMap = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_arrayOfJsonObjectToMapWithOrgJsonJSONArray_withNSString_(actual, uniqueKey);
-  for (id __strong id_ in nil_chk([((id<JavaUtilMap>) nil_chk(expectedValueMap)) keySet])) {
-    if (![((id<JavaUtilMap>) nil_chk(actualValueMap)) containsKeyWithId:id_]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) missingWithNSString:OrgSkyscreamerJsonassertComparatorJSONCompareUtil_formatUniqueKeyWithNSString_withNSString_withId_(key, uniqueKey, id_) withId:[expectedValueMap getWithId:id_]];
-      continue;
-    }
-    OrgJsonJSONObject *expectedValue = [expectedValueMap getWithId:id_];
-    OrgJsonJSONObject *actualValue = [actualValueMap getWithId:id_];
-    [self compareValuesWithNSString:OrgSkyscreamerJsonassertComparatorJSONCompareUtil_formatUniqueKeyWithNSString_withNSString_withId_(key, uniqueKey, id_) withId:expectedValue withId:actualValue withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-  for (id __strong id_ in nil_chk([((id<JavaUtilMap>) nil_chk(actualValueMap)) keySet])) {
-    if (![expectedValueMap containsKeyWithId:id_]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) unexpectedWithNSString:OrgSkyscreamerJsonassertComparatorJSONCompareUtil_formatUniqueKeyWithNSString_withNSString_withId_(key, uniqueKey, id_) withId:[actualValueMap getWithId:id_]];
-    }
-  }
-}
-
-- (void)compareJSONArrayOfSimpleValuesWithNSString:(NSString *)key
-                              withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                              withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-     withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  id<JavaUtilMap> expectedCount = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getCardinalityMapWithJavaUtilCollection_(OrgSkyscreamerJsonassertComparatorJSONCompareUtil_jsonArrayToListWithOrgJsonJSONArray_(expected));
-  id<JavaUtilMap> actualCount = OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getCardinalityMapWithJavaUtilCollection_(OrgSkyscreamerJsonassertComparatorJSONCompareUtil_jsonArrayToListWithOrgJsonJSONArray_(actual));
-  for (id __strong o in nil_chk([((id<JavaUtilMap>) nil_chk(expectedCount)) keySet])) {
-    if (![((id<JavaUtilMap>) nil_chk(actualCount)) containsKeyWithId:o]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) missingWithNSString:JreStrcat("$$", key, @"[]") withId:o];
-    }
-    else if (![((JavaLangInteger *) nil_chk([actualCount getWithId:o])) isEqual:[expectedCount getWithId:o]]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JreStrcat("$$@$@$@$", key, @"[]: Expected ", [expectedCount getWithId:o], @" occurrence(s) of ", o, @" but got ", [actualCount getWithId:o], @" occurrence(s)")];
-    }
-  }
-  for (id __strong o in nil_chk([((id<JavaUtilMap>) nil_chk(actualCount)) keySet])) {
-    if (![expectedCount containsKeyWithId:o]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) unexpectedWithNSString:JreStrcat("$$", key, @"[]") withId:o];
-    }
-  }
-}
-
-- (void)compareJSONArrayWithStrictOrderWithNSString:(NSString *)key
-                               withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-      withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(expected)) length]; ++i) {
-    id expectedValue = [expected getWithInt:i];
-    id actualValue = [((OrgJsonJSONArray *) nil_chk(actual)) getWithInt:i];
-    [self compareValuesWithNSString:JreStrcat("$CIC", key, '[', i, ']') withId:expectedValue withId:actualValue withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-}
-
-- (void)recursivelyCompareJSONArrayWithNSString:(NSString *)key
-                           withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                           withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-  withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  id<JavaUtilSet> matched = create_JavaUtilHashSet_init();
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(expected)) length]; ++i) {
-    id expectedElement = [expected getWithInt:i];
-    jboolean matchFound = false;
-    for (jint j = 0; j < [((OrgJsonJSONArray *) nil_chk(actual)) length]; ++j) {
-      id actualElement = [actual getWithInt:j];
-      if ([matched containsWithId:JavaLangInteger_valueOfWithInt_(j)] || ![[nil_chk(actualElement) java_getClass] isEqual:[nil_chk(expectedElement) java_getClass]]) {
-        continue;
-      }
-      if ([expectedElement isKindOfClass:[OrgJsonJSONObject class]]) {
-        if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_(self, (OrgJsonJSONObject *) cast_chk(expectedElement, [OrgJsonJSONObject class]), (OrgJsonJSONObject *) cast_chk(actualElement, [OrgJsonJSONObject class])))) passed]) {
-          [matched addWithId:JavaLangInteger_valueOfWithInt_(j)];
-          matchFound = true;
-          break;
-        }
-      }
-      else if ([expectedElement isKindOfClass:[OrgJsonJSONArray class]]) {
-        if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_(self, (OrgJsonJSONArray *) cast_chk(expectedElement, [OrgJsonJSONArray class]), (OrgJsonJSONArray *) cast_chk(actualElement, [OrgJsonJSONArray class])))) passed]) {
-          [matched addWithId:JavaLangInteger_valueOfWithInt_(j)];
-          matchFound = true;
-          break;
-        }
-      }
-      else if ([nil_chk(expectedElement) isEqual:actualElement]) {
-        [matched addWithId:JavaLangInteger_valueOfWithInt_(j)];
-        matchFound = true;
-        break;
-      }
-    }
-    if (!matchFound) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JreStrcat("$CI$@", key, '[', i, @"] Could not find match for element ", expectedElement)];
-      return;
-    }
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x11, 0, 1, 2, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x11, 0, 3, 2, -1, -1, -1 },
-    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x4, 6, 5, 2, -1, -1, -1 },
-    { NULL, "V", 0x4, 7, 8, 2, -1, -1, -1 },
-    { NULL, "V", 0x4, 9, 8, 2, -1, -1, -1 },
-    { NULL, "V", 0x4, 10, 8, 2, -1, -1, -1 },
-    { NULL, "V", 0x4, 11, 8, 2, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(compareJSONWithOrgJsonJSONObject:withOrgJsonJSONObject:);
-  methods[2].selector = @selector(compareJSONWithOrgJsonJSONArray:withOrgJsonJSONArray:);
-  methods[3].selector = @selector(checkJsonObjectKeysActualInExpectedWithNSString:withOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[4].selector = @selector(checkJsonObjectKeysExpectedInActualWithNSString:withOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[5].selector = @selector(compareJSONArrayOfJsonObjectsWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[6].selector = @selector(compareJSONArrayOfSimpleValuesWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[7].selector = @selector(compareJSONArrayWithStrictOrderWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[8].selector = @selector(recursivelyCompareJSONArrayWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "compareJSON", "LOrgJsonJSONObject;LOrgJsonJSONObject;", "LOrgJsonJSONException;", "LOrgJsonJSONArray;LOrgJsonJSONArray;", "checkJsonObjectKeysActualInExpected", "LNSString;LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "checkJsonObjectKeysExpectedInActual", "compareJSONArrayOfJsonObjects", "LNSString;LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareResult;", "compareJSONArrayOfSimpleValues", "compareJSONArrayWithStrictOrder", "recursivelyCompareJSONArray" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertComparatorAbstractComparator = { "AbstractComparator", "org.skyscreamer.jsonassert.comparator", ptrTable, methods, NULL, 7, 0x401, 9, 0, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertComparatorAbstractComparator;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertComparatorAbstractComparator_init(OrgSkyscreamerJsonassertComparatorAbstractComparator *self) {
-  NSObject_init(self);
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_(OrgSkyscreamerJsonassertComparatorAbstractComparator *self, OrgJsonJSONObject *expected, OrgJsonJSONObject *actual) {
-  OrgSkyscreamerJsonassertJSONCompareResult *result = create_OrgSkyscreamerJsonassertJSONCompareResult_init();
-  [self compareJSONWithNSString:@"" withOrgJsonJSONObject:expected withOrgJsonJSONObject:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  return result;
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertComparatorAbstractComparator_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_(OrgSkyscreamerJsonassertComparatorAbstractComparator *self, OrgJsonJSONArray *expected, OrgJsonJSONArray *actual) {
-  OrgSkyscreamerJsonassertJSONCompareResult *result = create_OrgSkyscreamerJsonassertJSONCompareResult_init();
-  [self compareJSONArrayWithNSString:@"" withOrgJsonJSONArray:expected withOrgJsonJSONArray:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  return result;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertComparatorAbstractComparator)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorArraySizeComparator.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorArraySizeComparator.h
deleted file mode 100644
index 6d164dfd4..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorArraySizeComparator.h
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorArraySizeComparator")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertComparatorArraySizeComparator
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorArraySizeComparator 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorArraySizeComparator 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertComparatorArraySizeComparator
-
-#if !defined (OrgSkyscreamerJsonassertComparatorArraySizeComparator_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorArraySizeComparator || defined(INCLUDE_OrgSkyscreamerJsonassertComparatorArraySizeComparator))
-#define OrgSkyscreamerJsonassertComparatorArraySizeComparator_
-
-#define RESTRICT_OrgSkyscreamerJsonassertComparatorDefaultComparator 1
-#define INCLUDE_OrgSkyscreamerJsonassertComparatorDefaultComparator 1
-#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
-
-@class OrgJsonJSONArray;
-@class OrgSkyscreamerJsonassertJSONCompareMode;
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-
-@interface OrgSkyscreamerJsonassertComparatorArraySizeComparator : OrgSkyscreamerJsonassertComparatorDefaultComparator
-
-#pragma mark Public
-
-- (instancetype)initWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;
-
-- (void)compareJSONArrayWithNSString:(NSString *)prefix
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertComparatorArraySizeComparator)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertComparatorArraySizeComparator *self, OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertComparatorArraySizeComparator *new_OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertComparatorArraySizeComparator *create_OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertComparatorArraySizeComparator)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorArraySizeComparator")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorArraySizeComparator.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorArraySizeComparator.m
deleted file mode 100644
index 8de7bd200..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorArraySizeComparator.m
+++ /dev/null
@@ -1,84 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorArraySizeComparator.h"
-#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
-#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "java/lang/Integer.h"
-#include "java/text/MessageFormat.h"
-#include "org/json/JSONArray.h"
-
-@implementation OrgSkyscreamerJsonassertComparatorArraySizeComparator
-
-- (instancetype)initWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
-  OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(self, mode);
-  return self;
-}
-
-- (void)compareJSONArrayWithNSString:(NSString *)prefix
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  NSString *arrayPrefix = JreStrcat("$$", prefix, @"[]");
-  if ([((OrgJsonJSONArray *) nil_chk(expected)) length] < 1 || [expected length] > 2) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0}: invalid expectation: expected array should contain either 1 or 2 elements but contains {1} elements", [IOSObjectArray arrayWithObjects:(id[]){ arrayPrefix, JavaLangInteger_valueOfWithInt_([expected length]) } count:2 type:NSObject_class_()])];
-    return;
-  }
-  if (!([[expected getWithInt:0] isKindOfClass:[NSNumber class]])) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0}: invalid expectation: {1}expected array size ''{2}'' not a number", [IOSObjectArray arrayWithObjects:(id[]){ arrayPrefix, ([expected length] == 1 ? @"" : @"minimum "), [expected getWithInt:0] } count:3 type:NSObject_class_()])];
-    return;
-  }
-  if (([expected length] == 2 && !([[expected getWithInt:1] isKindOfClass:[NSNumber class]]))) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0}: invalid expectation: maximum expected array size ''{1}'' not a number", [IOSObjectArray arrayWithObjects:(id[]){ arrayPrefix, [expected getWithInt:1] } count:2 type:NSObject_class_()])];
-    return;
-  }
-  jint minExpectedLength = [expected getIntWithInt:0];
-  if (minExpectedLength < 0) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0}: invalid expectation: minimum expected array size ''{1}'' negative", [IOSObjectArray arrayWithObjects:(id[]){ arrayPrefix, JavaLangInteger_valueOfWithInt_(minExpectedLength) } count:2 type:NSObject_class_()])];
-    return;
-  }
-  jint maxExpectedLength = [expected length] == 2 ? [expected getIntWithInt:1] : minExpectedLength;
-  if (maxExpectedLength < minExpectedLength) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0}: invalid expectation: maximum expected array size ''{1}'' less than minimum expected array size ''{2}''", [IOSObjectArray arrayWithObjects:(id[]){ arrayPrefix, JavaLangInteger_valueOfWithInt_(maxExpectedLength), JavaLangInteger_valueOfWithInt_(minExpectedLength) } count:3 type:NSObject_class_()])];
-    return;
-  }
-  if ([((OrgJsonJSONArray *) nil_chk(actual)) length] < minExpectedLength || [actual length] > maxExpectedLength) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:arrayPrefix withId:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"array size of {0}{1} elements", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(minExpectedLength), ([expected length] == 2 ? (JreStrcat("$I", @" to ", maxExpectedLength)) : @"") } count:2 type:NSObject_class_()]) withId:JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(@"{0} elements", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([actual length]) } count:1 type:NSObject_class_()])];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[1].selector = @selector(compareJSONArrayWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LOrgSkyscreamerJsonassertJSONCompareMode;", "compareJSONArray", "LNSString;LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareResult;", "LOrgJsonJSONException;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertComparatorArraySizeComparator = { "ArraySizeComparator", "org.skyscreamer.jsonassert.comparator", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertComparatorArraySizeComparator;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertComparatorArraySizeComparator *self, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(self, mode);
-}
-
-OrgSkyscreamerJsonassertComparatorArraySizeComparator *new_OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertComparatorArraySizeComparator, initWithOrgSkyscreamerJsonassertJSONCompareMode_, mode)
-}
-
-OrgSkyscreamerJsonassertComparatorArraySizeComparator *create_OrgSkyscreamerJsonassertComparatorArraySizeComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertComparatorArraySizeComparator, initWithOrgSkyscreamerJsonassertJSONCompareMode_, mode)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertComparatorArraySizeComparator)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorCustomComparator.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorCustomComparator.h
deleted file mode 100644
index b9a4d8f33..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorCustomComparator.h
+++ /dev/null
@@ -1,52 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorCustomComparator")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertComparatorCustomComparator
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorCustomComparator 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorCustomComparator 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertComparatorCustomComparator
-
-#if !defined (OrgSkyscreamerJsonassertComparatorCustomComparator_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorCustomComparator || defined(INCLUDE_OrgSkyscreamerJsonassertComparatorCustomComparator))
-#define OrgSkyscreamerJsonassertComparatorCustomComparator_
-
-#define RESTRICT_OrgSkyscreamerJsonassertComparatorDefaultComparator 1
-#define INCLUDE_OrgSkyscreamerJsonassertComparatorDefaultComparator 1
-#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
-
-@class IOSObjectArray;
-@class OrgSkyscreamerJsonassertJSONCompareMode;
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-
-@interface OrgSkyscreamerJsonassertComparatorCustomComparator : OrgSkyscreamerJsonassertComparatorDefaultComparator
-
-#pragma mark Public
-
-- (instancetype)initWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode
-                 withOrgSkyscreamerJsonassertCustomizationArray:(IOSObjectArray *)customizations;
-
-- (void)compareValuesWithNSString:(NSString *)prefix
-                           withId:(id)expectedValue
-                           withId:(id)actualValue
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertComparatorCustomComparator)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(OrgSkyscreamerJsonassertComparatorCustomComparator *self, OrgSkyscreamerJsonassertJSONCompareMode *mode, IOSObjectArray *customizations);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertComparatorCustomComparator *new_OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(OrgSkyscreamerJsonassertJSONCompareMode *mode, IOSObjectArray *customizations) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertComparatorCustomComparator *create_OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(OrgSkyscreamerJsonassertJSONCompareMode *mode, IOSObjectArray *customizations);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertComparatorCustomComparator)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorCustomComparator")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorCustomComparator.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorCustomComparator.m
deleted file mode 100644
index dd90e9293..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorCustomComparator.m
+++ /dev/null
@@ -1,107 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorCustomComparator.h"
-#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
-#include "OrgSkyscreamerJsonassertCustomization.h"
-#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "OrgSkyscreamerJsonassertValueMatcherException.h"
-#include "java/util/Arrays.h"
-#include "java/util/Collection.h"
-#include "java/util/List.h"
-
-@interface OrgSkyscreamerJsonassertComparatorCustomComparator () {
- @public
-  id<JavaUtilCollection> customizations_;
-}
-
-- (OrgSkyscreamerJsonassertCustomization *)getCustomizationWithNSString:(NSString *)path;
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertComparatorCustomComparator, customizations_, id<JavaUtilCollection>)
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertCustomization *OrgSkyscreamerJsonassertComparatorCustomComparator_getCustomizationWithNSString_(OrgSkyscreamerJsonassertComparatorCustomComparator *self, NSString *path);
-
-@implementation OrgSkyscreamerJsonassertComparatorCustomComparator
-
-- (instancetype)initWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode
-                 withOrgSkyscreamerJsonassertCustomizationArray:(IOSObjectArray *)customizations {
-  OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(self, mode, customizations);
-  return self;
-}
-
-- (void)compareValuesWithNSString:(NSString *)prefix
-                           withId:(id)expectedValue
-                           withId:(id)actualValue
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  OrgSkyscreamerJsonassertCustomization *customization = OrgSkyscreamerJsonassertComparatorCustomComparator_getCustomizationWithNSString_(self, prefix);
-  if (customization != nil) {
-    @try {
-      if (![customization matchesWithNSString:prefix withId:actualValue withId:expectedValue withOrgSkyscreamerJsonassertJSONCompareResult:result]) {
-        [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:prefix withId:expectedValue withId:actualValue];
-      }
-    }
-    @catch (OrgSkyscreamerJsonassertValueMatcherException *e) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:prefix withOrgSkyscreamerJsonassertValueMatcherException:e];
-    }
-  }
-  else {
-    [super compareValuesWithNSString:prefix withId:expectedValue withId:actualValue withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-}
-
-- (OrgSkyscreamerJsonassertCustomization *)getCustomizationWithNSString:(NSString *)path {
-  return OrgSkyscreamerJsonassertComparatorCustomComparator_getCustomizationWithNSString_(self, path);
-}
-
-- (void)dealloc {
-  RELEASE_(customizations_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertCustomization;", 0x2, 4, 5, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithOrgSkyscreamerJsonassertJSONCompareMode:withOrgSkyscreamerJsonassertCustomizationArray:);
-  methods[1].selector = @selector(compareValuesWithNSString:withId:withId:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[2].selector = @selector(getCustomizationWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "customizations_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
-  };
-  static const void *ptrTable[] = { "LOrgSkyscreamerJsonassertJSONCompareMode;[LOrgSkyscreamerJsonassertCustomization;", "compareValues", "LNSString;LNSObject;LNSObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "LOrgJsonJSONException;", "getCustomization", "LNSString;", "Ljava/util/Collection<Lorg/skyscreamer/jsonassert/Customization;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertComparatorCustomComparator = { "CustomComparator", "org.skyscreamer.jsonassert.comparator", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertComparatorCustomComparator;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(OrgSkyscreamerJsonassertComparatorCustomComparator *self, OrgSkyscreamerJsonassertJSONCompareMode *mode, IOSObjectArray *customizations) {
-  OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(self, mode);
-  JreStrongAssign(&self->customizations_, JavaUtilArrays_asListWithNSObjectArray_(customizations));
-}
-
-OrgSkyscreamerJsonassertComparatorCustomComparator *new_OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(OrgSkyscreamerJsonassertJSONCompareMode *mode, IOSObjectArray *customizations) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertComparatorCustomComparator, initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_, mode, customizations)
-}
-
-OrgSkyscreamerJsonassertComparatorCustomComparator *create_OrgSkyscreamerJsonassertComparatorCustomComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_(OrgSkyscreamerJsonassertJSONCompareMode *mode, IOSObjectArray *customizations) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertComparatorCustomComparator, initWithOrgSkyscreamerJsonassertJSONCompareMode_withOrgSkyscreamerJsonassertCustomizationArray_, mode, customizations)
-}
-
-OrgSkyscreamerJsonassertCustomization *OrgSkyscreamerJsonassertComparatorCustomComparator_getCustomizationWithNSString_(OrgSkyscreamerJsonassertComparatorCustomComparator *self, NSString *path) {
-  for (OrgSkyscreamerJsonassertCustomization * __strong c in nil_chk(self->customizations_)) if ([((OrgSkyscreamerJsonassertCustomization *) nil_chk(c)) appliesToPathWithNSString:path]) return c;
-  return nil;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertComparatorCustomComparator)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorDefaultComparator.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorDefaultComparator.h
deleted file mode 100644
index 14315acf0..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorDefaultComparator.h
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorDefaultComparator")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertComparatorDefaultComparator
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorDefaultComparator 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorDefaultComparator 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertComparatorDefaultComparator
-
-#if !defined (OrgSkyscreamerJsonassertComparatorDefaultComparator_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorDefaultComparator || defined(INCLUDE_OrgSkyscreamerJsonassertComparatorDefaultComparator))
-#define OrgSkyscreamerJsonassertComparatorDefaultComparator_
-
-#define RESTRICT_OrgSkyscreamerJsonassertComparatorAbstractComparator 1
-#define INCLUDE_OrgSkyscreamerJsonassertComparatorAbstractComparator 1
-#include "OrgSkyscreamerJsonassertComparatorAbstractComparator.h"
-
-@class OrgJsonJSONArray;
-@class OrgJsonJSONObject;
-@class OrgSkyscreamerJsonassertJSONCompareMode;
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-
-@interface OrgSkyscreamerJsonassertComparatorDefaultComparator : OrgSkyscreamerJsonassertComparatorAbstractComparator {
- @public
-  OrgSkyscreamerJsonassertJSONCompareMode *mode_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;
-
-- (void)compareJSONWithNSString:(NSString *)prefix
-          withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareJSONArrayWithNSString:(NSString *)prefix
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareValuesWithNSString:(NSString *)prefix
-                           withId:(id)expectedValue
-                           withId:(id)actualValue
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertComparatorDefaultComparator)
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertComparatorDefaultComparator, mode_, OrgSkyscreamerJsonassertJSONCompareMode *)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertComparatorDefaultComparator *self, OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertComparatorDefaultComparator *new_OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertComparatorDefaultComparator *create_OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertComparatorDefaultComparator)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorDefaultComparator")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorDefaultComparator.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorDefaultComparator.m
deleted file mode 100644
index 7f0c01689..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorDefaultComparator.m
+++ /dev/null
@@ -1,124 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorAbstractComparator.h"
-#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONCompareUtil.h"
-#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONObject.h"
-
-@implementation OrgSkyscreamerJsonassertComparatorDefaultComparator
-
-- (instancetype)initWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
-  OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(self, mode);
-  return self;
-}
-
-- (void)compareJSONWithNSString:(NSString *)prefix
-          withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  [self checkJsonObjectKeysExpectedInActualWithNSString:prefix withOrgJsonJSONObject:expected withOrgJsonJSONObject:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  if (![((OrgSkyscreamerJsonassertJSONCompareMode *) nil_chk(mode_)) isExtensible]) {
-    [self checkJsonObjectKeysActualInExpectedWithNSString:prefix withOrgJsonJSONObject:expected withOrgJsonJSONObject:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-}
-
-- (void)compareValuesWithNSString:(NSString *)prefix
-                           withId:(id)expectedValue
-                           withId:(id)actualValue
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  if ([expectedValue isKindOfClass:[NSNumber class]] && [actualValue isKindOfClass:[NSNumber class]]) {
-    if ([((NSNumber *) nil_chk(((NSNumber *) cast_chk(expectedValue, [NSNumber class])))) doubleValue] != [((NSNumber *) nil_chk(((NSNumber *) cast_chk(actualValue, [NSNumber class])))) doubleValue]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:prefix withId:expectedValue withId:actualValue];
-    }
-  }
-  else if ([[nil_chk(expectedValue) java_getClass] isAssignableFrom:[nil_chk(actualValue) java_getClass]]) {
-    if ([expectedValue isKindOfClass:[OrgJsonJSONArray class]]) {
-      [self compareJSONArrayWithNSString:prefix withOrgJsonJSONArray:(OrgJsonJSONArray *) cast_chk(expectedValue, [OrgJsonJSONArray class]) withOrgJsonJSONArray:(OrgJsonJSONArray *) cast_chk(actualValue, [OrgJsonJSONArray class]) withOrgSkyscreamerJsonassertJSONCompareResult:result];
-    }
-    else if ([expectedValue isKindOfClass:[OrgJsonJSONObject class]]) {
-      [self compareJSONWithNSString:prefix withOrgJsonJSONObject:(OrgJsonJSONObject *) cast_chk(expectedValue, [OrgJsonJSONObject class]) withOrgJsonJSONObject:(OrgJsonJSONObject *) cast_chk(actualValue, [OrgJsonJSONObject class]) withOrgSkyscreamerJsonassertJSONCompareResult:result];
-    }
-    else if (![expectedValue isEqual:actualValue]) {
-      [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:prefix withId:expectedValue withId:actualValue];
-    }
-  }
-  else {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:prefix withId:expectedValue withId:actualValue];
-  }
-}
-
-- (void)compareJSONArrayWithNSString:(NSString *)prefix
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  if ([((OrgJsonJSONArray *) nil_chk(expected)) length] != [((OrgJsonJSONArray *) nil_chk(actual)) length]) {
-    [((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failWithNSString:JreStrcat("$$I$I", prefix, @"[]: Expected ", [expected length], @" values but got ", [actual length])];
-    return;
-  }
-  else if ([expected length] == 0) {
-    return;
-  }
-  if ([((OrgSkyscreamerJsonassertJSONCompareMode *) nil_chk(mode_)) hasStrictOrder]) {
-    [self compareJSONArrayWithStrictOrderWithNSString:prefix withOrgJsonJSONArray:expected withOrgJsonJSONArray:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-  else if (OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allSimpleValuesWithOrgJsonJSONArray_(expected)) {
-    [self compareJSONArrayOfSimpleValuesWithNSString:prefix withOrgJsonJSONArray:expected withOrgJsonJSONArray:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-  else if (OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONObjectsWithOrgJsonJSONArray_(expected)) {
-    [self compareJSONArrayOfJsonObjectsWithNSString:prefix withOrgJsonJSONArray:expected withOrgJsonJSONArray:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-  else {
-    [self recursivelyCompareJSONArrayWithNSString:prefix withOrgJsonJSONArray:expected withOrgJsonJSONArray:actual withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(mode_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, 3, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, 3, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[1].selector = @selector(compareJSONWithNSString:withOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[2].selector = @selector(compareValuesWithNSString:withId:withId:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[3].selector = @selector(compareJSONArrayWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "mode_", "LOrgSkyscreamerJsonassertJSONCompareMode;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LOrgSkyscreamerJsonassertJSONCompareMode;", "compareJSON", "LNSString;LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "LOrgJsonJSONException;", "compareValues", "LNSString;LNSObject;LNSObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "compareJSONArray", "LNSString;LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareResult;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertComparatorDefaultComparator = { "DefaultComparator", "org.skyscreamer.jsonassert.comparator", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertComparatorDefaultComparator;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertComparatorDefaultComparator *self, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  OrgSkyscreamerJsonassertComparatorAbstractComparator_init(self);
-  JreStrongAssign(&self->mode_, mode);
-}
-
-OrgSkyscreamerJsonassertComparatorDefaultComparator *new_OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertComparatorDefaultComparator, initWithOrgSkyscreamerJsonassertJSONCompareMode_, mode)
-}
-
-OrgSkyscreamerJsonassertComparatorDefaultComparator *create_OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertComparatorDefaultComparator, initWithOrgSkyscreamerJsonassertJSONCompareMode_, mode)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertComparatorDefaultComparator)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONComparator.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONComparator.h
deleted file mode 100644
index 3b895d61c..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONComparator.h
+++ /dev/null
@@ -1,53 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONComparator")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertComparatorJSONComparator
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONComparator 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONComparator 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertComparatorJSONComparator
-
-#if !defined (OrgSkyscreamerJsonassertComparatorJSONComparator_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONComparator || defined(INCLUDE_OrgSkyscreamerJsonassertComparatorJSONComparator))
-#define OrgSkyscreamerJsonassertComparatorJSONComparator_
-
-@class OrgJsonJSONArray;
-@class OrgJsonJSONObject;
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-
-@protocol OrgSkyscreamerJsonassertComparatorJSONComparator < JavaObject >
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual;
-
-- (void)compareJSONWithNSString:(NSString *)prefix
-          withOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareValuesWithNSString:(NSString *)prefix
-                           withId:(id)expectedValue
-                           withId:(id)actualValue
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-- (void)compareJSONArrayWithNSString:(NSString *)prefix
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertComparatorJSONComparator)
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertComparatorJSONComparator)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONComparator")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONComparator.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONComparator.m
deleted file mode 100644
index f995680ef..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONComparator.m
+++ /dev/null
@@ -1,37 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONComparator.h"
-
-@interface OrgSkyscreamerJsonassertComparatorJSONComparator : NSObject
-
-@end
-
-@implementation OrgSkyscreamerJsonassertComparatorJSONComparator
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x401, 0, 1, 2, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x401, 0, 3, 2, -1, -1, -1 },
-    { NULL, "V", 0x401, 0, 4, 2, -1, -1, -1 },
-    { NULL, "V", 0x401, 5, 6, 2, -1, -1, -1 },
-    { NULL, "V", 0x401, 7, 8, 2, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(compareJSONWithOrgJsonJSONObject:withOrgJsonJSONObject:);
-  methods[1].selector = @selector(compareJSONWithOrgJsonJSONArray:withOrgJsonJSONArray:);
-  methods[2].selector = @selector(compareJSONWithNSString:withOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[3].selector = @selector(compareValuesWithNSString:withId:withId:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  methods[4].selector = @selector(compareJSONArrayWithNSString:withOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "compareJSON", "LOrgJsonJSONObject;LOrgJsonJSONObject;", "LOrgJsonJSONException;", "LOrgJsonJSONArray;LOrgJsonJSONArray;", "LNSString;LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "compareValues", "LNSString;LNSObject;LNSObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "compareJSONArray", "LNSString;LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareResult;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertComparatorJSONComparator = { "JSONComparator", "org.skyscreamer.jsonassert.comparator", ptrTable, methods, NULL, 7, 0x609, 5, 0, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertComparatorJSONComparator;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertComparatorJSONComparator)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONCompareUtil.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONCompareUtil.h
deleted file mode 100644
index f8e018d3a..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONCompareUtil.h
+++ /dev/null
@@ -1,90 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONCompareUtil")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertComparatorJSONCompareUtil
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONCompareUtil 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONCompareUtil 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertComparatorJSONCompareUtil
-
-#if !defined (OrgSkyscreamerJsonassertComparatorJSONCompareUtil_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONCompareUtil || defined(INCLUDE_OrgSkyscreamerJsonassertComparatorJSONCompareUtil))
-#define OrgSkyscreamerJsonassertComparatorJSONCompareUtil_
-
-@class OrgJsonJSONArray;
-@class OrgJsonJSONObject;
-@protocol JavaUtilCollection;
-@protocol JavaUtilList;
-@protocol JavaUtilMap;
-@protocol JavaUtilSet;
-
-@interface OrgSkyscreamerJsonassertComparatorJSONCompareUtil : NSObject
-
-#pragma mark Public
-
-+ (jboolean)allJSONArraysWithOrgJsonJSONArray:(OrgJsonJSONArray *)array;
-
-+ (jboolean)allJSONObjectsWithOrgJsonJSONArray:(OrgJsonJSONArray *)array;
-
-+ (jboolean)allSimpleValuesWithOrgJsonJSONArray:(OrgJsonJSONArray *)array;
-
-+ (id<JavaUtilMap>)arrayOfJsonObjectToMapWithOrgJsonJSONArray:(OrgJsonJSONArray *)array
-                                                 withNSString:(NSString *)uniqueKey;
-
-+ (NSString *)findUniqueKeyWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected;
-
-+ (NSString *)formatUniqueKeyWithNSString:(NSString *)key
-                             withNSString:(NSString *)uniqueKey
-                                   withId:(id)value;
-
-+ (id<JavaUtilMap>)getCardinalityMapWithJavaUtilCollection:(id<JavaUtilCollection>)coll;
-
-+ (id<JavaUtilSet>)getKeysWithOrgJsonJSONObject:(OrgJsonJSONObject *)jsonObject;
-
-+ (jboolean)isSimpleValueWithId:(id)o;
-
-+ (jboolean)isUsableAsUniqueKeyWithNSString:(NSString *)candidate
-                       withOrgJsonJSONArray:(OrgJsonJSONArray *)array;
-
-+ (id<JavaUtilList>)jsonArrayToListWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected;
-
-+ (NSString *)qualifyWithNSString:(NSString *)prefix
-                     withNSString:(NSString *)key;
-
-@end
-
-J2OBJC_STATIC_INIT(OrgSkyscreamerJsonassertComparatorJSONCompareUtil)
-
-FOUNDATION_EXPORT id<JavaUtilMap> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_arrayOfJsonObjectToMapWithOrgJsonJSONArray_withNSString_(OrgJsonJSONArray *array, NSString *uniqueKey);
-
-FOUNDATION_EXPORT NSString *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_findUniqueKeyWithOrgJsonJSONArray_(OrgJsonJSONArray *expected);
-
-FOUNDATION_EXPORT jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isUsableAsUniqueKeyWithNSString_withOrgJsonJSONArray_(NSString *candidate, OrgJsonJSONArray *array);
-
-FOUNDATION_EXPORT id<JavaUtilList> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_jsonArrayToListWithOrgJsonJSONArray_(OrgJsonJSONArray *expected);
-
-FOUNDATION_EXPORT jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allSimpleValuesWithOrgJsonJSONArray_(OrgJsonJSONArray *array);
-
-FOUNDATION_EXPORT jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isSimpleValueWithId_(id o);
-
-FOUNDATION_EXPORT jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONObjectsWithOrgJsonJSONArray_(OrgJsonJSONArray *array);
-
-FOUNDATION_EXPORT jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONArraysWithOrgJsonJSONArray_(OrgJsonJSONArray *array);
-
-FOUNDATION_EXPORT id<JavaUtilSet> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getKeysWithOrgJsonJSONObject_(OrgJsonJSONObject *jsonObject);
-
-FOUNDATION_EXPORT NSString *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_qualifyWithNSString_withNSString_(NSString *prefix, NSString *key);
-
-FOUNDATION_EXPORT NSString *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_formatUniqueKeyWithNSString_withNSString_withId_(NSString *key, NSString *uniqueKey, id value);
-
-FOUNDATION_EXPORT id<JavaUtilMap> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getCardinalityMapWithJavaUtilCollection_(id<JavaUtilCollection> coll);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertComparatorJSONCompareUtil)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertComparatorJSONCompareUtil")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONCompareUtil.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONCompareUtil.m
deleted file mode 100644
index 65c4387fa..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertComparatorJSONCompareUtil.m
+++ /dev/null
@@ -1,288 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONCompareUtil.h"
-#include "java/lang/Integer.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collection.h"
-#include "java/util/HashMap.h"
-#include "java/util/HashSet.h"
-#include "java/util/Iterator.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "java/util/TreeSet.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONObject.h"
-
-@interface OrgSkyscreamerJsonassertComparatorJSONCompareUtil ()
-
-- (instancetype)init;
-
-@end
-
-inline JavaLangInteger *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_get_INTEGER_ONE();
-inline JavaLangInteger *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_set_INTEGER_ONE(JavaLangInteger *value);
-static JavaLangInteger *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_INTEGER_ONE;
-J2OBJC_STATIC_FIELD_OBJ(OrgSkyscreamerJsonassertComparatorJSONCompareUtil, INTEGER_ONE, JavaLangInteger *)
-
-__attribute__((unused)) static void OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init(OrgSkyscreamerJsonassertComparatorJSONCompareUtil *self);
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertComparatorJSONCompareUtil *new_OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertComparatorJSONCompareUtil *create_OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init();
-
-J2OBJC_INITIALIZED_DEFN(OrgSkyscreamerJsonassertComparatorJSONCompareUtil)
-
-@implementation OrgSkyscreamerJsonassertComparatorJSONCompareUtil
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id<JavaUtilMap>)arrayOfJsonObjectToMapWithOrgJsonJSONArray:(OrgJsonJSONArray *)array
-                                                 withNSString:(NSString *)uniqueKey {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_arrayOfJsonObjectToMapWithOrgJsonJSONArray_withNSString_(array, uniqueKey);
-}
-
-+ (NSString *)findUniqueKeyWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_findUniqueKeyWithOrgJsonJSONArray_(expected);
-}
-
-+ (jboolean)isUsableAsUniqueKeyWithNSString:(NSString *)candidate
-                       withOrgJsonJSONArray:(OrgJsonJSONArray *)array {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isUsableAsUniqueKeyWithNSString_withOrgJsonJSONArray_(candidate, array);
-}
-
-+ (id<JavaUtilList>)jsonArrayToListWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_jsonArrayToListWithOrgJsonJSONArray_(expected);
-}
-
-+ (jboolean)allSimpleValuesWithOrgJsonJSONArray:(OrgJsonJSONArray *)array {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allSimpleValuesWithOrgJsonJSONArray_(array);
-}
-
-+ (jboolean)isSimpleValueWithId:(id)o {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isSimpleValueWithId_(o);
-}
-
-+ (jboolean)allJSONObjectsWithOrgJsonJSONArray:(OrgJsonJSONArray *)array {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONObjectsWithOrgJsonJSONArray_(array);
-}
-
-+ (jboolean)allJSONArraysWithOrgJsonJSONArray:(OrgJsonJSONArray *)array {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONArraysWithOrgJsonJSONArray_(array);
-}
-
-+ (id<JavaUtilSet>)getKeysWithOrgJsonJSONObject:(OrgJsonJSONObject *)jsonObject {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getKeysWithOrgJsonJSONObject_(jsonObject);
-}
-
-+ (NSString *)qualifyWithNSString:(NSString *)prefix
-                     withNSString:(NSString *)key {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_qualifyWithNSString_withNSString_(prefix, key);
-}
-
-+ (NSString *)formatUniqueKeyWithNSString:(NSString *)key
-                             withNSString:(NSString *)uniqueKey
-                                   withId:(id)value {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_formatUniqueKeyWithNSString_withNSString_withId_(key, uniqueKey, value);
-}
-
-+ (id<JavaUtilMap>)getCardinalityMapWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
-  return OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getCardinalityMapWithJavaUtilCollection_(coll);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x9, 0, 1, 2, 3, -1, -1 },
-    { NULL, "LNSString;", 0x9, 4, 5, 2, -1, -1, -1 },
-    { NULL, "Z", 0x9, 6, 7, 2, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x9, 8, 5, 2, 9, -1, -1 },
-    { NULL, "Z", 0x9, 10, 5, 2, -1, -1, -1 },
-    { NULL, "Z", 0x9, 11, 12, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 13, 5, 2, -1, -1, -1 },
-    { NULL, "Z", 0x9, 14, 5, 2, -1, -1, -1 },
-    { NULL, "LJavaUtilSet;", 0x9, 15, 16, -1, 17, -1, -1 },
-    { NULL, "LNSString;", 0x9, 18, 19, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x9, 20, 21, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x9, 22, 23, -1, 24, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(arrayOfJsonObjectToMapWithOrgJsonJSONArray:withNSString:);
-  methods[2].selector = @selector(findUniqueKeyWithOrgJsonJSONArray:);
-  methods[3].selector = @selector(isUsableAsUniqueKeyWithNSString:withOrgJsonJSONArray:);
-  methods[4].selector = @selector(jsonArrayToListWithOrgJsonJSONArray:);
-  methods[5].selector = @selector(allSimpleValuesWithOrgJsonJSONArray:);
-  methods[6].selector = @selector(isSimpleValueWithId:);
-  methods[7].selector = @selector(allJSONObjectsWithOrgJsonJSONArray:);
-  methods[8].selector = @selector(allJSONArraysWithOrgJsonJSONArray:);
-  methods[9].selector = @selector(getKeysWithOrgJsonJSONObject:);
-  methods[10].selector = @selector(qualifyWithNSString:withNSString:);
-  methods[11].selector = @selector(formatUniqueKeyWithNSString:withNSString:withId:);
-  methods[12].selector = @selector(getCardinalityMapWithJavaUtilCollection:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "INTEGER_ONE", "LJavaLangInteger;", .constantValue.asLong = 0, 0xa, -1, 25, -1, -1 },
-  };
-  static const void *ptrTable[] = { "arrayOfJsonObjectToMap", "LOrgJsonJSONArray;LNSString;", "LOrgJsonJSONException;", "(Lorg/json/JSONArray;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/Object;Lorg/json/JSONObject;>;", "findUniqueKey", "LOrgJsonJSONArray;", "isUsableAsUniqueKey", "LNSString;LOrgJsonJSONArray;", "jsonArrayToList", "(Lorg/json/JSONArray;)Ljava/util/List<Ljava/lang/Object;>;", "allSimpleValues", "isSimpleValue", "LNSObject;", "allJSONObjects", "allJSONArrays", "getKeys", "LOrgJsonJSONObject;", "(Lorg/json/JSONObject;)Ljava/util/Set<Ljava/lang/String;>;", "qualify", "LNSString;LNSString;", "formatUniqueKey", "LNSString;LNSString;LNSObject;", "getCardinalityMap", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;)Ljava/util/Map<TT;Ljava/lang/Integer;>;", &OrgSkyscreamerJsonassertComparatorJSONCompareUtil_INTEGER_ONE };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertComparatorJSONCompareUtil = { "JSONCompareUtil", "org.skyscreamer.jsonassert.comparator", ptrTable, methods, fields, 7, 0x11, 13, 1, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertComparatorJSONCompareUtil;
-}
-
-+ (void)initialize {
-  if (self == [OrgSkyscreamerJsonassertComparatorJSONCompareUtil class]) {
-    JreStrongAssignAndConsume(&OrgSkyscreamerJsonassertComparatorJSONCompareUtil_INTEGER_ONE, new_JavaLangInteger_initWithInt_(1));
-    J2OBJC_SET_INITIALIZED(OrgSkyscreamerJsonassertComparatorJSONCompareUtil)
-  }
-}
-
-@end
-
-void OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init(OrgSkyscreamerJsonassertComparatorJSONCompareUtil *self) {
-  NSObject_init(self);
-}
-
-OrgSkyscreamerJsonassertComparatorJSONCompareUtil *new_OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init() {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertComparatorJSONCompareUtil, init)
-}
-
-OrgSkyscreamerJsonassertComparatorJSONCompareUtil *create_OrgSkyscreamerJsonassertComparatorJSONCompareUtil_init() {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertComparatorJSONCompareUtil, init)
-}
-
-id<JavaUtilMap> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_arrayOfJsonObjectToMapWithOrgJsonJSONArray_withNSString_(OrgJsonJSONArray *array, NSString *uniqueKey) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  id<JavaUtilMap> valueMap = create_JavaUtilHashMap_init();
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(array)) length]; ++i) {
-    OrgJsonJSONObject *jsonObject = (OrgJsonJSONObject *) cast_chk([array getWithInt:i], [OrgJsonJSONObject class]);
-    id id_ = [((OrgJsonJSONObject *) nil_chk(jsonObject)) getWithNSString:uniqueKey];
-    [valueMap putWithId:id_ withId:jsonObject];
-  }
-  return valueMap;
-}
-
-NSString *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_findUniqueKeyWithOrgJsonJSONArray_(OrgJsonJSONArray *expected) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  OrgJsonJSONObject *o = (OrgJsonJSONObject *) cast_chk([((OrgJsonJSONArray *) nil_chk(expected)) getWithInt:0], [OrgJsonJSONObject class]);
-  for (NSString * __strong candidate in nil_chk(OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getKeysWithOrgJsonJSONObject_(o))) {
-    if (OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isUsableAsUniqueKeyWithNSString_withOrgJsonJSONArray_(candidate, expected)) return candidate;
-  }
-  return nil;
-}
-
-jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isUsableAsUniqueKeyWithNSString_withOrgJsonJSONArray_(NSString *candidate, OrgJsonJSONArray *array) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  id<JavaUtilSet> seenValues = create_JavaUtilHashSet_init();
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(array)) length]; i++) {
-    id item = [array getWithInt:i];
-    if ([item isKindOfClass:[OrgJsonJSONObject class]]) {
-      OrgJsonJSONObject *o = (OrgJsonJSONObject *) cast_chk(item, [OrgJsonJSONObject class]);
-      if ([((OrgJsonJSONObject *) nil_chk(o)) hasWithNSString:candidate]) {
-        id value = [o getWithNSString:candidate];
-        if (OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isSimpleValueWithId_(value) && ![seenValues containsWithId:value]) {
-          [seenValues addWithId:value];
-        }
-        else {
-          return false;
-        }
-      }
-      else {
-        return false;
-      }
-    }
-    else {
-      return false;
-    }
-  }
-  return true;
-}
-
-id<JavaUtilList> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_jsonArrayToListWithOrgJsonJSONArray_(OrgJsonJSONArray *expected) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  id<JavaUtilList> jsonObjects = create_JavaUtilArrayList_initWithInt_([((OrgJsonJSONArray *) nil_chk(expected)) length]);
-  for (jint i = 0; i < [expected length]; ++i) {
-    [jsonObjects addWithId:[expected getWithInt:i]];
-  }
-  return jsonObjects;
-}
-
-jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allSimpleValuesWithOrgJsonJSONArray_(OrgJsonJSONArray *array) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(array)) length]; ++i) {
-    if (!OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isSimpleValueWithId_([array getWithInt:i])) {
-      return false;
-    }
-  }
-  return true;
-}
-
-jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_isSimpleValueWithId_(id o) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  return !([o isKindOfClass:[OrgJsonJSONObject class]]) && !([o isKindOfClass:[OrgJsonJSONArray class]]);
-}
-
-jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONObjectsWithOrgJsonJSONArray_(OrgJsonJSONArray *array) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(array)) length]; ++i) {
-    if (!([[array getWithInt:i] isKindOfClass:[OrgJsonJSONObject class]])) {
-      return false;
-    }
-  }
-  return true;
-}
-
-jboolean OrgSkyscreamerJsonassertComparatorJSONCompareUtil_allJSONArraysWithOrgJsonJSONArray_(OrgJsonJSONArray *array) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  for (jint i = 0; i < [((OrgJsonJSONArray *) nil_chk(array)) length]; ++i) {
-    if (!([[array getWithInt:i] isKindOfClass:[OrgJsonJSONArray class]])) {
-      return false;
-    }
-  }
-  return true;
-}
-
-id<JavaUtilSet> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getKeysWithOrgJsonJSONObject_(OrgJsonJSONObject *jsonObject) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  id<JavaUtilSet> keys = create_JavaUtilTreeSet_init();
-  id<JavaUtilIterator> iter = [((OrgJsonJSONObject *) nil_chk(jsonObject)) keys];
-  while ([((id<JavaUtilIterator>) nil_chk(iter)) hasNext]) {
-    [keys addWithId:(NSString *) cast_chk([iter next], [NSString class])];
-  }
-  return keys;
-}
-
-NSString *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_qualifyWithNSString_withNSString_(NSString *prefix, NSString *key) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  return [@"" isEqual:prefix] ? key : JreStrcat("$C$", prefix, '.', key);
-}
-
-NSString *OrgSkyscreamerJsonassertComparatorJSONCompareUtil_formatUniqueKeyWithNSString_withNSString_withId_(NSString *key, NSString *uniqueKey, id value) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  return JreStrcat("$C$C@C", key, '[', uniqueKey, '=', value, ']');
-}
-
-id<JavaUtilMap> OrgSkyscreamerJsonassertComparatorJSONCompareUtil_getCardinalityMapWithJavaUtilCollection_(id<JavaUtilCollection> coll) {
-  OrgSkyscreamerJsonassertComparatorJSONCompareUtil_initialize();
-  id<JavaUtilMap> count = create_JavaUtilHashMap_init();
-  for (id __strong item in nil_chk(coll)) {
-    JavaLangInteger *c = (JavaLangInteger *) cast_chk(([count getWithId:item]), [JavaLangInteger class]);
-    if (c == nil) {
-      [count putWithId:item withId:OrgSkyscreamerJsonassertComparatorJSONCompareUtil_INTEGER_ONE];
-    }
-    else {
-      [count putWithId:item withId:create_JavaLangInteger_initWithInt_([c intValue] + 1)];
-    }
-  }
-  return count;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertComparatorJSONCompareUtil)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertCustomization.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertCustomization.h
deleted file mode 100644
index ab21dab90..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertCustomization.h
+++ /dev/null
@@ -1,57 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertCustomization")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertCustomization
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertCustomization 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertCustomization 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertCustomization
-
-#if !defined (OrgSkyscreamerJsonassertCustomization_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertCustomization || defined(INCLUDE_OrgSkyscreamerJsonassertCustomization))
-#define OrgSkyscreamerJsonassertCustomization_
-
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-@protocol OrgSkyscreamerJsonassertValueMatcher;
-
-@interface OrgSkyscreamerJsonassertCustomization : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)path
-withOrgSkyscreamerJsonassertValueMatcher:(id<OrgSkyscreamerJsonassertValueMatcher>)comparator;
-
-- (jboolean)appliesToPathWithNSString:(NSString *)path;
-
-+ (OrgSkyscreamerJsonassertCustomization *)customizationWithNSString:(NSString *)path
-                            withOrgSkyscreamerJsonassertValueMatcher:(id<OrgSkyscreamerJsonassertValueMatcher>)comparator;
-
-- (jboolean)matchesWithId:(id)actual
-                   withId:(id)expected;
-
-- (jboolean)matchesWithNSString:(NSString *)prefix
-                         withId:(id)actual
-                         withId:(id)expected
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertCustomization)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(OrgSkyscreamerJsonassertCustomization *self, NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertCustomization *new_OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertCustomization *create_OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertCustomization *OrgSkyscreamerJsonassertCustomization_customizationWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertCustomization)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertCustomization")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertCustomization.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertCustomization.m
deleted file mode 100644
index c4279cf8d..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertCustomization.m
+++ /dev/null
@@ -1,118 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertCustomization.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "OrgSkyscreamerJsonassertLocationAwareValueMatcher.h"
-#include "OrgSkyscreamerJsonassertValueMatcher.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-
-@interface OrgSkyscreamerJsonassertCustomization () {
- @public
-  NSString *path_;
-  id<OrgSkyscreamerJsonassertValueMatcher> comparator_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertCustomization, path_, NSString *)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertCustomization, comparator_, id<OrgSkyscreamerJsonassertValueMatcher>)
-
-__attribute__((unused)) static IOSObjectArray *OrgSkyscreamerJsonassertCustomization__Annotations$0();
-
-@implementation OrgSkyscreamerJsonassertCustomization
-
-- (instancetype)initWithNSString:(NSString *)path
-withOrgSkyscreamerJsonassertValueMatcher:(id<OrgSkyscreamerJsonassertValueMatcher>)comparator {
-  OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(self, path, comparator);
-  return self;
-}
-
-+ (OrgSkyscreamerJsonassertCustomization *)customizationWithNSString:(NSString *)path
-                            withOrgSkyscreamerJsonassertValueMatcher:(id<OrgSkyscreamerJsonassertValueMatcher>)comparator {
-  return OrgSkyscreamerJsonassertCustomization_customizationWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(path, comparator);
-}
-
-- (jboolean)appliesToPathWithNSString:(NSString *)path {
-  return [((NSString *) nil_chk(self->path_)) isEqual:path];
-}
-
-- (jboolean)matchesWithId:(id)actual
-                   withId:(id)expected {
-  return [((id<OrgSkyscreamerJsonassertValueMatcher>) nil_chk(comparator_)) equalWithId:actual withId:expected];
-}
-
-- (jboolean)matchesWithNSString:(NSString *)prefix
-                         withId:(id)actual
-                         withId:(id)expected
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result {
-  if ([OrgSkyscreamerJsonassertLocationAwareValueMatcher_class_() isInstance:comparator_]) {
-    return [((id<OrgSkyscreamerJsonassertLocationAwareValueMatcher>) nil_chk(((id<OrgSkyscreamerJsonassertLocationAwareValueMatcher>) cast_check(comparator_, OrgSkyscreamerJsonassertLocationAwareValueMatcher_class_())))) equalWithNSString:prefix withId:actual withId:expected withOrgSkyscreamerJsonassertJSONCompareResult:result];
-  }
-  return [((id<OrgSkyscreamerJsonassertValueMatcher>) nil_chk(comparator_)) equalWithId:actual withId:expected];
-}
-
-- (void)dealloc {
-  RELEASE_(path_);
-  RELEASE_(comparator_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertCustomization;", 0x9, 2, 0, -1, 3, -1, -1 },
-    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 6, 7, -1, -1, 8, -1 },
-    { NULL, "Z", 0x1, 6, 9, 10, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withOrgSkyscreamerJsonassertValueMatcher:);
-  methods[1].selector = @selector(customizationWithNSString:withOrgSkyscreamerJsonassertValueMatcher:);
-  methods[2].selector = @selector(appliesToPathWithNSString:);
-  methods[3].selector = @selector(matchesWithId:withId:);
-  methods[4].selector = @selector(matchesWithNSString:withId:withId:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "path_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "comparator_", "LOrgSkyscreamerJsonassertValueMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;LOrgSkyscreamerJsonassertValueMatcher;", "(Ljava/lang/String;Lorg/skyscreamer/jsonassert/ValueMatcher<Ljava/lang/Object;>;)V", "customization", "(Ljava/lang/String;Lorg/skyscreamer/jsonassert/ValueMatcher<Ljava/lang/Object;>;)Lorg/skyscreamer/jsonassert/Customization;", "appliesToPath", "LNSString;", "matches", "LNSObject;LNSObject;", (void *)&OrgSkyscreamerJsonassertCustomization__Annotations$0, "LNSString;LNSObject;LNSObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "LOrgSkyscreamerJsonassertValueMatcherException;", "Lorg/skyscreamer/jsonassert/ValueMatcher<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertCustomization = { "Customization", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertCustomization;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(OrgSkyscreamerJsonassertCustomization *self, NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator) {
-  NSObject_init(self);
-  JreAssert((path != nil), (@"org/skyscreamer/jsonassert/Customization.java:11 condition failed: assert path != null;"));
-  JreAssert((comparator != nil), (@"org/skyscreamer/jsonassert/Customization.java:12 condition failed: assert comparator != null;"));
-  JreStrongAssign(&self->path_, path);
-  JreStrongAssign(&self->comparator_, comparator);
-}
-
-OrgSkyscreamerJsonassertCustomization *new_OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertCustomization, initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_, path, comparator)
-}
-
-OrgSkyscreamerJsonassertCustomization *create_OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertCustomization, initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_, path, comparator)
-}
-
-OrgSkyscreamerJsonassertCustomization *OrgSkyscreamerJsonassertCustomization_customizationWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(NSString *path, id<OrgSkyscreamerJsonassertValueMatcher> comparator) {
-  OrgSkyscreamerJsonassertCustomization_initialize();
-  return create_OrgSkyscreamerJsonassertCustomization_initWithNSString_withOrgSkyscreamerJsonassertValueMatcher_(path, comparator);
-}
-
-IOSObjectArray *OrgSkyscreamerJsonassertCustomization__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertCustomization)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertFieldComparisonFailure.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertFieldComparisonFailure.h
deleted file mode 100644
index f3ff6132b..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertFieldComparisonFailure.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertFieldComparisonFailure
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertFieldComparisonFailure
-
-#if !defined (OrgSkyscreamerJsonassertFieldComparisonFailure_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure || defined(INCLUDE_OrgSkyscreamerJsonassertFieldComparisonFailure))
-#define OrgSkyscreamerJsonassertFieldComparisonFailure_
-
-@interface OrgSkyscreamerJsonassertFieldComparisonFailure : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)field
-                          withId:(id)expected
-                          withId:(id)actual;
-
-- (id)getActual;
-
-- (id)getExpected;
-
-- (NSString *)getField;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertFieldComparisonFailure)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(OrgSkyscreamerJsonassertFieldComparisonFailure *self, NSString *field, id expected, id actual);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertFieldComparisonFailure *new_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(NSString *field, id expected, id actual) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertFieldComparisonFailure *create_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(NSString *field, id expected, id actual);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertFieldComparisonFailure)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertFieldComparisonFailure")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertFieldComparisonFailure.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertFieldComparisonFailure.m
deleted file mode 100644
index cd1ee4e9d..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertFieldComparisonFailure.m
+++ /dev/null
@@ -1,90 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertFieldComparisonFailure.h"
-
-@interface OrgSkyscreamerJsonassertFieldComparisonFailure () {
- @public
-  NSString *_field_;
-  id _expected_;
-  id _actual_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertFieldComparisonFailure, _field_, NSString *)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertFieldComparisonFailure, _expected_, id)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertFieldComparisonFailure, _actual_, id)
-
-@implementation OrgSkyscreamerJsonassertFieldComparisonFailure
-
-- (instancetype)initWithNSString:(NSString *)field
-                          withId:(id)expected
-                          withId:(id)actual {
-  OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(self, field, expected, actual);
-  return self;
-}
-
-- (NSString *)getField {
-  return _field_;
-}
-
-- (id)getExpected {
-  return _expected_;
-}
-
-- (id)getActual {
-  return _actual_;
-}
-
-- (void)dealloc {
-  RELEASE_(_field_);
-  RELEASE_(_expected_);
-  RELEASE_(_actual_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withId:withId:);
-  methods[1].selector = @selector(getField);
-  methods[2].selector = @selector(getExpected);
-  methods[3].selector = @selector(getActual);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "_field_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "_expected_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "_actual_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;LNSObject;LNSObject;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertFieldComparisonFailure = { "FieldComparisonFailure", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertFieldComparisonFailure;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(OrgSkyscreamerJsonassertFieldComparisonFailure *self, NSString *field, id expected, id actual) {
-  NSObject_init(self);
-  JreStrongAssign(&self->_field_, field);
-  JreStrongAssign(&self->_expected_, expected);
-  JreStrongAssign(&self->_actual_, actual);
-}
-
-OrgSkyscreamerJsonassertFieldComparisonFailure *new_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(NSString *field, id expected, id actual) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertFieldComparisonFailure, initWithNSString_withId_withId_, field, expected, actual)
-}
-
-OrgSkyscreamerJsonassertFieldComparisonFailure *create_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(NSString *field, id expected, id actual) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertFieldComparisonFailure, initWithNSString_withId_withId_, field, expected, actual)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertFieldComparisonFailure)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONAssert.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONAssert.h
deleted file mode 100644
index 706631e87..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONAssert.h
+++ /dev/null
@@ -1,167 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertJSONAssert
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertJSONAssert
-
-#if !defined (OrgSkyscreamerJsonassertJSONAssert_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert || defined(INCLUDE_OrgSkyscreamerJsonassertJSONAssert))
-#define OrgSkyscreamerJsonassertJSONAssert_
-
-@class OrgJsonJSONArray;
-@class OrgJsonJSONObject;
-@class OrgSkyscreamerJsonassertJSONCompareMode;
-@protocol OrgSkyscreamerJsonassertComparatorJSONComparator;
-
-@interface OrgSkyscreamerJsonassertJSONAssert : NSObject
-
-#pragma mark Public
-
-+ (void)assertEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                    withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                             withBoolean:(jboolean)strict;
-
-+ (void)assertEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                    withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                    withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                              withBoolean:(jboolean)strict;
-
-+ (void)assertEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                    withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-            withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                     withBoolean:(jboolean)strict;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-            withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-           withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                     withBoolean:(jboolean)strict;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-           withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-                    withNSString:(NSString *)actualStr
-                     withBoolean:(jboolean)strict;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-                    withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-                    withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertNotEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                       withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                                withBoolean:(jboolean)strict;
-
-+ (void)assertNotEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                       withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertNotEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                       withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                                 withBoolean:(jboolean)strict;
-
-+ (void)assertNotEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                       withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
- withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                        withBoolean:(jboolean)strict;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-              withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                        withBoolean:(jboolean)strict;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-              withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-                       withNSString:(NSString *)actualStr
-                        withBoolean:(jboolean)strict;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-                       withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-                       withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertJSONAssert)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(NSString *expectedStr, OrgJsonJSONObject *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(NSString *expectedStr, OrgJsonJSONObject *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(NSString *expectedStr, OrgJsonJSONArray *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(NSString *expectedStr, OrgJsonJSONArray *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withBoolean_(NSString *expectedStr, NSString *actualStr, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withBoolean_(NSString *expectedStr, NSString *actualStr, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, jboolean strict);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertJSONAssert)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONAssert")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONAssert.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONAssert.m
deleted file mode 100644
index 68c1f8b11..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONAssert.m
+++ /dev/null
@@ -1,398 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONComparator.h"
-#include "OrgSkyscreamerJsonassertJSONAssert.h"
-#include "OrgSkyscreamerJsonassertJSONCompare.h"
-#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "OrgSkyscreamerJsonassertJSONParser.h"
-#include "java/lang/AssertionError.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONObject.h"
-
-@interface OrgSkyscreamerJsonassertJSONAssert ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void OrgSkyscreamerJsonassertJSONAssert_init(OrgSkyscreamerJsonassertJSONAssert *self);
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONAssert *new_OrgSkyscreamerJsonassertJSONAssert_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONAssert *create_OrgSkyscreamerJsonassertJSONAssert_init();
-
-@implementation OrgSkyscreamerJsonassertJSONAssert
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertJSONAssert_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-           withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                     withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(expectedStr, actual, strict);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-              withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                        withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(expectedStr, actual, strict);
-}
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-           withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, compareMode);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-              withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, compareMode);
-}
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-            withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                     withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(expectedStr, actual, strict);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                        withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(expectedStr, actual, strict);
-}
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-            withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, compareMode);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-               withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, compareMode);
-}
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-                    withNSString:(NSString *)actualStr
-                     withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withBoolean_(expectedStr, actualStr, strict);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-                       withNSString:(NSString *)actualStr
-                        withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withBoolean_(expectedStr, actualStr, strict);
-}
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-                    withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, compareMode);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-                       withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, compareMode);
-}
-
-+ (void)assertEqualsWithNSString:(NSString *)expectedStr
-                    withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, comparator);
-}
-
-+ (void)assertNotEqualsWithNSString:(NSString *)expectedStr
-                       withNSString:(NSString *)actualStr
-withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, comparator);
-}
-
-+ (void)assertEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                    withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                              withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(expected, actual, strict);
-}
-
-+ (void)assertNotEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                       withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                                 withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(expected, actual, strict);
-}
-
-+ (void)assertEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                    withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-}
-
-+ (void)assertNotEqualsWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                       withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
- withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-}
-
-+ (void)assertEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                    withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                             withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(expected, actual, strict);
-}
-
-+ (void)assertNotEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                       withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                                withBoolean:(jboolean)strict {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(expected, actual, strict);
-}
-
-+ (void)assertEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                    withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-}
-
-+ (void)assertNotEqualsWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                       withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)compareMode {
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 1, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 4, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 4, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 5, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 5, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 6, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 6, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 7, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 7, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 8, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 8, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 9, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 9, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 10, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 10, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 11, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 11, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 12, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 12, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 0, 13, 2, -1, -1, -1 },
-    { NULL, "V", 0x9, 3, 13, 2, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(assertEqualsWithNSString:withOrgJsonJSONObject:withBoolean:);
-  methods[2].selector = @selector(assertNotEqualsWithNSString:withOrgJsonJSONObject:withBoolean:);
-  methods[3].selector = @selector(assertEqualsWithNSString:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[4].selector = @selector(assertNotEqualsWithNSString:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[5].selector = @selector(assertEqualsWithNSString:withOrgJsonJSONArray:withBoolean:);
-  methods[6].selector = @selector(assertNotEqualsWithNSString:withOrgJsonJSONArray:withBoolean:);
-  methods[7].selector = @selector(assertEqualsWithNSString:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[8].selector = @selector(assertNotEqualsWithNSString:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[9].selector = @selector(assertEqualsWithNSString:withNSString:withBoolean:);
-  methods[10].selector = @selector(assertNotEqualsWithNSString:withNSString:withBoolean:);
-  methods[11].selector = @selector(assertEqualsWithNSString:withNSString:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[12].selector = @selector(assertNotEqualsWithNSString:withNSString:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[13].selector = @selector(assertEqualsWithNSString:withNSString:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
-  methods[14].selector = @selector(assertNotEqualsWithNSString:withNSString:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
-  methods[15].selector = @selector(assertEqualsWithOrgJsonJSONObject:withOrgJsonJSONObject:withBoolean:);
-  methods[16].selector = @selector(assertNotEqualsWithOrgJsonJSONObject:withOrgJsonJSONObject:withBoolean:);
-  methods[17].selector = @selector(assertEqualsWithOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[18].selector = @selector(assertNotEqualsWithOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[19].selector = @selector(assertEqualsWithOrgJsonJSONArray:withOrgJsonJSONArray:withBoolean:);
-  methods[20].selector = @selector(assertNotEqualsWithOrgJsonJSONArray:withOrgJsonJSONArray:withBoolean:);
-  methods[21].selector = @selector(assertEqualsWithOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[22].selector = @selector(assertNotEqualsWithOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "assertEquals", "LNSString;LOrgJsonJSONObject;Z", "LOrgJsonJSONException;", "assertNotEquals", "LNSString;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareMode;", "LNSString;LOrgJsonJSONArray;Z", "LNSString;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareMode;", "LNSString;LNSString;Z", "LNSString;LNSString;LOrgSkyscreamerJsonassertJSONCompareMode;", "LNSString;LNSString;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LOrgJsonJSONObject;LOrgJsonJSONObject;Z", "LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareMode;", "LOrgJsonJSONArray;LOrgJsonJSONArray;Z", "LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareMode;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertJSONAssert = { "JSONAssert", "org.skyscreamer.jsonassert", ptrTable, methods, NULL, 7, 0x1, 23, 0, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertJSONAssert;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertJSONAssert_init(OrgSkyscreamerJsonassertJSONAssert *self) {
-  NSObject_init(self);
-}
-
-OrgSkyscreamerJsonassertJSONAssert *new_OrgSkyscreamerJsonassertJSONAssert_init() {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertJSONAssert, init)
-}
-
-OrgSkyscreamerJsonassertJSONAssert *create_OrgSkyscreamerJsonassertJSONAssert_init() {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertJSONAssert, init)
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(NSString *expectedStr, OrgJsonJSONObject *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withBoolean_(NSString *expectedStr, OrgJsonJSONObject *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  id expected = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(expectedStr);
-  if ([expected isKindOfClass:[OrgJsonJSONObject class]]) {
-    OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_((OrgJsonJSONObject *) cast_chk(expected, [OrgJsonJSONObject class]), actual, compareMode);
-  }
-  else {
-    @throw create_JavaLangAssertionError_initWithId_(@"Expecting a JSON array, but passing in a JSON object");
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  id expected = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(expectedStr);
-  if ([expected isKindOfClass:[OrgJsonJSONObject class]]) {
-    OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_((OrgJsonJSONObject *) cast_chk(expected, [OrgJsonJSONObject class]), actual, compareMode);
-  }
-  else {
-    @throw create_JavaLangAssertionError_initWithId_(@"Expecting a JSON array, but passing in a JSON object");
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(NSString *expectedStr, OrgJsonJSONArray *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withBoolean_(NSString *expectedStr, OrgJsonJSONArray *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  id expected = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(expectedStr);
-  if ([expected isKindOfClass:[OrgJsonJSONArray class]]) {
-    OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_((OrgJsonJSONArray *) cast_chk(expected, [OrgJsonJSONArray class]), actual, compareMode);
-  }
-  else {
-    @throw create_JavaLangAssertionError_initWithId_(@"Expecting a JSON object, but passing in a JSON array");
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  id expected = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(expectedStr);
-  if ([expected isKindOfClass:[OrgJsonJSONArray class]]) {
-    OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_((OrgJsonJSONArray *) cast_chk(expected, [OrgJsonJSONArray class]), actual, compareMode);
-  }
-  else {
-    @throw create_JavaLangAssertionError_initWithId_(@"Expecting a JSON object, but passing in a JSON array");
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withBoolean_(NSString *expectedStr, NSString *actualStr, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withBoolean_(NSString *expectedStr, NSString *actualStr, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, compareMode);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, compareMode);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) passed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, comparator);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, comparator);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) passed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withBoolean_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) passed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withBoolean_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, jboolean strict) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, strict ? JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreLoadEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT));
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) failed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-void OrgSkyscreamerJsonassertJSONAssert_assertNotEqualsWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *compareMode) {
-  OrgSkyscreamerJsonassertJSONAssert_initialize();
-  OrgSkyscreamerJsonassertJSONCompareResult *result = OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, compareMode);
-  if ([((OrgSkyscreamerJsonassertJSONCompareResult *) nil_chk(result)) passed]) {
-    @throw create_JavaLangAssertionError_initWithId_([result getMessage]);
-  }
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertJSONAssert)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompare.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompare.h
deleted file mode 100644
index a9b89bb65..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompare.h
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompare")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertJSONCompare
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompare 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompare 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertJSONCompare
-
-#if !defined (OrgSkyscreamerJsonassertJSONCompare_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompare || defined(INCLUDE_OrgSkyscreamerJsonassertJSONCompare))
-#define OrgSkyscreamerJsonassertJSONCompare_
-
-@class OrgJsonJSONArray;
-@class OrgJsonJSONObject;
-@class OrgSkyscreamerJsonassertJSONCompareMode;
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-@protocol OrgSkyscreamerJsonassertComparatorJSONComparator;
-
-@interface OrgSkyscreamerJsonassertJSONCompare : NSObject
-
-#pragma mark Public
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                          withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                                   withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                           withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                                    withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithNSString:(NSString *)expectedStr
-                                                          withNSString:(NSString *)actualStr
-                  withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator;
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithNSString:(NSString *)expectedStr
-                                                          withNSString:(NSString *)actualStr
-                           withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertJSONCompare)
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertJSONCompare)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompare")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompare.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompare.m
deleted file mode 100644
index 17998f715..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompare.m
+++ /dev/null
@@ -1,169 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertComparatorDefaultComparator.h"
-#include "OrgSkyscreamerJsonassertComparatorJSONComparator.h"
-#include "OrgSkyscreamerJsonassertJSONCompare.h"
-#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "OrgSkyscreamerJsonassertJSONParser.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONObject.h"
-
-@interface OrgSkyscreamerJsonassertJSONCompare ()
-
-- (instancetype)init;
-
-+ (id<OrgSkyscreamerJsonassertComparatorJSONComparator>)getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode;
-
-@end
-
-__attribute__((unused)) static void OrgSkyscreamerJsonassertJSONCompare_init(OrgSkyscreamerJsonassertJSONCompare *self);
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompare *new_OrgSkyscreamerJsonassertJSONCompare_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompare *create_OrgSkyscreamerJsonassertJSONCompare_init();
-
-__attribute__((unused)) static id<OrgSkyscreamerJsonassertComparatorJSONComparator> OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode);
-
-@implementation OrgSkyscreamerJsonassertJSONCompare
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertJSONCompare_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id<OrgSkyscreamerJsonassertComparatorJSONComparator>)getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
-  return OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode);
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithNSString:(NSString *)expectedStr
-                                                          withNSString:(NSString *)actualStr
-                  withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, comparator);
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                           withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, comparator);
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                          withOrgSkyscreamerJsonassertComparatorJSONComparator:(id<OrgSkyscreamerJsonassertComparatorJSONComparator>)comparator {
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, comparator);
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithNSString:(NSString *)expectedStr
-                                                          withNSString:(NSString *)actualStr
-                           withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(expectedStr, actualStr, mode);
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONObject:(OrgJsonJSONObject *)expected
-                                                          withOrgJsonJSONObject:(OrgJsonJSONObject *)actual
-                                    withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, mode);
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareResult *)compareJSONWithOrgJsonJSONArray:(OrgJsonJSONArray *)expected
-                                                          withOrgJsonJSONArray:(OrgJsonJSONArray *)actual
-                                   withOrgSkyscreamerJsonassertJSONCompareMode:(OrgSkyscreamerJsonassertJSONCompareMode *)mode {
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(expected, actual, mode);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertComparatorJSONComparator;", 0xa, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 3, 4, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 5, 4, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 6, 4, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 7, 4, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 8, 4, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x9, 2, 9, 4, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[2].selector = @selector(compareJSONWithNSString:withNSString:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
-  methods[3].selector = @selector(compareJSONWithOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
-  methods[4].selector = @selector(compareJSONWithOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertComparatorJSONComparator:);
-  methods[5].selector = @selector(compareJSONWithNSString:withNSString:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[6].selector = @selector(compareJSONWithOrgJsonJSONObject:withOrgJsonJSONObject:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  methods[7].selector = @selector(compareJSONWithOrgJsonJSONArray:withOrgJsonJSONArray:withOrgSkyscreamerJsonassertJSONCompareMode:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "getComparatorForMode", "LOrgSkyscreamerJsonassertJSONCompareMode;", "compareJSON", "LNSString;LNSString;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LOrgJsonJSONException;", "LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertComparatorJSONComparator;", "LNSString;LNSString;LOrgSkyscreamerJsonassertJSONCompareMode;", "LOrgJsonJSONObject;LOrgJsonJSONObject;LOrgSkyscreamerJsonassertJSONCompareMode;", "LOrgJsonJSONArray;LOrgJsonJSONArray;LOrgSkyscreamerJsonassertJSONCompareMode;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertJSONCompare = { "JSONCompare", "org.skyscreamer.jsonassert", ptrTable, methods, NULL, 7, 0x11, 8, 0, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertJSONCompare;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertJSONCompare_init(OrgSkyscreamerJsonassertJSONCompare *self) {
-  NSObject_init(self);
-}
-
-OrgSkyscreamerJsonassertJSONCompare *new_OrgSkyscreamerJsonassertJSONCompare_init() {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertJSONCompare, init)
-}
-
-OrgSkyscreamerJsonassertJSONCompare *create_OrgSkyscreamerJsonassertJSONCompare_init() {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertJSONCompare, init)
-}
-
-id<OrgSkyscreamerJsonassertComparatorJSONComparator> OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  return create_OrgSkyscreamerJsonassertComparatorDefaultComparator_initWithOrgSkyscreamerJsonassertJSONCompareMode_(mode);
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(NSString *expectedStr, NSString *actualStr, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  id expected = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(expectedStr);
-  id actual = OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(actualStr);
-  if (([expected isKindOfClass:[OrgJsonJSONObject class]]) && ([actual isKindOfClass:[OrgJsonJSONObject class]])) {
-    return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_((OrgJsonJSONObject *) cast_chk(expected, [OrgJsonJSONObject class]), (OrgJsonJSONObject *) cast_chk(actual, [OrgJsonJSONObject class]), comparator);
-  }
-  else if (([expected isKindOfClass:[OrgJsonJSONArray class]]) && ([actual isKindOfClass:[OrgJsonJSONArray class]])) {
-    return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_((OrgJsonJSONArray *) cast_chk(expected, [OrgJsonJSONArray class]), (OrgJsonJSONArray *) cast_chk(actual, [OrgJsonJSONArray class]), comparator);
-  }
-  else if ([expected isKindOfClass:[OrgJsonJSONObject class]]) {
-    return [create_OrgSkyscreamerJsonassertJSONCompareResult_init() failWithNSString:@"" withId:expected withId:actual];
-  }
-  else {
-    return [create_OrgSkyscreamerJsonassertJSONCompareResult_init() failWithNSString:@"" withId:expected withId:actual];
-  }
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  return [((id<OrgSkyscreamerJsonassertComparatorJSONComparator>) nil_chk(comparator)) compareJSONWithOrgJsonJSONObject:expected withOrgJsonJSONObject:actual];
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, id<OrgSkyscreamerJsonassertComparatorJSONComparator> comparator) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  return [((id<OrgSkyscreamerJsonassertComparatorJSONComparator>) nil_chk(comparator)) compareJSONWithOrgJsonJSONArray:expected withOrgJsonJSONArray:actual];
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertJSONCompareMode_(NSString *expectedStr, NSString *actualStr, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithNSString_withNSString_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expectedStr, actualStr, OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode));
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONObject *expected, OrgJsonJSONObject *actual, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONObject_withOrgJsonJSONObject_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode));
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertJSONCompareMode_(OrgJsonJSONArray *expected, OrgJsonJSONArray *actual, OrgSkyscreamerJsonassertJSONCompareMode *mode) {
-  OrgSkyscreamerJsonassertJSONCompare_initialize();
-  return OrgSkyscreamerJsonassertJSONCompare_compareJSONWithOrgJsonJSONArray_withOrgJsonJSONArray_withOrgSkyscreamerJsonassertComparatorJSONComparator_(expected, actual, OrgSkyscreamerJsonassertJSONCompare_getComparatorForModeWithOrgSkyscreamerJsonassertJSONCompareMode_(mode));
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertJSONCompare)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareMode.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareMode.h
deleted file mode 100644
index 0101de74e..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareMode.h
+++ /dev/null
@@ -1,80 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareMode")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertJSONCompareMode
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareMode 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareMode 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertJSONCompareMode
-
-#if !defined (OrgSkyscreamerJsonassertJSONCompareMode_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareMode || defined(INCLUDE_OrgSkyscreamerJsonassertJSONCompareMode))
-#define OrgSkyscreamerJsonassertJSONCompareMode_
-
-#define RESTRICT_JavaLangEnum 1
-#define INCLUDE_JavaLangEnum 1
-#include "java/lang/Enum.h"
-
-@class IOSObjectArray;
-
-typedef NS_ENUM(NSUInteger, OrgSkyscreamerJsonassertJSONCompareMode_Enum) {
-  OrgSkyscreamerJsonassertJSONCompareMode_Enum_STRICT = 0,
-  OrgSkyscreamerJsonassertJSONCompareMode_Enum_LENIENT = 1,
-  OrgSkyscreamerJsonassertJSONCompareMode_Enum_NON_EXTENSIBLE = 2,
-  OrgSkyscreamerJsonassertJSONCompareMode_Enum_STRICT_ORDER = 3,
-};
-
-@interface OrgSkyscreamerJsonassertJSONCompareMode : JavaLangEnum < NSCopying >
-
-#pragma mark Public
-
-- (jboolean)hasStrictOrder;
-
-- (jboolean)isExtensible;
-
-+ (OrgSkyscreamerJsonassertJSONCompareMode *)valueOfWithNSString:(NSString *)name;
-
-+ (IOSObjectArray *)values;
-
-- (OrgSkyscreamerJsonassertJSONCompareMode *)withExtensibleWithBoolean:(jboolean)extensible;
-
-- (OrgSkyscreamerJsonassertJSONCompareMode *)withStrictOrderingWithBoolean:(jboolean)strictOrdering;
-
-#pragma mark Package-Private
-
-- (id)copyWithZone:(NSZone *)zone;
-
-@end
-
-J2OBJC_STATIC_INIT(OrgSkyscreamerJsonassertJSONCompareMode)
-
-/*! INTERNAL ONLY - Use enum accessors declared below. */
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_values_[];
-
-inline OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_get_STRICT();
-J2OBJC_ENUM_CONSTANT(OrgSkyscreamerJsonassertJSONCompareMode, STRICT)
-
-inline OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_get_LENIENT();
-J2OBJC_ENUM_CONSTANT(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT)
-
-inline OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_get_NON_EXTENSIBLE();
-J2OBJC_ENUM_CONSTANT(OrgSkyscreamerJsonassertJSONCompareMode, NON_EXTENSIBLE)
-
-inline OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_get_STRICT_ORDER();
-J2OBJC_ENUM_CONSTANT(OrgSkyscreamerJsonassertJSONCompareMode, STRICT_ORDER)
-
-FOUNDATION_EXPORT IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareMode_values();
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_valueOfWithNSString_(NSString *name);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_fromOrdinal(NSUInteger ordinal);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertJSONCompareMode)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareMode")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareMode.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareMode.m
deleted file mode 100644
index 623022ad5..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareMode.m
+++ /dev/null
@@ -1,147 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertJSONCompareMode.h"
-#include "java/lang/Enum.h"
-#include "java/lang/IllegalArgumentException.h"
-
-@interface OrgSkyscreamerJsonassertJSONCompareMode () {
- @public
-  jboolean _extensible_;
-  jboolean _strictOrder_;
-}
-
-@end
-
-__attribute__((unused)) static void OrgSkyscreamerJsonassertJSONCompareMode_initWithBoolean_withBoolean_withNSString_withInt_(OrgSkyscreamerJsonassertJSONCompareMode *self, jboolean extensible, jboolean strictOrder, NSString *__name, jint __ordinal);
-
-J2OBJC_INITIALIZED_DEFN(OrgSkyscreamerJsonassertJSONCompareMode)
-
-OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_values_[4];
-
-@implementation OrgSkyscreamerJsonassertJSONCompareMode
-
-- (jboolean)isExtensible {
-  return _extensible_;
-}
-
-- (jboolean)hasStrictOrder {
-  return _strictOrder_;
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareMode *)withStrictOrderingWithBoolean:(jboolean)strictOrdering {
-  if (strictOrdering) {
-    return [self isExtensible] ? JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT_ORDER) : JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT);
-  }
-  else {
-    return [self isExtensible] ? JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT) : JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, NON_EXTENSIBLE);
-  }
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareMode *)withExtensibleWithBoolean:(jboolean)extensible {
-  if (extensible) {
-    return [self hasStrictOrder] ? JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT_ORDER) : JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT);
-  }
-  else {
-    return [self hasStrictOrder] ? JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) : JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, NON_EXTENSIBLE);
-  }
-}
-
-+ (IOSObjectArray *)values {
-  return OrgSkyscreamerJsonassertJSONCompareMode_values();
-}
-
-+ (OrgSkyscreamerJsonassertJSONCompareMode *)valueOfWithNSString:(NSString *)name {
-  return OrgSkyscreamerJsonassertJSONCompareMode_valueOfWithNSString_(name);
-}
-
-- (id)copyWithZone:(NSZone *)zone {
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareMode;", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareMode;", 0x1, 2, 1, -1, -1, -1, -1 },
-    { NULL, "[LOrgSkyscreamerJsonassertJSONCompareMode;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareMode;", 0x9, 3, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(isExtensible);
-  methods[1].selector = @selector(hasStrictOrder);
-  methods[2].selector = @selector(withStrictOrderingWithBoolean:);
-  methods[3].selector = @selector(withExtensibleWithBoolean:);
-  methods[4].selector = @selector(values);
-  methods[5].selector = @selector(valueOfWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "STRICT", "LOrgSkyscreamerJsonassertJSONCompareMode;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
-    { "LENIENT", "LOrgSkyscreamerJsonassertJSONCompareMode;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
-    { "NON_EXTENSIBLE", "LOrgSkyscreamerJsonassertJSONCompareMode;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
-    { "STRICT_ORDER", "LOrgSkyscreamerJsonassertJSONCompareMode;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
-    { "_extensible_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "_strictOrder_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "withStrictOrdering", "Z", "withExtensible", "valueOf", "LNSString;", &JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT), &JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT), &JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, NON_EXTENSIBLE), &JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT_ORDER), "Ljava/lang/Enum<Lorg/skyscreamer/jsonassert/JSONCompareMode;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertJSONCompareMode = { "JSONCompareMode", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x4011, 6, 6, -1, -1, -1, 9, -1 };
-  return &_OrgSkyscreamerJsonassertJSONCompareMode;
-}
-
-+ (void)initialize {
-  if (self == [OrgSkyscreamerJsonassertJSONCompareMode class]) {
-    size_t objSize = class_getInstanceSize(self);
-    size_t allocSize = 4 * objSize;
-    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
-    id e;
-    (JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    OrgSkyscreamerJsonassertJSONCompareMode_initWithBoolean_withBoolean_withNSString_withInt_(e, false, true, @"STRICT", 0);
-    (JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, LENIENT) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    OrgSkyscreamerJsonassertJSONCompareMode_initWithBoolean_withBoolean_withNSString_withInt_(e, true, false, @"LENIENT", 1);
-    (JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, NON_EXTENSIBLE) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    OrgSkyscreamerJsonassertJSONCompareMode_initWithBoolean_withBoolean_withNSString_withInt_(e, false, false, @"NON_EXTENSIBLE", 2);
-    (JreEnum(OrgSkyscreamerJsonassertJSONCompareMode, STRICT_ORDER) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
-    OrgSkyscreamerJsonassertJSONCompareMode_initWithBoolean_withBoolean_withNSString_withInt_(e, true, true, @"STRICT_ORDER", 3);
-    J2OBJC_SET_INITIALIZED(OrgSkyscreamerJsonassertJSONCompareMode)
-  }
-}
-
-@end
-
-void OrgSkyscreamerJsonassertJSONCompareMode_initWithBoolean_withBoolean_withNSString_withInt_(OrgSkyscreamerJsonassertJSONCompareMode *self, jboolean extensible, jboolean strictOrder, NSString *__name, jint __ordinal) {
-  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
-  self->_extensible_ = extensible;
-  self->_strictOrder_ = strictOrder;
-}
-
-IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareMode_values() {
-  OrgSkyscreamerJsonassertJSONCompareMode_initialize();
-  return [IOSObjectArray arrayWithObjects:OrgSkyscreamerJsonassertJSONCompareMode_values_ count:4 type:OrgSkyscreamerJsonassertJSONCompareMode_class_()];
-}
-
-OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_valueOfWithNSString_(NSString *name) {
-  OrgSkyscreamerJsonassertJSONCompareMode_initialize();
-  for (int i = 0; i < 4; i++) {
-    OrgSkyscreamerJsonassertJSONCompareMode *e = OrgSkyscreamerJsonassertJSONCompareMode_values_[i];
-    if ([name isEqual:[e name]]) {
-      return e;
-    }
-  }
-  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
-  return nil;
-}
-
-OrgSkyscreamerJsonassertJSONCompareMode *OrgSkyscreamerJsonassertJSONCompareMode_fromOrdinal(NSUInteger ordinal) {
-  OrgSkyscreamerJsonassertJSONCompareMode_initialize();
-  if (ordinal >= 4) {
-    return nil;
-  }
-  return OrgSkyscreamerJsonassertJSONCompareMode_values_[ordinal];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertJSONCompareMode)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareResult.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareResult.h
deleted file mode 100644
index 538bd8739..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareResult.h
+++ /dev/null
@@ -1,82 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareResult")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertJSONCompareResult
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareResult 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareResult 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertJSONCompareResult
-
-#if !defined (OrgSkyscreamerJsonassertJSONCompareResult_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareResult || defined(INCLUDE_OrgSkyscreamerJsonassertJSONCompareResult))
-#define OrgSkyscreamerJsonassertJSONCompareResult_
-
-@class OrgSkyscreamerJsonassertValueMatcherException;
-@protocol JavaUtilList;
-
-@interface OrgSkyscreamerJsonassertJSONCompareResult : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)failWithNSString:(NSString *)message;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)failWithNSString:(NSString *)field
-                                                         withId:(id)expected
-                                                         withId:(id)actual;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)failWithNSString:(NSString *)field
-              withOrgSkyscreamerJsonassertValueMatcherException:(OrgSkyscreamerJsonassertValueMatcherException *)exception;
-
-- (jboolean)failed;
-
-- (id)getActual;
-
-- (id)getExpected;
-
-- (NSString *)getField;
-
-- (id<JavaUtilList>)getFieldFailures;
-
-- (id<JavaUtilList>)getFieldMissing;
-
-- (id<JavaUtilList>)getFieldUnexpected;
-
-- (NSString *)getMessage;
-
-- (jboolean)isFailureOnField;
-
-- (jboolean)isMissingOnField;
-
-- (jboolean)isUnexpectedOnField;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)missingWithNSString:(NSString *)field
-                                                            withId:(id)expected;
-
-- (jboolean)passed;
-
-- (NSString *)description;
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)unexpectedWithNSString:(NSString *)field
-                                                               withId:(id)value;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertJSONCompareResult)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertJSONCompareResult_init(OrgSkyscreamerJsonassertJSONCompareResult *self);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *new_OrgSkyscreamerJsonassertJSONCompareResult_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertJSONCompareResult *create_OrgSkyscreamerJsonassertJSONCompareResult_init();
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertJSONCompareResult)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONCompareResult")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareResult.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareResult.m
deleted file mode 100644
index 4c7bc521b..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONCompareResult.m
+++ /dev/null
@@ -1,353 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertFieldComparisonFailure.h"
-#include "OrgSkyscreamerJsonassertJSONCompareResult.h"
-#include "OrgSkyscreamerJsonassertValueMatcherException.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collections.h"
-#include "java/util/List.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONObject.h"
-
-@interface OrgSkyscreamerJsonassertJSONCompareResult () {
- @public
-  jboolean _success_;
-  JavaLangStringBuilder *_message_;
-  NSString *_field_;
-  id _expected_;
-  id _actual_;
-  id<JavaUtilList> _fieldFailures_;
-  id<JavaUtilList> _fieldMissing_;
-  id<JavaUtilList> _fieldUnexpected_;
-}
-
-- (instancetype)initWithBoolean:(jboolean)success
-                   withNSString:(NSString *)message;
-
-- (NSString *)formatFailureMessageWithNSString:(NSString *)field
-                                        withId:(id)expected
-                                        withId:(id)actual;
-
-- (NSString *)formatMissingWithNSString:(NSString *)field
-                                 withId:(id)expected;
-
-- (NSString *)formatUnexpectedWithNSString:(NSString *)field
-                                    withId:(id)value;
-
-+ (NSString *)describeWithId:(id)value;
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _message_, JavaLangStringBuilder *)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _field_, NSString *)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _expected_, id)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _actual_, id)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _fieldFailures_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _fieldMissing_, id<JavaUtilList>)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertJSONCompareResult, _fieldUnexpected_, id<JavaUtilList>)
-
-__attribute__((unused)) static void OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(OrgSkyscreamerJsonassertJSONCompareResult *self, jboolean success, NSString *message);
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompareResult *new_OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(jboolean success, NSString *message) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONCompareResult *create_OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(jboolean success, NSString *message);
-
-__attribute__((unused)) static NSString *OrgSkyscreamerJsonassertJSONCompareResult_formatFailureMessageWithNSString_withId_withId_(OrgSkyscreamerJsonassertJSONCompareResult *self, NSString *field, id expected, id actual);
-
-__attribute__((unused)) static NSString *OrgSkyscreamerJsonassertJSONCompareResult_formatMissingWithNSString_withId_(OrgSkyscreamerJsonassertJSONCompareResult *self, NSString *field, id expected);
-
-__attribute__((unused)) static NSString *OrgSkyscreamerJsonassertJSONCompareResult_formatUnexpectedWithNSString_withId_(OrgSkyscreamerJsonassertJSONCompareResult *self, NSString *field, id value);
-
-__attribute__((unused)) static NSString *OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(id value);
-
-__attribute__((unused)) static IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareResult__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareResult__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareResult__Annotations$2();
-
-@implementation OrgSkyscreamerJsonassertJSONCompareResult
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertJSONCompareResult_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithBoolean:(jboolean)success
-                   withNSString:(NSString *)message {
-  OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(self, success, message);
-  return self;
-}
-
-- (jboolean)passed {
-  return _success_;
-}
-
-- (jboolean)failed {
-  return !_success_;
-}
-
-- (NSString *)getMessage {
-  return [((JavaLangStringBuilder *) nil_chk(_message_)) description];
-}
-
-- (id<JavaUtilList>)getFieldFailures {
-  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(_fieldFailures_);
-}
-
-- (id<JavaUtilList>)getFieldMissing {
-  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(_fieldMissing_);
-}
-
-- (id<JavaUtilList>)getFieldUnexpected {
-  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(_fieldUnexpected_);
-}
-
-- (id)getActual {
-  return _actual_;
-}
-
-- (id)getExpected {
-  return _expected_;
-}
-
-- (jboolean)isFailureOnField {
-  return ![((id<JavaUtilList>) nil_chk(_fieldFailures_)) isEmpty];
-}
-
-- (jboolean)isMissingOnField {
-  return ![((id<JavaUtilList>) nil_chk(_fieldMissing_)) isEmpty];
-}
-
-- (jboolean)isUnexpectedOnField {
-  return ![((id<JavaUtilList>) nil_chk(_fieldUnexpected_)) isEmpty];
-}
-
-- (NSString *)getField {
-  return _field_;
-}
-
-- (void)failWithNSString:(NSString *)message {
-  _success_ = false;
-  if ([((JavaLangStringBuilder *) nil_chk(_message_)) length] == 0) {
-    [((JavaLangStringBuilder *) nil_chk(_message_)) appendWithNSString:message];
-  }
-  else {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(_message_)) appendWithNSString:@" ; "])) appendWithNSString:message];
-  }
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)failWithNSString:(NSString *)field
-                                                         withId:(id)expected
-                                                         withId:(id)actual {
-  [((id<JavaUtilList>) nil_chk(_fieldFailures_)) addWithId:create_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(field, expected, actual)];
-  JreStrongAssign(&self->_field_, field);
-  JreStrongAssign(&self->_expected_, expected);
-  JreStrongAssign(&self->_actual_, actual);
-  [self failWithNSString:OrgSkyscreamerJsonassertJSONCompareResult_formatFailureMessageWithNSString_withId_withId_(self, field, expected, actual)];
-  return self;
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)failWithNSString:(NSString *)field
-              withOrgSkyscreamerJsonassertValueMatcherException:(OrgSkyscreamerJsonassertValueMatcherException *)exception {
-  [self failWithNSString:JreStrcat("$$$", field, @": ", [((OrgSkyscreamerJsonassertValueMatcherException *) nil_chk(exception)) getMessage]) withId:[exception getExpected] withId:[exception getActual]];
-  return self;
-}
-
-- (NSString *)formatFailureMessageWithNSString:(NSString *)field
-                                        withId:(id)expected
-                                        withId:(id)actual {
-  return OrgSkyscreamerJsonassertJSONCompareResult_formatFailureMessageWithNSString_withId_withId_(self, field, expected, actual);
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)missingWithNSString:(NSString *)field
-                                                            withId:(id)expected {
-  [((id<JavaUtilList>) nil_chk(_fieldMissing_)) addWithId:create_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(field, expected, nil)];
-  [self failWithNSString:OrgSkyscreamerJsonassertJSONCompareResult_formatMissingWithNSString_withId_(self, field, expected)];
-  return self;
-}
-
-- (NSString *)formatMissingWithNSString:(NSString *)field
-                                 withId:(id)expected {
-  return OrgSkyscreamerJsonassertJSONCompareResult_formatMissingWithNSString_withId_(self, field, expected);
-}
-
-- (OrgSkyscreamerJsonassertJSONCompareResult *)unexpectedWithNSString:(NSString *)field
-                                                               withId:(id)value {
-  [((id<JavaUtilList>) nil_chk(_fieldUnexpected_)) addWithId:create_OrgSkyscreamerJsonassertFieldComparisonFailure_initWithNSString_withId_withId_(field, nil, value)];
-  [self failWithNSString:OrgSkyscreamerJsonassertJSONCompareResult_formatUnexpectedWithNSString_withId_(self, field, value)];
-  return self;
-}
-
-- (NSString *)formatUnexpectedWithNSString:(NSString *)field
-                                    withId:(id)value {
-  return OrgSkyscreamerJsonassertJSONCompareResult_formatUnexpectedWithNSString_withId_(self, field, value);
-}
-
-+ (NSString *)describeWithId:(id)value {
-  return OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(value);
-}
-
-- (NSString *)description {
-  return [((JavaLangStringBuilder *) nil_chk(_message_)) description];
-}
-
-- (void)dealloc {
-  RELEASE_(_message_);
-  RELEASE_(_field_);
-  RELEASE_(_expected_);
-  RELEASE_(_actual_);
-  RELEASE_(_fieldFailures_);
-  RELEASE_(_fieldMissing_);
-  RELEASE_(_fieldUnexpected_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, 2, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, 3, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, 4, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x1, 5, 7, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x1, 5, 8, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 9, 7, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 12, 11, -1, -1, -1, -1 },
-    { NULL, "LOrgSkyscreamerJsonassertJSONCompareResult;", 0x1, 13, 11, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 14, 11, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 15, 16, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithBoolean:withNSString:);
-  methods[2].selector = @selector(passed);
-  methods[3].selector = @selector(failed);
-  methods[4].selector = @selector(getMessage);
-  methods[5].selector = @selector(getFieldFailures);
-  methods[6].selector = @selector(getFieldMissing);
-  methods[7].selector = @selector(getFieldUnexpected);
-  methods[8].selector = @selector(getActual);
-  methods[9].selector = @selector(getExpected);
-  methods[10].selector = @selector(isFailureOnField);
-  methods[11].selector = @selector(isMissingOnField);
-  methods[12].selector = @selector(isUnexpectedOnField);
-  methods[13].selector = @selector(getField);
-  methods[14].selector = @selector(failWithNSString:);
-  methods[15].selector = @selector(failWithNSString:withId:withId:);
-  methods[16].selector = @selector(failWithNSString:withOrgSkyscreamerJsonassertValueMatcherException:);
-  methods[17].selector = @selector(formatFailureMessageWithNSString:withId:withId:);
-  methods[18].selector = @selector(missingWithNSString:withId:);
-  methods[19].selector = @selector(formatMissingWithNSString:withId:);
-  methods[20].selector = @selector(unexpectedWithNSString:withId:);
-  methods[21].selector = @selector(formatUnexpectedWithNSString:withId:);
-  methods[22].selector = @selector(describeWithId:);
-  methods[23].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "_success_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "_message_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "_field_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "_expected_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "_actual_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-    { "_fieldFailures_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 18, -1 },
-    { "_fieldMissing_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 18, -1 },
-    { "_fieldUnexpected_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 18, -1 },
-  };
-  static const void *ptrTable[] = { "ZLNSString;", "()Ljava/util/List<Lorg/skyscreamer/jsonassert/FieldComparisonFailure;>;", (void *)&OrgSkyscreamerJsonassertJSONCompareResult__Annotations$0, (void *)&OrgSkyscreamerJsonassertJSONCompareResult__Annotations$1, (void *)&OrgSkyscreamerJsonassertJSONCompareResult__Annotations$2, "fail", "LNSString;", "LNSString;LNSObject;LNSObject;", "LNSString;LOrgSkyscreamerJsonassertValueMatcherException;", "formatFailureMessage", "missing", "LNSString;LNSObject;", "formatMissing", "unexpected", "formatUnexpected", "describe", "LNSObject;", "toString", "Ljava/util/List<Lorg/skyscreamer/jsonassert/FieldComparisonFailure;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertJSONCompareResult = { "JSONCompareResult", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x1, 24, 8, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertJSONCompareResult;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertJSONCompareResult_init(OrgSkyscreamerJsonassertJSONCompareResult *self) {
-  OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(self, true, nil);
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *new_OrgSkyscreamerJsonassertJSONCompareResult_init() {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertJSONCompareResult, init)
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *create_OrgSkyscreamerJsonassertJSONCompareResult_init() {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertJSONCompareResult, init)
-}
-
-void OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(OrgSkyscreamerJsonassertJSONCompareResult *self, jboolean success, NSString *message) {
-  NSObject_init(self);
-  JreStrongAssignAndConsume(&self->_fieldFailures_, new_JavaUtilArrayList_init());
-  JreStrongAssignAndConsume(&self->_fieldMissing_, new_JavaUtilArrayList_init());
-  JreStrongAssignAndConsume(&self->_fieldUnexpected_, new_JavaUtilArrayList_init());
-  self->_success_ = success;
-  JreStrongAssignAndConsume(&self->_message_, new_JavaLangStringBuilder_initWithNSString_(message == nil ? @"" : message));
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *new_OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(jboolean success, NSString *message) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertJSONCompareResult, initWithBoolean_withNSString_, success, message)
-}
-
-OrgSkyscreamerJsonassertJSONCompareResult *create_OrgSkyscreamerJsonassertJSONCompareResult_initWithBoolean_withNSString_(jboolean success, NSString *message) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertJSONCompareResult, initWithBoolean_withNSString_, success, message)
-}
-
-NSString *OrgSkyscreamerJsonassertJSONCompareResult_formatFailureMessageWithNSString_withId_withId_(OrgSkyscreamerJsonassertJSONCompareResult *self, NSString *field, id expected, id actual) {
-  return JreStrcat("$$$$$C", field, @"\nExpected: ", OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(expected), @"\n     got: ", OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(actual), 0x000a);
-}
-
-NSString *OrgSkyscreamerJsonassertJSONCompareResult_formatMissingWithNSString_withId_(OrgSkyscreamerJsonassertJSONCompareResult *self, NSString *field, id expected) {
-  return JreStrcat("$$$$", field, @"\nExpected: ", OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(expected), @"\n     but none found\n");
-}
-
-NSString *OrgSkyscreamerJsonassertJSONCompareResult_formatUnexpectedWithNSString_withId_(OrgSkyscreamerJsonassertJSONCompareResult *self, NSString *field, id value) {
-  return JreStrcat("$$$C", field, @"\nUnexpected: ", OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(value), 0x000a);
-}
-
-NSString *OrgSkyscreamerJsonassertJSONCompareResult_describeWithId_(id value) {
-  OrgSkyscreamerJsonassertJSONCompareResult_initialize();
-  if ([value isKindOfClass:[OrgJsonJSONArray class]]) {
-    return @"a JSON array";
-  }
-  else if ([value isKindOfClass:[OrgJsonJSONObject class]]) {
-    return @"a JSON object";
-  }
-  else {
-    return [nil_chk(value) description];
-  }
-}
-
-IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareResult__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareResult__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *OrgSkyscreamerJsonassertJSONCompareResult__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertJSONCompareResult)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONParser.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONParser.h
deleted file mode 100644
index 049c3b448..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONParser.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONParser")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertJSONParser
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONParser 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertJSONParser 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertJSONParser
-
-#if !defined (OrgSkyscreamerJsonassertJSONParser_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertJSONParser || defined(INCLUDE_OrgSkyscreamerJsonassertJSONParser))
-#define OrgSkyscreamerJsonassertJSONParser_
-
-@interface OrgSkyscreamerJsonassertJSONParser : NSObject
-
-#pragma mark Public
-
-+ (id)parseJSONWithNSString:(NSString *)s;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertJSONParser)
-
-FOUNDATION_EXPORT id OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(NSString *s);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertJSONParser)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertJSONParser")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONParser.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONParser.m
deleted file mode 100644
index 9a3b4c2ad..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertJSONParser.m
+++ /dev/null
@@ -1,83 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertJSONParser.h"
-#include "org/json/JSONArray.h"
-#include "org/json/JSONException.h"
-#include "org/json/JSONObject.h"
-
-@interface OrgSkyscreamerJsonassertJSONParser ()
-
-- (instancetype)init;
-
-@end
-
-inline NSString *OrgSkyscreamerJsonassertJSONParser_get_NUMBER_REGEX();
-static NSString *OrgSkyscreamerJsonassertJSONParser_NUMBER_REGEX = @"-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSkyscreamerJsonassertJSONParser, NUMBER_REGEX, NSString *)
-
-__attribute__((unused)) static void OrgSkyscreamerJsonassertJSONParser_init(OrgSkyscreamerJsonassertJSONParser *self);
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONParser *new_OrgSkyscreamerJsonassertJSONParser_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static OrgSkyscreamerJsonassertJSONParser *create_OrgSkyscreamerJsonassertJSONParser_init();
-
-@implementation OrgSkyscreamerJsonassertJSONParser
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertJSONParser_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id)parseJSONWithNSString:(NSString *)s {
-  return OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(s);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x9, 0, 1, 2, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(parseJSONWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "NUMBER_REGEX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
-  };
-  static const void *ptrTable[] = { "parseJSON", "LNSString;", "LOrgJsonJSONException;", &OrgSkyscreamerJsonassertJSONParser_NUMBER_REGEX };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertJSONParser = { "JSONParser", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertJSONParser;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertJSONParser_init(OrgSkyscreamerJsonassertJSONParser *self) {
-  NSObject_init(self);
-}
-
-OrgSkyscreamerJsonassertJSONParser *new_OrgSkyscreamerJsonassertJSONParser_init() {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertJSONParser, init)
-}
-
-OrgSkyscreamerJsonassertJSONParser *create_OrgSkyscreamerJsonassertJSONParser_init() {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertJSONParser, init)
-}
-
-id OrgSkyscreamerJsonassertJSONParser_parseJSONWithNSString_(NSString *s) {
-  OrgSkyscreamerJsonassertJSONParser_initialize();
-  if ([((NSString *) nil_chk([((NSString *) nil_chk(s)) java_trim])) hasPrefix:@"{"]) {
-    return create_OrgJsonJSONObject_initWithNSString_(s);
-  }
-  else if ([((NSString *) nil_chk([s java_trim])) hasPrefix:@"["]) {
-    return create_OrgJsonJSONArray_initWithNSString_(s);
-  }
-  @throw create_OrgJsonJSONException_initWithNSString_(JreStrcat("$$", @"Unparsable JSON string: ", s));
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertJSONParser)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertLocationAwareValueMatcher.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertLocationAwareValueMatcher.h
deleted file mode 100644
index 91ae20521..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertLocationAwareValueMatcher.h
+++ /dev/null
@@ -1,39 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertLocationAwareValueMatcher")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertLocationAwareValueMatcher
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertLocationAwareValueMatcher 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertLocationAwareValueMatcher 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertLocationAwareValueMatcher
-
-#if !defined (OrgSkyscreamerJsonassertLocationAwareValueMatcher_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertLocationAwareValueMatcher || defined(INCLUDE_OrgSkyscreamerJsonassertLocationAwareValueMatcher))
-#define OrgSkyscreamerJsonassertLocationAwareValueMatcher_
-
-#define RESTRICT_OrgSkyscreamerJsonassertValueMatcher 1
-#define INCLUDE_OrgSkyscreamerJsonassertValueMatcher 1
-#include "OrgSkyscreamerJsonassertValueMatcher.h"
-
-@class OrgSkyscreamerJsonassertJSONCompareResult;
-
-@protocol OrgSkyscreamerJsonassertLocationAwareValueMatcher < OrgSkyscreamerJsonassertValueMatcher, JavaObject >
-
-- (jboolean)equalWithNSString:(NSString *)prefix
-                       withId:(id)actual
-                       withId:(id)expected
-withOrgSkyscreamerJsonassertJSONCompareResult:(OrgSkyscreamerJsonassertJSONCompareResult *)result;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertLocationAwareValueMatcher)
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertLocationAwareValueMatcher)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertLocationAwareValueMatcher")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertLocationAwareValueMatcher.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertLocationAwareValueMatcher.m
deleted file mode 100644
index dcc246810..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertLocationAwareValueMatcher.m
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertLocationAwareValueMatcher.h"
-
-@interface OrgSkyscreamerJsonassertLocationAwareValueMatcher : NSObject
-
-@end
-
-@implementation OrgSkyscreamerJsonassertLocationAwareValueMatcher
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "Z", 0x401, 0, 1, 2, 3, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(equalWithNSString:withId:withId:withOrgSkyscreamerJsonassertJSONCompareResult:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "equal", "LNSString;LNSObject;LNSObject;LOrgSkyscreamerJsonassertJSONCompareResult;", "LOrgSkyscreamerJsonassertValueMatcherException;", "(Ljava/lang/String;TT;TT;Lorg/skyscreamer/jsonassert/JSONCompareResult;)Z", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/skyscreamer/jsonassert/ValueMatcher<TT;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertLocationAwareValueMatcher = { "LocationAwareValueMatcher", "org.skyscreamer.jsonassert", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, 4, -1 };
-  return &_OrgSkyscreamerJsonassertLocationAwareValueMatcher;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertLocationAwareValueMatcher)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertRegularExpressionValueMatcher.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertRegularExpressionValueMatcher.h
deleted file mode 100644
index 30454478f..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertRegularExpressionValueMatcher.h
+++ /dev/null
@@ -1,53 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertRegularExpressionValueMatcher")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertRegularExpressionValueMatcher
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertRegularExpressionValueMatcher 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertRegularExpressionValueMatcher 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertRegularExpressionValueMatcher
-
-#if !defined (OrgSkyscreamerJsonassertRegularExpressionValueMatcher_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertRegularExpressionValueMatcher || defined(INCLUDE_OrgSkyscreamerJsonassertRegularExpressionValueMatcher))
-#define OrgSkyscreamerJsonassertRegularExpressionValueMatcher_
-
-#define RESTRICT_OrgSkyscreamerJsonassertValueMatcher 1
-#define INCLUDE_OrgSkyscreamerJsonassertValueMatcher 1
-#include "OrgSkyscreamerJsonassertValueMatcher.h"
-
-@interface OrgSkyscreamerJsonassertRegularExpressionValueMatcher : NSObject < OrgSkyscreamerJsonassertValueMatcher >
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithNSString:(NSString *)pattern;
-
-- (jboolean)equalWithId:(id)actual
-                 withId:(id)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertRegularExpressionValueMatcher)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertRegularExpressionValueMatcher *new_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertRegularExpressionValueMatcher *create_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init();
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self, NSString *pattern);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertRegularExpressionValueMatcher *new_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(NSString *pattern) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertRegularExpressionValueMatcher *create_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(NSString *pattern);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertRegularExpressionValueMatcher)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertRegularExpressionValueMatcher")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertRegularExpressionValueMatcher.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertRegularExpressionValueMatcher.m
deleted file mode 100644
index d0d1e24d6..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertRegularExpressionValueMatcher.m
+++ /dev/null
@@ -1,137 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertRegularExpressionValueMatcher.h"
-#include "OrgSkyscreamerJsonassertValueMatcherException.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-#include "java/util/regex/PatternSyntaxException.h"
-
-@interface OrgSkyscreamerJsonassertRegularExpressionValueMatcher () {
- @public
-  JavaUtilRegexPattern *expectedPattern_;
-}
-
-- (jboolean)isStaticPattern;
-
-- (NSString *)getPatternType;
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertRegularExpressionValueMatcher, expectedPattern_, JavaUtilRegexPattern *)
-
-__attribute__((unused)) static jboolean OrgSkyscreamerJsonassertRegularExpressionValueMatcher_isStaticPattern(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self);
-
-__attribute__((unused)) static NSString *OrgSkyscreamerJsonassertRegularExpressionValueMatcher_getPatternType(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self);
-
-@implementation OrgSkyscreamerJsonassertRegularExpressionValueMatcher
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithNSString:(NSString *)pattern {
-  OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(self, pattern);
-  return self;
-}
-
-- (jboolean)equalWithId:(id)actual
-                 withId:(id)expected {
-  NSString *actualString = [nil_chk(actual) description];
-  NSString *expectedString = [nil_chk(expected) description];
-  @try {
-    JavaUtilRegexPattern *pattern = OrgSkyscreamerJsonassertRegularExpressionValueMatcher_isStaticPattern(self) ? expectedPattern_ : JavaUtilRegexPattern_compileWithNSString_(expectedString);
-    if (![((JavaUtilRegexMatcher *) nil_chk([pattern matcherWithJavaLangCharSequence:actualString])) matches]) {
-      @throw create_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(JreStrcat("$$", OrgSkyscreamerJsonassertRegularExpressionValueMatcher_getPatternType(self), @" expected pattern did not match value"), [pattern description], actualString);
-    }
-  }
-  @catch (JavaUtilRegexPatternSyntaxException *e) {
-    @throw create_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(JreStrcat("$$$", OrgSkyscreamerJsonassertRegularExpressionValueMatcher_getPatternType(self), @" expected pattern invalid: ", [((JavaUtilRegexPatternSyntaxException *) nil_chk(e)) getMessage]), e, expectedString, actualString);
-  }
-  return true;
-}
-
-- (jboolean)isStaticPattern {
-  return OrgSkyscreamerJsonassertRegularExpressionValueMatcher_isStaticPattern(self);
-}
-
-- (NSString *)getPatternType {
-  return OrgSkyscreamerJsonassertRegularExpressionValueMatcher_getPatternType(self);
-}
-
-- (void)dealloc {
-  RELEASE_(expectedPattern_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
-    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithNSString:);
-  methods[2].selector = @selector(equalWithId:withId:);
-  methods[3].selector = @selector(isStaticPattern);
-  methods[4].selector = @selector(getPatternType);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "expectedPattern_", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;", "LJavaLangIllegalArgumentException;", "equal", "LNSObject;LNSObject;", "(TT;TT;)Z", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/skyscreamer/jsonassert/ValueMatcher<TT;>;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertRegularExpressionValueMatcher = { "RegularExpressionValueMatcher", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, 5, -1 };
-  return &_OrgSkyscreamerJsonassertRegularExpressionValueMatcher;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self) {
-  OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(self, nil);
-}
-
-OrgSkyscreamerJsonassertRegularExpressionValueMatcher *new_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init() {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertRegularExpressionValueMatcher, init)
-}
-
-OrgSkyscreamerJsonassertRegularExpressionValueMatcher *create_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_init() {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertRegularExpressionValueMatcher, init)
-}
-
-void OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self, NSString *pattern) {
-  NSObject_init(self);
-  @try {
-    JreStrongAssign(&self->expectedPattern_, pattern == nil ? nil : JavaUtilRegexPattern_compileWithNSString_(pattern));
-  }
-  @catch (JavaUtilRegexPatternSyntaxException *e) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_withNSException_(JreStrcat("$$", @"Constant expected pattern invalid: ", [((JavaUtilRegexPatternSyntaxException *) nil_chk(e)) getMessage]), e);
-  }
-}
-
-OrgSkyscreamerJsonassertRegularExpressionValueMatcher *new_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(NSString *pattern) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertRegularExpressionValueMatcher, initWithNSString_, pattern)
-}
-
-OrgSkyscreamerJsonassertRegularExpressionValueMatcher *create_OrgSkyscreamerJsonassertRegularExpressionValueMatcher_initWithNSString_(NSString *pattern) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertRegularExpressionValueMatcher, initWithNSString_, pattern)
-}
-
-jboolean OrgSkyscreamerJsonassertRegularExpressionValueMatcher_isStaticPattern(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self) {
-  return self->expectedPattern_ != nil;
-}
-
-NSString *OrgSkyscreamerJsonassertRegularExpressionValueMatcher_getPatternType(OrgSkyscreamerJsonassertRegularExpressionValueMatcher *self) {
-  return OrgSkyscreamerJsonassertRegularExpressionValueMatcher_isStaticPattern(self) ? @"Constant" : @"Dynamic";
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertRegularExpressionValueMatcher)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcher.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcher.h
deleted file mode 100644
index bcd767816..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcher.h
+++ /dev/null
@@ -1,31 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcher")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertValueMatcher
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcher 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcher 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertValueMatcher
-
-#if !defined (OrgSkyscreamerJsonassertValueMatcher_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcher || defined(INCLUDE_OrgSkyscreamerJsonassertValueMatcher))
-#define OrgSkyscreamerJsonassertValueMatcher_
-
-@protocol OrgSkyscreamerJsonassertValueMatcher < JavaObject >
-
-- (jboolean)equalWithId:(id)o1
-                 withId:(id)o2;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertValueMatcher)
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertValueMatcher)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcher")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcher.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcher.m
deleted file mode 100644
index f11f8357e..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcher.m
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertValueMatcher.h"
-
-@interface OrgSkyscreamerJsonassertValueMatcher : NSObject
-
-@end
-
-@implementation OrgSkyscreamerJsonassertValueMatcher
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "Z", 0x401, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(equalWithId:withId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "equal", "LNSObject;LNSObject;", "(TT;TT;)Z", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertValueMatcher = { "ValueMatcher", "org.skyscreamer.jsonassert", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, 3, -1 };
-  return &_OrgSkyscreamerJsonassertValueMatcher;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertValueMatcher)
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcherException.h b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcherException.h
deleted file mode 100644
index c29387ecf..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcherException.h
+++ /dev/null
@@ -1,59 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcherException")
-#ifdef RESTRICT_OrgSkyscreamerJsonassertValueMatcherException
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcherException 0
-#else
-#define INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcherException 1
-#endif
-#undef RESTRICT_OrgSkyscreamerJsonassertValueMatcherException
-
-#if !defined (OrgSkyscreamerJsonassertValueMatcherException_) && (INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcherException || defined(INCLUDE_OrgSkyscreamerJsonassertValueMatcherException))
-#define OrgSkyscreamerJsonassertValueMatcherException_
-
-#define RESTRICT_JavaLangRuntimeException 1
-#define INCLUDE_JavaLangRuntimeException 1
-#include "java/lang/RuntimeException.h"
-
-@interface OrgSkyscreamerJsonassertValueMatcherException : JavaLangRuntimeException
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)message
-                    withNSString:(NSString *)expected
-                    withNSString:(NSString *)actual;
-
-- (instancetype)initWithNSString:(NSString *)message
-                 withNSException:(NSException *)cause
-                    withNSString:(NSString *)expected
-                    withNSString:(NSString *)actual;
-
-- (NSString *)getActual;
-
-- (NSString *)getExpected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(OrgSkyscreamerJsonassertValueMatcherException)
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(OrgSkyscreamerJsonassertValueMatcherException *self, NSString *message, NSString *expected, NSString *actual);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertValueMatcherException *new_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertValueMatcherException *create_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual);
-
-FOUNDATION_EXPORT void OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(OrgSkyscreamerJsonassertValueMatcherException *self, NSString *message, NSException *cause, NSString *expected, NSString *actual);
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertValueMatcherException *new_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(NSString *message, NSException *cause, NSString *expected, NSString *actual) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT OrgSkyscreamerJsonassertValueMatcherException *create_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(NSString *message, NSException *cause, NSString *expected, NSString *actual);
-
-J2OBJC_TYPE_LITERAL_HEADER(OrgSkyscreamerJsonassertValueMatcherException)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_OrgSkyscreamerJsonassertValueMatcherException")
diff --git a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcherException.m b/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcherException.m
deleted file mode 100644
index 1e2e9455a..000000000
--- a/core/iostest/daggerframework/test/androidbasetest/OrgSkyscreamerJsonassertValueMatcherException.m
+++ /dev/null
@@ -1,109 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_source.h"
-#include "OrgSkyscreamerJsonassertValueMatcherException.h"
-#include "java/lang/RuntimeException.h"
-
-@interface OrgSkyscreamerJsonassertValueMatcherException () {
- @public
-  NSString *expected_;
-  NSString *actual_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertValueMatcherException, expected_, NSString *)
-J2OBJC_FIELD_SETTER(OrgSkyscreamerJsonassertValueMatcherException, actual_, NSString *)
-
-inline jlong OrgSkyscreamerJsonassertValueMatcherException_get_serialVersionUID();
-#define OrgSkyscreamerJsonassertValueMatcherException_serialVersionUID 1LL
-J2OBJC_STATIC_FIELD_CONSTANT(OrgSkyscreamerJsonassertValueMatcherException, serialVersionUID, jlong)
-
-@implementation OrgSkyscreamerJsonassertValueMatcherException
-
-- (instancetype)initWithNSString:(NSString *)message
-                    withNSString:(NSString *)expected
-                    withNSString:(NSString *)actual {
-  OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(self, message, expected, actual);
-  return self;
-}
-
-- (instancetype)initWithNSString:(NSString *)message
-                 withNSException:(NSException *)cause
-                    withNSString:(NSString *)expected
-                    withNSString:(NSString *)actual {
-  OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(self, message, cause, expected, actual);
-  return self;
-}
-
-- (NSString *)getExpected {
-  return expected_;
-}
-
-- (NSString *)getActual {
-  return actual_;
-}
-
-- (void)dealloc {
-  RELEASE_(expected_);
-  RELEASE_(actual_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:);
-  methods[1].selector = @selector(initWithNSString:withNSException:withNSString:withNSString:);
-  methods[2].selector = @selector(getExpected);
-  methods[3].selector = @selector(getActual);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "serialVersionUID", "J", .constantValue.asLong = OrgSkyscreamerJsonassertValueMatcherException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
-    { "expected_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "actual_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;", "LNSString;LNSException;LNSString;LNSString;" };
-  static const J2ObjcClassInfo _OrgSkyscreamerJsonassertValueMatcherException = { "ValueMatcherException", "org.skyscreamer.jsonassert", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
-  return &_OrgSkyscreamerJsonassertValueMatcherException;
-}
-
-@end
-
-void OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(OrgSkyscreamerJsonassertValueMatcherException *self, NSString *message, NSString *expected, NSString *actual) {
-  JavaLangRuntimeException_initWithNSString_(self, message);
-  JreStrongAssign(&self->expected_, expected);
-  JreStrongAssign(&self->actual_, actual);
-}
-
-OrgSkyscreamerJsonassertValueMatcherException *new_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertValueMatcherException, initWithNSString_withNSString_withNSString_, message, expected, actual)
-}
-
-OrgSkyscreamerJsonassertValueMatcherException *create_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertValueMatcherException, initWithNSString_withNSString_withNSString_, message, expected, actual)
-}
-
-void OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(OrgSkyscreamerJsonassertValueMatcherException *self, NSString *message, NSException *cause, NSString *expected, NSString *actual) {
-  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, cause);
-  JreStrongAssign(&self->expected_, expected);
-  JreStrongAssign(&self->actual_, actual);
-}
-
-OrgSkyscreamerJsonassertValueMatcherException *new_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(NSString *message, NSException *cause, NSString *expected, NSString *actual) {
-  J2OBJC_NEW_IMPL(OrgSkyscreamerJsonassertValueMatcherException, initWithNSString_withNSException_withNSString_withNSString_, message, cause, expected, actual)
-}
-
-OrgSkyscreamerJsonassertValueMatcherException *create_OrgSkyscreamerJsonassertValueMatcherException_initWithNSString_withNSException_withNSString_withNSString_(NSString *message, NSException *cause, NSString *expected, NSString *actual) {
-  J2OBJC_CREATE_IMPL(OrgSkyscreamerJsonassertValueMatcherException, initWithNSString_withNSException_withNSString_withNSString_, message, cause, expected, actual)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSkyscreamerJsonassertValueMatcherException)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractArraySubject.h
deleted file mode 100644
index db7b5aa10..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractArraySubject.h
+++ /dev/null
@@ -1,75 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthAbstractArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthAbstractArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthAbstractArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthAbstractArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthAbstractArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthAbstractArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractArraySubject || defined(INCLUDE_ComGoogleCommonTruthAbstractArraySubject))
-#define ComGoogleCommonTruthAbstractArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthAbstractArraySubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)hasLengthWithInt:(jint)length;
-
-- (void)isEmpty;
-
-- (void)isNotEmpty;
-
-- (ComGoogleCommonTruthAbstractArraySubject *)namedWithNSString:(NSString *)arg0
-                                              withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (NSString *)actualCustomStringRepresentation;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                                     withId:(id)subject;
-
-- (NSString *)brackets;
-
-- (void)failWithBadTypeWithId:(id)expected;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthAbstractArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id subject);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthAbstractArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractArraySubject.m
deleted file mode 100644
index b07a9101a..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractArraySubject.m
+++ /dev/null
@@ -1,119 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthPlatform.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/Integer.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthAbstractArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                                     withId:(id)subject {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, subject);
-  return self;
-}
-
-- (void)isEmpty {
-  if (![((id<JavaUtilList>) nil_chk([self listRepresentation])) isEmpty]) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if ([((id<JavaUtilList>) nil_chk([self listRepresentation])) isEmpty]) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)hasLengthWithInt:(jint)length {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(length >= 0, @"length (%s) must be >= 0");
-  if ([((id<JavaUtilList>) nil_chk([self listRepresentation])) size] != length) {
-    [self failWithNSString:@"has length" withId:JavaLangInteger_valueOfWithInt_(length)];
-  }
-}
-
-- (NSString *)underlyingType {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (NSString *)actualCustomStringRepresentation {
-  return ([self internalCustomName] == nil) ? JreStrcat("C$$$@", '(', [self underlyingType], [self brackets], @") ", [self listRepresentation]) : @"";
-}
-
-- (void)failWithBadTypeWithId:(id)expected {
-  NSString *expectedBrackets = @"";
-  IOSClass *expectedType = [nil_chk(expected) java_getClass];
-  while ([((IOSClass *) nil_chk(expectedType)) isArray]) {
-    JreStrAppend(&expectedBrackets, "$", @"[]");
-    expectedType = [expectedType getComponentType];
-  }
-  NSString *expectedTypeString = JreStrcat("$$", [expectedType getName], expectedBrackets);
-  [self failWithRawMessageWithNSString:@"Incompatible types compared. expected: %s, actual: %s%s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthPlatform_compressTypeWithNSString_(expectedTypeString), [self underlyingType], [self brackets] } count:3 type:NSObject_class_()]];
-}
-
-- (NSString *)brackets {
-  return @"[]";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x400, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x400, -1, -1, -1, 5, -1, -1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x0, 6, 7, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withId:);
-  methods[1].selector = @selector(isEmpty);
-  methods[2].selector = @selector(isNotEmpty);
-  methods[3].selector = @selector(hasLengthWithInt:);
-  methods[4].selector = @selector(underlyingType);
-  methods[5].selector = @selector(listRepresentation);
-  methods[6].selector = @selector(actualCustomStringRepresentation);
-  methods[7].selector = @selector(failWithBadTypeWithId:);
-  methods[8].selector = @selector(brackets);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LNSObject;", "(Lcom/google/common/truth/FailureStrategy;TT;)V", (void *)&ComGoogleCommonTruthAbstractArraySubject__Annotations$0, "hasLength", "I", "()Ljava/util/List<*>;", "failWithBadType", "LNSObject;", "<S:Lcom/google/common/truth/AbstractArraySubject<TS;TT;>;T:Ljava/lang/Object;>Lcom/google/common/truth/Subject<TS;TT;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractArraySubject = { "AbstractArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x401, 9, 0, -1, -1, -1, 8, -1 };
-  return &_ComGoogleCommonTruthAbstractArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthAbstractArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id subject) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, subject);
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractVerb.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractVerb.h
deleted file mode 100644
index 56dc0790e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractVerb.h
+++ /dev/null
@@ -1,150 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb")
-#ifdef RESTRICT_ComGoogleCommonTruthAbstractVerb
-#define INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthAbstractVerb
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthAbstractVerb_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb || defined(INCLUDE_ComGoogleCommonTruthAbstractVerb))
-#define ComGoogleCommonTruthAbstractVerb_
-
-#define RESTRICT_ComGoogleCommonTruthFailureContext 1
-#define INCLUDE_ComGoogleCommonTruthFailureContext 1
-#include "ComGoogleCommonTruthFailureContext.h"
-
-@class ComGoogleCommonTruthAbstractVerb_DelegatedVerb;
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthSubjectFactory;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthAbstractVerb : ComGoogleCommonTruthFailureContext
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy;
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args;
-
-- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)aboutWithComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory;
-
-- (void)fail;
-
-- (void)failWithNSString:(NSString *)format
-       withNSObjectArray:(IOSObjectArray *)args;
-
-- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)failureMessage;
-
-- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)format
-                                                   withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (ComGoogleCommonTruthFailureStrategy *)getFailureStrategy;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractVerb)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy);
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractVerb)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthAbstractVerb_DelegatedVerb_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb || defined(INCLUDE_ComGoogleCommonTruthAbstractVerb_DelegatedVerb))
-#define ComGoogleCommonTruthAbstractVerb_DelegatedVerb_
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthSubject;
-@class ComGoogleCommonTruthSubjectFactory;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthAbstractVerb_DelegatedVerb : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                     withComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory;
-
-- (ComGoogleCommonTruthSubject *)thatWithId:(id)target;
-
-- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)failureMessage;
-
-- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)format
-                                                                 withNSObjectArray:(IOSObjectArray *)args;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractVerb_DelegatedVerb)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthAbstractVerb_DelegatedVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_DelegatedVerb *new_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_DelegatedVerb *create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractVerb_DelegatedVerb)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb || defined(INCLUDE_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy))
-#define ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_
-
-#define RESTRICT_ComGoogleCommonTruthFailureStrategy 1
-#define INCLUDE_ComGoogleCommonTruthFailureStrategy 1
-#include "ComGoogleCommonTruthFailureStrategy.h"
-
-@class ComGoogleCommonTruthFailureContext;
-@protocol JavaLangCharSequence;
-
-@interface ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy : ComGoogleCommonTruthFailureStrategy
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
-                     withComGoogleCommonTruthFailureContext:(ComGoogleCommonTruthFailureContext *)messageHolder;
-
-- (void)failWithNSString:(NSString *)message;
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause;
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *new_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractVerb.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractVerb.m
deleted file mode 100644
index c270c0559..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAbstractVerb.m
+++ /dev/null
@@ -1,335 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractVerb.h"
-#include "ComGoogleCommonTruthFailureContext.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthSubjectFactory.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-@interface ComGoogleCommonTruthAbstractVerb () {
- @public
-  ComGoogleCommonTruthFailureStrategy *failureStrategy_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb, failureStrategy_, ComGoogleCommonTruthFailureStrategy *)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$3();
-
-@interface ComGoogleCommonTruthAbstractVerb_DelegatedVerb () {
- @public
-  ComGoogleCommonTruthSubjectFactory *factory_;
-  ComGoogleCommonTruthFailureStrategy *failureStrategy_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, factory_, ComGoogleCommonTruthSubjectFactory *)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, failureStrategy_, ComGoogleCommonTruthFailureStrategy *)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$2();
-
-@interface ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy () {
- @public
-  ComGoogleCommonTruthFailureStrategy *delegate_;
-  ComGoogleCommonTruthFailureContext *messageHolder_;
-}
-
-- (NSString *)prependFailureMessageIfAnyWithNSString:(NSString *)message;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, delegate_, ComGoogleCommonTruthFailureStrategy *)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, messageHolder_, ComGoogleCommonTruthFailureContext *)
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, NSString *message);
-
-@implementation ComGoogleCommonTruthAbstractVerb
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy {
-  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_(self, failureStrategy);
-  return self;
-}
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args {
-  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, failureStrategy, format, args);
-  return self;
-}
-
-- (ComGoogleCommonTruthFailureStrategy *)getFailureStrategy {
-  return [self hasFailureMessage] ? create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(failureStrategy_, self) : failureStrategy_;
-}
-
-- (void)fail {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk([self getFailureStrategy])) failWithNSString:@""];
-}
-
-- (void)failWithNSString:(NSString *)format
-       withNSObjectArray:(IOSObjectArray *)args {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk([self getFailureStrategy])) failWithNSString:ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(format, args)];
-}
-
-- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)failureMessage {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)format
-                                                   withNSObjectArray:(IOSObjectArray *)args {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)aboutWithComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory {
-  return create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_([self getFailureStrategy], factory);
-}
-
-- (void)dealloc {
-  RELEASE_(failureStrategy_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x81, -1, 1, -1, -1, -1, 2 },
-    { NULL, "LComGoogleCommonTruthFailureStrategy;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x81, 3, 4, -1, -1, -1, 5 },
-    { NULL, "LComGoogleCommonTruthAbstractVerb;", 0x401, 6, 7, -1, 8, -1, 9 },
-    { NULL, "LComGoogleCommonTruthAbstractVerb;", 0x481, 6, 4, -1, 10, -1, 11 },
-    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x1, 12, 13, -1, 14, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:);
-  methods[1].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSString:withNSObjectArray:);
-  methods[2].selector = @selector(getFailureStrategy);
-  methods[3].selector = @selector(fail);
-  methods[4].selector = @selector(failWithNSString:withNSObjectArray:);
-  methods[5].selector = @selector(withFailureMessageWithNSString:);
-  methods[6].selector = @selector(withFailureMessageWithNSString:withNSObjectArray:);
-  methods[7].selector = @selector(aboutWithComGoogleCommonTruthSubjectFactory:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "failureStrategy_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;", "LComGoogleCommonTruthFailureStrategy;LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$0, "fail", "LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$1, "withFailureMessage", "LNSString;", "(Ljava/lang/String;)TT;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$2, "(Ljava/lang/String;[Ljava/lang/Object;)TT;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$3, "about", "LComGoogleCommonTruthSubjectFactory;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;SF:Lcom/google/common/truth/SubjectFactory<TS;TT;>;>(TSF;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;LComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy;", "<T:Lcom/google/common/truth/AbstractVerb<TT;>;>Lcom/google/common/truth/FailureContext;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractVerb = { "AbstractVerb", "com.google.common.truth", ptrTable, methods, fields, 7, 0x401, 8, 1, -1, 15, -1, 16, -1 };
-  return &_ComGoogleCommonTruthAbstractVerb;
-}
-
-@end
-
-void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy) {
-  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, failureStrategy, nil, [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
-}
-
-void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args) {
-  ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(self, format, args);
-  JreStrongAssign(&self->failureStrategy_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(failureStrategy));
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractVerb)
-
-@implementation ComGoogleCommonTruthAbstractVerb_DelegatedVerb
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                     withComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory {
-  ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(self, failureStrategy, factory);
-  return self;
-}
-
-- (ComGoogleCommonTruthSubject *)thatWithId:(id)target {
-  return [((ComGoogleCommonTruthSubjectFactory *) nil_chk(factory_)) getSubjectWithComGoogleCommonTruthFailureStrategy:failureStrategy_ withId:target];
-}
-
-- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)failureMessage {
-  return failureMessage == nil ? [self withFailureMessageWithNSString:nil withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]] : [self withFailureMessageWithNSString:@"%s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ failureMessage } count:1 type:NSObject_class_()]];
-}
-
-- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)format
-                                                                 withNSObjectArray:(IOSObjectArray *)args {
-  ComGoogleCommonTruthFailureContext *holder = create_ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(format, args);
-  return create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(failureStrategy_, holder), factory_);
-}
-
-- (void)dealloc {
-  RELEASE_(factory_);
-  RELEASE_(failureStrategy_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthSubject;", 0x1, 2, 3, -1, 4, -1, 5 },
-    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x1, 6, 7, -1, 8, -1, 9 },
-    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x81, 6, 10, -1, 11, -1, 12 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonTruthSubjectFactory:);
-  methods[1].selector = @selector(thatWithId:);
-  methods[2].selector = @selector(withFailureMessageWithNSString:);
-  methods[3].selector = @selector(withFailureMessageWithNSString:withNSObjectArray:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "factory_", "LComGoogleCommonTruthSubjectFactory;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
-    { "failureStrategy_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonTruthSubjectFactory;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/truth/SubjectFactory<TS;TT;>;)V", "that", "LNSObject;", "(TT;)TS;", (void *)&ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$0, "withFailureMessage", "LNSString;", "(Ljava/lang/String;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", (void *)&ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$1, "LNSString;[LNSObject;", "(Ljava/lang/String;[Ljava/lang/Object;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", (void *)&ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$2, "Lcom/google/common/truth/SubjectFactory<TS;TT;>;", "LComGoogleCommonTruthAbstractVerb;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractVerb_DelegatedVerb = { "DelegatedVerb", "com.google.common.truth", ptrTable, methods, fields, 7, 0x19, 4, 2, 14, -1, -1, 15, -1 };
-  return &_ComGoogleCommonTruthAbstractVerb_DelegatedVerb;
-}
-
-@end
-
-void ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthAbstractVerb_DelegatedVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) {
-  NSObject_init(self);
-  JreStrongAssign(&self->factory_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(factory));
-  JreStrongAssign(&self->failureStrategy_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(failureStrategy));
-}
-
-ComGoogleCommonTruthAbstractVerb_DelegatedVerb *new_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_, failureStrategy, factory)
-}
-
-ComGoogleCommonTruthAbstractVerb_DelegatedVerb *create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_, failureStrategy, factory)
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractVerb_DelegatedVerb)
-
-@implementation ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
-                     withComGoogleCommonTruthFailureContext:(ComGoogleCommonTruthFailureContext *)messageHolder {
-  ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(self, delegate, messageHolder);
-  return self;
-}
-
-- (void)failWithNSString:(NSString *)message {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(delegate_)) failWithNSString:ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message)];
-}
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(delegate_)) failWithNSString:ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message) withNSException:cause];
-}
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(delegate_)) failComparingWithNSString:ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message) withJavaLangCharSequence:expected withJavaLangCharSequence:actual];
-}
-
-- (NSString *)prependFailureMessageIfAnyWithNSString:(NSString *)message {
-  return ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message);
-}
-
-- (void)dealloc {
-  RELEASE_(delegate_);
-  RELEASE_(messageHolder_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 6, 2, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonTruthFailureContext:);
-  methods[1].selector = @selector(failWithNSString:);
-  methods[2].selector = @selector(failWithNSString:withNSException:);
-  methods[3].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  methods[4].selector = @selector(prependFailureMessageIfAnyWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "delegate_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "messageHolder_", "LComGoogleCommonTruthFailureContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonTruthFailureContext;", "fail", "LNSString;", "LNSString;LNSException;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "prependFailureMessageIfAny", "LComGoogleCommonTruthAbstractVerb;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy = { "MessagePrependingFailureStrategy", "com.google.common.truth", ptrTable, methods, fields, 7, 0xc, 5, 2, 7, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy;
-}
-
-@end
-
-void ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) {
-  ComGoogleCommonTruthFailureStrategy_init(self);
-  JreStrongAssign(&self->delegate_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate));
-  JreStrongAssign(&self->messageHolder_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(messageHolder));
-}
-
-ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *new_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_, delegate, messageHolder)
-}
-
-ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_, delegate, messageHolder)
-}
-
-NSString *ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, NSString *message) {
-  return [((ComGoogleCommonTruthFailureContext *) nil_chk(self->messageHolder_)) getFailureMessage] == nil ? message : JreStrcat("$$$", [self->messageHolder_ getFailureMessage], @": ", message);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAtomicLongMapSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAtomicLongMapSubject.h
deleted file mode 100644
index 2fcaee49d..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAtomicLongMapSubject.h
+++ /dev/null
@@ -1,89 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthAtomicLongMapSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthAtomicLongMapSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthAtomicLongMapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject || defined(INCLUDE_ComGoogleCommonTruthAtomicLongMapSubject))
-#define ComGoogleCommonTruthAtomicLongMapSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonUtilConcurrentAtomicLongMap;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthAtomicLongMapSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)containsEntryWithId:(id)key
-                   withLong:(jlong)value;
-
-- (void)containsKeyWithId:(id)key;
-
-- (void)doesNotContainEntryWithId:(id)key
-                         withLong:(jlong)value;
-
-- (void)doesNotContainKeyWithId:(id)key;
-
-- (void)hasSizeWithInt:(jint)expectedSize;
-
-- (void)hasSumWithLong:(jlong)expectedSum;
-
-- (void)isEmpty;
-
-- (void)isEqualToWithId:(id)other;
-
-- (void)isNotEmpty;
-
-- (void)isNotEqualToWithId:(id)other;
-
-- (ComGoogleCommonTruthAtomicLongMapSubject *)namedWithNSString:(NSString *)arg0
-                                              withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (ComGoogleCommonUtilConcurrentAtomicLongMap *)actual;
-
-- (ComGoogleCommonUtilConcurrentAtomicLongMap *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-             withComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)map;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAtomicLongMapSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthAtomicLongMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *new_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *create_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAtomicLongMapSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAtomicLongMapSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAtomicLongMapSubject.m
deleted file mode 100644
index 5e5ebeab6..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthAtomicLongMapSubject.m
+++ /dev/null
@@ -1,182 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAtomicLongMapSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/Maps.h"
-#include "com/google/common/util/concurrent/AtomicLongMap.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Long.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Map.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$5();
-
-@implementation ComGoogleCommonTruthAtomicLongMapSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-             withComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)map {
-  ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(self, failureStrategy, map);
-  return self;
-}
-
-- (void)isEqualToWithId:(id)other {
-  [super isEqualToWithId:other];
-}
-
-- (void)isNotEqualToWithId:(id)other {
-  [super isNotEqualToWithId:other];
-}
-
-- (void)isEmpty {
-  if (![((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if ([((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)hasSizeWithInt:(jint)expectedSize {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedSize >= 0, @"expectedSize (%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedSize) } count:1 type:NSObject_class_()]);
-  jint actualSize = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) size];
-  if (actualSize != expectedSize) {
-    [self failWithBadResultsWithNSString:@"has a size of" withId:JavaLangInteger_valueOfWithInt_(expectedSize) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualSize)];
-  }
-}
-
-- (void)hasSumWithLong:(jlong)expectedSum {
-  jlong actualSum = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) sum];
-  if (actualSum != expectedSum) {
-    [self failWithBadResultsWithNSString:@"has a sum of" withId:JavaLangLong_valueOfWithLong_(expectedSum) withNSString:@"is" withId:JavaLangLong_valueOfWithLong_(actualSum)];
-  }
-}
-
-- (void)containsKeyWithId:(id)key {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(key, @"AtomicLongMap does not support null keys");
-  if (![((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) containsKeyWithId:key]) {
-    [self failWithNSString:@"contains key" withId:key];
-  }
-}
-
-- (void)doesNotContainKeyWithId:(id)key {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(key, @"AtomicLongMap does not support null keys");
-  if ([((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) containsKeyWithId:key]) {
-    [self failWithNSString:@"does not contain key" withId:key];
-  }
-}
-
-- (void)containsEntryWithId:(id)key
-                   withLong:(jlong)value {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(key, @"AtomicLongMap does not support null keys");
-  jlong actualValue = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk(([self actual]))) getWithId:key];
-  if (actualValue != value) {
-    [self failWithNSString:@"contains entry" withId:ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, JavaLangLong_valueOfWithLong_(value))];
-  }
-}
-
-- (void)doesNotContainEntryWithId:(id)key
-                         withLong:(jlong)value {
-  if (key != nil) {
-    jlong actualValue = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk(([self actual]))) getWithId:key];
-    if (actualValue == value) {
-      [self failWithNSString:@"does not contain entry" withId:ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, JavaLangLong_valueOfWithLong_(value))];
-    }
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, 5, 6 },
-    { NULL, "V", 0x1, 7, 4, -1, -1, 8, 9 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 14, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 18, 17, -1, -1, -1, 19 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonUtilConcurrentAtomicLongMap:);
-  methods[1].selector = @selector(isEqualToWithId:);
-  methods[2].selector = @selector(isNotEqualToWithId:);
-  methods[3].selector = @selector(isEmpty);
-  methods[4].selector = @selector(isNotEmpty);
-  methods[5].selector = @selector(hasSizeWithInt:);
-  methods[6].selector = @selector(hasSumWithLong:);
-  methods[7].selector = @selector(containsKeyWithId:);
-  methods[8].selector = @selector(doesNotContainKeyWithId:);
-  methods[9].selector = @selector(containsEntryWithId:withLong:);
-  methods[10].selector = @selector(doesNotContainEntryWithId:withLong:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonUtilConcurrentAtomicLongMap;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/util/concurrent/AtomicLongMap<*>;)V", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$0, "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$1, (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$2, "isNotEqualTo", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$3, (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$4, "hasSize", "I", "hasSum", "J", "containsKey", "doesNotContainKey", "containsEntry", "LNSObject;J", "doesNotContainEntry", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$5, "Lcom/google/common/truth/Subject<Lcom/google/common/truth/AtomicLongMapSubject;Lcom/google/common/util/concurrent/AtomicLongMap<*>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthAtomicLongMapSubject = { "AtomicLongMapSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 11, 0, -1, -1, -1, 20, -1 };
-  return &_ComGoogleCommonTruthAtomicLongMapSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthAtomicLongMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, map);
-}
-
-ComGoogleCommonTruthAtomicLongMapSubject *new_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthAtomicLongMapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_, failureStrategy, map)
-}
-
-ComGoogleCommonTruthAtomicLongMapSubject *create_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthAtomicLongMapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_, failureStrategy, map)
-}
-
-IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAtomicLongMapSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBigDecimalSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBigDecimalSubject.h
deleted file mode 100644
index 6e20583dd..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBigDecimalSubject.h
+++ /dev/null
@@ -1,77 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthBigDecimalSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthBigDecimalSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthBigDecimalSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthBigDecimalSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthBigDecimalSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthBigDecimalSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthBigDecimalSubject || defined(INCLUDE_ComGoogleCommonTruthBigDecimalSubject))
-#define ComGoogleCommonTruthBigDecimalSubject_
-
-#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
-#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
-#include "ComGoogleCommonTruthComparableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@class JavaMathBigDecimal;
-
-@interface ComGoogleCommonTruthBigDecimalSubject : ComGoogleCommonTruthComparableSubject
-
-#pragma mark Public
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isEqualToIgnoringScaleWithJavaMathBigDecimal:(JavaMathBigDecimal *)expected;
-
-- (void)isEqualToIgnoringScaleWithLong:(jlong)expected;
-
-- (void)isEqualToIgnoringScaleWithNSString:(NSString *)expected;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaMathBigDecimal *)expected;
-
-- (ComGoogleCommonTruthBigDecimalSubject *)namedWithNSString:(NSString *)arg0
-                                           withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (JavaMathBigDecimal *)actual;
-
-- (JavaMathBigDecimal *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                     withJavaMathBigDecimal:(JavaMathBigDecimal *)subject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthBigDecimalSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(ComGoogleCommonTruthBigDecimalSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaMathBigDecimal *subject);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthBigDecimalSubject *new_ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaMathBigDecimal *subject) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthBigDecimalSubject *create_ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaMathBigDecimal *subject);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthBigDecimalSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthBigDecimalSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBigDecimalSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBigDecimalSubject.m
deleted file mode 100644
index 687f7617f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBigDecimalSubject.m
+++ /dev/null
@@ -1,114 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthBigDecimalSubject.h"
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/math/BigDecimal.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthBigDecimalSubject ()
-
-- (void)compareValuesWithJavaMathBigDecimal:(JavaMathBigDecimal *)expected;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(ComGoogleCommonTruthBigDecimalSubject *self, JavaMathBigDecimal *expected);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthBigDecimalSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthBigDecimalSubject__Annotations$1();
-
-@implementation ComGoogleCommonTruthBigDecimalSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                     withJavaMathBigDecimal:(JavaMathBigDecimal *)subject {
-  ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(self, failureStrategy, subject);
-  return self;
-}
-
-- (void)isEqualToIgnoringScaleWithJavaMathBigDecimal:(JavaMathBigDecimal *)expected {
-  ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(self, expected);
-}
-
-- (void)isEqualToIgnoringScaleWithNSString:(NSString *)expected {
-  ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(self, create_JavaMathBigDecimal_initWithNSString_(expected));
-}
-
-- (void)isEqualToIgnoringScaleWithLong:(jlong)expected {
-  ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(self, create_JavaMathBigDecimal_initWithLong_(expected));
-}
-
-- (void)isEqualToWithId:(id)expected {
-  [super isEqualToWithId:expected];
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaMathBigDecimal *)expected {
-  ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(self, expected);
-}
-
-- (void)compareValuesWithJavaMathBigDecimal:(JavaMathBigDecimal *)expected {
-  ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(self, expected);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 5, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, -1, -1, -1, 8 },
-    { NULL, "V", 0x1, 9, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 10, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaMathBigDecimal:);
-  methods[1].selector = @selector(isEqualToIgnoringScaleWithJavaMathBigDecimal:);
-  methods[2].selector = @selector(isEqualToIgnoringScaleWithNSString:);
-  methods[3].selector = @selector(isEqualToIgnoringScaleWithLong:);
-  methods[4].selector = @selector(isEqualToWithId:);
-  methods[5].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  methods[6].selector = @selector(compareValuesWithJavaMathBigDecimal:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaMathBigDecimal;", (void *)&ComGoogleCommonTruthBigDecimalSubject__Annotations$0, "isEqualToIgnoringScale", "LJavaMathBigDecimal;", "LNSString;", "J", "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthBigDecimalSubject__Annotations$1, "isEquivalentAccordingToCompareTo", "compareValues", "Lcom/google/common/truth/ComparableSubject<Lcom/google/common/truth/BigDecimalSubject;Ljava/math/BigDecimal;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthBigDecimalSubject = { "BigDecimalSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 7, 0, -1, -1, -1, 11, -1 };
-  return &_ComGoogleCommonTruthBigDecimalSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(ComGoogleCommonTruthBigDecimalSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaMathBigDecimal *subject) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthBigDecimalSubject *new_ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaMathBigDecimal *subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthBigDecimalSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthBigDecimalSubject *create_ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaMathBigDecimal *subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthBigDecimalSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_, failureStrategy, subject)
-}
-
-void ComGoogleCommonTruthBigDecimalSubject_compareValuesWithJavaMathBigDecimal_(ComGoogleCommonTruthBigDecimalSubject *self, JavaMathBigDecimal *expected) {
-  if ([((JavaMathBigDecimal *) nil_chk([self actual])) compareToWithId:expected] != 0) {
-    [self failWithRawMessageWithNSString:@"%s should have had the same value as <%s> (scale is ignored)" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expected } count:2 type:NSObject_class_()]];
-  }
-}
-
-IOSObjectArray *ComGoogleCommonTruthBigDecimalSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthBigDecimalSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthBigDecimalSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBooleanSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBooleanSubject.h
deleted file mode 100644
index f3d8449d6..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBooleanSubject.h
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthBooleanSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthBooleanSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthBooleanSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthBooleanSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthBooleanSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthBooleanSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthBooleanSubject || defined(INCLUDE_ComGoogleCommonTruthBooleanSubject))
-#define ComGoogleCommonTruthBooleanSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@class JavaLangBoolean;
-
-@interface ComGoogleCommonTruthBooleanSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)isFalse;
-
-- (void)isTrue;
-
-- (ComGoogleCommonTruthBooleanSubject *)namedWithNSString:(NSString *)arg0
-                                        withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (JavaLangBoolean *)actual;
-
-- (JavaLangBoolean *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                        withJavaLangBoolean:(JavaLangBoolean *)subject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthBooleanSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(ComGoogleCommonTruthBooleanSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangBoolean *subject);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthBooleanSubject *new_ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangBoolean *subject) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthBooleanSubject *create_ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangBoolean *subject);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthBooleanSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthBooleanSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBooleanSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBooleanSubject.m
deleted file mode 100644
index 14daa26e8..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthBooleanSubject.m
+++ /dev/null
@@ -1,98 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthBooleanSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthBooleanSubject ()
-
-- (NSString *)booleanSubject;
-
-@end
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthBooleanSubject_booleanSubject(ComGoogleCommonTruthBooleanSubject *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthBooleanSubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthBooleanSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                        withJavaLangBoolean:(JavaLangBoolean *)subject {
-  ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(self, failureStrategy, subject);
-  return self;
-}
-
-- (void)isTrue {
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"%s was expected to be true, but was null" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthBooleanSubject_booleanSubject(self) } count:1 type:NSObject_class_()]];
-  }
-  else if (![((JavaLangBoolean *) nil_chk([self actual])) booleanValue]) {
-    [self failWithRawMessageWithNSString:@"%s was expected to be true, but was false" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthBooleanSubject_booleanSubject(self) } count:1 type:NSObject_class_()]];
-  }
-}
-
-- (void)isFalse {
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"%s was expected to be false, but was null" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthBooleanSubject_booleanSubject(self) } count:1 type:NSObject_class_()]];
-  }
-  else if ([((JavaLangBoolean *) nil_chk([self actual])) booleanValue]) {
-    [self failWithRawMessageWithNSString:@"%s was expected to be false, but was true" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthBooleanSubject_booleanSubject(self) } count:1 type:NSObject_class_()]];
-  }
-}
-
-- (NSString *)booleanSubject {
-  return ComGoogleCommonTruthBooleanSubject_booleanSubject(self);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangBoolean:);
-  methods[1].selector = @selector(isTrue);
-  methods[2].selector = @selector(isFalse);
-  methods[3].selector = @selector(booleanSubject);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangBoolean;", (void *)&ComGoogleCommonTruthBooleanSubject__Annotations$0, "Lcom/google/common/truth/Subject<Lcom/google/common/truth/BooleanSubject;Ljava/lang/Boolean;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthBooleanSubject = { "BooleanSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 4, 0, -1, -1, -1, 2, -1 };
-  return &_ComGoogleCommonTruthBooleanSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(ComGoogleCommonTruthBooleanSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangBoolean *subject) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthBooleanSubject *new_ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangBoolean *subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthBooleanSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthBooleanSubject *create_ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangBoolean *subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthBooleanSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_, failureStrategy, subject)
-}
-
-NSString *ComGoogleCommonTruthBooleanSubject_booleanSubject(ComGoogleCommonTruthBooleanSubject *self) {
-  return [self internalCustomName] == nil ? @"The subject" : [self actualAsString];
-}
-
-IOSObjectArray *ComGoogleCommonTruthBooleanSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthBooleanSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthClassSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthClassSubject.h
deleted file mode 100644
index bdfe9a593..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthClassSubject.h
+++ /dev/null
@@ -1,69 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthClassSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthClassSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthClassSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthClassSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthClassSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthClassSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthClassSubject || defined(INCLUDE_ComGoogleCommonTruthClassSubject))
-#define ComGoogleCommonTruthClassSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSClass;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthClassSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)isAssignableToWithIOSClass:(IOSClass *)clazz;
-
-- (ComGoogleCommonTruthClassSubject *)namedWithNSString:(NSString *)arg0
-                                      withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSClass *)actual;
-
-- (IOSClass *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withIOSClass:(IOSClass *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthClassSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthClassSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthClassSubject *new_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthClassSubject *create_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthClassSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthClassSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthClassSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthClassSubject.m
deleted file mode 100644
index 8e1271315..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthClassSubject.m
+++ /dev/null
@@ -1,65 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthClassSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthClassSubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthClassSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withIOSClass:(IOSClass *)o {
-  ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(self, failureStrategy, o);
-  return self;
-}
-
-- (void)isAssignableToWithIOSClass:(IOSClass *)clazz {
-  if (![((IOSClass *) nil_chk(clazz)) isAssignableFrom:[self actual]]) {
-    [self failWithNSString:@"is assignable to" withId:clazz];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withIOSClass:);
-  methods[1].selector = @selector(isAssignableToWithIOSClass:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LIOSClass;", "(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Class<*>;)V", (void *)&ComGoogleCommonTruthClassSubject__Annotations$0, "isAssignableTo", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/ClassSubject;Ljava/lang/Class<*>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthClassSubject = { "ClassSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 2, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthClassSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthClassSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthClassSubject *new_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthClassSubject, initWithComGoogleCommonTruthFailureStrategy_withIOSClass_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthClassSubject *create_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthClassSubject, initWithComGoogleCommonTruthFailureStrategy_withIOSClass_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthClassSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthClassSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthComparableSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthComparableSubject.h
deleted file mode 100644
index a41ad6984..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthComparableSubject.h
+++ /dev/null
@@ -1,78 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthComparableSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthComparableSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthComparableSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthComparableSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthComparableSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthComparableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthComparableSubject || defined(INCLUDE_ComGoogleCommonTruthComparableSubject))
-#define ComGoogleCommonTruthComparableSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonCollectRange;
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol JavaLangComparable;
-
-@interface ComGoogleCommonTruthComparableSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)comparesEqualToWithJavaLangComparable:(id<JavaLangComparable>)other;
-
-- (void)isAtLeastWithJavaLangComparable:(id<JavaLangComparable>)other;
-
-- (void)isAtMostWithJavaLangComparable:(id<JavaLangComparable>)other;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(id<JavaLangComparable>)other;
-
-- (void)isGreaterThanWithJavaLangComparable:(id<JavaLangComparable>)other;
-
-- (void)isInWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)range;
-
-- (void)isLessThanWithJavaLangComparable:(id<JavaLangComparable>)other;
-
-- (void)isNotInWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)range;
-
-- (ComGoogleCommonTruthComparableSubject *)namedWithNSString:(NSString *)arg0
-                                           withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                     withJavaLangComparable:(id<JavaLangComparable>)subject;
-
-- (id<JavaLangComparable>)actual;
-
-- (id<JavaLangComparable>)getSubject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthComparableSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthComparableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthComparableSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthComparableSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthComparableSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthComparableSubject.m
deleted file mode 100644
index 1f8514e04..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthComparableSubject.m
+++ /dev/null
@@ -1,120 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/collect/Range.h"
-#include "java/lang/Comparable.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthComparableSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthComparableSubject__Annotations$1();
-
-@implementation ComGoogleCommonTruthComparableSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                     withJavaLangComparable:(id<JavaLangComparable>)subject {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-  return self;
-}
-
-- (void)isInWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)range {
-  if (![((ComGoogleCommonCollectRange *) nil_chk(range)) containsWithJavaLangComparable:[self actual]]) {
-    [self failWithNSString:@"is in" withId:range];
-  }
-}
-
-- (void)isNotInWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)range {
-  if ([((ComGoogleCommonCollectRange *) nil_chk(range)) containsWithJavaLangComparable:[self actual]]) {
-    [self failWithNSString:@"is not in" withId:range];
-  }
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(id<JavaLangComparable>)other {
-  if ([((id<JavaLangComparable>) nil_chk([self actual])) compareToWithId:other] != 0) {
-    [self failWithRawMessageWithNSString:@"%s should have been equivalent to <%s> according to compareTo()" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], other } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)comparesEqualToWithJavaLangComparable:(id<JavaLangComparable>)other {
-  [self isEquivalentAccordingToCompareToWithJavaLangComparable:other];
-}
-
-- (void)isGreaterThanWithJavaLangComparable:(id<JavaLangComparable>)other {
-  if ([((id<JavaLangComparable>) nil_chk([self actual])) compareToWithId:other] <= 0) {
-    [self failWithNSString:@"is greater than" withId:other];
-  }
-}
-
-- (void)isLessThanWithJavaLangComparable:(id<JavaLangComparable>)other {
-  if ([((id<JavaLangComparable>) nil_chk([self actual])) compareToWithId:other] >= 0) {
-    [self failWithNSString:@"is less than" withId:other];
-  }
-}
-
-- (void)isAtMostWithJavaLangComparable:(id<JavaLangComparable>)other {
-  if ([((id<JavaLangComparable>) nil_chk([self actual])) compareToWithId:other] > 0) {
-    [self failWithNSString:@"is at most" withId:other];
-  }
-}
-
-- (void)isAtLeastWithJavaLangComparable:(id<JavaLangComparable>)other {
-  if ([((id<JavaLangComparable>) nil_chk([self actual])) compareToWithId:other] < 0) {
-    [self failWithNSString:@"is at least" withId:other];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x11, 3, 4, -1, 5, -1, -1 },
-    { NULL, "V", 0x11, 6, 4, -1, 5, -1, -1 },
-    { NULL, "V", 0x1, 7, 8, -1, 9, -1, -1 },
-    { NULL, "V", 0x1, 10, 8, -1, 9, 11, -1 },
-    { NULL, "V", 0x11, 12, 8, -1, 9, -1, -1 },
-    { NULL, "V", 0x11, 13, 8, -1, 9, -1, -1 },
-    { NULL, "V", 0x11, 14, 8, -1, 9, -1, -1 },
-    { NULL, "V", 0x11, 15, 8, -1, 9, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangComparable:);
-  methods[1].selector = @selector(isInWithComGoogleCommonCollectRange:);
-  methods[2].selector = @selector(isNotInWithComGoogleCommonCollectRange:);
-  methods[3].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  methods[4].selector = @selector(comparesEqualToWithJavaLangComparable:);
-  methods[5].selector = @selector(isGreaterThanWithJavaLangComparable:);
-  methods[6].selector = @selector(isLessThanWithJavaLangComparable:);
-  methods[7].selector = @selector(isAtMostWithJavaLangComparable:);
-  methods[8].selector = @selector(isAtLeastWithJavaLangComparable:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangComparable;", "(Lcom/google/common/truth/FailureStrategy;TT;)V", (void *)&ComGoogleCommonTruthComparableSubject__Annotations$0, "isIn", "LComGoogleCommonCollectRange;", "(Lcom/google/common/collect/Range<TT;>;)V", "isNotIn", "isEquivalentAccordingToCompareTo", "LJavaLangComparable;", "(TT;)V", "comparesEqualTo", (void *)&ComGoogleCommonTruthComparableSubject__Annotations$1, "isGreaterThan", "isLessThan", "isAtMost", "isAtLeast", "<S:Lcom/google/common/truth/ComparableSubject<TS;TT;>;T::Ljava/lang/Comparable;>Lcom/google/common/truth/Subject<TS;TT;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthComparableSubject = { "ComparableSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x401, 9, 0, -1, -1, -1, 16, -1 };
-  return &_ComGoogleCommonTruthComparableSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthComparableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, subject);
-}
-
-IOSObjectArray *ComGoogleCommonTruthComparableSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthComparableSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthComparableSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthCorrespondence.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthCorrespondence.h
deleted file mode 100644
index 0bd6ab46b..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthCorrespondence.h
+++ /dev/null
@@ -1,56 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthCorrespondence")
-#ifdef RESTRICT_ComGoogleCommonTruthCorrespondence
-#define INCLUDE_ALL_ComGoogleCommonTruthCorrespondence 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthCorrespondence 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthCorrespondence
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthCorrespondence || defined(INCLUDE_ComGoogleCommonTruthCorrespondence))
-#define ComGoogleCommonTruthCorrespondence_
-
-@interface ComGoogleCommonTruthCorrespondence : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (jboolean)compareWithId:(id)actual
-                   withId:(id)expected;
-
-- (jboolean)isEqual:(id)o;
-
-- (NSUInteger)hash;
-
-+ (ComGoogleCommonTruthCorrespondence *)toleranceWithDouble:(jdouble)tolerance;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthCorrespondence)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthCorrespondence_init(ComGoogleCommonTruthCorrespondence *self);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_toleranceWithDouble_(jdouble tolerance);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthCorrespondence)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthCorrespondence")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthCorrespondence.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthCorrespondence.m
deleted file mode 100644
index c1cb5ca20..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthCorrespondence.m
+++ /dev/null
@@ -1,189 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthCorrespondence.h"
-#include "ComGoogleCommonTruthDoubleSubject.h"
-#include "ComGoogleCommonTruthMathUtil.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$3();
-
-@interface ComGoogleCommonTruthCorrespondence_TolerantNumericEquality : ComGoogleCommonTruthCorrespondence {
- @public
-  jdouble tolerance_;
-}
-
-- (instancetype)initWithDouble:(jdouble)tolerance;
-
-- (jboolean)compareWithId:(NSNumber *)actual
-                   withId:(NSNumber *)expected;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality)
-
-__attribute__((unused)) static void ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality *self, jdouble tolerance);
-
-__attribute__((unused)) static ComGoogleCommonTruthCorrespondence_TolerantNumericEquality *new_ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(jdouble tolerance) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthCorrespondence_TolerantNumericEquality *create_ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(jdouble tolerance);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality)
-
-@implementation ComGoogleCommonTruthCorrespondence
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthCorrespondence_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (ComGoogleCommonTruthCorrespondence *)toleranceWithDouble:(jdouble)tolerance {
-  return ComGoogleCommonTruthCorrespondence_toleranceWithDouble_(tolerance);
-}
-
-- (jboolean)compareWithId:(id)actual
-                   withId:(id)expected {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (NSString *)description {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (jboolean)isEqual:(id)o {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Correspondence.equals(object) is not supported. If you meant to compare objects, use .compare(actual, expected) instead.");
-}
-
-- (NSUInteger)hash {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Correspondence.hashCode() is not supported.");
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthCorrespondence;", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "Z", 0x401, 3, 4, -1, 5, -1, 6 },
-    { NULL, "LNSString;", 0x401, 7, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 8, 9, -1, -1, 10, 11 },
-    { NULL, "I", 0x11, 12, -1, -1, -1, 13, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(toleranceWithDouble:);
-  methods[2].selector = @selector(compareWithId:withId:);
-  methods[3].selector = @selector(description);
-  methods[4].selector = @selector(isEqual:);
-  methods[5].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "tolerance", "D", "(D)Lcom/google/common/truth/Correspondence<Ljava/lang/Number;Ljava/lang/Number;>;", "compare", "LNSObject;LNSObject;", "(TA;TE;)Z", (void *)&ComGoogleCommonTruthCorrespondence__Annotations$0, "toString", "equals", "LNSObject;", (void *)&ComGoogleCommonTruthCorrespondence__Annotations$1, (void *)&ComGoogleCommonTruthCorrespondence__Annotations$2, "hashCode", (void *)&ComGoogleCommonTruthCorrespondence__Annotations$3, "LComGoogleCommonTruthCorrespondence_TolerantNumericEquality;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthCorrespondence = { "Correspondence", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x401, 6, 0, -1, 14, -1, 15, -1 };
-  return &_ComGoogleCommonTruthCorrespondence;
-}
-
-@end
-
-void ComGoogleCommonTruthCorrespondence_init(ComGoogleCommonTruthCorrespondence *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_toleranceWithDouble_(jdouble tolerance) {
-  ComGoogleCommonTruthCorrespondence_initialize();
-  return create_ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(tolerance);
-}
-
-IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthCorrespondence__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthCorrespondence)
-
-@implementation ComGoogleCommonTruthCorrespondence_TolerantNumericEquality
-
-- (instancetype)initWithDouble:(jdouble)tolerance {
-  ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(self, tolerance);
-  return self;
-}
-
-- (jboolean)compareWithId:(NSNumber *)actual
-                   withId:(NSNumber *)expected {
-  ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(tolerance_);
-  jdouble actualDouble = [((NSNumber *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(actual))) doubleValue];
-  jdouble expectedDouble = [((NSNumber *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(expected))) doubleValue];
-  return ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(actualDouble, expectedDouble, tolerance_);
-}
-
-- (NSString *)description {
-  return JreStrcat("$D$", @"is a finite number within ", tolerance_, @" of");
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithDouble:);
-  methods[1].selector = @selector(compareWithId:withId:);
-  methods[2].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "tolerance_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "D", "compare", "LNSNumber;LNSNumber;", "toString", "LComGoogleCommonTruthCorrespondence;", "Lcom/google/common/truth/Correspondence<Ljava/lang/Number;Ljava/lang/Number;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthCorrespondence_TolerantNumericEquality = { "TolerantNumericEquality", "com.google.common.truth", ptrTable, methods, fields, 7, 0x1a, 3, 1, 4, -1, -1, 5, -1 };
-  return &_ComGoogleCommonTruthCorrespondence_TolerantNumericEquality;
-}
-
-@end
-
-void ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality *self, jdouble tolerance) {
-  ComGoogleCommonTruthCorrespondence_init(self);
-  self->tolerance_ = tolerance;
-}
-
-ComGoogleCommonTruthCorrespondence_TolerantNumericEquality *new_ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(jdouble tolerance) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality, initWithDouble_, tolerance)
-}
-
-ComGoogleCommonTruthCorrespondence_TolerantNumericEquality *create_ComGoogleCommonTruthCorrespondence_TolerantNumericEquality_initWithDouble_(jdouble tolerance) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality, initWithDouble_, tolerance)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthCorrespondence_TolerantNumericEquality)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDefaultSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDefaultSubject.h
deleted file mode 100644
index c99133041..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDefaultSubject.h
+++ /dev/null
@@ -1,58 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthDefaultSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthDefaultSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthDefaultSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthDefaultSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthDefaultSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthDefaultSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthDefaultSubject || defined(INCLUDE_ComGoogleCommonTruthDefaultSubject))
-#define ComGoogleCommonTruthDefaultSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthDefaultSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                                     withId:(id)o;
-
-- (ComGoogleCommonTruthDefaultSubject *)namedWithNSString:(NSString *)arg0
-                                        withNSObjectArray:(IOSObjectArray *)arg1;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthDefaultSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthDefaultSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthDefaultSubject *new_ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthDefaultSubject *create_ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthDefaultSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthDefaultSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDefaultSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDefaultSubject.m
deleted file mode 100644
index 42e38590c..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDefaultSubject.m
+++ /dev/null
@@ -1,57 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthDefaultSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDefaultSubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthDefaultSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                                     withId:(id)o {
-  ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, 1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LNSObject;", (void *)&ComGoogleCommonTruthDefaultSubject__Annotations$0, "Lcom/google/common/truth/Subject<Lcom/google/common/truth/DefaultSubject;Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthDefaultSubject = { "DefaultSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 2, -1 };
-  return &_ComGoogleCommonTruthDefaultSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthDefaultSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id o) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthDefaultSubject *new_ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthDefaultSubject, initWithComGoogleCommonTruthFailureStrategy_withId_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthDefaultSubject *create_ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthDefaultSubject, initWithComGoogleCommonTruthFailureStrategy_withId_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthDefaultSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthDefaultSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDoubleSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDoubleSubject.h
deleted file mode 100644
index e84e5191e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDoubleSubject.h
+++ /dev/null
@@ -1,117 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthDoubleSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthDoubleSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthDoubleSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthDoubleSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthDoubleSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthDoubleSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthDoubleSubject || defined(INCLUDE_ComGoogleCommonTruthDoubleSubject))
-#define ComGoogleCommonTruthDoubleSubject_
-
-#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
-#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
-#include "ComGoogleCommonTruthComparableSubject.h"
-
-@class ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison;
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@class JavaLangDouble;
-
-@interface ComGoogleCommonTruthDoubleSubject : ComGoogleCommonTruthComparableSubject
-
-#pragma mark Public
-
-- (void)isEqualToWithJavaLangDouble:(JavaLangDouble *)other;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangDouble *)other;
-
-- (void)isFinite;
-
-- (void)isNaN;
-
-- (void)isNegativeInfinity;
-
-- (void)isNonZero;
-
-- (void)isNotEqualToWithJavaLangDouble:(JavaLangDouble *)other;
-
-- (void)isNotNaN;
-
-- (ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison *)isNotWithinWithDouble:(jdouble)tolerance;
-
-- (void)isPositiveInfinity;
-
-- (ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison *)isWithinWithDouble:(jdouble)tolerance;
-
-- (void)isZero;
-
-- (ComGoogleCommonTruthDoubleSubject *)namedWithNSString:(NSString *)arg0
-                                       withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (JavaLangDouble *)actual;
-
-- (JavaLangDouble *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                         withJavaLangDouble:(JavaLangDouble *)subject;
-
-+ (void)checkToleranceWithDouble:(jdouble)tolerance;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthDoubleSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(ComGoogleCommonTruthDoubleSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangDouble *subject);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthDoubleSubject *new_ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangDouble *subject) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthDoubleSubject *create_ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangDouble *subject);
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(jdouble tolerance);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthDoubleSubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_) && (INCLUDE_ALL_ComGoogleCommonTruthDoubleSubject || defined(INCLUDE_ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison))
-#define ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_
-
-@interface ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison : NSObject
-
-#pragma mark Public
-
-- (jboolean)isEqual:(id)o;
-
-- (NSUInteger)hash;
-
-- (void)ofWithDouble:(jdouble)expectedDouble;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthDoubleSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDoubleSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDoubleSubject.m
deleted file mode 100644
index 3b2a1e6cd..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthDoubleSubject.m
+++ /dev/null
@@ -1,421 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthDoubleSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthMathUtil.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Double.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-inline jlong ComGoogleCommonTruthDoubleSubject_get_NEG_ZERO_BITS();
-static jlong ComGoogleCommonTruthDoubleSubject_NEG_ZERO_BITS;
-J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonTruthDoubleSubject, NEG_ZERO_BITS, jlong)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$3();
-
-@interface ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_init(ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$2();
-
-@interface ComGoogleCommonTruthDoubleSubject_1 : ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison {
- @public
-  ComGoogleCommonTruthDoubleSubject *this$0_;
-  jdouble val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthDoubleSubject:(ComGoogleCommonTruthDoubleSubject *)outer$
-                                               withDouble:(jdouble)capture$0;
-
-- (void)ofWithDouble:(jdouble)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthDoubleSubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject_1 *self, ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthDoubleSubject_1 *new_ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthDoubleSubject_1 *create_ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0);
-
-@interface ComGoogleCommonTruthDoubleSubject_2 : ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison {
- @public
-  ComGoogleCommonTruthDoubleSubject *this$0_;
-  jdouble val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthDoubleSubject:(ComGoogleCommonTruthDoubleSubject *)outer$
-                                               withDouble:(jdouble)capture$0;
-
-- (void)ofWithDouble:(jdouble)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthDoubleSubject_2)
-
-__attribute__((unused)) static void ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject_2 *self, ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthDoubleSubject_2 *new_ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthDoubleSubject_2 *create_ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0);
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthDoubleSubject)
-
-@implementation ComGoogleCommonTruthDoubleSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                         withJavaLangDouble:(JavaLangDouble *)subject {
-  ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(self, failureStrategy, subject);
-  return self;
-}
-
-- (ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison *)isWithinWithDouble:(jdouble)tolerance {
-  return create_ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(self, tolerance);
-}
-
-- (ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison *)isNotWithinWithDouble:(jdouble)tolerance {
-  return create_ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(self, tolerance);
-}
-
-- (void)isEqualToWithJavaLangDouble:(JavaLangDouble *)other {
-  [super isEqualToWithId:other];
-}
-
-- (void)isNotEqualToWithJavaLangDouble:(JavaLangDouble *)other {
-  [super isNotEqualToWithId:other];
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangDouble *)other {
-  [super isEquivalentAccordingToCompareToWithJavaLangComparable:other];
-}
-
-+ (void)checkToleranceWithDouble:(jdouble)tolerance {
-  ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(tolerance);
-}
-
-- (void)isZero {
-  if ([self actual] == nil || [((JavaLangDouble *) nil_chk([self actual])) doubleValue] != 0.0) {
-    [self failWithNSString:@"is zero"];
-  }
-}
-
-- (void)isNonZero {
-  if ([self actual] == nil || [((JavaLangDouble *) nil_chk([self actual])) doubleValue] == 0.0) {
-    [self failWithNSString:@"is non-zero"];
-  }
-}
-
-- (void)isPositiveInfinity {
-  [self isEqualToWithJavaLangDouble:JavaLangDouble_valueOfWithDouble_(JavaLangDouble_POSITIVE_INFINITY)];
-}
-
-- (void)isNegativeInfinity {
-  [self isEqualToWithJavaLangDouble:JavaLangDouble_valueOfWithDouble_(JavaLangDouble_NEGATIVE_INFINITY)];
-}
-
-- (void)isNaN {
-  [self isEqualToWithJavaLangDouble:JavaLangDouble_valueOfWithDouble_(JavaLangDouble_NaN)];
-}
-
-- (void)isFinite {
-  if ([self actual] == nil || [((JavaLangDouble *) nil_chk([self actual])) isNaN] || [((JavaLangDouble *) nil_chk([self actual])) isInfinite]) {
-    [self failWithRawMessageWithNSString:@"%s should have been finite" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString] } count:1 type:NSObject_class_()]];
-  }
-}
-
-- (void)isNotNaN {
-  if ([self actual] == nil || [((JavaLangDouble *) nil_chk([self actual])) isNaN]) {
-    [self failWithRawMessageWithNSString:@"%s should not have been NaN" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString] } count:1 type:NSObject_class_()]];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison;", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison;", 0x1, 4, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 5, 6, -1, -1, -1, 7 },
-    { NULL, "V", 0x11, 8, 6, -1, -1, -1, 9 },
-    { NULL, "V", 0x11, 10, 6, -1, -1, 11, -1 },
-    { NULL, "V", 0x8, 12, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangDouble:);
-  methods[1].selector = @selector(isWithinWithDouble:);
-  methods[2].selector = @selector(isNotWithinWithDouble:);
-  methods[3].selector = @selector(isEqualToWithJavaLangDouble:);
-  methods[4].selector = @selector(isNotEqualToWithJavaLangDouble:);
-  methods[5].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  methods[6].selector = @selector(checkToleranceWithDouble:);
-  methods[7].selector = @selector(isZero);
-  methods[8].selector = @selector(isNonZero);
-  methods[9].selector = @selector(isPositiveInfinity);
-  methods[10].selector = @selector(isNegativeInfinity);
-  methods[11].selector = @selector(isNaN);
-  methods[12].selector = @selector(isFinite);
-  methods[13].selector = @selector(isNotNaN);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "NEG_ZERO_BITS", "J", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangDouble;", (void *)&ComGoogleCommonTruthDoubleSubject__Annotations$0, "isWithin", "D", "isNotWithin", "isEqualTo", "LJavaLangDouble;", (void *)&ComGoogleCommonTruthDoubleSubject__Annotations$1, "isNotEqualTo", (void *)&ComGoogleCommonTruthDoubleSubject__Annotations$2, "isEquivalentAccordingToCompareTo", (void *)&ComGoogleCommonTruthDoubleSubject__Annotations$3, "checkTolerance", &ComGoogleCommonTruthDoubleSubject_NEG_ZERO_BITS, "LComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison;", "Lcom/google/common/truth/ComparableSubject<Lcom/google/common/truth/DoubleSubject;Ljava/lang/Double;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthDoubleSubject = { "DoubleSubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 14, 1, -1, 14, -1, 15, -1 };
-  return &_ComGoogleCommonTruthDoubleSubject;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthDoubleSubject class]) {
-    ComGoogleCommonTruthDoubleSubject_NEG_ZERO_BITS = JavaLangDouble_doubleToLongBitsWithDouble_(-0.0);
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthDoubleSubject)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(ComGoogleCommonTruthDoubleSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangDouble *subject) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthDoubleSubject *new_ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangDouble *subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthDoubleSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthDoubleSubject *create_ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangDouble *subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthDoubleSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_, failureStrategy, subject)
-}
-
-void ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(jdouble tolerance) {
-  ComGoogleCommonTruthDoubleSubject_initialize();
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(!JavaLangDouble_isNaNWithDouble_(tolerance), @"tolerance cannot be NaN");
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(tolerance >= 0.0, @"tolerance (%s) cannot be negative", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(tolerance) } count:1 type:NSObject_class_()]);
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(JavaLangDouble_doubleToLongBitsWithDouble_(tolerance) != ComGoogleCommonTruthDoubleSubject_NEG_ZERO_BITS, @"tolerance (%s) cannot be negative", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(tolerance) } count:1 type:NSObject_class_()]);
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(tolerance != JavaLangDouble_POSITIVE_INFINITY, @"tolerance cannot be POSITIVE_INFINITY");
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthDoubleSubject)
-
-@implementation ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)ofWithDouble:(jdouble)expectedDouble {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (jboolean)isEqual:(id)o {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"If you meant to compare doubles, use .of(double) instead.");
-}
-
-- (NSUInteger)hash {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Subject.hashCode() is not supported.");
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 2, 3, -1, -1, 4, 5 },
-    { NULL, "I", 0x1, 6, -1, -1, -1, 7, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(ofWithDouble:);
-  methods[2].selector = @selector(isEqual:);
-  methods[3].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "of", "D", "equals", "LNSObject;", (void *)&ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$0, (void *)&ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$1, "hashCode", (void *)&ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$2, "LComGoogleCommonTruthDoubleSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison = { "TolerantDoubleComparison", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x409, 4, 0, 8, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison;
-}
-
-@end
-
-void ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_init(ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison *self) {
-  NSObject_init(self);
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison)
-
-@implementation ComGoogleCommonTruthDoubleSubject_1
-
-- (instancetype)initWithComGoogleCommonTruthDoubleSubject:(ComGoogleCommonTruthDoubleSubject *)outer$
-                                               withDouble:(jdouble)capture$0 {
-  ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofWithDouble:(jdouble)expected {
-  JavaLangDouble *actual = [this$0_ actual];
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withNSString_withNSObjectArray_(actual, @"actual value cannot be null. tolerance=%s expected=%s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(val$tolerance_), JavaLangDouble_valueOfWithDouble_(expected) } count:2 type:NSObject_class_()]);
-  ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(val$tolerance_);
-  if (!ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_([((JavaLangDouble *) nil_chk(actual)) doubleValue], expected, val$tolerance_)) {
-    [this$0_ failWithRawMessageWithNSString:@"%s and <%s> should have been finite values within <%s> of each other" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], JavaLangDouble_valueOfWithDouble_(expected), JavaLangDouble_valueOfWithDouble_(val$tolerance_) } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthDoubleSubject:withDouble:);
-  methods[1].selector = @selector(ofWithDouble:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthDoubleSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "of", "D", "LComGoogleCommonTruthDoubleSubject;", "isWithinWithDouble:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthDoubleSubject_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, -1, -1 };
-  return &_ComGoogleCommonTruthDoubleSubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject_1 *self, ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_init(self);
-}
-
-ComGoogleCommonTruthDoubleSubject_1 *new_ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthDoubleSubject_1, initWithComGoogleCommonTruthDoubleSubject_withDouble_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthDoubleSubject_1 *create_ComGoogleCommonTruthDoubleSubject_1_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthDoubleSubject_1, initWithComGoogleCommonTruthDoubleSubject_withDouble_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthDoubleSubject_2
-
-- (instancetype)initWithComGoogleCommonTruthDoubleSubject:(ComGoogleCommonTruthDoubleSubject *)outer$
-                                               withDouble:(jdouble)capture$0 {
-  ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofWithDouble:(jdouble)expected {
-  JavaLangDouble *actual = [this$0_ actual];
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withNSString_withNSObjectArray_(actual, @"actual value cannot be null. tolerance=%s expected=%s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(val$tolerance_), JavaLangDouble_valueOfWithDouble_(expected) } count:2 type:NSObject_class_()]);
-  ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(val$tolerance_);
-  if (!ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithDouble_withDouble_withDouble_([((JavaLangDouble *) nil_chk(actual)) doubleValue], expected, val$tolerance_)) {
-    [this$0_ failWithRawMessageWithNSString:@"%s and <%s> should have been finite values not within <%s> of each other" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], JavaLangDouble_valueOfWithDouble_(expected), JavaLangDouble_valueOfWithDouble_(val$tolerance_) } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthDoubleSubject:withDouble:);
-  methods[1].selector = @selector(ofWithDouble:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthDoubleSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "of", "D", "LComGoogleCommonTruthDoubleSubject;", "isNotWithinWithDouble:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthDoubleSubject_2 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, -1, -1 };
-  return &_ComGoogleCommonTruthDoubleSubject_2;
-}
-
-@end
-
-void ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject_2 *self, ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthDoubleSubject_TolerantDoubleComparison_init(self);
-}
-
-ComGoogleCommonTruthDoubleSubject_2 *new_ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthDoubleSubject_2, initWithComGoogleCommonTruthDoubleSubject_withDouble_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthDoubleSubject_2 *create_ComGoogleCommonTruthDoubleSubject_2_initWithComGoogleCommonTruthDoubleSubject_withDouble_(ComGoogleCommonTruthDoubleSubject *outer$, jdouble capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthDoubleSubject_2, initWithComGoogleCommonTruthDoubleSubject_withDouble_, outer$, capture$0)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthExpect.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthExpect.h
deleted file mode 100644
index 8d7a7f0a7..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthExpect.h
+++ /dev/null
@@ -1,164 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthExpect")
-#ifdef RESTRICT_ComGoogleCommonTruthExpect
-#define INCLUDE_ALL_ComGoogleCommonTruthExpect 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthExpect 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthExpect
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthExpect_) && (INCLUDE_ALL_ComGoogleCommonTruthExpect || defined(INCLUDE_ComGoogleCommonTruthExpect))
-#define ComGoogleCommonTruthExpect_
-
-#define RESTRICT_ComGoogleCommonTruthTestVerb 1
-#define INCLUDE_ComGoogleCommonTruthTestVerb 1
-#include "ComGoogleCommonTruthTestVerb.h"
-
-#define RESTRICT_OrgJunitRulesTestRule 1
-#define INCLUDE_OrgJunitRulesTestRule 1
-#include "org/junit/rules/TestRule.h"
-
-@class ComGoogleCommonTruthExpect_ExpectationGatherer;
-@class ComGoogleCommonTruthFailureStrategy;
-@class OrgJunitRunnerDescription;
-@class OrgJunitRunnersModelStatement;
-
-@interface ComGoogleCommonTruthExpect : ComGoogleCommonTruthTestVerb < OrgJunitRulesTestRule >
-
-#pragma mark Public
-
-- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
-                                            withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;
-
-+ (ComGoogleCommonTruthExpect *)create;
-
-+ (ComGoogleCommonTruthExpect *)createWithComGoogleCommonTruthExpect_ExpectationGatherer:(ComGoogleCommonTruthExpect_ExpectationGatherer *)gatherer;
-
-+ (ComGoogleCommonTruthExpect *)createAndEnableStackTrace;
-
-- (jboolean)hasFailures;
-
-#pragma mark Protected
-
-- (ComGoogleCommonTruthFailureStrategy *)getFailureStrategy;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthExpect_ExpectationGatherer:(ComGoogleCommonTruthExpect_ExpectationGatherer *)gatherer;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthExpect)
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect *ComGoogleCommonTruthExpect_create();
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect *ComGoogleCommonTruthExpect_createWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect *ComGoogleCommonTruthExpect_createAndEnableStackTrace();
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect *self, ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect *new_ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect *create_ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthExpect)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthExpect_ExpectationGatherer_) && (INCLUDE_ALL_ComGoogleCommonTruthExpect || defined(INCLUDE_ComGoogleCommonTruthExpect_ExpectationGatherer))
-#define ComGoogleCommonTruthExpect_ExpectationGatherer_
-
-#define RESTRICT_ComGoogleCommonTruthFailureStrategy 1
-#define INCLUDE_ComGoogleCommonTruthFailureStrategy 1
-#include "ComGoogleCommonTruthFailureStrategy.h"
-
-@protocol JavaLangCharSequence;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthExpect_ExpectationGatherer : ComGoogleCommonTruthFailureStrategy
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (instancetype)initWithBoolean:(jboolean)showStackTrace;
-
-- (void)failWithNSString:(NSString *)message;
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause;
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-- (id<JavaUtilList>)getMessages;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthExpect_ExpectationGatherer)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthExpect_ExpectationGatherer_init(ComGoogleCommonTruthExpect_ExpectationGatherer *self);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect_ExpectationGatherer *new_ComGoogleCommonTruthExpect_ExpectationGatherer_init() NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect_ExpectationGatherer *create_ComGoogleCommonTruthExpect_ExpectationGatherer_init();
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(ComGoogleCommonTruthExpect_ExpectationGatherer *self, jboolean showStackTrace);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect_ExpectationGatherer *new_ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(jboolean showStackTrace) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect_ExpectationGatherer *create_ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(jboolean showStackTrace);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthExpect_ExpectationGatherer)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthExpect_ExpectationFailure_) && (INCLUDE_ALL_ComGoogleCommonTruthExpect || defined(INCLUDE_ComGoogleCommonTruthExpect_ExpectationFailure))
-#define ComGoogleCommonTruthExpect_ExpectationFailure_
-
-@interface ComGoogleCommonTruthExpect_ExpectationFailure : NSObject
-
-#pragma mark Public
-
-- (jboolean)isEqual:(id)other;
-
-- (NSUInteger)hash;
-
-#pragma mark Package-Private
-
-- (NSException *)cause;
-
-+ (ComGoogleCommonTruthExpect_ExpectationFailure *)createWithNSString:(NSString *)message
-                                                      withNSException:(NSException *)cause;
-
-- (NSString *)message;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthExpect_ExpectationFailure)
-
-FOUNDATION_EXPORT ComGoogleCommonTruthExpect_ExpectationFailure *ComGoogleCommonTruthExpect_ExpectationFailure_createWithNSString_withNSException_(NSString *message, NSException *cause);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthExpect_ExpectationFailure)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthExpect")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthExpect.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthExpect.m
deleted file mode 100644
index 6d9de6841..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthExpect.m
+++ /dev/null
@@ -1,491 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthExpect.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/io/PrintWriter.h"
-#include "java/io/StringWriter.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-#include "org/junit/runner/Description.h"
-#include "org/junit/runners/model/Statement.h"
-
-@interface ComGoogleCommonTruthExpect () {
- @public
-  ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer_;
-  jboolean inRuleContext_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthExpect, gatherer_, ComGoogleCommonTruthExpect_ExpectationGatherer *)
-
-@interface ComGoogleCommonTruthExpect_ExpectationGatherer () {
- @public
-  id<JavaUtilList> messages_;
-  jboolean showStackTrace_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthExpect_ExpectationGatherer, messages_, id<JavaUtilList>)
-
-@interface ComGoogleCommonTruthExpect_ExpectationFailure () {
- @public
-  NSString *message_;
-  NSException *cause_;
-}
-
-- (instancetype)initWithNSString:(NSString *)message
-                 withNSException:(NSException *)cause;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthExpect_ExpectationFailure, message_, NSString *)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthExpect_ExpectationFailure, cause_, NSException *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(ComGoogleCommonTruthExpect_ExpectationFailure *self, NSString *message, NSException *cause);
-
-__attribute__((unused)) static ComGoogleCommonTruthExpect_ExpectationFailure *new_ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthExpect_ExpectationFailure *create_ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(NSString *message, NSException *cause);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$4();
-
-@interface ComGoogleCommonTruthExpect_1 : OrgJunitRunnersModelStatement {
- @public
-  ComGoogleCommonTruthExpect *this$0_;
-  OrgJunitRunnersModelStatement *val$base_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthExpect:(ComGoogleCommonTruthExpect *)outer$
-                 withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$0;
-
-- (void)evaluate;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthExpect_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(ComGoogleCommonTruthExpect_1 *self, ComGoogleCommonTruthExpect *outer$, OrgJunitRunnersModelStatement *capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthExpect_1 *new_ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(ComGoogleCommonTruthExpect *outer$, OrgJunitRunnersModelStatement *capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthExpect_1 *create_ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(ComGoogleCommonTruthExpect *outer$, OrgJunitRunnersModelStatement *capture$0);
-
-@implementation ComGoogleCommonTruthExpect
-
-+ (ComGoogleCommonTruthExpect *)create {
-  return ComGoogleCommonTruthExpect_create();
-}
-
-+ (ComGoogleCommonTruthExpect *)createWithComGoogleCommonTruthExpect_ExpectationGatherer:(ComGoogleCommonTruthExpect_ExpectationGatherer *)gatherer {
-  return ComGoogleCommonTruthExpect_createWithComGoogleCommonTruthExpect_ExpectationGatherer_(gatherer);
-}
-
-+ (ComGoogleCommonTruthExpect *)createAndEnableStackTrace {
-  return ComGoogleCommonTruthExpect_createAndEnableStackTrace();
-}
-
-- (instancetype)initWithComGoogleCommonTruthExpect_ExpectationGatherer:(ComGoogleCommonTruthExpect_ExpectationGatherer *)gatherer {
-  ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(self, gatherer);
-  return self;
-}
-
-- (jboolean)hasFailures {
-  return ![((id<JavaUtilList>) nil_chk([((ComGoogleCommonTruthExpect_ExpectationGatherer *) nil_chk(gatherer_)) getMessages])) isEmpty];
-}
-
-- (ComGoogleCommonTruthFailureStrategy *)getFailureStrategy {
-  if (!inRuleContext_) {
-    NSString *message = @"assertion made on Expect instance, but it's not enabled as a @Rule.";
-    @throw create_JavaLangIllegalStateException_initWithNSString_(message);
-  }
-  return [super getFailureStrategy];
-}
-
-- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
-                                            withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(base);
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(description_);
-  return create_ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(self, base);
-}
-
-- (void)dealloc {
-  RELEASE_(gatherer_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LComGoogleCommonTruthExpect;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthExpect;", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthExpect;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthFailureStrategy;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LOrgJunitRunnersModelStatement;", 0x1, 2, 3, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(create);
-  methods[1].selector = @selector(createWithComGoogleCommonTruthExpect_ExpectationGatherer:);
-  methods[2].selector = @selector(createAndEnableStackTrace);
-  methods[3].selector = @selector(initWithComGoogleCommonTruthExpect_ExpectationGatherer:);
-  methods[4].selector = @selector(hasFailures);
-  methods[5].selector = @selector(getFailureStrategy);
-  methods[6].selector = @selector(applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnerDescription:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "gatherer_", "LComGoogleCommonTruthExpect_ExpectationGatherer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "inRuleContext_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "create", "LComGoogleCommonTruthExpect_ExpectationGatherer;", "apply", "LOrgJunitRunnersModelStatement;LOrgJunitRunnerDescription;", "LComGoogleCommonTruthExpect_ExpectationGatherer;LComGoogleCommonTruthExpect_ExpectationFailure;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthExpect = { "Expect", "com.google.common.truth", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, 4, -1, -1, -1 };
-  return &_ComGoogleCommonTruthExpect;
-}
-
-@end
-
-ComGoogleCommonTruthExpect *ComGoogleCommonTruthExpect_create() {
-  ComGoogleCommonTruthExpect_initialize();
-  return ComGoogleCommonTruthExpect_createWithComGoogleCommonTruthExpect_ExpectationGatherer_(create_ComGoogleCommonTruthExpect_ExpectationGatherer_init());
-}
-
-ComGoogleCommonTruthExpect *ComGoogleCommonTruthExpect_createWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer) {
-  ComGoogleCommonTruthExpect_initialize();
-  return create_ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(gatherer);
-}
-
-ComGoogleCommonTruthExpect *ComGoogleCommonTruthExpect_createAndEnableStackTrace() {
-  ComGoogleCommonTruthExpect_initialize();
-  return create_ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(create_ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(true));
-}
-
-void ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect *self, ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer) {
-  ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(self, gatherer);
-  self->inRuleContext_ = false;
-  JreStrongAssign(&self->gatherer_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(gatherer));
-}
-
-ComGoogleCommonTruthExpect *new_ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthExpect, initWithComGoogleCommonTruthExpect_ExpectationGatherer_, gatherer)
-}
-
-ComGoogleCommonTruthExpect *create_ComGoogleCommonTruthExpect_initWithComGoogleCommonTruthExpect_ExpectationGatherer_(ComGoogleCommonTruthExpect_ExpectationGatherer *gatherer) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthExpect, initWithComGoogleCommonTruthExpect_ExpectationGatherer_, gatherer)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthExpect)
-
-@implementation ComGoogleCommonTruthExpect_ExpectationGatherer
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthExpect_ExpectationGatherer_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (instancetype)initWithBoolean:(jboolean)showStackTrace {
-  ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(self, showStackTrace);
-  return self;
-}
-
-- (void)failWithNSString:(NSString *)message {
-  [self failWithNSString:ComGoogleCommonBasePreconditions_checkNotNullWithId_(message) withNSException:create_NSException_initWithNSString_(message)];
-}
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  NSString *errorMessage = ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(message, expected, actual);
-  [self failWithNSString:errorMessage withNSException:create_NSException_initWithNSString_(errorMessage)];
-}
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause {
-  [((id<JavaUtilList>) nil_chk(messages_)) addWithId:ComGoogleCommonTruthExpect_ExpectationFailure_createWithNSString_withNSException_(message, cause)];
-}
-
-- (id<JavaUtilList>)getMessages {
-  return messages_;
-}
-
-- (NSString *)description {
-  NSException *earliestCause = nil;
-  JavaLangStringBuilder *message = create_JavaLangStringBuilder_initWithNSString_(@"All failed expectations:\n");
-  jint count = 0;
-  for (ComGoogleCommonTruthExpect_ExpectationFailure * __strong failure in nil_chk([self getMessages])) {
-    if (earliestCause == nil && [((ComGoogleCommonTruthExpect_ExpectationFailure *) nil_chk(failure)) cause] != nil) {
-      earliestCause = [((ComGoogleCommonTruthExpect_ExpectationFailure *) nil_chk(failure)) cause];
-    }
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([message appendWithNSString:@"  "])) appendWithInt:(count++) + 1])) appendWithNSString:@". "])) appendWithNSString:[((ComGoogleCommonTruthExpect_ExpectationFailure *) nil_chk(failure)) message]])) appendWithNSString:@"\n"];
-    if (showStackTrace_ && [failure cause] != nil) {
-      JavaIoStringWriter *stackTraceWriter = create_JavaIoStringWriter_init();
-      [((NSException *) nil_chk([failure cause])) printStackTraceWithJavaIoPrintWriter:create_JavaIoPrintWriter_initWithJavaIoWriter_(stackTraceWriter)];
-      [message appendWithNSString:JreStrcat("@C", stackTraceWriter, 0x000a)];
-    }
-  }
-  return [message description];
-}
-
-- (void)dealloc {
-  RELEASE_(messages_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 1, 5, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 6, -1, -1 },
-    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(initWithBoolean:);
-  methods[2].selector = @selector(failWithNSString:);
-  methods[3].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  methods[4].selector = @selector(failWithNSString:withNSException:);
-  methods[5].selector = @selector(getMessages);
-  methods[6].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "messages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
-    { "showStackTrace_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "Z", "fail", "LNSString;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "LNSString;LNSException;", "()Ljava/util/List<Lcom/google/common/truth/Expect$ExpectationFailure;>;", "toString", "Ljava/util/List<Lcom/google/common/truth/Expect$ExpectationFailure;>;", "LComGoogleCommonTruthExpect;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthExpect_ExpectationGatherer = { "ExpectationGatherer", "com.google.common.truth", ptrTable, methods, fields, 7, 0x9, 7, 2, 9, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthExpect_ExpectationGatherer;
-}
-
-@end
-
-void ComGoogleCommonTruthExpect_ExpectationGatherer_init(ComGoogleCommonTruthExpect_ExpectationGatherer *self) {
-  ComGoogleCommonTruthFailureStrategy_init(self);
-  JreStrongAssignAndConsume(&self->messages_, new_JavaUtilArrayList_init());
-  self->showStackTrace_ = false;
-}
-
-ComGoogleCommonTruthExpect_ExpectationGatherer *new_ComGoogleCommonTruthExpect_ExpectationGatherer_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthExpect_ExpectationGatherer, init)
-}
-
-ComGoogleCommonTruthExpect_ExpectationGatherer *create_ComGoogleCommonTruthExpect_ExpectationGatherer_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthExpect_ExpectationGatherer, init)
-}
-
-void ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(ComGoogleCommonTruthExpect_ExpectationGatherer *self, jboolean showStackTrace) {
-  ComGoogleCommonTruthFailureStrategy_init(self);
-  JreStrongAssignAndConsume(&self->messages_, new_JavaUtilArrayList_init());
-  self->showStackTrace_ = showStackTrace;
-}
-
-ComGoogleCommonTruthExpect_ExpectationGatherer *new_ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(jboolean showStackTrace) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthExpect_ExpectationGatherer, initWithBoolean_, showStackTrace)
-}
-
-ComGoogleCommonTruthExpect_ExpectationGatherer *create_ComGoogleCommonTruthExpect_ExpectationGatherer_initWithBoolean_(jboolean showStackTrace) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthExpect_ExpectationGatherer, initWithBoolean_, showStackTrace)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthExpect_ExpectationGatherer)
-
-@implementation ComGoogleCommonTruthExpect_ExpectationFailure
-
-+ (ComGoogleCommonTruthExpect_ExpectationFailure *)createWithNSString:(NSString *)message
-                                                      withNSException:(NSException *)cause {
-  return ComGoogleCommonTruthExpect_ExpectationFailure_createWithNSString_withNSException_(message, cause);
-}
-
-- (instancetype)initWithNSString:(NSString *)message
-                 withNSException:(NSException *)cause {
-  ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(self, message, cause);
-  return self;
-}
-
-- (NSString *)message {
-  return message_;
-}
-
-- (NSException *)cause {
-  return cause_;
-}
-
-- (jboolean)isEqual:(id)other {
-  if ([other isKindOfClass:[ComGoogleCommonTruthExpect_ExpectationFailure class]]) {
-    ComGoogleCommonTruthExpect_ExpectationFailure *that = (ComGoogleCommonTruthExpect_ExpectationFailure *) cast_chk(other, [ComGoogleCommonTruthExpect_ExpectationFailure class]);
-    return [((NSString *) nil_chk(self->message_)) isEqual:((ComGoogleCommonTruthExpect_ExpectationFailure *) nil_chk(that))->message_] && ComGoogleCommonBaseObjects_equalWithId_withId_(self->cause_, that->cause_);
-  }
-  else {
-    return false;
-  }
-}
-
-- (NSUInteger)hash {
-  return ComGoogleCommonBaseObjects_hashCodeWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ message_, cause_ } count:2 type:NSObject_class_()]);
-}
-
-- (void)dealloc {
-  RELEASE_(message_);
-  RELEASE_(cause_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LComGoogleCommonTruthExpect_ExpectationFailure;", 0x8, 0, 1, -1, -1, -1, 2 },
-    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, 3 },
-    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSException;", 0x0, -1, -1, -1, -1, 4, -1 },
-    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, 7 },
-    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(createWithNSString:withNSException:);
-  methods[1].selector = @selector(initWithNSString:withNSException:);
-  methods[2].selector = @selector(message);
-  methods[3].selector = @selector(cause);
-  methods[4].selector = @selector(isEqual:);
-  methods[5].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "message_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "cause_", "LNSException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, 9 },
-  };
-  static const void *ptrTable[] = { "create", "LNSString;LNSException;", (void *)&ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$0, (void *)&ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$1, (void *)&ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$2, "equals", "LNSObject;", (void *)&ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$3, "hashCode", (void *)&ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$4, "LComGoogleCommonTruthExpect;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthExpect_ExpectationFailure = { "ExpectationFailure", "com.google.common.truth", ptrTable, methods, fields, 7, 0x18, 6, 2, 10, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthExpect_ExpectationFailure;
-}
-
-@end
-
-ComGoogleCommonTruthExpect_ExpectationFailure *ComGoogleCommonTruthExpect_ExpectationFailure_createWithNSString_withNSException_(NSString *message, NSException *cause) {
-  ComGoogleCommonTruthExpect_ExpectationFailure_initialize();
-  return create_ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(message, cause);
-}
-
-void ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(ComGoogleCommonTruthExpect_ExpectationFailure *self, NSString *message, NSException *cause) {
-  NSObject_init(self);
-  JreStrongAssign(&self->message_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(message));
-  JreStrongAssign(&self->cause_, cause);
-}
-
-ComGoogleCommonTruthExpect_ExpectationFailure *new_ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(NSString *message, NSException *cause) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthExpect_ExpectationFailure, initWithNSString_withNSException_, message, cause)
-}
-
-ComGoogleCommonTruthExpect_ExpectationFailure *create_ComGoogleCommonTruthExpect_ExpectationFailure_initWithNSString_withNSException_(NSString *message, NSException *cause) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthExpect_ExpectationFailure, initWithNSString_withNSException_, message, cause)
-}
-
-IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthExpect_ExpectationFailure__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthExpect_ExpectationFailure)
-
-@implementation ComGoogleCommonTruthExpect_1
-
-- (instancetype)initWithComGoogleCommonTruthExpect:(ComGoogleCommonTruthExpect *)outer$
-                 withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$0 {
-  ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)evaluate {
-  this$0_->inRuleContext_ = true;
-  [((OrgJunitRunnersModelStatement *) nil_chk(val$base_)) evaluate];
-  this$0_->inRuleContext_ = false;
-  NSException *earliestCause = nil;
-  if (![((id<JavaUtilList>) nil_chk([((ComGoogleCommonTruthExpect_ExpectationGatherer *) nil_chk(this$0_->gatherer_)) getMessages])) isEmpty]) {
-    JavaLangAssertionError *error = create_JavaLangAssertionError_initWithId_([this$0_->gatherer_ description]);
-    [error initCauseWithNSException:earliestCause];
-    @throw error;
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(val$base_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthExpect:withOrgJunitRunnersModelStatement:);
-  methods[1].selector = @selector(evaluate);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthExpect;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$base_", "LOrgJunitRunnersModelStatement;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSException;", "LComGoogleCommonTruthExpect;", "applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnerDescription:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthExpect_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
-  return &_ComGoogleCommonTruthExpect_1;
-}
-
-@end
-
-void ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(ComGoogleCommonTruthExpect_1 *self, ComGoogleCommonTruthExpect *outer$, OrgJunitRunnersModelStatement *capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JreStrongAssign(&self->val$base_, capture$0);
-  OrgJunitRunnersModelStatement_init(self);
-}
-
-ComGoogleCommonTruthExpect_1 *new_ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(ComGoogleCommonTruthExpect *outer$, OrgJunitRunnersModelStatement *capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthExpect_1, initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthExpect_1 *create_ComGoogleCommonTruthExpect_1_initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_(ComGoogleCommonTruthExpect *outer$, OrgJunitRunnersModelStatement *capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthExpect_1, initWithComGoogleCommonTruthExpect_withOrgJunitRunnersModelStatement_, outer$, capture$0)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureContext.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureContext.h
deleted file mode 100644
index 5c7b00436..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureContext.h
+++ /dev/null
@@ -1,62 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthFailureContext")
-#ifdef RESTRICT_ComGoogleCommonTruthFailureContext
-#define INCLUDE_ALL_ComGoogleCommonTruthFailureContext 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthFailureContext 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthFailureContext
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthFailureContext_) && (INCLUDE_ALL_ComGoogleCommonTruthFailureContext || defined(INCLUDE_ComGoogleCommonTruthFailureContext))
-#define ComGoogleCommonTruthFailureContext_
-
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthFailureContext : NSObject
-
-#pragma mark Public
-
-- (instancetype)initWithNSString:(NSString *)format
-               withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (NSString *)getFailureMessage;
-
-- (jboolean)hasFailureMessage;
-
-#pragma mark Package-Private
-
-+ (jint)countPlaceholdersWithNSString:(NSString *)template_;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthFailureContext)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(ComGoogleCommonTruthFailureContext *self, NSString *format, IOSObjectArray *args);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthFailureContext *new_ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthFailureContext *create_ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args);
-
-FOUNDATION_EXPORT jint ComGoogleCommonTruthFailureContext_countPlaceholdersWithNSString_(NSString *template_);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthFailureContext)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthFailureContext")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureContext.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureContext.m
deleted file mode 100644
index 5ade0bb00..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureContext.m
+++ /dev/null
@@ -1,134 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureContext.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/Integer.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-@interface ComGoogleCommonTruthFailureContext () {
- @public
-  NSString *format_;
-  IOSObjectArray *args_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthFailureContext, format_, NSString *)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthFailureContext, args_, IOSObjectArray *)
-
-inline NSString *ComGoogleCommonTruthFailureContext_get_PLACEHOLDER_ERR();
-static NSString *ComGoogleCommonTruthFailureContext_PLACEHOLDER_ERR = @"Incorrect number of args (%s) for the given placeholders (%s) in string template:\"%s\"";
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthFailureContext, PLACEHOLDER_ERR, NSString *)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFailureContext__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFailureContext__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFailureContext__Annotations$2();
-
-@implementation ComGoogleCommonTruthFailureContext
-
-- (instancetype)initWithNSString:(NSString *)format
-               withNSObjectArray:(IOSObjectArray *)args {
-  ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(self, format, args);
-  return self;
-}
-
-- (NSString *)getFailureMessage {
-  return [self hasFailureMessage] ? ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(format_, args_) : nil;
-}
-
-- (jboolean)hasFailureMessage {
-  return format_ != nil;
-}
-
-+ (jint)countPlaceholdersWithNSString:(NSString *)template_ {
-  return ComGoogleCommonTruthFailureContext_countPlaceholdersWithNSString_(template_);
-}
-
-- (void)dealloc {
-  RELEASE_(format_);
-  RELEASE_(args_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, 2, -1 },
-    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "I", 0x8, 3, 4, -1, -1, -1, 5 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withNSObjectArray:);
-  methods[1].selector = @selector(getFailureMessage);
-  methods[2].selector = @selector(hasFailureMessage);
-  methods[3].selector = @selector(countPlaceholdersWithNSString:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "PLACEHOLDER_ERR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
-    { "format_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "args_", "[LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthFailureContext__Annotations$0, (void *)&ComGoogleCommonTruthFailureContext__Annotations$1, "countPlaceholders", "LNSString;", (void *)&ComGoogleCommonTruthFailureContext__Annotations$2, &ComGoogleCommonTruthFailureContext_PLACEHOLDER_ERR };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthFailureContext = { "FailureContext", "com.google.common.truth", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthFailureContext;
-}
-
-@end
-
-void ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(ComGoogleCommonTruthFailureContext *self, NSString *format, IOSObjectArray *args) {
-  NSObject_init(self);
-  JreStrongAssign(&self->format_, format);
-  JreStrongAssign(&self->args_, args);
-  jint placeholders = ComGoogleCommonTruthFailureContext_countPlaceholdersWithNSString_(format);
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(placeholders == ((IOSObjectArray *) nil_chk(args))->size_, ComGoogleCommonTruthFailureContext_PLACEHOLDER_ERR, [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(args->size_), JavaLangInteger_valueOfWithInt_(placeholders), format } count:3 type:NSObject_class_()]);
-}
-
-ComGoogleCommonTruthFailureContext *new_ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthFailureContext, initWithNSString_withNSObjectArray_, format, args)
-}
-
-ComGoogleCommonTruthFailureContext *create_ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthFailureContext, initWithNSString_withNSObjectArray_, format, args)
-}
-
-jint ComGoogleCommonTruthFailureContext_countPlaceholdersWithNSString_(NSString *template_) {
-  ComGoogleCommonTruthFailureContext_initialize();
-  if (template_ == nil) {
-    return 0;
-  }
-  jint index = 0;
-  jint count = 0;
-  while (true) {
-    index = [template_ java_indexOfString:@"%s" fromIndex:index];
-    if (index == -1) {
-      break;
-    }
-    index++;
-    count++;
-  }
-  return count;
-}
-
-IOSObjectArray *ComGoogleCommonTruthFailureContext__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFailureContext__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFailureContext__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthFailureContext)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureStrategy.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureStrategy.h
deleted file mode 100644
index 6c87f7993..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureStrategy.h
+++ /dev/null
@@ -1,54 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthFailureStrategy")
-#ifdef RESTRICT_ComGoogleCommonTruthFailureStrategy
-#define INCLUDE_ALL_ComGoogleCommonTruthFailureStrategy 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthFailureStrategy 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthFailureStrategy
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthFailureStrategy_) && (INCLUDE_ALL_ComGoogleCommonTruthFailureStrategy || defined(INCLUDE_ComGoogleCommonTruthFailureStrategy))
-#define ComGoogleCommonTruthFailureStrategy_
-
-@protocol JavaLangCharSequence;
-
-@interface ComGoogleCommonTruthFailureStrategy : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (void)failWithNSString:(NSString *)message;
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause;
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthFailureStrategy)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthFailureStrategy_init(ComGoogleCommonTruthFailureStrategy *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthFailureStrategy)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthFailureStrategy")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureStrategy.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureStrategy.m
deleted file mode 100644
index af7d9f3bb..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFailureStrategy.m
+++ /dev/null
@@ -1,99 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/IllegalStateException.h"
-#include "java/lang/StackTraceElement.h"
-#include "java/util/Arrays.h"
-
-@interface ComGoogleCommonTruthFailureStrategy ()
-
-+ (void)stripTruthStackFramesWithNSException:(NSException *)throwable;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthFailureStrategy_stripTruthStackFramesWithNSException_(NSException *throwable);
-
-@implementation ComGoogleCommonTruthFailureStrategy
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthFailureStrategy_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)failWithNSString:(NSString *)message {
-  [self failWithNSString:message withNSException:nil];
-}
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause {
-  JavaLangAssertionError *up = create_JavaLangAssertionError_initWithId_(message);
-  if (cause == nil) {
-    cause = create_JavaLangAssertionError_initWithId_(message);
-  }
-  @try {
-    [up initCauseWithNSException:cause];
-  }
-  @catch (JavaLangIllegalStateException *alreadyInitializedBecauseOfHarmonyBug) {
-    @throw create_JavaLangAssertionError_initWithId_(cause);
-  }
-  ComGoogleCommonTruthFailureStrategy_stripTruthStackFramesWithNSException_(up);
-  @throw up;
-}
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  [self failWithNSString:ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(message, expected, actual)];
-}
-
-+ (void)stripTruthStackFramesWithNSException:(NSException *)throwable {
-  ComGoogleCommonTruthFailureStrategy_stripTruthStackFramesWithNSException_(throwable);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0xa, 5, 6, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(failWithNSString:);
-  methods[2].selector = @selector(failWithNSString:withNSException:);
-  methods[3].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  methods[4].selector = @selector(stripTruthStackFramesWithNSException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "fail", "LNSString;", "LNSString;LNSException;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "stripTruthStackFrames", "LNSException;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthFailureStrategy = { "FailureStrategy", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthFailureStrategy;
-}
-
-@end
-
-void ComGoogleCommonTruthFailureStrategy_init(ComGoogleCommonTruthFailureStrategy *self) {
-  NSObject_init(self);
-}
-
-void ComGoogleCommonTruthFailureStrategy_stripTruthStackFramesWithNSException_(NSException *throwable) {
-  ComGoogleCommonTruthFailureStrategy_initialize();
-  IOSObjectArray *stackTrace = [((NSException *) nil_chk(throwable)) getStackTrace];
-  jint i = 0;
-  while (i < ((IOSObjectArray *) nil_chk(stackTrace))->size_ && [((NSString *) nil_chk([((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(stackTrace, i))) getClassName])) hasPrefix:@"com.google.common.truth"]) {
-    i++;
-  }
-  [throwable setStackTraceWithJavaLangStackTraceElementArray:JavaUtilArrays_copyOfRangeWithNSObjectArray_withInt_withInt_(stackTrace, i, stackTrace->size_)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthFailureStrategy)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFloatSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFloatSubject.h
deleted file mode 100644
index abce73aab..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFloatSubject.h
+++ /dev/null
@@ -1,117 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthFloatSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthFloatSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthFloatSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthFloatSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthFloatSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthFloatSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthFloatSubject || defined(INCLUDE_ComGoogleCommonTruthFloatSubject))
-#define ComGoogleCommonTruthFloatSubject_
-
-#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
-#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
-#include "ComGoogleCommonTruthComparableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthFloatSubject_TolerantFloatComparison;
-@class IOSObjectArray;
-@class JavaLangFloat;
-
-@interface ComGoogleCommonTruthFloatSubject : ComGoogleCommonTruthComparableSubject
-
-#pragma mark Public
-
-- (void)isEqualToWithJavaLangFloat:(JavaLangFloat *)other;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangFloat *)other;
-
-- (void)isFinite;
-
-- (void)isNaN;
-
-- (void)isNegativeInfinity;
-
-- (void)isNonZero;
-
-- (void)isNotEqualToWithJavaLangFloat:(JavaLangFloat *)other;
-
-- (void)isNotNaN;
-
-- (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *)isNotWithinWithFloat:(jfloat)tolerance;
-
-- (void)isPositiveInfinity;
-
-- (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *)isWithinWithFloat:(jfloat)tolerance;
-
-- (void)isZero;
-
-- (ComGoogleCommonTruthFloatSubject *)namedWithNSString:(NSString *)arg0
-                                      withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (JavaLangFloat *)actual;
-
-- (JavaLangFloat *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                          withJavaLangFloat:(JavaLangFloat *)subject;
-
-+ (void)checkToleranceWithFloat:(jfloat)tolerance;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthFloatSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(ComGoogleCommonTruthFloatSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangFloat *subject);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthFloatSubject *new_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangFloat *subject) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthFloatSubject *create_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangFloat *subject);
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(jfloat tolerance);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthFloatSubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_) && (INCLUDE_ALL_ComGoogleCommonTruthFloatSubject || defined(INCLUDE_ComGoogleCommonTruthFloatSubject_TolerantFloatComparison))
-#define ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_
-
-@interface ComGoogleCommonTruthFloatSubject_TolerantFloatComparison : NSObject
-
-#pragma mark Public
-
-- (jboolean)isEqual:(id)o;
-
-- (NSUInteger)hash;
-
-- (void)ofWithFloat:(jfloat)expectedFloat;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthFloatSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFloatSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFloatSubject.m
deleted file mode 100644
index 76b8be73b..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthFloatSubject.m
+++ /dev/null
@@ -1,421 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthFloatSubject.h"
-#include "ComGoogleCommonTruthMathUtil.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Float.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-inline jint ComGoogleCommonTruthFloatSubject_get_NEG_ZERO_BITS();
-static jint ComGoogleCommonTruthFloatSubject_NEG_ZERO_BITS;
-J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonTruthFloatSubject, NEG_ZERO_BITS, jint)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$3();
-
-@interface ComGoogleCommonTruthFloatSubject_TolerantFloatComparison ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_init(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$2();
-
-@interface ComGoogleCommonTruthFloatSubject_1 : ComGoogleCommonTruthFloatSubject_TolerantFloatComparison {
- @public
-  ComGoogleCommonTruthFloatSubject *this$0_;
-  jfloat val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthFloatSubject:(ComGoogleCommonTruthFloatSubject *)outer$
-                                               withFloat:(jfloat)capture$0;
-
-- (void)ofWithFloat:(jfloat)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthFloatSubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject_1 *self, ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthFloatSubject_1 *new_ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthFloatSubject_1 *create_ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0);
-
-@interface ComGoogleCommonTruthFloatSubject_2 : ComGoogleCommonTruthFloatSubject_TolerantFloatComparison {
- @public
-  ComGoogleCommonTruthFloatSubject *this$0_;
-  jfloat val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthFloatSubject:(ComGoogleCommonTruthFloatSubject *)outer$
-                                               withFloat:(jfloat)capture$0;
-
-- (void)ofWithFloat:(jfloat)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthFloatSubject_2)
-
-__attribute__((unused)) static void ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject_2 *self, ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthFloatSubject_2 *new_ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthFloatSubject_2 *create_ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0);
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthFloatSubject)
-
-@implementation ComGoogleCommonTruthFloatSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                          withJavaLangFloat:(JavaLangFloat *)subject {
-  ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(self, failureStrategy, subject);
-  return self;
-}
-
-- (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *)isWithinWithFloat:(jfloat)tolerance {
-  return create_ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(self, tolerance);
-}
-
-- (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *)isNotWithinWithFloat:(jfloat)tolerance {
-  return create_ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(self, tolerance);
-}
-
-- (void)isEqualToWithJavaLangFloat:(JavaLangFloat *)other {
-  [super isEqualToWithId:other];
-}
-
-- (void)isNotEqualToWithJavaLangFloat:(JavaLangFloat *)other {
-  [super isNotEqualToWithId:other];
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangFloat *)other {
-  [super isEquivalentAccordingToCompareToWithJavaLangComparable:other];
-}
-
-+ (void)checkToleranceWithFloat:(jfloat)tolerance {
-  ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(tolerance);
-}
-
-- (void)isZero {
-  if ([self actual] == nil || [((JavaLangFloat *) nil_chk([self actual])) floatValue] != 0.0f) {
-    [self failWithNSString:@"is zero"];
-  }
-}
-
-- (void)isNonZero {
-  if ([self actual] == nil || [((JavaLangFloat *) nil_chk([self actual])) floatValue] == 0.0f) {
-    [self failWithNSString:@"is non-zero"];
-  }
-}
-
-- (void)isPositiveInfinity {
-  [self isEqualToWithJavaLangFloat:JavaLangFloat_valueOfWithFloat_(JavaLangFloat_POSITIVE_INFINITY)];
-}
-
-- (void)isNegativeInfinity {
-  [self isEqualToWithJavaLangFloat:JavaLangFloat_valueOfWithFloat_(JavaLangFloat_NEGATIVE_INFINITY)];
-}
-
-- (void)isNaN {
-  [self isEqualToWithJavaLangFloat:JavaLangFloat_valueOfWithFloat_(JavaLangFloat_NaN)];
-}
-
-- (void)isFinite {
-  if ([self actual] == nil || [((JavaLangFloat *) nil_chk([self actual])) isNaN] || [((JavaLangFloat *) nil_chk([self actual])) isInfinite]) {
-    [self failWithRawMessageWithNSString:@"%s should have been finite" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString] } count:1 type:NSObject_class_()]];
-  }
-}
-
-- (void)isNotNaN {
-  if ([self actual] == nil || [((JavaLangFloat *) nil_chk([self actual])) isNaN]) {
-    [self failWithRawMessageWithNSString:@"%s should not have been NaN" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString] } count:1 type:NSObject_class_()]];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LComGoogleCommonTruthFloatSubject_TolerantFloatComparison;", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthFloatSubject_TolerantFloatComparison;", 0x1, 4, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 5, 6, -1, -1, -1, 7 },
-    { NULL, "V", 0x11, 8, 6, -1, -1, -1, 9 },
-    { NULL, "V", 0x11, 10, 6, -1, -1, 11, -1 },
-    { NULL, "V", 0x8, 12, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangFloat:);
-  methods[1].selector = @selector(isWithinWithFloat:);
-  methods[2].selector = @selector(isNotWithinWithFloat:);
-  methods[3].selector = @selector(isEqualToWithJavaLangFloat:);
-  methods[4].selector = @selector(isNotEqualToWithJavaLangFloat:);
-  methods[5].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  methods[6].selector = @selector(checkToleranceWithFloat:);
-  methods[7].selector = @selector(isZero);
-  methods[8].selector = @selector(isNonZero);
-  methods[9].selector = @selector(isPositiveInfinity);
-  methods[10].selector = @selector(isNegativeInfinity);
-  methods[11].selector = @selector(isNaN);
-  methods[12].selector = @selector(isFinite);
-  methods[13].selector = @selector(isNotNaN);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "NEG_ZERO_BITS", "I", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangFloat;", (void *)&ComGoogleCommonTruthFloatSubject__Annotations$0, "isWithin", "F", "isNotWithin", "isEqualTo", "LJavaLangFloat;", (void *)&ComGoogleCommonTruthFloatSubject__Annotations$1, "isNotEqualTo", (void *)&ComGoogleCommonTruthFloatSubject__Annotations$2, "isEquivalentAccordingToCompareTo", (void *)&ComGoogleCommonTruthFloatSubject__Annotations$3, "checkTolerance", &ComGoogleCommonTruthFloatSubject_NEG_ZERO_BITS, "LComGoogleCommonTruthFloatSubject_TolerantFloatComparison;", "Lcom/google/common/truth/ComparableSubject<Lcom/google/common/truth/FloatSubject;Ljava/lang/Float;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthFloatSubject = { "FloatSubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 14, 1, -1, 14, -1, 15, -1 };
-  return &_ComGoogleCommonTruthFloatSubject;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthFloatSubject class]) {
-    ComGoogleCommonTruthFloatSubject_NEG_ZERO_BITS = JavaLangFloat_floatToIntBitsWithFloat_(-0.0f);
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthFloatSubject)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(ComGoogleCommonTruthFloatSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangFloat *subject) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthFloatSubject *new_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangFloat *subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthFloatSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthFloatSubject *create_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangFloat *subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthFloatSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_, failureStrategy, subject)
-}
-
-void ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(jfloat tolerance) {
-  ComGoogleCommonTruthFloatSubject_initialize();
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(!JavaLangFloat_isNaNWithFloat_(tolerance), @"tolerance cannot be NaN");
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(tolerance >= 0.0f, @"tolerance (%s) cannot be negative", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_valueOfWithFloat_(tolerance) } count:1 type:NSObject_class_()]);
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(JavaLangFloat_floatToIntBitsWithFloat_(tolerance) != ComGoogleCommonTruthFloatSubject_NEG_ZERO_BITS, @"tolerance (%s) cannot be negative", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_valueOfWithFloat_(tolerance) } count:1 type:NSObject_class_()]);
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(tolerance != JavaLangFloat_POSITIVE_INFINITY, @"tolerance cannot be POSITIVE_INFINITY");
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthFloatSubject)
-
-@implementation ComGoogleCommonTruthFloatSubject_TolerantFloatComparison
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)ofWithFloat:(jfloat)expectedFloat {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (jboolean)isEqual:(id)o {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"If you meant to compare floats, use .of(float) instead.");
-}
-
-- (NSUInteger)hash {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Subject.hashCode() is not supported.");
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 2, 3, -1, -1, 4, 5 },
-    { NULL, "I", 0x1, 6, -1, -1, -1, 7, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(ofWithFloat:);
-  methods[2].selector = @selector(isEqual:);
-  methods[3].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "of", "F", "equals", "LNSObject;", (void *)&ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$0, (void *)&ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$1, "hashCode", (void *)&ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$2, "LComGoogleCommonTruthFloatSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthFloatSubject_TolerantFloatComparison = { "TolerantFloatComparison", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x409, 4, 0, 8, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthFloatSubject_TolerantFloatComparison;
-}
-
-@end
-
-void ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_init(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *self) {
-  NSObject_init(self);
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthFloatSubject_TolerantFloatComparison__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison)
-
-@implementation ComGoogleCommonTruthFloatSubject_1
-
-- (instancetype)initWithComGoogleCommonTruthFloatSubject:(ComGoogleCommonTruthFloatSubject *)outer$
-                                               withFloat:(jfloat)capture$0 {
-  ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofWithFloat:(jfloat)expected {
-  JavaLangFloat *actual = [this$0_ actual];
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withNSString_withNSObjectArray_(actual, @"actual value cannot be null. tolerance=%s expected=%s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_valueOfWithFloat_(val$tolerance_), JavaLangFloat_valueOfWithFloat_(expected) } count:2 type:NSObject_class_()]);
-  ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(val$tolerance_);
-  if (!ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_([((JavaLangFloat *) nil_chk(actual)) floatValue], expected, val$tolerance_)) {
-    [this$0_ failWithRawMessageWithNSString:@"%s and <%s> should have been finite values within <%s> of each other" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], JavaLangFloat_valueOfWithFloat_(expected), JavaLangFloat_valueOfWithFloat_(val$tolerance_) } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFloatSubject:withFloat:);
-  methods[1].selector = @selector(ofWithFloat:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthFloatSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "F", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "of", "F", "LComGoogleCommonTruthFloatSubject;", "isWithinWithFloat:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthFloatSubject_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, -1, -1 };
-  return &_ComGoogleCommonTruthFloatSubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject_1 *self, ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_init(self);
-}
-
-ComGoogleCommonTruthFloatSubject_1 *new_ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthFloatSubject_1, initWithComGoogleCommonTruthFloatSubject_withFloat_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthFloatSubject_1 *create_ComGoogleCommonTruthFloatSubject_1_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthFloatSubject_1, initWithComGoogleCommonTruthFloatSubject_withFloat_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthFloatSubject_2
-
-- (instancetype)initWithComGoogleCommonTruthFloatSubject:(ComGoogleCommonTruthFloatSubject *)outer$
-                                               withFloat:(jfloat)capture$0 {
-  ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofWithFloat:(jfloat)expected {
-  JavaLangFloat *actual = [this$0_ actual];
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withNSString_withNSObjectArray_(actual, @"actual value cannot be null. tolerance=%s expected=%s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_valueOfWithFloat_(val$tolerance_), JavaLangFloat_valueOfWithFloat_(expected) } count:2 type:NSObject_class_()]);
-  ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(val$tolerance_);
-  if (!ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithFloat_withFloat_withFloat_([((JavaLangFloat *) nil_chk(actual)) floatValue], expected, val$tolerance_)) {
-    [this$0_ failWithRawMessageWithNSString:@"%s and <%s> should have been finite values not within <%s> of each other" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], JavaLangFloat_valueOfWithFloat_(expected), JavaLangFloat_valueOfWithFloat_(val$tolerance_) } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFloatSubject:withFloat:);
-  methods[1].selector = @selector(ofWithFloat:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthFloatSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "F", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "of", "F", "LComGoogleCommonTruthFloatSubject;", "isNotWithinWithFloat:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthFloatSubject_2 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, -1, -1 };
-  return &_ComGoogleCommonTruthFloatSubject_2;
-}
-
-@end
-
-void ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject_2 *self, ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_init(self);
-}
-
-ComGoogleCommonTruthFloatSubject_2 *new_ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthFloatSubject_2, initWithComGoogleCommonTruthFloatSubject_withFloat_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthFloatSubject_2 *create_ComGoogleCommonTruthFloatSubject_2_initWithComGoogleCommonTruthFloatSubject_withFloat_(ComGoogleCommonTruthFloatSubject *outer$, jfloat capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthFloatSubject_2, initWithComGoogleCommonTruthFloatSubject_withFloat_, outer$, capture$0)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGraphMatching.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGraphMatching.h
deleted file mode 100644
index a55f38c4f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGraphMatching.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthGraphMatching")
-#ifdef RESTRICT_ComGoogleCommonTruthGraphMatching
-#define INCLUDE_ALL_ComGoogleCommonTruthGraphMatching 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthGraphMatching 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthGraphMatching
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthGraphMatching_) && (INCLUDE_ALL_ComGoogleCommonTruthGraphMatching || defined(INCLUDE_ComGoogleCommonTruthGraphMatching))
-#define ComGoogleCommonTruthGraphMatching_
-
-@class ComGoogleCommonCollectImmutableBiMap;
-@protocol ComGoogleCommonCollectMultimap;
-
-@interface ComGoogleCommonTruthGraphMatching : NSObject
-
-#pragma mark Package-Private
-
-+ (ComGoogleCommonCollectImmutableBiMap *)maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)graph;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthGraphMatching)
-
-FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonTruthGraphMatching_maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthGraphMatching)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthGraphMatching")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGraphMatching.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGraphMatching.m
deleted file mode 100644
index b317e1e35..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGraphMatching.m
+++ /dev/null
@@ -1,265 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthGraphMatching.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Optional.h"
-#include "com/google/common/collect/BiMap.h"
-#include "com/google/common/collect/HashBiMap.h"
-#include "com/google/common/collect/ImmutableBiMap.h"
-#include "com/google/common/collect/Multimap.h"
-#include "java/lang/Integer.h"
-#include "java/util/ArrayDeque.h"
-#include "java/util/Collection.h"
-#include "java/util/HashMap.h"
-#include "java/util/Map.h"
-#include "java/util/Queue.h"
-#include "java/util/Set.h"
-
-@interface ComGoogleCommonTruthGraphMatching ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthGraphMatching_init(ComGoogleCommonTruthGraphMatching *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthGraphMatching *new_ComGoogleCommonTruthGraphMatching_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthGraphMatching *create_ComGoogleCommonTruthGraphMatching_init();
-
-@interface ComGoogleCommonTruthGraphMatching_HopcroftKarp : NSObject {
- @public
-  id<ComGoogleCommonCollectMultimap> graph_;
-}
-
-+ (ComGoogleCommonTruthGraphMatching_HopcroftKarp *)overBipartiteGraphWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)graph;
-
-- (instancetype)initWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)graph;
-
-- (ComGoogleCommonCollectImmutableBiMap *)perform;
-
-- (ComGoogleCommonBaseOptional *)breadthFirstSearchWithComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)matching
-                                                                   withJavaUtilMap:(id<JavaUtilMap>)layers;
-
-- (jboolean)depthFirstSearchWithComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)matching
-                                            withJavaUtilMap:(id<JavaUtilMap>)layers
-                                                    withInt:(jint)freeRhsVertexLayer
-                                                     withId:(id)lhs;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthGraphMatching_HopcroftKarp)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthGraphMatching_HopcroftKarp, graph_, id<ComGoogleCommonCollectMultimap>)
-
-__attribute__((unused)) static ComGoogleCommonTruthGraphMatching_HopcroftKarp *ComGoogleCommonTruthGraphMatching_HopcroftKarp_overBipartiteGraphWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph);
-
-__attribute__((unused)) static void ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(ComGoogleCommonTruthGraphMatching_HopcroftKarp *self, id<ComGoogleCommonCollectMultimap> graph);
-
-__attribute__((unused)) static ComGoogleCommonTruthGraphMatching_HopcroftKarp *new_ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthGraphMatching_HopcroftKarp *create_ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph);
-
-__attribute__((unused)) static ComGoogleCommonBaseOptional *ComGoogleCommonTruthGraphMatching_HopcroftKarp_breadthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_(ComGoogleCommonTruthGraphMatching_HopcroftKarp *self, id<ComGoogleCommonCollectBiMap> matching, id<JavaUtilMap> layers);
-
-__attribute__((unused)) static jboolean ComGoogleCommonTruthGraphMatching_HopcroftKarp_depthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_withInt_withId_(ComGoogleCommonTruthGraphMatching_HopcroftKarp *self, id<ComGoogleCommonCollectBiMap> matching, id<JavaUtilMap> layers, jint freeRhsVertexLayer, id lhs);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthGraphMatching_HopcroftKarp)
-
-@implementation ComGoogleCommonTruthGraphMatching
-
-+ (ComGoogleCommonCollectImmutableBiMap *)maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)graph {
-  return ComGoogleCommonTruthGraphMatching_maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap_(graph);
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthGraphMatching_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LComGoogleCommonCollectImmutableBiMap;", 0x8, 0, 1, -1, 2, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap:);
-  methods[1].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "maximumCardinalityBipartiteMatching", "LComGoogleCommonCollectMultimap;", "<U:Ljava/lang/Object;V:Ljava/lang/Object;>(Lcom/google/common/collect/Multimap<TU;TV;>;)Lcom/google/common/collect/ImmutableBiMap<TU;TV;>;", "LComGoogleCommonTruthGraphMatching_HopcroftKarp;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthGraphMatching = { "GraphMatching", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x10, 2, 0, -1, 3, -1, -1, -1 };
-  return &_ComGoogleCommonTruthGraphMatching;
-}
-
-@end
-
-ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonTruthGraphMatching_maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph) {
-  ComGoogleCommonTruthGraphMatching_initialize();
-  return [((ComGoogleCommonTruthGraphMatching_HopcroftKarp *) nil_chk(ComGoogleCommonTruthGraphMatching_HopcroftKarp_overBipartiteGraphWithComGoogleCommonCollectMultimap_(graph))) perform];
-}
-
-void ComGoogleCommonTruthGraphMatching_init(ComGoogleCommonTruthGraphMatching *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthGraphMatching *new_ComGoogleCommonTruthGraphMatching_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthGraphMatching, init)
-}
-
-ComGoogleCommonTruthGraphMatching *create_ComGoogleCommonTruthGraphMatching_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthGraphMatching, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthGraphMatching)
-
-@implementation ComGoogleCommonTruthGraphMatching_HopcroftKarp
-
-+ (ComGoogleCommonTruthGraphMatching_HopcroftKarp *)overBipartiteGraphWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)graph {
-  return ComGoogleCommonTruthGraphMatching_HopcroftKarp_overBipartiteGraphWithComGoogleCommonCollectMultimap_(graph);
-}
-
-- (instancetype)initWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)graph {
-  ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(self, graph);
-  return self;
-}
-
-- (ComGoogleCommonCollectImmutableBiMap *)perform {
-  id<ComGoogleCommonCollectBiMap> matching = ComGoogleCommonCollectHashBiMap_create();
-  while (true) {
-    id<JavaUtilMap> layers = create_JavaUtilHashMap_init();
-    ComGoogleCommonBaseOptional *freeRhsVertexLayer = ComGoogleCommonTruthGraphMatching_HopcroftKarp_breadthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_(self, matching, layers);
-    if (![((ComGoogleCommonBaseOptional *) nil_chk(freeRhsVertexLayer)) isPresent]) {
-      break;
-    }
-    for (id __strong lhs in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(graph_)) keySet])) {
-      if (![((id<ComGoogleCommonCollectBiMap>) nil_chk(matching)) containsKeyWithId:lhs]) {
-        ComGoogleCommonTruthGraphMatching_HopcroftKarp_depthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_withInt_withId_(self, matching, layers, [((JavaLangInteger *) nil_chk([freeRhsVertexLayer get])) intValue], lhs);
-      }
-    }
-  }
-  return ComGoogleCommonCollectImmutableBiMap_copyOfWithJavaUtilMap_(matching);
-}
-
-- (ComGoogleCommonBaseOptional *)breadthFirstSearchWithComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)matching
-                                                                   withJavaUtilMap:(id<JavaUtilMap>)layers {
-  return ComGoogleCommonTruthGraphMatching_HopcroftKarp_breadthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_(self, matching, layers);
-}
-
-- (jboolean)depthFirstSearchWithComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)matching
-                                            withJavaUtilMap:(id<JavaUtilMap>)layers
-                                                    withInt:(jint)freeRhsVertexLayer
-                                                     withId:(id)lhs {
-  return ComGoogleCommonTruthGraphMatching_HopcroftKarp_depthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_withInt_withId_(self, matching, layers, freeRhsVertexLayer, lhs);
-}
-
-- (void)dealloc {
-  RELEASE_(graph_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LComGoogleCommonTruthGraphMatching_HopcroftKarp;", 0x8, 0, 1, -1, 2, -1, -1 },
-    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
-    { NULL, "LComGoogleCommonCollectImmutableBiMap;", 0x0, -1, -1, -1, 4, -1, -1 },
-    { NULL, "LComGoogleCommonBaseOptional;", 0x2, 5, 6, -1, 7, -1, -1 },
-    { NULL, "Z", 0x2, 8, 9, -1, 10, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(overBipartiteGraphWithComGoogleCommonCollectMultimap:);
-  methods[1].selector = @selector(initWithComGoogleCommonCollectMultimap:);
-  methods[2].selector = @selector(perform);
-  methods[3].selector = @selector(breadthFirstSearchWithComGoogleCommonCollectBiMap:withJavaUtilMap:);
-  methods[4].selector = @selector(depthFirstSearchWithComGoogleCommonCollectBiMap:withJavaUtilMap:withInt:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "graph_", "LComGoogleCommonCollectMultimap;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
-  };
-  static const void *ptrTable[] = { "overBipartiteGraph", "LComGoogleCommonCollectMultimap;", "<U:Ljava/lang/Object;V:Ljava/lang/Object;>(Lcom/google/common/collect/Multimap<TU;TV;>;)Lcom/google/common/truth/GraphMatching$HopcroftKarp<TU;TV;>;", "(Lcom/google/common/collect/Multimap<TU;TV;>;)V", "()Lcom/google/common/collect/ImmutableBiMap<TU;TV;>;", "breadthFirstSearch", "LComGoogleCommonCollectBiMap;LJavaUtilMap;", "(Lcom/google/common/collect/BiMap<TU;TV;>;Ljava/util/Map<TU;Ljava/lang/Integer;>;)Lcom/google/common/base/Optional<Ljava/lang/Integer;>;", "depthFirstSearch", "LComGoogleCommonCollectBiMap;LJavaUtilMap;ILNSObject;", "(Lcom/google/common/collect/BiMap<TU;TV;>;Ljava/util/Map<TU;Ljava/lang/Integer;>;ITU;)Z", "Lcom/google/common/collect/Multimap<TU;TV;>;", "LComGoogleCommonTruthGraphMatching;", "<U:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthGraphMatching_HopcroftKarp = { "HopcroftKarp", "com.google.common.truth", ptrTable, methods, fields, 7, 0xa, 5, 1, 12, -1, -1, 13, -1 };
-  return &_ComGoogleCommonTruthGraphMatching_HopcroftKarp;
-}
-
-@end
-
-ComGoogleCommonTruthGraphMatching_HopcroftKarp *ComGoogleCommonTruthGraphMatching_HopcroftKarp_overBipartiteGraphWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph) {
-  ComGoogleCommonTruthGraphMatching_HopcroftKarp_initialize();
-  return create_ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(graph);
-}
-
-void ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(ComGoogleCommonTruthGraphMatching_HopcroftKarp *self, id<ComGoogleCommonCollectMultimap> graph) {
-  NSObject_init(self);
-  JreStrongAssign(&self->graph_, graph);
-}
-
-ComGoogleCommonTruthGraphMatching_HopcroftKarp *new_ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthGraphMatching_HopcroftKarp, initWithComGoogleCommonCollectMultimap_, graph)
-}
-
-ComGoogleCommonTruthGraphMatching_HopcroftKarp *create_ComGoogleCommonTruthGraphMatching_HopcroftKarp_initWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthGraphMatching_HopcroftKarp, initWithComGoogleCommonCollectMultimap_, graph)
-}
-
-ComGoogleCommonBaseOptional *ComGoogleCommonTruthGraphMatching_HopcroftKarp_breadthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_(ComGoogleCommonTruthGraphMatching_HopcroftKarp *self, id<ComGoogleCommonCollectBiMap> matching, id<JavaUtilMap> layers) {
-  id<JavaUtilQueue> queue = create_JavaUtilArrayDeque_init();
-  ComGoogleCommonBaseOptional *freeRhsVertexLayer = ComGoogleCommonBaseOptional_absent();
-  for (id __strong lhs in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(self->graph_)) keySet])) {
-    if (![((id<ComGoogleCommonCollectBiMap>) nil_chk(matching)) containsKeyWithId:lhs]) {
-      [((id<JavaUtilMap>) nil_chk(layers)) putWithId:lhs withId:JavaLangInteger_valueOfWithInt_(1)];
-      [queue addWithId:lhs];
-    }
-  }
-  while (![queue isEmpty]) {
-    id lhs = [queue remove];
-    jint layer = [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(layers)) getWithId:lhs])) intValue];
-    if ([((ComGoogleCommonBaseOptional *) nil_chk(freeRhsVertexLayer)) isPresent] && layer > [((JavaLangInteger *) nil_chk([freeRhsVertexLayer get])) intValue]) {
-      break;
-    }
-    for (id __strong rhs in nil_chk([self->graph_ getWithId:lhs])) {
-      if (![((id<ComGoogleCommonCollectBiMap>) nil_chk(matching)) containsValueWithId:rhs]) {
-        if (![((ComGoogleCommonBaseOptional *) nil_chk(freeRhsVertexLayer)) isPresent]) {
-          freeRhsVertexLayer = ComGoogleCommonBaseOptional_ofWithId_(JavaLangInteger_valueOfWithInt_(layer));
-        }
-      }
-      else {
-        id nextLhs = [((id<ComGoogleCommonCollectBiMap>) nil_chk([matching inverse])) getWithId:rhs];
-        if (![layers containsKeyWithId:nextLhs]) {
-          [layers putWithId:nextLhs withId:JavaLangInteger_valueOfWithInt_(layer + 1)];
-          [queue addWithId:nextLhs];
-        }
-      }
-    }
-  }
-  return freeRhsVertexLayer;
-}
-
-jboolean ComGoogleCommonTruthGraphMatching_HopcroftKarp_depthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_withInt_withId_(ComGoogleCommonTruthGraphMatching_HopcroftKarp *self, id<ComGoogleCommonCollectBiMap> matching, id<JavaUtilMap> layers, jint freeRhsVertexLayer, id lhs) {
-  jint layer = [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(layers)) getWithId:lhs])) intValue];
-  if (layer > freeRhsVertexLayer) {
-    return false;
-  }
-  for (id __strong rhs in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(self->graph_)) getWithId:lhs])) {
-    if (![((id<ComGoogleCommonCollectBiMap>) nil_chk(matching)) containsValueWithId:rhs]) {
-      [matching forcePutWithId:lhs withId:rhs];
-      return true;
-    }
-    else {
-      id nextLhs = [((id<ComGoogleCommonCollectBiMap>) nil_chk([matching inverse])) getWithId:rhs];
-      if ([layers containsKeyWithId:nextLhs] && [((JavaLangInteger *) nil_chk([layers getWithId:nextLhs])) intValue] == layer + 1) {
-        if (ComGoogleCommonTruthGraphMatching_HopcroftKarp_depthFirstSearchWithComGoogleCommonCollectBiMap_withJavaUtilMap_withInt_withId_(self, matching, layers, freeRhsVertexLayer, nextLhs)) {
-          [matching forcePutWithId:lhs withId:rhs];
-          return true;
-        }
-      }
-    }
-  }
-  return false;
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthGraphMatching_HopcroftKarp)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGuavaOptionalSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGuavaOptionalSubject.h
deleted file mode 100644
index e7af83a52..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGuavaOptionalSubject.h
+++ /dev/null
@@ -1,73 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthGuavaOptionalSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthGuavaOptionalSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthGuavaOptionalSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthGuavaOptionalSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthGuavaOptionalSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthGuavaOptionalSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthGuavaOptionalSubject || defined(INCLUDE_ComGoogleCommonTruthGuavaOptionalSubject))
-#define ComGoogleCommonTruthGuavaOptionalSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonBaseOptional;
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthGuavaOptionalSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)hasValueWithId:(id)expected;
-
-- (void)isAbsent;
-
-- (void)isPresent;
-
-- (ComGoogleCommonTruthGuavaOptionalSubject *)namedWithNSString:(NSString *)arg0
-                                              withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (ComGoogleCommonBaseOptional *)actual;
-
-- (ComGoogleCommonBaseOptional *)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                            withComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)subject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthGuavaOptionalSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(ComGoogleCommonTruthGuavaOptionalSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonBaseOptional *subject);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthGuavaOptionalSubject *new_ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonBaseOptional *subject) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthGuavaOptionalSubject *create_ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonBaseOptional *subject);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthGuavaOptionalSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthGuavaOptionalSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGuavaOptionalSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGuavaOptionalSubject.m
deleted file mode 100644
index a62e21f2f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthGuavaOptionalSubject.m
+++ /dev/null
@@ -1,92 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthGuavaOptionalSubject.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Optional.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthGuavaOptionalSubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthGuavaOptionalSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                            withComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)subject {
-  ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(self, failureStrategy, subject);
-  return self;
-}
-
-- (void)isPresent {
-  if ([self actual] == nil || ![((ComGoogleCommonBaseOptional *) nil_chk([self actual])) isPresent]) {
-    [self failWithoutActualWithNSString:@"is present"];
-  }
-}
-
-- (void)isAbsent {
-  if ([self actual] == nil || [((ComGoogleCommonBaseOptional *) nil_chk([self actual])) isPresent]) {
-    [self failWithNSString:@"is absent"];
-  }
-}
-
-- (void)hasValueWithId:(id)expected {
-  if (expected == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"Optional cannot have a null value.");
-  }
-  if ([self actual] == nil || ![((ComGoogleCommonBaseOptional *) nil_chk([self actual])) isPresent]) {
-    [self failWithNSString:@"has value" withId:expected];
-  }
-  else {
-    id actual = [((ComGoogleCommonBaseOptional *) nil_chk([self actual])) get];
-    if (![nil_chk(actual) isEqual:expected]) {
-      [self failWithNSString:@"has value" withId:expected];
-    }
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonBaseOptional:);
-  methods[1].selector = @selector(isPresent);
-  methods[2].selector = @selector(isAbsent);
-  methods[3].selector = @selector(hasValueWithId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonBaseOptional;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/base/Optional<*>;)V", (void *)&ComGoogleCommonTruthGuavaOptionalSubject__Annotations$0, "hasValue", "LNSObject;", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/GuavaOptionalSubject;Lcom/google/common/base/Optional<*>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthGuavaOptionalSubject = { "GuavaOptionalSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 4, 0, -1, -1, -1, 5, -1 };
-  return &_ComGoogleCommonTruthGuavaOptionalSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(ComGoogleCommonTruthGuavaOptionalSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonBaseOptional *subject) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthGuavaOptionalSubject *new_ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonBaseOptional *subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthGuavaOptionalSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthGuavaOptionalSubject *create_ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonBaseOptional *subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthGuavaOptionalSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_, failureStrategy, subject)
-}
-
-IOSObjectArray *ComGoogleCommonTruthGuavaOptionalSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthGuavaOptionalSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIntegerSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIntegerSubject.h
deleted file mode 100644
index 50176cab9..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIntegerSubject.h
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthIntegerSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthIntegerSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthIntegerSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthIntegerSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthIntegerSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthIntegerSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthIntegerSubject || defined(INCLUDE_ComGoogleCommonTruthIntegerSubject))
-#define ComGoogleCommonTruthIntegerSubject_
-
-#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
-#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
-#include "ComGoogleCommonTruthComparableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@class JavaLangInteger;
-
-@interface ComGoogleCommonTruthIntegerSubject : ComGoogleCommonTruthComparableSubject
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                        withJavaLangInteger:(JavaLangInteger *)integer;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangInteger *)other;
-
-- (ComGoogleCommonTruthIntegerSubject *)namedWithNSString:(NSString *)arg0
-                                        withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (JavaLangInteger *)actual;
-
-- (JavaLangInteger *)getSubject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIntegerSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(ComGoogleCommonTruthIntegerSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangInteger *integer);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthIntegerSubject *new_ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangInteger *integer) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthIntegerSubject *create_ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangInteger *integer);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIntegerSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthIntegerSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIntegerSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIntegerSubject.m
deleted file mode 100644
index c15e473cb..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIntegerSubject.m
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIntegerSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Integer.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIntegerSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIntegerSubject__Annotations$1();
-
-@implementation ComGoogleCommonTruthIntegerSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                        withJavaLangInteger:(JavaLangInteger *)integer {
-  ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(self, failureStrategy, integer);
-  return self;
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangInteger *)other {
-  [super isEquivalentAccordingToCompareToWithJavaLangComparable:other];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, 1 },
-    { NULL, "V", 0x11, 2, 3, -1, -1, 4, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangInteger:);
-  methods[1].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangInteger;", (void *)&ComGoogleCommonTruthIntegerSubject__Annotations$0, "isEquivalentAccordingToCompareTo", "LJavaLangInteger;", (void *)&ComGoogleCommonTruthIntegerSubject__Annotations$1, "Lcom/google/common/truth/ComparableSubject<Lcom/google/common/truth/IntegerSubject;Ljava/lang/Integer;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIntegerSubject = { "IntegerSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 5, -1 };
-  return &_ComGoogleCommonTruthIntegerSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(ComGoogleCommonTruthIntegerSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangInteger *integer) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, integer);
-}
-
-ComGoogleCommonTruthIntegerSubject *new_ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangInteger *integer) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIntegerSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_, failureStrategy, integer)
-}
-
-ComGoogleCommonTruthIntegerSubject *create_ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangInteger *integer) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIntegerSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_, failureStrategy, integer)
-}
-
-IOSObjectArray *ComGoogleCommonTruthIntegerSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIntegerSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthIntegerSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIterableSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIterableSubject.h
deleted file mode 100644
index 6694a75f7..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIterableSubject.h
+++ /dev/null
@@ -1,187 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthIterableSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthIterableSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthIterableSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthIterableSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthIterableSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthIterableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthIterableSubject || defined(INCLUDE_ComGoogleCommonTruthIterableSubject))
-#define ComGoogleCommonTruthIterableSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthCorrespondence;
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject_UsingCorrespondence;
-@class IOSObjectArray;
-@protocol ComGoogleCommonTruthOrdered;
-@protocol JavaLangIterable;
-@protocol JavaUtilComparator;
-
-@interface ComGoogleCommonTruthIterableSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)comparingElementsUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;
-
-- (void)containsWithId:(id)element;
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllOfWithId:(id)firstExpected
-                                                withId:(id)secondExpected
-                                     withNSObjectArray:(IOSObjectArray *)restOfExpected;
-
-- (void)containsAnyInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (void)containsAnyOfWithId:(id)first
-                     withId:(id)second
-          withNSObjectArray:(IOSObjectArray *)rest;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSObjectArray:(IOSObjectArray *)varargs;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (void)containsNoDuplicates;
-
-- (void)containsNoneInWithJavaLangIterable:(id<JavaLangIterable>)excluded;
-
-- (void)containsNoneOfWithId:(id)firstExcluded
-                      withId:(id)secondExcluded
-           withNSObjectArray:(IOSObjectArray *)restOfExcluded;
-
-- (void)doesNotContainWithId:(id)element;
-
-- (void)hasSizeWithInt:(jint)expectedSize;
-
-- (void)isEmpty;
-
-- (void)isNotEmpty;
-
-- (void)isOrdered;
-
-- (void)isOrderedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;
-
-- (void)isPartiallyOrdered;
-
-- (void)isPartiallyOrderedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;
-
-- (void)isStrictlyOrdered;
-
-- (void)isStrictlyOrderedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;
-
-- (ComGoogleCommonTruthIterableSubject *)namedWithNSString:(NSString *)arg0
-                                         withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                       withJavaLangIterable:(id<JavaLangIterable>)list;
-
-- (id<JavaLangIterable>)actual;
-
-- (void)failWithBadResultsAndSuffixWithNSString:(NSString *)verb
-                                         withId:(id)expected
-                                   withNSString:(NSString *)failVerb
-                                         withId:(id)actual
-                                   withNSString:(NSString *)suffix;
-
-- (id<JavaLangIterable>)getSubject;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthIterableSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangIterable> list);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject *new_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangIterable> list) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject *create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangIterable> list);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthIterableSubject_UsingCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthIterableSubject || defined(INCLUDE_ComGoogleCommonTruthIterableSubject_UsingCorrespondence))
-#define ComGoogleCommonTruthIterableSubject_UsingCorrespondence_
-
-@class ComGoogleCommonCollectImmutableMultimap;
-@class IOSObjectArray;
-@protocol ComGoogleCommonCollectBiMap;
-@protocol ComGoogleCommonTruthOrdered;
-@protocol JavaLangIterable;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthIterableSubject_UsingCorrespondence : NSObject
-
-#pragma mark Public
-
-- (void)containsWithId:(id)expected;
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllOfWithId:(id)first
-                                                withId:(id)second
-                                     withNSObjectArray:(IOSObjectArray *)rest;
-
-- (void)containsAnyInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (void)containsAnyOfWithId:(id)first
-                     withId:(id)second
-          withNSObjectArray:(IOSObjectArray *)rest;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSObjectArray:(IOSObjectArray *)expected;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (void)containsNoneInWithJavaLangIterable:(id<JavaLangIterable>)excluded;
-
-- (void)containsNoneOfWithId:(id)firstExcluded
-                      withId:(id)secondExcluded
-           withNSObjectArray:(IOSObjectArray *)restOfExcluded;
-
-- (void)doesNotContainWithId:(id)excluded;
-
-#pragma mark Package-Private
-
-- (void)failIfCandidateMappingHasMissingWithJavaUtilList:(id<JavaUtilList>)expected
-             withComGoogleCommonCollectImmutableMultimap:(ComGoogleCommonCollectImmutableMultimap *)mapping;
-
-- (void)failIfCandidateMappingHasMissingOrExtraWithJavaUtilList:(id<JavaUtilList>)actual
-                                               withJavaUtilList:(id<JavaUtilList>)expected
-                    withComGoogleCommonCollectImmutableMultimap:(ComGoogleCommonCollectImmutableMultimap *)mapping;
-
-- (void)failIfOneToOneMappingHasMissingWithJavaUtilList:(id<JavaUtilList>)expected
-                        withComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)mapping;
-
-- (void)failIfOneToOneMappingHasMissingOrExtraWithJavaUtilList:(id<JavaUtilList>)actual
-                                              withJavaUtilList:(id<JavaUtilList>)expected
-                               withComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)mapping;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_UsingCorrespondence)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject_UsingCorrespondence)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthIterableSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIterableSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIterableSubject.m
deleted file mode 100644
index 051a1a36c..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthIterableSubject.m
+++ /dev/null
@@ -1,1421 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthCorrespondence.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthGraphMatching.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthOrdered.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthSubjectUtils.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Optional.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/BiMap.h"
-#include "com/google/common/collect/ImmutableBiMap.h"
-#include "com/google/common/collect/ImmutableList.h"
-#include "com/google/common/collect/ImmutableMultimap.h"
-#include "com/google/common/collect/ImmutableSet.h"
-#include "com/google/common/collect/ImmutableSetMultimap.h"
-#include "com/google/common/collect/Iterables.h"
-#include "com/google/common/collect/Iterators.h"
-#include "com/google/common/collect/LinkedHashMultiset.h"
-#include "com/google/common/collect/Lists.h"
-#include "com/google/common/collect/Multiset.h"
-#include "com/google/common/collect/Ordering.h"
-#include "com/google/common/collect/Sets.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/SafeVarargs.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Arrays.h"
-#include "java/util/Collection.h"
-#include "java/util/Comparator.h"
-#include "java/util/Iterator.h"
-#include "java/util/LinkedHashSet.h"
-#include "java/util/LinkedList.h"
-#include "java/util/List.h"
-#include "java/util/Set.h"
-#include "javax/annotation/Nullable.h"
-
-@protocol ComGoogleCommonTruthIterableSubject_PairwiseChecker;
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthIterableSubject ()
-
-- (void)containsAnyWithNSString:(NSString *)failVerb
-           withJavaLangIterable:(id<JavaLangIterable>)expected;
-
-+ (id<JavaUtilCollection>)iterableToCollectionWithJavaLangIterable:(id<JavaLangIterable>)iterable;
-
-+ (id<JavaUtilList>)iterableToListWithJavaLangIterable:(id<JavaLangIterable>)iterable;
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllWithNSString:(NSString *)failVerb
-                                      withJavaLangIterable:(id<JavaLangIterable>)expectedIterable;
-
-+ (void)moveElementsWithJavaUtilList:(id<JavaUtilList>)input
-              withJavaUtilCollection:(id<JavaUtilCollection>)output
-                             withInt:(jint)maxElements;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)required
-                                                                     withBoolean:(jboolean)addElementsInWarning;
-
-- (void)containsNoneWithNSString:(NSString *)failVerb
-            withJavaLangIterable:(id<JavaLangIterable>)excluded;
-
-- (void)pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker:(id<ComGoogleCommonTruthIterableSubject_PairwiseChecker>)checker;
-
-@end
-
-inline id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthIterableSubject_get_IN_ORDER();
-static id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthIterableSubject_IN_ORDER;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthIterableSubject, IN_ORDER, id<ComGoogleCommonTruthOrdered>)
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_containsAnyWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, NSString *failVerb, id<JavaLangIterable> expected);
-
-__attribute__((unused)) static id<JavaUtilCollection> ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_(id<JavaLangIterable> iterable);
-
-__attribute__((unused)) static id<JavaUtilList> ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(id<JavaLangIterable> iterable);
-
-__attribute__((unused)) static id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthIterableSubject_containsAllWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, NSString *failVerb, id<JavaLangIterable> expectedIterable);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_moveElementsWithJavaUtilList_withJavaUtilCollection_withInt_(id<JavaUtilList> input, id<JavaUtilCollection> output, jint maxElements);
-
-__attribute__((unused)) static id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthIterableSubject_containsExactlyElementsInWithJavaLangIterable_withBoolean_(ComGoogleCommonTruthIterableSubject *self, id<JavaLangIterable> required, jboolean addElementsInWarning);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(ComGoogleCommonTruthIterableSubject *self, NSString *verb, id expected, NSString *failVerb, id actual, NSString *suffix);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_containsNoneWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, NSString *failVerb, id<JavaLangIterable> excluded);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_isStrictlyOrderedWithJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *self, id<JavaUtilComparator> comparator);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_isOrdered(ComGoogleCommonTruthIterableSubject *self);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_isOrderedWithJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *self, id<JavaUtilComparator> comparator);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker_(ComGoogleCommonTruthIterableSubject *self, id<ComGoogleCommonTruthIterableSubject_PairwiseChecker> checker);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$8();
-
-@interface ComGoogleCommonTruthIterableSubject_NotInOrder : NSObject < ComGoogleCommonTruthOrdered > {
- @public
-  ComGoogleCommonTruthIterableSubject *this$0_;
-  NSString *check_;
-  id<JavaLangIterable> required_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                                               withNSString:(NSString *)check
-                                       withJavaLangIterable:(id<JavaLangIterable>)required;
-
-- (void)inOrder;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_NotInOrder)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthIterableSubject_NotInOrder, check_, NSString *)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthIterableSubject_NotInOrder, required_, id<JavaLangIterable>)
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject_NotInOrder *self, ComGoogleCommonTruthIterableSubject *outer$, NSString *check, id<JavaLangIterable> required);
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_NotInOrder *new_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *outer$, NSString *check, id<JavaLangIterable> required) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_NotInOrder *create_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *outer$, NSString *check, id<JavaLangIterable> required);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject_NotInOrder)
-
-@interface ComGoogleCommonTruthIterableSubject_1 : NSObject < ComGoogleCommonTruthOrdered >
-
-- (instancetype)init;
-
-- (void)inOrder;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_1_init(ComGoogleCommonTruthIterableSubject_1 *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_1 *new_ComGoogleCommonTruthIterableSubject_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_1 *create_ComGoogleCommonTruthIterableSubject_1_init();
-
-@protocol ComGoogleCommonTruthIterableSubject_PairwiseChecker < JavaObject >
-
-- (void)checkWithId:(id)prev
-             withId:(id)next;
-
-@end
-
-@interface ComGoogleCommonTruthIterableSubject_PairwiseChecker : NSObject
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_PairwiseChecker)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject_PairwiseChecker)
-
-@interface ComGoogleCommonTruthIterableSubject_2 : NSObject < ComGoogleCommonTruthIterableSubject_PairwiseChecker > {
- @public
-  ComGoogleCommonTruthIterableSubject *this$0_;
-  id<JavaUtilComparator> val$comparator_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                                     withJavaUtilComparator:(id<JavaUtilComparator>)capture$0;
-
-- (void)checkWithId:(id)prev
-             withId:(id)next;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_2)
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject_2 *self, ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_2 *new_ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_2 *create_ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0);
-
-@interface ComGoogleCommonTruthIterableSubject_3 : NSObject < ComGoogleCommonTruthIterableSubject_PairwiseChecker > {
- @public
-  ComGoogleCommonTruthIterableSubject *this$0_;
-  id<JavaUtilComparator> val$comparator_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                                     withJavaUtilComparator:(id<JavaUtilComparator>)capture$0;
-
-- (void)checkWithId:(id)prev
-             withId:(id)next;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_3)
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject_3 *self, ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_3 *new_ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_3 *create_ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0);
-
-@interface ComGoogleCommonTruthIterableSubject_UsingCorrespondence () {
- @public
-  ComGoogleCommonTruthIterableSubject *this$0_;
-  ComGoogleCommonTruthCorrespondence *correspondence_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                     withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;
-
-- (jboolean)correspondInOrderExactlyWithJavaUtilIterator:(id<JavaUtilIterator>)actual
-                                    withJavaUtilIterator:(id<JavaUtilIterator>)expected;
-
-- (ComGoogleCommonCollectImmutableSetMultimap *)findCandidateMappingWithJavaUtilList:(id<JavaUtilList>)actual
-                                                                    withJavaUtilList:(id<JavaUtilList>)expected;
-
-- (ComGoogleCommonBaseOptional *)describeMissingOrExtraWithJavaUtilList:(id<JavaUtilList>)extra
-                                                       withJavaUtilList:(id<JavaUtilList>)missing;
-
-- (id<JavaUtilList>)findNotIndexedWithJavaUtilList:(id<JavaUtilList>)list
-                                   withJavaUtilSet:(id<JavaUtilSet>)indexes;
-
-- (NSString *)formatMissingWithJavaUtilList:(id<JavaUtilList>)missing;
-
-- (ComGoogleCommonCollectImmutableBiMap *)findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap:(ComGoogleCommonCollectImmutableMultimap *)edges;
-
-- (jboolean)correspondInOrderAllInWithJavaUtilIterator:(id<JavaUtilIterator>)actual
-                                  withJavaUtilIterator:(id<JavaUtilIterator>)expected;
-
-- (jboolean)findCorrespondingWithJavaUtilIterator:(id<JavaUtilIterator>)actual
-                                           withId:(id)expectedElement;
-
-- (void)containsAnyWithNSString:(NSString *)failVerb
-           withJavaLangIterable:(id<JavaLangIterable>)expected;
-
-- (void)containsNoneWithNSString:(NSString *)excludedPrefix
-            withJavaLangIterable:(id<JavaLangIterable>)excluded;
-
-- (id<JavaLangIterable>)getCastActual;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthIterableSubject_UsingCorrespondence, correspondence_, ComGoogleCommonTruthCorrespondence *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, ComGoogleCommonTruthIterableSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence);
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_UsingCorrespondence *new_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthIterableSubject_UsingCorrespondence *create_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence);
-
-__attribute__((unused)) static jboolean ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderExactlyWithJavaUtilIterator_withJavaUtilIterator_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilIterator> actual, id<JavaUtilIterator> expected);
-
-__attribute__((unused)) static ComGoogleCommonCollectImmutableSetMultimap *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCandidateMappingWithJavaUtilList_withJavaUtilList_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> actual, id<JavaUtilList> expected);
-
-__attribute__((unused)) static ComGoogleCommonBaseOptional *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_describeMissingOrExtraWithJavaUtilList_withJavaUtilList_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> extra, id<JavaUtilList> missing);
-
-__attribute__((unused)) static id<JavaUtilList> ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> list, id<JavaUtilSet> indexes);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> missing);
-
-__attribute__((unused)) static ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, ComGoogleCommonCollectImmutableMultimap *edges);
-
-__attribute__((unused)) static jboolean ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderAllInWithJavaUtilIterator_withJavaUtilIterator_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilIterator> actual, id<JavaUtilIterator> expected);
-
-__attribute__((unused)) static jboolean ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCorrespondingWithJavaUtilIterator_withId_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilIterator> actual, id expectedElement);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsAnyWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, NSString *failVerb, id<JavaLangIterable> expected);
-
-__attribute__((unused)) static void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsNoneWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, NSString *excludedPrefix, id<JavaLangIterable> excluded);
-
-__attribute__((unused)) static id<JavaLangIterable> ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$8();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$9();
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthIterableSubject)
-
-@implementation ComGoogleCommonTruthIterableSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                       withJavaLangIterable:(id<JavaLangIterable>)list {
-  ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(self, failureStrategy, list);
-  return self;
-}
-
-- (void)isEmpty {
-  if (!ComGoogleCommonCollectIterables_isEmptyWithJavaLangIterable_([self actual])) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if (ComGoogleCommonCollectIterables_isEmptyWithJavaLangIterable_([self actual])) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)hasSizeWithInt:(jint)expectedSize {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedSize >= 0, @"expectedSize(%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedSize) } count:1 type:NSObject_class_()]);
-  jint actualSize = ComGoogleCommonCollectIterables_sizeWithJavaLangIterable_([self actual]);
-  if (actualSize != expectedSize) {
-    [self failWithBadResultsWithNSString:@"has a size of" withId:JavaLangInteger_valueOfWithInt_(expectedSize) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualSize)];
-  }
-}
-
-- (void)containsWithId:(id)element {
-  if (!ComGoogleCommonCollectIterables_containsWithJavaLangIterable_withId_([self actual], element)) {
-    [self failWithRawMessageWithNSString:@"%s should have contained <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], element } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)doesNotContainWithId:(id)element {
-  if (ComGoogleCommonCollectIterables_containsWithJavaLangIterable_withId_([self actual], element)) {
-    [self failWithRawMessageWithNSString:@"%s should not have contained <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], element } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)containsNoDuplicates {
-  id<JavaUtilList> duplicates = ComGoogleCommonCollectLists_newArrayList();
-  for (id<ComGoogleCommonCollectMultiset_Entry> __strong entry_ in nil_chk([((ComGoogleCommonCollectLinkedHashMultiset *) nil_chk(ComGoogleCommonCollectLinkedHashMultiset_createWithJavaLangIterable_([self actual]))) entrySet])) {
-    if ([((id<ComGoogleCommonCollectMultiset_Entry>) nil_chk(entry_)) getCount] > 1) {
-      [((id<JavaUtilList>) nil_chk(duplicates)) addWithId:entry_];
-    }
-  }
-  if (![((id<JavaUtilList>) nil_chk(duplicates)) isEmpty]) {
-    [self failWithRawMessageWithNSString:@"%s has the following duplicates: <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], duplicates } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)containsAnyOfWithId:(id)first
-                     withId:(id)second
-          withNSObjectArray:(IOSObjectArray *)rest {
-  ComGoogleCommonTruthIterableSubject_containsAnyWithNSString_withJavaLangIterable_(self, @"contains any of", ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest));
-}
-
-- (void)containsAnyInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthIterableSubject_containsAnyWithNSString_withJavaLangIterable_(self, @"contains any element in", expected);
-}
-
-- (void)containsAnyWithNSString:(NSString *)failVerb
-           withJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthIterableSubject_containsAnyWithNSString_withJavaLangIterable_(self, failVerb, expected);
-}
-
-+ (id<JavaUtilCollection>)iterableToCollectionWithJavaLangIterable:(id<JavaLangIterable>)iterable {
-  return ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_(iterable);
-}
-
-+ (id<JavaUtilList>)iterableToListWithJavaLangIterable:(id<JavaLangIterable>)iterable {
-  return ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(iterable);
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllOfWithId:(id)firstExpected
-                                                withId:(id)secondExpected
-                                     withNSObjectArray:(IOSObjectArray *)restOfExpected {
-  return ComGoogleCommonTruthIterableSubject_containsAllWithNSString_withJavaLangIterable_(self, @"contains all of", ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(firstExpected, secondExpected, restOfExpected));
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  return ComGoogleCommonTruthIterableSubject_containsAllWithNSString_withJavaLangIterable_(self, @"contains all elements in", expected);
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllWithNSString:(NSString *)failVerb
-                                      withJavaLangIterable:(id<JavaLangIterable>)expectedIterable {
-  return ComGoogleCommonTruthIterableSubject_containsAllWithNSString_withJavaLangIterable_(self, failVerb, expectedIterable);
-}
-
-+ (void)moveElementsWithJavaUtilList:(id<JavaUtilList>)input
-              withJavaUtilCollection:(id<JavaUtilCollection>)output
-                             withInt:(jint)maxElements {
-  ComGoogleCommonTruthIterableSubject_moveElementsWithJavaUtilList_withJavaUtilCollection_withInt_(input, output, maxElements);
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSObjectArray:(IOSObjectArray *)varargs {
-  id<JavaUtilList> expected = (varargs == nil) ? ComGoogleCommonCollectLists_newArrayListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ nil } count:1 type:NSObject_class_()]) : JavaUtilArrays_asListWithNSObjectArray_(varargs);
-  return ComGoogleCommonTruthIterableSubject_containsExactlyElementsInWithJavaLangIterable_withBoolean_(self, expected, varargs != nil && varargs->size_ == 1 && [JavaLangIterable_class_() isInstance:IOSObjectArray_Get(varargs, 0)]);
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  return ComGoogleCommonTruthIterableSubject_containsExactlyElementsInWithJavaLangIterable_withBoolean_(self, expected, false);
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)required
-                                                                     withBoolean:(jboolean)addElementsInWarning {
-  return ComGoogleCommonTruthIterableSubject_containsExactlyElementsInWithJavaLangIterable_withBoolean_(self, required, addElementsInWarning);
-}
-
-- (void)failWithBadResultsAndSuffixWithNSString:(NSString *)verb
-                                         withId:(id)expected
-                                   withNSString:(NSString *)failVerb
-                                         withId:(id)actual
-                                   withNSString:(NSString *)suffix {
-  ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(self, verb, expected, failVerb, actual, suffix);
-}
-
-- (void)containsNoneOfWithId:(id)firstExcluded
-                      withId:(id)secondExcluded
-           withNSObjectArray:(IOSObjectArray *)restOfExcluded {
-  ComGoogleCommonTruthIterableSubject_containsNoneWithNSString_withJavaLangIterable_(self, @"contains none of", ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(firstExcluded, secondExcluded, restOfExcluded));
-}
-
-- (void)containsNoneInWithJavaLangIterable:(id<JavaLangIterable>)excluded {
-  ComGoogleCommonTruthIterableSubject_containsNoneWithNSString_withJavaLangIterable_(self, @"contains no elements in", excluded);
-}
-
-- (void)containsNoneWithNSString:(NSString *)failVerb
-            withJavaLangIterable:(id<JavaLangIterable>)excluded {
-  ComGoogleCommonTruthIterableSubject_containsNoneWithNSString_withJavaLangIterable_(self, failVerb, excluded);
-}
-
-- (void)isStrictlyOrdered {
-  ComGoogleCommonTruthIterableSubject_isStrictlyOrderedWithJavaUtilComparator_(self, ComGoogleCommonCollectOrdering_natural());
-}
-
-- (void)isStrictlyOrderedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
-  ComGoogleCommonTruthIterableSubject_isStrictlyOrderedWithJavaUtilComparator_(self, comparator);
-}
-
-- (void)isOrdered {
-  ComGoogleCommonTruthIterableSubject_isOrdered(self);
-}
-
-- (void)isPartiallyOrdered {
-  ComGoogleCommonTruthIterableSubject_isOrdered(self);
-}
-
-- (void)isOrderedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
-  ComGoogleCommonTruthIterableSubject_isOrderedWithJavaUtilComparator_(self, comparator);
-}
-
-- (void)isPartiallyOrderedWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
-  ComGoogleCommonTruthIterableSubject_isOrderedWithJavaUtilComparator_(self, comparator);
-}
-
-- (void)pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker:(id<ComGoogleCommonTruthIterableSubject_PairwiseChecker>)checker {
-  ComGoogleCommonTruthIterableSubject_pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker_(self, checker);
-}
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)comparingElementsUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence {
-  return create_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(self, correspondence);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 5, 6, -1, -1, -1, 7 },
-    { NULL, "V", 0x11, 8, 6, -1, -1, -1, 9 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x91, 10, 11, -1, -1, -1, 12 },
-    { NULL, "V", 0x11, 13, 14, -1, 15, -1, -1 },
-    { NULL, "V", 0x2, 16, 17, -1, 18, -1, -1 },
-    { NULL, "LJavaUtilCollection;", 0xa, 19, 14, -1, 20, -1, -1 },
-    { NULL, "LJavaUtilList;", 0xa, 21, 14, -1, 22, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x91, 23, 11, -1, -1, -1, 24 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x11, 25, 14, -1, 26, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x2, 27, 17, -1, 28, -1, -1 },
-    { NULL, "V", 0xa, 29, 30, -1, 31, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x91, 32, 33, -1, -1, -1, 34 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x11, 35, 14, -1, 26, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x2, 35, 36, -1, 37, -1, -1 },
-    { NULL, "V", 0x14, 38, 39, -1, -1, -1, -1 },
-    { NULL, "V", 0x91, 40, 11, -1, -1, -1, 41 },
-    { NULL, "V", 0x11, 42, 14, -1, 15, -1, -1 },
-    { NULL, "V", 0x2, 43, 17, -1, 18, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 44, 45, -1, 46, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, -1, -1, -1, -1, 47, -1 },
-    { NULL, "V", 0x11, 48, 45, -1, 46, -1, -1 },
-    { NULL, "V", 0x11, 49, 45, -1, 46, 50, -1 },
-    { NULL, "V", 0x2, 51, 52, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", 0x1, 53, 54, -1, 55, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangIterable:);
-  methods[1].selector = @selector(isEmpty);
-  methods[2].selector = @selector(isNotEmpty);
-  methods[3].selector = @selector(hasSizeWithInt:);
-  methods[4].selector = @selector(containsWithId:);
-  methods[5].selector = @selector(doesNotContainWithId:);
-  methods[6].selector = @selector(containsNoDuplicates);
-  methods[7].selector = @selector(containsAnyOfWithId:withId:withNSObjectArray:);
-  methods[8].selector = @selector(containsAnyInWithJavaLangIterable:);
-  methods[9].selector = @selector(containsAnyWithNSString:withJavaLangIterable:);
-  methods[10].selector = @selector(iterableToCollectionWithJavaLangIterable:);
-  methods[11].selector = @selector(iterableToListWithJavaLangIterable:);
-  methods[12].selector = @selector(containsAllOfWithId:withId:withNSObjectArray:);
-  methods[13].selector = @selector(containsAllInWithJavaLangIterable:);
-  methods[14].selector = @selector(containsAllWithNSString:withJavaLangIterable:);
-  methods[15].selector = @selector(moveElementsWithJavaUtilList:withJavaUtilCollection:withInt:);
-  methods[16].selector = @selector(containsExactlyWithNSObjectArray:);
-  methods[17].selector = @selector(containsExactlyElementsInWithJavaLangIterable:);
-  methods[18].selector = @selector(containsExactlyElementsInWithJavaLangIterable:withBoolean:);
-  methods[19].selector = @selector(failWithBadResultsAndSuffixWithNSString:withId:withNSString:withId:withNSString:);
-  methods[20].selector = @selector(containsNoneOfWithId:withId:withNSObjectArray:);
-  methods[21].selector = @selector(containsNoneInWithJavaLangIterable:);
-  methods[22].selector = @selector(containsNoneWithNSString:withJavaLangIterable:);
-  methods[23].selector = @selector(isStrictlyOrdered);
-  methods[24].selector = @selector(isStrictlyOrderedWithJavaUtilComparator:);
-  methods[25].selector = @selector(isOrdered);
-  methods[26].selector = @selector(isPartiallyOrdered);
-  methods[27].selector = @selector(isOrderedWithJavaUtilComparator:);
-  methods[28].selector = @selector(isPartiallyOrderedWithJavaUtilComparator:);
-  methods[29].selector = @selector(pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker:);
-  methods[30].selector = @selector(comparingElementsUsingWithComGoogleCommonTruthCorrespondence:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "IN_ORDER", "LComGoogleCommonTruthOrdered;", .constantValue.asLong = 0, 0x1a, -1, 56, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangIterable;", "(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Iterable<*>;)V", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$0, "hasSize", "I", "contains", "LNSObject;", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$1, "doesNotContain", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$2, "containsAnyOf", "LNSObject;LNSObject;[LNSObject;", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$3, "containsAnyIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)V", "containsAny", "LNSString;LJavaLangIterable;", "(Ljava/lang/String;Ljava/lang/Iterable<*>;)V", "iterableToCollection", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<TT;>;)Ljava/util/Collection<TT;>;", "iterableToList", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<TT;>;)Ljava/util/List<TT;>;", "containsAllOf", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$4, "containsAllIn", "(Ljava/lang/Iterable<*>;)Lcom/google/common/truth/Ordered;", "containsAll", "(Ljava/lang/String;Ljava/lang/Iterable<*>;)Lcom/google/common/truth/Ordered;", "moveElements", "LJavaUtilList;LJavaUtilCollection;I", "(Ljava/util/List<*>;Ljava/util/Collection<Ljava/lang/Object;>;I)V", "containsExactly", "[LNSObject;", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$5, "containsExactlyElementsIn", "LJavaLangIterable;Z", "(Ljava/lang/Iterable<*>;Z)Lcom/google/common/truth/Ordered;", "failWithBadResultsAndSuffix", "LNSString;LNSObject;LNSString;LNSObject;LNSString;", "containsNoneOf", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$6, "containsNoneIn", "containsNone", "isStrictlyOrdered", "LJavaUtilComparator;", "(Ljava/util/Comparator<*>;)V", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$7, "isOrdered", "isPartiallyOrdered", (void *)&ComGoogleCommonTruthIterableSubject__Annotations$8, "pairwiseCheck", "LComGoogleCommonTruthIterableSubject_PairwiseChecker;", "comparingElementsUsing", "LComGoogleCommonTruthCorrespondence;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>(Lcom/google/common/truth/Correspondence<TA;TE;>;)Lcom/google/common/truth/IterableSubject$UsingCorrespondence<TA;TE;>;", &ComGoogleCommonTruthIterableSubject_IN_ORDER, "LComGoogleCommonTruthIterableSubject_NotInOrder;LComGoogleCommonTruthIterableSubject_PairwiseChecker;LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/IterableSubject;Ljava/lang/Iterable<*>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject = { "IterableSubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x1, 31, 1, -1, 57, -1, 58, -1 };
-  return &_ComGoogleCommonTruthIterableSubject;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthIterableSubject class]) {
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthIterableSubject_IN_ORDER, new_ComGoogleCommonTruthIterableSubject_1_init());
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthIterableSubject)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangIterable> list) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, list);
-}
-
-ComGoogleCommonTruthIterableSubject *new_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangIterable> list) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIterableSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_, failureStrategy, list)
-}
-
-ComGoogleCommonTruthIterableSubject *create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangIterable> list) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIterableSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_, failureStrategy, list)
-}
-
-void ComGoogleCommonTruthIterableSubject_containsAnyWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, NSString *failVerb, id<JavaLangIterable> expected) {
-  id<JavaUtilCollection> actual = ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_([self actual]);
-  for (id __strong item in nil_chk(expected)) {
-    if ([((id<JavaUtilCollection>) nil_chk(actual)) containsWithId:item]) {
-      return;
-    }
-  }
-  [self failWithNSString:failVerb withId:expected];
-}
-
-id<JavaUtilCollection> ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_(id<JavaLangIterable> iterable) {
-  ComGoogleCommonTruthIterableSubject_initialize();
-  if ([JavaUtilCollection_class_() isInstance:iterable]) {
-    return (id<JavaUtilCollection>) cast_check(iterable, JavaUtilCollection_class_());
-  }
-  else {
-    return ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(iterable);
-  }
-}
-
-id<JavaUtilList> ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(id<JavaLangIterable> iterable) {
-  ComGoogleCommonTruthIterableSubject_initialize();
-  if ([JavaUtilList_class_() isInstance:iterable]) {
-    return (id<JavaUtilList>) cast_check(iterable, JavaUtilList_class_());
-  }
-  else {
-    return ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(iterable);
-  }
-}
-
-id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthIterableSubject_containsAllWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, NSString *failVerb, id<JavaLangIterable> expectedIterable) {
-  id<JavaUtilList> actual = ComGoogleCommonCollectLists_newLinkedListWithJavaLangIterable_([self actual]);
-  id<JavaUtilCollection> expected = ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_(expectedIterable);
-  id<JavaUtilList> missing = ComGoogleCommonCollectLists_newArrayList();
-  id<JavaUtilList> actualNotInOrder = ComGoogleCommonCollectLists_newArrayList();
-  jboolean ordered = true;
-  for (id __strong e in nil_chk(expected)) {
-    jint index = [((id<JavaUtilList>) nil_chk(actual)) indexOfWithId:e];
-    if (index != -1) {
-      ComGoogleCommonTruthIterableSubject_moveElementsWithJavaUtilList_withJavaUtilCollection_withInt_(actual, actualNotInOrder, index);
-      [actual removeWithInt:0];
-    }
-    else {
-      if ([((id<JavaUtilList>) nil_chk(actualNotInOrder)) removeWithId:e]) {
-        ordered = false;
-      }
-      else {
-        [((id<JavaUtilList>) nil_chk(missing)) addWithId:e];
-      }
-    }
-  }
-  if (![((id<JavaUtilList>) nil_chk(missing)) isEmpty]) {
-    [self failWithBadResultsWithNSString:failVerb withId:expected withNSString:@"is missing" withId:ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(missing)];
-  }
-  return ordered ? ComGoogleCommonTruthIterableSubject_IN_ORDER : create_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(self, @"contains all elements in order", expected);
-}
-
-void ComGoogleCommonTruthIterableSubject_moveElementsWithJavaUtilList_withJavaUtilCollection_withInt_(id<JavaUtilList> input, id<JavaUtilCollection> output, jint maxElements) {
-  ComGoogleCommonTruthIterableSubject_initialize();
-  for (jint i = 0; i < maxElements; i++) {
-    [((id<JavaUtilCollection>) nil_chk(output)) addWithId:[((id<JavaUtilList>) nil_chk(input)) removeWithInt:0]];
-  }
-}
-
-id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthIterableSubject_containsExactlyElementsInWithJavaLangIterable_withBoolean_(ComGoogleCommonTruthIterableSubject *self, id<JavaLangIterable> required, jboolean addElementsInWarning) {
-  NSString *failSuffix = addElementsInWarning ? @". Passing an iterable to the varargs method containsExactly(Object...) is often not the correct thing to do. Did you mean to call containsExactlyElementsIn(Iterable) instead?" : @"";
-  id<JavaUtilIterator> actualIter = [((id<JavaLangIterable>) nil_chk([self actual])) iterator];
-  id<JavaUtilIterator> requiredIter = [((id<JavaLangIterable>) nil_chk(required)) iterator];
-  while ([((id<JavaUtilIterator>) nil_chk(actualIter)) hasNext] && [((id<JavaUtilIterator>) nil_chk(requiredIter)) hasNext]) {
-    id actualElement = [actualIter next];
-    id requiredElement = [((id<JavaUtilIterator>) nil_chk(requiredIter)) next];
-    if (!ComGoogleCommonBaseObjects_equalWithId_withId_(actualElement, requiredElement)) {
-      id<JavaUtilCollection> missing = ComGoogleCommonCollectLists_newArrayList();
-      [((id<JavaUtilCollection>) nil_chk(missing)) addWithId:requiredElement];
-      ComGoogleCommonCollectIterators_addAllWithJavaUtilCollection_withJavaUtilIterator_(missing, requiredIter);
-      id<JavaUtilCollection> extra = ComGoogleCommonCollectLists_newArrayList();
-      if (![missing removeWithId:actualElement]) {
-        [((id<JavaUtilCollection>) nil_chk(extra)) addWithId:actualElement];
-      }
-      while ([actualIter hasNext]) {
-        id item = [actualIter next];
-        if (![missing removeWithId:item]) {
-          [((id<JavaUtilCollection>) nil_chk(extra)) addWithId:item];
-        }
-      }
-      if (![missing isEmpty]) {
-        if (![((id<JavaUtilCollection>) nil_chk(extra)) isEmpty]) {
-          [self failWithRawMessageWithNSString:@"Not true that %s contains exactly <%s>. It is missing <%s> and has unexpected items <%s>%s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], required, ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(missing), ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(extra), failSuffix } count:5 type:NSObject_class_()]];
-        }
-        else {
-          ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(self, @"contains exactly", required, @"is missing", ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(missing), failSuffix);
-        }
-      }
-      if (![((id<JavaUtilCollection>) nil_chk(extra)) isEmpty]) {
-        ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(self, @"contains exactly", required, @"has unexpected items", ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(extra), failSuffix);
-      }
-      return create_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(self, @"contains exactly these elements in order", required);
-    }
-  }
-  if ([actualIter hasNext]) {
-    ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(self, @"contains exactly", required, @"has unexpected items", ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(ComGoogleCommonCollectLists_newArrayListWithJavaUtilIterator_(actualIter)), failSuffix);
-  }
-  else if ([((id<JavaUtilIterator>) nil_chk(requiredIter)) hasNext]) {
-    ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(self, @"contains exactly", required, @"is missing", ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(ComGoogleCommonCollectLists_newArrayListWithJavaUtilIterator_(requiredIter)), failSuffix);
-  }
-  return ComGoogleCommonTruthIterableSubject_IN_ORDER;
-}
-
-void ComGoogleCommonTruthIterableSubject_failWithBadResultsAndSuffixWithNSString_withId_withNSString_withId_withNSString_(ComGoogleCommonTruthIterableSubject *self, NSString *verb, id expected, NSString *failVerb, id actual, NSString *suffix) {
-  [self failWithRawMessageWithNSString:@"Not true that %s %s <%s>. It %s <%s>%s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], verb, expected, failVerb, (actual == nil) ? @"null reference" : actual, suffix } count:6 type:NSObject_class_()]];
-}
-
-void ComGoogleCommonTruthIterableSubject_containsNoneWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, NSString *failVerb, id<JavaLangIterable> excluded) {
-  id<JavaUtilCollection> actual = ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_([self actual]);
-  id<JavaUtilCollection> present = create_JavaUtilArrayList_init();
-  for (id __strong item in nil_chk(ComGoogleCommonCollectSets_newLinkedHashSetWithJavaLangIterable_(excluded))) {
-    if ([((id<JavaUtilCollection>) nil_chk(actual)) containsWithId:item]) {
-      [present addWithId:item];
-    }
-  }
-  if (![present isEmpty]) {
-    [self failWithBadResultsWithNSString:failVerb withId:excluded withNSString:@"contains" withId:present];
-  }
-}
-
-void ComGoogleCommonTruthIterableSubject_isStrictlyOrderedWithJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *self, id<JavaUtilComparator> comparator) {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(comparator);
-  ComGoogleCommonTruthIterableSubject_pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker_(self, create_ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(self, comparator));
-}
-
-void ComGoogleCommonTruthIterableSubject_isOrdered(ComGoogleCommonTruthIterableSubject *self) {
-  ComGoogleCommonTruthIterableSubject_isOrderedWithJavaUtilComparator_(self, ComGoogleCommonCollectOrdering_natural());
-}
-
-void ComGoogleCommonTruthIterableSubject_isOrderedWithJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *self, id<JavaUtilComparator> comparator) {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(comparator);
-  ComGoogleCommonTruthIterableSubject_pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker_(self, create_ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(self, comparator));
-}
-
-void ComGoogleCommonTruthIterableSubject_pairwiseCheckWithComGoogleCommonTruthIterableSubject_PairwiseChecker_(ComGoogleCommonTruthIterableSubject *self, id<ComGoogleCommonTruthIterableSubject_PairwiseChecker> checker) {
-  id<JavaUtilIterator> iterator = [((id<JavaLangIterable>) nil_chk([self actual])) iterator];
-  if ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
-    id prev = [iterator next];
-    while ([iterator hasNext]) {
-      id next = [iterator next];
-      [((id<ComGoogleCommonTruthIterableSubject_PairwiseChecker>) nil_chk(checker)) checkWithId:prev withId:next];
-      prev = next;
-    }
-  }
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthIterableSubject)
-
-@implementation ComGoogleCommonTruthIterableSubject_NotInOrder
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                                               withNSString:(NSString *)check
-                                       withJavaLangIterable:(id<JavaLangIterable>)required {
-  ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(self, outer$, check, required);
-  return self;
-}
-
-- (void)inOrder {
-  [this$0_ failWithNSString:check_ withId:required_];
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(check_);
-  RELEASE_(required_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthIterableSubject:withNSString:withJavaLangIterable:);
-  methods[1].selector = @selector(inOrder);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthIterableSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "check_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "required_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
-  };
-  static const void *ptrTable[] = { "LNSString;LJavaLangIterable;", "(Ljava/lang/String;Ljava/lang/Iterable<*>;)V", "Ljava/lang/Iterable<*>;", "LComGoogleCommonTruthIterableSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject_NotInOrder = { "NotInOrder", "com.google.common.truth", ptrTable, methods, fields, 7, 0x2, 2, 3, 3, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthIterableSubject_NotInOrder;
-}
-
-@end
-
-void ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject_NotInOrder *self, ComGoogleCommonTruthIterableSubject *outer$, NSString *check, id<JavaLangIterable> required) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  JreStrongAssign(&self->check_, check);
-  JreStrongAssign(&self->required_, required);
-}
-
-ComGoogleCommonTruthIterableSubject_NotInOrder *new_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *outer$, NSString *check, id<JavaLangIterable> required) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIterableSubject_NotInOrder, initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_, outer$, check, required)
-}
-
-ComGoogleCommonTruthIterableSubject_NotInOrder *create_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *outer$, NSString *check, id<JavaLangIterable> required) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIterableSubject_NotInOrder, initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_, outer$, check, required)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthIterableSubject_NotInOrder)
-
-@implementation ComGoogleCommonTruthIterableSubject_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthIterableSubject_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)inOrder {
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(inOrder);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthIterableSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject_1 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 0, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthIterableSubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthIterableSubject_1_init(ComGoogleCommonTruthIterableSubject_1 *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthIterableSubject_1 *new_ComGoogleCommonTruthIterableSubject_1_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIterableSubject_1, init)
-}
-
-ComGoogleCommonTruthIterableSubject_1 *create_ComGoogleCommonTruthIterableSubject_1_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIterableSubject_1, init)
-}
-
-@implementation ComGoogleCommonTruthIterableSubject_PairwiseChecker
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(checkWithId:withId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "check", "LNSObject;LNSObject;", "LComGoogleCommonTruthIterableSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject_PairwiseChecker = { "PairwiseChecker", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x60a, 1, 0, 2, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthIterableSubject_PairwiseChecker;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthIterableSubject_PairwiseChecker)
-
-@implementation ComGoogleCommonTruthIterableSubject_2
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                                     withJavaUtilComparator:(id<JavaUtilComparator>)capture$0 {
-  ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)checkWithId:(id)prev
-             withId:(id)next {
-  if ([((id<JavaUtilComparator>) nil_chk((val$comparator_))) compareWithId:prev withId:next] >= 0) {
-    [this$0_ failWithNSString:@"is strictly ordered" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ prev, next } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(val$comparator_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthIterableSubject:withJavaUtilComparator:);
-  methods[1].selector = @selector(checkWithId:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthIterableSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
-  };
-  static const void *ptrTable[] = { "check", "LNSObject;LNSObject;", "Ljava/util/Comparator<*>;", "LComGoogleCommonTruthIterableSubject;", "isStrictlyOrderedWithJavaUtilComparator:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject_2 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
-  return &_ComGoogleCommonTruthIterableSubject_2;
-}
-
-@end
-
-void ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject_2 *self, ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JreStrongAssign(&self->val$comparator_, capture$0);
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthIterableSubject_2 *new_ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIterableSubject_2, initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthIterableSubject_2 *create_ComGoogleCommonTruthIterableSubject_2_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIterableSubject_2, initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthIterableSubject_3
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                                     withJavaUtilComparator:(id<JavaUtilComparator>)capture$0 {
-  ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)checkWithId:(id)prev
-             withId:(id)next {
-  if ([((id<JavaUtilComparator>) nil_chk((val$comparator_))) compareWithId:prev withId:next] > 0) {
-    [this$0_ failWithNSString:@"is ordered" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ prev, next } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(val$comparator_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthIterableSubject:withJavaUtilComparator:);
-  methods[1].selector = @selector(checkWithId:withId:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthIterableSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
-  };
-  static const void *ptrTable[] = { "check", "LNSObject;LNSObject;", "Ljava/util/Comparator<*>;", "LComGoogleCommonTruthIterableSubject;", "isOrderedWithJavaUtilComparator:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject_3 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
-  return &_ComGoogleCommonTruthIterableSubject_3;
-}
-
-@end
-
-void ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject_3 *self, ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  JreStrongAssign(&self->val$comparator_, capture$0);
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthIterableSubject_3 *new_ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIterableSubject_3, initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthIterableSubject_3 *create_ComGoogleCommonTruthIterableSubject_3_initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_(ComGoogleCommonTruthIterableSubject *outer$, id<JavaUtilComparator> capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIterableSubject_3, initWithComGoogleCommonTruthIterableSubject_withJavaUtilComparator_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthIterableSubject_UsingCorrespondence
-
-- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)outer$
-                     withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(self, outer$, correspondence);
-  return self;
-}
-
-- (void)containsWithId:(id)expected {
-  for (id __strong actual in nil_chk(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self))) {
-    if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:actual withId:expected]) {
-      return;
-    }
-  }
-  [this$0_ failWithNSString:JreStrcat("$@", @"contains at least one element that ", correspondence_) withId:expected];
-}
-
-- (void)doesNotContainWithId:(id)excluded {
-  id<JavaUtilList> matchingElements = create_JavaUtilArrayList_init();
-  for (id __strong actual in nil_chk(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self))) {
-    if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:actual withId:excluded]) {
-      [matchingElements addWithId:actual];
-    }
-  }
-  if (![matchingElements isEmpty]) {
-    [this$0_ failWithRawMessageWithNSString:@"%s should not have contained an element that %s <%s>. It contained the following such elements: <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], correspondence_, excluded, matchingElements } count:4 type:NSObject_class_()]];
-  }
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSObjectArray:(IOSObjectArray *)expected {
-  return [self containsExactlyElementsInWithJavaLangIterable:(expected == nil) ? ComGoogleCommonCollectLists_newArrayListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ nil } count:1 type:NSObject_class_()]) : JavaUtilArrays_asListWithNSObjectArray_(expected)];
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  id<JavaUtilList> actualList = ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self));
-  id<JavaUtilList> expectedList = ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(expected);
-  if (ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderExactlyWithJavaUtilIterator_withJavaUtilIterator_(self, [((id<JavaUtilList>) nil_chk(actualList)) iterator], [((id<JavaUtilList>) nil_chk(expectedList)) iterator])) {
-    return JreLoadStatic(ComGoogleCommonTruthIterableSubject, IN_ORDER);
-  }
-  ComGoogleCommonCollectImmutableSetMultimap *candidateMapping = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCandidateMappingWithJavaUtilList_withJavaUtilList_(self, actualList, expectedList);
-  [self failIfCandidateMappingHasMissingOrExtraWithJavaUtilList:actualList withJavaUtilList:expectedList withComGoogleCommonCollectImmutableMultimap:candidateMapping];
-  ComGoogleCommonCollectImmutableBiMap *maximalOneToOneMapping = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap_(self, candidateMapping);
-  [self failIfOneToOneMappingHasMissingOrExtraWithJavaUtilList:actualList withJavaUtilList:expectedList withComGoogleCommonCollectBiMap:maximalOneToOneMapping];
-  return create_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(this$0_, JreStrcat("$@$", @"contains, in order, exactly one element that ", correspondence_, @" each element of"), expected);
-}
-
-- (jboolean)correspondInOrderExactlyWithJavaUtilIterator:(id<JavaUtilIterator>)actual
-                                    withJavaUtilIterator:(id<JavaUtilIterator>)expected {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderExactlyWithJavaUtilIterator_withJavaUtilIterator_(self, actual, expected);
-}
-
-- (ComGoogleCommonCollectImmutableSetMultimap *)findCandidateMappingWithJavaUtilList:(id<JavaUtilList>)actual
-                                                                    withJavaUtilList:(id<JavaUtilList>)expected {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCandidateMappingWithJavaUtilList_withJavaUtilList_(self, actual, expected);
-}
-
-- (void)failIfCandidateMappingHasMissingOrExtraWithJavaUtilList:(id<JavaUtilList>)actual
-                                               withJavaUtilList:(id<JavaUtilList>)expected
-                    withComGoogleCommonCollectImmutableMultimap:(ComGoogleCommonCollectImmutableMultimap *)mapping {
-  id<JavaUtilList> extra = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, actual, [((ComGoogleCommonCollectImmutableMultimap *) nil_chk(mapping)) keySet]);
-  id<JavaUtilList> missing = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, expected, [((ComGoogleCommonCollectImmutableMultimap *) nil_chk([mapping inverse])) keySet]);
-  ComGoogleCommonBaseOptional *missingOrExtraMessage = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_describeMissingOrExtraWithJavaUtilList_withJavaUtilList_(self, extra, missing);
-  if ([((ComGoogleCommonBaseOptional *) nil_chk(missingOrExtraMessage)) isPresent]) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains exactly one element that %s each element of <%s>. It %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], correspondence_, expected, [missingOrExtraMessage get] } count:4 type:NSObject_class_()]];
-  }
-}
-
-- (ComGoogleCommonBaseOptional *)describeMissingOrExtraWithJavaUtilList:(id<JavaUtilList>)extra
-                                                       withJavaUtilList:(id<JavaUtilList>)missing {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_describeMissingOrExtraWithJavaUtilList_withJavaUtilList_(self, extra, missing);
-}
-
-- (id<JavaUtilList>)findNotIndexedWithJavaUtilList:(id<JavaUtilList>)list
-                                   withJavaUtilSet:(id<JavaUtilSet>)indexes {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, list, indexes);
-}
-
-- (NSString *)formatMissingWithJavaUtilList:(id<JavaUtilList>)missing {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(self, missing);
-}
-
-- (ComGoogleCommonCollectImmutableBiMap *)findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap:(ComGoogleCommonCollectImmutableMultimap *)edges {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap_(self, edges);
-}
-
-- (void)failIfOneToOneMappingHasMissingOrExtraWithJavaUtilList:(id<JavaUtilList>)actual
-                                              withJavaUtilList:(id<JavaUtilList>)expected
-                               withComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)mapping {
-  id<JavaUtilList> extra = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, actual, [((id<ComGoogleCommonCollectBiMap>) nil_chk(mapping)) keySet]);
-  id<JavaUtilList> missing = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, expected, [mapping values]);
-  ComGoogleCommonBaseOptional *missingOrExtraMessage = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_describeMissingOrExtraWithJavaUtilList_withJavaUtilList_(self, extra, missing);
-  if ([((ComGoogleCommonBaseOptional *) nil_chk(missingOrExtraMessage)) isPresent]) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains exactly one element that %s each element of <%s>. It contains at least one element that matches each expected element, and every element it contains matches at least one expected element, but there was no 1:1 mapping between all the actual and expected elements. Using the most complete 1:1 mapping (or one such mapping, if there is a tie), it %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], correspondence_, expected, [missingOrExtraMessage get] } count:4 type:NSObject_class_()]];
-  }
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllOfWithId:(id)first
-                                                withId:(id)second
-                                     withNSObjectArray:(IOSObjectArray *)rest {
-  return [self containsAllInWithJavaLangIterable:ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest)];
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsAllInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  id<JavaUtilList> actualList = ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self));
-  id<JavaUtilList> expectedList = ComGoogleCommonTruthIterableSubject_iterableToListWithJavaLangIterable_(expected);
-  if (ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderAllInWithJavaUtilIterator_withJavaUtilIterator_(self, [((id<JavaUtilList>) nil_chk(actualList)) iterator], [((id<JavaUtilList>) nil_chk(expectedList)) iterator])) {
-    return JreLoadStatic(ComGoogleCommonTruthIterableSubject, IN_ORDER);
-  }
-  ComGoogleCommonCollectImmutableSetMultimap *candidateMapping = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCandidateMappingWithJavaUtilList_withJavaUtilList_(self, actualList, expectedList);
-  [self failIfCandidateMappingHasMissingWithJavaUtilList:expectedList withComGoogleCommonCollectImmutableMultimap:candidateMapping];
-  ComGoogleCommonCollectImmutableBiMap *maximalOneToOneMapping = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap_(self, candidateMapping);
-  [self failIfOneToOneMappingHasMissingWithJavaUtilList:expectedList withComGoogleCommonCollectBiMap:maximalOneToOneMapping];
-  return create_ComGoogleCommonTruthIterableSubject_NotInOrder_initWithComGoogleCommonTruthIterableSubject_withNSString_withJavaLangIterable_(this$0_, JreStrcat("$@$", @"contains, in order, at least one element that ", correspondence_, @" each element of"), expected);
-}
-
-- (jboolean)correspondInOrderAllInWithJavaUtilIterator:(id<JavaUtilIterator>)actual
-                                  withJavaUtilIterator:(id<JavaUtilIterator>)expected {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderAllInWithJavaUtilIterator_withJavaUtilIterator_(self, actual, expected);
-}
-
-- (jboolean)findCorrespondingWithJavaUtilIterator:(id<JavaUtilIterator>)actual
-                                           withId:(id)expectedElement {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCorrespondingWithJavaUtilIterator_withId_(self, actual, expectedElement);
-}
-
-- (void)failIfCandidateMappingHasMissingWithJavaUtilList:(id<JavaUtilList>)expected
-             withComGoogleCommonCollectImmutableMultimap:(ComGoogleCommonCollectImmutableMultimap *)mapping {
-  id<JavaUtilList> missing = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, expected, [((ComGoogleCommonCollectImmutableMultimap *) nil_chk([((ComGoogleCommonCollectImmutableMultimap *) nil_chk(mapping)) inverse])) keySet]);
-  if (![((id<JavaUtilList>) nil_chk(missing)) isEmpty]) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains at least one element that %s each element of <%s>. It is missing an element that %s %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], correspondence_, expected, correspondence_, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(self, missing) } count:5 type:NSObject_class_()]];
-  }
-}
-
-- (void)failIfOneToOneMappingHasMissingWithJavaUtilList:(id<JavaUtilList>)expected
-                        withComGoogleCommonCollectBiMap:(id<ComGoogleCommonCollectBiMap>)mapping {
-  id<JavaUtilList> missing = ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(self, expected, [((id<ComGoogleCommonCollectBiMap>) nil_chk(mapping)) values]);
-  if (![((id<JavaUtilList>) nil_chk(missing)) isEmpty]) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains at least one element that %s each element of <%s>. It contains at least one element that matches each expected element, but there was no 1:1 mapping between all the expected elements and any subset of the actual elements. Using the most complete 1:1 mapping (or one such mapping, if there is a tie), it is missing an element that %s %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], correspondence_, expected, correspondence_, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(self, missing) } count:5 type:NSObject_class_()]];
-  }
-}
-
-- (void)containsAnyOfWithId:(id)first
-                     withId:(id)second
-          withNSObjectArray:(IOSObjectArray *)rest {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsAnyWithNSString_withJavaLangIterable_(self, ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"contains at least one element that %s any of", [IOSObjectArray arrayWithObjects:(id[]){ correspondence_ } count:1 type:NSObject_class_()]), ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest));
-}
-
-- (void)containsAnyInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsAnyWithNSString_withJavaLangIterable_(self, ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"contains at least one element that %s any element in", [IOSObjectArray arrayWithObjects:(id[]){ correspondence_ } count:1 type:NSObject_class_()]), expected);
-}
-
-- (void)containsAnyWithNSString:(NSString *)failVerb
-           withJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsAnyWithNSString_withJavaLangIterable_(self, failVerb, expected);
-}
-
-- (void)containsNoneOfWithId:(id)firstExcluded
-                      withId:(id)secondExcluded
-           withNSObjectArray:(IOSObjectArray *)restOfExcluded {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsNoneWithNSString_withJavaLangIterable_(self, @"any of", ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(firstExcluded, secondExcluded, restOfExcluded));
-}
-
-- (void)containsNoneInWithJavaLangIterable:(id<JavaLangIterable>)excluded {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsNoneWithNSString_withJavaLangIterable_(self, @"any element in", excluded);
-}
-
-- (void)containsNoneWithNSString:(NSString *)excludedPrefix
-            withJavaLangIterable:(id<JavaLangIterable>)excluded {
-  ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsNoneWithNSString_withJavaLangIterable_(self, excludedPrefix, excluded);
-}
-
-- (id<JavaLangIterable>)getCastActual {
-  return ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(correspondence_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, 4, -1, 5 },
-    { NULL, "V", 0x1, 6, 3, -1, 4, -1, 7 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x91, 8, 9, -1, 10, 11, 12 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x1, 13, 14, -1, 15, -1, -1 },
-    { NULL, "Z", 0x2, 16, 17, -1, 18, -1, -1 },
-    { NULL, "LComGoogleCommonCollectImmutableSetMultimap;", 0x2, 19, 20, -1, 21, -1, -1 },
-    { NULL, "V", 0x0, 22, 23, -1, 24, -1, -1 },
-    { NULL, "LComGoogleCommonBaseOptional;", 0x2, 25, 20, -1, 26, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x2, 27, 28, -1, 29, -1, -1 },
-    { NULL, "LNSString;", 0x2, 30, 31, -1, 32, -1, -1 },
-    { NULL, "LComGoogleCommonCollectImmutableBiMap;", 0x2, 33, 34, -1, 35, -1, -1 },
-    { NULL, "V", 0x0, 36, 37, -1, 38, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x91, 39, 40, -1, 41, 42, 43 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x1, 44, 14, -1, 15, -1, -1 },
-    { NULL, "Z", 0x2, 45, 17, -1, 18, -1, -1 },
-    { NULL, "Z", 0x2, 46, 47, -1, 48, -1, -1 },
-    { NULL, "V", 0x0, 49, 50, -1, 51, -1, -1 },
-    { NULL, "V", 0x0, 52, 53, -1, 54, -1, -1 },
-    { NULL, "V", 0x91, 55, 40, -1, 56, 57, 58 },
-    { NULL, "V", 0x1, 59, 14, -1, 60, -1, -1 },
-    { NULL, "V", 0x2, 61, 62, -1, 63, -1, -1 },
-    { NULL, "V", 0x91, 64, 40, -1, 56, 65, 66 },
-    { NULL, "V", 0x1, 67, 14, -1, 60, -1, -1 },
-    { NULL, "V", 0x2, 68, 62, -1, 63, -1, -1 },
-    { NULL, "LJavaLangIterable;", 0x2, -1, -1, -1, 69, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthIterableSubject:withComGoogleCommonTruthCorrespondence:);
-  methods[1].selector = @selector(containsWithId:);
-  methods[2].selector = @selector(doesNotContainWithId:);
-  methods[3].selector = @selector(containsExactlyWithNSObjectArray:);
-  methods[4].selector = @selector(containsExactlyElementsInWithJavaLangIterable:);
-  methods[5].selector = @selector(correspondInOrderExactlyWithJavaUtilIterator:withJavaUtilIterator:);
-  methods[6].selector = @selector(findCandidateMappingWithJavaUtilList:withJavaUtilList:);
-  methods[7].selector = @selector(failIfCandidateMappingHasMissingOrExtraWithJavaUtilList:withJavaUtilList:withComGoogleCommonCollectImmutableMultimap:);
-  methods[8].selector = @selector(describeMissingOrExtraWithJavaUtilList:withJavaUtilList:);
-  methods[9].selector = @selector(findNotIndexedWithJavaUtilList:withJavaUtilSet:);
-  methods[10].selector = @selector(formatMissingWithJavaUtilList:);
-  methods[11].selector = @selector(findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap:);
-  methods[12].selector = @selector(failIfOneToOneMappingHasMissingOrExtraWithJavaUtilList:withJavaUtilList:withComGoogleCommonCollectBiMap:);
-  methods[13].selector = @selector(containsAllOfWithId:withId:withNSObjectArray:);
-  methods[14].selector = @selector(containsAllInWithJavaLangIterable:);
-  methods[15].selector = @selector(correspondInOrderAllInWithJavaUtilIterator:withJavaUtilIterator:);
-  methods[16].selector = @selector(findCorrespondingWithJavaUtilIterator:withId:);
-  methods[17].selector = @selector(failIfCandidateMappingHasMissingWithJavaUtilList:withComGoogleCommonCollectImmutableMultimap:);
-  methods[18].selector = @selector(failIfOneToOneMappingHasMissingWithJavaUtilList:withComGoogleCommonCollectBiMap:);
-  methods[19].selector = @selector(containsAnyOfWithId:withId:withNSObjectArray:);
-  methods[20].selector = @selector(containsAnyInWithJavaLangIterable:);
-  methods[21].selector = @selector(containsAnyWithNSString:withJavaLangIterable:);
-  methods[22].selector = @selector(containsNoneOfWithId:withId:withNSObjectArray:);
-  methods[23].selector = @selector(containsNoneInWithJavaLangIterable:);
-  methods[24].selector = @selector(containsNoneWithNSString:withJavaLangIterable:);
-  methods[25].selector = @selector(getCastActual);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthIterableSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "correspondence_", "LComGoogleCommonTruthCorrespondence;", .constantValue.asLong = 0, 0x12, -1, -1, 70, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthCorrespondence;", "(Lcom/google/common/truth/Correspondence<TA;TE;>;)V", "contains", "LNSObject;", "(TE;)V", (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$0, "doesNotContain", (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$1, "containsExactly", "[LNSObject;", "([TE;)Lcom/google/common/truth/Ordered;", (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$2, (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$3, "containsExactlyElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+TE;>;)Lcom/google/common/truth/Ordered;", "correspondInOrderExactly", "LJavaUtilIterator;LJavaUtilIterator;", "(Ljava/util/Iterator<+TA;>;Ljava/util/Iterator<+TE;>;)Z", "findCandidateMapping", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<+TA;>;Ljava/util/List<+TE;>;)Lcom/google/common/collect/ImmutableSetMultimap<Ljava/lang/Integer;Ljava/lang/Integer;>;", "failIfCandidateMappingHasMissingOrExtra", "LJavaUtilList;LJavaUtilList;LComGoogleCommonCollectImmutableMultimap;", "(Ljava/util/List<+TA;>;Ljava/util/List<+TE;>;Lcom/google/common/collect/ImmutableMultimap<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "describeMissingOrExtra", "(Ljava/util/List<+TA;>;Ljava/util/List<+TE;>;)Lcom/google/common/base/Optional<Ljava/lang/String;>;", "findNotIndexed", "LJavaUtilList;LJavaUtilSet;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Ljava/util/Set<Ljava/lang/Integer;>;)Ljava/util/List<TT;>;", "formatMissing", "LJavaUtilList;", "(Ljava/util/List<*>;)Ljava/lang/String;", "findMaximalOneToOneMapping", "LComGoogleCommonCollectImmutableMultimap;", "(Lcom/google/common/collect/ImmutableMultimap<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lcom/google/common/collect/ImmutableBiMap<Ljava/lang/Integer;Ljava/lang/Integer;>;", "failIfOneToOneMappingHasMissingOrExtra", "LJavaUtilList;LJavaUtilList;LComGoogleCommonCollectBiMap;", "(Ljava/util/List<+TA;>;Ljava/util/List<+TE;>;Lcom/google/common/collect/BiMap<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "containsAllOf", "LNSObject;LNSObject;[LNSObject;", "(TE;TE;[TE;)Lcom/google/common/truth/Ordered;", (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$4, (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$5, "containsAllIn", "correspondInOrderAllIn", "findCorresponding", "LJavaUtilIterator;LNSObject;", "(Ljava/util/Iterator<+TA;>;TE;)Z", "failIfCandidateMappingHasMissing", "LJavaUtilList;LComGoogleCommonCollectImmutableMultimap;", "(Ljava/util/List<+TE;>;Lcom/google/common/collect/ImmutableMultimap<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "failIfOneToOneMappingHasMissing", "LJavaUtilList;LComGoogleCommonCollectBiMap;", "(Ljava/util/List<+TE;>;Lcom/google/common/collect/BiMap<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "containsAnyOf", "(TE;TE;[TE;)V", (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$6, (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$7, "containsAnyIn", "(Ljava/lang/Iterable<+TE;>;)V", "containsAny", "LNSString;LJavaLangIterable;", "(Ljava/lang/String;Ljava/lang/Iterable<+TE;>;)V", "containsNoneOf", (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$8, (void *)&ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$9, "containsNoneIn", "containsNone", "()Ljava/lang/Iterable<TA;>;", "Lcom/google/common/truth/Correspondence<TA;TE;>;", "LComGoogleCommonTruthIterableSubject;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthIterableSubject_UsingCorrespondence = { "UsingCorrespondence", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 26, 2, 71, -1, -1, 72, -1 };
-  return &_ComGoogleCommonTruthIterableSubject_UsingCorrespondence;
-}
-
-@end
-
-void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, ComGoogleCommonTruthIterableSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  JreStrongAssign(&self->correspondence_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(correspondence));
-}
-
-ComGoogleCommonTruthIterableSubject_UsingCorrespondence *new_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthIterableSubject_UsingCorrespondence, initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_, outer$, correspondence)
-}
-
-ComGoogleCommonTruthIterableSubject_UsingCorrespondence *create_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthIterableSubject_UsingCorrespondence, initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_, outer$, correspondence)
-}
-
-jboolean ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderExactlyWithJavaUtilIterator_withJavaUtilIterator_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilIterator> actual, id<JavaUtilIterator> expected) {
-  while ([((id<JavaUtilIterator>) nil_chk(actual)) hasNext] && [((id<JavaUtilIterator>) nil_chk(expected)) hasNext]) {
-    id actualElement = [actual next];
-    id expectedElement = [((id<JavaUtilIterator>) nil_chk(expected)) next];
-    if (![((ComGoogleCommonTruthCorrespondence *) nil_chk(self->correspondence_)) compareWithId:actualElement withId:expectedElement]) {
-      return false;
-    }
-  }
-  return !([actual hasNext] || [((id<JavaUtilIterator>) nil_chk(expected)) hasNext]);
-}
-
-ComGoogleCommonCollectImmutableSetMultimap *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCandidateMappingWithJavaUtilList_withJavaUtilList_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> actual, id<JavaUtilList> expected) {
-  ComGoogleCommonCollectImmutableSetMultimap_Builder *mapping = ComGoogleCommonCollectImmutableSetMultimap_builder();
-  for (jint actualIndex = 0; actualIndex < [((id<JavaUtilList>) nil_chk(actual)) size]; actualIndex++) {
-    for (jint expectedIndex = 0; expectedIndex < [((id<JavaUtilList>) nil_chk(expected)) size]; expectedIndex++) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(self->correspondence_)) compareWithId:[actual getWithInt:actualIndex] withId:[expected getWithInt:expectedIndex]]) {
-        [((ComGoogleCommonCollectImmutableSetMultimap_Builder *) nil_chk(mapping)) putWithId:JavaLangInteger_valueOfWithInt_(actualIndex) withId:JavaLangInteger_valueOfWithInt_(expectedIndex)];
-      }
-    }
-  }
-  return [((ComGoogleCommonCollectImmutableSetMultimap_Builder *) nil_chk(mapping)) build];
-}
-
-ComGoogleCommonBaseOptional *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_describeMissingOrExtraWithJavaUtilList_withJavaUtilList_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> extra, id<JavaUtilList> missing) {
-  if (![((id<JavaUtilList>) nil_chk(missing)) isEmpty] && ![((id<JavaUtilList>) nil_chk(extra)) isEmpty]) {
-    return ComGoogleCommonBaseOptional_ofWithId_(ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"is missing an element that %s %s and has unexpected elements <%s>", [IOSObjectArray arrayWithObjects:(id[]){ self->correspondence_, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(self, missing), extra } count:3 type:NSObject_class_()]));
-  }
-  else if (![missing isEmpty]) {
-    return ComGoogleCommonBaseOptional_ofWithId_(ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"is missing an element that %s %s", [IOSObjectArray arrayWithObjects:(id[]){ self->correspondence_, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(self, missing) } count:2 type:NSObject_class_()]));
-  }
-  else if (![((id<JavaUtilList>) nil_chk(extra)) isEmpty]) {
-    return ComGoogleCommonBaseOptional_ofWithId_(ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"has unexpected elements <%s>", [IOSObjectArray arrayWithObjects:(id[]){ extra } count:1 type:NSObject_class_()]));
-  }
-  else {
-    return ComGoogleCommonBaseOptional_absent();
-  }
-}
-
-id<JavaUtilList> ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findNotIndexedWithJavaUtilList_withJavaUtilSet_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> list, id<JavaUtilSet> indexes) {
-  if ([((id<JavaUtilSet>) nil_chk(indexes)) size] == [((id<JavaUtilList>) nil_chk(list)) size]) {
-    return ComGoogleCommonCollectImmutableList_of();
-  }
-  id<JavaUtilList> notIndexed = ComGoogleCommonCollectLists_newArrayList();
-  for (jint index = 0; index < [list size]; index++) {
-    if (![indexes containsWithId:JavaLangInteger_valueOfWithInt_(index)]) {
-      [((id<JavaUtilList>) nil_chk(notIndexed)) addWithId:[list getWithInt:index]];
-    }
-  }
-  return notIndexed;
-}
-
-NSString *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_formatMissingWithJavaUtilList_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilList> missing) {
-  if ([((id<JavaUtilList>) nil_chk(missing)) size] == 1) {
-    return JreStrcat("C@C", '<', [missing getWithInt:0], '>');
-  }
-  else {
-    return JreStrcat("$@C", @"each of <", missing, '>');
-  }
-}
-
-ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findMaximalOneToOneMappingWithComGoogleCommonCollectImmutableMultimap_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, ComGoogleCommonCollectImmutableMultimap *edges) {
-  return ComGoogleCommonTruthGraphMatching_maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap_(edges);
-}
-
-jboolean ComGoogleCommonTruthIterableSubject_UsingCorrespondence_correspondInOrderAllInWithJavaUtilIterator_withJavaUtilIterator_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilIterator> actual, id<JavaUtilIterator> expected) {
-  while ([((id<JavaUtilIterator>) nil_chk(expected)) hasNext]) {
-    id expectedElement = [expected next];
-    if (!ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCorrespondingWithJavaUtilIterator_withId_(self, actual, expectedElement)) {
-      return false;
-    }
-  }
-  return true;
-}
-
-jboolean ComGoogleCommonTruthIterableSubject_UsingCorrespondence_findCorrespondingWithJavaUtilIterator_withId_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, id<JavaUtilIterator> actual, id expectedElement) {
-  while ([((id<JavaUtilIterator>) nil_chk(actual)) hasNext]) {
-    id actualElement = [actual next];
-    if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(self->correspondence_)) compareWithId:actualElement withId:expectedElement]) {
-      return true;
-    }
-  }
-  return false;
-}
-
-void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsAnyWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, NSString *failVerb, id<JavaLangIterable> expected) {
-  id<JavaUtilCollection> actual = ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self));
-  for (id __strong expectedItem in nil_chk(expected)) {
-    for (id __strong actualItem in nil_chk(actual)) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(self->correspondence_)) compareWithId:actualItem withId:expectedItem]) {
-        return;
-      }
-    }
-  }
-  [self->this$0_ failWithNSString:failVerb withId:expected];
-}
-
-void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_containsNoneWithNSString_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, NSString *excludedPrefix, id<JavaLangIterable> excluded) {
-  id<JavaUtilCollection> actual = ComGoogleCommonTruthIterableSubject_iterableToCollectionWithJavaLangIterable_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(self));
-  id<JavaUtilCollection> present = create_JavaUtilArrayList_init();
-  for (id __strong excludedItem in nil_chk(ComGoogleCommonCollectSets_newLinkedHashSetWithJavaLangIterable_(excluded))) {
-    for (id __strong actualItem in nil_chk(actual)) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(self->correspondence_)) compareWithId:actualItem withId:excludedItem]) {
-        [present addWithId:excludedItem];
-      }
-    }
-  }
-  if (![present isEmpty]) {
-    [self->this$0_ failWithRawMessageWithNSString:@"Not true that %s contains no element that %s %s <%s>. It contains at least one element that %s each of <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self->this$0_ actualAsString], self->correspondence_, excludedPrefix, excluded, self->correspondence_, present } count:6 type:NSObject_class_()]];
-  }
-}
-
-id<JavaLangIterable> ComGoogleCommonTruthIterableSubject_UsingCorrespondence_getCastActual(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self) {
-  return [self->this$0_ actual];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthIterableSubject_UsingCorrespondence__Annotations$9() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthIterableSubject_UsingCorrespondence)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthListMultimapSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthListMultimapSubject.h
deleted file mode 100644
index c019233fe..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthListMultimapSubject.h
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthListMultimapSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthListMultimapSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthListMultimapSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthListMultimapSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthListMultimapSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthListMultimapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthListMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthListMultimapSubject))
-#define ComGoogleCommonTruthListMultimapSubject_
-
-#define RESTRICT_ComGoogleCommonTruthMultimapSubject 1
-#define INCLUDE_ComGoogleCommonTruthMultimapSubject 1
-#include "ComGoogleCommonTruthMultimapSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol ComGoogleCommonCollectListMultimap;
-@protocol ComGoogleCommonCollectMultimap;
-@protocol ComGoogleCommonCollectSetMultimap;
-
-@interface ComGoogleCommonTruthListMultimapSubject : ComGoogleCommonTruthMultimapSubject
-
-#pragma mark Public
-
-- (void)isEqualToWithComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)other;
-
-- (ComGoogleCommonTruthListMultimapSubject *)namedWithNSString:(NSString *)format
-                                             withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (id<ComGoogleCommonCollectMultimap>)actual;
-
-- (id<ComGoogleCommonCollectMultimap>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                     withComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)multimap;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthListMultimapSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(ComGoogleCommonTruthListMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectListMultimap> multimap);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthListMultimapSubject *new_ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectListMultimap> multimap) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthListMultimapSubject *create_ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectListMultimap> multimap);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthListMultimapSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthListMultimapSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthListMultimapSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthListMultimapSubject.m
deleted file mode 100644
index ceb7a3758..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthListMultimapSubject.m
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthListMultimapSubject.h"
-#include "ComGoogleCommonTruthMultimapSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/collect/ListMultimap.h"
-#include "com/google/common/collect/SetMultimap.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthListMultimapSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthListMultimapSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthListMultimapSubject__Annotations$2();
-
-@implementation ComGoogleCommonTruthListMultimapSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                     withComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)multimap {
-  ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(self, failureStrategy, multimap);
-  return self;
-}
-
-- (ComGoogleCommonTruthListMultimapSubject *)namedWithNSString:(NSString *)format
-                                             withNSObjectArray:(IOSObjectArray *)args {
-  [super namedWithNSString:format withNSObjectArray:args];
-  return self;
-}
-
-- (void)isEqualToWithComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)other {
-  [super isEqualToWithId:other];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "LComGoogleCommonTruthListMultimapSubject;", 0x81, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, 7, 8, 9 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonCollectListMultimap:);
-  methods[1].selector = @selector(namedWithNSString:withNSObjectArray:);
-  methods[2].selector = @selector(isEqualToWithComGoogleCommonCollectSetMultimap:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonCollectListMultimap;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/collect/ListMultimap<**>;)V", (void *)&ComGoogleCommonTruthListMultimapSubject__Annotations$0, "named", "LNSString;[LNSObject;", "isEqualTo", "LComGoogleCommonCollectSetMultimap;", "(Lcom/google/common/collect/SetMultimap<**>;)V", (void *)&ComGoogleCommonTruthListMultimapSubject__Annotations$1, (void *)&ComGoogleCommonTruthListMultimapSubject__Annotations$2 };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthListMultimapSubject = { "ListMultimapSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthListMultimapSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(ComGoogleCommonTruthListMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectListMultimap> multimap) {
-  ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(self, failureStrategy, multimap);
-}
-
-ComGoogleCommonTruthListMultimapSubject *new_ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectListMultimap> multimap) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthListMultimapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_, failureStrategy, multimap)
-}
-
-ComGoogleCommonTruthListMultimapSubject *create_ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectListMultimap> multimap) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthListMultimapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_, failureStrategy, multimap)
-}
-
-IOSObjectArray *ComGoogleCommonTruthListMultimapSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthListMultimapSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthListMultimapSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthListMultimapSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthLongSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthLongSubject.h
deleted file mode 100644
index 5130c9e02..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthLongSubject.h
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthLongSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthLongSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthLongSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthLongSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthLongSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthLongSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthLongSubject || defined(INCLUDE_ComGoogleCommonTruthLongSubject))
-#define ComGoogleCommonTruthLongSubject_
-
-#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
-#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
-#include "ComGoogleCommonTruthComparableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@class JavaLangLong;
-
-@interface ComGoogleCommonTruthLongSubject : ComGoogleCommonTruthComparableSubject
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                           withJavaLangLong:(JavaLangLong *)subject;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangLong *)other;
-
-- (ComGoogleCommonTruthLongSubject *)namedWithNSString:(NSString *)arg0
-                                     withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (JavaLangLong *)actual;
-
-- (JavaLangLong *)getSubject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthLongSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(ComGoogleCommonTruthLongSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangLong *subject);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthLongSubject *new_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangLong *subject) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthLongSubject *create_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangLong *subject);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthLongSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthLongSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthLongSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthLongSubject.m
deleted file mode 100644
index 6132380c8..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthLongSubject.m
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthLongSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Long.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthLongSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthLongSubject__Annotations$1();
-
-@implementation ComGoogleCommonTruthLongSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                           withJavaLangLong:(JavaLangLong *)subject {
-  ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(self, failureStrategy, subject);
-  return self;
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangLong *)other {
-  [super isEquivalentAccordingToCompareToWithJavaLangComparable:other];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, 1 },
-    { NULL, "V", 0x11, 2, 3, -1, -1, 4, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangLong:);
-  methods[1].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangLong;", (void *)&ComGoogleCommonTruthLongSubject__Annotations$0, "isEquivalentAccordingToCompareTo", "LJavaLangLong;", (void *)&ComGoogleCommonTruthLongSubject__Annotations$1, "Lcom/google/common/truth/ComparableSubject<Lcom/google/common/truth/LongSubject;Ljava/lang/Long;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthLongSubject = { "LongSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 5, -1 };
-  return &_ComGoogleCommonTruthLongSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(ComGoogleCommonTruthLongSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangLong *subject) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthLongSubject *new_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangLong *subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthLongSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthLongSubject *create_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangLong *subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthLongSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_, failureStrategy, subject)
-}
-
-IOSObjectArray *ComGoogleCommonTruthLongSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthLongSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthLongSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMapSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMapSubject.h
deleted file mode 100644
index e74509cf6..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMapSubject.h
+++ /dev/null
@@ -1,119 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMapSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthMapSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthMapSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthMapSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthMapSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthMapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthMapSubject || defined(INCLUDE_ComGoogleCommonTruthMapSubject))
-#define ComGoogleCommonTruthMapSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthCorrespondence;
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthMapSubject_UsingCorrespondence;
-@class IOSObjectArray;
-@protocol ComGoogleCommonTruthOrdered;
-@protocol JavaUtilMap;
-
-@interface ComGoogleCommonTruthMapSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthMapSubject_UsingCorrespondence *)comparingValuesUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;
-
-- (void)containsEntryWithId:(id)key
-                     withId:(id)value;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactly;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
-                                                  withId:(id)v0
-                                       withNSObjectArray:(IOSObjectArray *)rest;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithJavaUtilMap:(id<JavaUtilMap>)expectedMap;
-
-- (void)containsKeyWithId:(id)key;
-
-- (void)doesNotContainEntryWithId:(id)key
-                           withId:(id)value;
-
-- (void)doesNotContainKeyWithId:(id)key;
-
-- (void)hasSizeWithInt:(jint)expectedSize;
-
-- (void)isEmpty;
-
-- (void)isEqualToWithId:(id)other;
-
-- (void)isNotEmpty;
-
-- (ComGoogleCommonTruthMapSubject *)namedWithNSString:(NSString *)arg0
-                                    withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (id<JavaUtilMap>)actual;
-
-- (id<JavaUtilMap>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                            withJavaUtilMap:(id<JavaUtilMap>)map;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMapSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMapSubject *new_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMapSubject *create_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMapSubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthMapSubject_UsingCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthMapSubject || defined(INCLUDE_ComGoogleCommonTruthMapSubject_UsingCorrespondence))
-#define ComGoogleCommonTruthMapSubject_UsingCorrespondence_
-
-@interface ComGoogleCommonTruthMapSubject_UsingCorrespondence : NSObject
-
-#pragma mark Public
-
-- (void)containsEntryWithId:(id)expectedKey
-                     withId:(id)expectedValue;
-
-- (void)doesNotContainEntryWithId:(id)excludedKey
-                           withId:(id)excludedValue;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMapSubject_UsingCorrespondence)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMapSubject_UsingCorrespondence)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMapSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMapSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMapSubject.m
deleted file mode 100644
index 2eb4c572f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMapSubject.m
+++ /dev/null
@@ -1,417 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthCorrespondence.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthMapSubject.h"
-#include "ComGoogleCommonTruthOrdered.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/LinkedHashMultiset.h"
-#include "com/google/common/collect/MapDifference.h"
-#include "com/google/common/collect/Maps.h"
-#include "com/google/common/collect/Multiset.h"
-#include "java/lang/Integer.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/LinkedHashMap.h"
-#include "java/util/LinkedHashSet.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$6();
-
-@interface ComGoogleCommonTruthMapSubject_UsingCorrespondence () {
- @public
-  ComGoogleCommonTruthMapSubject *this$0_;
-  ComGoogleCommonTruthCorrespondence *correspondence_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthMapSubject:(ComGoogleCommonTruthMapSubject *)outer$
-                withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactly;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
-                                                  withId:(id)v0
-                                       withNSObjectArray:(IOSObjectArray *)rest;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithJavaUtilMap:(id<JavaUtilMap>)expectedMap;
-
-- (id<JavaUtilMap>)getCastSubject;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthMapSubject_UsingCorrespondence, correspondence_, ComGoogleCommonTruthCorrespondence *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMapSubject_UsingCorrespondence *self, ComGoogleCommonTruthMapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence);
-
-__attribute__((unused)) static ComGoogleCommonTruthMapSubject_UsingCorrespondence *new_ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthMapSubject_UsingCorrespondence *create_ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence);
-
-__attribute__((unused)) static id<JavaUtilMap> ComGoogleCommonTruthMapSubject_UsingCorrespondence_getCastSubject(ComGoogleCommonTruthMapSubject_UsingCorrespondence *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$2();
-
-@implementation ComGoogleCommonTruthMapSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                            withJavaUtilMap:(id<JavaUtilMap>)map {
-  ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(self, failureStrategy, map);
-  return self;
-}
-
-- (void)isEqualToWithId:(id)other {
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_([self actual], other)) {
-    if ([JavaUtilMap_class_() isInstance:other]) {
-      id<ComGoogleCommonCollectMapDifference> diff = ComGoogleCommonCollectMaps_differenceWithJavaUtilMap_withJavaUtilMap_((id<JavaUtilMap>) cast_check(other, JavaUtilMap_class_()), [self actual]);
-      NSString *errorMsg = @"The subject";
-      if (![((id<JavaUtilMap>) nil_chk([((id<ComGoogleCommonCollectMapDifference>) nil_chk(diff)) entriesOnlyOnLeft])) isEmpty]) {
-        JreStrAppend(&errorMsg, "$@", @" is missing the following entries: ", [diff entriesOnlyOnLeft]);
-        if (![((id<JavaUtilMap>) nil_chk([diff entriesOnlyOnRight])) isEmpty] || ![((id<JavaUtilMap>) nil_chk([diff entriesDiffering])) isEmpty]) {
-          JreStrAppend(&errorMsg, "$", @" and");
-        }
-      }
-      if (![((id<JavaUtilMap>) nil_chk([diff entriesOnlyOnRight])) isEmpty]) {
-        JreStrAppend(&errorMsg, "$@", @" has the following extra entries: ", [diff entriesOnlyOnRight]);
-        if (![((id<JavaUtilMap>) nil_chk([diff entriesDiffering])) isEmpty]) {
-          JreStrAppend(&errorMsg, "$", @" and");
-        }
-      }
-      if (![((id<JavaUtilMap>) nil_chk([diff entriesDiffering])) isEmpty]) {
-        JreStrAppend(&errorMsg, "$@", @" has the following different entries: ", [diff entriesDiffering]);
-      }
-      [self failWithRawMessageWithNSString:JreStrcat("$$", @"Not true that %s is equal to <%s>. ", errorMsg) withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], other } count:2 type:NSObject_class_()]];
-    }
-    else {
-      [self failWithNSString:@"is equal to" withId:other];
-    }
-  }
-}
-
-- (void)isEmpty {
-  if (![((id<JavaUtilMap>) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if ([((id<JavaUtilMap>) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)hasSizeWithInt:(jint)expectedSize {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedSize >= 0, @"expectedSize (%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedSize) } count:1 type:NSObject_class_()]);
-  jint actualSize = [((id<JavaUtilMap>) nil_chk([self actual])) size];
-  if (actualSize != expectedSize) {
-    [self failWithBadResultsWithNSString:@"has a size of" withId:JavaLangInteger_valueOfWithInt_(expectedSize) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualSize)];
-  }
-}
-
-- (void)containsKeyWithId:(id)key {
-  if (![((id<JavaUtilMap>) nil_chk([self actual])) containsKeyWithId:key]) {
-    [self failWithNSString:@"contains key" withId:key];
-  }
-}
-
-- (void)doesNotContainKeyWithId:(id)key {
-  if ([((id<JavaUtilMap>) nil_chk([self actual])) containsKeyWithId:key]) {
-    [self failWithNSString:@"does not contain key" withId:key];
-  }
-}
-
-- (void)containsEntryWithId:(id)key
-                     withId:(id)value {
-  id<JavaUtilMap_Entry> entry_ = ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value);
-  if (![((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk([self actual])) entrySet])) containsWithId:entry_]) {
-    if ([((id<JavaUtilMap>) nil_chk([self actual])) containsKeyWithId:key]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s contains entry <%s>. However, it has a mapping from <%s> to <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], entry_, key, [((id<JavaUtilMap>) nil_chk([self actual])) getWithId:key] } count:4 type:NSObject_class_()]];
-    }
-    if ([((id<JavaUtilMap>) nil_chk([self actual])) containsValueWithId:value]) {
-      id<JavaUtilSet> keys = create_JavaUtilLinkedHashSet_init();
-      for (id<JavaUtilMap_Entry> __strong actualEntry in nil_chk([((id<JavaUtilMap>) nil_chk([self actual])) entrySet])) {
-        if (ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilMap_Entry>) nil_chk(actualEntry)) getValue], value)) {
-          [keys addWithId:[actualEntry getKey]];
-        }
-      }
-      [self failWithRawMessageWithNSString:@"Not true that %s contains entry <%s>. However, the following keys are mapped to <%s>: %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], entry_, value, keys } count:4 type:NSObject_class_()]];
-    }
-    [self failWithNSString:@"contains entry" withId:entry_];
-  }
-}
-
-- (void)doesNotContainEntryWithId:(id)key
-                           withId:(id)value {
-  id<JavaUtilMap_Entry> entry_ = ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value);
-  if ([((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk([self actual])) entrySet])) containsWithId:entry_]) {
-    [self failWithNSString:@"does not contain entry" withId:entry_];
-  }
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactly {
-  return [((ComGoogleCommonTruthIterableSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk([self check])) thatWithJavaLangIterable:[((id<JavaUtilMap>) nil_chk([self actual])) entrySet]])) containsExactlyWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
-                                                  withId:(id)v0
-                                       withNSObjectArray:(IOSObjectArray *)rest {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(((IOSObjectArray *) nil_chk(rest))->size_ % 2 == 0, @"There must be an equal number of key/value pairs (i.e., the number of key/value parameters (%s) must be even).", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(rest->size_ + 2) } count:1 type:NSObject_class_()]);
-  id<JavaUtilMap> expectedMap = ComGoogleCommonCollectMaps_newLinkedHashMap();
-  [((id<JavaUtilMap>) nil_chk(expectedMap)) putWithId:k0 withId:v0];
-  id<ComGoogleCommonCollectMultiset> keys = ComGoogleCommonCollectLinkedHashMultiset_create();
-  [((id<ComGoogleCommonCollectMultiset>) nil_chk(keys)) addWithId:k0];
-  for (jint i = 0; i < rest->size_; i += 2) {
-    id key = IOSObjectArray_Get(rest, i);
-    [expectedMap putWithId:key withId:IOSObjectArray_Get(rest, i + 1)];
-    [keys addWithId:key];
-  }
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_([keys size] == [expectedMap size], @"Duplicate keys (%s) cannot be passed to containsExactly().", [IOSObjectArray arrayWithObjects:(id[]){ keys } count:1 type:NSObject_class_()]);
-  return [self containsExactlyEntriesInWithJavaUtilMap:expectedMap];
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithJavaUtilMap:(id<JavaUtilMap>)expectedMap {
-  return [((ComGoogleCommonTruthIterableSubject *) nil_chk([((ComGoogleCommonTruthTestVerb *) nil_chk([self check])) thatWithJavaLangIterable:[((id<JavaUtilMap>) nil_chk([self actual])) entrySet]])) containsExactlyElementsInWithJavaLangIterable:[((id<JavaUtilMap>) nil_chk(expectedMap)) entrySet]];
-}
-
-- (ComGoogleCommonTruthMapSubject_UsingCorrespondence *)comparingValuesUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence {
-  return create_ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(self, correspondence);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, 5 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 4, -1, -1, -1, 9 },
-    { NULL, "V", 0x1, 10, 4, -1, -1, -1, 11 },
-    { NULL, "V", 0x1, 12, 13, -1, -1, -1, 14 },
-    { NULL, "V", 0x1, 15, 13, -1, -1, -1, 16 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x81, 17, 18, -1, -1, -1, 19 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x1, 20, 21, -1, 22, -1, -1 },
-    { NULL, "LComGoogleCommonTruthMapSubject_UsingCorrespondence;", 0x1, 23, 24, -1, 25, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaUtilMap:);
-  methods[1].selector = @selector(isEqualToWithId:);
-  methods[2].selector = @selector(isEmpty);
-  methods[3].selector = @selector(isNotEmpty);
-  methods[4].selector = @selector(hasSizeWithInt:);
-  methods[5].selector = @selector(containsKeyWithId:);
-  methods[6].selector = @selector(doesNotContainKeyWithId:);
-  methods[7].selector = @selector(containsEntryWithId:withId:);
-  methods[8].selector = @selector(doesNotContainEntryWithId:withId:);
-  methods[9].selector = @selector(containsExactly);
-  methods[10].selector = @selector(containsExactlyWithId:withId:withNSObjectArray:);
-  methods[11].selector = @selector(containsExactlyEntriesInWithJavaUtilMap:);
-  methods[12].selector = @selector(comparingValuesUsingWithComGoogleCommonTruthCorrespondence:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaUtilMap;", "(Lcom/google/common/truth/FailureStrategy;Ljava/util/Map<**>;)V", (void *)&ComGoogleCommonTruthMapSubject__Annotations$0, "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthMapSubject__Annotations$1, "hasSize", "I", "containsKey", (void *)&ComGoogleCommonTruthMapSubject__Annotations$2, "doesNotContainKey", (void *)&ComGoogleCommonTruthMapSubject__Annotations$3, "containsEntry", "LNSObject;LNSObject;", (void *)&ComGoogleCommonTruthMapSubject__Annotations$4, "doesNotContainEntry", (void *)&ComGoogleCommonTruthMapSubject__Annotations$5, "containsExactly", "LNSObject;LNSObject;[LNSObject;", (void *)&ComGoogleCommonTruthMapSubject__Annotations$6, "containsExactlyEntriesIn", "LJavaUtilMap;", "(Ljava/util/Map<**>;)Lcom/google/common/truth/Ordered;", "comparingValuesUsing", "LComGoogleCommonTruthCorrespondence;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>(Lcom/google/common/truth/Correspondence<TA;TE;>;)Lcom/google/common/truth/MapSubject$UsingCorrespondence<TA;TE;>;", "LComGoogleCommonTruthMapSubject_UsingCorrespondence;", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/MapSubject;Ljava/util/Map<**>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMapSubject = { "MapSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 13, 0, -1, 26, -1, 27, -1 };
-  return &_ComGoogleCommonTruthMapSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, map);
-}
-
-ComGoogleCommonTruthMapSubject *new_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMapSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_, failureStrategy, map)
-}
-
-ComGoogleCommonTruthMapSubject *create_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMapSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_, failureStrategy, map)
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMapSubject)
-
-@implementation ComGoogleCommonTruthMapSubject_UsingCorrespondence
-
-- (instancetype)initWithComGoogleCommonTruthMapSubject:(ComGoogleCommonTruthMapSubject *)outer$
-                withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence {
-  ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(self, outer$, correspondence);
-  return self;
-}
-
-- (void)containsEntryWithId:(id)expectedKey
-                     withId:(id)expectedValue {
-  if ([((id<JavaUtilMap>) nil_chk([this$0_ actual])) containsKeyWithId:expectedKey]) {
-    id actualValue = [((id<JavaUtilMap>) nil_chk(ComGoogleCommonTruthMapSubject_UsingCorrespondence_getCastSubject(self))) getWithId:expectedKey];
-    if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:actualValue withId:expectedValue]) {
-      return;
-    }
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains an entry with key <%s> and a value that %s <%s>. However, it has a mapping from that key to <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedKey, correspondence_, expectedValue, actualValue } count:5 type:NSObject_class_()]];
-  }
-  else {
-    id<JavaUtilSet> keys = create_JavaUtilLinkedHashSet_init();
-    for (id<JavaUtilMap_Entry> __strong actualEntry in nil_chk([((id<JavaUtilMap>) nil_chk(ComGoogleCommonTruthMapSubject_UsingCorrespondence_getCastSubject(self))) entrySet])) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:[((id<JavaUtilMap_Entry>) nil_chk(actualEntry)) getValue] withId:expectedValue]) {
-        [keys addWithId:[actualEntry getKey]];
-      }
-    }
-    if (![keys isEmpty]) {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains an entry with key <%s> and a value that %s <%s>. However, the following keys are mapped to such values: <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedKey, correspondence_, expectedValue, keys } count:5 type:NSObject_class_()]];
-    }
-    else {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains an entry with key <%s> and a value that %s <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedKey, correspondence_, expectedValue } count:4 type:NSObject_class_()]];
-    }
-  }
-}
-
-- (void)doesNotContainEntryWithId:(id)excludedKey
-                           withId:(id)excludedValue {
-  if ([((id<JavaUtilMap>) nil_chk([this$0_ actual])) containsKeyWithId:excludedKey]) {
-    id actualValue = [((id<JavaUtilMap>) nil_chk(ComGoogleCommonTruthMapSubject_UsingCorrespondence_getCastSubject(self))) getWithId:excludedKey];
-    if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:actualValue withId:excludedValue]) {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s does not contain an entry with key <%s> and a value that %s <%s>. It maps that key to <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], excludedKey, correspondence_, excludedValue, actualValue } count:5 type:NSObject_class_()]];
-    }
-  }
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactly {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
-                                                  withId:(id)v0
-                                       withNSObjectArray:(IOSObjectArray *)rest {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithJavaUtilMap:(id<JavaUtilMap>)expectedMap {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilMap>)getCastSubject {
-  return ComGoogleCommonTruthMapSubject_UsingCorrespondence_getCastSubject(self);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(correspondence_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, 4, -1, 5 },
-    { NULL, "V", 0x1, 6, 3, -1, 4, -1, 7 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x82, 8, 9, -1, 10, -1, 11 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x2, 12, 13, -1, 14, -1, -1 },
-    { NULL, "LJavaUtilMap;", 0x2, -1, -1, -1, 15, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthMapSubject:withComGoogleCommonTruthCorrespondence:);
-  methods[1].selector = @selector(containsEntryWithId:withId:);
-  methods[2].selector = @selector(doesNotContainEntryWithId:withId:);
-  methods[3].selector = @selector(containsExactly);
-  methods[4].selector = @selector(containsExactlyWithId:withId:withNSObjectArray:);
-  methods[5].selector = @selector(containsExactlyEntriesInWithJavaUtilMap:);
-  methods[6].selector = @selector(getCastSubject);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthMapSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "correspondence_", "LComGoogleCommonTruthCorrespondence;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthCorrespondence;", "(Lcom/google/common/truth/Correspondence<TA;TE;>;)V", "containsEntry", "LNSObject;LNSObject;", "(Ljava/lang/Object;TE;)V", (void *)&ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$0, "doesNotContainEntry", (void *)&ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$1, "containsExactly", "LNSObject;LNSObject;[LNSObject;", "(Ljava/lang/Object;TE;[Ljava/lang/Object;)Lcom/google/common/truth/Ordered;", (void *)&ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$2, "containsExactlyEntriesIn", "LJavaUtilMap;", "(Ljava/util/Map<*+TE;>;)Lcom/google/common/truth/Ordered;", "()Ljava/util/Map<*TA;>;", "Lcom/google/common/truth/Correspondence<TA;TE;>;", "LComGoogleCommonTruthMapSubject;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMapSubject_UsingCorrespondence = { "UsingCorrespondence", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 7, 2, 17, -1, -1, 18, -1 };
-  return &_ComGoogleCommonTruthMapSubject_UsingCorrespondence;
-}
-
-@end
-
-void ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMapSubject_UsingCorrespondence *self, ComGoogleCommonTruthMapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  JreStrongAssign(&self->correspondence_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(correspondence));
-}
-
-ComGoogleCommonTruthMapSubject_UsingCorrespondence *new_ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMapSubject_UsingCorrespondence, initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_, outer$, correspondence)
-}
-
-ComGoogleCommonTruthMapSubject_UsingCorrespondence *create_ComGoogleCommonTruthMapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMapSubject_UsingCorrespondence, initWithComGoogleCommonTruthMapSubject_withComGoogleCommonTruthCorrespondence_, outer$, correspondence)
-}
-
-id<JavaUtilMap> ComGoogleCommonTruthMapSubject_UsingCorrespondence_getCastSubject(ComGoogleCommonTruthMapSubject_UsingCorrespondence *self) {
-  return [self->this$0_ actual];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMapSubject_UsingCorrespondence__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMapSubject_UsingCorrespondence)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMathUtil.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMathUtil.h
deleted file mode 100644
index cb2f598f5..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMathUtil.h
+++ /dev/null
@@ -1,63 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMathUtil")
-#ifdef RESTRICT_ComGoogleCommonTruthMathUtil
-#define INCLUDE_ALL_ComGoogleCommonTruthMathUtil 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthMathUtil 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthMathUtil
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthMathUtil_) && (INCLUDE_ALL_ComGoogleCommonTruthMathUtil || defined(INCLUDE_ComGoogleCommonTruthMathUtil))
-#define ComGoogleCommonTruthMathUtil_
-
-@interface ComGoogleCommonTruthMathUtil : NSObject
-
-#pragma mark Public
-
-+ (jboolean)equalWithinToleranceWithDouble:(jdouble)left
-                                withDouble:(jdouble)right
-                                withDouble:(jdouble)tolerance;
-
-+ (jboolean)equalWithinToleranceWithFloat:(jfloat)left
-                                withFloat:(jfloat)right
-                                withFloat:(jfloat)tolerance;
-
-+ (jboolean)notEqualWithinToleranceWithDouble:(jdouble)left
-                                   withDouble:(jdouble)right
-                                   withDouble:(jdouble)tolerance;
-
-+ (jboolean)notEqualWithinToleranceWithFloat:(jfloat)left
-                                   withFloat:(jfloat)right
-                                   withFloat:(jfloat)tolerance;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMathUtil)
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(jdouble left, jdouble right, jdouble tolerance);
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_(jfloat left, jfloat right, jfloat tolerance);
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithDouble_withDouble_withDouble_(jdouble left, jdouble right, jdouble tolerance);
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithFloat_withFloat_withFloat_(jfloat left, jfloat right, jfloat tolerance);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMathUtil)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMathUtil")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMathUtil.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMathUtil.m
deleted file mode 100644
index e00310648..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMathUtil.m
+++ /dev/null
@@ -1,115 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthMathUtil.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Doubles.h"
-#include "java/lang/Math.h"
-
-@interface ComGoogleCommonTruthMathUtil ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthMathUtil_init(ComGoogleCommonTruthMathUtil *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthMathUtil *new_ComGoogleCommonTruthMathUtil_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthMathUtil *create_ComGoogleCommonTruthMathUtil_init();
-
-@implementation ComGoogleCommonTruthMathUtil
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthMathUtil_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jboolean)equalWithinToleranceWithDouble:(jdouble)left
-                                withDouble:(jdouble)right
-                                withDouble:(jdouble)tolerance {
-  return ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(left, right, tolerance);
-}
-
-+ (jboolean)equalWithinToleranceWithFloat:(jfloat)left
-                                withFloat:(jfloat)right
-                                withFloat:(jfloat)tolerance {
-  return ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_(left, right, tolerance);
-}
-
-+ (jboolean)notEqualWithinToleranceWithDouble:(jdouble)left
-                                   withDouble:(jdouble)right
-                                   withDouble:(jdouble)tolerance {
-  return ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithDouble_withDouble_withDouble_(left, right, tolerance);
-}
-
-+ (jboolean)notEqualWithinToleranceWithFloat:(jfloat)left
-                                   withFloat:(jfloat)right
-                                   withFloat:(jfloat)tolerance {
-  return ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithFloat_withFloat_withFloat_(left, right, tolerance);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 0, 2, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 3, 1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 3, 2, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(equalWithinToleranceWithDouble:withDouble:withDouble:);
-  methods[2].selector = @selector(equalWithinToleranceWithFloat:withFloat:withFloat:);
-  methods[3].selector = @selector(notEqualWithinToleranceWithDouble:withDouble:withDouble:);
-  methods[4].selector = @selector(notEqualWithinToleranceWithFloat:withFloat:withFloat:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "equalWithinTolerance", "DDD", "FFF", "notEqualWithinTolerance" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMathUtil = { "MathUtil", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthMathUtil;
-}
-
-@end
-
-void ComGoogleCommonTruthMathUtil_init(ComGoogleCommonTruthMathUtil *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthMathUtil *new_ComGoogleCommonTruthMathUtil_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMathUtil, init)
-}
-
-ComGoogleCommonTruthMathUtil *create_ComGoogleCommonTruthMathUtil_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMathUtil, init)
-}
-
-jboolean ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(jdouble left, jdouble right, jdouble tolerance) {
-  ComGoogleCommonTruthMathUtil_initialize();
-  return JavaLangMath_absWithDouble_(left - right) <= JavaLangMath_absWithDouble_(tolerance);
-}
-
-jboolean ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_(jfloat left, jfloat right, jfloat tolerance) {
-  ComGoogleCommonTruthMathUtil_initialize();
-  return ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_((jdouble) left, (jdouble) right, (jdouble) tolerance);
-}
-
-jboolean ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithDouble_withDouble_withDouble_(jdouble left, jdouble right, jdouble tolerance) {
-  ComGoogleCommonTruthMathUtil_initialize();
-  if (ComGoogleCommonPrimitivesDoubles_isFiniteWithDouble_(left) && ComGoogleCommonPrimitivesDoubles_isFiniteWithDouble_(right)) {
-    return JavaLangMath_absWithDouble_(left - right) > JavaLangMath_absWithDouble_(tolerance);
-  }
-  else {
-    return false;
-  }
-}
-
-jboolean ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithFloat_withFloat_withFloat_(jfloat left, jfloat right, jfloat tolerance) {
-  ComGoogleCommonTruthMathUtil_initialize();
-  return ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithDouble_withDouble_withDouble_((jdouble) left, (jdouble) right, (jdouble) tolerance);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMathUtil)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultimapSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultimapSubject.h
deleted file mode 100644
index 1831aa452..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultimapSubject.h
+++ /dev/null
@@ -1,118 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthMultimapSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthMultimapSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthMultimapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthMultimapSubject))
-#define ComGoogleCommonTruthMultimapSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthCorrespondence;
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class ComGoogleCommonTruthMultimapSubject_UsingCorrespondence;
-@class IOSObjectArray;
-@protocol ComGoogleCommonCollectMultimap;
-@protocol ComGoogleCommonTruthOrdered;
-
-@interface ComGoogleCommonTruthMultimapSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *)comparingValuesUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;
-
-- (void)containsEntryWithId:(id)key
-                     withId:(id)value;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;
-
-- (void)containsKeyWithId:(id)key;
-
-- (void)doesNotContainEntryWithId:(id)key
-                           withId:(id)value;
-
-- (void)doesNotContainKeyWithId:(id)key;
-
-- (void)hasSizeWithInt:(jint)expectedSize;
-
-- (void)isEmpty;
-
-- (void)isEqualToWithId:(id)other;
-
-- (void)isNotEmpty;
-
-- (ComGoogleCommonTruthMultimapSubject *)namedWithNSString:(NSString *)arg0
-                                         withNSObjectArray:(IOSObjectArray *)arg1;
-
-- (ComGoogleCommonTruthIterableSubject *)valuesForKeyWithId:(id)key;
-
-#pragma mark Protected
-
-- (id<ComGoogleCommonCollectMultimap>)actual;
-
-- (id<ComGoogleCommonCollectMultimap>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                         withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultimapSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultimap> multimap);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *new_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultimap> multimap) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *create_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultimap> multimap);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultimapSubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence))
-#define ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_
-
-@interface ComGoogleCommonTruthMultimapSubject_UsingCorrespondence : NSObject
-
-#pragma mark Public
-
-- (void)containsEntryWithId:(id)expectedKey
-                     withId:(id)expectedValue;
-
-- (void)doesNotContainEntryWithId:(id)excludedKey
-                           withId:(id)excludedValue;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultimapSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultimapSubject.m
deleted file mode 100644
index 36232c791..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultimapSubject.m
+++ /dev/null
@@ -1,750 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthCorrespondence.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthMultimapSubject.h"
-#include "ComGoogleCommonTruthOrdered.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthSubjectUtils.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Joiner.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/LinkedHashMultiset.h"
-#include "com/google/common/collect/LinkedListMultimap.h"
-#include "com/google/common/collect/ListMultimap.h"
-#include "com/google/common/collect/Lists.h"
-#include "com/google/common/collect/Maps.h"
-#include "com/google/common/collect/Multimap.h"
-#include "com/google/common/collect/SetMultimap.h"
-#include "com/google/common/collect/Sets.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Collection.h"
-#include "java/util/Collections.h"
-#include "java/util/LinkedHashSet.h"
-#include "java/util/List.h"
-#include "java/util/Map.h"
-#include "java/util/Set.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthMultimapSubject ()
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSString:(NSString *)failVerb
-                            withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;
-
-+ (id<JavaUtilCollection>)getWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap
-                                                         withId:(id)key;
-
-+ (id<ComGoogleCommonCollectMultimap>)differenceWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)minuend
-                                                withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)subtrahend;
-
-+ (id<JavaUtilList>)differenceWithJavaUtilList:(id<JavaUtilList>)minuend
-                              withJavaUtilList:(id<JavaUtilList>)subtrahend;
-
-+ (NSString *)countDuplicatesMultimapWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap;
-
-@end
-
-__attribute__((unused)) static id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthMultimapSubject_containsExactlyWithNSString_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *self, NSString *failVerb, id<ComGoogleCommonCollectMultimap> expectedMultimap);
-
-__attribute__((unused)) static id<JavaUtilCollection> ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_(id<ComGoogleCommonCollectMultimap> multimap, id key);
-
-__attribute__((unused)) static id<ComGoogleCommonCollectMultimap> ComGoogleCommonTruthMultimapSubject_differenceWithComGoogleCommonCollectMultimap_withComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> minuend, id<ComGoogleCommonCollectMultimap> subtrahend);
-
-__attribute__((unused)) static id<JavaUtilList> ComGoogleCommonTruthMultimapSubject_differenceWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> minuend, id<JavaUtilList> subtrahend);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> multimap);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$8();
-
-@interface ComGoogleCommonTruthMultimapSubject_IterableValuesForKey : ComGoogleCommonTruthIterableSubject {
- @public
-  id key_;
-  NSString *stringRepresentation_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)outer$
-                    withComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                    withComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)multimapSubject
-                                                     withId:(id)key;
-
-- (NSString *)actualCustomStringRepresentation;
-
-- (id<JavaLangIterable>)getSubject;
-
-- (id<JavaLangIterable>)actual;
-
-- (ComGoogleCommonTruthIterableSubject *)namedWithNSString:(NSString *)arg0
-                                         withNSObjectArray:(IOSObjectArray *)arg1;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey, key_, id)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey, stringRepresentation_, NSString *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey *self, ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthMultimapSubject *multimapSubject, id key);
-
-__attribute__((unused)) static ComGoogleCommonTruthMultimapSubject_IterableValuesForKey *new_ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthMultimapSubject *multimapSubject, id key) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthMultimapSubject_IterableValuesForKey *create_ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthMultimapSubject *multimapSubject, id key);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$2();
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey)
-
-@interface ComGoogleCommonTruthMultimapSubject_MultimapInOrder : NSObject < ComGoogleCommonTruthOrdered > {
- @public
-  ComGoogleCommonTruthMultimapSubject *this$0_;
-  id<ComGoogleCommonCollectMultimap> expectedMultimap_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)outer$
-                         withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;
-
-- (void)inOrder;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultimapSubject_MultimapInOrder)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthMultimapSubject_MultimapInOrder, expectedMultimap_, id<ComGoogleCommonCollectMultimap>)
-
-__attribute__((unused)) static void ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject_MultimapInOrder *self, ComGoogleCommonTruthMultimapSubject *outer$, id<ComGoogleCommonCollectMultimap> expectedMultimap);
-
-__attribute__((unused)) static ComGoogleCommonTruthMultimapSubject_MultimapInOrder *new_ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *outer$, id<ComGoogleCommonCollectMultimap> expectedMultimap) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthMultimapSubject_MultimapInOrder *create_ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *outer$, id<ComGoogleCommonCollectMultimap> expectedMultimap);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultimapSubject_MultimapInOrder)
-
-@interface ComGoogleCommonTruthMultimapSubject_UsingCorrespondence () {
- @public
-  ComGoogleCommonTruthMultimapSubject *this$0_;
-  ComGoogleCommonTruthCorrespondence *correspondence_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)outer$
-                     withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)valuesForKeyWithId:(id)key;
-
-- (id<ComGoogleCommonCollectMultimap>)getCastSubject;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence, correspondence_, ComGoogleCommonTruthCorrespondence *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *self, ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence);
-
-__attribute__((unused)) static ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *new_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *create_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence);
-
-__attribute__((unused)) static id<ComGoogleCommonCollectMultimap> ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_getCastSubject(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$2();
-
-@implementation ComGoogleCommonTruthMultimapSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                         withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap {
-  ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(self, failureStrategy, multimap);
-  return self;
-}
-
-- (void)isEmpty {
-  if (![((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)hasSizeWithInt:(jint)expectedSize {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedSize >= 0, @"expectedSize(%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedSize) } count:1 type:NSObject_class_()]);
-  jint actualSize = [((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) size];
-  if (actualSize != expectedSize) {
-    [self failWithBadResultsWithNSString:@"has a size of" withId:JavaLangInteger_valueOfWithInt_(expectedSize) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualSize)];
-  }
-}
-
-- (void)containsKeyWithId:(id)key {
-  if (![((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) containsKeyWithId:key]) {
-    [self failWithNSString:@"contains key" withId:key];
-  }
-}
-
-- (void)doesNotContainKeyWithId:(id)key {
-  if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) containsKeyWithId:key]) {
-    [self failWithNSString:@"does not contain key" withId:key];
-  }
-}
-
-- (void)containsEntryWithId:(id)key
-                     withId:(id)value {
-  if (![((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) containsEntryWithId:key withId:value]) {
-    id<JavaUtilMap_Entry> entry_ = ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value);
-    if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) containsKeyWithId:key]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s contains entry <%s>. However, it has a mapping from <%s> to <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], entry_, key, [((id<JavaUtilMap>) nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) asMap])) getWithId:key] } count:4 type:NSObject_class_()]];
-    }
-    if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) containsValueWithId:value]) {
-      id<JavaUtilSet> keys = create_JavaUtilLinkedHashSet_init();
-      for (id<JavaUtilMap_Entry> __strong actualEntry in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) entries])) {
-        if (ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilMap_Entry>) nil_chk(actualEntry)) getValue], value)) {
-          [keys addWithId:[actualEntry getKey]];
-        }
-      }
-      [self failWithRawMessageWithNSString:@"Not true that %s contains entry <%s>. However, the following keys are mapped to <%s>: %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], entry_, value, keys } count:4 type:NSObject_class_()]];
-    }
-    [self failWithNSString:@"contains entry" withId:ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value)];
-  }
-}
-
-- (void)doesNotContainEntryWithId:(id)key
-                           withId:(id)value {
-  if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([self actual])) containsEntryWithId:key withId:value]) {
-    [self failWithNSString:@"does not contain entry" withId:ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value)];
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)valuesForKeyWithId:(id)key {
-  return create_ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(self, failureStrategy_, self, key);
-}
-
-- (void)isEqualToWithId:(id)other {
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_([self actual], other)) {
-    if (([ComGoogleCommonCollectListMultimap_class_() isInstance:[self actual]] && [ComGoogleCommonCollectSetMultimap_class_() isInstance:other]) || ([ComGoogleCommonCollectSetMultimap_class_() isInstance:[self actual]] && [ComGoogleCommonCollectListMultimap_class_() isInstance:other])) {
-      NSString *mapType1 = ([ComGoogleCommonCollectListMultimap_class_() isInstance:[self actual]]) ? @"ListMultimap" : @"SetMultimap";
-      NSString *mapType2 = ([ComGoogleCommonCollectListMultimap_class_() isInstance:other]) ? @"ListMultimap" : @"SetMultimap";
-      [self failWithRawMessageWithNSString:@"Not true that %s %s is equal to %s <%s>. A %s cannot equal a %s if either is non-empty." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ mapType1, [self actualAsString], mapType2, other, mapType1, mapType2 } count:6 type:NSObject_class_()]];
-    }
-    else {
-      if ([ComGoogleCommonCollectListMultimap_class_() isInstance:[self actual]]) {
-        [((id<ComGoogleCommonTruthOrdered>) nil_chk([self containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>) cast_check(other, ComGoogleCommonCollectMultimap_class_())])) inOrder];
-      }
-      else if ([ComGoogleCommonCollectSetMultimap_class_() isInstance:[self actual]]) {
-        [self containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>) cast_check(other, ComGoogleCommonCollectMultimap_class_())];
-      }
-      [self failWithNSString:@"is equal to" withId:other];
-    }
-  }
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(expectedMultimap, @"expectedMultimap");
-  return ComGoogleCommonTruthMultimapSubject_containsExactlyWithNSString_withComGoogleCommonCollectMultimap_(self, @"contains exactly", expectedMultimap);
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap {
-  return [self containsExactlyEntriesInWithComGoogleCommonCollectMultimap:expectedMultimap];
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSString:(NSString *)failVerb
-                            withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap {
-  return ComGoogleCommonTruthMultimapSubject_containsExactlyWithNSString_withComGoogleCommonCollectMultimap_(self, failVerb, expectedMultimap);
-}
-
-+ (id<JavaUtilCollection>)getWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap
-                                                         withId:(id)key {
-  return ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_(multimap, key);
-}
-
-+ (id<ComGoogleCommonCollectMultimap>)differenceWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)minuend
-                                                withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)subtrahend {
-  return ComGoogleCommonTruthMultimapSubject_differenceWithComGoogleCommonCollectMultimap_withComGoogleCommonCollectMultimap_(minuend, subtrahend);
-}
-
-+ (id<JavaUtilList>)differenceWithJavaUtilList:(id<JavaUtilList>)minuend
-                              withJavaUtilList:(id<JavaUtilList>)subtrahend {
-  return ComGoogleCommonTruthMultimapSubject_differenceWithJavaUtilList_withJavaUtilList_(minuend, subtrahend);
-}
-
-+ (NSString *)countDuplicatesMultimapWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap {
-  return ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(multimap);
-}
-
-- (ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *)comparingValuesUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence {
-  return create_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(self, correspondence);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, -1, -1, 7 },
-    { NULL, "V", 0x1, 8, 6, -1, -1, -1, 9 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, 12 },
-    { NULL, "V", 0x1, 13, 11, -1, -1, -1, 14 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, 15, 6, -1, -1, -1, 16 },
-    { NULL, "V", 0x1, 17, 6, -1, -1, -1, 18 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x1, 19, 20, -1, 21, -1, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x1, 22, 20, -1, 21, 23, -1 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x2, 22, 24, -1, 25, -1, -1 },
-    { NULL, "LJavaUtilCollection;", 0xa, 26, 27, -1, 28, -1, 29 },
-    { NULL, "LComGoogleCommonCollectMultimap;", 0xa, 30, 31, -1, 32, -1, -1 },
-    { NULL, "LJavaUtilList;", 0xa, 30, 33, -1, 34, -1, -1 },
-    { NULL, "LNSString;", 0xa, 35, 20, -1, 36, -1, -1 },
-    { NULL, "LComGoogleCommonTruthMultimapSubject_UsingCorrespondence;", 0x1, 37, 38, -1, 39, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonCollectMultimap:);
-  methods[1].selector = @selector(isEmpty);
-  methods[2].selector = @selector(isNotEmpty);
-  methods[3].selector = @selector(hasSizeWithInt:);
-  methods[4].selector = @selector(containsKeyWithId:);
-  methods[5].selector = @selector(doesNotContainKeyWithId:);
-  methods[6].selector = @selector(containsEntryWithId:withId:);
-  methods[7].selector = @selector(doesNotContainEntryWithId:withId:);
-  methods[8].selector = @selector(valuesForKeyWithId:);
-  methods[9].selector = @selector(isEqualToWithId:);
-  methods[10].selector = @selector(containsExactlyEntriesInWithComGoogleCommonCollectMultimap:);
-  methods[11].selector = @selector(containsExactlyWithComGoogleCommonCollectMultimap:);
-  methods[12].selector = @selector(containsExactlyWithNSString:withComGoogleCommonCollectMultimap:);
-  methods[13].selector = @selector(getWithComGoogleCommonCollectMultimap:withId:);
-  methods[14].selector = @selector(differenceWithComGoogleCommonCollectMultimap:withComGoogleCommonCollectMultimap:);
-  methods[15].selector = @selector(differenceWithJavaUtilList:withJavaUtilList:);
-  methods[16].selector = @selector(countDuplicatesMultimapWithComGoogleCommonCollectMultimap:);
-  methods[17].selector = @selector(comparingValuesUsingWithComGoogleCommonTruthCorrespondence:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonCollectMultimap;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/collect/Multimap<**>;)V", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$0, "hasSize", "I", "containsKey", "LNSObject;", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$1, "doesNotContainKey", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$2, "containsEntry", "LNSObject;LNSObject;", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$3, "doesNotContainEntry", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$4, "valuesForKey", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$5, "isEqualTo", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$6, "containsExactlyEntriesIn", "LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<**>;)Lcom/google/common/truth/Ordered;", "containsExactly", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$7, "LNSString;LComGoogleCommonCollectMultimap;", "(Ljava/lang/String;Lcom/google/common/collect/Multimap<**>;)Lcom/google/common/truth/Ordered;", "get", "LComGoogleCommonCollectMultimap;LNSObject;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lcom/google/common/collect/Multimap<TK;TV;>;Ljava/lang/Object;)Ljava/util/Collection<TV;>;", (void *)&ComGoogleCommonTruthMultimapSubject__Annotations$8, "difference", "LComGoogleCommonCollectMultimap;LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<**>;Lcom/google/common/collect/Multimap<**>;)Lcom/google/common/collect/Multimap<**>;", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<*>;Ljava/util/List<*>;)Ljava/util/List<*>;", "countDuplicatesMultimap", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lcom/google/common/collect/Multimap<TK;TV;>;)Ljava/lang/String;", "comparingValuesUsing", "LComGoogleCommonTruthCorrespondence;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>(Lcom/google/common/truth/Correspondence<TA;TE;>;)Lcom/google/common/truth/MultimapSubject$UsingCorrespondence<TA;TE;>;", "LComGoogleCommonTruthMultimapSubject_IterableValuesForKey;LComGoogleCommonTruthMultimapSubject_MultimapInOrder;LComGoogleCommonTruthMultimapSubject_UsingCorrespondence;", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/MultimapSubject;Lcom/google/common/collect/Multimap<**>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMultimapSubject = { "MultimapSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 18, 0, -1, 40, -1, 41, -1 };
-  return &_ComGoogleCommonTruthMultimapSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultimap> multimap) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, multimap);
-}
-
-ComGoogleCommonTruthMultimapSubject *new_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultimap> multimap) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMultimapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_, failureStrategy, multimap)
-}
-
-ComGoogleCommonTruthMultimapSubject *create_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultimap> multimap) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMultimapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_, failureStrategy, multimap)
-}
-
-id<ComGoogleCommonTruthOrdered> ComGoogleCommonTruthMultimapSubject_containsExactlyWithNSString_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *self, NSString *failVerb, id<ComGoogleCommonCollectMultimap> expectedMultimap) {
-  id<ComGoogleCommonCollectMultimap> missing = ComGoogleCommonTruthMultimapSubject_differenceWithComGoogleCommonCollectMultimap_withComGoogleCommonCollectMultimap_(expectedMultimap, [self actual]);
-  id<ComGoogleCommonCollectMultimap> extra = ComGoogleCommonTruthMultimapSubject_differenceWithComGoogleCommonCollectMultimap_withComGoogleCommonCollectMultimap_([self actual], expectedMultimap);
-  if (![((id<ComGoogleCommonCollectMultimap>) nil_chk(missing)) isEmpty]) {
-    if (![((id<ComGoogleCommonCollectMultimap>) nil_chk(extra)) isEmpty]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s %s <%s>. It is missing <%s> and has unexpected items <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], failVerb, expectedMultimap, ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(missing), ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(extra) } count:5 type:NSObject_class_()]];
-    }
-    else {
-      [self failWithBadResultsWithNSString:failVerb withId:expectedMultimap withNSString:@"is missing" withId:ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(missing)];
-    }
-  }
-  else if (![((id<ComGoogleCommonCollectMultimap>) nil_chk(extra)) isEmpty]) {
-    [self failWithBadResultsWithNSString:failVerb withId:expectedMultimap withNSString:@"has unexpected items" withId:ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(extra)];
-  }
-  return create_ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(self, expectedMultimap);
-}
-
-id<JavaUtilCollection> ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_(id<ComGoogleCommonCollectMultimap> multimap, id key) {
-  ComGoogleCommonTruthMultimapSubject_initialize();
-  if ([((id<ComGoogleCommonCollectMultimap>) nil_chk(multimap)) containsKeyWithId:key]) {
-    return [((id<JavaUtilMap>) nil_chk([multimap asMap])) getWithId:key];
-  }
-  else {
-    return JavaUtilCollections_emptyList();
-  }
-}
-
-id<ComGoogleCommonCollectMultimap> ComGoogleCommonTruthMultimapSubject_differenceWithComGoogleCommonCollectMultimap_withComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> minuend, id<ComGoogleCommonCollectMultimap> subtrahend) {
-  ComGoogleCommonTruthMultimapSubject_initialize();
-  ComGoogleCommonCollectLinkedListMultimap *difference = ComGoogleCommonCollectLinkedListMultimap_create();
-  for (id __strong key in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(minuend)) keySet])) {
-    id<JavaUtilList> valDifference = ComGoogleCommonTruthMultimapSubject_differenceWithJavaUtilList_withJavaUtilList_(ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_(minuend, key)), ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_(subtrahend, key)));
-    [((ComGoogleCommonCollectLinkedListMultimap *) nil_chk(difference)) putAllWithId:key withJavaLangIterable:valDifference];
-  }
-  return difference;
-}
-
-id<JavaUtilList> ComGoogleCommonTruthMultimapSubject_differenceWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> minuend, id<JavaUtilList> subtrahend) {
-  ComGoogleCommonTruthMultimapSubject_initialize();
-  ComGoogleCommonCollectLinkedHashMultiset *remaining = ComGoogleCommonCollectLinkedHashMultiset_createWithJavaLangIterable_(subtrahend);
-  id<JavaUtilList> difference = ComGoogleCommonCollectLists_newArrayList();
-  for (id __strong elem in nil_chk(minuend)) {
-    if (![((ComGoogleCommonCollectLinkedHashMultiset *) nil_chk(remaining)) removeWithId:elem]) {
-      [((id<JavaUtilList>) nil_chk(difference)) addWithId:elem];
-    }
-  }
-  return difference;
-}
-
-NSString *ComGoogleCommonTruthMultimapSubject_countDuplicatesMultimapWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> multimap) {
-  ComGoogleCommonTruthMultimapSubject_initialize();
-  id<JavaUtilList> entries = create_JavaUtilArrayList_init();
-  for (id __strong key in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(multimap)) keySet])) {
-    [entries addWithId:JreStrcat("@C@", key, '=', ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_([multimap getWithId:key]))];
-  }
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
-  [sb appendWithNSString:@"{"];
-  [((ComGoogleCommonBaseJoiner *) nil_chk(ComGoogleCommonBaseJoiner_onWithNSString_(@", "))) appendToWithJavaLangStringBuilder:sb withJavaLangIterable:entries];
-  [sb appendWithNSString:@"}"];
-  return [sb description];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMultimapSubject)
-
-@implementation ComGoogleCommonTruthMultimapSubject_IterableValuesForKey
-
-- (instancetype)initWithComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)outer$
-                    withComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                    withComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)multimapSubject
-                                                     withId:(id)key {
-  ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(self, outer$, failureStrategy, multimapSubject, key);
-  return self;
-}
-
-- (NSString *)actualCustomStringRepresentation {
-  return JreStrcat("$@$@$$", @"Values for key <", key_, @"> (<", [self actual], @">) in ", stringRepresentation_);
-}
-
-- (void)dealloc {
-  RELEASE_(key_);
-  RELEASE_(stringRepresentation_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthMultimapSubject:withComGoogleCommonTruthFailureStrategy:withComGoogleCommonTruthMultimapSubject:withId:);
-  methods[1].selector = @selector(actualCustomStringRepresentation);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "key_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, 2 },
-    { "stringRepresentation_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, 3 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonTruthMultimapSubject;LNSObject;", (void *)&ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$0, (void *)&ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$1, (void *)&ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$2, "LComGoogleCommonTruthMultimapSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMultimapSubject_IterableValuesForKey = { "IterableValuesForKey", "com.google.common.truth", ptrTable, methods, fields, 7, 0x2, 2, 2, 4, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthMultimapSubject_IterableValuesForKey;
-}
-
-@end
-
-void ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey *self, ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthMultimapSubject *multimapSubject, id key) {
-  ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(self, failureStrategy, [((id<ComGoogleCommonCollectMultimap>) nil_chk(([((ComGoogleCommonTruthMultimapSubject *) nil_chk(multimapSubject)) actual]))) getWithId:key]);
-  JreStrongAssign(&self->key_, key);
-  JreStrongAssign(&self->stringRepresentation_, [multimapSubject actualAsString]);
-}
-
-ComGoogleCommonTruthMultimapSubject_IterableValuesForKey *new_ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthMultimapSubject *multimapSubject, id key) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey, initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_, outer$, failureStrategy, multimapSubject, key)
-}
-
-ComGoogleCommonTruthMultimapSubject_IterableValuesForKey *create_ComGoogleCommonTruthMultimapSubject_IterableValuesForKey_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthMultimapSubject *multimapSubject, id key) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey, initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthMultimapSubject_withId_, outer$, failureStrategy, multimapSubject, key)
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject_IterableValuesForKey__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMultimapSubject_IterableValuesForKey)
-
-@implementation ComGoogleCommonTruthMultimapSubject_MultimapInOrder
-
-- (instancetype)initWithComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)outer$
-                         withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap {
-  ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(self, outer$, expectedMultimap);
-  return self;
-}
-
-- (void)inOrder {
-  jboolean keysInOrder = [((JavaUtilArrayList *) nil_chk(ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_([((id<ComGoogleCommonCollectMultimap>) nil_chk([this$0_ actual])) keySet]))) isEqual:ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_([((id<ComGoogleCommonCollectMultimap>) nil_chk(expectedMultimap_)) keySet])];
-  JavaUtilLinkedHashSet *keysWithValuesOutOfOrder = ComGoogleCommonCollectSets_newLinkedHashSet();
-  JavaUtilLinkedHashSet *allKeys = ComGoogleCommonCollectSets_newLinkedHashSet();
-  [((JavaUtilLinkedHashSet *) nil_chk(allKeys)) addAllWithJavaUtilCollection:[((id<ComGoogleCommonCollectMultimap>) nil_chk([this$0_ actual])) keySet]];
-  [allKeys addAllWithJavaUtilCollection:[expectedMultimap_ keySet]];
-  for (id __strong key in allKeys) {
-    id<JavaUtilList> actualVals = ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_([this$0_ actual], key));
-    id<JavaUtilList> expectedVals = ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(ComGoogleCommonTruthMultimapSubject_getWithComGoogleCommonCollectMultimap_withId_(expectedMultimap_, key));
-    if (![((id<JavaUtilList>) nil_chk(actualVals)) isEqual:expectedVals]) {
-      [((JavaUtilLinkedHashSet *) nil_chk(keysWithValuesOutOfOrder)) addWithId:key];
-    }
-  }
-  if (!keysInOrder) {
-    if (![((JavaUtilLinkedHashSet *) nil_chk(keysWithValuesOutOfOrder)) isEmpty]) {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains exactly <%s> in order. The keys are not in order, and the values for keys <%s> are not in order either" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedMultimap_, keysWithValuesOutOfOrder } count:3 type:NSObject_class_()]];
-    }
-    else {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains exactly <%s> in order. The keys are not in order" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedMultimap_ } count:2 type:NSObject_class_()]];
-    }
-  }
-  else if (![((JavaUtilLinkedHashSet *) nil_chk(keysWithValuesOutOfOrder)) isEmpty]) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains exactly <%s> in order. The values for keys <%s> are not in order" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedMultimap_, keysWithValuesOutOfOrder } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(expectedMultimap_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthMultimapSubject:withComGoogleCommonCollectMultimap:);
-  methods[1].selector = @selector(inOrder);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthMultimapSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "expectedMultimap_", "LComGoogleCommonCollectMultimap;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<**>;)V", "Lcom/google/common/collect/Multimap<**>;", "LComGoogleCommonTruthMultimapSubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMultimapSubject_MultimapInOrder = { "MultimapInOrder", "com.google.common.truth", ptrTable, methods, fields, 7, 0x2, 2, 2, 3, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthMultimapSubject_MultimapInOrder;
-}
-
-@end
-
-void ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject_MultimapInOrder *self, ComGoogleCommonTruthMultimapSubject *outer$, id<ComGoogleCommonCollectMultimap> expectedMultimap) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  JreStrongAssign(&self->expectedMultimap_, expectedMultimap);
-}
-
-ComGoogleCommonTruthMultimapSubject_MultimapInOrder *new_ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *outer$, id<ComGoogleCommonCollectMultimap> expectedMultimap) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMultimapSubject_MultimapInOrder, initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_, outer$, expectedMultimap)
-}
-
-ComGoogleCommonTruthMultimapSubject_MultimapInOrder *create_ComGoogleCommonTruthMultimapSubject_MultimapInOrder_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *outer$, id<ComGoogleCommonCollectMultimap> expectedMultimap) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMultimapSubject_MultimapInOrder, initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonCollectMultimap_, outer$, expectedMultimap)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMultimapSubject_MultimapInOrder)
-
-@implementation ComGoogleCommonTruthMultimapSubject_UsingCorrespondence
-
-- (instancetype)initWithComGoogleCommonTruthMultimapSubject:(ComGoogleCommonTruthMultimapSubject *)outer$
-                     withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence {
-  ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(self, outer$, correspondence);
-  return self;
-}
-
-- (void)containsEntryWithId:(id)expectedKey
-                     withId:(id)expectedValue {
-  if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([this$0_ actual])) containsKeyWithId:expectedKey]) {
-    id<JavaUtilCollection> actualValues = [((id<JavaUtilMap>) nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_getCastSubject(self))) asMap])) getWithId:expectedKey];
-    for (id __strong actualValue in nil_chk(actualValues)) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:actualValue withId:expectedValue]) {
-        return;
-      }
-    }
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains at least one entry with key <%s> and a value that %s <%s>. However, it has a mapping from that key to <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedKey, correspondence_, expectedValue, actualValues } count:5 type:NSObject_class_()]];
-  }
-  else {
-    id<JavaUtilSet> keys = create_JavaUtilLinkedHashSet_init();
-    for (id<JavaUtilMap_Entry> __strong actualEntry in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_getCastSubject(self))) entries])) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:[((id<JavaUtilMap_Entry>) nil_chk(actualEntry)) getValue] withId:expectedValue]) {
-        [keys addWithId:[actualEntry getKey]];
-      }
-    }
-    if (![keys isEmpty]) {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains at least one entry with key <%s> and a value that %s <%s>. However, the following keys are mapped to such values: <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedKey, correspondence_, expectedValue, keys } count:5 type:NSObject_class_()]];
-    }
-    else {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s contains at least one entry with key <%s> and a value that %s <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], expectedKey, correspondence_, expectedValue } count:4 type:NSObject_class_()]];
-    }
-  }
-}
-
-- (void)doesNotContainEntryWithId:(id)excludedKey
-                           withId:(id)excludedValue {
-  if ([((id<ComGoogleCommonCollectMultimap>) nil_chk([this$0_ actual])) containsKeyWithId:excludedKey]) {
-    id<JavaUtilCollection> actualValues = [((id<JavaUtilMap>) nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_getCastSubject(self))) asMap])) getWithId:excludedKey];
-    id<JavaUtilList> matchingValues = create_JavaUtilArrayList_init();
-    for (id __strong actualValue in nil_chk(actualValues)) {
-      if ([((ComGoogleCommonTruthCorrespondence *) nil_chk(correspondence_)) compareWithId:actualValue withId:excludedValue]) {
-        [matchingValues addWithId:actualValue];
-      }
-    }
-    if (![matchingValues isEmpty]) {
-      [this$0_ failWithRawMessageWithNSString:@"Not true that %s did not contain an entry with key <%s> and a value that %s <%s>. It maps that key to the following such values: <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], excludedKey, correspondence_, excludedValue, matchingValues } count:5 type:NSObject_class_()]];
-    }
-  }
-}
-
-- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)valuesForKeyWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<ComGoogleCommonCollectMultimap>)getCastSubject {
-  return ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_getCastSubject(self);
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  RELEASE_(correspondence_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, 4, -1, 5 },
-    { NULL, "V", 0x1, 6, 3, -1, 4, -1, 7 },
-    { NULL, "LComGoogleCommonTruthOrdered;", 0x2, 8, 9, -1, 10, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", 0x2, 11, 12, -1, 13, -1, 14 },
-    { NULL, "LComGoogleCommonCollectMultimap;", 0x2, -1, -1, -1, 15, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthMultimapSubject:withComGoogleCommonTruthCorrespondence:);
-  methods[1].selector = @selector(containsEntryWithId:withId:);
-  methods[2].selector = @selector(doesNotContainEntryWithId:withId:);
-  methods[3].selector = @selector(containsExactlyEntriesInWithComGoogleCommonCollectMultimap:);
-  methods[4].selector = @selector(valuesForKeyWithId:);
-  methods[5].selector = @selector(getCastSubject);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthMultimapSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "correspondence_", "LComGoogleCommonTruthCorrespondence;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthCorrespondence;", "(Lcom/google/common/truth/Correspondence<TA;TE;>;)V", "containsEntry", "LNSObject;LNSObject;", "(Ljava/lang/Object;TE;)V", (void *)&ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$0, "doesNotContainEntry", (void *)&ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$1, "containsExactlyEntriesIn", "LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<*+TE;>;)Lcom/google/common/truth/Ordered;", "valuesForKey", "LNSObject;", "(Ljava/lang/Object;)Lcom/google/common/truth/IterableSubject$UsingCorrespondence<TA;TE;>;", (void *)&ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$2, "()Lcom/google/common/collect/Multimap<*TA;>;", "Lcom/google/common/truth/Correspondence<TA;TE;>;", "LComGoogleCommonTruthMultimapSubject;", "<A:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMultimapSubject_UsingCorrespondence = { "UsingCorrespondence", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 6, 2, 17, -1, -1, 18, -1 };
-  return &_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence;
-}
-
-@end
-
-void ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *self, ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  JreStrongAssign(&self->this$0_, outer$);
-  NSObject_init(self);
-  JreStrongAssign(&self->correspondence_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(correspondence));
-}
-
-ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *new_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence, initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_, outer$, correspondence)
-}
-
-ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *create_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthMultimapSubject *outer$, ComGoogleCommonTruthCorrespondence *correspondence) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence, initWithComGoogleCommonTruthMultimapSubject_withComGoogleCommonTruthCorrespondence_, outer$, correspondence)
-}
-
-id<ComGoogleCommonCollectMultimap> ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_getCastSubject(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *self) {
-  return [self->this$0_ actual];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultimapSubject_UsingCorrespondence__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultisetSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultisetSubject.h
deleted file mode 100644
index efbce1627..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultisetSubject.h
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthMultisetSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthMultisetSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthMultisetSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject || defined(INCLUDE_ComGoogleCommonTruthMultisetSubject))
-#define ComGoogleCommonTruthMultisetSubject_
-
-#define RESTRICT_ComGoogleCommonTruthIterableSubject 1
-#define INCLUDE_ComGoogleCommonTruthIterableSubject 1
-#include "ComGoogleCommonTruthIterableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol ComGoogleCommonCollectMultiset;
-@protocol JavaLangIterable;
-
-@interface ComGoogleCommonTruthMultisetSubject : ComGoogleCommonTruthIterableSubject
-
-#pragma mark Public
-
-- (void)hasCountWithId:(id)element
-               withInt:(jint)expectedCount;
-
-- (ComGoogleCommonTruthMultisetSubject *)namedWithNSString:(NSString *)format
-                                         withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (id<JavaLangIterable>)actual;
-
-- (id<JavaLangIterable>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                         withComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)multiset;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultisetSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthMultisetSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultiset> multiset);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMultisetSubject *new_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultiset> multiset) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMultisetSubject *create_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultiset> multiset);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultisetSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultisetSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultisetSubject.m
deleted file mode 100644
index 288d9e2fb..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthMultisetSubject.m
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthMultisetSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/Multiset.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultisetSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthMultisetSubject__Annotations$1();
-
-@implementation ComGoogleCommonTruthMultisetSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                         withComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)multiset {
-  ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(self, failureStrategy, multiset);
-  return self;
-}
-
-- (ComGoogleCommonTruthMultisetSubject *)namedWithNSString:(NSString *)format
-                                         withNSObjectArray:(IOSObjectArray *)args {
-  [super namedWithNSString:format withNSObjectArray:args];
-  return self;
-}
-
-- (void)hasCountWithId:(id)element
-               withInt:(jint)expectedCount {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedCount >= 0, @"expectedCount(%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedCount) } count:1 type:NSObject_class_()]);
-  jint actualCount = [((id<ComGoogleCommonCollectMultiset>) nil_chk(((id<ComGoogleCommonCollectMultiset>) cast_check([self actual], ComGoogleCommonCollectMultiset_class_())))) countWithId:element];
-  if (actualCount != expectedCount) {
-    [self failWithBadResultsWithNSString:JreStrcat("$@$", @"has a count for <", element, @"> of") withId:JavaLangInteger_valueOfWithInt_(expectedCount) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualCount)];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "LComGoogleCommonTruthMultisetSubject;", 0x81, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 5, 6, -1, -1, -1, 7 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonCollectMultiset:);
-  methods[1].selector = @selector(namedWithNSString:withNSObjectArray:);
-  methods[2].selector = @selector(hasCountWithId:withInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonCollectMultiset;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/collect/Multiset<*>;)V", (void *)&ComGoogleCommonTruthMultisetSubject__Annotations$0, "named", "LNSString;[LNSObject;", "hasCount", "LNSObject;I", (void *)&ComGoogleCommonTruthMultisetSubject__Annotations$1 };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthMultisetSubject = { "MultisetSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthMultisetSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthMultisetSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultiset> multiset) {
-  ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(self, failureStrategy, multiset);
-}
-
-ComGoogleCommonTruthMultisetSubject *new_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultiset> multiset) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthMultisetSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_, failureStrategy, multiset)
-}
-
-ComGoogleCommonTruthMultisetSubject *create_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectMultiset> multiset) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthMultisetSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_, failureStrategy, multiset)
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultisetSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthMultisetSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthMultisetSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthObjectArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthObjectArraySubject.h
deleted file mode 100644
index 1acf07eec..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthObjectArraySubject.h
+++ /dev/null
@@ -1,80 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthObjectArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthObjectArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthObjectArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthObjectArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthObjectArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthObjectArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthObjectArraySubject || defined(INCLUDE_ComGoogleCommonTruthObjectArraySubject))
-#define ComGoogleCommonTruthObjectArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthObjectArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthObjectArraySubject *)namedWithNSString:(NSString *)arg0
-                                            withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSObjectArray *)actual;
-
-- (IOSObjectArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                          withNSObjectArray:(IOSObjectArray *)o;
-
-- (NSString *)brackets;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthObjectArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthObjectArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthObjectArraySubject *new_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthObjectArraySubject *create_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthObjectArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthObjectArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthObjectArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthObjectArraySubject.m
deleted file mode 100644
index 13417e0b8..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthObjectArraySubject.m
+++ /dev/null
@@ -1,386 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthObjectArraySubject.h"
-#include "ComGoogleCommonTruthPlatform.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Function.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Strings.h"
-#include "com/google/common/collect/Iterables.h"
-#include "com/google/common/collect/Lists.h"
-#include "com/google/common/primitives/Booleans.h"
-#include "com/google/common/primitives/Bytes.h"
-#include "com/google/common/primitives/Chars.h"
-#include "com/google/common/primitives/Doubles.h"
-#include "com/google/common/primitives/Floats.h"
-#include "com/google/common/primitives/Ints.h"
-#include "com/google/common/primitives/Longs.h"
-#include "com/google/common/primitives/Shorts.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wprotocol"
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthObjectArraySubject () {
- @public
-  NSString *typeName_;
-  jint numberOfDimensions_;
-}
-
-+ (id<JavaLangIterable>)stringableIterableWithNSObjectArray:(IOSObjectArray *)array;
-
-+ (NSString *)typeNameFromInstanceWithId:(id)instance;
-
-+ (jint)numberOfDimensionsWithId:(id)instance;
-
-- (NSString *)checkArrayEqualsRecursiveWithId:(id)expectedArray
-                                       withId:(id)actualArray
-                                 withNSString:(NSString *)lastIndex;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthObjectArraySubject, typeName_, NSString *)
-
-inline id<ComGoogleCommonBaseFunction> ComGoogleCommonTruthObjectArraySubject_get_STRINGIFY();
-static id<ComGoogleCommonBaseFunction> ComGoogleCommonTruthObjectArraySubject_STRINGIFY;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthObjectArraySubject, STRINGIFY, id<ComGoogleCommonBaseFunction>)
-
-__attribute__((unused)) static id<JavaLangIterable> ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(IOSObjectArray *array);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(id instance);
-
-__attribute__((unused)) static jint ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(id instance);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(ComGoogleCommonTruthObjectArraySubject *self, id expectedArray, id actualArray, NSString *lastIndex);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$1();
-
-@interface ComGoogleCommonTruthObjectArraySubject_1 : NSObject < ComGoogleCommonBaseFunction >
-
-- (instancetype)init;
-
-- (id)applyWithId:(id)input;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthObjectArraySubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthObjectArraySubject_1_init(ComGoogleCommonTruthObjectArraySubject_1 *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthObjectArraySubject_1 *new_ComGoogleCommonTruthObjectArraySubject_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthObjectArraySubject_1 *create_ComGoogleCommonTruthObjectArraySubject_1_init();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthObjectArraySubject_1__Annotations$0();
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthObjectArraySubject)
-
-@implementation ComGoogleCommonTruthObjectArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                          withNSObjectArray:(IOSObjectArray *)o {
-  ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return typeName_;
-}
-
-- (NSString *)brackets {
-  return ComGoogleCommonBaseStrings_repeatWithNSString_withInt_(@"[]", numberOfDimensions_);
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_([self actual]));
-}
-
-+ (id<JavaLangIterable>)stringableIterableWithNSObjectArray:(IOSObjectArray *)array {
-  return ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(array);
-}
-
-+ (NSString *)typeNameFromInstanceWithId:(id)instance {
-  return ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(instance);
-}
-
-+ (jint)numberOfDimensionsWithId:(id)instance {
-  return ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(instance);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSObjectArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSObjectArray *expectedArray = (IOSObjectArray *) cast_check(expected, IOSClass_arrayType(NSObject_class_(), 1));
-    if (((IOSObjectArray *) nil_chk(actual))->size_ != ((IOSObjectArray *) nil_chk(expectedArray))->size_) {
-      [self failWithRawMessageWithNSString:@"%s has length %s. Expected length is %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], JavaLangInteger_valueOfWithInt_(actual->size_), JavaLangInteger_valueOfWithInt_(expectedArray->size_) } count:3 type:NSObject_class_()]];
-    }
-    else {
-      NSString *index = ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expectedArray, actual, @"");
-      if (index != nil) {
-        [self failWithBadResultsWithNSString:@"is equal to" withId:ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(expectedArray) withNSString:@"differs at index" withId:index];
-      }
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (NSString *)checkArrayEqualsRecursiveWithId:(id)expectedArray
-                                       withId:(id)actualArray
-                                 withNSString:(NSString *)lastIndex {
-  return ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expectedArray, actualArray, lastIndex);
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSObjectArray *actual = [self actual];
-  @try {
-    IOSObjectArray *expectedArray = (IOSObjectArray *) cast_check(expected, IOSClass_arrayType(NSObject_class_(), 1));
-    if (actual == expected || ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expectedArray, actual, @"") == nil) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, JavaUtilArrays_asListWithNSObjectArray_([self actual]));
-}
-
-- (void)dealloc {
-  RELEASE_(typeName_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 3, -1, -1 },
-    { NULL, "LJavaLangIterable;", 0xa, 4, 5, -1, 6, -1, -1 },
-    { NULL, "LNSString;", 0xa, 7, 8, -1, -1, -1, -1 },
-    { NULL, "I", 0xa, 9, 8, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x2, 11, 12, -1, -1, 13, -1 },
-    { NULL, "V", 0x1, 14, 8, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSObjectArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(brackets);
-  methods[3].selector = @selector(listRepresentation);
-  methods[4].selector = @selector(stringableIterableWithNSObjectArray:);
-  methods[5].selector = @selector(typeNameFromInstanceWithId:);
-  methods[6].selector = @selector(numberOfDimensionsWithId:);
-  methods[7].selector = @selector(isEqualToWithId:);
-  methods[8].selector = @selector(checkArrayEqualsRecursiveWithId:withId:withNSString:);
-  methods[9].selector = @selector(isNotEqualToWithId:);
-  methods[10].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "typeName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "numberOfDimensions_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
-    { "STRINGIFY", "LComGoogleCommonBaseFunction;", .constantValue.asLong = 0, 0x1a, -1, 15, 16, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[LNSObject;", "(Lcom/google/common/truth/FailureStrategy;[TT;)V", (void *)&ComGoogleCommonTruthObjectArraySubject__Annotations$0, "()Ljava/util/List<*>;", "stringableIterable", "[LNSObject;", "([Ljava/lang/Object;)Ljava/lang/Iterable<*>;", "typeNameFromInstance", "LNSObject;", "numberOfDimensions", "isEqualTo", "checkArrayEqualsRecursive", "LNSObject;LNSObject;LNSString;", (void *)&ComGoogleCommonTruthObjectArraySubject__Annotations$1, "isNotEqualTo", &ComGoogleCommonTruthObjectArraySubject_STRINGIFY, "Lcom/google/common/base/Function<Ljava/lang/Object;Ljava/lang/Object;>;", "<T:Ljava/lang/Object;>Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/ObjectArraySubject<TT;>;[TT;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthObjectArraySubject = { "ObjectArraySubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 11, 3, -1, -1, -1, 17, -1 };
-  return &_ComGoogleCommonTruthObjectArraySubject;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthObjectArraySubject class]) {
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthObjectArraySubject_STRINGIFY, new_ComGoogleCommonTruthObjectArraySubject_1_init());
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthObjectArraySubject)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthObjectArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-  JreStrongAssign(&self->typeName_, ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(o));
-  self->numberOfDimensions_ = ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(o);
-}
-
-ComGoogleCommonTruthObjectArraySubject *new_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthObjectArraySubject, initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthObjectArraySubject *create_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthObjectArraySubject, initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_, failureStrategy, o)
-}
-
-id<JavaLangIterable> ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(IOSObjectArray *array) {
-  ComGoogleCommonTruthObjectArraySubject_initialize();
-  return ComGoogleCommonCollectIterables_transformWithJavaLangIterable_withComGoogleCommonBaseFunction_(JavaUtilArrays_asListWithNSObjectArray_(array), ComGoogleCommonTruthObjectArraySubject_STRINGIFY);
-}
-
-NSString *ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(id instance) {
-  ComGoogleCommonTruthObjectArraySubject_initialize();
-  if (instance == nil) {
-    return @"null reference of unknown array type";
-  }
-  else {
-    if (![[instance java_getClass] isArray]) {
-      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", [[instance java_getClass] getName], @" instance passed into T[] subject."));
-    }
-    IOSClass *type = [[instance java_getClass] getComponentType];
-    if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
-      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Primitive array passed into T[] subject.");
-    }
-    while ([((IOSClass *) nil_chk(type)) isArray]) {
-      type = [type getComponentType];
-    }
-    return ComGoogleCommonTruthPlatform_compressTypeWithNSString_([type description]);
-  }
-}
-
-jint ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(id instance) {
-  ComGoogleCommonTruthObjectArraySubject_initialize();
-  if (instance == nil) {
-    return 0;
-  }
-  IOSClass *type = [instance java_getClass];
-  jint dimensions = 0;
-  while ([((IOSClass *) nil_chk(type)) isArray]) {
-    dimensions++;
-    type = [type getComponentType];
-  }
-  return dimensions;
-}
-
-NSString *ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(ComGoogleCommonTruthObjectArraySubject *self, id expectedArray, id actualArray, NSString *lastIndex) {
-  jint actualLength = ComGoogleCommonTruthPlatform_getArrayLengthWithId_(actualArray);
-  jint expectedLength = ComGoogleCommonTruthPlatform_getArrayLengthWithId_(expectedArray);
-  for (jint i = 0; i < actualLength || i < expectedLength; i++) {
-    NSString *index = JreStrcat("$CIC", lastIndex, '[', i, ']');
-    if (i < expectedLength && i < actualLength) {
-      id expected = ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(expectedArray, i);
-      id actual = ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(actualArray, i);
-      if (actual != nil && [[actual java_getClass] isArray] && expected != nil && [[expected java_getClass] isArray]) {
-        NSString *result = ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expected, actual, index);
-        if (result != nil) {
-          return result;
-        }
-        continue;
-      }
-      else if (ComGoogleCommonBaseObjects_equalWithId_withId_(actual, expected)) {
-        continue;
-      }
-    }
-    return index;
-  }
-  return nil;
-}
-
-IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthObjectArraySubject)
-
-@implementation ComGoogleCommonTruthObjectArraySubject_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthObjectArraySubject_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (id)applyWithId:(id)input {
-  if (input != nil && [[input java_getClass] isArray]) {
-    id<JavaLangIterable> iterable;
-    if ([input java_getClass] == IOSClass_booleanArray(1)) {
-      iterable = ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_((IOSBooleanArray *) cast_chk(input, [IOSBooleanArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_intArray(1)) {
-      iterable = ComGoogleCommonPrimitivesInts_asListWithIntArray_((IOSIntArray *) cast_chk(input, [IOSIntArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_longArray(1)) {
-      iterable = ComGoogleCommonPrimitivesLongs_asListWithLongArray_((IOSLongArray *) cast_chk(input, [IOSLongArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_shortArray(1)) {
-      iterable = ComGoogleCommonPrimitivesShorts_asListWithShortArray_((IOSShortArray *) cast_chk(input, [IOSShortArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_byteArray(1)) {
-      iterable = ComGoogleCommonPrimitivesBytes_asListWithByteArray_((IOSByteArray *) cast_chk(input, [IOSByteArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_doubleArray(1)) {
-      iterable = ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_((IOSDoubleArray *) cast_chk(input, [IOSDoubleArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_floatArray(1)) {
-      iterable = ComGoogleCommonPrimitivesFloats_asListWithFloatArray_((IOSFloatArray *) cast_chk(input, [IOSFloatArray class]));
-    }
-    else if ([input java_getClass] == IOSClass_charArray(1)) {
-      iterable = ComGoogleCommonPrimitivesChars_asListWithCharArray_((IOSCharArray *) cast_chk(input, [IOSCharArray class]));
-    }
-    else {
-      iterable = JavaUtilArrays_asListWithNSObjectArray_((IOSObjectArray *) cast_check(input, IOSClass_arrayType(NSObject_class_(), 1)));
-    }
-    return ComGoogleCommonCollectIterables_transformWithJavaLangIterable_withComGoogleCommonBaseFunction_(iterable, JreLoadStatic(ComGoogleCommonTruthObjectArraySubject, STRINGIFY));
-  }
-  return input;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, 2 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(applyWithId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "apply", "LNSObject;", (void *)&ComGoogleCommonTruthObjectArraySubject_1__Annotations$0, "LComGoogleCommonTruthObjectArraySubject;", "Ljava/lang/Object;Lcom/google/common/base/Function<Ljava/lang/Object;Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthObjectArraySubject_1 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, 4, -1 };
-  return &_ComGoogleCommonTruthObjectArraySubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthObjectArraySubject_1_init(ComGoogleCommonTruthObjectArraySubject_1 *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthObjectArraySubject_1 *new_ComGoogleCommonTruthObjectArraySubject_1_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthObjectArraySubject_1, init)
-}
-
-ComGoogleCommonTruthObjectArraySubject_1 *create_ComGoogleCommonTruthObjectArraySubject_1_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthObjectArraySubject_1, init)
-}
-
-IOSObjectArray *ComGoogleCommonTruthObjectArraySubject_1__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthOrdered.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthOrdered.h
deleted file mode 100644
index d9e1adc93..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthOrdered.h
+++ /dev/null
@@ -1,39 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthOrdered")
-#ifdef RESTRICT_ComGoogleCommonTruthOrdered
-#define INCLUDE_ALL_ComGoogleCommonTruthOrdered 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthOrdered 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthOrdered
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthOrdered_) && (INCLUDE_ALL_ComGoogleCommonTruthOrdered || defined(INCLUDE_ComGoogleCommonTruthOrdered))
-#define ComGoogleCommonTruthOrdered_
-
-@protocol ComGoogleCommonTruthOrdered < JavaObject >
-
-- (void)inOrder;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthOrdered)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthOrdered)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthOrdered")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthOrdered.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthOrdered.m
deleted file mode 100644
index 2d10d97c2..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthOrdered.m
+++ /dev/null
@@ -1,28 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthOrdered.h"
-#include "J2ObjC_source.h"
-
-@interface ComGoogleCommonTruthOrdered : NSObject
-
-@end
-
-@implementation ComGoogleCommonTruthOrdered
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(inOrder);
-  #pragma clang diagnostic pop
-  static const J2ObjcClassInfo _ComGoogleCommonTruthOrdered = { "Ordered", "com.google.common.truth", NULL, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthOrdered;
-}
-
-@end
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthOrdered)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPlatform.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPlatform.h
deleted file mode 100644
index 1fea73007..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPlatform.h
+++ /dev/null
@@ -1,89 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPlatform")
-#ifdef RESTRICT_ComGoogleCommonTruthPlatform
-#define INCLUDE_ALL_ComGoogleCommonTruthPlatform 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPlatform 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPlatform
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPlatform_) && (INCLUDE_ALL_ComGoogleCommonTruthPlatform || defined(INCLUDE_ComGoogleCommonTruthPlatform))
-#define ComGoogleCommonTruthPlatform_
-
-@class IOSClass;
-@class JavaLangAssertionError;
-@class JavaUtilRegexPattern;
-
-@interface ComGoogleCommonTruthPlatform : NSObject
-
-#pragma mark Public
-
-+ (JavaLangAssertionError *)comparisonFailureWithNSString:(NSString *)message
-                                             withNSString:(NSString *)expected
-                                             withNSString:(NSString *)actual;
-
-+ (NSString *)compressTypeWithNSString:(NSString *)type;
-
-+ (jboolean)containsMatchWithNSString:(NSString *)subject
-                         withNSString:(NSString *)regex;
-
-+ (jboolean)isInstanceOfTypeWithId:(id)instance
-                      withIOSClass:(IOSClass *)clazz;
-
-#pragma mark Package-Private
-
-+ (jint)getArrayLengthWithId:(id)array;
-
-+ (id)getFromArrayWithId:(id)array
-                 withInt:(jint)i;
-
-+ (jboolean)isInstanceOfTypeGWTWithId:(id)instance
-                         withIOSClass:(IOSClass *)clazz;
-
-+ (jboolean)isInstanceOfTypeJavaWithId:(id)instance
-                          withIOSClass:(IOSClass *)clazz;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthPlatform)
-
-inline JavaUtilRegexPattern *ComGoogleCommonTruthPlatform_get_TYPE_PATTERN();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT JavaUtilRegexPattern *ComGoogleCommonTruthPlatform_TYPE_PATTERN;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthPlatform, TYPE_PATTERN, JavaUtilRegexPattern *)
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeWithId_withIOSClass_(id instance, IOSClass *clazz);
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeJavaWithId_withIOSClass_(id instance, IOSClass *clazz);
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeGWTWithId_withIOSClass_(id instance, IOSClass *clazz);
-
-FOUNDATION_EXPORT NSString *ComGoogleCommonTruthPlatform_compressTypeWithNSString_(NSString *type);
-
-FOUNDATION_EXPORT JavaLangAssertionError *ComGoogleCommonTruthPlatform_comparisonFailureWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual);
-
-FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_containsMatchWithNSString_withNSString_(NSString *subject, NSString *regex);
-
-FOUNDATION_EXPORT jint ComGoogleCommonTruthPlatform_getArrayLengthWithId_(id array);
-
-FOUNDATION_EXPORT id ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(id array, jint i);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPlatform)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPlatform")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPlatform.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPlatform.m
deleted file mode 100644
index 5b39a4dbc..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPlatform.m
+++ /dev/null
@@ -1,302 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthPlatform.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/Character.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/reflect/Array.h"
-#include "java/util/LinkedHashSet.h"
-#include "java/util/Set.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-#include "org/junit/ComparisonFailure.h"
-
-@interface ComGoogleCommonTruthPlatform ()
-
-- (instancetype)init;
-
-+ (void)addInterfaceNamesWithIOSClassArray:(IOSObjectArray *)interfaces
-                           withJavaUtilSet:(id<JavaUtilSet>)types;
-
-+ (void)addTypeNamesWithIOSClass:(IOSClass *)clazz
-                 withJavaUtilSet:(id<JavaUtilSet>)types;
-
-+ (NSString *)typeOnlyWithNSString:(NSString *)type;
-
-+ (NSString *)stripIfPrefixedWithNSString:(NSString *)string
-                             withNSString:(NSString *)prefix;
-
-+ (NSString *)stripIfInPackageWithNSString:(NSString *)type
-                              withNSString:(NSString *)packagePrefix;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthPlatform_init(ComGoogleCommonTruthPlatform *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthPlatform *new_ComGoogleCommonTruthPlatform_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPlatform *create_ComGoogleCommonTruthPlatform_init();
-
-__attribute__((unused)) static void ComGoogleCommonTruthPlatform_addInterfaceNamesWithIOSClassArray_withJavaUtilSet_(IOSObjectArray *interfaces, id<JavaUtilSet> types);
-
-__attribute__((unused)) static void ComGoogleCommonTruthPlatform_addTypeNamesWithIOSClass_withJavaUtilSet_(IOSClass *clazz, id<JavaUtilSet> types);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthPlatform_typeOnlyWithNSString_(NSString *type);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthPlatform_stripIfPrefixedWithNSString_withNSString_(NSString *string, NSString *prefix);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthPlatform_stripIfInPackageWithNSString_withNSString_(NSString *type, NSString *packagePrefix);
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthPlatform)
-
-JavaUtilRegexPattern *ComGoogleCommonTruthPlatform_TYPE_PATTERN;
-
-@implementation ComGoogleCommonTruthPlatform
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthPlatform_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (jboolean)isInstanceOfTypeWithId:(id)instance
-                      withIOSClass:(IOSClass *)clazz {
-  return ComGoogleCommonTruthPlatform_isInstanceOfTypeWithId_withIOSClass_(instance, clazz);
-}
-
-+ (jboolean)isInstanceOfTypeJavaWithId:(id)instance
-                          withIOSClass:(IOSClass *)clazz {
-  return ComGoogleCommonTruthPlatform_isInstanceOfTypeJavaWithId_withIOSClass_(instance, clazz);
-}
-
-+ (jboolean)isInstanceOfTypeGWTWithId:(id)instance
-                         withIOSClass:(IOSClass *)clazz {
-  return ComGoogleCommonTruthPlatform_isInstanceOfTypeGWTWithId_withIOSClass_(instance, clazz);
-}
-
-+ (void)addInterfaceNamesWithIOSClassArray:(IOSObjectArray *)interfaces
-                           withJavaUtilSet:(id<JavaUtilSet>)types {
-  ComGoogleCommonTruthPlatform_addInterfaceNamesWithIOSClassArray_withJavaUtilSet_(interfaces, types);
-}
-
-+ (void)addTypeNamesWithIOSClass:(IOSClass *)clazz
-                 withJavaUtilSet:(id<JavaUtilSet>)types {
-  ComGoogleCommonTruthPlatform_addTypeNamesWithIOSClass_withJavaUtilSet_(clazz, types);
-}
-
-+ (NSString *)compressTypeWithNSString:(NSString *)type {
-  return ComGoogleCommonTruthPlatform_compressTypeWithNSString_(type);
-}
-
-+ (NSString *)typeOnlyWithNSString:(NSString *)type {
-  return ComGoogleCommonTruthPlatform_typeOnlyWithNSString_(type);
-}
-
-+ (NSString *)stripIfPrefixedWithNSString:(NSString *)string
-                             withNSString:(NSString *)prefix {
-  return ComGoogleCommonTruthPlatform_stripIfPrefixedWithNSString_withNSString_(string, prefix);
-}
-
-+ (NSString *)stripIfInPackageWithNSString:(NSString *)type
-                              withNSString:(NSString *)packagePrefix {
-  return ComGoogleCommonTruthPlatform_stripIfInPackageWithNSString_withNSString_(type, packagePrefix);
-}
-
-+ (JavaLangAssertionError *)comparisonFailureWithNSString:(NSString *)message
-                                             withNSString:(NSString *)expected
-                                             withNSString:(NSString *)actual {
-  return ComGoogleCommonTruthPlatform_comparisonFailureWithNSString_withNSString_withNSString_(message, expected, actual);
-}
-
-+ (jboolean)containsMatchWithNSString:(NSString *)subject
-                         withNSString:(NSString *)regex {
-  return ComGoogleCommonTruthPlatform_containsMatchWithNSString_withNSString_(subject, regex);
-}
-
-+ (jint)getArrayLengthWithId:(id)array {
-  return ComGoogleCommonTruthPlatform_getArrayLengthWithId_(array);
-}
-
-+ (id)getFromArrayWithId:(id)array
-                 withInt:(jint)i {
-  return ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(array, i);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 0, 1, -1, 2, -1, -1 },
-    { NULL, "Z", 0x8, 3, 1, -1, 2, -1, -1 },
-    { NULL, "Z", 0x8, 4, 1, -1, 2, -1, -1 },
-    { NULL, "V", 0xa, 5, 6, -1, 7, -1, -1 },
-    { NULL, "V", 0xa, 8, 9, -1, 10, -1, -1 },
-    { NULL, "LNSString;", 0x9, 11, 12, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 13, 12, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 14, 15, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 16, 15, -1, -1, -1, -1 },
-    { NULL, "LJavaLangAssertionError;", 0x9, 17, 18, -1, -1, -1, -1 },
-    { NULL, "Z", 0x9, 19, 15, -1, -1, -1, -1 },
-    { NULL, "I", 0x8, 20, 21, -1, -1, -1, -1 },
-    { NULL, "LNSObject;", 0x8, 22, 23, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(isInstanceOfTypeWithId:withIOSClass:);
-  methods[2].selector = @selector(isInstanceOfTypeJavaWithId:withIOSClass:);
-  methods[3].selector = @selector(isInstanceOfTypeGWTWithId:withIOSClass:);
-  methods[4].selector = @selector(addInterfaceNamesWithIOSClassArray:withJavaUtilSet:);
-  methods[5].selector = @selector(addTypeNamesWithIOSClass:withJavaUtilSet:);
-  methods[6].selector = @selector(compressTypeWithNSString:);
-  methods[7].selector = @selector(typeOnlyWithNSString:);
-  methods[8].selector = @selector(stripIfPrefixedWithNSString:withNSString:);
-  methods[9].selector = @selector(stripIfInPackageWithNSString:withNSString:);
-  methods[10].selector = @selector(comparisonFailureWithNSString:withNSString:withNSString:);
-  methods[11].selector = @selector(containsMatchWithNSString:withNSString:);
-  methods[12].selector = @selector(getArrayLengthWithId:);
-  methods[13].selector = @selector(getFromArrayWithId:withInt:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "TYPE_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
-  };
-  static const void *ptrTable[] = { "isInstanceOfType", "LNSObject;LIOSClass;", "(Ljava/lang/Object;Ljava/lang/Class<*>;)Z", "isInstanceOfTypeJava", "isInstanceOfTypeGWT", "addInterfaceNames", "[LIOSClass;LJavaUtilSet;", "([Ljava/lang/Class<*>;Ljava/util/Set<Ljava/lang/String;>;)V", "addTypeNames", "LIOSClass;LJavaUtilSet;", "(Ljava/lang/Class<*>;Ljava/util/Set<Ljava/lang/String;>;)V", "compressType", "LNSString;", "typeOnly", "stripIfPrefixed", "LNSString;LNSString;", "stripIfInPackage", "comparisonFailure", "LNSString;LNSString;LNSString;", "containsMatch", "getArrayLength", "LNSObject;", "getFromArray", "LNSObject;I", &ComGoogleCommonTruthPlatform_TYPE_PATTERN };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPlatform = { "Platform", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 14, 1, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthPlatform;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthPlatform class]) {
-    JreStrongAssign(&ComGoogleCommonTruthPlatform_TYPE_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"(?:[\\w$]+\\.)*([\\w\\.*$]+)"));
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthPlatform)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthPlatform_init(ComGoogleCommonTruthPlatform *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthPlatform *new_ComGoogleCommonTruthPlatform_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPlatform, init)
-}
-
-ComGoogleCommonTruthPlatform *create_ComGoogleCommonTruthPlatform_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPlatform, init)
-}
-
-jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeWithId_withIOSClass_(id instance, IOSClass *clazz) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return ComGoogleCommonTruthPlatform_isInstanceOfTypeJavaWithId_withIOSClass_(instance, clazz);
-}
-
-jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeJavaWithId_withIOSClass_(id instance, IOSClass *clazz) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return [((IOSClass *) nil_chk(clazz)) isInstance:instance];
-}
-
-jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeGWTWithId_withIOSClass_(id instance, IOSClass *clazz) {
-  ComGoogleCommonTruthPlatform_initialize();
-  NSString *className_ = [((IOSClass *) nil_chk(clazz)) getName];
-  id<JavaUtilSet> types = create_JavaUtilLinkedHashSet_init();
-  [types addWithId:[[nil_chk(instance) java_getClass] getCanonicalName]];
-  ComGoogleCommonTruthPlatform_addTypeNamesWithIOSClass_withJavaUtilSet_([instance java_getClass], types);
-  for (NSString * __strong type in types) {
-    if ([((NSString *) nil_chk(type)) isEqual:className_]) {
-      return true;
-    }
-  }
-  return false;
-}
-
-void ComGoogleCommonTruthPlatform_addInterfaceNamesWithIOSClassArray_withJavaUtilSet_(IOSObjectArray *interfaces, id<JavaUtilSet> types) {
-  ComGoogleCommonTruthPlatform_initialize();
-  {
-    IOSObjectArray *a__ = interfaces;
-    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
-    IOSClass * const *e__ = b__ + a__->size_;
-    while (b__ < e__) {
-      IOSClass *interfaze = *b__++;
-      [((id<JavaUtilSet>) nil_chk(types)) addWithId:[((IOSClass *) nil_chk(interfaze)) getName]];
-      ComGoogleCommonTruthPlatform_addInterfaceNamesWithIOSClassArray_withJavaUtilSet_([interfaze getInterfaces], types);
-    }
-  }
-}
-
-void ComGoogleCommonTruthPlatform_addTypeNamesWithIOSClass_withJavaUtilSet_(IOSClass *clazz, id<JavaUtilSet> types) {
-  ComGoogleCommonTruthPlatform_initialize();
-  for (IOSClass *current = clazz; current != nil; current = [current getSuperclass]) {
-    [((id<JavaUtilSet>) nil_chk(types)) addWithId:[current getName]];
-    ComGoogleCommonTruthPlatform_addInterfaceNamesWithIOSClassArray_withJavaUtilSet_([current getInterfaces], types);
-  }
-}
-
-NSString *ComGoogleCommonTruthPlatform_compressTypeWithNSString_(NSString *type) {
-  ComGoogleCommonTruthPlatform_initialize();
-  type = ComGoogleCommonTruthPlatform_typeOnlyWithNSString_(type);
-  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
-  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(ComGoogleCommonTruthPlatform_TYPE_PATTERN)) matcherWithJavaLangCharSequence:type];
-  jint pos = 0;
-  while (true) {
-    jboolean found = [((JavaUtilRegexMatcher *) nil_chk(m)) findWithInt:pos];
-    jint typeStart = found ? [m start] : ((jint) [((NSString *) nil_chk(type)) length]);
-    [sb appendWithJavaLangCharSequence:type withInt:pos withInt:typeStart];
-    if (!found) {
-      break;
-    }
-    NSString *name = [m groupWithInt:0];
-    name = ComGoogleCommonTruthPlatform_stripIfInPackageWithNSString_withNSString_(name, @"java.lang.");
-    name = ComGoogleCommonTruthPlatform_stripIfInPackageWithNSString_withNSString_(name, @"java.util.");
-    [sb appendWithNSString:name];
-    pos = [m end];
-  }
-  return [sb description];
-}
-
-NSString *ComGoogleCommonTruthPlatform_typeOnlyWithNSString_(NSString *type) {
-  ComGoogleCommonTruthPlatform_initialize();
-  type = ComGoogleCommonTruthPlatform_stripIfPrefixedWithNSString_withNSString_(type, @"class ");
-  type = ComGoogleCommonTruthPlatform_stripIfPrefixedWithNSString_withNSString_(type, @"interface ");
-  return type;
-}
-
-NSString *ComGoogleCommonTruthPlatform_stripIfPrefixedWithNSString_withNSString_(NSString *string, NSString *prefix) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return [((NSString *) nil_chk(string)) hasPrefix:prefix] ? [string java_substring:((jint) [((NSString *) nil_chk(prefix)) length])] : string;
-}
-
-NSString *ComGoogleCommonTruthPlatform_stripIfInPackageWithNSString_withNSString_(NSString *type, NSString *packagePrefix) {
-  ComGoogleCommonTruthPlatform_initialize();
-  if ([((NSString *) nil_chk(type)) hasPrefix:packagePrefix] && ([type java_indexOf:'.' fromIndex:((jint) [((NSString *) nil_chk(packagePrefix)) length])] == -1) && JavaLangCharacter_isUpperCaseWithChar_([type charAtWithInt:((jint) [packagePrefix length])])) {
-    return [type java_substring:((jint) [((NSString *) nil_chk(packagePrefix)) length])];
-  }
-  return type;
-}
-
-JavaLangAssertionError *ComGoogleCommonTruthPlatform_comparisonFailureWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return create_OrgJunitComparisonFailure_initWithNSString_withNSString_withNSString_(message, expected, actual);
-}
-
-jboolean ComGoogleCommonTruthPlatform_containsMatchWithNSString_withNSString_(NSString *subject, NSString *regex) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(JavaUtilRegexPattern_compileWithNSString_(regex))) matcherWithJavaLangCharSequence:subject])) find];
-}
-
-jint ComGoogleCommonTruthPlatform_getArrayLengthWithId_(id array) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return JavaLangReflectArray_getLengthWithId_(array);
-}
-
-id ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(id array, jint i) {
-  ComGoogleCommonTruthPlatform_initialize();
-  return JavaLangReflectArray_getWithId_withInt_(array, i);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPlatform)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveBooleanArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveBooleanArraySubject.h
deleted file mode 100644
index f11f3fe8f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveBooleanArraySubject.h
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveBooleanArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveBooleanArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveBooleanArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveBooleanArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveBooleanArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveBooleanArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveBooleanArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveBooleanArraySubject))
-#define ComGoogleCommonTruthPrimitiveBooleanArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSBooleanArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveBooleanArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthPrimitiveBooleanArraySubject *)namedWithNSString:(NSString *)arg0
-                                                      withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSBooleanArray *)actual;
-
-- (IOSBooleanArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                           withBooleanArray:(IOSBooleanArray *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveBooleanArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(ComGoogleCommonTruthPrimitiveBooleanArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSBooleanArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveBooleanArraySubject *new_ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSBooleanArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveBooleanArraySubject *create_ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSBooleanArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveBooleanArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveBooleanArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveBooleanArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveBooleanArraySubject.m
deleted file mode 100644
index c2427a42f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveBooleanArraySubject.m
+++ /dev/null
@@ -1,113 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthPrimitiveBooleanArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Booleans.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveBooleanArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthPrimitiveBooleanArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                           withBooleanArray:(IOSBooleanArray *)o {
-  ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"boolean";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSBooleanArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSBooleanArray *expectedArray = (IOSBooleanArray *) cast_chk(expected, [IOSBooleanArray class]);
-    if (!JavaUtilArrays_equalsWithBooleanArray_withBooleanArray_(actual, expectedArray)) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSBooleanArray *actual = [self actual];
-  @try {
-    IOSBooleanArray *expectedArray = (IOSBooleanArray *) cast_chk(expected, [IOSBooleanArray class]);
-    if (actual == expected || JavaUtilArrays_equalsWithBooleanArray_withBooleanArray_(actual, expectedArray)) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withBooleanArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isNotEqualToWithId:);
-  methods[5].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[Z", (void *)&ComGoogleCommonTruthPrimitiveBooleanArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Boolean;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveBooleanArraySubject;[Z>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveBooleanArraySubject = { "PrimitiveBooleanArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthPrimitiveBooleanArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(ComGoogleCommonTruthPrimitiveBooleanArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSBooleanArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveBooleanArraySubject *new_ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSBooleanArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveBooleanArraySubject, initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveBooleanArraySubject *create_ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSBooleanArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveBooleanArraySubject, initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveBooleanArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveBooleanArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveByteArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveByteArraySubject.h
deleted file mode 100644
index 09d734ca1..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveByteArraySubject.h
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveByteArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveByteArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveByteArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveByteArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveByteArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveByteArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveByteArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveByteArraySubject))
-#define ComGoogleCommonTruthPrimitiveByteArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSByteArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveByteArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthPrimitiveByteArraySubject *)namedWithNSString:(NSString *)arg0
-                                                   withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSByteArray *)actual;
-
-- (IOSByteArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                              withByteArray:(IOSByteArray *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveByteArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthPrimitiveByteArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveByteArraySubject *new_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveByteArraySubject *create_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveByteArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveByteArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveByteArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveByteArraySubject.m
deleted file mode 100644
index 1c2bce4a3..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveByteArraySubject.m
+++ /dev/null
@@ -1,113 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthPrimitiveByteArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Bytes.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveByteArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthPrimitiveByteArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                              withByteArray:(IOSByteArray *)o {
-  ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"byte";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesBytes_asListWithByteArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSByteArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSByteArray *expectedArray = (IOSByteArray *) cast_chk(expected, [IOSByteArray class]);
-    if (!JavaUtilArrays_equalsWithByteArray_withByteArray_(actual, expectedArray)) {
-      [self failWithNSString:@"is equal to" withId:JavaUtilArrays_toStringWithByteArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSByteArray *actual = [self actual];
-  @try {
-    IOSByteArray *expectedArray = (IOSByteArray *) cast_chk(expected, [IOSByteArray class]);
-    if (actual == expected || JavaUtilArrays_equalsWithByteArray_withByteArray_(actual, expectedArray)) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], JavaUtilArrays_toStringWithByteArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withByteArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isNotEqualToWithId:);
-  methods[5].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[B", (void *)&ComGoogleCommonTruthPrimitiveByteArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Byte;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveByteArraySubject;[B>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveByteArraySubject = { "PrimitiveByteArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthPrimitiveByteArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthPrimitiveByteArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveByteArraySubject *new_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveByteArraySubject, initWithComGoogleCommonTruthFailureStrategy_withByteArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveByteArraySubject *create_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveByteArraySubject, initWithComGoogleCommonTruthFailureStrategy_withByteArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveByteArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveByteArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveCharArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveCharArraySubject.h
deleted file mode 100644
index c6f93e944..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveCharArraySubject.h
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveCharArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveCharArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveCharArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveCharArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveCharArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveCharArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveCharArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveCharArraySubject))
-#define ComGoogleCommonTruthPrimitiveCharArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSCharArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveCharArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthPrimitiveCharArraySubject *)namedWithNSString:(NSString *)arg0
-                                                   withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSCharArray *)actual;
-
-- (IOSCharArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                              withCharArray:(IOSCharArray *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveCharArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(ComGoogleCommonTruthPrimitiveCharArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSCharArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveCharArraySubject *new_ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSCharArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveCharArraySubject *create_ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSCharArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveCharArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveCharArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveCharArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveCharArraySubject.m
deleted file mode 100644
index adab17e37..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveCharArraySubject.m
+++ /dev/null
@@ -1,113 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthPrimitiveCharArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Chars.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveCharArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthPrimitiveCharArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                              withCharArray:(IOSCharArray *)o {
-  ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"char";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesChars_asListWithCharArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSCharArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSCharArray *expectedArray = (IOSCharArray *) cast_chk(expected, [IOSCharArray class]);
-    if (!JavaUtilArrays_equalsWithCharArray_withCharArray_(actual, expectedArray)) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesChars_asListWithCharArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSCharArray *actual = [self actual];
-  @try {
-    IOSCharArray *expectedArray = (IOSCharArray *) cast_chk(expected, [IOSCharArray class]);
-    if (actual == expected || JavaUtilArrays_equalsWithCharArray_withCharArray_(actual, expectedArray)) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesChars_asListWithCharArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withCharArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isNotEqualToWithId:);
-  methods[5].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[C", (void *)&ComGoogleCommonTruthPrimitiveCharArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Character;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveCharArraySubject;[C>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveCharArraySubject = { "PrimitiveCharArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthPrimitiveCharArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(ComGoogleCommonTruthPrimitiveCharArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSCharArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveCharArraySubject *new_ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSCharArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveCharArraySubject, initWithComGoogleCommonTruthFailureStrategy_withCharArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveCharArraySubject *create_ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSCharArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveCharArraySubject, initWithComGoogleCommonTruthFailureStrategy_withCharArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveCharArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveCharArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveDoubleArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveDoubleArraySubject.h
deleted file mode 100644
index 82456a763..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveDoubleArraySubject.h
+++ /dev/null
@@ -1,118 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveDoubleArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveDoubleArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveDoubleArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveDoubleArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveDoubleArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveDoubleArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveDoubleArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveDoubleArraySubject))
-#define ComGoogleCommonTruthPrimitiveDoubleArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject_UsingCorrespondence;
-@class ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison;
-@class IOSDoubleArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveDoubleArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison *)hasValuesNotWithinWithDouble:(jdouble)tolerance;
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison *)hasValuesWithinWithDouble:(jdouble)tolerance;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isEqualToWithId:(id)expected
-             withDouble:(jdouble)tolerance;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expectedArray
-                withDouble:(jdouble)tolerance;
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject *)namedWithNSString:(NSString *)arg0
-                                                     withNSObjectArray:(IOSObjectArray *)arg1;
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingExactEquality;
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingToleranceWithDouble:(jdouble)tolerance;
-
-#pragma mark Protected
-
-- (IOSDoubleArray *)actual;
-
-- (IOSDoubleArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                            withDoubleArray:(IOSDoubleArray *)o;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthPrimitiveDoubleArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSDoubleArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveDoubleArraySubject *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSDoubleArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveDoubleArraySubject *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSDoubleArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveDoubleArraySubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveDoubleArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison))
-#define ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_
-
-@class IOSDoubleArray;
-@protocol JavaLangIterable;
-
-@interface ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison : NSObject
-
-#pragma mark Public
-
-- (jboolean)isEqual:(id)o;
-
-- (NSUInteger)hash;
-
-- (void)ofWithDoubleArray:(IOSDoubleArray *)expected;
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveDoubleArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveDoubleArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveDoubleArraySubject.m
deleted file mode 100644
index f687a20d6..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveDoubleArraySubject.m
+++ /dev/null
@@ -1,543 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthCorrespondence.h"
-#include "ComGoogleCommonTruthDoubleSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthMathUtil.h"
-#include "ComGoogleCommonTruthPrimitiveDoubleArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/Iterables.h"
-#include "com/google/common/primitives/Doubles.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Double.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-inline ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthPrimitiveDoubleArraySubject_get_EXACT_EQUALITY_CORRESPONDENCE();
-static ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthPrimitiveDoubleArraySubject_EXACT_EQUALITY_CORRESPONDENCE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthPrimitiveDoubleArraySubject, EXACT_EQUALITY_CORRESPONDENCE, ComGoogleCommonTruthCorrespondence *)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$5();
-
-@interface ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_init(ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$2();
-
-@interface ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 : ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison {
- @public
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject *this$0_;
-  jdouble val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveDoubleArraySubject:(ComGoogleCommonTruthPrimitiveDoubleArraySubject *)outer$
-                                                             withDouble:(jdouble)capture$0;
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveDoubleArraySubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 *self, ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0);
-
-@interface ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 : ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison {
- @public
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject *this$0_;
-  jdouble val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveDoubleArraySubject:(ComGoogleCommonTruthPrimitiveDoubleArraySubject *)outer$
-                                                             withDouble:(jdouble)capture$0;
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveDoubleArraySubject_2)
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 *self, ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0);
-
-@interface ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 : ComGoogleCommonTruthCorrespondence
-
-- (instancetype)init;
-
-- (jboolean)compareWithId:(JavaLangDouble *)actual
-                   withId:(JavaLangDouble *)expected;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveDoubleArraySubject_3)
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init(ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init();
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthPrimitiveDoubleArraySubject)
-
-@implementation ComGoogleCommonTruthPrimitiveDoubleArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                            withDoubleArray:(IOSDoubleArray *)o {
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"double";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Comparing raw equality of doubles is often unsafe. Use either usingTolerance(someTolerance).containsExactly(someValues).inOrder() to compare witha tolerance or usingExactEquality().containsExactly(someValues).inOrder() if youreally want exact equality instead.");
-}
-
-- (void)isEqualToWithId:(id)expected
-             withDouble:(jdouble)tolerance {
-  IOSDoubleArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSDoubleArray *expectedArray = (IOSDoubleArray *) cast_chk(expected, [IOSDoubleArray class]);
-    if (((IOSDoubleArray *) nil_chk(expectedArray))->size_ != ((IOSDoubleArray *) nil_chk(actual))->size_) {
-      [self failWithRawMessageWithNSString:@"Arrays are of different lengths. expected: %s, actual %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(expectedArray), ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(actual) } count:2 type:NSObject_class_()]];
-    }
-    id<JavaUtilList> unequalIndices = create_JavaUtilArrayList_init();
-    for (jint i = 0; i < expectedArray->size_; i++) {
-      if (!ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(actual, i), IOSDoubleArray_Get(expectedArray, i), tolerance)) {
-        [unequalIndices addWithId:JavaLangInteger_valueOfWithInt_(i)];
-      }
-    }
-    if (![unequalIndices isEmpty]) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Comparing raw equality of doubles is unsafe, use isNotEqualTo(double[] array, double tolerance) instead.");
-}
-
-- (void)isNotEqualToWithId:(id)expectedArray
-                withDouble:(jdouble)tolerance {
-  IOSDoubleArray *actual = [self actual];
-  @try {
-    IOSDoubleArray *expected = (IOSDoubleArray *) cast_chk(expectedArray, [IOSDoubleArray class]);
-    if (actual == expected) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(expected) } count:2 type:NSObject_class_()]];
-    }
-    if (((IOSDoubleArray *) nil_chk(expected))->size_ != ((IOSDoubleArray *) nil_chk(actual))->size_) {
-      return;
-    }
-    id<JavaUtilList> unequalIndices = create_JavaUtilArrayList_init();
-    for (jint i = 0; i < expected->size_; i++) {
-      if (!ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(actual, i), IOSDoubleArray_Get(expected, i), tolerance)) {
-        [unequalIndices addWithId:JavaLangInteger_valueOfWithInt_(i)];
-      }
-    }
-    if ([unequalIndices isEmpty]) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(expected) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison *)hasValuesWithinWithDouble:(jdouble)tolerance {
-  return create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(self, tolerance);
-}
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison *)hasValuesNotWithinWithDouble:(jdouble)tolerance {
-  return create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(self, tolerance);
-}
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingToleranceWithDouble:(jdouble)tolerance {
-  return [create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]) comparingElementsUsingWithComGoogleCommonTruthCorrespondence:ComGoogleCommonTruthCorrespondence_toleranceWithDouble_(tolerance)];
-}
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingExactEquality {
-  return [create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]) comparingElementsUsingWithComGoogleCommonTruthCorrespondence:ComGoogleCommonTruthPrimitiveDoubleArraySubject_EXACT_EQUALITY_CORRESPONDENCE];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, 5, -1 },
-    { NULL, "V", 0x1, 3, 6, -1, -1, 7, -1 },
-    { NULL, "V", 0x1, 8, 4, -1, -1, 9, -1 },
-    { NULL, "V", 0x1, 8, 6, -1, -1, 10, -1 },
-    { NULL, "LComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison;", 0x1, 11, 12, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison;", 0x1, 13, 12, -1, -1, 14, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", 0x1, 15, 12, -1, 16, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", 0x1, -1, -1, -1, 17, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withDoubleArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isEqualToWithId:withDouble:);
-  methods[5].selector = @selector(isNotEqualToWithId:);
-  methods[6].selector = @selector(isNotEqualToWithId:withDouble:);
-  methods[7].selector = @selector(hasValuesWithinWithDouble:);
-  methods[8].selector = @selector(hasValuesNotWithinWithDouble:);
-  methods[9].selector = @selector(usingToleranceWithDouble:);
-  methods[10].selector = @selector(usingExactEquality);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EXACT_EQUALITY_CORRESPONDENCE", "LComGoogleCommonTruthCorrespondence;", .constantValue.asLong = 0, 0x1a, -1, 18, 19, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[D", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Double;>;", "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$1, "LNSObject;D", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$2, "isNotEqualTo", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$3, (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$4, "hasValuesWithin", "D", "hasValuesNotWithin", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$5, "usingTolerance", "(D)Lcom/google/common/truth/IterableSubject$UsingCorrespondence<Ljava/lang/Number;Ljava/lang/Number;>;", "()Lcom/google/common/truth/IterableSubject$UsingCorrespondence<Ljava/lang/Double;Ljava/lang/Double;>;", &ComGoogleCommonTruthPrimitiveDoubleArraySubject_EXACT_EQUALITY_CORRESPONDENCE, "Lcom/google/common/truth/Correspondence<Ljava/lang/Double;Ljava/lang/Double;>;", "LComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison;", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveDoubleArraySubject;[D>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveDoubleArraySubject = { "PrimitiveDoubleArraySubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 11, 1, -1, 20, -1, 21, -1 };
-  return &_ComGoogleCommonTruthPrimitiveDoubleArraySubject;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthPrimitiveDoubleArraySubject class]) {
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthPrimitiveDoubleArraySubject_EXACT_EQUALITY_CORRESPONDENCE, new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init());
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthPrimitiveDoubleArraySubject)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSDoubleArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSDoubleArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject, initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSDoubleArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject, initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveDoubleArraySubject)
-
-@implementation ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)ofWithDoubleArray:(IOSDoubleArray *)expected {
-  [self ofElementsInWithJavaLangIterable:ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(expected)];
-}
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (jboolean)isEqual:(id)o {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"If you meant to compare double arrays, use .of() or .ofElementsIn() instead.");
-}
-
-- (NSUInteger)hash {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Subject.hashCode() is not supported.");
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x81, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 2, 3, -1, 4, -1, -1 },
-    { NULL, "Z", 0x1, 5, 6, -1, -1, 7, 8 },
-    { NULL, "I", 0x1, 9, -1, -1, -1, 10, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(ofWithDoubleArray:);
-  methods[2].selector = @selector(ofElementsInWithJavaLangIterable:);
-  methods[3].selector = @selector(isEqual:);
-  methods[4].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "of", "[D", "ofElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/lang/Number;>;)V", "equals", "LNSObject;", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$0, (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$1, "hashCode", (void *)&ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$2, "LComGoogleCommonTruthPrimitiveDoubleArraySubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison = { "TolerantPrimitiveDoubleArrayComparison", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x409, 5, 0, 11, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_init(ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison *self) {
-  NSObject_init(self);
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison)
-
-@implementation ComGoogleCommonTruthPrimitiveDoubleArraySubject_1
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveDoubleArraySubject:(ComGoogleCommonTruthPrimitiveDoubleArraySubject *)outer$
-                                                             withDouble:(jdouble)capture$0 {
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(val$tolerance_);
-  IOSDoubleArray *actual = ComGoogleCommonBasePreconditions_checkNotNullWithId_([this$0_ actual]);
-  id<JavaUtilList> mismatches = create_JavaUtilArrayList_init();
-  jint expectedCount = 0;
-  for (NSNumber * __strong expectedValue in nil_chk(expected)) {
-    if (expectedCount < ((IOSDoubleArray *) nil_chk(actual))->size_ && !ComGoogleCommonTruthMathUtil_equalWithinToleranceWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(actual, expectedCount), [((NSNumber *) nil_chk(expectedValue)) doubleValue], val$tolerance_)) {
-      [mismatches addWithId:JavaLangInteger_valueOfWithInt_(expectedCount)];
-    }
-    expectedCount++;
-  }
-  if (((IOSDoubleArray *) nil_chk(actual))->size_ != expectedCount) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], JavaLangDouble_valueOfWithDouble_(val$tolerance_), ComGoogleCommonCollectIterables_toStringWithJavaLangIterable_(expected), JavaLangInteger_valueOfWithInt_(expectedCount), JavaLangInteger_valueOfWithInt_(actual->size_) } count:5 type:NSObject_class_()]];
-  }
-  if (![mismatches isEmpty]) {
-    [this$0_ failWithBadResultsWithNSString:JreStrcat("$D$", @"has values within ", val$tolerance_, @" of") withId:ComGoogleCommonCollectIterables_toStringWithJavaLangIterable_(expected) withNSString:@"differs at indexes" withId:mismatches];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthPrimitiveDoubleArraySubject:withDouble:);
-  methods[1].selector = @selector(ofElementsInWithJavaLangIterable:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "ofElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/lang/Number;>;)V", "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", "hasValuesWithinWithDouble:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
-  return &_ComGoogleCommonTruthPrimitiveDoubleArraySubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 *self, ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_init(self);
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject_1, initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject_1 *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_1_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject_1, initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthPrimitiveDoubleArraySubject_2
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveDoubleArraySubject:(ComGoogleCommonTruthPrimitiveDoubleArraySubject *)outer$
-                                                             withDouble:(jdouble)capture$0 {
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthDoubleSubject_checkToleranceWithDouble_(val$tolerance_);
-  IOSDoubleArray *actual = ComGoogleCommonBasePreconditions_checkNotNullWithId_([this$0_ actual]);
-  jint expectedCount = 0;
-  for (NSNumber * __strong expectedValue in nil_chk(expected)) {
-    if (expectedCount < ((IOSDoubleArray *) nil_chk(actual))->size_ && ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(actual, expectedCount), [((NSNumber *) nil_chk(expectedValue)) doubleValue], val$tolerance_)) {
-      return;
-    }
-    expectedCount++;
-  }
-  if (((IOSDoubleArray *) nil_chk(actual))->size_ == expectedCount) {
-    [this$0_ failWithNSString:JreStrcat("$D$", @"has values not within ", val$tolerance_, @" of") withId:ComGoogleCommonCollectIterables_toStringWithJavaLangIterable_(expected)];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthPrimitiveDoubleArraySubject:withDouble:);
-  methods[1].selector = @selector(ofElementsInWithJavaLangIterable:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "ofElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/lang/Number;>;)V", "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", "hasValuesNotWithinWithDouble:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
-  return &_ComGoogleCommonTruthPrimitiveDoubleArraySubject_2;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 *self, ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_TolerantPrimitiveDoubleArrayComparison_init(self);
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject_2, initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject_2 *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_2_initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_(ComGoogleCommonTruthPrimitiveDoubleArraySubject *outer$, jdouble capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject_2, initWithComGoogleCommonTruthPrimitiveDoubleArraySubject_withDouble_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthPrimitiveDoubleArraySubject_3
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (jboolean)compareWithId:(JavaLangDouble *)actual
-                   withId:(JavaLangDouble *)expected {
-  return [((JavaLangDouble *) nil_chk(actual)) isEqual:ComGoogleCommonBasePreconditions_checkNotNullWithId_(expected)];
-}
-
-- (NSString *)description {
-  return @"is exactly equal to";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(compareWithId:withId:);
-  methods[2].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "compare", "LJavaLangDouble;LJavaLangDouble;", "toString", "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", "Lcom/google/common/truth/Correspondence<Ljava/lang/Double;Ljava/lang/Double;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, -1, 4, -1 };
-  return &_ComGoogleCommonTruthPrimitiveDoubleArraySubject_3;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init(ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 *self) {
-  ComGoogleCommonTruthCorrespondence_init(self);
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 *new_ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject_3, init)
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject_3 *create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_3_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveDoubleArraySubject_3, init)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveFloatArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveFloatArraySubject.h
deleted file mode 100644
index 07a2c49dd..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveFloatArraySubject.h
+++ /dev/null
@@ -1,118 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveFloatArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveFloatArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveFloatArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveFloatArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveFloatArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveFloatArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveFloatArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveFloatArraySubject))
-#define ComGoogleCommonTruthPrimitiveFloatArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject_UsingCorrespondence;
-@class ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison;
-@class IOSFloatArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveFloatArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison *)hasValuesNotWithinWithFloat:(jfloat)tolerance;
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison *)hasValuesWithinWithFloat:(jfloat)tolerance;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isEqualToWithId:(id)expected
-              withFloat:(jfloat)tolerance;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expectedArray
-                 withFloat:(jfloat)tolerance;
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject *)namedWithNSString:(NSString *)arg0
-                                                    withNSObjectArray:(IOSObjectArray *)arg1;
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingExactEquality;
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingToleranceWithFloat:(jfloat)tolerance;
-
-#pragma mark Protected
-
-- (IOSFloatArray *)actual;
-
-- (IOSFloatArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                             withFloatArray:(IOSFloatArray *)o;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthPrimitiveFloatArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(ComGoogleCommonTruthPrimitiveFloatArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSFloatArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveFloatArraySubject *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSFloatArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveFloatArraySubject *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSFloatArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveFloatArraySubject)
-
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveFloatArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison))
-#define ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_
-
-@class IOSFloatArray;
-@protocol JavaLangIterable;
-
-@interface ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison : NSObject
-
-#pragma mark Public
-
-- (jboolean)isEqual:(id)o;
-
-- (NSUInteger)hash;
-
-- (void)ofWithFloatArray:(IOSFloatArray *)expected;
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveFloatArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveFloatArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveFloatArraySubject.m
deleted file mode 100644
index 9d2033761..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveFloatArraySubject.m
+++ /dev/null
@@ -1,543 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthCorrespondence.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthFloatSubject.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthMathUtil.h"
-#include "ComGoogleCommonTruthPrimitiveFloatArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/Iterables.h"
-#include "com/google/common/primitives/Floats.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/ArrayList.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-inline ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthPrimitiveFloatArraySubject_get_EXACT_EQUALITY_CORRESPONDENCE();
-static ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthPrimitiveFloatArraySubject_EXACT_EQUALITY_CORRESPONDENCE;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthPrimitiveFloatArraySubject, EXACT_EQUALITY_CORRESPONDENCE, ComGoogleCommonTruthCorrespondence *)
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$5();
-
-@interface ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_init(ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$2();
-
-@interface ComGoogleCommonTruthPrimitiveFloatArraySubject_1 : ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison {
- @public
-  ComGoogleCommonTruthPrimitiveFloatArraySubject *this$0_;
-  jfloat val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveFloatArraySubject:(ComGoogleCommonTruthPrimitiveFloatArraySubject *)outer$
-                                                             withFloat:(jfloat)capture$0;
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveFloatArraySubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject_1 *self, ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveFloatArraySubject_1 *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveFloatArraySubject_1 *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0);
-
-@interface ComGoogleCommonTruthPrimitiveFloatArraySubject_2 : ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison {
- @public
-  ComGoogleCommonTruthPrimitiveFloatArraySubject *this$0_;
-  jfloat val$tolerance_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveFloatArraySubject:(ComGoogleCommonTruthPrimitiveFloatArraySubject *)outer$
-                                                             withFloat:(jfloat)capture$0;
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveFloatArraySubject_2)
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject_2 *self, ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0);
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveFloatArraySubject_2 *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveFloatArraySubject_2 *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0);
-
-@interface ComGoogleCommonTruthPrimitiveFloatArraySubject_3 : ComGoogleCommonTruthCorrespondence
-
-- (instancetype)init;
-
-- (jboolean)compareWithId:(JavaLangFloat *)actual
-                   withId:(JavaLangFloat *)expected;
-
-- (NSString *)description;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveFloatArraySubject_3)
-
-__attribute__((unused)) static void ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init(ComGoogleCommonTruthPrimitiveFloatArraySubject_3 *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveFloatArraySubject_3 *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthPrimitiveFloatArraySubject_3 *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init();
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthPrimitiveFloatArraySubject)
-
-@implementation ComGoogleCommonTruthPrimitiveFloatArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                             withFloatArray:(IOSFloatArray *)o {
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"float";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesFloats_asListWithFloatArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Comparing raw equality of floats is often unsafe. Use either usingTolerance(someTolerance).containsExactly(someValues).inOrder() to compare witha tolerance or usingExactEquality().containsExactly(someValues).inOrder() if youreally want exact equality instead.");
-}
-
-- (void)isEqualToWithId:(id)expected
-              withFloat:(jfloat)tolerance {
-  IOSFloatArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSFloatArray *expectedArray = (IOSFloatArray *) cast_chk(expected, [IOSFloatArray class]);
-    if (((IOSFloatArray *) nil_chk(expectedArray))->size_ != ((IOSFloatArray *) nil_chk(actual))->size_) {
-      [self failWithRawMessageWithNSString:@"Arrays are of different lengths. expected: %s, actual %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(expectedArray), ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(actual) } count:2 type:NSObject_class_()]];
-    }
-    id<JavaUtilList> unequalIndices = create_JavaUtilArrayList_init();
-    for (jint i = 0; i < expectedArray->size_; i++) {
-      if (!ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_(IOSFloatArray_Get(actual, i), IOSFloatArray_Get(expectedArray, i), tolerance)) {
-        [unequalIndices addWithId:JavaLangInteger_valueOfWithInt_(i)];
-      }
-    }
-    if (![unequalIndices isEmpty]) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Comparing raw equality of floats is unsafe, use isNotEqualTo(float[] array, float tolerance) instead.");
-}
-
-- (void)isNotEqualToWithId:(id)expectedArray
-                 withFloat:(jfloat)tolerance {
-  IOSFloatArray *actual = [self actual];
-  @try {
-    IOSFloatArray *expected = (IOSFloatArray *) cast_chk(expectedArray, [IOSFloatArray class]);
-    if (actual == expected) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(expected) } count:2 type:NSObject_class_()]];
-    }
-    if (((IOSFloatArray *) nil_chk(expected))->size_ != ((IOSFloatArray *) nil_chk(actual))->size_) {
-      return;
-    }
-    id<JavaUtilList> unequalIndices = create_JavaUtilArrayList_init();
-    for (jint i = 0; i < expected->size_; i++) {
-      if (!ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_(IOSFloatArray_Get(actual, i), IOSFloatArray_Get(expected, i), tolerance)) {
-        [unequalIndices addWithId:JavaLangInteger_valueOfWithInt_(i)];
-      }
-    }
-    if ([unequalIndices isEmpty]) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(expected) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison *)hasValuesWithinWithFloat:(jfloat)tolerance {
-  return create_ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(self, tolerance);
-}
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison *)hasValuesNotWithinWithFloat:(jfloat)tolerance {
-  return create_ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(self, tolerance);
-}
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingToleranceWithFloat:(jfloat)tolerance {
-  return [create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]) comparingElementsUsingWithComGoogleCommonTruthCorrespondence:ComGoogleCommonTruthCorrespondence_toleranceWithDouble_(tolerance)];
-}
-
-- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)usingExactEquality {
-  return [create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]) comparingElementsUsingWithComGoogleCommonTruthCorrespondence:ComGoogleCommonTruthPrimitiveFloatArraySubject_EXACT_EQUALITY_CORRESPONDENCE];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, 5, -1 },
-    { NULL, "V", 0x1, 3, 6, -1, -1, 7, -1 },
-    { NULL, "V", 0x1, 8, 4, -1, -1, 9, -1 },
-    { NULL, "V", 0x1, 8, 6, -1, -1, 10, -1 },
-    { NULL, "LComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison;", 0x1, 11, 12, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison;", 0x1, 13, 12, -1, -1, 14, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", 0x1, 15, 12, -1, 16, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject_UsingCorrespondence;", 0x1, -1, -1, -1, 17, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withFloatArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isEqualToWithId:withFloat:);
-  methods[5].selector = @selector(isNotEqualToWithId:);
-  methods[6].selector = @selector(isNotEqualToWithId:withFloat:);
-  methods[7].selector = @selector(hasValuesWithinWithFloat:);
-  methods[8].selector = @selector(hasValuesNotWithinWithFloat:);
-  methods[9].selector = @selector(usingToleranceWithFloat:);
-  methods[10].selector = @selector(usingExactEquality);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "EXACT_EQUALITY_CORRESPONDENCE", "LComGoogleCommonTruthCorrespondence;", .constantValue.asLong = 0, 0x1a, -1, 18, 19, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[F", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Float;>;", "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$1, "LNSObject;F", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$2, "isNotEqualTo", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$3, (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$4, "hasValuesWithin", "F", "hasValuesNotWithin", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$5, "usingTolerance", "(F)Lcom/google/common/truth/IterableSubject$UsingCorrespondence<Ljava/lang/Number;Ljava/lang/Number;>;", "()Lcom/google/common/truth/IterableSubject$UsingCorrespondence<Ljava/lang/Float;Ljava/lang/Float;>;", &ComGoogleCommonTruthPrimitiveFloatArraySubject_EXACT_EQUALITY_CORRESPONDENCE, "Lcom/google/common/truth/Correspondence<Ljava/lang/Float;Ljava/lang/Float;>;", "LComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison;", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveFloatArraySubject;[F>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveFloatArraySubject = { "PrimitiveFloatArraySubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 11, 1, -1, 20, -1, 21, -1 };
-  return &_ComGoogleCommonTruthPrimitiveFloatArraySubject;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthPrimitiveFloatArraySubject class]) {
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthPrimitiveFloatArraySubject_EXACT_EQUALITY_CORRESPONDENCE, new_ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init());
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthPrimitiveFloatArraySubject)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(ComGoogleCommonTruthPrimitiveFloatArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSFloatArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSFloatArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject, initWithComGoogleCommonTruthFailureStrategy_withFloatArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSFloatArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject, initWithComGoogleCommonTruthFailureStrategy_withFloatArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveFloatArraySubject)
-
-@implementation ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)ofWithFloatArray:(IOSFloatArray *)expected {
-  [self ofElementsInWithJavaLangIterable:ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(expected)];
-}
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-}
-
-- (jboolean)isEqual:(id)o {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"If you meant to compare float arrays, use .of() or .ofElementsIn() instead.");
-}
-
-- (NSUInteger)hash {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Subject.hashCode() is not supported.");
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x81, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x401, 2, 3, -1, 4, -1, -1 },
-    { NULL, "Z", 0x1, 5, 6, -1, -1, 7, 8 },
-    { NULL, "I", 0x1, 9, -1, -1, -1, 10, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(ofWithFloatArray:);
-  methods[2].selector = @selector(ofElementsInWithJavaLangIterable:);
-  methods[3].selector = @selector(isEqual:);
-  methods[4].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "of", "[F", "ofElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/lang/Number;>;)V", "equals", "LNSObject;", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$0, (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$1, "hashCode", (void *)&ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$2, "LComGoogleCommonTruthPrimitiveFloatArraySubject;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison = { "TolerantPrimitiveFloatArrayComparison", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x409, 5, 0, 11, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_init(ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison *self) {
-  NSObject_init(self);
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison)
-
-@implementation ComGoogleCommonTruthPrimitiveFloatArraySubject_1
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveFloatArraySubject:(ComGoogleCommonTruthPrimitiveFloatArraySubject *)outer$
-                                                             withFloat:(jfloat)capture$0 {
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(val$tolerance_);
-  IOSFloatArray *actual = ComGoogleCommonBasePreconditions_checkNotNullWithId_([this$0_ actual]);
-  id<JavaUtilList> mismatches = create_JavaUtilArrayList_init();
-  jint expectedCount = 0;
-  for (NSNumber * __strong expectedValue in nil_chk(expected)) {
-    if (expectedCount < ((IOSFloatArray *) nil_chk(actual))->size_ && !ComGoogleCommonTruthMathUtil_equalWithinToleranceWithFloat_withFloat_withFloat_(IOSFloatArray_Get(actual, expectedCount), [((NSNumber *) nil_chk(expectedValue)) floatValue], val$tolerance_)) {
-      [mismatches addWithId:JavaLangInteger_valueOfWithInt_(expectedCount)];
-    }
-    expectedCount++;
-  }
-  if (((IOSFloatArray *) nil_chk(actual))->size_ != expectedCount) {
-    [this$0_ failWithRawMessageWithNSString:@"Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [this$0_ actualAsString], JavaLangFloat_valueOfWithFloat_(val$tolerance_), ComGoogleCommonCollectIterables_toStringWithJavaLangIterable_(expected), JavaLangInteger_valueOfWithInt_(expectedCount), JavaLangInteger_valueOfWithInt_(actual->size_) } count:5 type:NSObject_class_()]];
-  }
-  if (![mismatches isEmpty]) {
-    [this$0_ failWithBadResultsWithNSString:JreStrcat("$F$", @"has values within ", val$tolerance_, @" of") withId:ComGoogleCommonCollectIterables_toStringWithJavaLangIterable_(expected) withNSString:@"differs at indexes" withId:mismatches];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthPrimitiveFloatArraySubject:withFloat:);
-  methods[1].selector = @selector(ofElementsInWithJavaLangIterable:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthPrimitiveFloatArraySubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "F", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "ofElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/lang/Number;>;)V", "LComGoogleCommonTruthPrimitiveFloatArraySubject;", "hasValuesWithinWithFloat:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveFloatArraySubject_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
-  return &_ComGoogleCommonTruthPrimitiveFloatArraySubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject_1 *self, ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_init(self);
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject_1 *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject_1, initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject_1 *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_1_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject_1, initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthPrimitiveFloatArraySubject_2
-
-- (instancetype)initWithComGoogleCommonTruthPrimitiveFloatArraySubject:(ComGoogleCommonTruthPrimitiveFloatArraySubject *)outer$
-                                                             withFloat:(jfloat)capture$0 {
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(self, outer$, capture$0);
-  return self;
-}
-
-- (void)ofElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected {
-  ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(val$tolerance_);
-  IOSFloatArray *actual = ComGoogleCommonBasePreconditions_checkNotNullWithId_([this$0_ actual]);
-  jint expectedCount = 0;
-  for (NSNumber * __strong expectedValue in nil_chk(expected)) {
-    if (expectedCount < ((IOSFloatArray *) nil_chk(actual))->size_ && ComGoogleCommonTruthMathUtil_notEqualWithinToleranceWithFloat_withFloat_withFloat_(IOSFloatArray_Get(actual, expectedCount), [((NSNumber *) nil_chk(expectedValue)) floatValue], val$tolerance_)) {
-      return;
-    }
-    expectedCount++;
-  }
-  if (((IOSFloatArray *) nil_chk(actual))->size_ == expectedCount) {
-    [this$0_ failWithNSString:JreStrcat("$F$", @"has values not within ", val$tolerance_, @" of") withId:ComGoogleCommonCollectIterables_toStringWithJavaLangIterable_(expected)];
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(this$0_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthPrimitiveFloatArraySubject:withFloat:);
-  methods[1].selector = @selector(ofElementsInWithJavaLangIterable:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "this$0_", "LComGoogleCommonTruthPrimitiveFloatArraySubject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$tolerance_", "F", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "ofElementsIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/lang/Number;>;)V", "LComGoogleCommonTruthPrimitiveFloatArraySubject;", "hasValuesNotWithinWithFloat:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveFloatArraySubject_2 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
-  return &_ComGoogleCommonTruthPrimitiveFloatArraySubject_2;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject_2 *self, ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) {
-  JreStrongAssign(&self->this$0_, outer$);
-  self->val$tolerance_ = capture$0;
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_TolerantPrimitiveFloatArrayComparison_init(self);
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject_2 *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject_2, initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_, outer$, capture$0)
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject_2 *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_2_initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_(ComGoogleCommonTruthPrimitiveFloatArraySubject *outer$, jfloat capture$0) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject_2, initWithComGoogleCommonTruthPrimitiveFloatArraySubject_withFloat_, outer$, capture$0)
-}
-
-@implementation ComGoogleCommonTruthPrimitiveFloatArraySubject_3
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (jboolean)compareWithId:(JavaLangFloat *)actual
-                   withId:(JavaLangFloat *)expected {
-  return [((JavaLangFloat *) nil_chk(actual)) isEqual:ComGoogleCommonBasePreconditions_checkNotNullWithId_(expected)];
-}
-
-- (NSString *)description {
-  return @"is exactly equal to";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(compareWithId:withId:);
-  methods[2].selector = @selector(description);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "compare", "LJavaLangFloat;LJavaLangFloat;", "toString", "LComGoogleCommonTruthPrimitiveFloatArraySubject;", "Lcom/google/common/truth/Correspondence<Ljava/lang/Float;Ljava/lang/Float;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveFloatArraySubject_3 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, -1, 4, -1 };
-  return &_ComGoogleCommonTruthPrimitiveFloatArraySubject_3;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init(ComGoogleCommonTruthPrimitiveFloatArraySubject_3 *self) {
-  ComGoogleCommonTruthCorrespondence_init(self);
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject_3 *new_ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject_3, init)
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject_3 *create_ComGoogleCommonTruthPrimitiveFloatArraySubject_3_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveFloatArraySubject_3, init)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveIntArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveIntArraySubject.h
deleted file mode 100644
index 168283f21..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveIntArraySubject.h
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveIntArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveIntArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveIntArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveIntArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveIntArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveIntArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveIntArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveIntArraySubject))
-#define ComGoogleCommonTruthPrimitiveIntArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSIntArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveIntArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthPrimitiveIntArraySubject *)namedWithNSString:(NSString *)arg0
-                                                  withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSIntArray *)actual;
-
-- (IOSIntArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withIntArray:(IOSIntArray *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveIntArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthPrimitiveIntArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveIntArraySubject *new_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveIntArraySubject *create_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveIntArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveIntArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveIntArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveIntArraySubject.m
deleted file mode 100644
index 85dc70a51..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveIntArraySubject.m
+++ /dev/null
@@ -1,113 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthPrimitiveIntArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Ints.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveIntArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthPrimitiveIntArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withIntArray:(IOSIntArray *)o {
-  ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"int";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesInts_asListWithIntArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSIntArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSIntArray *expectedArray = (IOSIntArray *) cast_chk(expected, [IOSIntArray class]);
-    if (!JavaUtilArrays_equalsWithIntArray_withIntArray_(actual, expectedArray)) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesInts_asListWithIntArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSIntArray *actual = [self actual];
-  @try {
-    IOSIntArray *expectedArray = (IOSIntArray *) cast_chk(expected, [IOSIntArray class]);
-    if (actual == expected || JavaUtilArrays_equalsWithIntArray_withIntArray_(actual, expectedArray)) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesInts_asListWithIntArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withIntArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isNotEqualToWithId:);
-  methods[5].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[I", (void *)&ComGoogleCommonTruthPrimitiveIntArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Integer;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveIntArraySubject;[I>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveIntArraySubject = { "PrimitiveIntArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthPrimitiveIntArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthPrimitiveIntArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveIntArraySubject *new_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveIntArraySubject, initWithComGoogleCommonTruthFailureStrategy_withIntArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveIntArraySubject *create_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveIntArraySubject, initWithComGoogleCommonTruthFailureStrategy_withIntArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveIntArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveIntArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveLongArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveLongArraySubject.h
deleted file mode 100644
index a46fe0255..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveLongArraySubject.h
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveLongArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveLongArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveLongArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveLongArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveLongArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveLongArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveLongArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveLongArraySubject))
-#define ComGoogleCommonTruthPrimitiveLongArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSLongArray;
-@class IOSObjectArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveLongArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthPrimitiveLongArraySubject *)namedWithNSString:(NSString *)arg0
-                                                   withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSLongArray *)actual;
-
-- (IOSLongArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                              withLongArray:(IOSLongArray *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveLongArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(ComGoogleCommonTruthPrimitiveLongArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSLongArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveLongArraySubject *new_ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSLongArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveLongArraySubject *create_ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSLongArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveLongArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveLongArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveLongArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveLongArraySubject.m
deleted file mode 100644
index e53f36b06..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveLongArraySubject.m
+++ /dev/null
@@ -1,113 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthPrimitiveLongArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Longs.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveLongArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthPrimitiveLongArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                              withLongArray:(IOSLongArray *)o {
-  ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"long";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesLongs_asListWithLongArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSLongArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSLongArray *expectedArray = (IOSLongArray *) cast_chk(expected, [IOSLongArray class]);
-    if (!JavaUtilArrays_equalsWithLongArray_withLongArray_(actual, expectedArray)) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesLongs_asListWithLongArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSLongArray *actual = [self actual];
-  @try {
-    IOSLongArray *expectedArray = (IOSLongArray *) cast_chk(expected, [IOSLongArray class]);
-    if (actual == expected || JavaUtilArrays_equalsWithLongArray_withLongArray_(actual, expectedArray)) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesLongs_asListWithLongArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withLongArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isNotEqualToWithId:);
-  methods[5].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[J", (void *)&ComGoogleCommonTruthPrimitiveLongArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Long;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveLongArraySubject;[J>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveLongArraySubject = { "PrimitiveLongArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthPrimitiveLongArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(ComGoogleCommonTruthPrimitiveLongArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSLongArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveLongArraySubject *new_ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSLongArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveLongArraySubject, initWithComGoogleCommonTruthFailureStrategy_withLongArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveLongArraySubject *create_ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSLongArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveLongArraySubject, initWithComGoogleCommonTruthFailureStrategy_withLongArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveLongArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveLongArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveShortArraySubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveShortArraySubject.h
deleted file mode 100644
index 5792ae55f..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveShortArraySubject.h
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveShortArraySubject")
-#ifdef RESTRICT_ComGoogleCommonTruthPrimitiveShortArraySubject
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveShortArraySubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthPrimitiveShortArraySubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthPrimitiveShortArraySubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthPrimitiveShortArraySubject_) && (INCLUDE_ALL_ComGoogleCommonTruthPrimitiveShortArraySubject || defined(INCLUDE_ComGoogleCommonTruthPrimitiveShortArraySubject))
-#define ComGoogleCommonTruthPrimitiveShortArraySubject_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractArraySubject 1
-#define INCLUDE_ComGoogleCommonTruthAbstractArraySubject 1
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthIterableSubject;
-@class IOSObjectArray;
-@class IOSShortArray;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthPrimitiveShortArraySubject : ComGoogleCommonTruthAbstractArraySubject
-
-#pragma mark Public
-
-- (ComGoogleCommonTruthIterableSubject *)asList;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isNotEqualToWithId:(id)expected;
-
-- (ComGoogleCommonTruthPrimitiveShortArraySubject *)namedWithNSString:(NSString *)arg0
-                                                    withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (IOSShortArray *)actual;
-
-- (IOSShortArray *)getSubject;
-
-- (id<JavaUtilList>)listRepresentation;
-
-- (NSString *)underlyingType;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                             withShortArray:(IOSShortArray *)o;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthPrimitiveShortArraySubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(ComGoogleCommonTruthPrimitiveShortArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSShortArray *o);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveShortArraySubject *new_ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSShortArray *o) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveShortArraySubject *create_ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSShortArray *o);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPrimitiveShortArraySubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPrimitiveShortArraySubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveShortArraySubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveShortArraySubject.m
deleted file mode 100644
index 56bdf9ca1..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthPrimitiveShortArraySubject.m
+++ /dev/null
@@ -1,113 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractArraySubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthPrimitiveShortArraySubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/primitives/Shorts.h"
-#include "java/lang/ClassCastException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Arrays.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveShortArraySubject__Annotations$0();
-
-@implementation ComGoogleCommonTruthPrimitiveShortArraySubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                             withShortArray:(IOSShortArray *)o {
-  ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(self, failureStrategy, o);
-  return self;
-}
-
-- (NSString *)underlyingType {
-  return @"short";
-}
-
-- (id<JavaUtilList>)listRepresentation {
-  return ComGoogleCommonPrimitivesShorts_asListWithShortArray_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  IOSShortArray *actual = [self actual];
-  if (actual == expected) {
-    return;
-  }
-  @try {
-    IOSShortArray *expectedArray = (IOSShortArray *) cast_chk(expected, [IOSShortArray class]);
-    if (!JavaUtilArrays_equalsWithShortArray_withShortArray_(actual, expectedArray)) {
-      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesShorts_asListWithShortArray_(expectedArray)];
-    }
-  }
-  @catch (JavaLangClassCastException *e) {
-    [self failWithBadTypeWithId:expected];
-  }
-}
-
-- (void)isNotEqualToWithId:(id)expected {
-  IOSShortArray *actual = [self actual];
-  @try {
-    IOSShortArray *expectedArray = (IOSShortArray *) cast_chk(expected, [IOSShortArray class]);
-    if (actual == expected || JavaUtilArrays_equalsWithShortArray_withShortArray_(actual, expectedArray)) {
-      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesShorts_asListWithShortArray_(expectedArray) } count:2 type:NSObject_class_()]];
-    }
-  }
-  @catch (JavaLangClassCastException *ignored) {
-  }
-}
-
-- (ComGoogleCommonTruthIterableSubject *)asList {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withShortArray:);
-  methods[1].selector = @selector(underlyingType);
-  methods[2].selector = @selector(listRepresentation);
-  methods[3].selector = @selector(isEqualToWithId:);
-  methods[4].selector = @selector(isNotEqualToWithId:);
-  methods[5].selector = @selector(asList);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[S", (void *)&ComGoogleCommonTruthPrimitiveShortArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Short;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveShortArraySubject;[S>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveShortArraySubject = { "PrimitiveShortArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthPrimitiveShortArraySubject;
-}
-
-@end
-
-void ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(ComGoogleCommonTruthPrimitiveShortArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSShortArray *o) {
-  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
-}
-
-ComGoogleCommonTruthPrimitiveShortArraySubject *new_ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSShortArray *o) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveShortArraySubject, initWithComGoogleCommonTruthFailureStrategy_withShortArray_, failureStrategy, o)
-}
-
-ComGoogleCommonTruthPrimitiveShortArraySubject *create_ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSShortArray *o) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveShortArraySubject, initWithComGoogleCommonTruthFailureStrategy_withShortArray_, failureStrategy, o)
-}
-
-IOSObjectArray *ComGoogleCommonTruthPrimitiveShortArraySubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveShortArraySubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthReflectionUtil.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthReflectionUtil.h
deleted file mode 100644
index e624c5c30..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthReflectionUtil.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthReflectionUtil")
-#ifdef RESTRICT_ComGoogleCommonTruthReflectionUtil
-#define INCLUDE_ALL_ComGoogleCommonTruthReflectionUtil 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthReflectionUtil 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthReflectionUtil
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthReflectionUtil_) && (INCLUDE_ALL_ComGoogleCommonTruthReflectionUtil || defined(INCLUDE_ComGoogleCommonTruthReflectionUtil))
-#define ComGoogleCommonTruthReflectionUtil_
-
-@class IOSClass;
-
-@interface ComGoogleCommonTruthReflectionUtil : NSObject
-
-#pragma mark Public
-
-+ (IOSClass *)typeParameterWithIOSClass:(IOSClass *)clazz
-                                withInt:(jint)paramIndex;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthReflectionUtil)
-
-FOUNDATION_EXPORT IOSClass *ComGoogleCommonTruthReflectionUtil_typeParameterWithIOSClass_withInt_(IOSClass *clazz, jint paramIndex);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthReflectionUtil)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthReflectionUtil")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthReflectionUtil.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthReflectionUtil.m
deleted file mode 100644
index a71b235ec..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthReflectionUtil.m
+++ /dev/null
@@ -1,81 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthReflectionUtil.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/IllegalArgumentException.h"
-#include "java/lang/reflect/ParameterizedType.h"
-#include "java/lang/reflect/Type.h"
-
-@interface ComGoogleCommonTruthReflectionUtil ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthReflectionUtil_init(ComGoogleCommonTruthReflectionUtil *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthReflectionUtil *new_ComGoogleCommonTruthReflectionUtil_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthReflectionUtil *create_ComGoogleCommonTruthReflectionUtil_init();
-
-@implementation ComGoogleCommonTruthReflectionUtil
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthReflectionUtil_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (IOSClass *)typeParameterWithIOSClass:(IOSClass *)clazz
-                                withInt:(jint)paramIndex {
-  return ComGoogleCommonTruthReflectionUtil_typeParameterWithIOSClass_withInt_(clazz, paramIndex);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LIOSClass;", 0x9, 0, 1, -1, 2, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(typeParameterWithIOSClass:withInt:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "typeParameter", "LIOSClass;I", "(Ljava/lang/Class<*>;I)Ljava/lang/Class<*>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthReflectionUtil = { "ReflectionUtil", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x10, 2, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthReflectionUtil;
-}
-
-@end
-
-void ComGoogleCommonTruthReflectionUtil_init(ComGoogleCommonTruthReflectionUtil *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthReflectionUtil *new_ComGoogleCommonTruthReflectionUtil_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthReflectionUtil, init)
-}
-
-ComGoogleCommonTruthReflectionUtil *create_ComGoogleCommonTruthReflectionUtil_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthReflectionUtil, init)
-}
-
-IOSClass *ComGoogleCommonTruthReflectionUtil_typeParameterWithIOSClass_withInt_(IOSClass *clazz, jint paramIndex) {
-  ComGoogleCommonTruthReflectionUtil_initialize();
-  id<JavaLangReflectType> superclass_ = [((IOSClass *) nil_chk(clazz)) getGenericSuperclass];
-  if (!([JavaLangReflectParameterizedType_class_() isInstance:superclass_])) {
-    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("@$", superclass_, @" isn't parameterized"));
-  }
-  IOSObjectArray *typeParams = [((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(superclass_, JavaLangReflectParameterizedType_class_())))) getActualTypeArguments];
-  if ([JavaLangReflectParameterizedType_class_() isInstance:IOSObjectArray_Get(nil_chk(typeParams), paramIndex)]) {
-    IOSObjectArray_Set(typeParams, paramIndex, [((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(IOSObjectArray_Get(typeParams, paramIndex), JavaLangReflectParameterizedType_class_())))) getRawType]);
-  }
-  return (IOSClass *) cast_chk(IOSObjectArray_Get(typeParams, paramIndex), [IOSClass class]);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthReflectionUtil)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSetMultimapSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSetMultimapSubject.h
deleted file mode 100644
index 9c0627d07..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSetMultimapSubject.h
+++ /dev/null
@@ -1,71 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthSetMultimapSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthSetMultimapSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthSetMultimapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthSetMultimapSubject))
-#define ComGoogleCommonTruthSetMultimapSubject_
-
-#define RESTRICT_ComGoogleCommonTruthMultimapSubject 1
-#define INCLUDE_ComGoogleCommonTruthMultimapSubject 1
-#include "ComGoogleCommonTruthMultimapSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol ComGoogleCommonCollectListMultimap;
-@protocol ComGoogleCommonCollectMultimap;
-@protocol ComGoogleCommonCollectSetMultimap;
-
-@interface ComGoogleCommonTruthSetMultimapSubject : ComGoogleCommonTruthMultimapSubject
-
-#pragma mark Public
-
-- (void)isEqualToWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)other;
-
-- (ComGoogleCommonTruthSetMultimapSubject *)namedWithNSString:(NSString *)format
-                                            withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (id<ComGoogleCommonCollectMultimap>)actual;
-
-- (id<ComGoogleCommonCollectMultimap>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                      withComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)multimap;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSetMultimapSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthSetMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSetMultimapSubject *new_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSetMultimapSubject *create_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSetMultimapSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSetMultimapSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSetMultimapSubject.m
deleted file mode 100644
index e57f18999..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSetMultimapSubject.m
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthMultimapSubject.h"
-#include "ComGoogleCommonTruthSetMultimapSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/collect/ListMultimap.h"
-#include "com/google/common/collect/SetMultimap.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSetMultimapSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSetMultimapSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSetMultimapSubject__Annotations$2();
-
-@implementation ComGoogleCommonTruthSetMultimapSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                      withComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)multimap {
-  ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(self, failureStrategy, multimap);
-  return self;
-}
-
-- (ComGoogleCommonTruthSetMultimapSubject *)namedWithNSString:(NSString *)format
-                                            withNSObjectArray:(IOSObjectArray *)args {
-  [super namedWithNSString:format withNSObjectArray:args];
-  return self;
-}
-
-- (void)isEqualToWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)other {
-  [super isEqualToWithId:other];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "LComGoogleCommonTruthSetMultimapSubject;", 0x81, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, 7, 8, 9 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonCollectSetMultimap:);
-  methods[1].selector = @selector(namedWithNSString:withNSObjectArray:);
-  methods[2].selector = @selector(isEqualToWithComGoogleCommonCollectListMultimap:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonCollectSetMultimap;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/collect/SetMultimap<**>;)V", (void *)&ComGoogleCommonTruthSetMultimapSubject__Annotations$0, "named", "LNSString;[LNSObject;", "isEqualTo", "LComGoogleCommonCollectListMultimap;", "(Lcom/google/common/collect/ListMultimap<**>;)V", (void *)&ComGoogleCommonTruthSetMultimapSubject__Annotations$1, (void *)&ComGoogleCommonTruthSetMultimapSubject__Annotations$2 };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSetMultimapSubject = { "SetMultimapSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthSetMultimapSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthSetMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap) {
-  ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_(self, failureStrategy, multimap);
-}
-
-ComGoogleCommonTruthSetMultimapSubject *new_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSetMultimapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_, failureStrategy, multimap)
-}
-
-ComGoogleCommonTruthSetMultimapSubject *create_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSetMultimapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_, failureStrategy, multimap)
-}
-
-IOSObjectArray *ComGoogleCommonTruthSetMultimapSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSetMultimapSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSetMultimapSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSetMultimapSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedMapSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedMapSubject.h
deleted file mode 100644
index 2fd8e900b..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedMapSubject.h
+++ /dev/null
@@ -1,78 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSortedMapSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthSortedMapSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthSortedMapSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthSortedMapSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthSortedMapSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthSortedMapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthSortedMapSubject || defined(INCLUDE_ComGoogleCommonTruthSortedMapSubject))
-#define ComGoogleCommonTruthSortedMapSubject_
-
-#define RESTRICT_ComGoogleCommonTruthMapSubject 1
-#define INCLUDE_ComGoogleCommonTruthMapSubject 1
-#include "ComGoogleCommonTruthMapSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol JavaUtilMap;
-@protocol JavaUtilSortedMap;
-
-@interface ComGoogleCommonTruthSortedMapSubject : ComGoogleCommonTruthMapSubject
-
-#pragma mark Public
-
-- (void)hasFirstEntryWithId:(id)key
-                     withId:(id)value;
-
-- (void)hasFirstKeyWithId:(id)key;
-
-- (void)hasLastEntryWithId:(id)key
-                    withId:(id)value;
-
-- (void)hasLastKeyWithId:(id)key;
-
-- (ComGoogleCommonTruthSortedMapSubject *)namedWithNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (id<JavaUtilMap>)actual;
-
-- (id<JavaUtilMap>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                      withJavaUtilSortedMap:(id<JavaUtilSortedMap>)map;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSortedMapSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(ComGoogleCommonTruthSortedMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedMap> map);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSortedMapSubject *new_ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedMap> map) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSortedMapSubject *create_ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedMap> map);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSortedMapSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSortedMapSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedMapSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedMapSubject.m
deleted file mode 100644
index 486a22ad4..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedMapSubject.m
+++ /dev/null
@@ -1,482 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthMapSubject.h"
-#include "ComGoogleCommonTruthSortedMapSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/ForwardingSortedMap.h"
-#include "com/google/common/collect/Iterables.h"
-#include "com/google/common/collect/Maps.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Iterator.h"
-#include "java/util/LinkedHashSet.h"
-#include "java/util/Map.h"
-#include "java/util/NavigableMap.h"
-#include "java/util/NavigableSet.h"
-#include "java/util/NoSuchElementException.h"
-#include "java/util/Set.h"
-#include "java/util/SortedMap.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthSortedMapSubject () {
- @public
-  id<JavaUtilNavigableMap> actualAsNavigableMap_;
-}
-
-- (id<JavaUtilNavigableMap>)actualAsNavigableMap;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSortedMapSubject, actualAsNavigableMap_, id<JavaUtilNavigableMap>)
-
-__attribute__((unused)) static id<JavaUtilNavigableMap> ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(ComGoogleCommonTruthSortedMapSubject *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$3();
-
-@interface ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap : ComGoogleCommonCollectForwardingSortedMap < JavaUtilNavigableMap > {
- @public
-  id<JavaUtilSortedMap> delegate_;
-}
-
-+ (id<JavaUtilNavigableMap>)wrapIfNecessaryWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)map;
-
-- (instancetype)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)delegate;
-
-- (id<JavaUtilSortedMap>)delegate;
-
-- (id<JavaUtilMap_Entry>)ceilingEntryWithId:(id)key;
-
-- (id)ceilingKeyWithId:(id)key;
-
-- (id<JavaUtilNavigableSet>)descendingKeySet;
-
-- (id<JavaUtilNavigableMap>)descendingMap;
-
-- (id<JavaUtilMap_Entry>)firstEntry;
-
-- (id<JavaUtilMap_Entry>)floorEntryWithId:(id)key;
-
-- (id)floorKeyWithId:(id)key;
-
-- (id<JavaUtilNavigableMap>)headMapWithId:(id)toKey
-                              withBoolean:(jboolean)inclusive;
-
-- (id<JavaUtilMap_Entry>)higherEntryWithId:(id)key;
-
-- (id)higherKeyWithId:(id)key;
-
-- (id<JavaUtilMap_Entry>)lastEntry;
-
-- (id<JavaUtilMap_Entry>)lowerEntryWithId:(id)key;
-
-- (id)lowerKeyWithId:(id)key;
-
-- (id<JavaUtilNavigableSet>)navigableKeySet;
-
-- (id<JavaUtilMap_Entry>)pollFirstEntry;
-
-- (id<JavaUtilMap_Entry>)pollLastEntry;
-
-- (id<JavaUtilNavigableMap>)subMapWithId:(id)fromKey
-                             withBoolean:(jboolean)fromInclusive
-                                  withId:(id)toKey
-                             withBoolean:(jboolean)toInclusive;
-
-- (id<JavaUtilNavigableMap>)tailMapWithId:(id)fromKey
-                              withBoolean:(jboolean)inclusive;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap, delegate_, id<JavaUtilSortedMap>)
-
-__attribute__((unused)) static id<JavaUtilNavigableMap> ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_wrapIfNecessaryWithJavaUtilSortedMap_(id<JavaUtilSortedMap> map);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap *self, id<JavaUtilSortedMap> delegate);
-
-__attribute__((unused)) static ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap *new_ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> delegate) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap *create_ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> delegate);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap)
-
-@implementation ComGoogleCommonTruthSortedMapSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                      withJavaUtilSortedMap:(id<JavaUtilSortedMap>)map {
-  ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(self, failureStrategy, map);
-  return self;
-}
-
-- (ComGoogleCommonTruthSortedMapSubject *)namedWithNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args {
-  [super namedWithNSString:format withNSObjectArray:args];
-  return self;
-}
-
-- (void)hasFirstKeyWithId:(id)key {
-  if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) isEmpty]) {
-    [self failWithNSString:@"has first key" withId:key];
-  }
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) firstKey], key)) {
-    if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) containsKeyWithId:key]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has first key <%s>. It does contain this key, but the first key is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], key, [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) firstKey] } count:3 type:NSObject_class_()]];
-    }
-    [self failWithRawMessageWithNSString:@"Not true that %s has first key <%s>. It does not contain this key, and the first key is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], key, [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) firstKey] } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)hasFirstEntryWithId:(id)key
-                     withId:(id)value {
-  id<JavaUtilMap_Entry> expectedEntry = ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value);
-  if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) isEmpty]) {
-    [self failWithNSString:@"has first entry" withId:expectedEntry];
-  }
-  id<JavaUtilMap_Entry> actualFirstEntry = [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) firstEntry];
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_(actualFirstEntry, expectedEntry)) {
-    id actualFirstKey = [((id<JavaUtilMap_Entry>) nil_chk(actualFirstEntry)) getKey];
-    if ([((id<JavaUtilSet>) nil_chk([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) entrySet])) containsWithId:expectedEntry]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has first entry <%s>. It does contain this entry, but the first entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, actualFirstEntry } count:3 type:NSObject_class_()]];
-    }
-    if (ComGoogleCommonBaseObjects_equalWithId_withId_(actualFirstKey, key)) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has first entry <%s>, the first value is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, [actualFirstEntry getValue] } count:3 type:NSObject_class_()]];
-    }
-    if (ComGoogleCommonBaseObjects_equalWithId_withId_([actualFirstEntry getValue], value)) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has first entry <%s>, the first key is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, actualFirstKey } count:3 type:NSObject_class_()]];
-    }
-    if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) containsKeyWithId:key]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has first entry <%s>. It does contain this key, but the key is mapped to <%s>, and the first entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) getWithId:key], actualFirstEntry } count:4 type:NSObject_class_()]];
-    }
-    if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) containsValueWithId:value]) {
-      id<JavaUtilSet> keys = create_JavaUtilLinkedHashSet_init();
-      for (id<JavaUtilMap_Entry> __strong actualEntry in nil_chk([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) entrySet])) {
-        if (ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilMap_Entry>) nil_chk(actualEntry)) getValue], value)) {
-          [keys addWithId:[actualEntry getKey]];
-        }
-      }
-      [self failWithRawMessageWithNSString:@"Not true that %s has first entry <%s>. It does contain this value, but the value is mapped from the keys <%s>, and the first entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, keys, actualFirstEntry } count:4 type:NSObject_class_()]];
-    }
-    [self failWithRawMessageWithNSString:@"Not true that %s has first entry <%s>. It does not contain this entry, and the first entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, actualFirstEntry } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)hasLastKeyWithId:(id)key {
-  if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) isEmpty]) {
-    [self failWithNSString:@"has last key" withId:key];
-  }
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) lastKey], key)) {
-    if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) containsKeyWithId:key]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has last key <%s>. It does contain this key, but the last key is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], key, [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) lastKey] } count:3 type:NSObject_class_()]];
-    }
-    [self failWithRawMessageWithNSString:@"Not true that %s has last key <%s>. It does not contain this key, and the last key is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], key, [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) lastKey] } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)hasLastEntryWithId:(id)key
-                    withId:(id)value {
-  id<JavaUtilMap_Entry> expectedEntry = ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, value);
-  if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) isEmpty]) {
-    [self failWithNSString:@"has last entry" withId:expectedEntry];
-  }
-  id<JavaUtilMap_Entry> actualLastEntry = [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) lastEntry];
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_(actualLastEntry, expectedEntry)) {
-    id actualLastKey = [((id<JavaUtilMap_Entry>) nil_chk(actualLastEntry)) getKey];
-    if ([((id<JavaUtilSet>) nil_chk([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) entrySet])) containsWithId:expectedEntry]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has last entry <%s>. It does contain this entry, but the last entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, actualLastEntry } count:3 type:NSObject_class_()]];
-    }
-    if (ComGoogleCommonBaseObjects_equalWithId_withId_(actualLastKey, key)) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has last entry <%s>, the last value is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, [actualLastEntry getValue] } count:3 type:NSObject_class_()]];
-    }
-    if (ComGoogleCommonBaseObjects_equalWithId_withId_([actualLastEntry getValue], value)) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has last entry <%s>, the last key is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, actualLastKey } count:3 type:NSObject_class_()]];
-    }
-    if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) containsKeyWithId:key]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has last entry <%s>. It does contain this key, but the key is mapped to <%s>, and the last entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, [((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) getWithId:key], actualLastEntry } count:4 type:NSObject_class_()]];
-    }
-    if ([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) containsValueWithId:value]) {
-      id<JavaUtilSet> keys = create_JavaUtilLinkedHashSet_init();
-      for (id<JavaUtilMap_Entry> __strong actualEntry in nil_chk([((id<JavaUtilNavigableMap>) nil_chk(ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self))) entrySet])) {
-        if (ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilMap_Entry>) nil_chk(actualEntry)) getValue], value)) {
-          [keys addWithId:[actualEntry getKey]];
-        }
-      }
-      [self failWithRawMessageWithNSString:@"Not true that %s has last entry <%s>. It does contain this value, but the value is mapped from the keys <%s>, and the last entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, keys, actualLastEntry } count:4 type:NSObject_class_()]];
-    }
-    [self failWithRawMessageWithNSString:@"Not true that %s has last entry <%s>. It does not contain this entry, and the last entry is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], expectedEntry, actualLastEntry } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (id<JavaUtilNavigableMap>)actualAsNavigableMap {
-  return ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(self);
-}
-
-- (void)dealloc {
-  RELEASE_(actualAsNavigableMap_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthSortedMapSubject;", 0x81, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, 6 },
-    { NULL, "V", 0x1, 7, 8, -1, -1, -1, 9 },
-    { NULL, "V", 0x1, 10, 5, -1, -1, -1, 11 },
-    { NULL, "V", 0x1, 12, 8, -1, -1, -1, 13 },
-    { NULL, "LJavaUtilNavigableMap;", 0x2, -1, -1, -1, 14, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaUtilSortedMap:);
-  methods[1].selector = @selector(namedWithNSString:withNSObjectArray:);
-  methods[2].selector = @selector(hasFirstKeyWithId:);
-  methods[3].selector = @selector(hasFirstEntryWithId:withId:);
-  methods[4].selector = @selector(hasLastKeyWithId:);
-  methods[5].selector = @selector(hasLastEntryWithId:withId:);
-  methods[6].selector = @selector(actualAsNavigableMap);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "actualAsNavigableMap_", "LJavaUtilNavigableMap;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaUtilSortedMap;", "(Lcom/google/common/truth/FailureStrategy;Ljava/util/SortedMap<**>;)V", "named", "LNSString;[LNSObject;", "hasFirstKey", "LNSObject;", (void *)&ComGoogleCommonTruthSortedMapSubject__Annotations$0, "hasFirstEntry", "LNSObject;LNSObject;", (void *)&ComGoogleCommonTruthSortedMapSubject__Annotations$1, "hasLastKey", (void *)&ComGoogleCommonTruthSortedMapSubject__Annotations$2, "hasLastEntry", (void *)&ComGoogleCommonTruthSortedMapSubject__Annotations$3, "()Ljava/util/NavigableMap<**>;", "Ljava/util/NavigableMap<**>;", "LComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSortedMapSubject = { "SortedMapSubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 7, 1, -1, 16, -1, -1, -1 };
-  return &_ComGoogleCommonTruthSortedMapSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(ComGoogleCommonTruthSortedMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedMap> map) {
-  ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(self, failureStrategy, map);
-  JreStrongAssign(&self->actualAsNavigableMap_, map == nil ? nil : ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_wrapIfNecessaryWithJavaUtilSortedMap_(map));
-}
-
-ComGoogleCommonTruthSortedMapSubject *new_ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedMap> map) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSortedMapSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_, failureStrategy, map)
-}
-
-ComGoogleCommonTruthSortedMapSubject *create_ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedMap> map) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSortedMapSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_, failureStrategy, map)
-}
-
-id<JavaUtilNavigableMap> ComGoogleCommonTruthSortedMapSubject_actualAsNavigableMap(ComGoogleCommonTruthSortedMapSubject *self) {
-  return self->actualAsNavigableMap_;
-}
-
-IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSortedMapSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSortedMapSubject)
-
-@implementation ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap
-
-+ (id<JavaUtilNavigableMap>)wrapIfNecessaryWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)map {
-  return ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_wrapIfNecessaryWithJavaUtilSortedMap_(map);
-}
-
-- (instancetype)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)delegate {
-  ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(self, delegate);
-  return self;
-}
-
-- (id<JavaUtilSortedMap>)delegate {
-  return delegate_;
-}
-
-- (id<JavaUtilMap_Entry>)ceilingEntryWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)ceilingKeyWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableSet>)descendingKeySet {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableMap>)descendingMap {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilMap_Entry>)firstEntry {
-  id<JavaUtilIterator> entryIterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk([self delegate])) entrySet])) iterator];
-  return [((id<JavaUtilIterator>) nil_chk(entryIterator)) hasNext] ? [entryIterator next] : nil;
-}
-
-- (id<JavaUtilMap_Entry>)floorEntryWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)floorKeyWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableMap>)headMapWithId:(id)toKey
-                              withBoolean:(jboolean)inclusive {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilMap_Entry>)higherEntryWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)higherKeyWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilMap_Entry>)lastEntry {
-  @try {
-    id lastKey = [((id<JavaUtilSortedMap>) nil_chk([self delegate])) lastKey];
-    return ComGoogleCommonCollectIterables_getOnlyElementWithJavaLangIterable_([((id<JavaUtilSortedMap>) nil_chk([((id<JavaUtilSortedMap>) nil_chk([self delegate])) tailMapWithId:lastKey])) entrySet]);
-  }
-  @catch (JavaUtilNoSuchElementException *e) {
-    return nil;
-  }
-}
-
-- (id<JavaUtilMap_Entry>)lowerEntryWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)lowerKeyWithId:(id)key {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableSet>)navigableKeySet {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilMap_Entry>)pollFirstEntry {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilMap_Entry>)pollLastEntry {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableMap>)subMapWithId:(id)fromKey
-                             withBoolean:(jboolean)fromInclusive
-                                  withId:(id)toKey
-                             withBoolean:(jboolean)toInclusive {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableMap>)tailMapWithId:(id)fromKey
-                              withBoolean:(jboolean)inclusive {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (void)dealloc {
-  RELEASE_(delegate_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LJavaUtilNavigableMap;", 0x8, 0, 1, -1, 2, -1, -1 },
-    { NULL, NULL, 0x0, -1, 1, -1, 3, -1, -1 },
-    { NULL, "LJavaUtilSortedMap;", 0x4, -1, -1, -1, 4, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, 5, 6, -1, 7, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 8, 6, -1, 9, -1, -1 },
-    { NULL, "LJavaUtilNavigableSet;", 0x1, -1, -1, -1, 10, -1, -1 },
-    { NULL, "LJavaUtilNavigableMap;", 0x1, -1, -1, -1, 11, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 12, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, 13, 6, -1, 7, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 14, 6, -1, 9, -1, -1 },
-    { NULL, "LJavaUtilNavigableMap;", 0x1, 15, 16, -1, 17, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, 18, 6, -1, 7, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 19, 6, -1, 9, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 12, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, 20, 6, -1, 7, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 21, 6, -1, 9, -1, -1 },
-    { NULL, "LJavaUtilNavigableSet;", 0x1, -1, -1, -1, 10, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 12, -1, -1 },
-    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 12, -1, -1 },
-    { NULL, "LJavaUtilNavigableMap;", 0x1, 22, 23, -1, 24, -1, -1 },
-    { NULL, "LJavaUtilNavigableMap;", 0x1, 25, 16, -1, 17, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(wrapIfNecessaryWithJavaUtilSortedMap:);
-  methods[1].selector = @selector(initWithJavaUtilSortedMap:);
-  methods[2].selector = @selector(delegate);
-  methods[3].selector = @selector(ceilingEntryWithId:);
-  methods[4].selector = @selector(ceilingKeyWithId:);
-  methods[5].selector = @selector(descendingKeySet);
-  methods[6].selector = @selector(descendingMap);
-  methods[7].selector = @selector(firstEntry);
-  methods[8].selector = @selector(floorEntryWithId:);
-  methods[9].selector = @selector(floorKeyWithId:);
-  methods[10].selector = @selector(headMapWithId:withBoolean:);
-  methods[11].selector = @selector(higherEntryWithId:);
-  methods[12].selector = @selector(higherKeyWithId:);
-  methods[13].selector = @selector(lastEntry);
-  methods[14].selector = @selector(lowerEntryWithId:);
-  methods[15].selector = @selector(lowerKeyWithId:);
-  methods[16].selector = @selector(navigableKeySet);
-  methods[17].selector = @selector(pollFirstEntry);
-  methods[18].selector = @selector(pollLastEntry);
-  methods[19].selector = @selector(subMapWithId:withBoolean:withId:withBoolean:);
-  methods[20].selector = @selector(tailMapWithId:withBoolean:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "delegate_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 26, -1 },
-  };
-  static const void *ptrTable[] = { "wrapIfNecessary", "LJavaUtilSortedMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/SortedMap<TK;TV;>;)Ljava/util/NavigableMap<TK;TV;>;", "(Ljava/util/SortedMap<TK;TV;>;)V", "()Ljava/util/SortedMap<TK;TV;>;", "ceilingEntry", "LNSObject;", "(TK;)Ljava/util/Map$Entry<TK;TV;>;", "ceilingKey", "(TK;)TK;", "()Ljava/util/NavigableSet<TK;>;", "()Ljava/util/NavigableMap<TK;TV;>;", "()Ljava/util/Map$Entry<TK;TV;>;", "floorEntry", "floorKey", "headMap", "LNSObject;Z", "(TK;Z)Ljava/util/NavigableMap<TK;TV;>;", "higherEntry", "higherKey", "lowerEntry", "lowerKey", "subMap", "LNSObject;ZLNSObject;Z", "(TK;ZTK;Z)Ljava/util/NavigableMap<TK;TV;>;", "tailMap", "Ljava/util/SortedMap<TK;TV;>;", "LComGoogleCommonTruthSortedMapSubject;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingSortedMap<TK;TV;>;Ljava/util/NavigableMap<TK;TV;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap = { "SortedMapAsNavigableMap", "com.google.common.truth", ptrTable, methods, fields, 7, 0xa, 21, 1, 27, -1, -1, 28, -1 };
-  return &_ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap;
-}
-
-@end
-
-id<JavaUtilNavigableMap> ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_wrapIfNecessaryWithJavaUtilSortedMap_(id<JavaUtilSortedMap> map) {
-  ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initialize();
-  if ([JavaUtilNavigableMap_class_() isInstance:map]) {
-    return (id<JavaUtilNavigableMap>) cast_check(map, JavaUtilNavigableMap_class_());
-  }
-  return create_ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(map);
-}
-
-void ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap *self, id<JavaUtilSortedMap> delegate) {
-  ComGoogleCommonCollectForwardingSortedMap_init(self);
-  JreStrongAssign(&self->delegate_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate));
-}
-
-ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap *new_ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> delegate) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap, initWithJavaUtilSortedMap_, delegate)
-}
-
-ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap *create_ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> delegate) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap, initWithJavaUtilSortedMap_, delegate)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSortedMapSubject_SortedMapAsNavigableMap)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedSetSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedSetSubject.h
deleted file mode 100644
index b3038dde0..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedSetSubject.h
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSortedSetSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthSortedSetSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthSortedSetSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthSortedSetSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthSortedSetSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthSortedSetSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthSortedSetSubject || defined(INCLUDE_ComGoogleCommonTruthSortedSetSubject))
-#define ComGoogleCommonTruthSortedSetSubject_
-
-#define RESTRICT_ComGoogleCommonTruthIterableSubject 1
-#define INCLUDE_ComGoogleCommonTruthIterableSubject 1
-#include "ComGoogleCommonTruthIterableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol JavaLangIterable;
-@protocol JavaUtilSortedSet;
-
-@interface ComGoogleCommonTruthSortedSetSubject : ComGoogleCommonTruthIterableSubject
-
-#pragma mark Public
-
-- (void)hasFirstElementWithId:(id)element;
-
-- (void)hasLastElementWithId:(id)element;
-
-- (ComGoogleCommonTruthSortedSetSubject *)namedWithNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (id<JavaLangIterable>)actual;
-
-- (id<JavaLangIterable>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                      withJavaUtilSortedSet:(id<JavaUtilSortedSet>)set;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSortedSetSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(ComGoogleCommonTruthSortedSetSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedSet> set);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSortedSetSubject *new_ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedSet> set) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSortedSetSubject *create_ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedSet> set);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSortedSetSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSortedSetSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedSetSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedSetSubject.m
deleted file mode 100644
index 3ada993c7..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSortedSetSubject.m
+++ /dev/null
@@ -1,332 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthSortedSetSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/ForwardingSortedSet.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Iterator.h"
-#include "java/util/NavigableSet.h"
-#include "java/util/SortedSet.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthSortedSetSubject () {
- @public
-  id<JavaUtilNavigableSet> actualAsNavigableSet_;
-}
-
-- (id<JavaUtilNavigableSet>)actualAsNavigableSet;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSortedSetSubject, actualAsNavigableSet_, id<JavaUtilNavigableSet>)
-
-__attribute__((unused)) static id<JavaUtilNavigableSet> ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(ComGoogleCommonTruthSortedSetSubject *self);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSortedSetSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSortedSetSubject__Annotations$1();
-
-@interface ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet : ComGoogleCommonCollectForwardingSortedSet < JavaUtilNavigableSet > {
- @public
-  id<JavaUtilSortedSet> delegate_;
-}
-
-+ (id<JavaUtilNavigableSet>)wrapIfNecessaryWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)set;
-
-- (instancetype)initWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)delegate;
-
-- (id<JavaUtilSortedSet>)delegate;
-
-- (id)ceilingWithId:(id)e;
-
-- (id<JavaUtilIterator>)descendingIterator;
-
-- (id<JavaUtilNavigableSet>)descendingSet;
-
-- (id)floorWithId:(id)e;
-
-- (id<JavaUtilNavigableSet>)headSetWithId:(id)toElement
-                              withBoolean:(jboolean)inclusive;
-
-- (id)higherWithId:(id)e;
-
-- (id)lowerWithId:(id)e;
-
-- (id)pollFirst;
-
-- (id)pollLast;
-
-- (id<JavaUtilNavigableSet>)subSetWithId:(id)fromElement
-                             withBoolean:(jboolean)fromInclusive
-                                  withId:(id)toElement
-                             withBoolean:(jboolean)toInclusive;
-
-- (id<JavaUtilNavigableSet>)tailSetWithId:(id)fromElement
-                              withBoolean:(jboolean)inclusive;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet, delegate_, id<JavaUtilSortedSet>)
-
-__attribute__((unused)) static id<JavaUtilNavigableSet> ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_wrapIfNecessaryWithJavaUtilSortedSet_(id<JavaUtilSortedSet> set);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet *self, id<JavaUtilSortedSet> delegate);
-
-__attribute__((unused)) static ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet *new_ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(id<JavaUtilSortedSet> delegate) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet *create_ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(id<JavaUtilSortedSet> delegate);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet)
-
-@implementation ComGoogleCommonTruthSortedSetSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                      withJavaUtilSortedSet:(id<JavaUtilSortedSet>)set {
-  ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(self, failureStrategy, set);
-  return self;
-}
-
-- (ComGoogleCommonTruthSortedSetSubject *)namedWithNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args {
-  [super namedWithNSString:format withNSObjectArray:args];
-  return self;
-}
-
-- (void)hasFirstElementWithId:(id)element {
-  if ([((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) isEmpty]) {
-    [self failWithNSString:@"has first element" withId:element];
-  }
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) first], element)) {
-    if ([((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) containsWithId:element]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has first element <%s>. It does contain this element, but the first element is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], element, [((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) first] } count:3 type:NSObject_class_()]];
-    }
-    [self failWithRawMessageWithNSString:@"Not true that %s has first element <%s>. It does not contain this element, and the first element is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], element, [((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) first] } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)hasLastElementWithId:(id)element {
-  if ([((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) isEmpty]) {
-    [self failWithNSString:@"has last element" withId:element];
-  }
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_([((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) last], element)) {
-    if ([((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) containsWithId:element]) {
-      [self failWithRawMessageWithNSString:@"Not true that %s has last element <%s>. It does contain this element, but the last element is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], element, [((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) last] } count:3 type:NSObject_class_()]];
-    }
-    [self failWithRawMessageWithNSString:@"Not true that %s has last element <%s>. It does not contain this element, and the last element is <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], element, [((id<JavaUtilNavigableSet>) nil_chk(ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self))) last] } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (id<JavaUtilNavigableSet>)actualAsNavigableSet {
-  return ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(self);
-}
-
-- (void)dealloc {
-  RELEASE_(actualAsNavigableSet_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthSortedSetSubject;", 0x81, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 4, 5, -1, -1, -1, 6 },
-    { NULL, "V", 0x1, 7, 5, -1, -1, -1, 8 },
-    { NULL, "LJavaUtilNavigableSet;", 0x2, -1, -1, -1, 9, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaUtilSortedSet:);
-  methods[1].selector = @selector(namedWithNSString:withNSObjectArray:);
-  methods[2].selector = @selector(hasFirstElementWithId:);
-  methods[3].selector = @selector(hasLastElementWithId:);
-  methods[4].selector = @selector(actualAsNavigableSet);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "actualAsNavigableSet_", "LJavaUtilNavigableSet;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaUtilSortedSet;", "(Lcom/google/common/truth/FailureStrategy;Ljava/util/SortedSet<*>;)V", "named", "LNSString;[LNSObject;", "hasFirstElement", "LNSObject;", (void *)&ComGoogleCommonTruthSortedSetSubject__Annotations$0, "hasLastElement", (void *)&ComGoogleCommonTruthSortedSetSubject__Annotations$1, "()Ljava/util/NavigableSet<*>;", "Ljava/util/NavigableSet<*>;", "LComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSortedSetSubject = { "SortedSetSubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, 11, -1, -1, -1 };
-  return &_ComGoogleCommonTruthSortedSetSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(ComGoogleCommonTruthSortedSetSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedSet> set) {
-  ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(self, failureStrategy, set);
-  JreStrongAssign(&self->actualAsNavigableSet_, set == nil ? nil : ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_wrapIfNecessaryWithJavaUtilSortedSet_(set));
-}
-
-ComGoogleCommonTruthSortedSetSubject *new_ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedSet> set) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSortedSetSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_, failureStrategy, set)
-}
-
-ComGoogleCommonTruthSortedSetSubject *create_ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilSortedSet> set) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSortedSetSubject, initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_, failureStrategy, set)
-}
-
-id<JavaUtilNavigableSet> ComGoogleCommonTruthSortedSetSubject_actualAsNavigableSet(ComGoogleCommonTruthSortedSetSubject *self) {
-  return self->actualAsNavigableSet_;
-}
-
-IOSObjectArray *ComGoogleCommonTruthSortedSetSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSortedSetSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSortedSetSubject)
-
-@implementation ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet
-
-+ (id<JavaUtilNavigableSet>)wrapIfNecessaryWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)set {
-  return ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_wrapIfNecessaryWithJavaUtilSortedSet_(set);
-}
-
-- (instancetype)initWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)delegate {
-  ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(self, delegate);
-  return self;
-}
-
-- (id<JavaUtilSortedSet>)delegate {
-  return delegate_;
-}
-
-- (id)ceilingWithId:(id)e {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilIterator>)descendingIterator {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableSet>)descendingSet {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)floorWithId:(id)e {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableSet>)headSetWithId:(id)toElement
-                              withBoolean:(jboolean)inclusive {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)higherWithId:(id)e {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)lowerWithId:(id)e {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)pollFirst {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id)pollLast {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableSet>)subSetWithId:(id)fromElement
-                             withBoolean:(jboolean)fromInclusive
-                                  withId:(id)toElement
-                             withBoolean:(jboolean)toInclusive {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (id<JavaUtilNavigableSet>)tailSetWithId:(id)fromElement
-                              withBoolean:(jboolean)inclusive {
-  @throw create_JavaLangUnsupportedOperationException_init();
-}
-
-- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
-  return JreDefaultFastEnumeration(self, state, stackbuf, len);
-}
-
-- (void)dealloc {
-  RELEASE_(delegate_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LJavaUtilNavigableSet;", 0x8, 0, 1, -1, 2, -1, -1 },
-    { NULL, NULL, 0x0, -1, 1, -1, 3, -1, -1 },
-    { NULL, "LJavaUtilSortedSet;", 0x4, -1, -1, -1, 4, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 5, 6, -1, 7, -1, -1 },
-    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 8, -1, -1 },
-    { NULL, "LJavaUtilNavigableSet;", 0x1, -1, -1, -1, 9, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 10, 6, -1, 7, -1, -1 },
-    { NULL, "LJavaUtilNavigableSet;", 0x1, 11, 12, -1, 13, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 14, 6, -1, 7, -1, -1 },
-    { NULL, "LNSObject;", 0x1, 15, 6, -1, 7, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 16, -1, -1 },
-    { NULL, "LNSObject;", 0x1, -1, -1, -1, 16, -1, -1 },
-    { NULL, "LJavaUtilNavigableSet;", 0x1, 17, 18, -1, 19, -1, -1 },
-    { NULL, "LJavaUtilNavigableSet;", 0x1, 20, 12, -1, 13, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(wrapIfNecessaryWithJavaUtilSortedSet:);
-  methods[1].selector = @selector(initWithJavaUtilSortedSet:);
-  methods[2].selector = @selector(delegate);
-  methods[3].selector = @selector(ceilingWithId:);
-  methods[4].selector = @selector(descendingIterator);
-  methods[5].selector = @selector(descendingSet);
-  methods[6].selector = @selector(floorWithId:);
-  methods[7].selector = @selector(headSetWithId:withBoolean:);
-  methods[8].selector = @selector(higherWithId:);
-  methods[9].selector = @selector(lowerWithId:);
-  methods[10].selector = @selector(pollFirst);
-  methods[11].selector = @selector(pollLast);
-  methods[12].selector = @selector(subSetWithId:withBoolean:withId:withBoolean:);
-  methods[13].selector = @selector(tailSetWithId:withBoolean:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "delegate_", "LJavaUtilSortedSet;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
-  };
-  static const void *ptrTable[] = { "wrapIfNecessary", "LJavaUtilSortedSet;", "<E:Ljava/lang/Object;>(Ljava/util/SortedSet<TE;>;)Ljava/util/NavigableSet<TE;>;", "(Ljava/util/SortedSet<TE;>;)V", "()Ljava/util/SortedSet<TE;>;", "ceiling", "LNSObject;", "(TE;)TE;", "()Ljava/util/Iterator<TE;>;", "()Ljava/util/NavigableSet<TE;>;", "floor", "headSet", "LNSObject;Z", "(TE;Z)Ljava/util/NavigableSet<TE;>;", "higher", "lower", "()TE;", "subSet", "LNSObject;ZLNSObject;Z", "(TE;ZTE;Z)Ljava/util/NavigableSet<TE;>;", "tailSet", "Ljava/util/SortedSet<TE;>;", "LComGoogleCommonTruthSortedSetSubject;", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingSortedSet<TE;>;Ljava/util/NavigableSet<TE;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet = { "SortedSetAsNavigableSet", "com.google.common.truth", ptrTable, methods, fields, 7, 0xa, 14, 1, 22, -1, -1, 23, -1 };
-  return &_ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet;
-}
-
-@end
-
-id<JavaUtilNavigableSet> ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_wrapIfNecessaryWithJavaUtilSortedSet_(id<JavaUtilSortedSet> set) {
-  ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initialize();
-  if ([JavaUtilNavigableSet_class_() isInstance:set]) {
-    return (id<JavaUtilNavigableSet>) cast_check(set, JavaUtilNavigableSet_class_());
-  }
-  return create_ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(set);
-}
-
-void ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet *self, id<JavaUtilSortedSet> delegate) {
-  ComGoogleCommonCollectForwardingSortedSet_init(self);
-  JreStrongAssign(&self->delegate_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate));
-}
-
-ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet *new_ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(id<JavaUtilSortedSet> delegate) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet, initWithJavaUtilSortedSet_, delegate)
-}
-
-ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet *create_ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet_initWithJavaUtilSortedSet_(id<JavaUtilSortedSet> delegate) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet, initWithJavaUtilSortedSet_, delegate)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSortedSetSubject_SortedSetAsNavigableSet)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringSubject.h
deleted file mode 100644
index 71c34ddc1..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringSubject.h
+++ /dev/null
@@ -1,104 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthStringSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthStringSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthStringSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthStringSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthStringSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthStringSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthStringSubject || defined(INCLUDE_ComGoogleCommonTruthStringSubject))
-#define ComGoogleCommonTruthStringSubject_
-
-#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
-#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
-#include "ComGoogleCommonTruthComparableSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@class JavaUtilRegexPattern;
-@protocol JavaLangCharSequence;
-
-@interface ComGoogleCommonTruthStringSubject : ComGoogleCommonTruthComparableSubject
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)string;
-
-- (void)containsWithJavaLangCharSequence:(id<JavaLangCharSequence>)string;
-
-- (void)containsMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;
-
-- (void)containsMatchWithNSString:(NSString *)regex;
-
-- (void)doesNotContainWithJavaLangCharSequence:(id<JavaLangCharSequence>)string;
-
-- (void)doesNotContainMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;
-
-- (void)doesNotContainMatchWithNSString:(NSString *)regex;
-
-- (void)doesNotMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)regex;
-
-- (void)doesNotMatchWithNSString:(NSString *)regex;
-
-- (void)endsWithWithNSString:(NSString *)string;
-
-- (void)hasLengthWithInt:(jint)expectedLength;
-
-- (void)isEmpty;
-
-- (void)isEqualToWithId:(id)expected;
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(NSString *)other;
-
-- (void)isNotEmpty;
-
-- (void)isNull;
-
-- (void)matchesWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)regex;
-
-- (void)matchesWithNSString:(NSString *)regex;
-
-- (ComGoogleCommonTruthStringSubject *)namedWithNSString:(NSString *)arg0
-                                       withNSObjectArray:(IOSObjectArray *)arg1;
-
-- (void)startsWithWithNSString:(NSString *)string;
-
-#pragma mark Protected
-
-- (NSString *)actual;
-
-- (NSString *)actualCustomStringRepresentation;
-
-- (NSString *)getSubject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthStringSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthStringSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthStringSubject *new_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthStringSubject *create_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthStringSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthStringSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringSubject.m
deleted file mode 100644
index afc41a203..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringSubject.m
+++ /dev/null
@@ -1,296 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthPlatform.h"
-#include "ComGoogleCommonTruthStringSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Integer.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/regex/Matcher.h"
-#include "java/util/regex/Pattern.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthStringSubject ()
-
-+ (NSString *)quoteWithJavaLangCharSequence:(id<JavaLangCharSequence>)toBeWrapped;
-
-@end
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(id<JavaLangCharSequence> toBeWrapped);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$3();
-
-@implementation ComGoogleCommonTruthStringSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)string {
-  ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(self, failureStrategy, string);
-  return self;
-}
-
-- (NSString *)actualCustomStringRepresentation {
-  return ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_([self actual]);
-}
-
-- (void)isEqualToWithId:(id)expected {
-  if ([self actual] == nil) {
-    if (expected != nil) {
-      if ([expected isKindOfClass:[NSString class]]) {
-        [self failWithRawMessageWithNSString:JreStrcat("$$$", @"Not true that ", [self actualAsString], @" is equal to <%s>") withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_((NSString *) cast_chk(expected, [NSString class])) } count:1 type:NSObject_class_()]];
-      }
-      else {
-        [self failWithRawMessageWithNSString:JreStrcat("$$$", @"Not true that ", [self actualAsString], @" is equal to (%s)<%s>") withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [[expected java_getClass] getName], expected } count:2 type:NSObject_class_()]];
-      }
-    }
-  }
-  else {
-    if (expected == nil) {
-      [self isNull];
-    }
-    else if (!([expected isKindOfClass:[NSString class]])) {
-      [self failWithRawMessageWithNSString:@"Not true that %s is equal to (%s)<%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], [[expected java_getClass] getName], expected } count:3 type:NSObject_class_()]];
-    }
-    else if (![((NSString *) nil_chk([self actual])) isEqual:expected]) {
-      if ([self internalCustomName] != nil) {
-        [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failComparingWithNSString:JreStrcat("C$$", '"', [self internalCustomName], @"\":") withJavaLangCharSequence:(NSString *) cast_chk(expected, [NSString class]) withJavaLangCharSequence:[self actual]];
-      }
-      else {
-        [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failComparingWithNSString:@"" withJavaLangCharSequence:(NSString *) cast_chk(expected, [NSString class]) withJavaLangCharSequence:[self actual]];
-      }
-    }
-  }
-}
-
-- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(NSString *)other {
-  [super isEquivalentAccordingToCompareToWithJavaLangComparable:other];
-}
-
-- (void)isNull {
-  if ([self actual] != nil) {
-    [self failWithRawMessageWithNSString:@"Not true that %s is null" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString] } count:1 type:NSObject_class_()]];
-  }
-}
-
-- (void)hasLengthWithInt:(jint)expectedLength {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedLength >= 0, @"expectedLength(%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedLength) } count:1 type:NSObject_class_()]);
-  jint actualLength = ((jint) [((NSString *) nil_chk([self actual])) length]);
-  if (actualLength != expectedLength) {
-    [self failWithRawMessageWithNSString:@"Not true that %s has a length of %s. It is %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], JavaLangInteger_valueOfWithInt_(expectedLength), JavaLangInteger_valueOfWithInt_(actualLength) } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)isEmpty {
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"Not true that null reference is empty" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
-  }
-  else if (![((NSString *) nil_chk([self actual])) java_isEmpty]) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"Not true that null reference is not empty" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
-  }
-  else if ([((NSString *) nil_chk([self actual])) java_isEmpty]) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)containsWithJavaLangCharSequence:(id<JavaLangCharSequence>)string {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"Not true that null reference contains <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string) } count:1 type:NSObject_class_()]];
-  }
-  else if (![((NSString *) nil_chk([self actual])) java_contains:string]) {
-    [self failWithNSString:@"contains" withId:ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string)];
-  }
-}
-
-- (void)doesNotContainWithJavaLangCharSequence:(id<JavaLangCharSequence>)string {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"Not true that null reference contains <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string) } count:1 type:NSObject_class_()]];
-  }
-  else if ([((NSString *) nil_chk([self actual])) java_contains:string]) {
-    [self failWithRawMessageWithNSString:@"%s unexpectedly contains <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string) } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)startsWithWithNSString:(NSString *)string {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"Not true that null reference starts with <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string) } count:1 type:NSObject_class_()]];
-  }
-  else if (![((NSString *) nil_chk([self actual])) hasPrefix:string]) {
-    [self failWithNSString:@"starts with" withId:ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string)];
-  }
-}
-
-- (void)endsWithWithNSString:(NSString *)string {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
-  if ([self actual] == nil) {
-    [self failWithRawMessageWithNSString:@"Not true that null reference ends with <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string) } count:1 type:NSObject_class_()]];
-  }
-  else if (![((NSString *) nil_chk([self actual])) hasSuffix:string]) {
-    [self failWithNSString:@"ends with" withId:ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(string)];
-  }
-}
-
-- (void)matchesWithNSString:(NSString *)regex {
-  if (![((NSString *) nil_chk([self actual])) java_matches:regex]) {
-    [self failWithNSString:@"matches" withId:regex];
-  }
-}
-
-- (void)matchesWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)regex {
-  if (![((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(regex)) matcherWithJavaLangCharSequence:[self actual]])) matches]) {
-    [self failWithNSString:@"matches" withId:regex];
-  }
-}
-
-- (void)doesNotMatchWithNSString:(NSString *)regex {
-  if ([((NSString *) nil_chk([self actual])) java_matches:regex]) {
-    [self failWithNSString:@"fails to match" withId:regex];
-  }
-}
-
-- (void)doesNotMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)regex {
-  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(regex)) matcherWithJavaLangCharSequence:[self actual]])) matches]) {
-    [self failWithNSString:@"fails to match" withId:regex];
-  }
-}
-
-- (void)containsMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern {
-  if (![((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(pattern)) matcherWithJavaLangCharSequence:[self actual]])) find]) {
-    [self failWithRawMessageWithNSString:@"%s should have contained a match for <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], pattern } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)containsMatchWithNSString:(NSString *)regex {
-  if (!ComGoogleCommonTruthPlatform_containsMatchWithNSString_withNSString_([self actual], regex)) {
-    [self failWithRawMessageWithNSString:@"%s should have contained a match for <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], regex } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)doesNotContainMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern {
-  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(pattern)) matcherWithJavaLangCharSequence:[self actual]])) find]) {
-    [self failWithRawMessageWithNSString:@"%s should not have contained a match for <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], pattern } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)doesNotContainMatchWithNSString:(NSString *)regex {
-  if (ComGoogleCommonTruthPlatform_containsMatchWithNSString_withNSString_([self actual], regex)) {
-    [self failWithRawMessageWithNSString:@"%s should not have contained a match for <%s>" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], regex } count:2 type:NSObject_class_()]];
-  }
-}
-
-+ (NSString *)quoteWithJavaLangCharSequence:(id<JavaLangCharSequence>)toBeWrapped {
-  return ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(toBeWrapped);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, 1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, 4 },
-    { NULL, "V", 0x11, 5, 6, -1, -1, 7, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 12, 11, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 13, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 14, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 17, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 17, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 18, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 18, 6, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 19, 16, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 19, 6, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0xa, 20, 11, -1, -1, -1, 21 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSString:);
-  methods[1].selector = @selector(actualCustomStringRepresentation);
-  methods[2].selector = @selector(isEqualToWithId:);
-  methods[3].selector = @selector(isEquivalentAccordingToCompareToWithJavaLangComparable:);
-  methods[4].selector = @selector(isNull);
-  methods[5].selector = @selector(hasLengthWithInt:);
-  methods[6].selector = @selector(isEmpty);
-  methods[7].selector = @selector(isNotEmpty);
-  methods[8].selector = @selector(containsWithJavaLangCharSequence:);
-  methods[9].selector = @selector(doesNotContainWithJavaLangCharSequence:);
-  methods[10].selector = @selector(startsWithWithNSString:);
-  methods[11].selector = @selector(endsWithWithNSString:);
-  methods[12].selector = @selector(matchesWithNSString:);
-  methods[13].selector = @selector(matchesWithJavaUtilRegexPattern:);
-  methods[14].selector = @selector(doesNotMatchWithNSString:);
-  methods[15].selector = @selector(doesNotMatchWithJavaUtilRegexPattern:);
-  methods[16].selector = @selector(containsMatchWithJavaUtilRegexPattern:);
-  methods[17].selector = @selector(containsMatchWithNSString:);
-  methods[18].selector = @selector(doesNotContainMatchWithJavaUtilRegexPattern:);
-  methods[19].selector = @selector(doesNotContainMatchWithNSString:);
-  methods[20].selector = @selector(quoteWithJavaLangCharSequence:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LNSString;", (void *)&ComGoogleCommonTruthStringSubject__Annotations$0, "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthStringSubject__Annotations$1, "isEquivalentAccordingToCompareTo", "LNSString;", (void *)&ComGoogleCommonTruthStringSubject__Annotations$2, "hasLength", "I", "contains", "LJavaLangCharSequence;", "doesNotContain", "startsWith", "endsWith", "matches", "LJavaUtilRegexPattern;", "doesNotMatch", "containsMatch", "doesNotContainMatch", "quote", (void *)&ComGoogleCommonTruthStringSubject__Annotations$3, "Lcom/google/common/truth/ComparableSubject<Lcom/google/common/truth/StringSubject;Ljava/lang/String;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthStringSubject = { "StringSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 21, 0, -1, -1, -1, 22, -1 };
-  return &_ComGoogleCommonTruthStringSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthStringSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, string);
-}
-
-ComGoogleCommonTruthStringSubject *new_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthStringSubject, initWithComGoogleCommonTruthFailureStrategy_withNSString_, failureStrategy, string)
-}
-
-ComGoogleCommonTruthStringSubject *create_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthStringSubject, initWithComGoogleCommonTruthFailureStrategy_withNSString_, failureStrategy, string)
-}
-
-NSString *ComGoogleCommonTruthStringSubject_quoteWithJavaLangCharSequence_(id<JavaLangCharSequence> toBeWrapped) {
-  ComGoogleCommonTruthStringSubject_initialize();
-  return (toBeWrapped == nil) ? @"null" : JreStrcat("C@C", '"', toBeWrapped, '"');
-}
-
-IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthStringSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthStringSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringUtil.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringUtil.h
deleted file mode 100644
index fb7b10091..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringUtil.h
+++ /dev/null
@@ -1,53 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthStringUtil")
-#ifdef RESTRICT_ComGoogleCommonTruthStringUtil
-#define INCLUDE_ALL_ComGoogleCommonTruthStringUtil 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthStringUtil 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthStringUtil
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthStringUtil_) && (INCLUDE_ALL_ComGoogleCommonTruthStringUtil || defined(INCLUDE_ComGoogleCommonTruthStringUtil))
-#define ComGoogleCommonTruthStringUtil_
-
-@class IOSObjectArray;
-@protocol JavaLangCharSequence;
-
-@interface ComGoogleCommonTruthStringUtil : NSObject
-
-#pragma mark Package-Private
-
-+ (NSString *)formatWithNSString:(NSString *)template_
-               withNSObjectArray:(IOSObjectArray *)args;
-
-+ (NSString *)messageForWithNSString:(NSString *)message
-            withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-            withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthStringUtil)
-
-FOUNDATION_EXPORT NSString *ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(NSString *message, id<JavaLangCharSequence> expected, id<JavaLangCharSequence> actual);
-
-FOUNDATION_EXPORT NSString *ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(NSString *template_, IOSObjectArray *args);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthStringUtil)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthStringUtil")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringUtil.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringUtil.m
deleted file mode 100644
index 85280b86a..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthStringUtil.m
+++ /dev/null
@@ -1,117 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-@interface ComGoogleCommonTruthStringUtil ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthStringUtil_init(ComGoogleCommonTruthStringUtil *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthStringUtil *new_ComGoogleCommonTruthStringUtil_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthStringUtil *create_ComGoogleCommonTruthStringUtil_init();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthStringUtil__Annotations$0();
-
-@implementation ComGoogleCommonTruthStringUtil
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthStringUtil_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (NSString *)messageForWithNSString:(NSString *)message
-            withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-            withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  return ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(message, expected, actual);
-}
-
-+ (NSString *)formatWithNSString:(NSString *)template_
-               withNSObjectArray:(IOSObjectArray *)args {
-  return ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(template_, args);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x8, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x88, 2, 3, -1, -1, -1, 4 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(messageForWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  methods[2].selector = @selector(formatWithNSString:withNSObjectArray:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "messageFor", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "format", "LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthStringUtil__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthStringUtil = { "StringUtil", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x10, 3, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthStringUtil;
-}
-
-@end
-
-void ComGoogleCommonTruthStringUtil_init(ComGoogleCommonTruthStringUtil *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthStringUtil *new_ComGoogleCommonTruthStringUtil_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthStringUtil, init)
-}
-
-ComGoogleCommonTruthStringUtil *create_ComGoogleCommonTruthStringUtil_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthStringUtil, init)
-}
-
-NSString *ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(NSString *message, id<JavaLangCharSequence> expected, id<JavaLangCharSequence> actual) {
-  ComGoogleCommonTruthStringUtil_initialize();
-  return JreStrcat("$$@$@", ComGoogleCommonBasePreconditions_checkNotNullWithId_(message), @"\n\nExpected:\n", ComGoogleCommonBasePreconditions_checkNotNullWithId_(expected), @"\n\nActual:\n", ComGoogleCommonBasePreconditions_checkNotNullWithId_(actual));
-}
-
-NSString *ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(NSString *template_, IOSObjectArray *args) {
-  ComGoogleCommonTruthStringUtil_initialize();
-  template_ = NSString_java_valueOf_(template_);
-  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithInt_(((jint) [((NSString *) nil_chk(template_)) length]) + 16 * ((IOSObjectArray *) nil_chk(args))->size_);
-  jint templateStart = 0;
-  jint i = 0;
-  while (i < args->size_) {
-    jint placeholderStart = [template_ java_indexOfString:@"%s" fromIndex:templateStart];
-    if (placeholderStart == -1) {
-      break;
-    }
-    [builder appendWithNSString:[template_ java_substring:templateStart endIndex:placeholderStart]];
-    [builder appendWithId:IOSObjectArray_Get(args, i++)];
-    templateStart = placeholderStart + 2;
-  }
-  [builder appendWithNSString:[template_ java_substring:templateStart]];
-  if (i < args->size_) {
-    [builder appendWithNSString:@" ["];
-    [builder appendWithId:IOSObjectArray_Get(args, i++)];
-    while (i < args->size_) {
-      [builder appendWithNSString:@", "];
-      [builder appendWithId:IOSObjectArray_Get(args, i++)];
-    }
-    [builder appendWithChar:']'];
-  }
-  return [builder description];
-}
-
-IOSObjectArray *ComGoogleCommonTruthStringUtil__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthStringUtil)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubject.h
deleted file mode 100644
index 108d4aa1e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubject.h
+++ /dev/null
@@ -1,134 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthSubject || defined(INCLUDE_ComGoogleCommonTruthSubject))
-#define ComGoogleCommonTruthSubject_
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthTestVerb;
-@class IOSClass;
-@class IOSObjectArray;
-@protocol JavaLangIterable;
-
-@interface ComGoogleCommonTruthSubject : NSObject {
- @public
-  ComGoogleCommonTruthFailureStrategy *failureStrategy_;
-}
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                                     withId:(id)actual;
-
-- (jboolean)isEqual:(id)o;
-
-- (NSUInteger)hash;
-
-- (void)isAnyOfWithId:(id)first
-               withId:(id)second
-    withNSObjectArray:(IOSObjectArray *)rest;
-
-- (void)isEqualToWithId:(id)other;
-
-- (void)isInWithJavaLangIterable:(id<JavaLangIterable>)iterable;
-
-- (void)isInstanceOfWithIOSClass:(IOSClass *)clazz;
-
-- (void)isNoneOfWithId:(id)first
-                withId:(id)second
-     withNSObjectArray:(IOSObjectArray *)rest;
-
-- (void)isNotEqualToWithId:(id)other;
-
-- (void)isNotInWithJavaLangIterable:(id<JavaLangIterable>)iterable;
-
-- (void)isNotInstanceOfWithIOSClass:(IOSClass *)clazz;
-
-- (void)isNotNull;
-
-- (void)isNotSameAsWithId:(id)other;
-
-- (void)isNull;
-
-- (void)isSameAsWithId:(id)other;
-
-- (ComGoogleCommonTruthSubject *)namedWithNSString:(NSString *)format
-                                 withNSObjectArray:(IOSObjectArray *)args;
-
-#pragma mark Protected
-
-- (id)actual;
-
-- (NSString *)actualAsString;
-
-- (NSString *)actualCustomStringRepresentation;
-
-- (ComGoogleCommonTruthTestVerb *)check;
-
-- (void)failWithNSString:(NSString *)proposition;
-
-- (void)failWithNSString:(NSString *)verb
-                  withId:(id)other;
-
-- (void)failWithNSString:(NSString *)verb
-       withNSObjectArray:(IOSObjectArray *)messageParts;
-
-- (void)failWithBadResultsWithNSString:(NSString *)verb
-                                withId:(id)expected
-                          withNSString:(NSString *)failVerb
-                                withId:(id)actual;
-
-- (void)failWithCustomSubjectWithNSString:(NSString *)verb
-                                   withId:(id)expected
-                                   withId:(id)actual;
-
-- (void)failWithoutActualWithNSString:(NSString *)proposition;
-
-- (void)failWithoutSubjectWithNSString:(NSString *)proposition;
-
-- (void)failWithRawMessageWithNSString:(NSString *)message
-                     withNSObjectArray:(IOSObjectArray *)parameters;
-
-- (NSString *)getDisplaySubject;
-
-- (id)getSubject;
-
-- (NSString *)internalCustomName;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSubject)
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSubject, failureStrategy_, ComGoogleCommonTruthFailureStrategy *)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSubject *new_ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSubject *create_ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubject.m
deleted file mode 100644
index 2050b6bc9..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubject.m
+++ /dev/null
@@ -1,588 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthPlatform.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthSubjectUtils.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/base/Predicate.h"
-#include "com/google/common/base/Predicates.h"
-#include "com/google/common/collect/Iterables.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/Byte.h"
-#include "java/lang/Character.h"
-#include "java/lang/Deprecated.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/Long.h"
-#include "java/lang/NullPointerException.h"
-#include "java/lang/Short.h"
-#include "java/lang/StringBuilder.h"
-#include "java/lang/UnsupportedOperationException.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/List.h"
-#include "javax/annotation/Nullable.h"
-
-@interface ComGoogleCommonTruthSubject () {
- @public
-  id actual_;
-  NSString *customName_;
-}
-
-- (void)doEqualCheckWithId:(id)rawSubject
-                    withId:(id)rawOther
-               withBoolean:(jboolean)expectEqual;
-
-+ (jboolean)isIntegralBoxedPrimitiveWithId:(id)o;
-
-+ (JavaLangLong *)integralValueWithId:(id)o;
-
-- (void)failComparingToStringsWithNSString:(NSString *)verb
-                                    withId:(id)subject
-                                    withId:(id)other
-                                    withId:(id)displayOther
-                               withBoolean:(jboolean)compareToStrings;
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSubject, actual_, id)
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSubject, customName_, NSString *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_doEqualCheckWithId_withId_withBoolean_(ComGoogleCommonTruthSubject *self, id rawSubject, id rawOther, jboolean expectEqual);
-
-__attribute__((unused)) static jboolean ComGoogleCommonTruthSubject_isIntegralBoxedPrimitiveWithId_(id o);
-
-__attribute__((unused)) static JavaLangLong *ComGoogleCommonTruthSubject_integralValueWithId_(id o);
-
-__attribute__((unused)) static id ComGoogleCommonTruthSubject_actual(ComGoogleCommonTruthSubject *self);
-
-__attribute__((unused)) static NSString *ComGoogleCommonTruthSubject_actualAsString(ComGoogleCommonTruthSubject *self);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_failWithNSString_(ComGoogleCommonTruthSubject *self, NSString *proposition);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_failWithNSString_withId_(ComGoogleCommonTruthSubject *self, NSString *verb, id other);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_failComparingToStringsWithNSString_withId_withId_withId_withBoolean_(ComGoogleCommonTruthSubject *self, NSString *verb, id subject, id other, id displayOther, jboolean compareToStrings);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_failWithBadResultsWithNSString_withId_withNSString_withId_(ComGoogleCommonTruthSubject *self, NSString *verb, id expected, NSString *failVerb, id actual);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_failWithoutSubjectWithNSString_(ComGoogleCommonTruthSubject *self, NSString *proposition);
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubject_failWithoutActualWithNSString_(ComGoogleCommonTruthSubject *self, NSString *proposition);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$8();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$9();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$10();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$11();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$12();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$13();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$14();
-
-@implementation ComGoogleCommonTruthSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                                     withId:(id)actual {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, actual);
-  return self;
-}
-
-- (NSString *)internalCustomName {
-  return customName_;
-}
-
-- (ComGoogleCommonTruthSubject *)namedWithNSString:(NSString *)format
-                                 withNSObjectArray:(IOSObjectArray *)args {
-  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(format, @"Name passed to named() cannot be null.");
-  JreStrongAssign(&self->customName_, ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(format, args));
-  return self;
-}
-
-- (void)isNull {
-  if (ComGoogleCommonTruthSubject_actual(self) != nil) {
-    ComGoogleCommonTruthSubject_failWithNSString_(self, @"is null");
-  }
-}
-
-- (void)isNotNull {
-  if (ComGoogleCommonTruthSubject_actual(self) == nil) {
-    ComGoogleCommonTruthSubject_failWithoutActualWithNSString_(self, @"is a non-null reference");
-  }
-}
-
-- (void)isEqualToWithId:(id)other {
-  ComGoogleCommonTruthSubject_doEqualCheckWithId_withId_withBoolean_(self, ComGoogleCommonTruthSubject_actual(self), other, true);
-}
-
-- (void)isNotEqualToWithId:(id)other {
-  ComGoogleCommonTruthSubject_doEqualCheckWithId_withId_withBoolean_(self, ComGoogleCommonTruthSubject_actual(self), other, false);
-}
-
-- (void)doEqualCheckWithId:(id)rawSubject
-                    withId:(id)rawOther
-               withBoolean:(jboolean)expectEqual {
-  ComGoogleCommonTruthSubject_doEqualCheckWithId_withId_withBoolean_(self, rawSubject, rawOther, expectEqual);
-}
-
-+ (jboolean)isIntegralBoxedPrimitiveWithId:(id)o {
-  return ComGoogleCommonTruthSubject_isIntegralBoxedPrimitiveWithId_(o);
-}
-
-+ (JavaLangLong *)integralValueWithId:(id)o {
-  return ComGoogleCommonTruthSubject_integralValueWithId_(o);
-}
-
-- (void)isSameAsWithId:(id)other {
-  if (ComGoogleCommonTruthSubject_actual(self) != other) {
-    ComGoogleCommonTruthSubject_failComparingToStringsWithNSString_withId_withId_withId_withBoolean_(self, @"is the same instance as", ComGoogleCommonTruthSubject_actual(self), other, other, true);
-  }
-}
-
-- (void)isNotSameAsWithId:(id)other {
-  if (ComGoogleCommonTruthSubject_actual(self) == other) {
-    ComGoogleCommonTruthSubject_failWithNSString_withId_(self, @"is not the same instance as", other);
-  }
-}
-
-- (void)isInstanceOfWithIOSClass:(IOSClass *)clazz {
-  if (clazz == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"clazz");
-  }
-  if (!ComGoogleCommonTruthPlatform_isInstanceOfTypeWithId_withIOSClass_(ComGoogleCommonTruthSubject_actual(self), clazz)) {
-    if (ComGoogleCommonTruthSubject_actual(self) != nil) {
-      ComGoogleCommonTruthSubject_failWithBadResultsWithNSString_withId_withNSString_withId_(self, @"is an instance of", [clazz getName], @"is an instance of", [[nil_chk(ComGoogleCommonTruthSubject_actual(self)) java_getClass] getName]);
-    }
-    else {
-      ComGoogleCommonTruthSubject_failWithNSString_withId_(self, @"is an instance of", [clazz getName]);
-    }
-  }
-}
-
-- (void)isNotInstanceOfWithIOSClass:(IOSClass *)clazz {
-  if (clazz == nil) {
-    @throw create_JavaLangNullPointerException_initWithNSString_(@"clazz");
-  }
-  if (ComGoogleCommonTruthSubject_actual(self) == nil) {
-    return;
-  }
-  if (ComGoogleCommonTruthPlatform_isInstanceOfTypeWithId_withIOSClass_(ComGoogleCommonTruthSubject_actual(self), clazz)) {
-    [self failWithRawMessageWithNSString:@"%s expected not to be an instance of %s, but was." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthSubject_actualAsString(self), [clazz getName] } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)isInWithJavaLangIterable:(id<JavaLangIterable>)iterable {
-  if (!ComGoogleCommonCollectIterables_containsWithJavaLangIterable_withId_(iterable, ComGoogleCommonTruthSubject_actual(self))) {
-    ComGoogleCommonTruthSubject_failWithNSString_withId_(self, @"is equal to any element in", iterable);
-  }
-}
-
-- (void)isAnyOfWithId:(id)first
-               withId:(id)second
-    withNSObjectArray:(IOSObjectArray *)rest {
-  id<JavaUtilList> list = ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest);
-  if (![((id<JavaUtilList>) nil_chk(list)) containsWithId:ComGoogleCommonTruthSubject_actual(self)]) {
-    ComGoogleCommonTruthSubject_failWithNSString_withId_(self, @"is equal to any of", list);
-  }
-}
-
-- (void)isNotInWithJavaLangIterable:(id<JavaLangIterable>)iterable {
-  jint index = ComGoogleCommonCollectIterables_indexOfWithJavaLangIterable_withComGoogleCommonBasePredicate_(iterable, ComGoogleCommonBasePredicates_equalToWithId_(ComGoogleCommonTruthSubject_actual(self)));
-  if (index != -1) {
-    [self failWithRawMessageWithNSString:@"Not true that %s is not in %s. It was found at index %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthSubject_actualAsString(self), iterable, JavaLangInteger_valueOfWithInt_(index) } count:3 type:NSObject_class_()]];
-  }
-}
-
-- (void)isNoneOfWithId:(id)first
-                withId:(id)second
-     withNSObjectArray:(IOSObjectArray *)rest {
-  [self isNotInWithJavaLangIterable:ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest)];
-}
-
-- (id)getSubject {
-  return actual_;
-}
-
-- (id)actual {
-  return ComGoogleCommonTruthSubject_actual(self);
-}
-
-- (NSString *)getDisplaySubject {
-  NSString *formatted = [self actualCustomStringRepresentation];
-  if (customName_ != nil) {
-    return JreStrcat("$$", customName_, ([((NSString *) nil_chk(formatted)) java_isEmpty] ? @"" : JreStrcat("$$$", @" (<", formatted, @">)")));
-  }
-  else {
-    return JreStrcat("C$C", '<', formatted, '>');
-  }
-}
-
-- (NSString *)actualAsString {
-  return ComGoogleCommonTruthSubject_actualAsString(self);
-}
-
-- (NSString *)actualCustomStringRepresentation {
-  return NSString_java_valueOf_(ComGoogleCommonTruthSubject_actual(self));
-}
-
-- (ComGoogleCommonTruthTestVerb *)check {
-  return create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(failureStrategy_);
-}
-
-- (void)failWithNSString:(NSString *)proposition {
-  ComGoogleCommonTruthSubject_failWithNSString_(self, proposition);
-}
-
-- (void)failWithNSString:(NSString *)verb
-                  withId:(id)other {
-  ComGoogleCommonTruthSubject_failWithNSString_withId_(self, verb, other);
-}
-
-- (void)failComparingToStringsWithNSString:(NSString *)verb
-                                    withId:(id)subject
-                                    withId:(id)other
-                                    withId:(id)displayOther
-                               withBoolean:(jboolean)compareToStrings {
-  ComGoogleCommonTruthSubject_failComparingToStringsWithNSString_withId_withId_withId_withBoolean_(self, verb, subject, other, displayOther, compareToStrings);
-}
-
-- (void)failWithNSString:(NSString *)verb
-       withNSObjectArray:(IOSObjectArray *)messageParts {
-  if (((IOSObjectArray *) nil_chk(messageParts))->size_ == 0) {
-    ComGoogleCommonTruthSubject_failWithNSString_(self, verb);
-  }
-  else if (messageParts->size_ == 1) {
-    ComGoogleCommonTruthSubject_failWithNSString_withId_(self, verb, IOSObjectArray_Get(messageParts, 0));
-  }
-  else {
-    JavaLangStringBuilder *message = create_JavaLangStringBuilder_initWithNSString_(@"Not true that ");
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([message appendWithNSString:ComGoogleCommonTruthSubject_actualAsString(self)])) appendWithNSString:@" "])) appendWithNSString:verb];
-    {
-      IOSObjectArray *a__ = messageParts;
-      id const *b__ = a__->buffer_;
-      id const *e__ = b__ + a__->size_;
-      while (b__ < e__) {
-        id part = *b__++;
-        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([message appendWithNSString:@" <"])) appendWithId:part])) appendWithNSString:@">"];
-      }
-    }
-    [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failWithNSString:[message description]];
-  }
-}
-
-- (void)failWithBadResultsWithNSString:(NSString *)verb
-                                withId:(id)expected
-                          withNSString:(NSString *)failVerb
-                                withId:(id)actual {
-  ComGoogleCommonTruthSubject_failWithBadResultsWithNSString_withId_withNSString_withId_(self, verb, expected, failVerb, actual);
-}
-
-- (void)failWithCustomSubjectWithNSString:(NSString *)verb
-                                   withId:(id)expected
-                                   withId:(id)actual {
-  NSString *message = ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"Not true that <%s> %s <%s>", [IOSObjectArray arrayWithObjects:(id[]){ (actual == nil) ? @"null reference" : actual, verb, expected } count:3 type:NSObject_class_()]);
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failWithNSString:message];
-}
-
-- (void)failWithoutSubjectWithNSString:(NSString *)proposition {
-  ComGoogleCommonTruthSubject_failWithoutSubjectWithNSString_(self, proposition);
-}
-
-- (void)failWithoutActualWithNSString:(NSString *)proposition {
-  ComGoogleCommonTruthSubject_failWithoutActualWithNSString_(self, proposition);
-}
-
-- (void)failWithRawMessageWithNSString:(NSString *)message
-                     withNSObjectArray:(IOSObjectArray *)parameters {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failWithNSString:ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(message, parameters)];
-}
-
-- (jboolean)isEqual:(id)o {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"If you meant to test object equality, use .isEqualTo(other) instead.");
-}
-
-- (NSUInteger)hash {
-  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Subject.hashCode() is not supported.");
-}
-
-- (void)dealloc {
-  RELEASE_(failureStrategy_);
-  RELEASE_(actual_);
-  RELEASE_(customName_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, 2 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthSubject;", 0x81, 3, 4, -1, 5, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 6, 7, -1, -1, -1, 8 },
-    { NULL, "V", 0x1, 9, 7, -1, -1, -1, 10 },
-    { NULL, "V", 0x2, 11, 12, -1, -1, -1, 13 },
-    { NULL, "Z", 0xa, 14, 7, -1, -1, -1, 15 },
-    { NULL, "LJavaLangLong;", 0xa, 16, 7, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 17, 7, -1, -1, -1, 18 },
-    { NULL, "V", 0x1, 19, 7, -1, -1, -1, 20 },
-    { NULL, "V", 0x1, 21, 22, -1, 23, -1, -1 },
-    { NULL, "V", 0x1, 24, 22, -1, 23, -1, -1 },
-    { NULL, "V", 0x1, 25, 26, -1, 27, -1, -1 },
-    { NULL, "V", 0x81, 28, 29, -1, -1, -1, 30 },
-    { NULL, "V", 0x1, 31, 26, -1, 27, -1, -1 },
-    { NULL, "V", 0x81, 32, 29, -1, -1, -1, 33 },
-    { NULL, "LNSObject;", 0x4, -1, -1, -1, 34, 35, -1 },
-    { NULL, "LNSObject;", 0x14, -1, -1, -1, 34, -1, -1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, 36, -1 },
-    { NULL, "LNSString;", 0x14, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x4, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x14, 37, 38, -1, -1, -1, -1 },
-    { NULL, "V", 0x14, 37, 39, -1, -1, -1, -1 },
-    { NULL, "V", 0x2, 40, 41, -1, -1, -1, -1 },
-    { NULL, "V", 0x94, 37, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x14, 42, 43, -1, -1, -1, -1 },
-    { NULL, "V", 0x14, 44, 45, -1, -1, -1, -1 },
-    { NULL, "V", 0x14, 46, 38, -1, -1, 47, -1 },
-    { NULL, "V", 0x14, 48, 38, -1, -1, -1, -1 },
-    { NULL, "V", 0x84, 49, 4, -1, -1, -1, -1 },
-    { NULL, "Z", 0x11, 50, 7, -1, -1, 51, 52 },
-    { NULL, "I", 0x11, 53, -1, -1, -1, 54, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withId:);
-  methods[1].selector = @selector(internalCustomName);
-  methods[2].selector = @selector(namedWithNSString:withNSObjectArray:);
-  methods[3].selector = @selector(isNull);
-  methods[4].selector = @selector(isNotNull);
-  methods[5].selector = @selector(isEqualToWithId:);
-  methods[6].selector = @selector(isNotEqualToWithId:);
-  methods[7].selector = @selector(doEqualCheckWithId:withId:withBoolean:);
-  methods[8].selector = @selector(isIntegralBoxedPrimitiveWithId:);
-  methods[9].selector = @selector(integralValueWithId:);
-  methods[10].selector = @selector(isSameAsWithId:);
-  methods[11].selector = @selector(isNotSameAsWithId:);
-  methods[12].selector = @selector(isInstanceOfWithIOSClass:);
-  methods[13].selector = @selector(isNotInstanceOfWithIOSClass:);
-  methods[14].selector = @selector(isInWithJavaLangIterable:);
-  methods[15].selector = @selector(isAnyOfWithId:withId:withNSObjectArray:);
-  methods[16].selector = @selector(isNotInWithJavaLangIterable:);
-  methods[17].selector = @selector(isNoneOfWithId:withId:withNSObjectArray:);
-  methods[18].selector = @selector(getSubject);
-  methods[19].selector = @selector(actual);
-  methods[20].selector = @selector(getDisplaySubject);
-  methods[21].selector = @selector(actualAsString);
-  methods[22].selector = @selector(actualCustomStringRepresentation);
-  methods[23].selector = @selector(check);
-  methods[24].selector = @selector(failWithNSString:);
-  methods[25].selector = @selector(failWithNSString:withId:);
-  methods[26].selector = @selector(failComparingToStringsWithNSString:withId:withId:withId:withBoolean:);
-  methods[27].selector = @selector(failWithNSString:withNSObjectArray:);
-  methods[28].selector = @selector(failWithBadResultsWithNSString:withId:withNSString:withId:);
-  methods[29].selector = @selector(failWithCustomSubjectWithNSString:withId:withId:);
-  methods[30].selector = @selector(failWithoutSubjectWithNSString:);
-  methods[31].selector = @selector(failWithoutActualWithNSString:);
-  methods[32].selector = @selector(failWithRawMessageWithNSString:withNSObjectArray:);
-  methods[33].selector = @selector(isEqual:);
-  methods[34].selector = @selector(hash);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "failureStrategy_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
-    { "actual_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 55, -1 },
-    { "customName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LNSObject;", "(Lcom/google/common/truth/FailureStrategy;TT;)V", (void *)&ComGoogleCommonTruthSubject__Annotations$0, "named", "LNSString;[LNSObject;", "(Ljava/lang/String;[Ljava/lang/Object;)TS;", "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthSubject__Annotations$1, "isNotEqualTo", (void *)&ComGoogleCommonTruthSubject__Annotations$2, "doEqualCheck", "LNSObject;LNSObject;Z", (void *)&ComGoogleCommonTruthSubject__Annotations$3, "isIntegralBoxedPrimitive", (void *)&ComGoogleCommonTruthSubject__Annotations$4, "integralValue", "isSameAs", (void *)&ComGoogleCommonTruthSubject__Annotations$5, "isNotSameAs", (void *)&ComGoogleCommonTruthSubject__Annotations$6, "isInstanceOf", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "isNotInstanceOf", "isIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)V", "isAnyOf", "LNSObject;LNSObject;[LNSObject;", (void *)&ComGoogleCommonTruthSubject__Annotations$7, "isNotIn", "isNoneOf", (void *)&ComGoogleCommonTruthSubject__Annotations$8, "()TT;", (void *)&ComGoogleCommonTruthSubject__Annotations$9, (void *)&ComGoogleCommonTruthSubject__Annotations$10, "fail", "LNSString;", "LNSString;LNSObject;", "failComparingToStrings", "LNSString;LNSObject;LNSObject;LNSObject;Z", "failWithBadResults", "LNSString;LNSObject;LNSString;LNSObject;", "failWithCustomSubject", "LNSString;LNSObject;LNSObject;", "failWithoutSubject", (void *)&ComGoogleCommonTruthSubject__Annotations$11, "failWithoutActual", "failWithRawMessage", "equals", (void *)&ComGoogleCommonTruthSubject__Annotations$12, (void *)&ComGoogleCommonTruthSubject__Annotations$13, "hashCode", (void *)&ComGoogleCommonTruthSubject__Annotations$14, "TT;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSubject = { "Subject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x1, 35, 3, -1, -1, -1, 56, -1 };
-  return &_ComGoogleCommonTruthSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual) {
-  NSObject_init(self);
-  JreStrongAssign(&self->customName_, nil);
-  JreStrongAssign(&self->failureStrategy_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(failureStrategy));
-  JreStrongAssign(&self->actual_, actual);
-}
-
-ComGoogleCommonTruthSubject *new_ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSubject, initWithComGoogleCommonTruthFailureStrategy_withId_, failureStrategy, actual)
-}
-
-ComGoogleCommonTruthSubject *create_ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSubject, initWithComGoogleCommonTruthFailureStrategy_withId_, failureStrategy, actual)
-}
-
-void ComGoogleCommonTruthSubject_doEqualCheckWithId_withId_withBoolean_(ComGoogleCommonTruthSubject *self, id rawSubject, id rawOther, jboolean expectEqual) {
-  id subject;
-  id other;
-  if (ComGoogleCommonTruthSubject_isIntegralBoxedPrimitiveWithId_(rawSubject) && ComGoogleCommonTruthSubject_isIntegralBoxedPrimitiveWithId_(rawOther)) {
-    subject = ComGoogleCommonTruthSubject_integralValueWithId_(rawSubject);
-    other = ComGoogleCommonTruthSubject_integralValueWithId_(rawOther);
-  }
-  else {
-    subject = rawSubject;
-    other = rawOther;
-  }
-  if (ComGoogleCommonBaseObjects_equalWithId_withId_(subject, other) != expectEqual) {
-    ComGoogleCommonTruthSubject_failComparingToStringsWithNSString_withId_withId_withId_withBoolean_(self, expectEqual ? @"is equal to" : @"is not equal to", subject, other, rawOther, expectEqual);
-  }
-}
-
-jboolean ComGoogleCommonTruthSubject_isIntegralBoxedPrimitiveWithId_(id o) {
-  ComGoogleCommonTruthSubject_initialize();
-  return [o isKindOfClass:[JavaLangByte class]] || [o isKindOfClass:[JavaLangShort class]] || [o isKindOfClass:[JavaLangCharacter class]] || [o isKindOfClass:[JavaLangInteger class]] || [o isKindOfClass:[JavaLangLong class]];
-}
-
-JavaLangLong *ComGoogleCommonTruthSubject_integralValueWithId_(id o) {
-  ComGoogleCommonTruthSubject_initialize();
-  if ([o isKindOfClass:[JavaLangCharacter class]]) {
-    return JavaLangLong_valueOfWithLong_((jlong) [((JavaLangCharacter *) nil_chk(((JavaLangCharacter *) cast_chk(o, [JavaLangCharacter class])))) charValue]);
-  }
-  else if ([o isKindOfClass:[NSNumber class]]) {
-    return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(((NSNumber *) cast_chk(o, [NSNumber class])))) longLongValue]);
-  }
-  else {
-    @throw create_JavaLangAssertionError_initWithId_(JreStrcat("@$", o, @" must be either a Character or a Number."));
-  }
-}
-
-id ComGoogleCommonTruthSubject_actual(ComGoogleCommonTruthSubject *self) {
-  return [self getSubject];
-}
-
-NSString *ComGoogleCommonTruthSubject_actualAsString(ComGoogleCommonTruthSubject *self) {
-  return [self getDisplaySubject];
-}
-
-void ComGoogleCommonTruthSubject_failWithNSString_(ComGoogleCommonTruthSubject *self, NSString *proposition) {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(self->failureStrategy_)) failWithNSString:JreStrcat("$$C$", @"Not true that ", ComGoogleCommonTruthSubject_actualAsString(self), ' ', proposition)];
-}
-
-void ComGoogleCommonTruthSubject_failWithNSString_withId_(ComGoogleCommonTruthSubject *self, NSString *verb, id other) {
-  ComGoogleCommonTruthSubject_failComparingToStringsWithNSString_withId_withId_withId_withBoolean_(self, verb, ComGoogleCommonTruthSubject_actual(self), other, other, false);
-}
-
-void ComGoogleCommonTruthSubject_failComparingToStringsWithNSString_withId_withId_withId_withBoolean_(ComGoogleCommonTruthSubject *self, NSString *verb, id subject, id other, id displayOther, jboolean compareToStrings) {
-  JavaLangStringBuilder *message = [((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_initWithNSString_(@"Not true that ") appendWithNSString:ComGoogleCommonTruthSubject_actualAsString(self)])) appendWithNSString:@" "];
-  jboolean neitherNull = (other != nil) && (subject != nil);
-  jboolean sameToStrings = neitherNull && [((NSString *) nil_chk([nil_chk(subject) description])) isEqual:[nil_chk(other) description]];
-  jboolean needsClassDisambiguation = neitherNull && sameToStrings && ![[nil_chk(subject) java_getClass] isEqual:[nil_chk(other) java_getClass]];
-  if (needsClassDisambiguation) {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(message)) appendWithNSString:@"("])) appendWithNSString:[[nil_chk(subject) java_getClass] getName]])) appendWithNSString:@") "];
-  }
-  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(message)) appendWithNSString:verb])) appendWithNSString:@" <"])) appendWithId:displayOther])) appendWithNSString:@">"];
-  if (needsClassDisambiguation) {
-    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([message appendWithNSString:@" ("])) appendWithNSString:[[nil_chk(other) java_getClass] getName]])) appendWithNSString:@")"];
-  }
-  if (!needsClassDisambiguation && sameToStrings && compareToStrings) {
-    [message appendWithNSString:@" (although their toString() representations are the same)"];
-  }
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(self->failureStrategy_)) failWithNSString:[message description]];
-}
-
-void ComGoogleCommonTruthSubject_failWithBadResultsWithNSString_withId_withNSString_withId_(ComGoogleCommonTruthSubject *self, NSString *verb, id expected, NSString *failVerb, id actual) {
-  NSString *message = ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"Not true that %s %s <%s>. It %s <%s>", [IOSObjectArray arrayWithObjects:(id[]){ ComGoogleCommonTruthSubject_actualAsString(self), verb, expected, failVerb, (actual == nil) ? @"null reference" : actual } count:5 type:NSObject_class_()]);
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(self->failureStrategy_)) failWithNSString:message];
-}
-
-void ComGoogleCommonTruthSubject_failWithoutSubjectWithNSString_(ComGoogleCommonTruthSubject *self, NSString *proposition) {
-  NSString *strSubject = self->customName_ == nil ? @"the subject" : JreStrcat("C$C", '"', self->customName_, '"');
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(self->failureStrategy_)) failWithNSString:ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(@"Not true that %s %s", [IOSObjectArray arrayWithObjects:(id[]){ strSubject, proposition } count:2 type:NSObject_class_()])];
-}
-
-void ComGoogleCommonTruthSubject_failWithoutActualWithNSString_(ComGoogleCommonTruthSubject *self, NSString *proposition) {
-  ComGoogleCommonTruthSubject_failWithoutSubjectWithNSString_(self, proposition);
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$9() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$10() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$11() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$12() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$13() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthSubject__Annotations$14() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectFactory.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectFactory.h
deleted file mode 100644
index 841b0fc08..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectFactory.h
+++ /dev/null
@@ -1,52 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSubjectFactory")
-#ifdef RESTRICT_ComGoogleCommonTruthSubjectFactory
-#define INCLUDE_ALL_ComGoogleCommonTruthSubjectFactory 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthSubjectFactory 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthSubjectFactory
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthSubjectFactory_) && (INCLUDE_ALL_ComGoogleCommonTruthSubjectFactory || defined(INCLUDE_ComGoogleCommonTruthSubjectFactory))
-#define ComGoogleCommonTruthSubjectFactory_
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthSubject;
-@class IOSClass;
-
-@interface ComGoogleCommonTruthSubjectFactory : NSObject
-
-#pragma mark Public
-
-- (instancetype)init;
-
-- (ComGoogleCommonTruthSubject *)getSubjectWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)fs
-                                                                            withId:(id)that;
-
-- (IOSClass *)getSubjectClass;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSubjectFactory)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthSubjectFactory_init(ComGoogleCommonTruthSubjectFactory *self);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSubjectFactory)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSubjectFactory")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectFactory.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectFactory.m
deleted file mode 100644
index 22a631399..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectFactory.m
+++ /dev/null
@@ -1,78 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthReflectionUtil.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthSubjectFactory.h"
-#include "IOSClass.h"
-#include "J2ObjC_source.h"
-
-@interface ComGoogleCommonTruthSubjectFactory () {
- @public
-  IOSClass *type_;
-}
-
-@end
-
-J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSubjectFactory, type_, IOSClass *)
-
-inline jint ComGoogleCommonTruthSubjectFactory_get_SUBJECT_TYPE_PARAMETER();
-#define ComGoogleCommonTruthSubjectFactory_SUBJECT_TYPE_PARAMETER 0
-J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonTruthSubjectFactory, SUBJECT_TYPE_PARAMETER, jint)
-
-@implementation ComGoogleCommonTruthSubjectFactory
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthSubjectFactory_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (ComGoogleCommonTruthSubject *)getSubjectWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)fs
-                                                                            withId:(id)that {
-  // can't call an abstract method
-  [self doesNotRecognizeSelector:_cmd];
-  return 0;
-}
-
-- (IOSClass *)getSubjectClass {
-  return type_;
-}
-
-- (void)dealloc {
-  RELEASE_(type_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthSubject;", 0x401, 0, 1, -1, 2, -1, -1 },
-    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 3, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(getSubjectWithComGoogleCommonTruthFailureStrategy:withId:);
-  methods[2].selector = @selector(getSubjectClass);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "SUBJECT_TYPE_PARAMETER", "I", .constantValue.asInt = ComGoogleCommonTruthSubjectFactory_SUBJECT_TYPE_PARAMETER, 0x1a, -1, -1, -1, -1 },
-    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
-  };
-  static const void *ptrTable[] = { "getSubject", "LComGoogleCommonTruthFailureStrategy;LNSObject;", "(Lcom/google/common/truth/FailureStrategy;TT;)TS;", "()Ljava/lang/Class<TS;>;", "Ljava/lang/Class<TS;>;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;>Ljava/lang/Object;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSubjectFactory = { "SubjectFactory", "com.google.common.truth", ptrTable, methods, fields, 7, 0x401, 3, 2, -1, -1, -1, 5, -1 };
-  return &_ComGoogleCommonTruthSubjectFactory;
-}
-
-@end
-
-void ComGoogleCommonTruthSubjectFactory_init(ComGoogleCommonTruthSubjectFactory *self) {
-  NSObject_init(self);
-  JreStrongAssign(&self->type_, ComGoogleCommonTruthReflectionUtil_typeParameterWithIOSClass_withInt_([self java_getClass], ComGoogleCommonTruthSubjectFactory_SUBJECT_TYPE_PARAMETER));
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSubjectFactory)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectUtils.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectUtils.h
deleted file mode 100644
index f1219cbff..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectUtils.h
+++ /dev/null
@@ -1,59 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSubjectUtils")
-#ifdef RESTRICT_ComGoogleCommonTruthSubjectUtils
-#define INCLUDE_ALL_ComGoogleCommonTruthSubjectUtils 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthSubjectUtils 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthSubjectUtils
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthSubjectUtils_) && (INCLUDE_ALL_ComGoogleCommonTruthSubjectUtils || defined(INCLUDE_ComGoogleCommonTruthSubjectUtils))
-#define ComGoogleCommonTruthSubjectUtils_
-
-@class IOSObjectArray;
-@protocol JavaLangIterable;
-@protocol JavaUtilCollection;
-@protocol JavaUtilList;
-
-@interface ComGoogleCommonTruthSubjectUtils : NSObject
-
-#pragma mark Package-Private
-
-+ (id<JavaUtilList>)accumulateWithId:(id)first
-                              withId:(id)second
-                   withNSObjectArray:(IOSObjectArray *)rest;
-
-+ (id<JavaUtilList>)countDuplicatesWithJavaUtilCollection:(id<JavaUtilCollection>)items;
-
-+ (jint)countOfWithId:(id)t
- withJavaLangIterable:(id<JavaLangIterable>)items;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSubjectUtils)
-
-FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(id first, id second, IOSObjectArray *rest);
-
-FOUNDATION_EXPORT jint ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(id t, id<JavaLangIterable> items);
-
-FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(id<JavaUtilCollection> items);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSubjectUtils)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSubjectUtils")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectUtils.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectUtils.m
deleted file mode 100644
index 92dbb0ab7..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthSubjectUtils.m
+++ /dev/null
@@ -1,126 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthSubjectUtils.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/Iterable.h"
-#include "java/util/ArrayList.h"
-#include "java/util/Arrays.h"
-#include "java/util/Collection.h"
-#include "java/util/List.h"
-
-@interface ComGoogleCommonTruthSubjectUtils ()
-
-- (instancetype)init;
-
-@end
-
-__attribute__((unused)) static void ComGoogleCommonTruthSubjectUtils_init(ComGoogleCommonTruthSubjectUtils *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthSubjectUtils *new_ComGoogleCommonTruthSubjectUtils_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthSubjectUtils *create_ComGoogleCommonTruthSubjectUtils_init();
-
-@implementation ComGoogleCommonTruthSubjectUtils
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthSubjectUtils_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (id<JavaUtilList>)accumulateWithId:(id)first
-                              withId:(id)second
-                   withNSObjectArray:(IOSObjectArray *)rest {
-  return ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest);
-}
-
-+ (jint)countOfWithId:(id)t
- withJavaLangIterable:(id<JavaLangIterable>)items {
-  return ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(t, items);
-}
-
-+ (id<JavaUtilList>)countDuplicatesWithJavaUtilCollection:(id<JavaUtilCollection>)items {
-  return ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(items);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x88, 0, 1, -1, 2, -1, -1 },
-    { NULL, "I", 0x8, 3, 4, -1, 5, -1, -1 },
-    { NULL, "LJavaUtilList;", 0x8, 6, 7, -1, 8, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(accumulateWithId:withId:withNSObjectArray:);
-  methods[2].selector = @selector(countOfWithId:withJavaLangIterable:);
-  methods[3].selector = @selector(countDuplicatesWithJavaUtilCollection:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "accumulate", "LNSObject;LNSObject;[LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;[TT;)Ljava/util/List<TT;>;", "countOf", "LNSObject;LJavaLangIterable;", "<T:Ljava/lang/Object;>(TT;Ljava/lang/Iterable<TT;>;)I", "countDuplicates", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;)Ljava/util/List<Ljava/lang/Object;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthSubjectUtils = { "SubjectUtils", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x10, 4, 0, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthSubjectUtils;
-}
-
-@end
-
-void ComGoogleCommonTruthSubjectUtils_init(ComGoogleCommonTruthSubjectUtils *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthSubjectUtils *new_ComGoogleCommonTruthSubjectUtils_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSubjectUtils, init)
-}
-
-ComGoogleCommonTruthSubjectUtils *create_ComGoogleCommonTruthSubjectUtils_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSubjectUtils, init)
-}
-
-id<JavaUtilList> ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(id first, id second, IOSObjectArray *rest) {
-  ComGoogleCommonTruthSubjectUtils_initialize();
-  id<JavaUtilList> items = create_JavaUtilArrayList_initWithInt_(2 + ((rest == nil) ? 1 : ((IOSObjectArray *) nil_chk(rest))->size_));
-  [items addWithId:first];
-  [items addWithId:second];
-  if (rest == nil) {
-    [items addWithId:nil];
-  }
-  else {
-    [items addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(rest)];
-  }
-  return items;
-}
-
-jint ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(id t, id<JavaLangIterable> items) {
-  ComGoogleCommonTruthSubjectUtils_initialize();
-  jint count = 0;
-  for (id __strong item in nil_chk(items)) {
-    if (t == nil ? (item == nil) : [t isEqual:item]) {
-      count++;
-    }
-  }
-  return count;
-}
-
-id<JavaUtilList> ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(id<JavaUtilCollection> items) {
-  ComGoogleCommonTruthSubjectUtils_initialize();
-  id<JavaUtilList> itemSet = create_JavaUtilArrayList_init();
-  for (id __strong item in nil_chk(items)) {
-    if (![itemSet containsWithId:item]) {
-      [itemSet addWithId:item];
-    }
-  }
-  IOSObjectArray *params = [IOSObjectArray arrayWithLength:[itemSet size] type:NSObject_class_()];
-  jint n = 0;
-  for (id __strong item in itemSet) {
-    jint count = ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(item, items);
-    IOSObjectArray_Set(params, n++, (count > 1) ? JreStrcat("@$I$", item, @" [", count, @" copies]") : item);
-  }
-  return JavaUtilArrays_asListWithNSObjectArray_(params);
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSubjectUtils)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTableSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTableSubject.h
deleted file mode 100644
index a0ca6800e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTableSubject.h
+++ /dev/null
@@ -1,93 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthTableSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthTableSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthTableSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthTableSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthTableSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthTableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthTableSubject || defined(INCLUDE_ComGoogleCommonTruthTableSubject))
-#define ComGoogleCommonTruthTableSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-@protocol ComGoogleCommonCollectTable;
-
-@interface ComGoogleCommonTruthTableSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (void)containsWithId:(id)rowKey
-                withId:(id)columnKey;
-
-- (void)containsCellWithId:(id)rowKey
-                    withId:(id)colKey
-                    withId:(id)value;
-
-- (void)containsColumnWithId:(id)columnKey;
-
-- (void)containsRowWithId:(id)rowKey;
-
-- (void)containsValueWithId:(id)value;
-
-- (void)doesNotContainWithId:(id)rowKey
-                      withId:(id)columnKey;
-
-- (void)doesNotContainCellWithId:(id)rowKey
-                          withId:(id)colKey
-                          withId:(id)value;
-
-- (void)hasSizeWithInt:(jint)expectedSize;
-
-- (void)isEmpty;
-
-- (void)isNotEmpty;
-
-- (ComGoogleCommonTruthTableSubject *)namedWithNSString:(NSString *)arg0
-                                      withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (id<ComGoogleCommonCollectTable>)actual;
-
-- (id<ComGoogleCommonCollectTable>)getSubject;
-
-#pragma mark Package-Private
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                            withComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)table;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTableSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(ComGoogleCommonTruthTableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectTable> table);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTableSubject *new_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectTable> table) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTableSubject *create_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectTable> table);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTableSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthTableSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTableSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTableSubject.m
deleted file mode 100644
index b95280769..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTableSubject.m
+++ /dev/null
@@ -1,194 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthTableSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/Table.h"
-#include "com/google/common/collect/Tables.h"
-#include "java/lang/Integer.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/util/Set.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$7();
-
-@implementation ComGoogleCommonTruthTableSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                            withComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)table {
-  ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(self, failureStrategy, table);
-  return self;
-}
-
-- (void)isEmpty {
-  if (![((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is empty"];
-  }
-}
-
-- (void)isNotEmpty {
-  if ([((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) isEmpty]) {
-    [self failWithNSString:@"is not empty"];
-  }
-}
-
-- (void)hasSizeWithInt:(jint)expectedSize {
-  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedSize >= 0, @"expectedSize(%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedSize) } count:1 type:NSObject_class_()]);
-  jint actualSize = [((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) size];
-  if (actualSize != expectedSize) {
-    [self failWithBadResultsWithNSString:@"has a size of" withId:JavaLangInteger_valueOfWithInt_(expectedSize) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualSize)];
-  }
-}
-
-- (void)containsWithId:(id)rowKey
-                withId:(id)columnKey {
-  if (![((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) containsWithId:rowKey withId:columnKey]) {
-    [self failWithNSString:@"contains mapping for row/column" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ rowKey, columnKey } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)doesNotContainWithId:(id)rowKey
-                      withId:(id)columnKey {
-  if ([((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) containsWithId:rowKey withId:columnKey]) {
-    [self failWithNSString:@"does not contain mapping for row/column" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ rowKey, columnKey } count:2 type:NSObject_class_()]];
-  }
-}
-
-- (void)containsCellWithId:(id)rowKey
-                    withId:(id)colKey
-                    withId:(id)value {
-  id<ComGoogleCommonCollectTable_Cell> cell = ComGoogleCommonCollectTables_immutableCellWithId_withId_withId_(rowKey, colKey, value);
-  if (![((id<JavaUtilSet>) nil_chk([((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) cellSet])) containsWithId:cell]) {
-    [self failWithNSString:@"contains cell" withId:cell];
-  }
-}
-
-- (void)doesNotContainCellWithId:(id)rowKey
-                          withId:(id)colKey
-                          withId:(id)value {
-  id<ComGoogleCommonCollectTable_Cell> cell = ComGoogleCommonCollectTables_immutableCellWithId_withId_withId_(rowKey, colKey, value);
-  if ([((id<JavaUtilSet>) nil_chk([((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) cellSet])) containsWithId:cell]) {
-    [self failWithNSString:@"does not contain cell" withId:cell];
-  }
-}
-
-- (void)containsRowWithId:(id)rowKey {
-  if (![((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) containsRowWithId:rowKey]) {
-    [self failWithNSString:@"contains row" withId:rowKey];
-  }
-}
-
-- (void)containsColumnWithId:(id)columnKey {
-  if (![((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) containsColumnWithId:columnKey]) {
-    [self failWithNSString:@"contains column" withId:columnKey];
-  }
-}
-
-- (void)containsValueWithId:(id)value {
-  if (![((id<ComGoogleCommonCollectTable>) nil_chk([self actual])) containsValueWithId:value]) {
-    [self failWithNSString:@"contains value" withId:value];
-  }
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x11, 3, 4, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 5, 6, -1, -1, -1, 7 },
-    { NULL, "V", 0x1, 8, 6, -1, -1, -1, 9 },
-    { NULL, "V", 0x1, 10, 11, -1, -1, -1, 12 },
-    { NULL, "V", 0x1, 13, 11, -1, -1, -1, 14 },
-    { NULL, "V", 0x1, 15, 16, -1, -1, -1, 17 },
-    { NULL, "V", 0x1, 18, 16, -1, -1, -1, 19 },
-    { NULL, "V", 0x1, 20, 16, -1, -1, -1, 21 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonCollectTable:);
-  methods[1].selector = @selector(isEmpty);
-  methods[2].selector = @selector(isNotEmpty);
-  methods[3].selector = @selector(hasSizeWithInt:);
-  methods[4].selector = @selector(containsWithId:withId:);
-  methods[5].selector = @selector(doesNotContainWithId:withId:);
-  methods[6].selector = @selector(containsCellWithId:withId:withId:);
-  methods[7].selector = @selector(doesNotContainCellWithId:withId:withId:);
-  methods[8].selector = @selector(containsRowWithId:);
-  methods[9].selector = @selector(containsColumnWithId:);
-  methods[10].selector = @selector(containsValueWithId:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonCollectTable;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/collect/Table<***>;)V", (void *)&ComGoogleCommonTruthTableSubject__Annotations$0, "hasSize", "I", "contains", "LNSObject;LNSObject;", (void *)&ComGoogleCommonTruthTableSubject__Annotations$1, "doesNotContain", (void *)&ComGoogleCommonTruthTableSubject__Annotations$2, "containsCell", "LNSObject;LNSObject;LNSObject;", (void *)&ComGoogleCommonTruthTableSubject__Annotations$3, "doesNotContainCell", (void *)&ComGoogleCommonTruthTableSubject__Annotations$4, "containsRow", "LNSObject;", (void *)&ComGoogleCommonTruthTableSubject__Annotations$5, "containsColumn", (void *)&ComGoogleCommonTruthTableSubject__Annotations$6, "containsValue", (void *)&ComGoogleCommonTruthTableSubject__Annotations$7, "Lcom/google/common/truth/Subject<Lcom/google/common/truth/TableSubject;Lcom/google/common/collect/Table<***>;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTableSubject = { "TableSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 11, 0, -1, -1, -1, 22, -1 };
-  return &_ComGoogleCommonTruthTableSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(ComGoogleCommonTruthTableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectTable> table) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, table);
-}
-
-ComGoogleCommonTruthTableSubject *new_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectTable> table) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTableSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_, failureStrategy, table)
-}
-
-ComGoogleCommonTruthTableSubject *create_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectTable> table) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTableSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_, failureStrategy, table)
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTableSubject__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthTableSubject)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTestVerb.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTestVerb.h
deleted file mode 100644
index c736b273a..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTestVerb.h
+++ /dev/null
@@ -1,198 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthTestVerb")
-#ifdef RESTRICT_ComGoogleCommonTruthTestVerb
-#define INCLUDE_ALL_ComGoogleCommonTruthTestVerb 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthTestVerb 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthTestVerb
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthTestVerb_) && (INCLUDE_ALL_ComGoogleCommonTruthTestVerb || defined(INCLUDE_ComGoogleCommonTruthTestVerb))
-#define ComGoogleCommonTruthTestVerb_
-
-#define RESTRICT_ComGoogleCommonTruthAbstractVerb 1
-#define INCLUDE_ComGoogleCommonTruthAbstractVerb 1
-#include "ComGoogleCommonTruthAbstractVerb.h"
-
-@class ComGoogleCommonBaseOptional;
-@class ComGoogleCommonTruthAtomicLongMapSubject;
-@class ComGoogleCommonTruthBigDecimalSubject;
-@class ComGoogleCommonTruthBooleanSubject;
-@class ComGoogleCommonTruthClassSubject;
-@class ComGoogleCommonTruthComparableSubject;
-@class ComGoogleCommonTruthDoubleSubject;
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthFloatSubject;
-@class ComGoogleCommonTruthGuavaOptionalSubject;
-@class ComGoogleCommonTruthIntegerSubject;
-@class ComGoogleCommonTruthIterableSubject;
-@class ComGoogleCommonTruthListMultimapSubject;
-@class ComGoogleCommonTruthLongSubject;
-@class ComGoogleCommonTruthMapSubject;
-@class ComGoogleCommonTruthMultimapSubject;
-@class ComGoogleCommonTruthMultisetSubject;
-@class ComGoogleCommonTruthObjectArraySubject;
-@class ComGoogleCommonTruthPrimitiveBooleanArraySubject;
-@class ComGoogleCommonTruthPrimitiveByteArraySubject;
-@class ComGoogleCommonTruthPrimitiveCharArraySubject;
-@class ComGoogleCommonTruthPrimitiveDoubleArraySubject;
-@class ComGoogleCommonTruthPrimitiveFloatArraySubject;
-@class ComGoogleCommonTruthPrimitiveIntArraySubject;
-@class ComGoogleCommonTruthPrimitiveLongArraySubject;
-@class ComGoogleCommonTruthPrimitiveShortArraySubject;
-@class ComGoogleCommonTruthSetMultimapSubject;
-@class ComGoogleCommonTruthSortedMapSubject;
-@class ComGoogleCommonTruthSortedSetSubject;
-@class ComGoogleCommonTruthStringSubject;
-@class ComGoogleCommonTruthSubject;
-@class ComGoogleCommonTruthTableSubject;
-@class ComGoogleCommonTruthThrowableSubject;
-@class ComGoogleCommonUtilConcurrentAtomicLongMap;
-@class IOSBooleanArray;
-@class IOSByteArray;
-@class IOSCharArray;
-@class IOSClass;
-@class IOSDoubleArray;
-@class IOSFloatArray;
-@class IOSIntArray;
-@class IOSLongArray;
-@class IOSObjectArray;
-@class IOSShortArray;
-@class JavaLangBoolean;
-@class JavaLangDouble;
-@class JavaLangFloat;
-@class JavaLangInteger;
-@class JavaLangLong;
-@class JavaMathBigDecimal;
-@protocol ComGoogleCommonCollectListMultimap;
-@protocol ComGoogleCommonCollectMultimap;
-@protocol ComGoogleCommonCollectMultiset;
-@protocol ComGoogleCommonCollectSetMultimap;
-@protocol ComGoogleCommonCollectTable;
-@protocol JavaLangComparable;
-@protocol JavaLangIterable;
-@protocol JavaUtilMap;
-@protocol JavaUtilSortedMap;
-@protocol JavaUtilSortedSet;
-
-@interface ComGoogleCommonTruthTestVerb : ComGoogleCommonTruthAbstractVerb
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy;
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)message;
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args;
-
-- (ComGoogleCommonTruthAtomicLongMapSubject *)thatWithComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)target;
-
-- (ComGoogleCommonTruthBigDecimalSubject *)thatWithJavaMathBigDecimal:(JavaMathBigDecimal *)target;
-
-- (ComGoogleCommonTruthBooleanSubject *)thatWithJavaLangBoolean:(JavaLangBoolean *)target;
-
-- (ComGoogleCommonTruthPrimitiveBooleanArraySubject *)thatWithBooleanArray:(IOSBooleanArray *)target;
-
-- (ComGoogleCommonTruthPrimitiveByteArraySubject *)thatWithByteArray:(IOSByteArray *)target;
-
-- (ComGoogleCommonTruthPrimitiveCharArraySubject *)thatWithCharArray:(IOSCharArray *)target;
-
-- (ComGoogleCommonTruthClassSubject *)thatWithIOSClass:(IOSClass *)target;
-
-- (ComGoogleCommonTruthDoubleSubject *)thatWithJavaLangDouble:(JavaLangDouble *)target;
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject *)thatWithDoubleArray:(IOSDoubleArray *)target;
-
-- (ComGoogleCommonTruthFloatSubject *)thatWithJavaLangFloat:(JavaLangFloat *)target;
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject *)thatWithFloatArray:(IOSFloatArray *)target;
-
-- (ComGoogleCommonTruthPrimitiveIntArraySubject *)thatWithIntArray:(IOSIntArray *)target;
-
-- (ComGoogleCommonTruthIntegerSubject *)thatWithJavaLangInteger:(JavaLangInteger *)target;
-
-- (ComGoogleCommonTruthIterableSubject *)thatWithJavaLangIterable:(id<JavaLangIterable>)target;
-
-- (ComGoogleCommonTruthListMultimapSubject *)thatWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)target;
-
-- (ComGoogleCommonTruthLongSubject *)thatWithJavaLangLong:(JavaLangLong *)target;
-
-- (ComGoogleCommonTruthPrimitiveLongArraySubject *)thatWithLongArray:(IOSLongArray *)target;
-
-- (ComGoogleCommonTruthMapSubject *)thatWithJavaUtilMap:(id<JavaUtilMap>)target;
-
-- (ComGoogleCommonTruthMultimapSubject *)thatWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)target;
-
-- (ComGoogleCommonTruthMultisetSubject *)thatWithComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)target;
-
-- (ComGoogleCommonTruthSubject *)thatWithId:(id)target;
-
-- (ComGoogleCommonTruthGuavaOptionalSubject *)thatWithComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)target;
-
-- (ComGoogleCommonTruthSetMultimapSubject *)thatWithComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)target;
-
-- (ComGoogleCommonTruthPrimitiveShortArraySubject *)thatWithShortArray:(IOSShortArray *)target;
-
-- (ComGoogleCommonTruthSortedMapSubject *)thatWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)target;
-
-- (ComGoogleCommonTruthSortedSetSubject *)thatWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)target;
-
-- (ComGoogleCommonTruthStringSubject *)thatWithNSString:(NSString *)target;
-
-- (ComGoogleCommonTruthComparableSubject *)thatWithJavaLangComparable:(id<JavaLangComparable>)target;
-
-- (ComGoogleCommonTruthObjectArraySubject *)thatWithNSObjectArray:(IOSObjectArray *)target;
-
-- (ComGoogleCommonTruthTableSubject *)thatWithComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)target;
-
-- (ComGoogleCommonTruthThrowableSubject *)thatWithNSException:(NSException *)target;
-
-- (ComGoogleCommonTruthTestVerb *)withFailureMessageWithNSString:(NSString *)failureMessage;
-
-- (ComGoogleCommonTruthTestVerb *)withFailureMessageWithNSString:(NSString *)format
-                                               withNSObjectArray:(IOSObjectArray *)args;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTestVerb)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthTestVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthFailureStrategy *failureStrategy) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthFailureStrategy *failureStrategy);
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthTestVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *message);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *message) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *message);
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthTestVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTestVerb)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthTestVerb")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTestVerb.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTestVerb.m
deleted file mode 100644
index 54405fea0..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTestVerb.m
+++ /dev/null
@@ -1,600 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractVerb.h"
-#include "ComGoogleCommonTruthAtomicLongMapSubject.h"
-#include "ComGoogleCommonTruthBigDecimalSubject.h"
-#include "ComGoogleCommonTruthBooleanSubject.h"
-#include "ComGoogleCommonTruthClassSubject.h"
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthDefaultSubject.h"
-#include "ComGoogleCommonTruthDoubleSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthFloatSubject.h"
-#include "ComGoogleCommonTruthGuavaOptionalSubject.h"
-#include "ComGoogleCommonTruthIntegerSubject.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthListMultimapSubject.h"
-#include "ComGoogleCommonTruthLongSubject.h"
-#include "ComGoogleCommonTruthMapSubject.h"
-#include "ComGoogleCommonTruthMultimapSubject.h"
-#include "ComGoogleCommonTruthMultisetSubject.h"
-#include "ComGoogleCommonTruthObjectArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveBooleanArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveByteArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveCharArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveDoubleArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveFloatArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveIntArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveLongArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveShortArraySubject.h"
-#include "ComGoogleCommonTruthSetMultimapSubject.h"
-#include "ComGoogleCommonTruthSortedMapSubject.h"
-#include "ComGoogleCommonTruthSortedSetSubject.h"
-#include "ComGoogleCommonTruthStringSubject.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthTableSubject.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "ComGoogleCommonTruthThrowableSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Optional.h"
-#include "com/google/common/base/Preconditions.h"
-#include "com/google/common/collect/ListMultimap.h"
-#include "com/google/common/collect/Multimap.h"
-#include "com/google/common/collect/Multiset.h"
-#include "com/google/common/collect/SetMultimap.h"
-#include "com/google/common/collect/Table.h"
-#include "com/google/common/util/concurrent/AtomicLongMap.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/Comparable.h"
-#include "java/lang/Double.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/Long.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/math/BigDecimal.h"
-#include "java/util/Map.h"
-#include "java/util/SortedMap.h"
-#include "java/util/SortedSet.h"
-#include "javax/annotation/Nullable.h"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$8();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$9();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$10();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$11();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$12();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$13();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$14();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$15();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$16();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$17();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$18();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$19();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$20();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$21();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$22();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$23();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$24();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$25();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$26();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$27();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$28();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$29();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$30();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$31();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$32();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$33();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$34();
-
-@interface ComGoogleCommonTruthTestVerb_1 : ComGoogleCommonTruthComparableSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                     withJavaLangComparable:(id<JavaLangComparable>)subject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTestVerb_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthTestVerb_1 *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject);
-
-__attribute__((unused)) static ComGoogleCommonTruthTestVerb_1 *new_ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthTestVerb_1 *create_ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject);
-
-@implementation ComGoogleCommonTruthTestVerb
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy {
-  ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(self, failureStrategy);
-  return self;
-}
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)message {
-  ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(self, failureStrategy, message);
-  return self;
-}
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                               withNSString:(NSString *)format
-                                          withNSObjectArray:(IOSObjectArray *)args {
-  ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, failureStrategy, format, args);
-  return self;
-}
-
-- (ComGoogleCommonTruthComparableSubject *)thatWithJavaLangComparable:(id<JavaLangComparable>)target {
-  return create_ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthBigDecimalSubject *)thatWithJavaMathBigDecimal:(JavaMathBigDecimal *)target {
-  return create_ComGoogleCommonTruthBigDecimalSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaMathBigDecimal_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthSubject *)thatWithId:(id)target {
-  return create_ComGoogleCommonTruthDefaultSubject_initWithComGoogleCommonTruthFailureStrategy_withId_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthClassSubject *)thatWithIOSClass:(IOSClass *)target {
-  return create_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthThrowableSubject *)thatWithNSException:(NSException *)target {
-  return create_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthLongSubject *)thatWithJavaLangLong:(JavaLangLong *)target {
-  return create_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangLong_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthDoubleSubject *)thatWithJavaLangDouble:(JavaLangDouble *)target {
-  return create_ComGoogleCommonTruthDoubleSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangDouble_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthFloatSubject *)thatWithJavaLangFloat:(JavaLangFloat *)target {
-  return create_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangFloat_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthIntegerSubject *)thatWithJavaLangInteger:(JavaLangInteger *)target {
-  return create_ComGoogleCommonTruthIntegerSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangInteger_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthBooleanSubject *)thatWithJavaLangBoolean:(JavaLangBoolean *)target {
-  return create_ComGoogleCommonTruthBooleanSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangBoolean_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthStringSubject *)thatWithNSString:(NSString *)target {
-  return create_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthIterableSubject *)thatWithJavaLangIterable:(id<JavaLangIterable>)target {
-  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthSortedSetSubject *)thatWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)target {
-  return create_ComGoogleCommonTruthSortedSetSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedSet_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthObjectArraySubject *)thatWithNSObjectArray:(IOSObjectArray *)target {
-  return create_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveBooleanArraySubject *)thatWithBooleanArray:(IOSBooleanArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveBooleanArraySubject_initWithComGoogleCommonTruthFailureStrategy_withBooleanArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveShortArraySubject *)thatWithShortArray:(IOSShortArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveShortArraySubject_initWithComGoogleCommonTruthFailureStrategy_withShortArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveIntArraySubject *)thatWithIntArray:(IOSIntArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveLongArraySubject *)thatWithLongArray:(IOSLongArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveLongArraySubject_initWithComGoogleCommonTruthFailureStrategy_withLongArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveCharArraySubject *)thatWithCharArray:(IOSCharArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveCharArraySubject_initWithComGoogleCommonTruthFailureStrategy_withCharArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveByteArraySubject *)thatWithByteArray:(IOSByteArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveFloatArraySubject *)thatWithFloatArray:(IOSFloatArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveFloatArraySubject_initWithComGoogleCommonTruthFailureStrategy_withFloatArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthPrimitiveDoubleArraySubject *)thatWithDoubleArray:(IOSDoubleArray *)target {
-  return create_ComGoogleCommonTruthPrimitiveDoubleArraySubject_initWithComGoogleCommonTruthFailureStrategy_withDoubleArray_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthGuavaOptionalSubject *)thatWithComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)target {
-  return create_ComGoogleCommonTruthGuavaOptionalSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonBaseOptional_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthMapSubject *)thatWithJavaUtilMap:(id<JavaUtilMap>)target {
-  return create_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthSortedMapSubject *)thatWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)target {
-  return create_ComGoogleCommonTruthSortedMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilSortedMap_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthMultimapSubject *)thatWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)target {
-  return create_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultimap_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthListMultimapSubject *)thatWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)target {
-  return create_ComGoogleCommonTruthListMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectListMultimap_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthSetMultimapSubject *)thatWithComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)target {
-  return create_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthMultisetSubject *)thatWithComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)target {
-  return create_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectMultiset_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthTableSubject *)thatWithComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)target {
-  return create_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectTable_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthAtomicLongMapSubject *)thatWithComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)target {
-  return create_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_([self getFailureStrategy], target);
-}
-
-- (ComGoogleCommonTruthTestVerb *)withFailureMessageWithNSString:(NSString *)failureMessage {
-  return create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_([self getFailureStrategy], @"%s", [IOSObjectArray arrayWithObjects:(id[]){ failureMessage } count:1 type:NSObject_class_()]);
-}
-
-- (ComGoogleCommonTruthTestVerb *)withFailureMessageWithNSString:(NSString *)format
-                                               withNSObjectArray:(IOSObjectArray *)args {
-  return create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_([self getFailureStrategy], format, args);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, 2 },
-    { NULL, NULL, 0x81, -1, 3, -1, -1, -1, 4 },
-    { NULL, "LComGoogleCommonTruthComparableSubject;", 0x1, 5, 6, -1, 7, -1, 8 },
-    { NULL, "LComGoogleCommonTruthBigDecimalSubject;", 0x1, 5, 9, -1, -1, -1, 10 },
-    { NULL, "LComGoogleCommonTruthSubject;", 0x1, 5, 11, -1, 12, -1, 13 },
-    { NULL, "LComGoogleCommonTruthClassSubject;", 0x1, 5, 14, -1, 15, -1, 16 },
-    { NULL, "LComGoogleCommonTruthThrowableSubject;", 0x1, 5, 17, -1, -1, -1, 18 },
-    { NULL, "LComGoogleCommonTruthLongSubject;", 0x1, 5, 19, -1, -1, -1, 20 },
-    { NULL, "LComGoogleCommonTruthDoubleSubject;", 0x1, 5, 21, -1, -1, -1, 22 },
-    { NULL, "LComGoogleCommonTruthFloatSubject;", 0x1, 5, 23, -1, -1, -1, 24 },
-    { NULL, "LComGoogleCommonTruthIntegerSubject;", 0x1, 5, 25, -1, -1, -1, 26 },
-    { NULL, "LComGoogleCommonTruthBooleanSubject;", 0x1, 5, 27, -1, -1, -1, 28 },
-    { NULL, "LComGoogleCommonTruthStringSubject;", 0x1, 5, 29, -1, -1, -1, 30 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, 5, 31, -1, 32, -1, 33 },
-    { NULL, "LComGoogleCommonTruthSortedSetSubject;", 0x1, 5, 34, -1, 35, -1, 36 },
-    { NULL, "LComGoogleCommonTruthObjectArraySubject;", 0x1, 5, 37, -1, 38, -1, 39 },
-    { NULL, "LComGoogleCommonTruthPrimitiveBooleanArraySubject;", 0x1, 5, 40, -1, -1, -1, 41 },
-    { NULL, "LComGoogleCommonTruthPrimitiveShortArraySubject;", 0x1, 5, 42, -1, -1, -1, 43 },
-    { NULL, "LComGoogleCommonTruthPrimitiveIntArraySubject;", 0x1, 5, 44, -1, -1, -1, 45 },
-    { NULL, "LComGoogleCommonTruthPrimitiveLongArraySubject;", 0x1, 5, 46, -1, -1, -1, 47 },
-    { NULL, "LComGoogleCommonTruthPrimitiveCharArraySubject;", 0x1, 5, 48, -1, -1, -1, 49 },
-    { NULL, "LComGoogleCommonTruthPrimitiveByteArraySubject;", 0x1, 5, 50, -1, -1, -1, 51 },
-    { NULL, "LComGoogleCommonTruthPrimitiveFloatArraySubject;", 0x1, 5, 52, -1, -1, -1, 53 },
-    { NULL, "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", 0x1, 5, 54, -1, -1, -1, 55 },
-    { NULL, "LComGoogleCommonTruthGuavaOptionalSubject;", 0x1, 5, 56, -1, 57, -1, 58 },
-    { NULL, "LComGoogleCommonTruthMapSubject;", 0x1, 5, 59, -1, 60, -1, 61 },
-    { NULL, "LComGoogleCommonTruthSortedMapSubject;", 0x1, 5, 62, -1, 63, -1, 64 },
-    { NULL, "LComGoogleCommonTruthMultimapSubject;", 0x1, 5, 65, -1, 66, -1, 67 },
-    { NULL, "LComGoogleCommonTruthListMultimapSubject;", 0x1, 5, 68, -1, 69, -1, 70 },
-    { NULL, "LComGoogleCommonTruthSetMultimapSubject;", 0x1, 5, 71, -1, 72, -1, 73 },
-    { NULL, "LComGoogleCommonTruthMultisetSubject;", 0x1, 5, 74, -1, 75, -1, 76 },
-    { NULL, "LComGoogleCommonTruthTableSubject;", 0x1, 5, 77, -1, 78, -1, 79 },
-    { NULL, "LComGoogleCommonTruthAtomicLongMapSubject;", 0x1, 5, 80, -1, 81, -1, 82 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x1, 83, 29, -1, -1, -1, 84 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x81, 83, 85, -1, -1, -1, 86 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:);
-  methods[1].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSString:);
-  methods[2].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSString:withNSObjectArray:);
-  methods[3].selector = @selector(thatWithJavaLangComparable:);
-  methods[4].selector = @selector(thatWithJavaMathBigDecimal:);
-  methods[5].selector = @selector(thatWithId:);
-  methods[6].selector = @selector(thatWithIOSClass:);
-  methods[7].selector = @selector(thatWithNSException:);
-  methods[8].selector = @selector(thatWithJavaLangLong:);
-  methods[9].selector = @selector(thatWithJavaLangDouble:);
-  methods[10].selector = @selector(thatWithJavaLangFloat:);
-  methods[11].selector = @selector(thatWithJavaLangInteger:);
-  methods[12].selector = @selector(thatWithJavaLangBoolean:);
-  methods[13].selector = @selector(thatWithNSString:);
-  methods[14].selector = @selector(thatWithJavaLangIterable:);
-  methods[15].selector = @selector(thatWithJavaUtilSortedSet:);
-  methods[16].selector = @selector(thatWithNSObjectArray:);
-  methods[17].selector = @selector(thatWithBooleanArray:);
-  methods[18].selector = @selector(thatWithShortArray:);
-  methods[19].selector = @selector(thatWithIntArray:);
-  methods[20].selector = @selector(thatWithLongArray:);
-  methods[21].selector = @selector(thatWithCharArray:);
-  methods[22].selector = @selector(thatWithByteArray:);
-  methods[23].selector = @selector(thatWithFloatArray:);
-  methods[24].selector = @selector(thatWithDoubleArray:);
-  methods[25].selector = @selector(thatWithComGoogleCommonBaseOptional:);
-  methods[26].selector = @selector(thatWithJavaUtilMap:);
-  methods[27].selector = @selector(thatWithJavaUtilSortedMap:);
-  methods[28].selector = @selector(thatWithComGoogleCommonCollectMultimap:);
-  methods[29].selector = @selector(thatWithComGoogleCommonCollectListMultimap:);
-  methods[30].selector = @selector(thatWithComGoogleCommonCollectSetMultimap:);
-  methods[31].selector = @selector(thatWithComGoogleCommonCollectMultiset:);
-  methods[32].selector = @selector(thatWithComGoogleCommonCollectTable:);
-  methods[33].selector = @selector(thatWithComGoogleCommonUtilConcurrentAtomicLongMap:);
-  methods[34].selector = @selector(withFailureMessageWithNSString:);
-  methods[35].selector = @selector(withFailureMessageWithNSString:withNSObjectArray:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;", "LComGoogleCommonTruthFailureStrategy;LNSString;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$0, "LComGoogleCommonTruthFailureStrategy;LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$1, "that", "LJavaLangComparable;", "<T::Ljava/lang/Comparable<*>;>(TT;)Lcom/google/common/truth/ComparableSubject<*TT;>;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$2, "LJavaMathBigDecimal;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$3, "LNSObject;", "(Ljava/lang/Object;)Lcom/google/common/truth/Subject<Lcom/google/common/truth/DefaultSubject;Ljava/lang/Object;>;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$4, "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/google/common/truth/ClassSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$5, "LNSException;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$6, "LJavaLangLong;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$7, "LJavaLangDouble;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$8, "LJavaLangFloat;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$9, "LJavaLangInteger;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$10, "LJavaLangBoolean;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$11, "LNSString;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$12, "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)Lcom/google/common/truth/IterableSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$13, "LJavaUtilSortedSet;", "(Ljava/util/SortedSet<*>;)Lcom/google/common/truth/SortedSetSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$14, "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)Lcom/google/common/truth/ObjectArraySubject<TT;>;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$15, "[Z", (void *)&ComGoogleCommonTruthTestVerb__Annotations$16, "[S", (void *)&ComGoogleCommonTruthTestVerb__Annotations$17, "[I", (void *)&ComGoogleCommonTruthTestVerb__Annotations$18, "[J", (void *)&ComGoogleCommonTruthTestVerb__Annotations$19, "[C", (void *)&ComGoogleCommonTruthTestVerb__Annotations$20, "[B", (void *)&ComGoogleCommonTruthTestVerb__Annotations$21, "[F", (void *)&ComGoogleCommonTruthTestVerb__Annotations$22, "[D", (void *)&ComGoogleCommonTruthTestVerb__Annotations$23, "LComGoogleCommonBaseOptional;", "(Lcom/google/common/base/Optional<*>;)Lcom/google/common/truth/GuavaOptionalSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$24, "LJavaUtilMap;", "(Ljava/util/Map<**>;)Lcom/google/common/truth/MapSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$25, "LJavaUtilSortedMap;", "(Ljava/util/SortedMap<**>;)Lcom/google/common/truth/SortedMapSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$26, "LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<**>;)Lcom/google/common/truth/MultimapSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$27, "LComGoogleCommonCollectListMultimap;", "(Lcom/google/common/collect/ListMultimap<**>;)Lcom/google/common/truth/ListMultimapSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$28, "LComGoogleCommonCollectSetMultimap;", "(Lcom/google/common/collect/SetMultimap<**>;)Lcom/google/common/truth/SetMultimapSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$29, "LComGoogleCommonCollectMultiset;", "(Lcom/google/common/collect/Multiset<*>;)Lcom/google/common/truth/MultisetSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$30, "LComGoogleCommonCollectTable;", "(Lcom/google/common/collect/Table<***>;)Lcom/google/common/truth/TableSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$31, "LComGoogleCommonUtilConcurrentAtomicLongMap;", "(Lcom/google/common/util/concurrent/AtomicLongMap<*>;)Lcom/google/common/truth/AtomicLongMapSubject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$32, "withFailureMessage", (void *)&ComGoogleCommonTruthTestVerb__Annotations$33, "LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthTestVerb__Annotations$34, "Lcom/google/common/truth/AbstractVerb<Lcom/google/common/truth/TestVerb;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTestVerb = { "TestVerb", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x1, 36, 0, -1, -1, -1, 87, -1 };
-  return &_ComGoogleCommonTruthTestVerb;
-}
-
-@end
-
-void ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthTestVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy) {
-  ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(self, failureStrategy, nil);
-}
-
-ComGoogleCommonTruthTestVerb *new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthFailureStrategy *failureStrategy) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTestVerb, initWithComGoogleCommonTruthFailureStrategy_, failureStrategy)
-}
-
-ComGoogleCommonTruthTestVerb *create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthFailureStrategy *failureStrategy) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTestVerb, initWithComGoogleCommonTruthFailureStrategy_, failureStrategy)
-}
-
-void ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthTestVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *message) {
-  ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, failureStrategy, message == nil ? nil : @"%s", message == nil ? [IOSObjectArray arrayWithLength:0 type:NSObject_class_()] : [IOSObjectArray arrayWithObjects:(id[]){ message } count:1 type:NSObject_class_()]);
-}
-
-ComGoogleCommonTruthTestVerb *new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *message) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTestVerb, initWithComGoogleCommonTruthFailureStrategy_withNSString_, failureStrategy, message)
-}
-
-ComGoogleCommonTruthTestVerb *create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *message) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTestVerb, initWithComGoogleCommonTruthFailureStrategy_withNSString_, failureStrategy, message)
-}
-
-void ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthTestVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args) {
-  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, ComGoogleCommonBasePreconditions_checkNotNullWithId_(failureStrategy), format, args);
-}
-
-ComGoogleCommonTruthTestVerb *new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTestVerb, initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_, failureStrategy, format, args)
-}
-
-ComGoogleCommonTruthTestVerb *create_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTestVerb, initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_, failureStrategy, format, args)
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$9() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$10() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$11() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$12() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$13() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$14() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$15() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$16() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$17() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$18() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$19() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$20() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$21() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$22() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$23() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$24() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$25() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$26() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$27() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$28() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$29() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$30() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$31() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$32() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$33() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTestVerb__Annotations$34() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthTestVerb)
-
-@implementation ComGoogleCommonTruthTestVerb_1
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                     withJavaLangComparable:(id<JavaLangComparable>)subject {
-  ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withJavaLangComparable:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LJavaLangComparable;", "LComGoogleCommonTruthTestVerb;", "thatWithJavaLangComparable:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTestVerb_1 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 1, -1, 2, -1, -1 };
-  return &_ComGoogleCommonTruthTestVerb_1;
-}
-
-@end
-
-void ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthTestVerb_1 *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject) {
-  ComGoogleCommonTruthComparableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(self, failureStrategy, subject);
-}
-
-ComGoogleCommonTruthTestVerb_1 *new_ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTestVerb_1, initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_, failureStrategy, subject)
-}
-
-ComGoogleCommonTruthTestVerb_1 *create_ComGoogleCommonTruthTestVerb_1_initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaLangComparable> subject) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTestVerb_1, initWithComGoogleCommonTruthFailureStrategy_withJavaLangComparable_, failureStrategy, subject)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthThrowableSubject.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthThrowableSubject.h
deleted file mode 100644
index 638ab2b74..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthThrowableSubject.h
+++ /dev/null
@@ -1,66 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject")
-#ifdef RESTRICT_ComGoogleCommonTruthThrowableSubject
-#define INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthThrowableSubject
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthThrowableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject || defined(INCLUDE_ComGoogleCommonTruthThrowableSubject))
-#define ComGoogleCommonTruthThrowableSubject_
-
-#define RESTRICT_ComGoogleCommonTruthSubject 1
-#define INCLUDE_ComGoogleCommonTruthSubject 1
-#include "ComGoogleCommonTruthSubject.h"
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class IOSObjectArray;
-
-@interface ComGoogleCommonTruthThrowableSubject : ComGoogleCommonTruthSubject
-
-#pragma mark Public
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                            withNSException:(NSException *)throwable;
-
-- (void)hasMessageWithNSString:(NSString *)expected;
-
-- (ComGoogleCommonTruthThrowableSubject *)namedWithNSString:(NSString *)arg0
-                                          withNSObjectArray:(IOSObjectArray *)arg1;
-
-#pragma mark Protected
-
-- (NSException *)actual;
-
-- (NSException *)getSubject;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthThrowableSubject)
-
-FOUNDATION_EXPORT void ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthThrowableSubject *new_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) NS_RETURNS_RETAINED;
-
-FOUNDATION_EXPORT ComGoogleCommonTruthThrowableSubject *create_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthThrowableSubject)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthThrowableSubject.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthThrowableSubject.m
deleted file mode 100644
index cafaca2ba..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthThrowableSubject.m
+++ /dev/null
@@ -1,203 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthThrowableSubject.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Objects.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/Nullable.h"
-
-#pragma clang diagnostic ignored "-Wincomplete-implementation"
-
-@interface ComGoogleCommonTruthThrowableSubject ()
-
-+ (ComGoogleCommonTruthFailureStrategy *)causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
-                                                                                       withNSException:(NSException *)defaultCause;
-
-@end
-
-__attribute__((unused)) static ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *delegate, NSException *defaultCause);
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$1();
-
-@interface ComGoogleCommonTruthThrowableSubject_1 : ComGoogleCommonTruthFailureStrategy {
- @public
-  ComGoogleCommonTruthFailureStrategy *val$delegate_;
-  NSException *val$defaultCause_;
-}
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)capture$0
-                                            withNSException:(NSException *)capture$1;
-
-- (void)failWithNSString:(NSString *)message;
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause;
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthThrowableSubject_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject_1 *self, ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1);
-
-__attribute__((unused)) static ComGoogleCommonTruthThrowableSubject_1 *new_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthThrowableSubject_1 *create_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1);
-
-@implementation ComGoogleCommonTruthThrowableSubject
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
-                                            withNSException:(NSException *)throwable {
-  ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(self, failureStrategy, throwable);
-  return self;
-}
-
-- (void)hasMessageWithNSString:(NSString *)expected {
-  NSString *actual = [((NSException *) nil_chk([self actual])) getMessage];
-  if (!ComGoogleCommonBaseObjects_equalWithId_withId_(expected, actual)) {
-    if (expected != nil && actual != nil) {
-      [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failComparingWithNSString:JreStrcat("$$$C", [self actualAsString], @" does not have message <", expected, '>') withJavaLangCharSequence:expected withJavaLangCharSequence:actual];
-    }
-    else {
-      [self failWithNSString:@"has message" withId:expected];
-    }
-  }
-}
-
-+ (ComGoogleCommonTruthFailureStrategy *)causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
-                                                                                       withNSException:(NSException *)defaultCause {
-  return ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(delegate, defaultCause);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, 1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, 4 },
-    { NULL, "LComGoogleCommonTruthFailureStrategy;", 0xa, 5, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSException:);
-  methods[1].selector = @selector(hasMessageWithNSString:);
-  methods[2].selector = @selector(causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:withNSException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LNSException;", (void *)&ComGoogleCommonTruthThrowableSubject__Annotations$0, "hasMessage", "LNSString;", (void *)&ComGoogleCommonTruthThrowableSubject__Annotations$1, "causeInsertingStrategy", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/ThrowableSubject;Ljava/lang/Throwable;>;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthThrowableSubject = { "ThrowableSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, 6, -1 };
-  return &_ComGoogleCommonTruthThrowableSubject;
-}
-
-@end
-
-void ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) {
-  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(failureStrategy, throwable), throwable);
-}
-
-ComGoogleCommonTruthThrowableSubject *new_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthThrowableSubject, initWithComGoogleCommonTruthFailureStrategy_withNSException_, failureStrategy, throwable)
-}
-
-ComGoogleCommonTruthThrowableSubject *create_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthThrowableSubject, initWithComGoogleCommonTruthFailureStrategy_withNSException_, failureStrategy, throwable)
-}
-
-ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *delegate, NSException *defaultCause) {
-  ComGoogleCommonTruthThrowableSubject_initialize();
-  return create_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(delegate, defaultCause);
-}
-
-IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthThrowableSubject)
-
-@implementation ComGoogleCommonTruthThrowableSubject_1
-
-- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)capture$0
-                                            withNSException:(NSException *)capture$1 {
-  ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(self, capture$0, capture$1);
-  return self;
-}
-
-- (void)failWithNSString:(NSString *)message {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(val$delegate_)) failWithNSString:message withNSException:val$defaultCause_];
-}
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause {
-  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(val$delegate_)) failWithNSString:message withNSException:cause];
-}
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  @try {
-    [((ComGoogleCommonTruthFailureStrategy *) nil_chk(val$delegate_)) failComparingWithNSString:message withJavaLangCharSequence:expected withJavaLangCharSequence:actual];
-  }
-  @catch (JavaLangAssertionError *e) {
-    [((JavaLangAssertionError *) nil_chk(e)) initCauseWithNSException:val$defaultCause_];
-    @throw e;
-  }
-}
-
-- (void)dealloc {
-  RELEASE_(val$delegate_);
-  RELEASE_(val$defaultCause_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSException:);
-  methods[1].selector = @selector(failWithNSString:);
-  methods[2].selector = @selector(failWithNSString:withNSException:);
-  methods[3].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "val$delegate_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-    { "val$defaultCause_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { "fail", "LNSString;", "LNSString;LNSException;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "LComGoogleCommonTruthThrowableSubject;", "causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:withNSException:" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthThrowableSubject_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 4, 2, 5, -1, 6, -1, -1 };
-  return &_ComGoogleCommonTruthThrowableSubject_1;
-}
-
-@end
-
-void ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject_1 *self, ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) {
-  JreStrongAssign(&self->val$delegate_, capture$0);
-  JreStrongAssign(&self->val$defaultCause_, capture$1);
-  ComGoogleCommonTruthFailureStrategy_init(self);
-}
-
-ComGoogleCommonTruthThrowableSubject_1 *new_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthThrowableSubject_1, initWithComGoogleCommonTruthFailureStrategy_withNSException_, capture$0, capture$1)
-}
-
-ComGoogleCommonTruthThrowableSubject_1 *create_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthThrowableSubject_1, initWithComGoogleCommonTruthFailureStrategy_withNSException_, capture$0, capture$1)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruth.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruth.h
deleted file mode 100644
index 1a7a200ec..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruth.h
+++ /dev/null
@@ -1,249 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthTruth")
-#ifdef RESTRICT_ComGoogleCommonTruthTruth
-#define INCLUDE_ALL_ComGoogleCommonTruthTruth 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthTruth 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthTruth
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthTruth_) && (INCLUDE_ALL_ComGoogleCommonTruthTruth || defined(INCLUDE_ComGoogleCommonTruthTruth))
-#define ComGoogleCommonTruthTruth_
-
-@class ComGoogleCommonBaseOptional;
-@class ComGoogleCommonTruthAbstractVerb_DelegatedVerb;
-@class ComGoogleCommonTruthAtomicLongMapSubject;
-@class ComGoogleCommonTruthBigDecimalSubject;
-@class ComGoogleCommonTruthBooleanSubject;
-@class ComGoogleCommonTruthClassSubject;
-@class ComGoogleCommonTruthComparableSubject;
-@class ComGoogleCommonTruthDoubleSubject;
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthFloatSubject;
-@class ComGoogleCommonTruthGuavaOptionalSubject;
-@class ComGoogleCommonTruthIntegerSubject;
-@class ComGoogleCommonTruthIterableSubject;
-@class ComGoogleCommonTruthListMultimapSubject;
-@class ComGoogleCommonTruthLongSubject;
-@class ComGoogleCommonTruthMapSubject;
-@class ComGoogleCommonTruthMultimapSubject;
-@class ComGoogleCommonTruthMultisetSubject;
-@class ComGoogleCommonTruthObjectArraySubject;
-@class ComGoogleCommonTruthPrimitiveBooleanArraySubject;
-@class ComGoogleCommonTruthPrimitiveByteArraySubject;
-@class ComGoogleCommonTruthPrimitiveCharArraySubject;
-@class ComGoogleCommonTruthPrimitiveDoubleArraySubject;
-@class ComGoogleCommonTruthPrimitiveFloatArraySubject;
-@class ComGoogleCommonTruthPrimitiveIntArraySubject;
-@class ComGoogleCommonTruthPrimitiveLongArraySubject;
-@class ComGoogleCommonTruthPrimitiveShortArraySubject;
-@class ComGoogleCommonTruthSetMultimapSubject;
-@class ComGoogleCommonTruthSortedMapSubject;
-@class ComGoogleCommonTruthSortedSetSubject;
-@class ComGoogleCommonTruthStringSubject;
-@class ComGoogleCommonTruthSubject;
-@class ComGoogleCommonTruthSubjectFactory;
-@class ComGoogleCommonTruthTableSubject;
-@class ComGoogleCommonTruthTestVerb;
-@class ComGoogleCommonTruthThrowableSubject;
-@class ComGoogleCommonUtilConcurrentAtomicLongMap;
-@class IOSBooleanArray;
-@class IOSByteArray;
-@class IOSCharArray;
-@class IOSClass;
-@class IOSDoubleArray;
-@class IOSFloatArray;
-@class IOSIntArray;
-@class IOSLongArray;
-@class IOSObjectArray;
-@class IOSShortArray;
-@class JavaLangBoolean;
-@class JavaLangDouble;
-@class JavaLangFloat;
-@class JavaLangInteger;
-@class JavaLangLong;
-@class JavaMathBigDecimal;
-@protocol ComGoogleCommonCollectListMultimap;
-@protocol ComGoogleCommonCollectMultimap;
-@protocol ComGoogleCommonCollectMultiset;
-@protocol ComGoogleCommonCollectSetMultimap;
-@protocol ComGoogleCommonCollectTable;
-@protocol JavaLangComparable;
-@protocol JavaLangIterable;
-@protocol JavaUtilMap;
-@protocol JavaUtilSortedMap;
-@protocol JavaUtilSortedSet;
-
-@interface ComGoogleCommonTruthTruth : NSObject
-
-#pragma mark Public
-
-+ (ComGoogleCommonTruthTestVerb *)assert_;
-
-+ (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)assertAboutWithComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory;
-
-+ (ComGoogleCommonTruthAtomicLongMapSubject *)assertThatWithComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)target;
-
-+ (ComGoogleCommonTruthBigDecimalSubject *)assertThatWithJavaMathBigDecimal:(JavaMathBigDecimal *)target;
-
-+ (ComGoogleCommonTruthBooleanSubject *)assertThatWithJavaLangBoolean:(JavaLangBoolean *)target;
-
-+ (ComGoogleCommonTruthPrimitiveBooleanArraySubject *)assertThatWithBooleanArray:(IOSBooleanArray *)target;
-
-+ (ComGoogleCommonTruthPrimitiveByteArraySubject *)assertThatWithByteArray:(IOSByteArray *)target;
-
-+ (ComGoogleCommonTruthPrimitiveCharArraySubject *)assertThatWithCharArray:(IOSCharArray *)target;
-
-+ (ComGoogleCommonTruthClassSubject *)assertThatWithIOSClass:(IOSClass *)target;
-
-+ (ComGoogleCommonTruthDoubleSubject *)assertThatWithJavaLangDouble:(JavaLangDouble *)target;
-
-+ (ComGoogleCommonTruthPrimitiveDoubleArraySubject *)assertThatWithDoubleArray:(IOSDoubleArray *)target;
-
-+ (ComGoogleCommonTruthFloatSubject *)assertThatWithJavaLangFloat:(JavaLangFloat *)target;
-
-+ (ComGoogleCommonTruthPrimitiveFloatArraySubject *)assertThatWithFloatArray:(IOSFloatArray *)target;
-
-+ (ComGoogleCommonTruthPrimitiveIntArraySubject *)assertThatWithIntArray:(IOSIntArray *)target;
-
-+ (ComGoogleCommonTruthIntegerSubject *)assertThatWithJavaLangInteger:(JavaLangInteger *)target;
-
-+ (ComGoogleCommonTruthIterableSubject *)assertThatWithJavaLangIterable:(id<JavaLangIterable>)target;
-
-+ (ComGoogleCommonTruthListMultimapSubject *)assertThatWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)target;
-
-+ (ComGoogleCommonTruthLongSubject *)assertThatWithJavaLangLong:(JavaLangLong *)target;
-
-+ (ComGoogleCommonTruthPrimitiveLongArraySubject *)assertThatWithLongArray:(IOSLongArray *)target;
-
-+ (ComGoogleCommonTruthMapSubject *)assertThatWithJavaUtilMap:(id<JavaUtilMap>)target;
-
-+ (ComGoogleCommonTruthMultimapSubject *)assertThatWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)target;
-
-+ (ComGoogleCommonTruthMultisetSubject *)assertThatWithComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)target;
-
-+ (ComGoogleCommonTruthSubject *)assertThatWithId:(id)target;
-
-+ (ComGoogleCommonTruthGuavaOptionalSubject *)assertThatWithComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)target;
-
-+ (ComGoogleCommonTruthSetMultimapSubject *)assertThatWithComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)target;
-
-+ (ComGoogleCommonTruthPrimitiveShortArraySubject *)assertThatWithShortArray:(IOSShortArray *)target;
-
-+ (ComGoogleCommonTruthSortedMapSubject *)assertThatWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)target;
-
-+ (ComGoogleCommonTruthSortedSetSubject *)assertThatWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)target;
-
-+ (ComGoogleCommonTruthStringSubject *)assertThatWithNSString:(NSString *)target;
-
-+ (ComGoogleCommonTruthComparableSubject *)assertThatWithJavaLangComparable:(id<JavaLangComparable>)target;
-
-+ (ComGoogleCommonTruthObjectArraySubject *)assertThatWithNSObjectArray:(IOSObjectArray *)target;
-
-+ (ComGoogleCommonTruthTableSubject *)assertThatWithComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)target;
-
-+ (ComGoogleCommonTruthThrowableSubject *)assertThatWithNSException:(NSException *)target;
-
-+ (ComGoogleCommonTruthTestVerb *)assertWithMessageWithNSString:(NSString *)messageToPrepend;
-
-+ (ComGoogleCommonTruthTestVerb *)assertWithMessageWithNSString:(NSString *)format
-                                              withNSObjectArray:(IOSObjectArray *)args;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthTruth)
-
-inline ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruth_get_THROW_ASSERTION_ERROR();
-/*! INTERNAL ONLY - Use accessor function from above. */
-FOUNDATION_EXPORT ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruth_THROW_ASSERTION_ERROR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthTruth, THROW_ASSERTION_ERROR, ComGoogleCommonTruthFailureStrategy *)
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_assert_();
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_assertWithMessageWithNSString_(NSString *messageToPrepend);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_assertWithMessageWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_DelegatedVerb *ComGoogleCommonTruthTruth_assertAboutWithComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthSubjectFactory *factory);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthComparableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangComparable_(id<JavaLangComparable> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthBigDecimalSubject *ComGoogleCommonTruthTruth_assertThatWithJavaMathBigDecimal_(JavaMathBigDecimal *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSubject *ComGoogleCommonTruthTruth_assertThatWithId_(id target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthClassSubject *ComGoogleCommonTruthTruth_assertThatWithIOSClass_(IOSClass *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthThrowableSubject *ComGoogleCommonTruthTruth_assertThatWithNSException_(NSException *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthLongSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangLong_(JavaLangLong *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthDoubleSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangDouble_(JavaLangDouble *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthFloatSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangFloat_(JavaLangFloat *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthIntegerSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_(JavaLangInteger *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthBooleanSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangBoolean_(JavaLangBoolean *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthStringSubject *ComGoogleCommonTruthTruth_assertThatWithNSString_(NSString *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_(id<JavaLangIterable> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSortedSetSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilSortedSet_(id<JavaUtilSortedSet> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthObjectArraySubject *ComGoogleCommonTruthTruth_assertThatWithNSObjectArray_(IOSObjectArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveBooleanArraySubject *ComGoogleCommonTruthTruth_assertThatWithBooleanArray_(IOSBooleanArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveShortArraySubject *ComGoogleCommonTruthTruth_assertThatWithShortArray_(IOSShortArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveIntArraySubject *ComGoogleCommonTruthTruth_assertThatWithIntArray_(IOSIntArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveLongArraySubject *ComGoogleCommonTruthTruth_assertThatWithLongArray_(IOSLongArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveByteArraySubject *ComGoogleCommonTruthTruth_assertThatWithByteArray_(IOSByteArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveCharArraySubject *ComGoogleCommonTruthTruth_assertThatWithCharArray_(IOSCharArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveFloatArraySubject *ComGoogleCommonTruthTruth_assertThatWithFloatArray_(IOSFloatArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveDoubleArraySubject *ComGoogleCommonTruthTruth_assertThatWithDoubleArray_(IOSDoubleArray *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthGuavaOptionalSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonBaseOptional_(ComGoogleCommonBaseOptional *target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMapSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilMap_(id<JavaUtilMap> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSortedMapSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilSortedMap_(id<JavaUtilSortedMap> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthListMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectListMultimap_(id<ComGoogleCommonCollectListMultimap> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthSetMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectSetMultimap_(id<ComGoogleCommonCollectSetMultimap> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthMultisetSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultiset_(id<ComGoogleCommonCollectMultiset> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTableSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectTable_(id<ComGoogleCommonCollectTable> target);
-
-FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *target);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTruth)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthTruth")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruth.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruth.m
deleted file mode 100644
index cf5f6455b..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruth.m
+++ /dev/null
@@ -1,771 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthAbstractVerb.h"
-#include "ComGoogleCommonTruthAtomicLongMapSubject.h"
-#include "ComGoogleCommonTruthBigDecimalSubject.h"
-#include "ComGoogleCommonTruthBooleanSubject.h"
-#include "ComGoogleCommonTruthClassSubject.h"
-#include "ComGoogleCommonTruthComparableSubject.h"
-#include "ComGoogleCommonTruthDoubleSubject.h"
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthFloatSubject.h"
-#include "ComGoogleCommonTruthGuavaOptionalSubject.h"
-#include "ComGoogleCommonTruthIntegerSubject.h"
-#include "ComGoogleCommonTruthIterableSubject.h"
-#include "ComGoogleCommonTruthListMultimapSubject.h"
-#include "ComGoogleCommonTruthLongSubject.h"
-#include "ComGoogleCommonTruthMapSubject.h"
-#include "ComGoogleCommonTruthMultimapSubject.h"
-#include "ComGoogleCommonTruthMultisetSubject.h"
-#include "ComGoogleCommonTruthObjectArraySubject.h"
-#include "ComGoogleCommonTruthPlatform.h"
-#include "ComGoogleCommonTruthPrimitiveBooleanArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveByteArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveCharArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveDoubleArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveFloatArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveIntArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveLongArraySubject.h"
-#include "ComGoogleCommonTruthPrimitiveShortArraySubject.h"
-#include "ComGoogleCommonTruthSetMultimapSubject.h"
-#include "ComGoogleCommonTruthSortedMapSubject.h"
-#include "ComGoogleCommonTruthSortedSetSubject.h"
-#include "ComGoogleCommonTruthStringSubject.h"
-#include "ComGoogleCommonTruthSubject.h"
-#include "ComGoogleCommonTruthSubjectFactory.h"
-#include "ComGoogleCommonTruthTableSubject.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "ComGoogleCommonTruthThrowableSubject.h"
-#include "ComGoogleCommonTruthTruth.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "IOSPrimitiveArray.h"
-#include "J2ObjC_source.h"
-#include "com/google/common/base/Optional.h"
-#include "com/google/common/collect/ListMultimap.h"
-#include "com/google/common/collect/Multimap.h"
-#include "com/google/common/collect/Multiset.h"
-#include "com/google/common/collect/SetMultimap.h"
-#include "com/google/common/collect/Table.h"
-#include "com/google/common/util/concurrent/AtomicLongMap.h"
-#include "java/lang/AssertionError.h"
-#include "java/lang/Boolean.h"
-#include "java/lang/CharSequence.h"
-#include "java/lang/Comparable.h"
-#include "java/lang/Double.h"
-#include "java/lang/Float.h"
-#include "java/lang/Integer.h"
-#include "java/lang/Iterable.h"
-#include "java/lang/Long.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/math/BigDecimal.h"
-#include "java/util/Map.h"
-#include "java/util/SortedMap.h"
-#include "java/util/SortedSet.h"
-#include "javax/annotation/Nullable.h"
-
-@interface ComGoogleCommonTruthTruth ()
-
-- (instancetype)init;
-
-@end
-
-inline ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_get_ASSERT();
-static ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_ASSERT;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthTruth, ASSERT, ComGoogleCommonTruthTestVerb *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthTruth_init(ComGoogleCommonTruthTruth *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthTruth *new_ComGoogleCommonTruthTruth_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthTruth *create_ComGoogleCommonTruthTruth_init();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$0();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$1();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$2();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$3();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$4();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$5();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$6();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$7();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$8();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$9();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$10();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$11();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$12();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$13();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$14();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$15();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$16();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$17();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$18();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$19();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$20();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$21();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$22();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$23();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$24();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$25();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$26();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$27();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$28();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$29();
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$30();
-
-@interface ComGoogleCommonTruthTruth_1 : ComGoogleCommonTruthFailureStrategy
-
-- (instancetype)init;
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTruth_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthTruth_1_init(ComGoogleCommonTruthTruth_1 *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthTruth_1 *new_ComGoogleCommonTruthTruth_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthTruth_1 *create_ComGoogleCommonTruthTruth_1_init();
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthTruth)
-
-ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruth_THROW_ASSERTION_ERROR;
-
-@implementation ComGoogleCommonTruthTruth
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthTruth_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (ComGoogleCommonTruthTestVerb *)assert_ {
-  return ComGoogleCommonTruthTruth_assert_();
-}
-
-+ (ComGoogleCommonTruthTestVerb *)assertWithMessageWithNSString:(NSString *)messageToPrepend {
-  return ComGoogleCommonTruthTruth_assertWithMessageWithNSString_(messageToPrepend);
-}
-
-+ (ComGoogleCommonTruthTestVerb *)assertWithMessageWithNSString:(NSString *)format
-                                              withNSObjectArray:(IOSObjectArray *)args {
-  return ComGoogleCommonTruthTruth_assertWithMessageWithNSString_withNSObjectArray_(format, args);
-}
-
-+ (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)assertAboutWithComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory {
-  return ComGoogleCommonTruthTruth_assertAboutWithComGoogleCommonTruthSubjectFactory_(factory);
-}
-
-+ (ComGoogleCommonTruthComparableSubject *)assertThatWithJavaLangComparable:(id<JavaLangComparable>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangComparable_(target);
-}
-
-+ (ComGoogleCommonTruthBigDecimalSubject *)assertThatWithJavaMathBigDecimal:(JavaMathBigDecimal *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaMathBigDecimal_(target);
-}
-
-+ (ComGoogleCommonTruthSubject *)assertThatWithId:(id)target {
-  return ComGoogleCommonTruthTruth_assertThatWithId_(target);
-}
-
-+ (ComGoogleCommonTruthClassSubject *)assertThatWithIOSClass:(IOSClass *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithIOSClass_(target);
-}
-
-+ (ComGoogleCommonTruthThrowableSubject *)assertThatWithNSException:(NSException *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithNSException_(target);
-}
-
-+ (ComGoogleCommonTruthLongSubject *)assertThatWithJavaLangLong:(JavaLangLong *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangLong_(target);
-}
-
-+ (ComGoogleCommonTruthDoubleSubject *)assertThatWithJavaLangDouble:(JavaLangDouble *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangDouble_(target);
-}
-
-+ (ComGoogleCommonTruthFloatSubject *)assertThatWithJavaLangFloat:(JavaLangFloat *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangFloat_(target);
-}
-
-+ (ComGoogleCommonTruthIntegerSubject *)assertThatWithJavaLangInteger:(JavaLangInteger *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_(target);
-}
-
-+ (ComGoogleCommonTruthBooleanSubject *)assertThatWithJavaLangBoolean:(JavaLangBoolean *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangBoolean_(target);
-}
-
-+ (ComGoogleCommonTruthStringSubject *)assertThatWithNSString:(NSString *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithNSString_(target);
-}
-
-+ (ComGoogleCommonTruthIterableSubject *)assertThatWithJavaLangIterable:(id<JavaLangIterable>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_(target);
-}
-
-+ (ComGoogleCommonTruthSortedSetSubject *)assertThatWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaUtilSortedSet_(target);
-}
-
-+ (ComGoogleCommonTruthObjectArraySubject *)assertThatWithNSObjectArray:(IOSObjectArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithNSObjectArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveBooleanArraySubject *)assertThatWithBooleanArray:(IOSBooleanArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithBooleanArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveShortArraySubject *)assertThatWithShortArray:(IOSShortArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithShortArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveIntArraySubject *)assertThatWithIntArray:(IOSIntArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithIntArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveLongArraySubject *)assertThatWithLongArray:(IOSLongArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithLongArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveByteArraySubject *)assertThatWithByteArray:(IOSByteArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithByteArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveCharArraySubject *)assertThatWithCharArray:(IOSCharArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithCharArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveFloatArraySubject *)assertThatWithFloatArray:(IOSFloatArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithFloatArray_(target);
-}
-
-+ (ComGoogleCommonTruthPrimitiveDoubleArraySubject *)assertThatWithDoubleArray:(IOSDoubleArray *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithDoubleArray_(target);
-}
-
-+ (ComGoogleCommonTruthGuavaOptionalSubject *)assertThatWithComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonBaseOptional_(target);
-}
-
-+ (ComGoogleCommonTruthMapSubject *)assertThatWithJavaUtilMap:(id<JavaUtilMap>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaUtilMap_(target);
-}
-
-+ (ComGoogleCommonTruthSortedMapSubject *)assertThatWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithJavaUtilSortedMap_(target);
-}
-
-+ (ComGoogleCommonTruthMultimapSubject *)assertThatWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultimap_(target);
-}
-
-+ (ComGoogleCommonTruthListMultimapSubject *)assertThatWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectListMultimap_(target);
-}
-
-+ (ComGoogleCommonTruthSetMultimapSubject *)assertThatWithComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectSetMultimap_(target);
-}
-
-+ (ComGoogleCommonTruthMultisetSubject *)assertThatWithComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultiset_(target);
-}
-
-+ (ComGoogleCommonTruthTableSubject *)assertThatWithComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectTable_(target);
-}
-
-+ (ComGoogleCommonTruthAtomicLongMapSubject *)assertThatWithComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)target {
-  return ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonUtilConcurrentAtomicLongMap_(target);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x9, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x9, 0, 1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x89, 0, 2, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x9, 3, 4, -1, 5, -1, -1 },
-    { NULL, "LComGoogleCommonTruthComparableSubject;", 0x9, 6, 7, -1, 8, -1, 9 },
-    { NULL, "LComGoogleCommonTruthBigDecimalSubject;", 0x9, 6, 10, -1, -1, -1, 11 },
-    { NULL, "LComGoogleCommonTruthSubject;", 0x9, 6, 12, -1, 13, -1, 14 },
-    { NULL, "LComGoogleCommonTruthClassSubject;", 0x9, 6, 15, -1, 16, -1, 17 },
-    { NULL, "LComGoogleCommonTruthThrowableSubject;", 0x9, 6, 18, -1, -1, -1, 19 },
-    { NULL, "LComGoogleCommonTruthLongSubject;", 0x9, 6, 20, -1, -1, -1, 21 },
-    { NULL, "LComGoogleCommonTruthDoubleSubject;", 0x9, 6, 22, -1, -1, -1, 23 },
-    { NULL, "LComGoogleCommonTruthFloatSubject;", 0x9, 6, 24, -1, -1, -1, 25 },
-    { NULL, "LComGoogleCommonTruthIntegerSubject;", 0x9, 6, 26, -1, -1, -1, 27 },
-    { NULL, "LComGoogleCommonTruthBooleanSubject;", 0x9, 6, 28, -1, -1, -1, 29 },
-    { NULL, "LComGoogleCommonTruthStringSubject;", 0x9, 6, 1, -1, -1, -1, 30 },
-    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x9, 6, 31, -1, 32, -1, 33 },
-    { NULL, "LComGoogleCommonTruthSortedSetSubject;", 0x9, 6, 34, -1, 35, -1, 36 },
-    { NULL, "LComGoogleCommonTruthObjectArraySubject;", 0x9, 6, 37, -1, 38, -1, 39 },
-    { NULL, "LComGoogleCommonTruthPrimitiveBooleanArraySubject;", 0x9, 6, 40, -1, -1, -1, 41 },
-    { NULL, "LComGoogleCommonTruthPrimitiveShortArraySubject;", 0x9, 6, 42, -1, -1, -1, 43 },
-    { NULL, "LComGoogleCommonTruthPrimitiveIntArraySubject;", 0x9, 6, 44, -1, -1, -1, 45 },
-    { NULL, "LComGoogleCommonTruthPrimitiveLongArraySubject;", 0x9, 6, 46, -1, -1, -1, 47 },
-    { NULL, "LComGoogleCommonTruthPrimitiveByteArraySubject;", 0x9, 6, 48, -1, -1, -1, 49 },
-    { NULL, "LComGoogleCommonTruthPrimitiveCharArraySubject;", 0x9, 6, 50, -1, -1, -1, 51 },
-    { NULL, "LComGoogleCommonTruthPrimitiveFloatArraySubject;", 0x9, 6, 52, -1, -1, -1, 53 },
-    { NULL, "LComGoogleCommonTruthPrimitiveDoubleArraySubject;", 0x9, 6, 54, -1, -1, -1, 55 },
-    { NULL, "LComGoogleCommonTruthGuavaOptionalSubject;", 0x9, 6, 56, -1, 57, -1, 58 },
-    { NULL, "LComGoogleCommonTruthMapSubject;", 0x9, 6, 59, -1, 60, -1, 61 },
-    { NULL, "LComGoogleCommonTruthSortedMapSubject;", 0x9, 6, 62, -1, 63, -1, 64 },
-    { NULL, "LComGoogleCommonTruthMultimapSubject;", 0x9, 6, 65, -1, 66, -1, 67 },
-    { NULL, "LComGoogleCommonTruthListMultimapSubject;", 0x9, 6, 68, -1, 69, -1, 70 },
-    { NULL, "LComGoogleCommonTruthSetMultimapSubject;", 0x9, 6, 71, -1, 72, -1, 73 },
-    { NULL, "LComGoogleCommonTruthMultisetSubject;", 0x9, 6, 74, -1, 75, -1, 76 },
-    { NULL, "LComGoogleCommonTruthTableSubject;", 0x9, 6, 77, -1, 78, -1, 79 },
-    { NULL, "LComGoogleCommonTruthAtomicLongMapSubject;", 0x9, 6, 80, -1, 81, -1, 82 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(assert_);
-  methods[2].selector = @selector(assertWithMessageWithNSString:);
-  methods[3].selector = @selector(assertWithMessageWithNSString:withNSObjectArray:);
-  methods[4].selector = @selector(assertAboutWithComGoogleCommonTruthSubjectFactory:);
-  methods[5].selector = @selector(assertThatWithJavaLangComparable:);
-  methods[6].selector = @selector(assertThatWithJavaMathBigDecimal:);
-  methods[7].selector = @selector(assertThatWithId:);
-  methods[8].selector = @selector(assertThatWithIOSClass:);
-  methods[9].selector = @selector(assertThatWithNSException:);
-  methods[10].selector = @selector(assertThatWithJavaLangLong:);
-  methods[11].selector = @selector(assertThatWithJavaLangDouble:);
-  methods[12].selector = @selector(assertThatWithJavaLangFloat:);
-  methods[13].selector = @selector(assertThatWithJavaLangInteger:);
-  methods[14].selector = @selector(assertThatWithJavaLangBoolean:);
-  methods[15].selector = @selector(assertThatWithNSString:);
-  methods[16].selector = @selector(assertThatWithJavaLangIterable:);
-  methods[17].selector = @selector(assertThatWithJavaUtilSortedSet:);
-  methods[18].selector = @selector(assertThatWithNSObjectArray:);
-  methods[19].selector = @selector(assertThatWithBooleanArray:);
-  methods[20].selector = @selector(assertThatWithShortArray:);
-  methods[21].selector = @selector(assertThatWithIntArray:);
-  methods[22].selector = @selector(assertThatWithLongArray:);
-  methods[23].selector = @selector(assertThatWithByteArray:);
-  methods[24].selector = @selector(assertThatWithCharArray:);
-  methods[25].selector = @selector(assertThatWithFloatArray:);
-  methods[26].selector = @selector(assertThatWithDoubleArray:);
-  methods[27].selector = @selector(assertThatWithComGoogleCommonBaseOptional:);
-  methods[28].selector = @selector(assertThatWithJavaUtilMap:);
-  methods[29].selector = @selector(assertThatWithJavaUtilSortedMap:);
-  methods[30].selector = @selector(assertThatWithComGoogleCommonCollectMultimap:);
-  methods[31].selector = @selector(assertThatWithComGoogleCommonCollectListMultimap:);
-  methods[32].selector = @selector(assertThatWithComGoogleCommonCollectSetMultimap:);
-  methods[33].selector = @selector(assertThatWithComGoogleCommonCollectMultiset:);
-  methods[34].selector = @selector(assertThatWithComGoogleCommonCollectTable:);
-  methods[35].selector = @selector(assertThatWithComGoogleCommonUtilConcurrentAtomicLongMap:);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "THROW_ASSERTION_ERROR", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x19, -1, 83, -1, -1 },
-    { "ASSERT", "LComGoogleCommonTruthTestVerb;", .constantValue.asLong = 0, 0x1a, -1, 84, -1, -1 },
-  };
-  static const void *ptrTable[] = { "assertWithMessage", "LNSString;", "LNSString;[LNSObject;", "assertAbout", "LComGoogleCommonTruthSubjectFactory;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;>(Lcom/google/common/truth/SubjectFactory<TS;TT;>;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", "assertThat", "LJavaLangComparable;", "<T::Ljava/lang/Comparable<*>;>(TT;)Lcom/google/common/truth/ComparableSubject<*TT;>;", (void *)&ComGoogleCommonTruthTruth__Annotations$0, "LJavaMathBigDecimal;", (void *)&ComGoogleCommonTruthTruth__Annotations$1, "LNSObject;", "(Ljava/lang/Object;)Lcom/google/common/truth/Subject<Lcom/google/common/truth/DefaultSubject;Ljava/lang/Object;>;", (void *)&ComGoogleCommonTruthTruth__Annotations$2, "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/google/common/truth/ClassSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$3, "LNSException;", (void *)&ComGoogleCommonTruthTruth__Annotations$4, "LJavaLangLong;", (void *)&ComGoogleCommonTruthTruth__Annotations$5, "LJavaLangDouble;", (void *)&ComGoogleCommonTruthTruth__Annotations$6, "LJavaLangFloat;", (void *)&ComGoogleCommonTruthTruth__Annotations$7, "LJavaLangInteger;", (void *)&ComGoogleCommonTruthTruth__Annotations$8, "LJavaLangBoolean;", (void *)&ComGoogleCommonTruthTruth__Annotations$9, (void *)&ComGoogleCommonTruthTruth__Annotations$10, "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)Lcom/google/common/truth/IterableSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$11, "LJavaUtilSortedSet;", "(Ljava/util/SortedSet<*>;)Lcom/google/common/truth/SortedSetSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$12, "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)Lcom/google/common/truth/ObjectArraySubject<TT;>;", (void *)&ComGoogleCommonTruthTruth__Annotations$13, "[Z", (void *)&ComGoogleCommonTruthTruth__Annotations$14, "[S", (void *)&ComGoogleCommonTruthTruth__Annotations$15, "[I", (void *)&ComGoogleCommonTruthTruth__Annotations$16, "[J", (void *)&ComGoogleCommonTruthTruth__Annotations$17, "[B", (void *)&ComGoogleCommonTruthTruth__Annotations$18, "[C", (void *)&ComGoogleCommonTruthTruth__Annotations$19, "[F", (void *)&ComGoogleCommonTruthTruth__Annotations$20, "[D", (void *)&ComGoogleCommonTruthTruth__Annotations$21, "LComGoogleCommonBaseOptional;", "(Lcom/google/common/base/Optional<*>;)Lcom/google/common/truth/GuavaOptionalSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$22, "LJavaUtilMap;", "(Ljava/util/Map<**>;)Lcom/google/common/truth/MapSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$23, "LJavaUtilSortedMap;", "(Ljava/util/SortedMap<**>;)Lcom/google/common/truth/SortedMapSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$24, "LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<**>;)Lcom/google/common/truth/MultimapSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$25, "LComGoogleCommonCollectListMultimap;", "(Lcom/google/common/collect/ListMultimap<**>;)Lcom/google/common/truth/ListMultimapSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$26, "LComGoogleCommonCollectSetMultimap;", "(Lcom/google/common/collect/SetMultimap<**>;)Lcom/google/common/truth/SetMultimapSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$27, "LComGoogleCommonCollectMultiset;", "(Lcom/google/common/collect/Multiset<*>;)Lcom/google/common/truth/MultisetSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$28, "LComGoogleCommonCollectTable;", "(Lcom/google/common/collect/Table<***>;)Lcom/google/common/truth/TableSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$29, "LComGoogleCommonUtilConcurrentAtomicLongMap;", "(Lcom/google/common/util/concurrent/AtomicLongMap<*>;)Lcom/google/common/truth/AtomicLongMapSubject;", (void *)&ComGoogleCommonTruthTruth__Annotations$30, &ComGoogleCommonTruthTruth_THROW_ASSERTION_ERROR, &ComGoogleCommonTruthTruth_ASSERT };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTruth = { "Truth", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 36, 2, -1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthTruth;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthTruth class]) {
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthTruth_THROW_ASSERTION_ERROR, new_ComGoogleCommonTruthTruth_1_init());
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthTruth_ASSERT, new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthTruth_THROW_ASSERTION_ERROR));
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthTruth)
-  }
-}
-
-@end
-
-void ComGoogleCommonTruthTruth_init(ComGoogleCommonTruthTruth *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthTruth *new_ComGoogleCommonTruthTruth_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTruth, init)
-}
-
-ComGoogleCommonTruthTruth *create_ComGoogleCommonTruthTruth_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTruth, init)
-}
-
-ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_assert_() {
-  ComGoogleCommonTruthTruth_initialize();
-  return ComGoogleCommonTruthTruth_ASSERT;
-}
-
-ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_assertWithMessageWithNSString_(NSString *messageToPrepend) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) withFailureMessageWithNSString:messageToPrepend];
-}
-
-ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruth_assertWithMessageWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) withFailureMessageWithNSString:format withNSObjectArray:args];
-}
-
-ComGoogleCommonTruthAbstractVerb_DelegatedVerb *ComGoogleCommonTruthTruth_assertAboutWithComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthSubjectFactory *factory) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) aboutWithComGoogleCommonTruthSubjectFactory:factory];
-}
-
-ComGoogleCommonTruthComparableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangComparable_(id<JavaLangComparable> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangComparable:target];
-}
-
-ComGoogleCommonTruthBigDecimalSubject *ComGoogleCommonTruthTruth_assertThatWithJavaMathBigDecimal_(JavaMathBigDecimal *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaMathBigDecimal:target];
-}
-
-ComGoogleCommonTruthSubject *ComGoogleCommonTruthTruth_assertThatWithId_(id target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithId:target];
-}
-
-ComGoogleCommonTruthClassSubject *ComGoogleCommonTruthTruth_assertThatWithIOSClass_(IOSClass *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithIOSClass:target];
-}
-
-ComGoogleCommonTruthThrowableSubject *ComGoogleCommonTruthTruth_assertThatWithNSException_(NSException *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithNSException:target];
-}
-
-ComGoogleCommonTruthLongSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangLong_(JavaLangLong *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangLong:target];
-}
-
-ComGoogleCommonTruthDoubleSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangDouble_(JavaLangDouble *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangDouble:target];
-}
-
-ComGoogleCommonTruthFloatSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangFloat_(JavaLangFloat *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangFloat:target];
-}
-
-ComGoogleCommonTruthIntegerSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_(JavaLangInteger *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangInteger:target];
-}
-
-ComGoogleCommonTruthBooleanSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangBoolean_(JavaLangBoolean *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangBoolean:target];
-}
-
-ComGoogleCommonTruthStringSubject *ComGoogleCommonTruthTruth_assertThatWithNSString_(NSString *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithNSString:target];
-}
-
-ComGoogleCommonTruthIterableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_(id<JavaLangIterable> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaLangIterable:target];
-}
-
-ComGoogleCommonTruthSortedSetSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilSortedSet_(id<JavaUtilSortedSet> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaUtilSortedSet:target];
-}
-
-ComGoogleCommonTruthObjectArraySubject *ComGoogleCommonTruthTruth_assertThatWithNSObjectArray_(IOSObjectArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithNSObjectArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveBooleanArraySubject *ComGoogleCommonTruthTruth_assertThatWithBooleanArray_(IOSBooleanArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithBooleanArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveShortArraySubject *ComGoogleCommonTruthTruth_assertThatWithShortArray_(IOSShortArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithShortArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveIntArraySubject *ComGoogleCommonTruthTruth_assertThatWithIntArray_(IOSIntArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithIntArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveLongArraySubject *ComGoogleCommonTruthTruth_assertThatWithLongArray_(IOSLongArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithLongArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveByteArraySubject *ComGoogleCommonTruthTruth_assertThatWithByteArray_(IOSByteArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithByteArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveCharArraySubject *ComGoogleCommonTruthTruth_assertThatWithCharArray_(IOSCharArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithCharArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveFloatArraySubject *ComGoogleCommonTruthTruth_assertThatWithFloatArray_(IOSFloatArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithFloatArray:target];
-}
-
-ComGoogleCommonTruthPrimitiveDoubleArraySubject *ComGoogleCommonTruthTruth_assertThatWithDoubleArray_(IOSDoubleArray *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithDoubleArray:target];
-}
-
-ComGoogleCommonTruthGuavaOptionalSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonBaseOptional_(ComGoogleCommonBaseOptional *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonBaseOptional:target];
-}
-
-ComGoogleCommonTruthMapSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilMap_(id<JavaUtilMap> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaUtilMap:target];
-}
-
-ComGoogleCommonTruthSortedMapSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilSortedMap_(id<JavaUtilSortedMap> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithJavaUtilSortedMap:target];
-}
-
-ComGoogleCommonTruthMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonCollectMultimap:target];
-}
-
-ComGoogleCommonTruthListMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectListMultimap_(id<ComGoogleCommonCollectListMultimap> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonCollectListMultimap:target];
-}
-
-ComGoogleCommonTruthSetMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectSetMultimap_(id<ComGoogleCommonCollectSetMultimap> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonCollectSetMultimap:target];
-}
-
-ComGoogleCommonTruthMultisetSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultiset_(id<ComGoogleCommonCollectMultiset> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonCollectMultiset:target];
-}
-
-ComGoogleCommonTruthTableSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectTable_(id<ComGoogleCommonCollectTable> target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonCollectTable:target];
-}
-
-ComGoogleCommonTruthAtomicLongMapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *target) {
-  ComGoogleCommonTruthTruth_initialize();
-  return [((ComGoogleCommonTruthTestVerb *) nil_chk(ComGoogleCommonTruthTruth_assert_())) thatWithComGoogleCommonUtilConcurrentAtomicLongMap:target];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$1() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$2() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$3() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$4() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$5() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$6() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$7() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$8() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$9() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$10() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$11() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$12() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$13() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$14() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$15() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$16() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$17() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$18() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$19() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$20() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$21() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$22() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$23() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$24() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$25() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$26() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$27() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$28() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$29() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-IOSObjectArray *ComGoogleCommonTruthTruth__Annotations$30() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthTruth)
-
-@implementation ComGoogleCommonTruthTruth_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthTruth_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  @throw ComGoogleCommonTruthPlatform_comparisonFailureWithNSString_withNSString_withNSString_(message, [((id<JavaLangCharSequence>) nil_chk(expected)) description], [((id<JavaLangCharSequence>) nil_chk(actual)) description]);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "LComGoogleCommonTruthTruth;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTruth_1 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthTruth_1;
-}
-
-@end
-
-void ComGoogleCommonTruthTruth_1_init(ComGoogleCommonTruthTruth_1 *self) {
-  ComGoogleCommonTruthFailureStrategy_init(self);
-}
-
-ComGoogleCommonTruthTruth_1 *new_ComGoogleCommonTruthTruth_1_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTruth_1, init)
-}
-
-ComGoogleCommonTruthTruth_1 *create_ComGoogleCommonTruthTruth_1_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTruth_1, init)
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruthJUnit.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruthJUnit.h
deleted file mode 100644
index 8b09ba0ef..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruthJUnit.h
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthTruthJUnit")
-#ifdef RESTRICT_ComGoogleCommonTruthTruthJUnit
-#define INCLUDE_ALL_ComGoogleCommonTruthTruthJUnit 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthTruthJUnit 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthTruthJUnit
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-#if !defined (ComGoogleCommonTruthTruthJUnit_) && (INCLUDE_ALL_ComGoogleCommonTruthTruthJUnit || defined(INCLUDE_ComGoogleCommonTruthTruthJUnit))
-#define ComGoogleCommonTruthTruthJUnit_
-
-@class ComGoogleCommonTruthFailureStrategy;
-@class ComGoogleCommonTruthTestVerb;
-
-@interface ComGoogleCommonTruthTruthJUnit : NSObject
-
-#pragma mark Public
-
-+ (ComGoogleCommonTruthTestVerb *)assume;
-
-+ (ComGoogleCommonTruthFailureStrategy *)throwAssumptionError;
-
-@end
-
-J2OBJC_STATIC_INIT(ComGoogleCommonTruthTruthJUnit)
-
-FOUNDATION_EXPORT ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruthJUnit_throwAssumptionError();
-
-FOUNDATION_EXPORT ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruthJUnit_assume();
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTruthJUnit)
-
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthTruthJUnit")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruthJUnit.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruthJUnit.m
deleted file mode 100644
index d6fcd25c7..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthTruthJUnit.m
+++ /dev/null
@@ -1,240 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthFailureStrategy.h"
-#include "ComGoogleCommonTruthStringUtil.h"
-#include "ComGoogleCommonTruthTestVerb.h"
-#include "ComGoogleCommonTruthTruthJUnit.h"
-#include "J2ObjC_source.h"
-#include "java/lang/CharSequence.h"
-#include "org/junit/internal/AssumptionViolatedException.h"
-
-@interface ComGoogleCommonTruthTruthJUnit ()
-
-- (instancetype)init;
-
-@end
-
-inline ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruthJUnit_get_THROW_ASSUMPTION_ERROR();
-static ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruthJUnit_THROW_ASSUMPTION_ERROR;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthTruthJUnit, THROW_ASSUMPTION_ERROR, ComGoogleCommonTruthFailureStrategy *)
-
-inline ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruthJUnit_get_ASSUME();
-static ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruthJUnit_ASSUME;
-J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthTruthJUnit, ASSUME, ComGoogleCommonTruthTestVerb *)
-
-__attribute__((unused)) static void ComGoogleCommonTruthTruthJUnit_init(ComGoogleCommonTruthTruthJUnit *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthTruthJUnit *new_ComGoogleCommonTruthTruthJUnit_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthTruthJUnit *create_ComGoogleCommonTruthTruthJUnit_init();
-
-@interface ComGoogleCommonTruthTruthJUnit_1 : ComGoogleCommonTruthFailureStrategy
-
-- (instancetype)init;
-
-- (void)failWithNSString:(NSString *)message;
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTruthJUnit_1)
-
-__attribute__((unused)) static void ComGoogleCommonTruthTruthJUnit_1_init(ComGoogleCommonTruthTruthJUnit_1 *self);
-
-__attribute__((unused)) static ComGoogleCommonTruthTruthJUnit_1 *new_ComGoogleCommonTruthTruthJUnit_1_init() NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthTruthJUnit_1 *create_ComGoogleCommonTruthTruthJUnit_1_init();
-
-@interface ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException : OrgJunitInternalAssumptionViolatedException
-
-- (instancetype)initWithNSString:(NSString *)message
-                 withNSException:(NSException *)throwable;
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException)
-
-__attribute__((unused)) static void ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException *self, NSString *message, NSException *throwable);
-
-__attribute__((unused)) static ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException *new_ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(NSString *message, NSException *throwable) NS_RETURNS_RETAINED;
-
-__attribute__((unused)) static ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException *create_ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(NSString *message, NSException *throwable);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException)
-
-J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthTruthJUnit)
-
-@implementation ComGoogleCommonTruthTruthJUnit
-
-+ (ComGoogleCommonTruthFailureStrategy *)throwAssumptionError {
-  return ComGoogleCommonTruthTruthJUnit_throwAssumptionError();
-}
-
-+ (ComGoogleCommonTruthTestVerb *)assume {
-  return ComGoogleCommonTruthTruthJUnit_assume();
-}
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthTruthJUnit_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LComGoogleCommonTruthFailureStrategy;", 0x19, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LComGoogleCommonTruthTestVerb;", 0x19, -1, -1, -1, -1, -1, -1 },
-    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(throwAssumptionError);
-  methods[1].selector = @selector(assume);
-  methods[2].selector = @selector(init);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "THROW_ASSUMPTION_ERROR", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
-    { "ASSUME", "LComGoogleCommonTruthTestVerb;", .constantValue.asLong = 0, 0x1a, -1, 1, -1, -1 },
-  };
-  static const void *ptrTable[] = { &ComGoogleCommonTruthTruthJUnit_THROW_ASSUMPTION_ERROR, &ComGoogleCommonTruthTruthJUnit_ASSUME, "LComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTruthJUnit = { "TruthJUnit", "com.google.common.truth", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, 2, -1, -1, -1 };
-  return &_ComGoogleCommonTruthTruthJUnit;
-}
-
-+ (void)initialize {
-  if (self == [ComGoogleCommonTruthTruthJUnit class]) {
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthTruthJUnit_THROW_ASSUMPTION_ERROR, new_ComGoogleCommonTruthTruthJUnit_1_init());
-    JreStrongAssignAndConsume(&ComGoogleCommonTruthTruthJUnit_ASSUME, new_ComGoogleCommonTruthTestVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthTruthJUnit_THROW_ASSUMPTION_ERROR));
-    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthTruthJUnit)
-  }
-}
-
-@end
-
-ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthTruthJUnit_throwAssumptionError() {
-  ComGoogleCommonTruthTruthJUnit_initialize();
-  return ComGoogleCommonTruthTruthJUnit_THROW_ASSUMPTION_ERROR;
-}
-
-ComGoogleCommonTruthTestVerb *ComGoogleCommonTruthTruthJUnit_assume() {
-  ComGoogleCommonTruthTruthJUnit_initialize();
-  return ComGoogleCommonTruthTruthJUnit_ASSUME;
-}
-
-void ComGoogleCommonTruthTruthJUnit_init(ComGoogleCommonTruthTruthJUnit *self) {
-  NSObject_init(self);
-}
-
-ComGoogleCommonTruthTruthJUnit *new_ComGoogleCommonTruthTruthJUnit_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTruthJUnit, init)
-}
-
-ComGoogleCommonTruthTruthJUnit *create_ComGoogleCommonTruthTruthJUnit_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTruthJUnit, init)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthTruthJUnit)
-
-@implementation ComGoogleCommonTruthTruthJUnit_1
-
-J2OBJC_IGNORE_DESIGNATED_BEGIN
-- (instancetype)init {
-  ComGoogleCommonTruthTruthJUnit_1_init(self);
-  return self;
-}
-J2OBJC_IGNORE_DESIGNATED_END
-
-- (void)failWithNSString:(NSString *)message {
-  @throw create_OrgJunitInternalAssumptionViolatedException_initWithNSString_(message);
-}
-
-- (void)failComparingWithNSString:(NSString *)message
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
-         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
-  @throw create_OrgJunitInternalAssumptionViolatedException_initWithNSString_(ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(message, expected, actual));
-}
-
-- (void)failWithNSString:(NSString *)message
-         withNSException:(NSException *)cause {
-  @throw create_ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(message, cause);
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
-    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(init);
-  methods[1].selector = @selector(failWithNSString:);
-  methods[2].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
-  methods[3].selector = @selector(failWithNSString:withNSException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "fail", "LNSString;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "LNSString;LNSException;", "LComGoogleCommonTruthTruthJUnit;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTruthJUnit_1 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8018, 4, 0, 5, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthTruthJUnit_1;
-}
-
-@end
-
-void ComGoogleCommonTruthTruthJUnit_1_init(ComGoogleCommonTruthTruthJUnit_1 *self) {
-  ComGoogleCommonTruthFailureStrategy_init(self);
-}
-
-ComGoogleCommonTruthTruthJUnit_1 *new_ComGoogleCommonTruthTruthJUnit_1_init() {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTruthJUnit_1, init)
-}
-
-ComGoogleCommonTruthTruthJUnit_1 *create_ComGoogleCommonTruthTruthJUnit_1_init() {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTruthJUnit_1, init)
-}
-
-@implementation ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException
-
-- (instancetype)initWithNSString:(NSString *)message
-                 withNSException:(NSException *)throwable {
-  ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(self, message, throwable);
-  return self;
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(initWithNSString:withNSException:);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { "LNSString;LNSException;", "LComGoogleCommonTruthTruthJUnit;" };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException = { "ThrowableAssumptionViolatedException", "com.google.common.truth", ptrTable, methods, NULL, 7, 0xa, 1, 0, 1, -1, -1, -1, -1 };
-  return &_ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException;
-}
-
-@end
-
-void ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException *self, NSString *message, NSException *throwable) {
-  OrgJunitInternalAssumptionViolatedException_initWithNSString_(self, message);
-  if (throwable != nil) [self initCauseWithNSException:throwable];
-}
-
-ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException *new_ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(NSString *message, NSException *throwable) {
-  J2OBJC_NEW_IMPL(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException, initWithNSString_withNSException_, message, throwable)
-}
-
-ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException *create_ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException_initWithNSString_withNSException_(NSString *message, NSException *throwable) {
-  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException, initWithNSString_withNSException_, message, throwable)
-}
-
-J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthTruthJUnit_ThrowableAssumptionViolatedException)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthpackage-info.h b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthpackage-info.h
deleted file mode 100644
index 85d198a52..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthpackage-info.h
+++ /dev/null
@@ -1,24 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthpackage_info")
-#ifdef RESTRICT_ComGoogleCommonTruthpackage_info
-#define INCLUDE_ALL_ComGoogleCommonTruthpackage_info 0
-#else
-#define INCLUDE_ALL_ComGoogleCommonTruthpackage_info 1
-#endif
-#undef RESTRICT_ComGoogleCommonTruthpackage_info
-
-#if __has_feature(nullability)
-#pragma clang diagnostic push
-#pragma GCC diagnostic ignored "-Wnullability-completeness"
-#endif
-
-
-#if __has_feature(nullability)
-#pragma clang diagnostic pop
-#endif
-#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthpackage_info")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthpackage-info.m b/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthpackage-info.m
deleted file mode 100644
index 274129e42..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleCommonTruthpackage-info.m
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleCommonTruthpackage-info.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "javax/annotation/CheckReturnValue.h"
-#include "javax/annotation/ParametersAreNonnullByDefault.h"
-#include "javax/annotation/meta/When.h"
-
-@interface ComGoogleCommonTruthpackage_info : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthpackage_info__Annotations$0();
-
-@implementation ComGoogleCommonTruthpackage_info
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleCommonTruthpackage_info__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleCommonTruthpackage_info = { "package-info", "com.google.common.truth", ptrTable, NULL, NULL, 7, 0x2, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleCommonTruthpackage_info;
-}
-
-@end
-
-IOSObjectArray *ComGoogleCommonTruthpackage_info__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationCheckReturnValue(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)), create_JavaxAnnotationParametersAreNonnullByDefault() } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.h
deleted file mode 100644
index 0c7fe76c5..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue
-
-#if !defined (ComGoogleErrorproneAnnotationsCanIgnoreReturnValue_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue || defined(INCLUDE_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue))
-#define ComGoogleErrorproneAnnotationsCanIgnoreReturnValue_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsCanIgnoreReturnValue < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsCanIgnoreReturnValue)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsCanIgnoreReturnValue)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.m
deleted file mode 100644
index 5ae69ccf8..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsCanIgnoreReturnValue.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsCanIgnoreReturnValue : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsCanIgnoreReturnValue__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsCanIgnoreReturnValue
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsCanIgnoreReturnValue__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsCanIgnoreReturnValue = { "CanIgnoreReturnValue", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsCanIgnoreReturnValue;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsCanIgnoreReturnValue__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:2 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsCanIgnoreReturnValue)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompatibleWith.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompatibleWith.h
deleted file mode 100644
index 0c2ac4932..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompatibleWith.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsCompatibleWith
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsCompatibleWith
-
-#if !defined (ComGoogleErrorproneAnnotationsCompatibleWith_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith || defined(INCLUDE_ComGoogleErrorproneAnnotationsCompatibleWith))
-#define ComGoogleErrorproneAnnotationsCompatibleWith_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsCompatibleWith < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsCompatibleWith)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsCompatibleWith)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompatibleWith.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompatibleWith.m
deleted file mode 100644
index 238a6b33e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompatibleWith.m
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsCompatibleWith.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsCompatibleWith : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsCompatibleWith__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsCompatibleWith
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsCompatibleWith__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsCompatibleWith = { "CompatibleWith", "com.google.errorprone.annotations", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsCompatibleWith;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsCompatibleWith__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsCompatibleWith)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompileTimeConstant.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompileTimeConstant.h
deleted file mode 100644
index ff99d853e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompileTimeConstant.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompileTimeConstant")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsCompileTimeConstant
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompileTimeConstant 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompileTimeConstant 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsCompileTimeConstant
-
-#if !defined (ComGoogleErrorproneAnnotationsCompileTimeConstant_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompileTimeConstant || defined(INCLUDE_ComGoogleErrorproneAnnotationsCompileTimeConstant))
-#define ComGoogleErrorproneAnnotationsCompileTimeConstant_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsCompileTimeConstant < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsCompileTimeConstant)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsCompileTimeConstant)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompileTimeConstant")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompileTimeConstant.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompileTimeConstant.m
deleted file mode 100644
index b409a21dd..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsCompileTimeConstant.m
+++ /dev/null
@@ -1,36 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsCompileTimeConstant.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsCompileTimeConstant : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsCompileTimeConstant__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsCompileTimeConstant
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsCompileTimeConstant__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsCompileTimeConstant = { "CompileTimeConstant", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsCompileTimeConstant;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsCompileTimeConstant__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsCompileTimeConstant)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLazyInit.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLazyInit.h
deleted file mode 100644
index a643cb253..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLazyInit.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentLazyInit
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentLazyInit
-
-#if !defined (ComGoogleErrorproneAnnotationsConcurrentLazyInit_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit || defined(INCLUDE_ComGoogleErrorproneAnnotationsConcurrentLazyInit))
-#define ComGoogleErrorproneAnnotationsConcurrentLazyInit_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol ComGoogleErrorproneAnnotationsConcurrentLazyInit < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface ComGoogleErrorproneAnnotationsConcurrentLazyInit : NSObject < ComGoogleErrorproneAnnotationsConcurrentLazyInit >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsConcurrentLazyInit)
-
-FOUNDATION_EXPORT id<ComGoogleErrorproneAnnotationsConcurrentLazyInit> create_ComGoogleErrorproneAnnotationsConcurrentLazyInit();
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsConcurrentLazyInit)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLazyInit.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLazyInit.m
deleted file mode 100644
index 95ffc2c10..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLazyInit.m
+++ /dev/null
@@ -1,44 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsConcurrentLazyInit.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsConcurrentLazyInit__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsConcurrentLazyInit
-
-- (IOSClass *)annotationType {
-  return ComGoogleErrorproneAnnotationsConcurrentLazyInit_class_();
-}
-
-- (NSString *)description {
-  return @"@com.google.errorprone.annotations.concurrent.LazyInit()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsConcurrentLazyInit__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsConcurrentLazyInit = { "LazyInit", "com.google.errorprone.annotations.concurrent", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsConcurrentLazyInit;
-}
-
-@end
-
-id<ComGoogleErrorproneAnnotationsConcurrentLazyInit> create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() {
-  ComGoogleErrorproneAnnotationsConcurrentLazyInit *self = AUTORELEASE([[ComGoogleErrorproneAnnotationsConcurrentLazyInit alloc] init]);
-  return self;
-}
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsConcurrentLazyInit__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsConcurrentLazyInit)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLockMethod.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLockMethod.h
deleted file mode 100644
index de8c9f75e..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLockMethod.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLockMethod")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentLockMethod
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLockMethod 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLockMethod 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentLockMethod
-
-#if !defined (ComGoogleErrorproneAnnotationsConcurrentLockMethod_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLockMethod || defined(INCLUDE_ComGoogleErrorproneAnnotationsConcurrentLockMethod))
-#define ComGoogleErrorproneAnnotationsConcurrentLockMethod_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol ComGoogleErrorproneAnnotationsConcurrentLockMethod < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsConcurrentLockMethod)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsConcurrentLockMethod)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLockMethod")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLockMethod.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLockMethod.m
deleted file mode 100644
index 199a0e73b..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentLockMethod.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsConcurrentLockMethod.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsConcurrentLockMethod : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsConcurrentLockMethod__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsConcurrentLockMethod
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsConcurrentLockMethod__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsConcurrentLockMethod = { "LockMethod", "com.google.errorprone.annotations.concurrent", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsConcurrentLockMethod;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsConcurrentLockMethod__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsConcurrentLockMethod)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.h
deleted file mode 100644
index e08d81696..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod
-
-#if !defined (ComGoogleErrorproneAnnotationsConcurrentUnlockMethod_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod || defined(INCLUDE_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod))
-#define ComGoogleErrorproneAnnotationsConcurrentUnlockMethod_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol ComGoogleErrorproneAnnotationsConcurrentUnlockMethod < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsConcurrentUnlockMethod)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsConcurrentUnlockMethod)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.m
deleted file mode 100644
index b0fc0b796..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.m
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsConcurrentUnlockMethod.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsConcurrentUnlockMethod : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsConcurrentUnlockMethod__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsConcurrentUnlockMethod
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsConcurrentUnlockMethod__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsConcurrentUnlockMethod = { "UnlockMethod", "com.google.errorprone.annotations.concurrent", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsConcurrentUnlockMethod;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsConcurrentUnlockMethod__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsConcurrentUnlockMethod)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsDoNotMock.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsDoNotMock.h
deleted file mode 100644
index 22b4dc923..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsDoNotMock.h
+++ /dev/null
@@ -1,45 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsDoNotMock")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsDoNotMock
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsDoNotMock 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsDoNotMock 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsDoNotMock
-
-#if !defined (ComGoogleErrorproneAnnotationsDoNotMock_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsDoNotMock || defined(INCLUDE_ComGoogleErrorproneAnnotationsDoNotMock))
-#define ComGoogleErrorproneAnnotationsDoNotMock_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol ComGoogleErrorproneAnnotationsDoNotMock < JavaLangAnnotationAnnotation >
-
-@property (readonly) NSString *value;
-
-@end
-
-@interface ComGoogleErrorproneAnnotationsDoNotMock : NSObject < ComGoogleErrorproneAnnotationsDoNotMock > {
- @public
-  NSString *value_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsDoNotMock)
-
-FOUNDATION_EXPORT id<ComGoogleErrorproneAnnotationsDoNotMock> create_ComGoogleErrorproneAnnotationsDoNotMock(NSString *value);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsDoNotMock)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsDoNotMock")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsDoNotMock.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsDoNotMock.m
deleted file mode 100644
index b0e61343d..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsDoNotMock.m
+++ /dev/null
@@ -1,68 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsDoNotMock.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Inherited.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsDoNotMock__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsDoNotMock
-
-@synthesize value = value_;
-
-+ (NSString *)valueDefault {
-  return @"Create a real instance instead";
-}
-
-- (IOSClass *)annotationType {
-  return ComGoogleErrorproneAnnotationsDoNotMock_class_();
-}
-
-- (NSString *)description {
-  return @"@com.google.errorprone.annotations.DoNotMock()";
-}
-
-- (void)dealloc {
-  RELEASE_(value_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "value_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsDoNotMock__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsDoNotMock = { "DoNotMock", "com.google.errorprone.annotations", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsDoNotMock;
-}
-
-@end
-
-id<ComGoogleErrorproneAnnotationsDoNotMock> create_ComGoogleErrorproneAnnotationsDoNotMock(NSString *value) {
-  ComGoogleErrorproneAnnotationsDoNotMock *self = AUTORELEASE([[ComGoogleErrorproneAnnotationsDoNotMock alloc] init]);
-  self->value_ = RETAIN_(value);
-  return self;
-}
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsDoNotMock__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationInherited(), create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:4 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsDoNotMock)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsForOverride.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsForOverride.h
deleted file mode 100644
index fa558f49c..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsForOverride.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsForOverride")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsForOverride
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsForOverride 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsForOverride 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsForOverride
-
-#if !defined (ComGoogleErrorproneAnnotationsForOverride_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsForOverride || defined(INCLUDE_ComGoogleErrorproneAnnotationsForOverride))
-#define ComGoogleErrorproneAnnotationsForOverride_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsForOverride < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsForOverride)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsForOverride)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsForOverride")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsForOverride.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsForOverride.m
deleted file mode 100644
index 302caca6d..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsForOverride.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsForOverride.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsForOverride : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsForOverride__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsForOverride
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsForOverride__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsForOverride = { "ForOverride", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsForOverride;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsForOverride__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsForOverride)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatMethod.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatMethod.h
deleted file mode 100644
index 6c7652f10..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatMethod.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatMethod")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsFormatMethod
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatMethod 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatMethod 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsFormatMethod
-
-#if !defined (ComGoogleErrorproneAnnotationsFormatMethod_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatMethod || defined(INCLUDE_ComGoogleErrorproneAnnotationsFormatMethod))
-#define ComGoogleErrorproneAnnotationsFormatMethod_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsFormatMethod < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsFormatMethod)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsFormatMethod)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatMethod")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatMethod.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatMethod.m
deleted file mode 100644
index f301a35bd..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatMethod.m
+++ /dev/null
@@ -1,36 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsFormatMethod.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsFormatMethod : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsFormatMethod__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsFormatMethod
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsFormatMethod__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsFormatMethod = { "FormatMethod", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsFormatMethod;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsFormatMethod__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsFormatMethod)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatString.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatString.h
deleted file mode 100644
index 017740822..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatString.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatString")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsFormatString
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatString 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatString 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsFormatString
-
-#if !defined (ComGoogleErrorproneAnnotationsFormatString_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatString || defined(INCLUDE_ComGoogleErrorproneAnnotationsFormatString))
-#define ComGoogleErrorproneAnnotationsFormatString_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsFormatString < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsFormatString)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsFormatString)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsFormatString")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatString.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatString.m
deleted file mode 100644
index c819cec2c..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsFormatString.m
+++ /dev/null
@@ -1,36 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsFormatString.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsFormatString : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsFormatString__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsFormatString
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsFormatString__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsFormatString = { "FormatString", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsFormatString;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsFormatString__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsFormatString)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsImmutable.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsImmutable.h
deleted file mode 100644
index a8fdda7fc..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsImmutable.h
+++ /dev/null
@@ -1,46 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsImmutable")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsImmutable
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsImmutable 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsImmutable 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsImmutable
-
-#if !defined (ComGoogleErrorproneAnnotationsImmutable_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsImmutable || defined(INCLUDE_ComGoogleErrorproneAnnotationsImmutable))
-#define ComGoogleErrorproneAnnotationsImmutable_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-@class IOSObjectArray;
-
-@protocol ComGoogleErrorproneAnnotationsImmutable < JavaLangAnnotationAnnotation >
-
-@property (readonly) IOSObjectArray *containerOf;
-
-@end
-
-@interface ComGoogleErrorproneAnnotationsImmutable : NSObject < ComGoogleErrorproneAnnotationsImmutable > {
- @public
-  IOSObjectArray *containerOf_;
-}
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsImmutable)
-
-FOUNDATION_EXPORT id<ComGoogleErrorproneAnnotationsImmutable> create_ComGoogleErrorproneAnnotationsImmutable(IOSObjectArray *containerOf);
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsImmutable)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsImmutable")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsImmutable.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsImmutable.m
deleted file mode 100644
index b8abde377..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsImmutable.m
+++ /dev/null
@@ -1,67 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsImmutable.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Inherited.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsImmutable__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsImmutable
-
-@synthesize containerOf = containerOf_;
-
-+ (IOSObjectArray *)containerOfDefault {
-  return [IOSObjectArray arrayWithLength:0 type:NSString_class_()];
-}
-
-- (IOSClass *)annotationType {
-  return ComGoogleErrorproneAnnotationsImmutable_class_();
-}
-
-- (NSString *)description {
-  return @"@com.google.errorprone.annotations.Immutable()";
-}
-
-- (void)dealloc {
-  RELEASE_(containerOf_);
-  [super dealloc];
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(containerOf);
-  #pragma clang diagnostic pop
-  static const J2ObjcFieldInfo fields[] = {
-    { "containerOf_", "[LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
-  };
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsImmutable__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsImmutable = { "Immutable", "com.google.errorprone.annotations", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsImmutable;
-}
-
-@end
-
-id<ComGoogleErrorproneAnnotationsImmutable> create_ComGoogleErrorproneAnnotationsImmutable(IOSObjectArray *containerOf) {
-  ComGoogleErrorproneAnnotationsImmutable *self = AUTORELEASE([[ComGoogleErrorproneAnnotationsImmutable alloc] init]);
-  self->containerOf_ = RETAIN_(containerOf);
-  return self;
-}
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsImmutable__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationInherited() } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsImmutable)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsIncompatibleModifiers.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsIncompatibleModifiers.h
deleted file mode 100644
index 256057d9a..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsIncompatibleModifiers.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsIncompatibleModifiers
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsIncompatibleModifiers
-
-#if !defined (ComGoogleErrorproneAnnotationsIncompatibleModifiers_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers || defined(INCLUDE_ComGoogleErrorproneAnnotationsIncompatibleModifiers))
-#define ComGoogleErrorproneAnnotationsIncompatibleModifiers_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol ComGoogleErrorproneAnnotationsIncompatibleModifiers < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsIncompatibleModifiers)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsIncompatibleModifiers)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsIncompatibleModifiers.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsIncompatibleModifiers.m
deleted file mode 100644
index 6678c45c6..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsIncompatibleModifiers.m
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsIncompatibleModifiers.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsIncompatibleModifiers : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsIncompatibleModifiers__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsIncompatibleModifiers
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LJavaxLangModelElementModifier;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsIncompatibleModifiers__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsIncompatibleModifiers = { "IncompatibleModifiers", "com.google.errorprone.annotations", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsIncompatibleModifiers;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsIncompatibleModifiers__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsIncompatibleModifiers)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsNoAllocation.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsNoAllocation.h
deleted file mode 100644
index 14ef87e25..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsNoAllocation.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsNoAllocation")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsNoAllocation
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsNoAllocation 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsNoAllocation 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsNoAllocation
-
-#if !defined (ComGoogleErrorproneAnnotationsNoAllocation_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsNoAllocation || defined(INCLUDE_ComGoogleErrorproneAnnotationsNoAllocation))
-#define ComGoogleErrorproneAnnotationsNoAllocation_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsNoAllocation < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsNoAllocation)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsNoAllocation)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsNoAllocation")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsNoAllocation.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsNoAllocation.m
deleted file mode 100644
index 3198fbf7b..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsNoAllocation.m
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsNoAllocation.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsNoAllocation : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsNoAllocation__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsNoAllocation
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsNoAllocation__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsNoAllocation = { "NoAllocation", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsNoAllocation;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsNoAllocation__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsNoAllocation)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRequiredModifiers.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRequiredModifiers.h
deleted file mode 100644
index 1c31b7636..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRequiredModifiers.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsRequiredModifiers")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsRequiredModifiers
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsRequiredModifiers 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsRequiredModifiers 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsRequiredModifiers
-
-#if !defined (ComGoogleErrorproneAnnotationsRequiredModifiers_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsRequiredModifiers || defined(INCLUDE_ComGoogleErrorproneAnnotationsRequiredModifiers))
-#define ComGoogleErrorproneAnnotationsRequiredModifiers_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol ComGoogleErrorproneAnnotationsRequiredModifiers < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsRequiredModifiers)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsRequiredModifiers)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsRequiredModifiers")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRequiredModifiers.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRequiredModifiers.m
deleted file mode 100644
index 1aa78a828..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRequiredModifiers.m
+++ /dev/null
@@ -1,43 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsRequiredModifiers.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/Documented.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsRequiredModifiers : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsRequiredModifiers__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsRequiredModifiers
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "[LJavaxLangModelElementModifier;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(value);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsRequiredModifiers__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsRequiredModifiers = { "RequiredModifiers", "com.google.errorprone.annotations", ptrTable, methods, NULL, 7, 0x2609, 1, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsRequiredModifiers;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsRequiredModifiers__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsRequiredModifiers)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRestrictedApi.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRestrictedApi.h
deleted file mode 100644
index 60cfffdae..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRestrictedApi.h
+++ /dev/null
@@ -1,34 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsRestrictedApi")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsRestrictedApi
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsRestrictedApi 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsRestrictedApi 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsRestrictedApi
-
-#if !defined (ComGoogleErrorproneAnnotationsRestrictedApi_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsRestrictedApi || defined(INCLUDE_ComGoogleErrorproneAnnotationsRestrictedApi))
-#define ComGoogleErrorproneAnnotationsRestrictedApi_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSObjectArray;
-
-@protocol ComGoogleErrorproneAnnotationsRestrictedApi < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsRestrictedApi)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsRestrictedApi)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsRestrictedApi")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRestrictedApi.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRestrictedApi.m
deleted file mode 100644
index eca0d2909..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsRestrictedApi.m
+++ /dev/null
@@ -1,50 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsRestrictedApi.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsRestrictedApi : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsRestrictedApi__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsRestrictedApi
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static J2ObjcMethodInfo methods[] = {
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
-  };
-  #pragma clang diagnostic push
-  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
-  methods[0].selector = @selector(checkerName);
-  methods[1].selector = @selector(explanation);
-  methods[2].selector = @selector(link);
-  methods[3].selector = @selector(allowedOnPath);
-  methods[4].selector = @selector(whitelistAnnotations);
-  methods[5].selector = @selector(whitelistWithWarningAnnotations);
-  #pragma clang diagnostic pop
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsRestrictedApi__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsRestrictedApi = { "RestrictedApi", "com.google.errorprone.annotations", ptrTable, methods, NULL, 7, 0x2609, 6, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsRestrictedApi;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsRestrictedApi__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, CONSTRUCTOR), JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:1 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsRestrictedApi)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsSuppressPackageLocation.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsSuppressPackageLocation.h
deleted file mode 100644
index a56e474d9..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsSuppressPackageLocation.h
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsSuppressPackageLocation")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsSuppressPackageLocation
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsSuppressPackageLocation 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsSuppressPackageLocation 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsSuppressPackageLocation
-
-#if !defined (ComGoogleErrorproneAnnotationsSuppressPackageLocation_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsSuppressPackageLocation || defined(INCLUDE_ComGoogleErrorproneAnnotationsSuppressPackageLocation))
-#define ComGoogleErrorproneAnnotationsSuppressPackageLocation_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@protocol ComGoogleErrorproneAnnotationsSuppressPackageLocation < JavaLangAnnotationAnnotation >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsSuppressPackageLocation)
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsSuppressPackageLocation)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsSuppressPackageLocation")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsSuppressPackageLocation.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsSuppressPackageLocation.m
deleted file mode 100644
index d5a82948c..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsSuppressPackageLocation.m
+++ /dev/null
@@ -1,35 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsSuppressPackageLocation.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-@interface ComGoogleErrorproneAnnotationsSuppressPackageLocation : NSObject
-
-@end
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsSuppressPackageLocation__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsSuppressPackageLocation
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsSuppressPackageLocation__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsSuppressPackageLocation = { "SuppressPackageLocation", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsSuppressPackageLocation;
-}
-
-@end
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsSuppressPackageLocation__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, PACKAGE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, CLASS)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsSuppressPackageLocation)
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsVar.h b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsVar.h
deleted file mode 100644
index 6595b5c67..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsVar.h
+++ /dev/null
@@ -1,40 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "J2ObjC_header.h"
-
-#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsVar")
-#ifdef RESTRICT_ComGoogleErrorproneAnnotationsVar
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsVar 0
-#else
-#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsVar 1
-#endif
-#undef RESTRICT_ComGoogleErrorproneAnnotationsVar
-
-#if !defined (ComGoogleErrorproneAnnotationsVar_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsVar || defined(INCLUDE_ComGoogleErrorproneAnnotationsVar))
-#define ComGoogleErrorproneAnnotationsVar_
-
-#define RESTRICT_JavaLangAnnotationAnnotation 1
-#define INCLUDE_JavaLangAnnotationAnnotation 1
-#include "java/lang/annotation/Annotation.h"
-
-@class IOSClass;
-
-@protocol ComGoogleErrorproneAnnotationsVar < JavaLangAnnotationAnnotation >
-
-@end
-
-@interface ComGoogleErrorproneAnnotationsVar : NSObject < ComGoogleErrorproneAnnotationsVar >
-
-@end
-
-J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsVar)
-
-FOUNDATION_EXPORT id<ComGoogleErrorproneAnnotationsVar> create_ComGoogleErrorproneAnnotationsVar();
-
-J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsVar)
-
-#endif
-
-#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsVar")
diff --git a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsVar.m b/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsVar.m
deleted file mode 100644
index 03b738844..000000000
--- a/core/iostest/daggerframework/test/truth/ComGoogleErrorproneAnnotationsVar.m
+++ /dev/null
@@ -1,44 +0,0 @@
-//
-//  Generated by the J2ObjC translator.  DO NOT EDIT!
-//
-
-#include "ComGoogleErrorproneAnnotationsVar.h"
-#include "IOSClass.h"
-#include "IOSObjectArray.h"
-#include "J2ObjC_source.h"
-#include "java/lang/annotation/Annotation.h"
-#include "java/lang/annotation/ElementType.h"
-#include "java/lang/annotation/Retention.h"
-#include "java/lang/annotation/RetentionPolicy.h"
-#include "java/lang/annotation/Target.h"
-
-__attribute__((unused)) static IOSObjectArray *ComGoogleErrorproneAnnotationsVar__Annotations$0();
-
-@implementation ComGoogleErrorproneAnnotationsVar
-
-- (IOSClass *)annotationType {
-  return ComGoogleErrorproneAnnotationsVar_class_();
-}
-
-- (NSString *)description {
-  return @"@com.google.errorprone.annotations.Var()";
-}
-
-+ (const J2ObjcClassInfo *)__metadata {
-  static const void *ptrTable[] = { (void *)&ComGoogleErrorproneAnnotationsVar__Annotations$0 };
-  static const J2ObjcClassInfo _ComGoogleErrorproneAnnotationsVar = { "Var", "com.google.errorprone.annotations", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
-  return &_ComGoogleErrorproneAnnotationsVar;
-}
-
-@end
-
-id<ComGoogleErrorproneAnnotationsVar> create_ComGoogleErrorproneAnnotationsVar() {
-  ComGoogleErrorproneAnnotationsVar *self = AUTORELEASE([[ComGoogleErrorproneAnnotationsVar alloc] init]);
-  return self;
-}
-
-IOSObjectArray *ComGoogleErrorproneAnnotationsVar__Annotations$0() {
-  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER), JreLoadEnum(JavaLangAnnotationElementType, LOCAL_VARIABLE) } count:3 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
-}
-
-J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleErrorproneAnnotationsVar)
diff --git a/core/src/test/java/OneTest.java b/core/src/test/java/OneTest.java
index b4fb34a91..a20fc0f36 100644
--- a/core/src/test/java/OneTest.java
+++ b/core/src/test/java/OneTest.java
@@ -1,8 +1,3 @@
-import com.google.j2objc.annotations.AutoreleasePool;
-
-import org.junit.runner.Description;
-import org.junit.runner.notification.RunListener;
-
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
@@ -15,44 +10,13 @@
 
 public class OneTest
 {
-    public static void runTests()
-    {
-        //        runDoppl();
-        new Thread()
-        {
-            @Override
-            public void run()
-            {
-                runDoppl();
-            }
-        }.start();
-    }
-
-    @AutoreleasePool
-    private static void runDoppl()
+    public static int runTests()
     {
         List<Class> smoothClasses = new ArrayList<>(Arrays.asList(alltests));
 
         Class[] classes = smoothClasses.toArray(new Class[smoothClasses.size()]);
 
-        DopplJunitTestHelper.run(classes);
-    }
-
-    static class BigMemRunListener extends RunListener
-    {
-        @Override
-        public void testStarted(Description description) throws Exception
-        {
-            super.testStarted(description);
-            System.out.println("TRACE Starting "+ description.getClassName() + "-" + description.getMethodName() );
-        }
-
-        @Override
-        public void testFinished(Description description) throws Exception
-        {
-            super.testFinished(description);
-            System.out.println("TRACE Finished "+ description.getClassName() + "-" + description.getMethodName() );
-        }
+        return DopplJunitTestHelper.run(classes);
     }
 
     private static Class[] alltests = new Class[] {
diff --git a/core/src/test/java/dagger/internal/DoubleCheckTest.java b/core/src/test/java/dagger/internal/DoubleCheckTest.java
index 21f2c4f47..494c86cc5 100644
--- a/core/src/test/java/dagger/internal/DoubleCheckTest.java
+++ b/core/src/test/java/dagger/internal/DoubleCheckTest.java
@@ -20,7 +20,7 @@
 import com.google.common.util.concurrent.Uninterruptibles;
 
 import co.touchlab.doppl.testing.DopplHacks;
-import co.touchlab.doppl.testing.PlatformUtils;
+import co.touchlab.doppl.utils.PlatformUtils;
 import dagger.Lazy;
 import java.util.List;
 import java.util.Set;
