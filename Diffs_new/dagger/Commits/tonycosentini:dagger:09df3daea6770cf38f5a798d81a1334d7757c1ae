diff --git a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
index 703ebb384..7c6a31a7e 100644
--- a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
+++ b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
@@ -348,11 +348,11 @@ private void addBuildMethod(
             "if ($1N == null) { this.$1N = new $2T(); }", builderField, builderField.type);
       } else if (requiresAPassedInstance(elements, builderFieldEntry.getKey())) {
         buildMethod.addCode(
-            "if ($N == null) { throw new $T($T.class.getCanonicalName() + $S); }",
+            "if ($N == null) { throw new $T($S); }",
             builderField,
             ILLEGAL_STATE_EXCEPTION,
-            builderField.type,
-            " must be set");
+            String.format("%s must be set", builderField.type.toString())
+        );
       }
     }
     buildMethod.addStatement("return new $T(this)", name);
diff --git a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
index 9dfe0a6c6..5bcf9eac3 100644
--- a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
@@ -1589,8 +1589,7 @@ public void subcomponentOmitsInheritedBindings() {
         "",
         "    public BComponent build() {",
         "      if (aComponent == null) {",
-        "        throw new IllegalStateException(AComponent.class.getCanonicalName()",
-        "            + \" must be set\");",
+        "        throw new IllegalStateException(\"test.AComponent must be set\");",
         "      }",
         "      return new DaggerBComponent(this);",
         "    }",
