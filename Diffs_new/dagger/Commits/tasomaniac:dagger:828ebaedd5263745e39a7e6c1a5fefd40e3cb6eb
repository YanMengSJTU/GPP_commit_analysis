diff --git a/producers.md b/producers.md
index 38c4f2c3f..899b4697a 100644
--- a/producers.md
+++ b/producers.md
@@ -246,9 +246,40 @@ subcomponents of either components or production components.
 A subcomponent inherits all bindings from its parent component, and so it is
 often a simpler way of building nested scopes.
 
-### Logging and debugging
+### Monitoring
 
-==As of April 2015, not implemented yet==
+[ProducerMonitor][ProducerMonitor] can be used to monitor the execution of
+producer methods; its methods correspond to various places in a producer's
+lifecycle.
+
+To install a `ProducerMonitor`, contribute into a set binding of
+[ProductionComponentMonitor.Factory][ProductionComponentMonitorFactory]. For
+example:
+
+```java
+@Module
+final class MyMonitorModule {
+  @Provides(type = SET)
+  static ProductionComponentMonitor.Factory provideMonitorFactory(
+      MyProductionComponentMonitor.Factory monitorFactory) {
+    return monitorFactory;
+  }
+}
+
+@ProductionComponent(modules = {MyMonitorModule.class, MyProducerModule.class})
+interface MyComponent {
+  ListenableFuture<SomeType> someType();
+}
+```
+
+When the component is created, each monitor factory contributed to the set will
+be asked to create a monitor for the component. The resulting (single) instance
+will be held for the lifetime of the component, and will be used to create
+individual monitors for each producer method.
+
+### Timing, Logging and Debugging
+
+==As of January 2016, not implemented yet==
 
 Since graphs are constructed at compile-time, the graph will be able to be
 viewed immediately after compiling, likely via writing its structure to json
@@ -267,8 +298,11 @@ While a graph is running, its current state will be able to be dumped.
 [Produced]: http://google.github.io/dagger/api/latest/dagger/producers/Produced.html
 [Producer]: http://google.github.io/dagger/api/latest/dagger/producers/Producer.html
 [ProducerModule]: http://google.github.io/dagger/api/latest/dagger/producers/ProducerModule.html
+[ProducerMonitor]: http://google.github.io/dagger/api/latest/dagger/producers/monitoring/ProducerMonitor.html
 [Produces]: http://google.github.io/dagger/api/latest/dagger/producers/Produces.html
 [ProductionComponent]: http://google.github.io/dagger/api/latest/dagger/producers/ProductionComponent.html
+[ProductionComponentMonitor]: http://google.github.io/dagger/api/latest/dagger/producers/monitoring/ProductionComponentMonitor.html
+[ProductionComponentMonitorFactory]: http://google.github.io/dagger/api/latest/dagger/producers/monitoring/ProductionComponentMonitor.Factory.html
 [Provider]: http://docs.oracle.com/javaee/6/api/javax/inject/Provider.html
 [Provides]: http://google.github.io/dagger/api/latest/dagger/Provides.html
 [Subcomponent]: http://google.github.io/dagger/api/latest/dagger/Subcomponent.html
