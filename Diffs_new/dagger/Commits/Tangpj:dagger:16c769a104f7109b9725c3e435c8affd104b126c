diff --git a/java/dagger/android/androidx/AndroidxInjection.java b/java/dagger/android/androidx/AndroidxInjection.java
index e2b5a74ed..81073b5f7 100644
--- a/java/dagger/android/androidx/AndroidxInjection.java
+++ b/java/dagger/android/androidx/AndroidxInjection.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import static android.util.Log.DEBUG;
 import static dagger.internal.Preconditions.checkNotNull;
@@ -24,7 +24,6 @@
 
 import androidx.fragment.app.Fragment;
 import dagger.android.AndroidInjector;
-import dagger.android.support.HasSupportFragmentInjector;
 import dagger.internal.Beta;
 
 /** Injects core Android types from support libraries. */
@@ -45,14 +44,14 @@
    *   <li>Uses the {@code fragment}'s {@link Fragment#getActivity() activity} if it implements
    *       {@link HasAndroidxFragmentInjector}, and if not
    *   <li>Uses the {@link android.app.Application} if it implements {@link
-   *       HasSupportFragmentInjector}.
+   *       HasAndroidxFragmentInjector}.
    * </ol>
    *
    * If none of them implement {@link HasAndroidxFragmentInjector}, a {@link
    * IllegalArgumentException} is thrown.
    *
    * @throws IllegalArgumentException if no parent fragment, activity, or application implements
-   *     {@link HasSupportFragmentInjector}.
+   *     {@link HasAndroidxFragmentInjector}.
    */
   public static void inject(Fragment fragment) {
     checkNotNull(fragment, "fragment");
@@ -79,15 +78,15 @@ public static void inject(Fragment fragment) {
   private static HasAndroidxFragmentInjector findHasFragmentInjector(Fragment fragment) {
     Fragment parentFragment = fragment;
     while ((parentFragment = parentFragment.getParentFragment()) != null) {
-      if (parentFragment instanceof HasSupportFragmentInjector) {
+      if (parentFragment instanceof HasAndroidxFragmentInjector) {
         return (HasAndroidxFragmentInjector) parentFragment;
       }
     }
     Activity activity = fragment.getActivity();
-    if (activity instanceof HasSupportFragmentInjector) {
+    if (activity instanceof HasAndroidxFragmentInjector) {
       return (HasAndroidxFragmentInjector) activity;
     }
-    if (activity.getApplication() instanceof HasSupportFragmentInjector) {
+    if (activity.getApplication() instanceof HasAndroidxFragmentInjector) {
       return (HasAndroidxFragmentInjector) activity.getApplication();
     }
     throw new IllegalArgumentException(
diff --git a/java/dagger/android/androidx/AndroidxInjectionModule.java b/java/dagger/android/androidx/AndroidxInjectionModule.java
index b651388f4..009ac4440 100644
--- a/java/dagger/android/androidx/AndroidxInjectionModule.java
+++ b/java/dagger/android/androidx/AndroidxInjectionModule.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import androidx.fragment.app.Fragment;
 import dagger.Module;
@@ -34,11 +34,11 @@
 public abstract class AndroidxInjectionModule {
   @Multibinds
   abstract Map<Class<? extends Fragment>, AndroidInjector.Factory<? extends Fragment>>
-      supportFragmentInjectorFactories();
+      androidxFragmentInjectorFactories();
 
   @Multibinds
   abstract Map<String, AndroidInjector.Factory<? extends Fragment>>
-      supportFragmentInjectorFactoriesWithStringKeys();
+      androidxFragmentInjectorFactoriesWithStringKeys();
 
   private AndroidxInjectionModule() {}
 }
diff --git a/java/dagger/android/androidx/DaggerAppCompatActivity.java b/java/dagger/android/androidx/DaggerAppCompatActivity.java
index aa008d235..59560896a 100644
--- a/java/dagger/android/androidx/DaggerAppCompatActivity.java
+++ b/java/dagger/android/androidx/DaggerAppCompatActivity.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import android.os.Bundle;
 
@@ -24,8 +24,6 @@
 import dagger.android.AndroidInjection;
 import dagger.android.AndroidInjector;
 import dagger.android.DispatchingAndroidInjector;
-import dagger.android.HasFragmentInjector;
-import dagger.android.support.HasSupportFragmentInjector;
 import dagger.internal.Beta;
 import javax.inject.Inject;
 
diff --git a/java/dagger/android/androidx/DaggerAppCompatDialogFragment.java b/java/dagger/android/androidx/DaggerAppCompatDialogFragment.java
index a772b0a41..1cbb8ef32 100644
--- a/java/dagger/android/androidx/DaggerAppCompatDialogFragment.java
+++ b/java/dagger/android/androidx/DaggerAppCompatDialogFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import android.content.Context;
 
diff --git a/java/dagger/android/androidx/DaggerApplication.java b/java/dagger/android/androidx/DaggerApplication.java
index 9dc66af66..cd5e2a0da 100644
--- a/java/dagger/android/androidx/DaggerApplication.java
+++ b/java/dagger/android/androidx/DaggerApplication.java
@@ -14,18 +14,17 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import androidx.fragment.app.Fragment;
 import dagger.android.AndroidInjector;
 import dagger.android.DispatchingAndroidInjector;
-import dagger.android.support.HasSupportFragmentInjector;
 
 import javax.inject.Inject;
 
 /**
  * An {@link android.app.Application} that injects its members and can be used to inject {@link
- * android.app.Activity}s, {@linkplain androidx.fragment.app.Fragment framework fragments}, {@linkplain
+ * android.app.Activity}s, {@linkplain Fragment framework fragments}, {@linkplain
  * Fragment support fragments}, {@link android.app.Service}s, {@link
  * android.content.BroadcastReceiver}s, and {@link android.content.ContentProvider}s attached to it.
  */
diff --git a/java/dagger/android/androidx/DaggerDialogFragment.java b/java/dagger/android/androidx/DaggerDialogFragment.java
index 1fb03d067..efdef2371 100644
--- a/java/dagger/android/androidx/DaggerDialogFragment.java
+++ b/java/dagger/android/androidx/DaggerDialogFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import android.content.Context;
 
@@ -22,8 +22,6 @@
 import androidx.fragment.app.Fragment;
 import dagger.android.AndroidInjector;
 import dagger.android.DispatchingAndroidInjector;
-import dagger.android.support.AndroidSupportInjection;
-import dagger.android.support.HasSupportFragmentInjector;
 import dagger.internal.Beta;
 import javax.inject.Inject;
 
diff --git a/java/dagger/android/androidx/DaggerFragment.java b/java/dagger/android/androidx/DaggerFragment.java
index b3b4884c4..1a79bdec2 100644
--- a/java/dagger/android/androidx/DaggerFragment.java
+++ b/java/dagger/android/androidx/DaggerFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import android.content.Context;
 
diff --git a/java/dagger/android/androidx/FragmentKey.java b/java/dagger/android/androidx/FragmentKey.java
index f181ffbca..ff96608a7 100644
--- a/java/dagger/android/androidx/FragmentKey.java
+++ b/java/dagger/android/androidx/FragmentKey.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import static java.lang.annotation.ElementType.METHOD;
 
diff --git a/java/dagger/android/androidx/HasAndroidxFragmentInjector.java b/java/dagger/android/androidx/HasAndroidxFragmentInjector.java
index 2d3cfa6f2..9dae27d4e 100644
--- a/java/dagger/android/androidx/HasAndroidxFragmentInjector.java
+++ b/java/dagger/android/androidx/HasAndroidxFragmentInjector.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 import androidx.fragment.app.Fragment;
 import dagger.android.AndroidInjector;
diff --git a/java/dagger/android/androidx/package-info.java b/java/dagger/android/androidx/package-info.java
index fbaeebe74..d008e2dab 100644
--- a/java/dagger/android/androidx/package-info.java
+++ b/java/dagger/android/androidx/package-info.java
@@ -15,7 +15,7 @@
  */
 
 @CheckReturnValue
-package dagger.android.androidx;
+package com.tangpj.recurve.dagger.androidx;
 
 /**
  * Additions to the APIs in {@link dagger.android} for use with the <a
