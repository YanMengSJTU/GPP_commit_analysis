diff --git a/compiler-options.md b/compiler-options.md
index acb35ebe0..1907882af 100644
--- a/compiler-options.md
+++ b/compiler-options.md
@@ -23,7 +23,24 @@ where Dagger initialization is often on the userâ€™s critical path and where cla
 loading is expensive, consider using fastInit mode.
 
 To enable fastInit mode, pass the following option to javac when building your
-Dagger [`@Component`]: `-Adagger.fastInit=enabled`
+Dagger [`@Component`]: `-Adagger.fastInit=enabled`.
+
+## Turning off code formatting
+
+By default, Dagger formats all of the code it generates with
+[google-java-format](https://github.com/google/google-java-format). This makes
+the generated code readable, which is useful for debugging in an IDE or having
+useful line numbers in stack traces. Formatting may however incur a noticeable
+cost at compilation time, so Dagger provides a flag to disable this behavior:
+`-Adagger.formatGeneratedSource=disabled`.
+
+It is strongly recommended to disable formatting only during development, not in
+production code or continuous integration tests. Otherwise stack traces may not
+be easy to interpret, since the unformatted source may not be as readable.
+
+> Note: Benchmarking of a 143k line file generated by Dagger (one of the largest
+at Google!) took between 2.6 and 3 seconds. As with all optimizations, verify
+the effects on your machine/environment.
 
 ## Gradle incremental compilation
 
