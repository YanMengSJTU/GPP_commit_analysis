diff --git a/java/dagger/internal/codegen/BindingExpression.java b/java/dagger/internal/codegen/BindingExpression.java
index d043d8549..a6e05025b 100644
--- a/java/dagger/internal/codegen/BindingExpression.java
+++ b/java/dagger/internal/codegen/BindingExpression.java
@@ -16,6 +16,8 @@
 
 package dagger.internal.codegen;
 
+import static dagger.internal.codegen.Accessibility.isTypeAccessibleFrom;
+
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.CodeBlock;
 import dagger.internal.codegen.ComponentDescriptor.ComponentMethodDescriptor;
@@ -98,7 +100,11 @@ CodeBlock getModifiableBindingMethodImplementation(
     //
     // This isn't necessary for getComponentMethodImplementation() because that's only used for
     // non-modifiable bindings
-    if (!types.isAssignable(dependencyExpression.type(), requestedType)) {
+    if (!types.isAssignable(dependencyExpression.type(), requestedType)
+        // TODO(ronshapiro): perhaps instead of needing to compute the requested type and then check
+        // for assignablility, ModifiableBindingMethod should have a TypeMirror property for the
+        // return type
+        && isTypeAccessibleFrom(requestedType, component.name().packageName())) {
       dependencyExpression = dependencyExpression.castTo(requestedType);
     }
 
