diff --git a/BUILD b/BUILD
index a526844fa..91b82f8d4 100644
--- a/BUILD
+++ b/BUILD
@@ -96,6 +96,7 @@ javadoc_library(
     deps = [
         "//core/src/main/java/dagger:core",
         "//java/dagger/android",
+        "//java/dagger/android/support",
         "//producers",
     ],
 )
diff --git a/tools/AndroidManifest.xml b/tools/AndroidManifest.xml
deleted file mode 100644
index b18621a3e..000000000
--- a/tools/AndroidManifest.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<!-- A dummy AndroidManifest.xml to be used for generating Javadoc when Android sources are used -->
-<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="dummy">
-  <uses-sdk android:minSdkVersion="14" />
-</manifest>
diff --git a/tools/BUILD b/tools/BUILD
index 8ea1fc720..c3bf2c78d 100644
--- a/tools/BUILD
+++ b/tools/BUILD
@@ -17,11 +17,6 @@
 
 package(default_visibility = ["//:src"])
 
-sh_library(
-    name = "javadoc_library_impl",
-    srcs = ["javadoc_library_impl.sh"],
-)
-
 sh_binary(
     name = "jarjar_library_impl",
     srcs = ["jarjar_library_impl.sh"],
@@ -67,5 +62,3 @@ java_binary(
         "@org_pantsbuild_jarjar//jar",
     ],
 )
-
-exports_files(["AndroidManifest.xml"])
diff --git a/tools/javadoc.bzl b/tools/javadoc.bzl
index f90e42f69..3071c16bc 100644
--- a/tools/javadoc.bzl
+++ b/tools/javadoc.bzl
@@ -12,97 +12,108 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+_EXTERNAL_JAVADOC_LINKS = [
+    "https://docs.oracle.com/javase/8/docs/api/",
+    "https://developer.android.com/reference/",
+    "https://google.github.io/guava/releases/21.0/api/docs/",
+    "https://docs.oracle.com/javaee/7/api/",
+]
+
 def _check_non_empty(value, name):
   if not value:
     fail("%s must be non-empty" % name)
 
-def javadoc_library(
-    name,
-    srcs = [],
-    deps = [],
-    root_packages = [],
-    exclude_packages = [],
-    android_api_level = None,
-    doctitle = None):
-  """
-  Generates a Javadoc jar $GENDIR/path/to/target/<name>.jar.
-
-  Arguments:
-    srcs: source files to process
-    deps: targets that contain references to other types referenced in Javadoc. This can be the
-        java_library/android_library target(s) for the same sources
-    root_packages: Java packages to include in generated Javadoc. Any subpackages not listed in
-        exclude_packages will be included as well
-    exclude_packages: Java packages to exclude from generated Javadoc
-    android_api_level: If Android APIs are used, the API level to compile against to generate
-        Javadoc
-    doctitle: title for Javadoc's index.html. See javadoc -doctitle
-  """
-  _check_non_empty(srcs, "srcs")
-  _check_non_empty(root_packages, "root_packages")
-
-  exclude_packages_option = ""
-  if exclude_packages:
-    exclude_packages_option = "-exclude " + ":".join(exclude_packages)
-
-  deploy_jar_name = name + "_deploy_jar_for_javadoc"
-  deploy_jar_label = ":%s_deploy.jar" % deploy_jar_name
-
-  genrule_srcs = srcs + deps + [
-      deploy_jar_label,
-      "//tools:javadoc_library_impl"
-  ]
+def _android_jar(android_api_level):
+  if android_api_level == -1:
+    return None
+  return Label("@androidsdk//:platforms/android-%s/android.jar" % android_api_level)
+
+def _javadoc_libary(ctx):
+  _check_non_empty(ctx.attr.root_packages, "root_packages")
+
+  inputs = []
+  for src_attr in ctx.attr.srcs:
+    inputs.extend(src_attr.files.to_list())
 
-  bootclasspath_option = ""
-  if android_api_level:
-    native.android_binary(
-        name = deploy_jar_name,
-        deps = deps,
-        manifest = "//tools:AndroidManifest.xml",
-        manifest_merger = "legacy",
-        custom_package = "dummy",
-        tags = ["manual"],
-    )
-    android_jar = "@androidsdk//:platforms/android-%s/android.jar" % android_api_level
-    genrule_srcs.append(android_jar)
-    bootclasspath_option = "-bootclasspath $(location %s)" % android_jar
-  else:
-    native.java_binary(
-        name = deploy_jar_name,
-        runtime_deps = deps,
-        main_class = "dummy",
-        tags = ["manual"],
-    )
-
-  doctitle_option = ""
-  if doctitle:
-    doctitle_option = "-doctitle \"%s\"" % doctitle
-
-  external_javadoc_links = [
-      "https://docs.oracle.com/javase/8/docs/api/",
-      "https://developer.android.com/reference/",
-      "https://google.github.io/guava/releases/21.0/api/docs/",
-      "https://docs.oracle.com/javaee/7/api/"
+  classpath = depset()
+  for dep in ctx.attr.deps:
+    for transitive_dep in dep.java.transitive_deps:
+      classpath += [transitive_dep]
+  if ctx.attr._android_jar:
+    classpath += ctx.attr._android_jar.files
+
+  inputs += classpath.to_list()
+
+  include_packages = ":".join(ctx.attr.root_packages)
+  javadoc_command = [
+      ctx.file._javadoc_binary.path,
+      '-sourcepath $(find * -type d -name "*java" -print0 | tr "\\0" :)',
+      include_packages,
+      "-use",
+      "-subpackages", include_packages,
+      "-encoding UTF8",
+      "-classpath", ":".join([jar.path for jar in classpath.to_list()]),
+      "-notimestamp",
+      '-bottom "Copyright &copy; 2012&ndash;2017 The Dagger Authors. All rights reserved."',
+      "-d tmp",
   ]
 
-  linkoffline_options = ' '.join(
-      ["-linkoffline {0} {0}".format(url) for url in external_javadoc_links])
-
-  native.genrule(
-      name = name,
-      srcs = genrule_srcs,
-      outs = [name + ".jar"],
-      tools = ["@local_jdk//:bin/javadoc", "@local_jdk//:bin/jar", "@local_jdk//:jdk-default"],
-      cmd = """
-$(location //tools:javadoc_library_impl) \
-  "$(location @local_jdk//:bin/javadoc)" "$(location @local_jdk//:bin/jar)" "$@" \
-  "{include_packages}" "{exclude_packages}" "$(location {deploy_jar})" "{bootclasspath}" \
-  "{linkoffline}" "{doctitle}" "$(@D)"
-      """.format(
-          deploy_jar=deploy_jar_label,
-          include_packages=":".join(root_packages),
-          exclude_packages=exclude_packages_option,
-          bootclasspath=bootclasspath_option,
-          doctitle=doctitle_option,
-          linkoffline=linkoffline_options)
-  )
+  if ctx.attr.doctitle:
+    javadoc_command.append('-doctitle "%s"' % ctx.attr.doctitle)
+
+  if ctx.attr.exclude_packages:
+    javadoc_command.append("-exclude %s" % ":".join(ctx.attr.exclude_packages))
+
+  for link in _EXTERNAL_JAVADOC_LINKS:
+    javadoc_command.append("-linkoffline {0} {0}".format(link))
+
+  jar_command = "%s cvf %s -C tmp ." % (ctx.file._jar_binary.path, ctx.outputs.jar.path)
+
+  ctx.action(
+      inputs = inputs + ctx.files._jdk,
+      command = "%s && %s" % (" ".join(javadoc_command), jar_command),
+      outputs = [ctx.outputs.jar])
+
+javadoc_library = rule(
+    attrs = {
+        "srcs": attr.label_list(allow_files = True),
+        "deps": attr.label_list(),
+        "doctitle": attr.string(default = ""),
+        "root_packages": attr.string_list(),
+        "exclude_packages": attr.string_list(),
+        "android_api_level": attr.int(default = -1),
+        "_android_jar": attr.label(
+            default = _android_jar,
+            allow_single_file = True,
+        ),
+        "_javadoc_binary": attr.label(
+            default = Label("@local_jdk//:bin/javadoc"),
+            allow_single_file = True,
+        ),
+        "_jar_binary": attr.label(
+            default = Label("@local_jdk//:bin/jar"),
+            allow_single_file = True,
+        ),
+        "_jdk": attr.label(
+            default = Label("@local_jdk//:jdk-default"),
+            allow_files = True,
+        ),
+    },
+    outputs = {"jar": "%{name}.jar"},
+    implementation = _javadoc_libary,
+)
+
+"""
+Generates a Javadoc jar path/to/target/<name>.jar.
+
+Arguments:
+  srcs: source files to process
+  deps: targets that contain references to other types referenced in Javadoc. This can be the
+      java_library/android_library target(s) for the same sources
+  root_packages: Java packages to include in generated Javadoc. Any subpackages not listed in
+      exclude_packages will be included as well
+  exclude_packages: Java packages to exclude from generated Javadoc
+  android_api_level: If Android APIs are used, the API level to compile against to generate
+      Javadoc
+  doctitle: title for Javadoc's index.html. See javadoc -doctitle
+"""
diff --git a/tools/javadoc_library_impl.sh b/tools/javadoc_library_impl.sh
deleted file mode 100755
index b2d711598..000000000
--- a/tools/javadoc_library_impl.sh
+++ /dev/null
@@ -1,47 +0,0 @@
-#!/usr/bin/env sh
-
-# Copyright (C) 2017 The Dagger Authors.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-JAVADOC_BINARY=$1
-JAR_BINARY=$2
-OUTPUT=$3
-INCLUDE_PACKAGES=$4
-EXCLUDE_PACKAGES=$5
-DEPLOY_JAR=$6
-BOOTCLASSPATH=$7
-LINKOFFLINE=$8
-DOCTITLE=$9
-TEMPDIR=${10}/tmp
-
-mkdir -p $TEMPDIR
-
-$JAVADOC_BINARY \
-  -sourcepath $(find * -type d -regex ".*java" -print0 | tr '\0' :) \
-  $INCLUDE_PACKAGES \
-  -use \
-  -subpackages $INCLUDE_PACKAGES \
-  -encoding UTF8 \
-  $EXCLUDE_PACKAGES \
-  -classpath $DEPLOY_JAR \
-  $BOOTCLASSPATH \
-  $LINKOFFLINE \
-  -notimestamp \
-  $DOCTITLE \
-  -bottom "Copyright &copy; 2012â€“2017 The Dagger Authors. All rights reserved." \
-  -d $TEMPDIR
-
-$JAR_BINARY cvf $OUTPUT -C $TEMPDIR $TEMPDIR/*
-rm -rf $TEMPDIR
-
diff --git a/util/execute-deploy.sh b/util/execute-deploy.sh
index e7d2c106a..3f84ddb9f 100755
--- a/util/execute-deploy.sh
+++ b/util/execute-deploy.sh
@@ -37,7 +37,7 @@ deploy_library() {
     -Dfile=$(library_output_file $library) \
     -DrepositoryId=$REPOSITORY_ID \
     -Durl=$REPOSITORY_URL \
-    -Djavadoc=bazel-genfiles/$javadoc \
+    -Djavadoc=bazel-bin/$javadoc \
     -DpomFile=$pomfile \
     -Dsources=bazel-bin/$srcjar \
     $EXTRA_MAVEN_ARGS
