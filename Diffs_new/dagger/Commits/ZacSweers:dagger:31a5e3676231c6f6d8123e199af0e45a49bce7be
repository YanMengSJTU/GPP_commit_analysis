diff --git a/java/dagger/Component.java b/java/dagger/Component.java
index 0fd498156..ae9a409b4 100644
--- a/java/dagger/Component.java
+++ b/java/dagger/Component.java
@@ -301,6 +301,7 @@
    *   }
    * }</code></pre>
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Builder {}
@@ -355,6 +356,7 @@
    * type will have a {@code static} method named {@code factory()} that returns an instance of that
    * factory.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Factory {}
diff --git a/java/dagger/Subcomponent.java b/java/dagger/Subcomponent.java
index 7223ab84a..b44d0d8c8 100644
--- a/java/dagger/Subcomponent.java
+++ b/java/dagger/Subcomponent.java
@@ -52,6 +52,7 @@
    * builder type, allowing an instance or {@code Provider} of that builder to be injected or
    * returned from a method on that component like any other binding.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Builder {}
@@ -66,6 +67,7 @@
    * factory type, allowing an instance of that factory to be injected or returned from a method on
    * that component like any other binding.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Factory {}
diff --git a/java/dagger/producers/ProductionComponent.java b/java/dagger/producers/ProductionComponent.java
index 2af8aef5b..47bbf2b49 100644
--- a/java/dagger/producers/ProductionComponent.java
+++ b/java/dagger/producers/ProductionComponent.java
@@ -101,6 +101,7 @@
    * <p>This follows all the rules of {@link Component.Builder}, except it must appear in classes
    * annotated with {@link ProductionComponent} instead of {@code Component}.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Builder {}
@@ -111,6 +112,7 @@
    * <p>This follows all the rules of {@link Component.Factory}, except it must appear in classes
    * annotated with {@link ProductionComponent} instead of {@code Component}.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Factory {}
diff --git a/java/dagger/producers/ProductionSubcomponent.java b/java/dagger/producers/ProductionSubcomponent.java
index c03fc3bee..1153ab869 100644
--- a/java/dagger/producers/ProductionSubcomponent.java
+++ b/java/dagger/producers/ProductionSubcomponent.java
@@ -59,6 +59,7 @@
    * builder type, allowing an instance or {@code Provider} of that builder to be injected or
    * returned from a method on that component like any other binding.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Builder {}
@@ -73,6 +74,7 @@
    * factory type, allowing an instance that factory to be injected or returned from a method on
    * that component like any other binding.
    */
+  @Retention(RUNTIME) // Allows runtimes to have specialized behavior interoperating with Dagger.
   @Target(TYPE)
   @Documented
   @interface Factory {}
