diff --git a/java/dagger/internal/codegen/BindingFactory.java b/java/dagger/internal/codegen/BindingFactory.java
index 23e0745c7..3f7d5eac3 100644
--- a/java/dagger/internal/codegen/BindingFactory.java
+++ b/java/dagger/internal/codegen/BindingFactory.java
@@ -588,6 +588,21 @@ MembersInjectionBinding membersInjectionBinding(
       DeclaredType type = currentType.get();
       ancestors.add(MoreElements.asType(type.asElement()));
       for (Element enclosedElement : type.asElement().getEnclosedElements()) {
+        if (enclosedElement.getKind().equals(ElementKind.METHOD)) {
+          ExecutableElement injectionSiteMethod =
+              MoreElements.asExecutable(enclosedElement);
+          overriddenMethodMap.put(
+              injectionSiteMethod.getSimpleName().toString(), injectionSiteMethod);
+        }
+
+        if (!isAnnotationPresent(enclosedElement, Inject.class)
+            || enclosedElement.getModifiers().contains(PRIVATE)
+            || enclosedElement.getModifiers().contains(STATIC)) {
+          // Don't attempt to visit elements which won't be injected (they might not be on the
+          // classpath).
+          continue;
+        }
+
         Optional<InjectionSite> maybeInjectionSite =
             injectionSiteVisitor.visit(enclosedElement, type);
         if (maybeInjectionSite.isPresent()) {
@@ -595,12 +610,6 @@ MembersInjectionBinding membersInjectionBinding(
           if (shouldBeInjected(injectionSite.element(), overriddenMethodMap)) {
             injectionSites.add(injectionSite);
           }
-          if (injectionSite.kind().equals(InjectionSite.Kind.METHOD)) {
-            ExecutableElement injectionSiteMethod =
-                MoreElements.asExecutable(injectionSite.element());
-            overriddenMethodMap.put(
-                injectionSiteMethod.getSimpleName().toString(), injectionSiteMethod);
-          }
         }
       }
     }
@@ -620,12 +629,6 @@ MembersInjectionBinding membersInjectionBinding(
 
   private boolean shouldBeInjected(
       Element injectionSite, SetMultimap<String, ExecutableElement> overriddenMethodMap) {
-    if (!isAnnotationPresent(injectionSite, Inject.class)
-        || injectionSite.getModifiers().contains(PRIVATE)
-        || injectionSite.getModifiers().contains(STATIC)) {
-      return false;
-    }
-
     if (injectionSite.getKind().isField()) { // Inject all fields (self and ancestors)
       return true;
     }
