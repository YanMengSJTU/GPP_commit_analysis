diff --git a/tools/BUILD b/tools/BUILD
index 87ede440d..b0b352464 100644
--- a/tools/BUILD
+++ b/tools/BUILD
@@ -19,5 +19,15 @@ package(default_visibility = ["//:src"])
 
 exports_files([
     "pom-template.xml",
-    "simple_jar.sh",
 ])
+
+sh_library(
+    name = "simple_jar",
+    srcs = ["simple_jar.sh"],
+)
+
+sh_test(
+    name = "simple_jar_test",
+    srcs = ["simple_jar_test.sh"],
+    deps = [":simple_jar"],
+)
diff --git a/tools/simple_jar.sh b/tools/simple_jar.sh
index 121af2072..a99dce899 100755
--- a/tools/simple_jar.sh
+++ b/tools/simple_jar.sh
@@ -13,29 +13,46 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-readonly PACKAGE_NAME="$1"
-readonly OUT="${PWD}/$2"
-shift 2
-
-dirname=""
-for src in "$@"; do
-  if [[ ! "${src}" =~ ^((.*/)?"${PACKAGE_NAME}")/ ]]; then
-    echo "Sources must be in ${PACKAGE_NAME}: $@"
-    exit 1
-  fi
-  src_dirname="${BASH_REMATCH[1]}"
+set -e
+
+find_dirname() {
+  local package_name="$1"
+  shift
+
+  local src src_dirname dirname=""
+  for src in "$@"; do
+    if [[ ! "${src}" =~ ^((.*/)?"${package_name}")/ ]]; then
+      echo "Sources must be in ${package_name}: $0" >&2
+      return 1
+    fi
+    src_dirname="${BASH_REMATCH[1]}"
+    if [[ -z "${dirname}" ]]; then
+      dirname="${src_dirname}"
+    elif [[ "${dirname}" != "${src_dirname}" ]]; then
+      echo "Sources must all be in the same directory: $@" >&2
+      return 1
+    fi
+  done
+
   if [[ -z "${dirname}" ]]; then
-    dirname="${src_dirname}"
-  elif [[ "${dirname}" != "${src_dirname}" ]]; then
-    echo "Sources must all be in the same directory: $@"
-    exit 1
+    echo "No sources provided" >&2
+    return 1
   fi
-done
 
-if [[ -z "${dirname}" ]]; then
-  echo "No sources provided"
-  exit 1
-fi
+  echo "${dirname}"
+}
+
+main() {
+  local package_name="$1"
+  local out="${PWD}/$2"
+  shift 2
 
-cd "${dirname}"
-zip "${OUT}" -r * &> /dev/null
+  local dirname
+  dirname="$(find_dirname "${package_name}" "$@")"
+  cd "${dirname}"
+  zip "${out}" -r * &> /dev/null
+}
+
+if [[ -z "$TEST_SRCDIR" ]]; then
+  main "$@"
+fi
diff --git a/tools/simple_jar_test.sh b/tools/simple_jar_test.sh
new file mode 100755
index 000000000..63f8cc3b7
--- /dev/null
+++ b/tools/simple_jar_test.sh
@@ -0,0 +1,42 @@
+#!/bin/bash
+# Copyright (C) 2019 The Dagger Authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+set -e
+
+fail() {
+  local message="${1:-failed}"
+  echo "${message} at $(caller)" >&2
+  return 1
+}
+
+. "tools/simple_jar.sh"
+
+[[ "$(find_dirname some/package some/package/a/b/c some/package/d/e/f)" \
+    == "some/package" ]] \
+  || fail "without prefix"
+
+[[ "$(find_dirname some/package prefix/some/package/a prefix/some/package/b)" \
+    == "prefix/some/package" ]] \
+  || fail "with prefix"
+
+! find_dirname some/package some/package/a other/package/b >/dev/null \
+  || fail "wrong package"
+
+! find_dirname some/package some/package/a prefix/some/package/b >/dev/null \
+  || fail "different prefixes"
+
+! find_dirname some/package >/dev/null || fail "no sources"
+
+true
