diff --git a/tools/BUILD b/tools/BUILD
index b0b352464..7b3cc6c6f 100644
--- a/tools/BUILD
+++ b/tools/BUILD
@@ -20,14 +20,3 @@ package(default_visibility = ["//:src"])
 exports_files([
     "pom-template.xml",
 ])
-
-sh_library(
-    name = "simple_jar",
-    srcs = ["simple_jar.sh"],
-)
-
-sh_test(
-    name = "simple_jar_test",
-    srcs = ["simple_jar_test.sh"],
-    deps = [":simple_jar"],
-)
diff --git a/tools/simple_jar.bzl b/tools/simple_jar.bzl
index 967640b53..77070ac91 100644
--- a/tools/simple_jar.bzl
+++ b/tools/simple_jar.bzl
@@ -15,17 +15,20 @@
 """Macro for creating a jar from a set of flat files"""
 
 def simple_jar(name, srcs):
-    """Creates a jar out of a set of flat files"""
+    """Creates a jar out of a set of flat files.
 
-    # TODO(dpb): consider creating a Fileset() under the hood to support srcs from different
-    # directories, or continually update the same zip file for each source file
+    Currently, this rule is limited to a single input argument.
+
+    Args:
+      name: The name of the target
+      srcs: Sources to be included in the jar
+    """
+    if len(srcs) > 1:
+        fail("More than one directory is not supported by simple_jar yet", attr = srcs)
     native.genrule(
         name = name,
         srcs = srcs,
         outs = ["%s.jar" % name],
-        cmd = """
-            $(location //tools:simple_jar.sh) \
-              "{package_name}" "$@" $(SRCS)
-              """.format(package_name = native.package_name()),
-        tools = ["//tools:simple_jar.sh"],
+        cmd = "$(location @bazel_tools//tools/zip:zipper) c $(OUTS) $(SRCS)",
+        tools = ["@bazel_tools//tools/zip:zipper"],
     )
diff --git a/tools/simple_jar.sh b/tools/simple_jar.sh
deleted file mode 100755
index 043c825bd..000000000
--- a/tools/simple_jar.sh
+++ /dev/null
@@ -1,56 +0,0 @@
-#!/bin/bash
-# Copyright (C) 2018 The Dagger Authors.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-set -e
-
-find_dirname() {
-  local package_name="$1"
-  shift
-
-  local src src_dirname dirname=""
-  for src in "$@"; do
-    if [[ ! "${src}" =~ ^((.*/)?"${package_name}")/ ]]; then
-      echo "Sources must be in ${package_name}: $0" >&2
-      return 1
-    fi
-    src_dirname="${BASH_REMATCH[1]}"
-    if [[ "${dirname:=${src_dirname}}" != "${src_dirname}" ]]; then
-      echo "Sources must all be in the same directory: $@" >&2
-      return 1
-    fi
-  done
-
-  if [[ -z "${dirname}" ]]; then
-    echo "No sources provided" >&2
-    return 1
-  fi
-
-  echo "${dirname}"
-}
-
-main() {
-  local package_name="$1"
-  local out="${PWD}/$2"
-  shift 2
-
-  local dirname
-  dirname="$(find_dirname "${package_name}" "$@")"
-  cd "${dirname}"
-  zip "${out}" -r * &> /dev/null
-}
-
-if [[ -z "$TEST_SRCDIR" ]]; then
-  main "$@"
-fi
diff --git a/tools/simple_jar_test.sh b/tools/simple_jar_test.sh
deleted file mode 100755
index d03d3d087..000000000
--- a/tools/simple_jar_test.sh
+++ /dev/null
@@ -1,46 +0,0 @@
-#!/bin/bash
-# Copyright (C) 2019 The Dagger Authors.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-set -e
-
-fail() {
-  local message="${1:-failed}"
-  echo "${message} at $(caller)" >&2
-  return 1
-}
-
-. "tools/simple_jar.sh"
-
-[[ "$(find_dirname some/package some/package/a/b/c some/package/d/e/f)" \
-    == "some/package" ]] \
-  || fail "no prefix"
-
-[[ "$(find_dirname some/package prefix/some/package/a prefix/some/package/b)" \
-    == "prefix/some/package" ]] \
-  || fail "with prefix"
-
-! find_dirname some/package some/package/a other/package/b >/dev/null \
-  || fail "expected failure if one file is in the wrong package"
-
-! find_dirname some/package other/package/a other/package/b >/dev/null \
-  || fail "expected failure if all files are in the wrong package"
-
-! find_dirname some/package some/package/a prefix/some/package/b >/dev/null \
-  || fail "expected failure if files have different prefixes"
-
-! find_dirname some/package >/dev/null \
-  || fail "expected failure with no sources"
-
-true
