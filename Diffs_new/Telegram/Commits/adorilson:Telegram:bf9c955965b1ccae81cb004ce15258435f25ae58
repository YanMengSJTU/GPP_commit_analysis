diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index 370175048..a476c34e8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -8,6 +8,9 @@
 
 package org.telegram.messenger;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -53,10 +56,6 @@
 
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Components.ForegroundDetector;
 import org.telegram.ui.Components.NumberPicker;
 import org.telegram.ui.Components.TypefaceSpan;
@@ -698,20 +697,19 @@ public static boolean needShowPasscode(boolean reset) {
 
     public static void shakeView(final View view, final float x, final int num) {
         if (num == 6) {
-            ViewProxy.setTranslationX(view, 0);
+            view.setTranslationX(0);
             view.clearAnimation();
             return;
         }
-        AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-        animatorSetProxy.playTogether(ObjectAnimatorProxy.ofFloat(view, "translationX", AndroidUtilities.dp(x)));
-        animatorSetProxy.setDuration(50);
-        animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        AnimatorSet animatorSet = new AnimatorSet();
+        animatorSet.playTogether(ObjectAnimator.ofFloat(view, "translationX", AndroidUtilities.dp(x)));
+        animatorSet.setDuration(50);
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animation) {
                 shakeView(view, num == 5 ? 0 : -x, num + 1);
             }
         });
-        animatorSetProxy.start();
+        animatorSet.start();
     }
 
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/AnimatorListenerAdapterProxy.java b/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/AnimatorListenerAdapterProxy.java
deleted file mode 100644
index 4a5c55a17..000000000
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/AnimatorListenerAdapterProxy.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 3.x.x.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013-2016.
- */
-
-package org.telegram.messenger.AnimationCompat;
-
-import android.animation.Animator;
-import android.animation.AnimatorListenerAdapter;
-
-import org.telegram.messenger.Animation.Animator10;
-import org.telegram.messenger.Animation.AnimatorListenerAdapter10;
-import org.telegram.messenger.Animation.View10;
-
-public class AnimatorListenerAdapterProxy {
-    protected Object animatorListenerAdapter;
-
-    public AnimatorListenerAdapterProxy() {
-        if (View10.NEED_PROXY) {
-            animatorListenerAdapter = new AnimatorListenerAdapter10() {
-                @Override
-                public void onAnimationCancel(Animator10 animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationCancel(animation);
-                }
-
-                @Override
-                public void onAnimationEnd(Animator10 animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationEnd(animation);
-                }
-
-                @Override
-                public void onAnimationRepeat(Animator10 animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationRepeat(animation);
-                }
-
-                @Override
-                public void onAnimationStart(Animator10 animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationStart(animation);
-                }
-
-                @Override
-                public void onAnimationPause(Animator10 animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationPause(animation);
-                }
-
-                @Override
-                public void onAnimationResume(Animator10 animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationResume(animation);
-                }
-            };
-        } else {
-            animatorListenerAdapter = new AnimatorListenerAdapter() {
-                @Override
-                public void onAnimationCancel(Animator animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationCancel(animation);
-                }
-
-                @Override
-                public void onAnimationEnd(Animator animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationEnd(animation);
-                }
-
-                @Override
-                public void onAnimationRepeat(Animator animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationRepeat(animation);
-                }
-
-                @Override
-                public void onAnimationStart(Animator animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationStart(animation);
-                }
-
-                @Override
-                public void onAnimationPause(Animator animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationPause(animation);
-                }
-
-                @Override
-                public void onAnimationResume(Animator animation) {
-                    AnimatorListenerAdapterProxy.this.onAnimationResume(animation);
-                }
-            };
-        }
-    }
-
-    public void onAnimationCancel(Object animation) {
-
-    }
-
-    public void onAnimationEnd(Object animation) {
-
-    }
-
-    public void onAnimationRepeat(Object animation) {
-
-    }
-
-    public void onAnimationStart(Object animation) {
-
-    }
-
-    public void onAnimationPause(Object animation) {
-
-    }
-
-    public void onAnimationResume(Object animation) {
-
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/AnimatorSetProxy.java b/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/AnimatorSetProxy.java
deleted file mode 100644
index e6cccb0a2..000000000
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/AnimatorSetProxy.java
+++ /dev/null
@@ -1,137 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 3.x.x.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013-2016.
- */
-
-package org.telegram.messenger.AnimationCompat;
-
-import android.animation.Animator;
-import android.animation.AnimatorListenerAdapter;
-import android.animation.AnimatorSet;
-import android.view.animation.Interpolator;
-
-import org.telegram.messenger.Animation.Animator10;
-import org.telegram.messenger.Animation.AnimatorListenerAdapter10;
-import org.telegram.messenger.Animation.AnimatorSet10;
-import org.telegram.messenger.Animation.View10;
-
-import java.lang.reflect.Array;
-import java.util.ArrayList;
-
-public class AnimatorSetProxy {
-
-    private Object animatorSet;
-
-    public static <T, U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType) {
-        return copyOfRange(original, 0, newLength, newType);
-    }
-
-    @SuppressWarnings("unchecked")
-    public static <T, U> T[] copyOfRange(U[] original, int start, int end, Class<? extends T[]> newType) {
-        if (start > end) {
-            throw new IllegalArgumentException();
-        }
-        int originalLength = original.length;
-        if (start < 0 || start > originalLength) {
-            throw new ArrayIndexOutOfBoundsException();
-        }
-        int resultLength = end - start;
-        int copyLength = Math.min(resultLength, originalLength - start);
-        T[] result = (T[]) Array.newInstance(newType.getComponentType(), resultLength);
-        System.arraycopy(original, start, result, 0, copyLength);
-        return result;
-    }
-
-    public AnimatorSetProxy() {
-        if (View10.NEED_PROXY) {
-            animatorSet = new AnimatorSet10();
-        } else {
-            animatorSet = new AnimatorSet();
-        }
-    }
-
-    @SuppressWarnings("unchecked")
-    public void playTogether(Object... items) {
-        if (View10.NEED_PROXY) {
-            Animator10[] animators = copyOf(items, items.length, Animator10[].class);
-            ((AnimatorSet10) animatorSet).playTogether(animators);
-        } else {
-            Animator[] animators = copyOf(items, items.length, Animator[].class);
-            ((AnimatorSet) animatorSet).playTogether(animators);
-        }
-    }
-
-    public void playTogether(ArrayList<Object> items) {
-        if (View10.NEED_PROXY) {
-            ArrayList<Animator10> animators = new ArrayList<>();
-            for (Object obj : items) {
-                animators.add((Animator10)obj);
-            }
-            ((AnimatorSet10) animatorSet).playTogether(animators);
-        } else {
-            ArrayList<Animator> animators = new ArrayList<>();
-            for (Object obj : items) {
-                animators.add((Animator)obj);
-            }
-            ((AnimatorSet) animatorSet).playTogether(animators);
-        }
-    }
-
-    public AnimatorSetProxy setDuration(long duration) {
-        if (View10.NEED_PROXY) {
-            ((AnimatorSet10) animatorSet).setDuration(duration);
-        } else {
-            ((AnimatorSet) animatorSet).setDuration(duration);
-        }
-        return this;
-    }
-
-    public AnimatorSetProxy setStartDelay(long delay) {
-        if (View10.NEED_PROXY) {
-            ((AnimatorSet10) animatorSet).setStartDelay(delay);
-        } else {
-            ((AnimatorSet) animatorSet).setStartDelay(delay);
-        }
-        return this;
-    }
-
-    public void start() {
-        if (View10.NEED_PROXY) {
-            ((AnimatorSet10) animatorSet).start();
-        } else {
-            ((AnimatorSet) animatorSet).start();
-        }
-    }
-
-    public void cancel() {
-        if (View10.NEED_PROXY) {
-            ((AnimatorSet10) animatorSet).cancel();
-        } else {
-            ((AnimatorSet) animatorSet).cancel();
-        }
-    }
-
-    public void addListener(AnimatorListenerAdapterProxy listener) {
-        if (View10.NEED_PROXY) {
-            ((AnimatorSet10) animatorSet).addListener((AnimatorListenerAdapter10) listener.animatorListenerAdapter);
-        } else {
-            ((AnimatorSet) animatorSet).addListener((AnimatorListenerAdapter) listener.animatorListenerAdapter);
-        }
-    }
-
-    public void setInterpolator(Interpolator interpolator) {
-        if (View10.NEED_PROXY) {
-            ((AnimatorSet10) animatorSet).setInterpolator(interpolator);
-        } else {
-            ((AnimatorSet) animatorSet).setInterpolator(interpolator);
-        }
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        return animatorSet == o;
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/ObjectAnimatorProxy.java b/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/ObjectAnimatorProxy.java
deleted file mode 100644
index 8bf69db6a..000000000
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/ObjectAnimatorProxy.java
+++ /dev/null
@@ -1,130 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 3.x.x.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013-2016.
- */
-
-package org.telegram.messenger.AnimationCompat;
-
-import android.animation.AnimatorListenerAdapter;
-import android.animation.ObjectAnimator;
-import android.view.animation.Interpolator;
-
-import org.telegram.messenger.Animation.AnimatorListenerAdapter10;
-import org.telegram.messenger.Animation.ObjectAnimator10;
-import org.telegram.messenger.Animation.View10;
-
-public class ObjectAnimatorProxy {
-
-    private Object objectAnimator;
-
-    public ObjectAnimatorProxy(Object animator) {
-        objectAnimator = animator;
-    }
-
-    public static Object ofFloat(Object target, String propertyName, float... values) {
-        if (View10.NEED_PROXY) {
-            return ObjectAnimator10.ofFloat(target, propertyName, values);
-        } else {
-            return ObjectAnimator.ofFloat(target, propertyName, values);
-        }
-    }
-
-    public static Object ofInt(Object target, String propertyName, int... values) {
-        if (View10.NEED_PROXY) {
-            return ObjectAnimator10.ofInt(target, propertyName, values);
-        } else {
-            return ObjectAnimator.ofInt(target, propertyName, values);
-        }
-    }
-
-    public static ObjectAnimatorProxy ofFloatProxy(Object target, String propertyName, float... values) {
-        if (View10.NEED_PROXY) {
-            return new ObjectAnimatorProxy(ObjectAnimator10.ofFloat(target, propertyName, values));
-        } else {
-            return new ObjectAnimatorProxy(ObjectAnimator.ofFloat(target, propertyName, values));
-        }
-    }
-
-    public static ObjectAnimatorProxy ofIntProxy(Object target, String propertyName, int... values) {
-        if (View10.NEED_PROXY) {
-            return new ObjectAnimatorProxy(ObjectAnimator10.ofInt(target, propertyName, values));
-        } else {
-            return new ObjectAnimatorProxy(ObjectAnimator.ofInt(target, propertyName, values));
-        }
-    }
-
-    public ObjectAnimatorProxy setDuration(long duration) {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).setDuration(duration);
-        } else {
-            ((ObjectAnimator) objectAnimator).setDuration(duration);
-        }
-        return this;
-    }
-
-    public void setInterpolator(Interpolator value) {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).setInterpolator(value);
-        } else {
-            ((ObjectAnimator) objectAnimator).setInterpolator(value);
-        }
-    }
-
-    public ObjectAnimatorProxy start() {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).start();
-        } else {
-            ((ObjectAnimator) objectAnimator).start();
-        }
-        return this;
-    }
-
-    public void setAutoCancel(boolean cancel) {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).setAutoCancel(cancel);
-        } else {
-            ((ObjectAnimator) objectAnimator).setAutoCancel(cancel);
-        }
-    }
-
-    public boolean isRunning() {
-        if (View10.NEED_PROXY) {
-            return ((ObjectAnimator10) objectAnimator).isRunning();
-        } else {
-            return ((ObjectAnimator) objectAnimator).isRunning();
-        }
-    }
-
-    public void end() {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).end();
-        } else {
-            ((ObjectAnimator) objectAnimator).end();
-        }
-    }
-
-    public void cancel() {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).cancel();
-        } else {
-            ((ObjectAnimator) objectAnimator).cancel();
-        }
-    }
-
-    public ObjectAnimatorProxy addListener(AnimatorListenerAdapterProxy listener) {
-        if (View10.NEED_PROXY) {
-            ((ObjectAnimator10) objectAnimator).addListener((AnimatorListenerAdapter10) listener.animatorListenerAdapter);
-        } else {
-            ((ObjectAnimator) objectAnimator).addListener((AnimatorListenerAdapter) listener.animatorListenerAdapter);
-        }
-        return this;
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        return objectAnimator == o;
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/ViewProxy.java b/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/ViewProxy.java
deleted file mode 100644
index 50a2690fa..000000000
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AnimationCompat/ViewProxy.java
+++ /dev/null
@@ -1,248 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 3.x.x.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013-2016.
- */
-
-package org.telegram.messenger.AnimationCompat;
-
-import android.view.View;
-
-import org.telegram.messenger.Animation.View10;
-
-public class ViewProxy {
-
-    public static float getAlpha(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getAlpha();
-        } else {
-            return view.getAlpha();
-        }
-    }
-
-    public static void setAlpha(View view, float alpha) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setAlpha(alpha);
-        } else {
-            view.setAlpha(alpha);
-        }
-    }
-
-    public static float getPivotX(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getPivotX();
-        } else {
-            return view.getPivotX();
-        }
-    }
-
-    public static void setPivotX(View view, float pivotX) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setPivotX(pivotX);
-        } else {
-            view.setPivotX(pivotX);
-        }
-    }
-
-    public static float getPivotY(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getPivotY();
-        } else {
-            return view.getPivotY();
-        }
-    }
-
-    public static void setPivotY(View view, float pivotY) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setPivotY(pivotY);
-        } else {
-            view.setPivotY(pivotY);
-        }
-    }
-
-    public static float getRotation(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getRotation();
-        } else {
-            return view.getRotation();
-        }
-    }
-
-    public static void setRotation(View view, float rotation) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setRotation(rotation);
-        } else {
-            view.setRotation(rotation);
-        }
-    }
-
-    public static float getRotationX(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getRotationX();
-        } else {
-            return view.getRotationX();
-        }
-    }
-
-    public void setRotationX(View view, float rotationX) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setRotationX(rotationX);
-        } else {
-            view.setRotationX(rotationX);
-        }
-    }
-
-    public static float getRotationY(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getRotationY();
-        } else {
-            return view.getRotationY();
-        }
-    }
-
-    public void setRotationY(View view, float rotationY) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setRotationY(rotationY);
-        } else {
-            view.setRotationY(rotationY);
-        }
-    }
-
-    public static float getScaleX(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getScaleX();
-        } else {
-            return view.getScaleX();
-        }
-    }
-
-    public static void setScaleX(View view, float scaleX) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setScaleX(scaleX);
-        } else {
-            view.setScaleX(scaleX);
-        }
-    }
-
-    public static float getScaleY(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getScaleY();
-        } else {
-            return view.getScaleY();
-        }
-    }
-
-    public static void setScaleY(View view, float scaleY) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setScaleY(scaleY);
-        } else {
-            view.setScaleY(scaleY);
-        }
-    }
-
-    public static int getScrollX(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getScrollX();
-        } else {
-            return view.getScrollX();
-        }
-    }
-
-    public static void setScrollX(View view, int value) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setScrollX(value);
-        } else {
-            view.setScrollX(value);
-        }
-    }
-
-    public static int getScrollY(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getScrollY();
-        } else {
-            return view.getScrollY();
-        }
-    }
-
-    public static void setScrollY(View view, int value) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setScrollY(value);
-        } else {
-            view.setScrollY(value);
-        }
-    }
-
-    public static float getTranslationX(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getTranslationX();
-        } else {
-            return view.getTranslationX();
-        }
-    }
-
-    public static void setTranslationX(View view, float translationX) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setTranslationX(translationX);
-        } else {
-            view.setTranslationX(translationX);
-        }
-    }
-
-    public static float getTranslationY(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getTranslationY();
-        } else {
-            return view.getTranslationY();
-        }
-    }
-
-    public static void setTranslationY(View view, float translationY) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setTranslationY(translationY);
-        } else {
-            view.setTranslationY(translationY);
-        }
-    }
-
-    public static float getX(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getX();
-        } else {
-            return view.getX();
-        }
-    }
-
-    public static void setX(View view, float x) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setX(x);
-        } else {
-            view.setX(x);
-        }
-    }
-
-    public static float getY(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view).getY();
-        } else {
-            return view.getY();
-        }
-    }
-
-    public static void setY(View view, float y) {
-        if (View10.NEED_PROXY) {
-            View10.wrap(view).setY(y);
-        } else {
-            view.setY(y);
-        }
-    }
-
-    public static Object wrap(View view) {
-        if (View10.NEED_PROXY) {
-            return View10.wrap(view);
-        } else {
-            return view;
-        }
-    }
-}
