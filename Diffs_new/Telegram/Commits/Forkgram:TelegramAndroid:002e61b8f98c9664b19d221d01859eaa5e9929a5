diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java
index c3e86868a..61df0f6bf 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java
@@ -79,6 +79,7 @@
     public static int fontSize = AndroidUtilities.dp(16);
 
     public static boolean hideTitleDialog = false;
+    public static boolean hasSticker;
 
     static {
         loadConfig();
@@ -227,6 +228,7 @@ public static void loadConfig() {
             sortContactsByName = preferences.getBoolean("sortContactsByName", false);
 
             hideTitleDialog = preferences.getBoolean("hideTitle", false);
+            hasSticker = preferences.getBoolean("photoHasSticker", true);
 
             configLoaded = true;
         }
@@ -485,6 +487,14 @@ public static void toggleGroupPhotosEnabled() {
         editor.commit();
     }
 
+    public static void toggleHasSticker() {
+        hasSticker = !hasSticker;
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putBoolean("photoHasSticker", hasSticker);
+        editor.commit();
+    }
+
     public static void loadProxyList() {
         if (proxyListLoaded) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
index 49dc9afd0..29cb76ea4 100644
--- a/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
@@ -19862,6 +19862,7 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 
 		public void serializeToStream(AbstractSerializedData stream) {
 			stream.writeInt32(constructor);
+            if (!org.telegram.messenger.SharedConfig.hasSticker) has_stickers = false;
 			flags = has_stickers ? (flags | 1) : (flags &~ 1);
 			stream.writeInt32(flags);
 			stream.writeInt64(id);
@@ -19988,6 +19989,7 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 
 		public void serializeToStream(AbstractSerializedData stream) {
 			stream.writeInt32(constructor);
+            if (!org.telegram.messenger.SharedConfig.hasSticker) has_stickers = false;
 			flags = has_stickers ? (flags | 1) : (flags &~ 1);
 			stream.writeInt32(flags);
 			stream.writeInt64(id);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index 76033e9fd..fdd35837e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -50,6 +50,7 @@
 
     private int squareAvatarsRow;
     private int inappCameraRow;
+    private int photoHasStickerRow;
 
     private int pinOrderRow;
 
@@ -62,6 +63,8 @@ public boolean onFragmentCreate() {
         sectionRow1 = rowCount++;
         squareAvatarsRow = rowCount++;
         inappCameraRow = rowCount++;
+        photoHasStickerRow = rowCount++;
+
         pinOrderRow = rowCount++;
 
         return true;
@@ -118,6 +121,11 @@ public boolean supportsPredictiveItemAnimations() {
                 if (view instanceof TextCheckCell) {
                     ((TextCheckCell) view).setChecked(SharedConfig.inappCamera);
                 }
+            } else if (position == photoHasStickerRow) {
+                SharedConfig.toggleHasSticker();
+                if (view instanceof TextCheckCell) {
+                    ((TextCheckCell) view).setChecked(SharedConfig.hasSticker);
+                }
             } else if (position == pinOrderRow) {
                 presentFragment(new PinsOrderActivity());
             }
@@ -168,6 +176,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         String t = LocaleController.getString("InAppCamera", R.string.InAppCamera);
                         String info = LocaleController.getString("InAppCameraInfo", R.string.InAppCameraInfo);
                         textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("inappCamera", true), false, false);
+                    } else if (position == photoHasStickerRow) {
+                        String t = LocaleController.getString("PhotoHasSticker", R.string.PhotoHasSticker);
+                        String info = LocaleController.getString("PhotoHasStickerInfo", R.string.PhotoHasStickerInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("photoHasSticker", false), true, false);
                     }
                     break;
                 }
@@ -185,7 +197,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         public boolean isEnabled(RecyclerView.ViewHolder holder) {
             int position = holder.getAdapterPosition();
             boolean fork = position == squareAvatarsRow
-                        || position == inappCameraRow;
+                        || position == inappCameraRow
+                        || position == photoHasStickerRow
                         || position == pinOrderRow;
             return fork;
         }
@@ -230,6 +243,7 @@ public int getItemViewType(int position) {
                 return 2;
             } else if (position == squareAvatarsRow 
                 || position == inappCameraRow 
+                || position == photoHasStickerRow 
                 || position == pinOrderRow) {
                 return 3;
             } else if (position == sectionRow1) {
