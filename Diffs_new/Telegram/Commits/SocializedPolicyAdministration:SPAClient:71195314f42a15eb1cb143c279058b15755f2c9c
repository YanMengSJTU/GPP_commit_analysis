diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java
index 1733835ff..f4fe5b6ca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java
@@ -196,7 +196,10 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                 final int selectedItem = i;
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-                CharSequence[] items = new CharSequence[]{"UnProfessional user", "Professional user", LocaleController.getString("Deselect", R.string.Deselect)};
+                CharSequence[] items = new CharSequence[]{"UnProfessional user"
+                        , "Professional user"
+                        , "No weight"
+                        , LocaleController.getString("Deselect", R.string.Deselect)};
                 builder.setItems(items, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialogInterface, int i) {
@@ -205,6 +208,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         } else if (i == 1) {
                             usersId.get(selectedItem).weight = 2;
                         } else if (i == 2) {
+                            usersId.get(selectedItem).weight = 0;
+                        } else if (i == 3) {
                             usersId.remove(selectedItem);
                             listViewAdapter.notifyDataSetChanged();
                         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SPARequest.java b/TMessagesProj/src/main/java/org/telegram/ui/SPARequest.java
index 4ae37d53a..6db752de1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SPARequest.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SPARequest.java
@@ -179,6 +179,9 @@ public void onClick(DialogInterface dialog, int which) {
                             new BigInteger(paillier_g));
                     final String req;
 
+
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(SPAConfig.SPA_PREFERENCE, Activity.MODE_PRIVATE);
+                    boolean passcode_setting = preferences.getBoolean("average_policy", false);
                     for (int j = 0; j < settingSize; ++j) {
                         String setting = settings[j];
                         if (setting.compareTo("last_seen_setting") == 0) {
@@ -210,8 +213,13 @@ public void onClick(DialogInterface dialog, int which) {
                             }
                         } else if (setting.compareTo("average") == 0) {
                             int weightInt = Integer.parseInt(weight);
-                            values[j] = paillier.encrypt(new BigInteger("" + settingsValues[j] * weightInt)).toString()
-                                    + " " + weight;
+                            if (passcode_setting) {
+                                values[j] = paillier.encrypt(new BigInteger("" + settingsValues[j])).toString()
+                                        + " " + 1;
+                            } else {
+                                values[j] = paillier.encrypt(new BigInteger("" + settingsValues[j] * weightInt)).toString()
+                                        + " " + weight;
+                            }
                         } else if (setting.compareTo("maximum_minimum_policy") == 0) {
                             values[j] = paillier.encrypt(new BigInteger("" + settingsValues[j])).toString();
                         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java
index 5c3c7d9de..ca3bc8912 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java
@@ -26,6 +26,7 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.HeaderCell;
+import org.telegram.ui.Cells.TextCheckCell;
 import org.telegram.ui.Cells.TextInfoPrivacyCell;
 import org.telegram.ui.Cells.TextSettingsCell;
 import org.telegram.ui.Components.LayoutHelper;
@@ -48,6 +49,9 @@
     private int spaResultRow;
     private int spaResultRow2;
     private int spaResultDetailRow;
+    private int spaCloseAverageComposite;
+    private int spaCloseAverageComposite2;
+    private int spaCloseAverageCompositeDetailRow;
     private int rowCount;
 
     @Override
@@ -69,6 +73,10 @@ public boolean onFragmentCreate() {
         spaResultRow = rowCount++;
         spaResultRow2 = rowCount++;
         spaResultDetailRow = rowCount++;
+        spaCloseAverageComposite = rowCount++;
+        spaCloseAverageComposite2 = rowCount++;
+        spaCloseAverageCompositeDetailRow = rowCount++;
+
 
 
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.spaSettings);
@@ -163,6 +171,16 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                     presentFragment(new SPAReceivedSPARequest());
                 } else if (i == spaResultRow2) {
                     Log.v("SPA", "spa result");
+                } else if (i == spaCloseAverageComposite2) {
+                    Log.v("SPA", "spa disable average policy");
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(SPAConfig.SPA_PREFERENCE, Activity.MODE_PRIVATE);
+                    boolean passcode_setting = preferences.getBoolean("disable_average_policy", false);
+                    SharedPreferences.Editor editor = preferences.edit();
+                    editor.putBoolean("disable_average_policy", !passcode_setting);
+                    editor.commit();
+                    if (view instanceof TextCheckCell) {
+                        ((TextCheckCell) view).setChecked(!passcode_setting);
+                    }
                 }
             }
         });
@@ -201,7 +219,10 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return i == spaRequstRow || i == selectPrivacyItemsRow || i == friendsListRow || i == spaRequstDetailRow || i == receivedSpaRequstRow || i == spaResultRow || i == spaResultRow2 || i == spaResultDetailRow;
+            return i == spaRequstRow || i == selectPrivacyItemsRow || i == friendsListRow
+                    || i == spaRequstDetailRow || i == receivedSpaRequstRow || i == spaResultRow
+                    || i == spaResultRow2 || i == spaResultDetailRow || i == spaCloseAverageComposite
+                    || i == spaCloseAverageCompositeDetailRow || i == spaCloseAverageComposite2;
         }
 
         @Override
@@ -241,6 +262,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     textCell.setText(LocaleController.getString("SPAReceivedRequest", R.string.SPAReceivedRequest), true);
                 } else if (i == spaResultRow2) {
                     textCell.setText(LocaleController.getString("SPAResult", R.string.SPAResult), true);
+                } else if (i == spaCloseAverageComposite2) {
+                    view = new TextCheckCell(mContext);
+                    view.setBackgroundColor(0xffffffff);
+                    TextCheckCell textCell2 = (TextCheckCell) view;
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("spaconfig", Activity.MODE_PRIVATE);
+                    textCell2.setTextAndCheck("Disable Average Policy", preferences.getBoolean("disable_average_policy", false), false);
+                    return textCell2;
                 }
             } else if (type == 1) {
                 if (view == null) {
@@ -252,6 +280,8 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 } else if (i == spaResultDetailRow) {
                     ((TextInfoPrivacyCell) view).setText(LocaleController.getString("SPASendingHelp", R.string.SPASendingHelp));
                     view.setBackgroundResource(R.drawable.greydivider_bottom);
+                } else if (i == spaCloseAverageCompositeDetailRow) {
+                    ((TextInfoPrivacyCell) view).setText(LocaleController.getString("SPADisableCompositeHelp", R.string.SPACloseHelp));
                 }
             } else if (type == 2) {
                 if (view == null) {
@@ -262,6 +292,8 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     ((HeaderCell) view).setText(LocaleController.getString("SPARequestTitle", R.string.SPARequestTitle));
                 } else if (i == spaResultRow) {
                     ((HeaderCell) view).setText(LocaleController.getString("SPAResultTitle", R.string.SPAResultTitle));
+                } else if (i == spaCloseAverageComposite) {
+                    ((HeaderCell) view).setText(LocaleController.getString("SPACloseTitle", R.string.SPACloseTitle));
                 }
             }
             return view;
@@ -269,11 +301,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
         @Override
         public int getItemViewType(int position) {
-            if (position == selectPrivacyItemsRow || position == friendsListRow || position == receivedSpaRequstRow || position == spaResultRow2) {
+            if (position == selectPrivacyItemsRow || position == friendsListRow
+                    || position == receivedSpaRequstRow || position == spaResultRow2
+                    || position == spaCloseAverageComposite2) {
                 return 0;
-            } else if (position == spaRequstDetailRow || position == spaResultDetailRow) {
+            } else if (position == spaRequstDetailRow || position == spaResultDetailRow || position == spaCloseAverageCompositeDetailRow) {
                 return 1;
-            } else if (position == spaRequstRow || position == spaResultRow)  {
+            } else if (position == spaRequstRow || position == spaResultRow || position == spaCloseAverageComposite)  {
                 return 2;
             }
             return 0;
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index a39cf4dda..67fbbfde7 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -472,6 +472,8 @@
     <string name="SPAResultHelp">Show the state of SPA process. When receive SPA result, you can apply the result manually or allow SPA apply the result automatically.</string>
     <string name="SPARequestTitle">SPA Request</string>
     <string name="SPAResultTitle">SPA Result</string>
+    <string name="SPACloseTitle">Disable Composite SPA</string>
+    <string name="SPACloseHelp">Disable Composite SPA when friends send an Average policy</string>
     <string name="SPASelectItems">Select SPA Items</string>
     <string name="SPAFriendsList">Friends List</string>
     <string name="SPAReceivedRequest">Received SPA Requests</string>
