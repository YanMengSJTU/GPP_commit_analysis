diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 259adc656..c9b8969e1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -7847,11 +7847,13 @@ public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskI
                     newTaskId = taskId;
                 }
 
-                getConnectionsManager().sendRequest(req, (response, error) -> {
-                    if (newTaskId != 0) {
-                        getMessagesStorage().removePendingTask(newTaskId);
-                    }
-                });
+                if (mainPreferences.getBoolean("syncPins", true)) {
+                    getConnectionsManager().sendRequest(req, (response, error) -> {
+                        if (newTaskId != 0) {
+                            getMessagesStorage().removePendingTask(newTaskId);
+                        }
+                    });
+                }
             }
         }
         getMessagesStorage().setDialogPinned(did, dialog.pinnedNum);
@@ -7859,6 +7861,9 @@ public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskI
     }
 
     public void loadPinnedDialogs(final int folderId, final long newDialogId, final ArrayList<Long> order) {
+        if (!mainPreferences.getBoolean("syncPins", true)) {
+            return;
+        }
         if (loadingPinnedDialogs.indexOfKey(folderId) >= 0 || getUserConfig().isPinnedDialogsLoaded(folderId)) {
             return;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 3b32fa590..6a44a523b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -2192,8 +2192,12 @@ private void perfromSelectedDialogsAction(int action, boolean alert) {
                     newPinnedCount++;
                 }
             }
+
+            SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+            boolean syncPins = preferences.getBoolean("syncPins", true);
+
             int maxPinnedCount;
-            if (folderId != 0) {
+            if (folderId != 0 || !syncPins) {
                 maxPinnedCount = getMessagesController().maxFolderPinnedDialogsCount;
             } else {
                 maxPinnedCount = getMessagesController().maxPinnedDialogsCount;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index c589e107a..6d92fe366 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -48,6 +48,7 @@
     private int rearVideoMessages;
 
     private int emptyRow;
+    private int syncPinsRow;
 
     @Override
     public boolean onFragmentCreate() {
@@ -68,6 +69,18 @@ public boolean onFragmentCreate() {
         return true;
     }
 
+    public boolean toggleGlobalMainSetting(String option, View view, boolean byDefault) {
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        boolean optionBool = preferences.getBoolean(option, byDefault);
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putBoolean(option, !optionBool);
+        editor.commit();
+        if (view instanceof TextCheckCell) {
+            ((TextCheckCell) view).setChecked(!optionBool);
+        }
+        return !optionBool;
+    }
+
     @Override
     public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -129,6 +142,8 @@ public boolean supportsPredictiveItemAnimations() {
                 MessagesController.getInstance(currentAccount).sortDialogs(null);
             } else if (position == rearVideoMessages) {
                 toggleGlobalMainSetting("rearVideoMessages", view, false);
+            } else if (position == syncPinsRow) {
+                toggleGlobalMainSetting("syncPins", view, true);
             }
         });
 
@@ -185,6 +200,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     } else if (position == rearVideoMessages) {
                         String t = LocaleController.getString("RearVideoMessages", R.string.RearVideoMessages);
                         textCell.setTextAndCheck(t, preferences.getBoolean("rearVideoMessages", false), false);
+                    } else if (position == syncPinsRow) {
+                        String t = LocaleController.getString("SyncPins", R.string.SyncPins);
+                        String info = LocaleController.getString("SyncPinsInfo", R.string.SyncPinsInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("syncPins", true), true, false);
                     }
                     break;
                 }
@@ -205,6 +224,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                         || position == inappCameraRow
                         || position == unmutedOnTopRow
                         || position == rearVideoMessages
+                        || position == syncPinsRow
                         || position == photoHasStickerRow;
             return fork;
         }
@@ -250,6 +270,7 @@ public int getItemViewType(int position) {
             } else if (position == squareAvatarsRow
                 || position == inappCameraRow
                 || position == unmutedOnTopRow
+                || position == syncPinsRow
                 || position == rearVideoMessages
                 || position == photoHasStickerRow) {
                 return 3;
