diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
index 49e884ac1..599b55fc7 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
@@ -21,6 +21,7 @@
 import org.pollgram.decision.service.PollgramFactory;
 import org.pollgram.decision.ui.OptionDetailFragment;
 import org.pollgram.decision.ui.StackedBar;
+import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.BaseFragment;
 
 import java.util.ArrayList;
@@ -41,7 +42,6 @@
     private static final int LAYOUT_RES_ID = R.layout.item_vote_list;
     private final LayoutInflater inflater;
     private final BaseFragment baseFragment;
-    private final int[] participantsUserIds;
     private boolean editable;
     private List<Vote> votes;
     private List<Boolean> originalVotes;
@@ -56,10 +56,9 @@
         void voteChanges(boolean areThereChangesToSave);
     }
 
-    public VoteListAdapter(BaseFragment baseFragment, int[] participantsUserIds,  boolean editable) {
+    public VoteListAdapter(BaseFragment baseFragment, boolean editable) {
         super(baseFragment.getParentActivity(), LAYOUT_RES_ID);
         this.baseFragment = baseFragment;
-        this.participantsUserIds = participantsUserIds;
         inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         this.editable = editable;
         this.firstVotePerformed = false;
@@ -179,6 +178,12 @@ public void onClick(View v) {
         View.OnClickListener openOptionDetailOnClickLister = new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+                int[] participantsUserIds = new int[usersDecisionVotes.getUsers().size()];
+                int i =0;
+                for (TLRPC.User u : usersDecisionVotes.getUsers()){
+                    participantsUserIds[i] = u.id;
+                    i++;
+                }
                 Bundle bundle = new Bundle();
                 bundle.putLong(OptionDetailFragment.PAR_OPTION_ID, o.getId());
                 bundle.putLong(OptionDetailFragment.PAR_DECISION_ID, o.getDecisionId());
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
index d3c300202..5e95d4ff9 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
@@ -1,6 +1,7 @@
 package org.pollgram.decision.service;
 
 import android.os.Bundle;
+import android.support.annotation.Nullable;
 import android.text.style.ClickableSpan;
 
 import org.pollgram.decision.data.Decision;
@@ -84,7 +85,11 @@
 
     List<TLRPC.User> getUsers(int[] usersIds);
 
-    TLRPC.User getUser(int userid);
+    /**
+     * @param userid
+     * @return a user with the givne user id, or null if the user does not exist or is a bot
+     */
+    @Nullable TLRPC.User getUser(int userid);
 
     /**
      *
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index d0e7a46c8..02e576a3c 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -1,6 +1,7 @@
 package org.pollgram.decision.service;
 
 import android.os.Bundle;
+import android.support.annotation.Nullable;
 import android.text.style.ClickableSpan;
 import android.util.Log;
 import android.widget.Toast;
@@ -324,8 +325,17 @@ protected void sendMessage(long groupChatId, String message) {
     }
 
     @Override
-    public TLRPC.User getUser(int userid) {
-        return MessagesController.getInstance().getUser(userid);
+    public @Nullable TLRPC.User getUser(int userId) {
+        TLRPC.User user = MessagesController.getInstance().getUser(userId);
+        if (user == null){
+            Log.i(LOG_TAG, "Userid [" + userId + "] not found");
+            return null;
+        }
+        if (user.status == null) {// suppose this is a bot
+            Log.i(LOG_TAG, "User [" + user + "] is a BOT, it will be skipped");
+            return null;
+        }
+        return user;
     }
 
     @Override
@@ -333,11 +343,8 @@ protected void sendMessage(long groupChatId, String message) {
         List<TLRPC.User> users = new ArrayList<>();
         for (int i = 0; i < usersIds.length; i++) {
             TLRPC.User user = getUser(usersIds[i]);
-            if (user.status == null) {// suppose this is a bot
-                Log.i(LOG_TAG, "User [" + user + "] is a BOT, it will be skipped");
-                continue;
-            }
-            users.add(user);
+            if (user != null)
+                users.add(user);
         }
         return users;
     }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
index f1e0994aa..1d759ce58 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
@@ -43,7 +43,6 @@ public boolean onFragmentCreate() {
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
         decision = pollgramDAO.getDecision(decisionId);
 
-
         return true;
     }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index fdb9535ab..29d8afe93 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -22,6 +22,7 @@
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
+import org.pollgram.decision.service.PollgramService;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -48,17 +49,20 @@
     private static final int ID_PURGE_ALL_DATA = nextId++;
     private static final int ID_PUT_STUB_DATA_DATA = nextId++;
 
+    private Context context;
     private TLRPC.ChatFull chatInfo;
     private TLRPC.Chat currentChat;
-    private ListView decisionsListView;
-    private Context context;
 
-    private boolean hideCloseDecision;
     private PollgramDAO pollgramDAO;
+    private PollgramService pollgramService;
+
+    private ListView decisionsListView;
+    private boolean hideCloseDecision;
     private int[] participantsUserIds;
     private TextView tvSubtitle;
     private TextView tvNodecisionPresent;
 
+
     public DecisionsListFragment(){
     }
 
@@ -191,7 +195,7 @@ private void updateResult() {
         }
 
         tvSubtitle.setText(context.getString(R.string.decisionsCount, openCount, allDecisions.size() - openCount));
-        decisionsListView.setAdapter(new DecisionAdapter(context, filterDecision, currentChat.participants_count));
+        decisionsListView.setAdapter(new DecisionAdapter(context, filterDecision, participantsUserIds.length));
         if (filterDecision.size() == 0){
             decisionsListView.setVisibility(View.GONE);
             tvNodecisionPresent.setVisibility(View.VISIBLE);
@@ -204,10 +208,16 @@ private void updateResult() {
 
     public void setChatInfo(TLRPC.ChatFull chatInfo) {
         this.chatInfo = chatInfo;
-        participantsUserIds = new int[chatInfo.participants.participants.size()];
+        List<Integer> ids = new ArrayList<>(chatInfo.participants.participants.size());
         for (int i = 0; i < chatInfo.participants.participants.size() ; i++){
-            participantsUserIds[i] = chatInfo.participants.participants.get(i).user_id;
+            TLRPC.User user = PollgramFactory.getPollgramService().getUser(chatInfo.participants.participants.get(i).user_id);
+            if (user != null)
+                ids.add(user.id);
         }
+        participantsUserIds = new int[ids.size()];
+        for (int i=0;i<ids.size();i++)
+            participantsUserIds[i] = ids.get(i);
+
         this.currentChat = MessagesController.getInstance().getChat(chatInfo.id);
     }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java
index fcd2906ce..8e836496b 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java
@@ -49,9 +49,9 @@ public boolean onFragmentCreate() {
         int[] members = getArguments().getIntArray(PAR_PARTICIPANT_IDS);
 
         UsersDecisionVotes usersDecisionVotes = PollgramFactory.getPollgramService().getUsersDecisionVotes(decisionId, members);
-        option = (TextOption) usersDecisionVotes.getOption(optionId);
 
-        membersCount = members.length;
+        option = (TextOption) usersDecisionVotes.getOption(optionId);
+        membersCount = usersDecisionVotes.getUsers().size();
         negativeVoteCount = getArguments().getInt(PAR_NEGATIVE_VOTE_COUNT);
         positiveVoteCount = getArguments().getInt(PAR_POSITIVE_VOTE_COUNT);
         voteCount = negativeVoteCount + positiveVoteCount;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
index 15a4eb6e5..2bbfec359 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
@@ -17,6 +17,7 @@
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
 import org.pollgram.decision.service.PollgramService;
+import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -24,6 +25,7 @@
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
 
 import java.text.DateFormat;
+import java.util.List;
 
 /**
  * Created by davide on 04/10/15.
@@ -44,7 +46,7 @@
     public static final String PAR_PARTICIPANT_IDS  = "PAR_PARTICIPANT_IDS" ;
     public static final String PAR_GROUP_CHAT_ID = "PAR_GROUP_CHAT_ID" ;
 
-    private int[] participantsUserIds;
+    private List<TLRPC.User> members;
     private PollgramDAO pollgramDAO;
     private PollgramService pollgramService;
     private Decision decision;
@@ -72,7 +74,7 @@ public boolean onFragmentCreate() {
         pollgramDAO = PollgramFactory.getPollgramDAO();
         pollgramService = PollgramFactory.getPollgramService();
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
-        participantsUserIds = getArguments().getIntArray(PAR_PARTICIPANT_IDS);
+        members = pollgramService.getUsers(getArguments().getIntArray(PAR_PARTICIPANT_IDS));
         decision = pollgramDAO.getDecision(decisionId);
         return super.onFragmentCreate();
     }
@@ -123,7 +125,7 @@ public void onClick(DialogInterface dialog, int which) {
                     return;
                 } else if (id == ID_CLOSE_DECISION) {
                     int voteCount = pollgramDAO.getUserVoteCount(decision);
-                    int membersCount = participantsUserIds.length;
+                    int membersCount = members.size();
                     if (voteCount == membersCount) {
                         // all users voted al least one option for the current decision
                         closeDecision();
@@ -230,7 +232,7 @@ private void updateView(){
         tvDecisionStatus.setBackgroundColor(decision.isOpen() ? Color.GREEN : Color.RED);
 
         tvUserVoteCount.setText(ctx.getString(R.string.howManyMemberVote,
-                userThatVoteSoFar, participantsUserIds.length));
+                userThatVoteSoFar, members.size()));
         if (votesManagerTabsFragment != null)
             votesManagerTabsFragment.updateView();
     }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index 543eee038..f8cecbfd6 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -208,8 +208,7 @@ private View getOptionsListView(ViewGroup container, LayoutInflater inflater) {
         View rootView;
         rootView = inflater.inflate(R.layout.votes_manager_list_tab, container, false);
         ListView listView = (ListView) rootView.findViewById(R.id.decision_option_lw_options);
-        voteListAdapter = new VoteListAdapter(parentFragment, participantsUserIds,
-                usersDecisionVotes.getDecision().isOpen());
+        voteListAdapter = new VoteListAdapter(parentFragment, usersDecisionVotes.getDecision().isOpen());
         voteListAdapter.setData(usersDecisionVotes, currentUserId);
         listView.setAdapter(voteListAdapter);
         final Button btnSaveOption = (Button) rootView.findViewById(R.id.decision_option_btn_save_votes);
