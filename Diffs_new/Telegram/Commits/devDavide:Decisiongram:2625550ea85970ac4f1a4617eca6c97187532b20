diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
index cbb79b8cc..c298ba186 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
@@ -34,7 +34,7 @@
     private static final String GOOGLE_PLAY_POOLGRAM_URL = "https://play.google.com/store/apps/details?id=org.pollgram";
 
     private static final String POLLGRAM_MESSAGE_PREFIX = "#Pollgram ";
-    private static final char QUOTE_CHAR = '\'';
+    protected static final char QUOTE_CHAR = '\'';
     private static final char NEW_LINE = '\n';
 
     private static final String WINKING_FACE_EMOJI = PollgramUtils.getEmojiAsString((byte) 0xF0, (byte) 0x9F, (byte) 0x98, (byte)0x89);// winking face
@@ -116,7 +116,12 @@ public String buildCloseDecision(Decision decision, Option winningOption, int vo
         body.append(' ');
         body.append(format(decision));
         body.append(context.getString(R.string.tmsg_CloseDecisionP2));
-        body.append(format(winningOption));
+        body.append(' ');
+        if (voteCount == 0)
+            body.append(format(context.getString(R.string.tmsg_CloseDecisionNoOptionDesc)));
+        else
+            body.append(format(winningOption));
+        body.append(' ');
         body.append(context.getString(R.string.tmsg_CloseDecisionP3));
         body.append(' ');
         body.append(voteCount);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
index bfea369cb..c7264072b 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
@@ -51,8 +51,11 @@
      * @param messageObject
      * @param url
      * @return a Bundle for invoking VoteMangerFragment, based on pollgram message
+     * @throws PollgramDAOException in case of not found decision. The message can be showed to
+     * the user by using for example a toast
      */
-    Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messageObject,final ClickableSpan url);
+    Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messageObject,
+                                            final ClickableSpan url) throws PollgramDAOException;
 
     /**
      * @param user
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index 66341fd77..a1e389f7d 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -5,6 +5,7 @@
 import android.util.Log;
 import android.widget.Toast;
 
+import org.pollgram.R;
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.data.Option;
 import org.pollgram.decision.data.UsersDecisionVotes;
@@ -76,9 +77,9 @@ public void remindUserToVote(Decision decision, TLRPC.User user) {
         Log.d(LOG_TAG, "remindUserToVote groupChatId[" + decision.getChatId() + "] decision[" + decision + "] user[" + user + "]");
         String userAsString = ContactsController.formatName(user.first_name, user.last_name);
         // TODO Remove START
-        Toast.makeText(ApplicationLoader.applicationContext, "formatName="+userAsString,Toast.LENGTH_SHORT).show();
-        Toast.makeText(ApplicationLoader.applicationContext, "user.first_name="+user.first_name,Toast.LENGTH_SHORT).show();
-        Toast.makeText(ApplicationLoader.applicationContext, "user.username="+user.username,Toast.LENGTH_SHORT).show();
+//        Toast.makeText(ApplicationLoader.applicationContext, "formatName="+userAsString,Toast.LENGTH_SHORT).show();
+//        Toast.makeText(ApplicationLoader.applicationContext, "user.first_name="+user.first_name,Toast.LENGTH_SHORT).show();
+//        Toast.makeText(ApplicationLoader.applicationContext, "user.username="+user.username,Toast.LENGTH_SHORT).show();
         // TODO Remove END
         String msg = messageManager.buildRemindMessage(userAsString, decision);
         sendMessage(decision.getChatId(), msg);
@@ -213,10 +214,10 @@ protected void sendMessage(long groupChatId, String message) {
         long peer = -groupChatId;
         MessageObject replyToMsg = null;
         TLRPC.WebPage webPAge = null;
-        boolean searchLinks = false;
+        boolean searchLinks = true;
         boolean asAdmin = false;
         SendMessagesHelper.getInstance().sendMessage(message, peer, replyToMsg, webPAge, searchLinks, asAdmin);
-        Log.i(LOG_TAG, "sended message [" + message + "] in group [" + groupChatId + "]");
+        Log.i(LOG_TAG, "sent message [" + message + "] in group [" + groupChatId + "]");
     }
 
     @Override
@@ -257,17 +258,19 @@ public String asString(TLRPC.User user){
     public Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messageObject, ClickableSpan url) {
         PollgramMessagesManager.MessageType type = messageManager.getMessageType(messageObject.messageText.toString());
         if (type == null) {
-            return null;
+            throw new PollgramDAOException("Not a pollgram message");
         }
         int groupChatId = messageManager.getMessageGroupId(messageObject);
         if (groupChatId == -1) {
-            return null;
+            throw new PollgramDAOException("Not a group chat message");
         }
-        String decisionTitle = ((URLSpanNoUnderline) url).getURL();
-        decisionTitle = decisionTitle.replace("'", "");
-        Decision d = PollgramFactory.getPollgramDAO().getDecision(decisionTitle, groupChatId);
+        String urlString = ((URLSpanNoUnderline) url).getURL();
+        String decisionTitle = urlString.replace(
+                Character.toString(PollgramMessagesManagerImpl.QUOTE_CHAR), "");
+        Decision d = pollgramDAO.getDecision(decisionTitle, groupChatId);
         if (d == null) {
-            return null;
+            throw  new PollgramDAOException(ApplicationLoader.applicationContext.
+                    getString(R.string.decisionNotFound, urlString));
         }
         int[] participantsUserIds = new int[info.participants.participants.size()];
         for (int i = 0; i < info.participants.participants.size(); i++) {
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
index e74859b80..6c7dfe35f 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
@@ -172,9 +172,9 @@ private void updateView(){
         }
 
         String userStr = pollgramService.asString(pollgramService.getUser(decision.getUserCreatorId()));
-        String creationDateStr = DateFormat.getDateInstance(DateFormat.SHORT).
+        String creationDateStr = DateFormat.getDateInstance(DateFormat.LONG).
                 format(decision.getCreationDate());
-        tvCreationInfo.setText(ctx.getString(R.string.createdByUserOnDay,userStr, creationDateStr));
+        tvCreationInfo.setText(ctx.getString(R.string.createdByUserOnDayNewLine,userStr, creationDateStr));
 
         String statusDesc = ctx.getString(decision.isOpen() ? R.string.statusOpen : R.string.statusClose);
         tvDecisionStatus.setText(ctx.getString(R.string.decisionStatus, statusDesc));
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index bada9c5d2..8d5041e3d 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -254,14 +254,16 @@ protected void updateView() {
                 getUsersDecisionVotes(usersDecisionVotes.getDecision().getId(),
                         usersDecisionVotes.getUsers());
 
-        // set new sorted  votes in the voteListAdapter
-        voteListAdapter.setVotes(usersDecisionVotes.getVotes(currentUserId));
-        voteListAdapter.notifyDataSetChanged();
-        voteListAdapter.setEditable(usersDecisionVotes.getDecision().isOpen());
-
-        // Update table user interface
-        optionTableViewContainer.removeAllViews();
-        updateOptionsTableView(optionTableViewContainer, getActivity().getLayoutInflater());
+        if (!areThereNoOptions()) {
+            // set new sorted  votes in the voteListAdapter
+            voteListAdapter.setVotes(usersDecisionVotes.getVotes(currentUserId));
+            voteListAdapter.notifyDataSetChanged();
+            voteListAdapter.setEditable(usersDecisionVotes.getDecision().isOpen());
+
+            // Update table user interface
+            optionTableViewContainer.removeAllViews();
+            updateOptionsTableView(optionTableViewContainer, getActivity().getLayoutInflater());
+        }
     }
 
     @NonNull
diff --git a/TMessagesProj/src/main/res/layout/votes_manager_main.xml b/TMessagesProj/src/main/res/layout/votes_manager_main.xml
index c1049e33a..57848bbb2 100644
--- a/TMessagesProj/src/main/res/layout/votes_manager_main.xml
+++ b/TMessagesProj/src/main/res/layout/votes_manager_main.xml
@@ -28,14 +28,15 @@
             android:textAppearance="?android:attr/textAppearanceSmall"
             android:text="status"
             android:padding="5dp"
+            android:gravity="center_vertical"
             android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
+            android:layout_height="match_parent"/>
 
 
         <TextView
             android:id="@+id/vote_manager_tv_creationInfo"
             android:textAppearance="?android:attr/textAppearanceSmall"
-            android:text="Title"
+            android:text="Title and even more \n title contents"
             android:padding="5dp"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"/>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 0d9841ab4..ba7e43c3f 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -954,6 +954,7 @@
 
     <!-- START of Pollgram text -->
     <string name="howManyMemberVote">%1$d on %2$d have voted yet</string>
+    <string name="createdByUserOnDayNewLine">Created by %1$s \non %2$s</string>
     <string name="createdByUserOnDay">Created by %1$s on %2$s</string>
     <string name="decisionStatus">Decision is %1$s</string>
     <string name="statusOpen">open</string>
@@ -977,6 +978,7 @@
     <string name="decisionClosed">Decision closed</string>
     <string name="decisionReopened">Decision reopened</string>
     <string name="decisionDeleted">Decision deleted</string>
+    <string name="decisionNotFound">Decision %1$s not found, it may has been deleted.</string>
 
 
     <!-- START of POLLGRAM transaction messages -->
@@ -1002,6 +1004,7 @@
     <!-- between Prefix and Suffix goes the decision title -->
     <string name="tmsg_CloseDecisionP2">, is now closed. The option that receive more vote is</string>
     <!--after P2 goes the winning option title -->
+    <string name="tmsg_CloseDecisionNoOptionDesc">no option</string>
     <string name="tmsg_CloseDecisionP3">with</string>
     <string name="tmsg_CloseDecisionP4"> votes.</string>
 
