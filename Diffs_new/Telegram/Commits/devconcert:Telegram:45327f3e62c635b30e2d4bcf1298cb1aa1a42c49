diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 5c548aab1..e71b2850b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -117,8 +117,24 @@ public void onFragmentDestroy() {
         delegate = null;
     }
 
+    public void setIgnoreSharpMarkedUser() {
+        HashMap<Integer, TLRPC.User> mapUserToIgnore = new HashMap<Integer, TLRPC.User>();
+        for (TLRPC.TL_contact contact : ContactsController.getInstance().contacts) {
+            TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
+            String name = ContactsController.formatName(user.first_name, user.last_name).toLowerCase();
+            if (name.startsWith("#")) {
+                mapUserToIgnore.put(user.id, null);
+            }
+        }
+        setIgnoreUsers(mapUserToIgnore);
+    }
+
     @Override
     public View createView(LayoutInflater inflater, ViewGroup container) {
+        //skyorbit: if the code below causes slow down, this can be postponed.
+        setIgnoreSharpMarkedUser();
+        //skyorbit: disabled for now. able to find some use cases.
+        //String sValidContactCnt = " " + (ContactsController.getInstance().contacts.size() - ignoreUsers.size()); //Don't count sharp-marked person
         if (fragmentView == null) {
             actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
             actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
@@ -127,7 +143,8 @@ public View createView(LayoutInflater inflater, ViewGroup container) {
             }else if (destroyAfterSelect) {
                 actionBarLayer.setTitle(LocaleController.getString("SelectContact", R.string.SelectContact));
             } else {
-                actionBarLayer.setTitle(LocaleController.getString("Contacts", R.string.Contacts));
+                String sAllContactCnt = " " + ContactsController.getInstance().contacts.size();
+                actionBarLayer.setTitle(LocaleController.getString("Contacts", R.string.Contacts) + sAllContactCnt);
             }
 
             actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
@@ -197,16 +214,6 @@ public void onTextChanged(EditText editText) {
             searching = false;
             searchWas = false;
 
-            HashMap<Integer, TLRPC.User> mapUserToIgnore = new HashMap<Integer, TLRPC.User>();
-            for (TLRPC.TL_contact contact : ContactsController.getInstance().contacts) {
-                TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
-                String name = ContactsController.formatName(user.first_name, user.last_name).toLowerCase();
-                if (name.startsWith("#")) {
-                    mapUserToIgnore.put(user.id, null);
-                }
-            }
-            setIgnoreUsers(mapUserToIgnore);
-
             fragmentView = inflater.inflate(R.layout.contacts_layout, container, false);
 
             emptyTextView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
