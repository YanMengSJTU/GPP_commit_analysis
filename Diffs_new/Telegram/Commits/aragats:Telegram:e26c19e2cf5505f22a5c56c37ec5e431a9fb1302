diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
index db1f671a7..abf48883a 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
@@ -21,6 +21,8 @@
 
     private static int totalEvents = 1;
 
+    public static final int switchToVKNewsFeedMode = totalEvents++;
+    public static final int switchToVKPhotoMode = totalEvents++;
     public static final int switchToOfflineMode = totalEvents++;
     public static final int switchToOnlineMode = totalEvents++;
     public static final int stopRefreshingView = totalEvents++;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index baf3bb380..1e496c026 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -20,6 +20,7 @@
 import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.utils.CollectionUtils;
 import org.telegram.utils.Constants;
+import org.telegram.utils.PostMode;
 import org.telegram.utils.StringUtils;
 
 import java.io.File;
@@ -253,12 +254,12 @@ public void deletePost(final String did, int offset, final boolean onlyHistory)
     }
 
 
-    public void loadPosts(final String idOffset, final String nextFromOffset, final int offset, final int count, final boolean reload, final boolean offlineMode) {
-        if (loadingPosts || offlineMode && MediaController.getInstance().getRTree() == null) {
+    public void loadPosts(final String idOffset, final String nextFromOffset, final int offset, final int count, final boolean reload, final PostMode mode) {
+        if (loadingPosts || mode == null || (mode == PostMode.LOCAL && MediaController.getInstance().getRTree() == null)) {
             return;
         }
         //TODO rethink this.
-//        if (offlineMode && MediaController.getRTree() == null) {
+//        if (mode && MediaController.getRTree() == null) {
 //            NotificationCenter.getInstance().postNotificationName(NotificationCenter.stopRefreshingView);
 //            return;
 //        }
@@ -282,16 +283,23 @@ public void loadPosts(final String idOffset, final String nextFromOffset, final
         if (!StringUtils.isEmpty(nextFromOffset)) {
             postRequest.setIdOffset(nextFromOffset);
         }
-        if (offlineMode) {
-            nextOffset = 0;
-            loadLocalPosts(postRequest, reload);
-        } else {
-//            loadPostFromServer(postRequest, reload);
-//            loadVKPhotos(postRequest, reload);
-            loadVKNewsFeed(postRequest, reload);
+        switch (mode) {
+            case LOCAL:
+                nextOffset = 0;
+                loadLocalPosts(postRequest, reload);
+                break;
+            case SERVER:
+                loadPostFromServer(postRequest, reload);
+                break;
+            case VK_NEWS_FEED:
+                loadVKNewsFeed(postRequest, reload);
+
+                break;
+            case VK_PHOTO:
+                loadVKPhotos(postRequest, reload);
+                break;
         }
 
-
     }
 
     private void loadLocalPosts(final PostRequest postRequest, final boolean reload) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index d0864ec0a..73c7046f2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -43,7 +43,7 @@ public boolean isEnabled(int i) {
     //TODO-aragats
     @Override
     public int getCount() {
-        return UserConfig.isClientActivated() ? 7 : 0;
+        return UserConfig.isClientActivated() ? 10 : 0;
     }
 
     @Override
@@ -93,6 +93,10 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 actionCell.setTextAndIcon(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite);
             } else if (i == 6) {
                 actionCell.setTextAndIcon(LocaleController.getString("TelegramFaq", R.string.WGOFaq), R.drawable.menu_help);
+            } else if (i == 8) {
+                actionCell.setTextAndIcon(LocaleController.getString("VK Posts", R.string.VKPosts), R.drawable.menu_broadcast);
+            } else if (i == 9) {
+                actionCell.setTextAndIcon(LocaleController.getString("VK Photos", R.string.VKPhotos), R.drawable.menu_broadcast);
             }
         }
 
@@ -105,7 +109,7 @@ public int getItemViewType(int i) {
             return 0;
         } else if (i == 1) {
             return 1;
-        } else if (i == 4) {
+        } else if (i == 4 || i == 7) {
             return 2;
         }
         return 3;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 416568be4..30f86c858 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -282,6 +282,12 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                         FileLog.e("tmessages", e);
                     }
                     drawerLayoutContainer.closeDrawer(false);
+                } else if (position == 8) {
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.switchToVKNewsFeedMode);
+                    drawerLayoutContainer.closeDrawer(false);
+                } else if (position == 9) {
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.switchToVKPhotoMode);
+                    drawerLayoutContainer.closeDrawer(false);
                 }
             }
         });
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index b4c5796a3..bbceb8436 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -74,6 +74,7 @@
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.utils.Constants;
 import org.telegram.utils.Permissions;
+import org.telegram.utils.PostMode;
 import org.telegram.utils.StringUtils;
 
 import ru.aragats.wgo.ApplicationLoader;
@@ -142,7 +143,7 @@ public void run() {
     private final static int action_bar_menu_location = itemId++;
     private final static int action_bar_menu_other = itemId++;
 
-    private boolean offlineMode;
+    private PostMode mode = PostMode.SERVER;
 
 
     //TODO-legacy. update according to new version.
@@ -231,9 +232,6 @@ public void updatePhotoAtIndex(int index) {
 
     public PostsActivity(Bundle args) {
         super(args);
-        if (args != null) {
-            offlineMode = args.getBoolean("offlineMode", false);
-        }
     }
 
     @Override
@@ -246,6 +244,8 @@ public boolean onFragmentCreate() {
 
         if (searchString == null) {
             //TODO learn NotificationCenter class especiallu case when post notification. There is different situations when notify when animation or not.
+            NotificationCenter.getInstance().addObserver(this, NotificationCenter.switchToVKNewsFeedMode);
+            NotificationCenter.getInstance().addObserver(this, NotificationCenter.switchToVKPhotoMode);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.switchToOfflineMode);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.switchToOnlineMode);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.stopRefreshingView);
@@ -260,12 +260,12 @@ public boolean onFragmentCreate() {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.locationPermissionGranted);
         }
 
-        if (offlineMode) {
+        if (mode == PostMode.LOCAL) {
             MediaController.loadGeoTaggedGalleryPhotos(classGuid, false);
         }
 
-        if (!offlineMode && !postsLoaded) {
-            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode);
+        if (mode != PostMode.LOCAL && !postsLoaded) {
+            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, mode);
             ContactsController.getInstance().checkInviteText();
             postsLoaded = true;
         }
@@ -310,6 +310,8 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
         if (searchString == null) {
+            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.switchToVKNewsFeedMode);
+            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.switchToVKPhotoMode);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.switchToOfflineMode);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.switchToOnlineMode);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.stopRefreshingView);
@@ -437,7 +439,7 @@ public void onItemClick(int id) {
                         parentLayout.getDrawerLayoutContainer().openDrawer(false);
                     }
                 } else if (id == list_menu_synchronize) {
-                    if (offlineMode) {
+                    if (mode == PostMode.LOCAL) {
                         showProgressView();
                         MediaController.loadGeoTaggedGalleryPhotos(0, true);
                     } else {
@@ -468,7 +470,7 @@ public void onItemClick(int id) {
             public void onRefresh() {
                 // TODO temp test
 //                new RestTask().execute("param");
-                PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode);
+                PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, mode);
 
 //                RestManager.getInstance().uploadTest(new PostRequest(), new Callback<PostResponse>() {
 //                    @Override
@@ -711,7 +713,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                         int nextOffset = PostsController.getInstance().getOffset();
                         String nextFrom = PostsController.getInstance().getNextFrom();
 //                        startRefreshingProgressView();
-                        PostsController.getInstance().loadPosts(offset, nextFrom, nextOffset, Constants.POST_COUNT, false, offlineMode);
+                        PostsController.getInstance().loadPosts(offset, nextFrom, nextOffset, Constants.POST_COUNT, false, mode);
                     }
                 }
 
@@ -891,10 +893,10 @@ public void onClick(DialogInterface dialogInterface, int i) {
         } else if (id == NotificationCenter.offlinePostsLoaded) {
 //            layoutManager.scrollToPosition(0);
 //            startRefreshingProgressView();
-            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode); // TODO why offlineMode is false /// aaa becaue different instances !!!
+            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, mode); // TODO why mode is false /// aaa becaue different instances !!!
         } else if (id == NotificationCenter.switchToOfflineMode) {
             boolean force = false;
-            if (!this.offlineMode) {
+            if (this.mode != PostMode.LOCAL) {
                 force = true;
                 if (!MediaController.getInstance().isRTreeloaded()) {
                     showProgressView();
@@ -905,16 +907,36 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
 
 
-            this.offlineMode = true;
+            this.mode = PostMode.LOCAL;
 //            refreshPosts(force);
         } else if (id == NotificationCenter.switchToOnlineMode) {
             boolean force = false;
-            if (this.offlineMode) {
+            if (this.mode != PostMode.SERVER) {
+                force = true;
+                PostsController.getInstance().cancelAllCalls();
+                PostsController.getInstance().getPosts().clear();
+            }
+            this.mode = PostMode.SERVER;
+//            layoutManager.scrollToPosition(0);
+            refreshPosts(force);
+        } else if (id == NotificationCenter.switchToVKNewsFeedMode) {
+            boolean force = false;
+            if (this.mode != PostMode.VK_NEWS_FEED) {
+                force = true;
+                PostsController.getInstance().cancelAllCalls();
+                PostsController.getInstance().getPosts().clear();
+            }
+            this.mode = PostMode.VK_NEWS_FEED;
+//            layoutManager.scrollToPosition(0);
+            refreshPosts(force);
+        } else if (id == NotificationCenter.switchToVKPhotoMode) {
+            boolean force = false;
+            if (this.mode != PostMode.VK_PHOTO) {
                 force = true;
                 PostsController.getInstance().cancelAllCalls();
                 PostsController.getInstance().getPosts().clear();
             }
-            this.offlineMode = false;
+            this.mode = PostMode.VK_PHOTO;
 //            layoutManager.scrollToPosition(0);
             refreshPosts(force);
         } else if (id == NotificationCenter.locationPermissionGranted) {
@@ -926,7 +948,7 @@ private void refreshPosts(boolean force) {
         if (PostsController.getInstance().getPosts().isEmpty() || force) {
 //            startRefreshingProgressView();
             showProgressView();
-            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode);
+            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, mode);
         }
     }
 
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index f17166a2a..c161af7a2 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -168,6 +168,8 @@
     <string name="updateText">Telegram für Android wurde aktualisiert. Neu in Version 2.9:\n\n- Installiere und teile benutzerdefinierte Sticker-Pakete, wie z.B. dieses: https://telegram.me/addstickers/Animals\n- Künstler können eigene Sticker-Pakete über unseren Sticker Bot (@stickers) einstellen.\n\n- Benutze Telegram mit Android Auto (siehe android.com/auto)</string>
     <string name="updateBuild">536</string>
     <!--Posts-->
+    <string name="VKPosts">VK Beiträge (Beta)</string>
+    <string name="VKPhotos">VK Fotos (Beta)</string>
     <string name="Posts">Beiträge</string>
     <string name="MyPosts">Meine Fotos (Beta)</string>
     <string name="NoPosts">Es gibt nicht die neuesten Beiträge in Ihrer Nähe.</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 341654965..bb76df2d5 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -169,6 +169,8 @@
     <string name="updateText">Telegram for Android has been updated. New in version 2.9:\n\n- Install and share custom sticker sets like this one: https://telegram.me/addstickers/Animals\n- If you\'re an artist, create custom sticker sets using our @stickers bot.\n\n- Use Telegram with Android Auto.</string>
     <string name="updateBuild">536</string>
     <!--Posts-->
+    <string name="VKPosts">VK Posts (Beta)</string>
+    <string name="VKPhotos">VK Photos (Beta)</string>
     <string name="Posts">Posts</string>
     <string name="MyPosts">My Photos (Beta)</string>
     <string name="NoPosts">There are not recent posts around you.</string>
