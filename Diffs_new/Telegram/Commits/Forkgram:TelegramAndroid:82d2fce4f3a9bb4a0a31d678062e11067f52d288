diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index c28b68e1a..6fd9074d3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -1115,9 +1115,32 @@ public void onItemClick(final int id) {
                         return;
                     }
                     createDeleteMessagesAlert(null, null);
-                } else if (id == forward || id == forward_anonym) {
-                    IS_ANONYMOUS_FORWARD = id == forward_anonym;
+                } else if (id == forward) {
+                    // IS_ANONYMOUS_FORWARD = id == forward_anonym;
                     openForward();
+                } else if (id == forward_anonym) {
+                    ArrayList<MessageObject> messages = new ArrayList<MessageObject>();
+                    for (int a = 1; a >= 0; a--) {
+                        ArrayList<Integer> ids = new ArrayList<>();
+                        for (int b = 0; b < selectedMessagesIds[a].size(); b++) {
+                            ids.add(selectedMessagesIds[a].keyAt(b));
+                        }
+                        Collections.sort(ids);
+                        for (int b = 0; b < ids.size(); b++) {
+                            Integer i = ids.get(b);
+                            MessageObject messageObject = selectedMessagesIds[a].get(i);
+                            if (messageObject != null) {
+                                messages.add(messageObject);
+                            }
+                        }
+                        selectedMessagesCanCopyIds[a].clear();
+                        selectedMessagesCanStarIds[a].clear();
+                        selectedMessagesIds[a].clear();
+                    }
+                    hideActionMode();
+                    updatePinnedMessageView(true);
+                    updateVisibleRows();
+                    showDialog(new ShareAlert(getParentActivity(), messages, "", ChatObject.isChannel(currentChat), "", true));
                 } else if (id == chat_enc_timer) {
                     if (getParentActivity() == null) {
                         return;
@@ -1522,7 +1545,7 @@ public boolean forceShowClear() {
             actionModeViews.add(actionMode.addItemWithWidth(star, R.drawable.msg_fave, AndroidUtilities.dp(54), LocaleController.getString("AddToFavorites", R.string.AddToFavorites)));
             actionModeViews.add(actionMode.addItemWithWidth(copy, R.drawable.msg_copy, AndroidUtilities.dp(54), LocaleController.getString("Copy", R.string.Copy)));
             actionModeViews.add(actionMode.addItemWithWidth(forward, R.drawable.msg_forward, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
-            actionModeViews.add(actionMode.addItemWithWidth(forward_anonym, R.drawable.ic_ab_forward_anonym, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
+            actionModeViews.add(actionMode.addItemWithWidth(forward_anonym, R.drawable.share_arrow, AndroidUtilities.dp(54), LocaleController.getString("Forward", R.string.Forward)));
             actionModeViews.add(actionMode.addItemWithWidth(delete, R.drawable.msg_delete, AndroidUtilities.dp(54), LocaleController.getString("Delete", R.string.Delete)));
         } else {
             actionModeViews.add(actionMode.addItemWithWidth(edit, R.drawable.msg_edit, AndroidUtilities.dp(54), LocaleController.getString("Edit", R.string.Edit)));
@@ -12033,9 +12056,9 @@ private void createMenu(View v, boolean single, boolean listView, float x, float
                             items.add(LocaleController.getString("Forward", R.string.Forward));
                             options.add(2);
                             icons.add(R.drawable.msg_forward);
-                            items.add(LocaleController.getString("AnonymousForward", R.string.AnonymousForward));
+                            items.add(LocaleController.getString("BotShare", R.string.BotShare));
                             options.add(202);
-                            icons.add(R.drawable.ic_ab_forward_anonym);
+                            icons.add(R.drawable.share_arrow);
                         }
                         if (allowUnpin) {
                             items.add(LocaleController.getString("UnpinMessage", R.string.UnpinMessage));
@@ -12519,15 +12542,13 @@ private void processSelectedOption(int option) {
                 break;
             }
             case 202: {
-                IS_ANONYMOUS_FORWARD = true;
-                forwardingMessage = selectedObject;
-                forwardingMessageGroup = selectedObjectGroup;
-                Bundle args = new Bundle();
-                args.putBoolean("onlySelect", true);
-                args.putInt("dialogsType", 3);
-                DialogsActivity fragment = new DialogsActivity(args);
-                fragment.setDelegate(this);
-                presentFragment(fragment);
+                ArrayList<MessageObject> messages = new ArrayList<MessageObject>();
+                if (selectedObjectGroup != null) {
+                    messages = selectedObjectGroup.messages;
+                } else {
+                    messages.add(selectedObject);
+                }
+                showDialog(new ShareAlert(getParentActivity(), messages, "", ChatObject.isChannel(currentChat), "", true));
                 break;
             }
             case 3: {
