diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
index 784622261..a71747a67 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
@@ -17,14 +17,8 @@ public TLClassStore() {
         classStore = new HashMap<>();
 
 
-        classStore.put(TLRPC.TL_server_DH_inner_data.constructor, TLRPC.TL_server_DH_inner_data.class);
-        classStore.put(TLRPC.TL_msgs_ack.constructor, TLRPC.TL_msgs_ack.class);
+
         classStore.put(TLRPC.TL_futureSalt.constructor, TLRPC.TL_futureSalt.class);
-        classStore.put(TLRPC.TL_msg_resend_req.constructor, TLRPC.TL_msg_resend_req.class);
-        classStore.put(TLRPC.TL_rpc_error.constructor, TLRPC.TL_rpc_error.class);
-        classStore.put(TLRPC.TL_rpc_req_error.constructor, TLRPC.TL_rpc_req_error.class);
-        classStore.put(TLRPC.TL_decryptedMessageService.constructor, TLRPC.TL_decryptedMessageService.class);
-        classStore.put(TLRPC.TL_decryptedMessage.constructor, TLRPC.TL_decryptedMessage.class);
         classStore.put(TLRPC.TL_bad_msg_notification.constructor, TLRPC.TL_bad_msg_notification.class);
         classStore.put(TLRPC.TL_bad_server_salt.constructor, TLRPC.TL_bad_server_salt.class);
         classStore.put(TLRPC.TL_new_session_created.constructor, TLRPC.TL_new_session_created.class);
@@ -35,8 +29,6 @@ public TLClassStore() {
         classStore.put(TLRPC.TL_rpc_answer_dropped.constructor, TLRPC.TL_rpc_answer_dropped.class);
         classStore.put(TLRPC.TL_rpc_answer_dropped_running.constructor, TLRPC.TL_rpc_answer_dropped_running.class);
         classStore.put(TLRPC.TL_auth_exportedAuthorization.constructor, TLRPC.TL_auth_exportedAuthorization.class);
-        classStore.put(TLRPC.TL_destroy_session_ok.constructor, TLRPC.TL_destroy_session_ok.class);
-        classStore.put(TLRPC.TL_destroy_session_none.constructor, TLRPC.TL_destroy_session_none.class);
         classStore.put(TLRPC.TL_msgs_state_req.constructor, TLRPC.TL_msgs_state_req.class);
         classStore.put(TLRPC.TL_server_DH_params_fail.constructor, TLRPC.TL_server_DH_params_fail.class);
         classStore.put(TLRPC.TL_server_DH_params_ok.constructor, TLRPC.TL_server_DH_params_ok.class);
@@ -45,14 +37,11 @@ public TLClassStore() {
         classStore.put(TLRPC.TL_decryptedMessageLayer.constructor, TLRPC.TL_decryptedMessageLayer.class);
         classStore.put(TLRPC.TL_http_wait.constructor, TLRPC.TL_http_wait.class);
         classStore.put(TLRPC.TL_gzip_packed.constructor, TLRPC.TL_gzip_packed.class);
-        classStore.put(TLRPC.TL_decryptedMessageService_old.constructor, TLRPC.TL_decryptedMessageService_old.class);
-        classStore.put(TLRPC.TL_decryptedMessage_old.constructor, TLRPC.TL_decryptedMessage_old.class);
         classStore.put(TLRPC.TL_message_secret.constructor, TLRPC.TL_message_secret.class);
         classStore.put(TLRPC.TL_messageEncryptedAction.constructor, TLRPC.TL_messageEncryptedAction.class);
         classStore.put(TLRPC.TL_decryptedMessageHolder.constructor, TLRPC.TL_decryptedMessageHolder.class);
         classStore.put(TLRPC.TL_client_DH_inner_data.constructor, TLRPC.TL_client_DH_inner_data.class);
         classStore.put(TLRPC.TL_null.constructor, TLRPC.TL_null.class);
-        classStore.put(TLRPC.TL_destroy_sessions_res.constructor, TLRPC.TL_destroy_sessions_res.class);
 
 
         classStore.put(TLRPC.TL_audio.constructor, TLRPC.TL_audio.class);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index 52f149799..86e2b8a24 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -37,16 +37,6 @@
 
 
 
-
-
-
-
-
-
-
-
-
-
     public static class GeoPoint extends TLObject {
         public double _long;
         public double lat;
@@ -62,713 +52,92 @@ public static GeoPoint TLdeserialize(AbsSerializedData stream, int constructor,
                     break;
             }
             if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in GeoPoint", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
-    }
-
-    public static class TL_geoPointEmpty extends GeoPoint {
-        public static int constructor = 0x1117dd5f;
-
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_geoPoint extends GeoPoint {
-        public static int constructor = 0x2049d70c;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            _long = stream.readDouble(exception);
-            lat = stream.readDouble(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeDouble(_long);
-            stream.writeDouble(lat);
-        }
-    }
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    public static class TL_server_DH_inner_data extends TLObject {
-        public static int constructor = 0xb5890dba;
-
-        public byte[] nonce;
-        public byte[] server_nonce;
-        public int g;
-        public byte[] dh_prime;
-        public byte[] g_a;
-        public int server_time;
-
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            nonce = stream.readData(16, exception);
-            server_nonce = stream.readData(16, exception);
-            g = stream.readInt32(exception);
-            dh_prime = stream.readByteArray(exception);
-            g_a = stream.readByteArray(exception);
-            server_time = stream.readInt32(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeRaw(nonce);
-            stream.writeRaw(server_nonce);
-            stream.writeInt32(g);
-            stream.writeByteArray(dh_prime);
-            stream.writeByteArray(g_a);
-            stream.writeInt32(server_time);
-        }
-    }
-
-
-
-
-
-
-
-
-
-
-
-    public static class TL_msgs_ack extends TLObject {
-        public static int constructor = 0x62d6b459;
-
-        public ArrayList<Long> msg_ids = new ArrayList<>();
-
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                msg_ids.add(stream.readInt64(exception));
-            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = msg_ids.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt64(msg_ids.get(a));
-            }
-        }
-    }
-
-
-
-
-
-    public static class TL_msg_resend_req extends TLObject {
-        public static int constructor = 0x7d861a08;
-
-        public ArrayList<Long> msg_ids = new ArrayList<>();
-
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                msg_ids.add(stream.readInt64(exception));
-            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = msg_ids.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt64(msg_ids.get(a));
-            }
-        }
-    }
-
-
-
-
-
-    public static class RpcError extends TLObject {
-        public int error_code;
-        public String error_message;
-        public long query_id;
-
-
-    }
-
-    public static class TL_rpc_error extends RpcError {
-        public static int constructor = 0x2144ca19;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            error_code = stream.readInt32(exception);
-            error_message = stream.readString(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(error_code);
-            stream.writeString(error_message);
-        }
-    }
-
-    public static class TL_rpc_req_error extends RpcError {
-        public static int constructor = 0x7ae432f5;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            query_id = stream.readInt64(exception);
-            error_code = stream.readInt32(exception);
-            error_message = stream.readString(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(query_id);
-            stream.writeInt32(error_code);
-            stream.writeString(error_message);
-        }
-    }
-
-
-
-
-
-
-
-
-
-
-
-    public static class DecryptedMessage extends TLObject {
-        public long random_id;
-        public DecryptedMessageAction action;
-        public byte[] random_bytes;
-        public String message;
-        public DecryptedMessageMedia media;
-        public int ttl;
-
-        public static DecryptedMessage TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            DecryptedMessage result = null;
-            switch(constructor) {
-                case 0x73164160:
-                    result = new TL_decryptedMessageService();
-                    break;
-                case 0x1f814f1f:
-                    result = new TL_decryptedMessage_old();
-                    break;
-                case 0x204d3878:
-                    result = new TL_decryptedMessage();
-                    break;
-                case 0xaa48327d:
-                    result = new TL_decryptedMessageService_old();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in DecryptedMessage", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
-    }
-
-    public static class TL_decryptedMessageService extends DecryptedMessage {
-        public static int constructor = 0x73164160;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            random_id = stream.readInt64(exception);
-            action = DecryptedMessageAction.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(random_id);
-            action.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_decryptedMessage_old extends TL_decryptedMessage {
-        public static int constructor = 0x1f814f1f;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            random_id = stream.readInt64(exception);
-            random_bytes = stream.readByteArray(exception);
-            message = stream.readString(exception);
-            media = DecryptedMessageMedia.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(random_id);
-            stream.writeByteArray(random_bytes);
-            stream.writeString(message);
-            media.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_decryptedMessage extends DecryptedMessage {
-        public static int constructor = 0x204d3878;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            random_id = stream.readInt64(exception);
-            ttl = stream.readInt32(exception);
-            message = stream.readString(exception);
-            media = DecryptedMessageMedia.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(random_id);
-            stream.writeInt32(ttl);
-            stream.writeString(message);
-            media.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_decryptedMessageService_old extends TL_decryptedMessageService {
-        public static int constructor = 0xaa48327d;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            random_id = stream.readInt64(exception);
-            random_bytes = stream.readByteArray(exception);
-            action = DecryptedMessageAction.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(random_id);
-            stream.writeByteArray(random_bytes);
-            action.serializeToStream(stream);
-        }
-    }
-
-
-
-
-
-
-
-    public static class BadMsgNotification extends TLObject {
-        public long bad_msg_id;
-        public int bad_msg_seqno;
-        public int error_code;
-        public long new_server_salt;
-
-
-    }
-
-    public static class TL_bad_msg_notification extends BadMsgNotification {
-        public static int constructor = 0xa7eff811;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            bad_msg_id = stream.readInt64(exception);
-            bad_msg_seqno = stream.readInt32(exception);
-            error_code = stream.readInt32(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(bad_msg_id);
-            stream.writeInt32(bad_msg_seqno);
-            stream.writeInt32(error_code);
-        }
-    }
-
-    public static class TL_bad_server_salt extends BadMsgNotification {
-        public static int constructor = 0xedab447b;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            bad_msg_id = stream.readInt64(exception);
-            bad_msg_seqno = stream.readInt32(exception);
-            error_code = stream.readInt32(exception);
-            new_server_salt = stream.readInt64(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(bad_msg_id);
-            stream.writeInt32(bad_msg_seqno);
-            stream.writeInt32(error_code);
-            stream.writeInt64(new_server_salt);
-        }
-    }
-
-    public static class DecryptedMessageMedia extends TLObject {
-        public int thumb_w;
-        public int thumb_h;
-        public String file_name;
-        public String mime_type;
-        public int size;
-        public byte[] key;
-        public byte[] iv;
-        public long id;
-        public long access_hash;
-        public int date;
-        public int dc_id;
-        public int duration;
-        public double lat;
-        public double _long;
-        public int w;
-        public int h;
-        public String phone_number;
-        public String first_name;
-        public String last_name;
-        public int user_id;
-
-        public static DecryptedMessageMedia TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            DecryptedMessageMedia result = null;
-            switch(constructor) {
-                case 0x89f5c4a:
-                    result = new TL_decryptedMessageMediaEmpty();
-                    break;
-                case 0xb095434b:
-                    result = new TL_decryptedMessageMediaDocument();
-                    break;
-                case 0xfa95b0dd:
-                    result = new TL_decryptedMessageMediaExternalDocument();
-                    break;
-                case 0x6080758f:
-                    result = new TL_decryptedMessageMediaAudio_old();
-                    break;
-                case 0x35480a59:
-                    result = new TL_decryptedMessageMediaGeoPoint();
-                    break;
-                case 0x57e0a9cb:
-                    result = new TL_decryptedMessageMediaAudio();
-                    break;
-                case 0x524a415d:
-                    result = new TL_decryptedMessageMediaVideo();
-                    break;
-                case 0x588a0a97:
-                    result = new TL_decryptedMessageMediaContact();
-                    break;
-                case 0x32798a8c:
-                    result = new TL_decryptedMessageMediaPhoto();
-                    break;
-                case 0x4cee6ef3:
-                    result = new TL_decryptedMessageMediaVideo_old();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in DecryptedMessageMedia", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
-    }
-
-    public static class TL_decryptedMessageMediaEmpty extends DecryptedMessageMedia {
-        public static int constructor = 0x89f5c4a;
-
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_decryptedMessageMediaDocument extends DecryptedMessageMedia {
-        public static int constructor = 0xb095434b;
-
-        public byte[] thumb;
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            thumb = stream.readByteArray(exception);
-            thumb_w = stream.readInt32(exception);
-            thumb_h = stream.readInt32(exception);
-            file_name = stream.readString(exception);
-            mime_type = stream.readString(exception);
-            size = stream.readInt32(exception);
-            key = stream.readByteArray(exception);
-            iv = stream.readByteArray(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeByteArray(thumb);
-            stream.writeInt32(thumb_w);
-            stream.writeInt32(thumb_h);
-            stream.writeString(file_name);
-            stream.writeString(mime_type);
-            stream.writeInt32(size);
-            stream.writeByteArray(key);
-            stream.writeByteArray(iv);
-        }
-    }
-
-    public static class TL_decryptedMessageMediaExternalDocument extends DecryptedMessageMedia {
-        public static int constructor = 0xfa95b0dd;
-
-        public PhotoSize thumb;
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            id = stream.readInt64(exception);
-            access_hash = stream.readInt64(exception);
-            date = stream.readInt32(exception);
-            mime_type = stream.readString(exception);
-            size = stream.readInt32(exception);
-            thumb = PhotoSize.TLdeserialize(stream, stream.readInt32(exception), exception);
-            dc_id = stream.readInt32(exception);
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-//                return;
-            }
-//            int count = stream.readInt32(exception);
-//            for (int a = 0; a < count; a++) {
-//                DocumentAttribute object = DocumentAttribute.TLdeserialize(stream, stream.readInt32(exception), exception);
-//                if (object == null) {
-//                    return;
-//                }
-//                attributes.add(object);
-//            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(id);
-            stream.writeInt64(access_hash);
-            stream.writeInt32(date);
-            stream.writeString(mime_type);
-            stream.writeInt32(size);
-            thumb.serializeToStream(stream);
-            stream.writeInt32(dc_id);
-            stream.writeInt32(0x1cb5c415);
-//            int count = attributes.size();
-//            stream.writeInt32(count);
-//            for (int a = 0; a < count; a++) {
-//                attributes.get(a).serializeToStream(stream);
-//            }
+                throw new RuntimeException(String.format("can't parse magic %x in GeoPoint", constructor));
+            }
+            if (result != null) {
+                result.readParams(stream, exception);
+            }
+            return result;
         }
     }
 
-    public static class TL_decryptedMessageMediaAudio_old extends TL_decryptedMessageMediaAudio {
-        public static int constructor = 0x6080758f;
-
+    public static class TL_geoPointEmpty extends GeoPoint {
+        public static int constructor = 0x1117dd5f;
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            duration = stream.readInt32(exception);
-            size = stream.readInt32(exception);
-            key = stream.readByteArray(exception);
-            iv = stream.readByteArray(exception);
-        }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
-            stream.writeInt32(duration);
-            stream.writeInt32(size);
-            stream.writeByteArray(key);
-            stream.writeByteArray(iv);
         }
     }
 
-    public static class TL_decryptedMessageMediaGeoPoint extends DecryptedMessageMedia {
-        public static int constructor = 0x35480a59;
+    public static class TL_geoPoint extends GeoPoint {
+        public static int constructor = 0x2049d70c;
 
 
         public void readParams(AbsSerializedData stream, boolean exception) {
-            lat = stream.readDouble(exception);
             _long = stream.readDouble(exception);
+            lat = stream.readDouble(exception);
         }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
-            stream.writeDouble(lat);
             stream.writeDouble(_long);
+            stream.writeDouble(lat);
         }
     }
 
-    public static class TL_decryptedMessageMediaAudio extends DecryptedMessageMedia {
-        public static int constructor = 0x57e0a9cb;
-
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            duration = stream.readInt32(exception);
-            mime_type = stream.readString(exception);
-            size = stream.readInt32(exception);
-            key = stream.readByteArray(exception);
-            iv = stream.readByteArray(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(duration);
-            stream.writeString(mime_type);
-            stream.writeInt32(size);
-            stream.writeByteArray(key);
-            stream.writeByteArray(iv);
-        }
-    }
 
-    public static class TL_decryptedMessageMediaVideo extends DecryptedMessageMedia {
-        public static int constructor = 0x524a415d;
 
-        public byte[] thumb;
+    public static class BadMsgNotification extends TLObject {
+        public long bad_msg_id;
+        public int bad_msg_seqno;
+        public int error_code;
+        public long new_server_salt;
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            thumb = stream.readByteArray(exception);
-            thumb_w = stream.readInt32(exception);
-            thumb_h = stream.readInt32(exception);
-            duration = stream.readInt32(exception);
-            mime_type = stream.readString(exception);
-            w = stream.readInt32(exception);
-            h = stream.readInt32(exception);
-            size = stream.readInt32(exception);
-            key = stream.readByteArray(exception);
-            iv = stream.readByteArray(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeByteArray(thumb);
-            stream.writeInt32(thumb_w);
-            stream.writeInt32(thumb_h);
-            stream.writeInt32(duration);
-            stream.writeString(mime_type);
-            stream.writeInt32(w);
-            stream.writeInt32(h);
-            stream.writeInt32(size);
-            stream.writeByteArray(key);
-            stream.writeByteArray(iv);
-        }
     }
 
-    public static class TL_decryptedMessageMediaContact extends DecryptedMessageMedia {
-        public static int constructor = 0x588a0a97;
+    public static class TL_bad_msg_notification extends BadMsgNotification {
+        public static int constructor = 0xa7eff811;
 
 
         public void readParams(AbsSerializedData stream, boolean exception) {
-            phone_number = stream.readString(exception);
-            first_name = stream.readString(exception);
-            last_name = stream.readString(exception);
-            user_id = stream.readInt32(exception);
+            bad_msg_id = stream.readInt64(exception);
+            bad_msg_seqno = stream.readInt32(exception);
+            error_code = stream.readInt32(exception);
         }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-            stream.writeInt32(user_id);
+            stream.writeInt64(bad_msg_id);
+            stream.writeInt32(bad_msg_seqno);
+            stream.writeInt32(error_code);
         }
     }
 
-    public static class TL_decryptedMessageMediaPhoto extends DecryptedMessageMedia {
-        public static int constructor = 0x32798a8c;
+    public static class TL_bad_server_salt extends BadMsgNotification {
+        public static int constructor = 0xedab447b;
 
-        public byte[] thumb;
 
         public void readParams(AbsSerializedData stream, boolean exception) {
-            thumb = stream.readByteArray(exception);
-            thumb_w = stream.readInt32(exception);
-            thumb_h = stream.readInt32(exception);
-            w = stream.readInt32(exception);
-            h = stream.readInt32(exception);
-            size = stream.readInt32(exception);
-            key = stream.readByteArray(exception);
-            iv = stream.readByteArray(exception);
+            bad_msg_id = stream.readInt64(exception);
+            bad_msg_seqno = stream.readInt32(exception);
+            error_code = stream.readInt32(exception);
+            new_server_salt = stream.readInt64(exception);
         }
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
-            stream.writeByteArray(thumb);
-            stream.writeInt32(thumb_w);
-            stream.writeInt32(thumb_h);
-            stream.writeInt32(w);
-            stream.writeInt32(h);
-            stream.writeInt32(size);
-            stream.writeByteArray(key);
-            stream.writeByteArray(iv);
+            stream.writeInt64(bad_msg_id);
+            stream.writeInt32(bad_msg_seqno);
+            stream.writeInt32(error_code);
+            stream.writeInt64(new_server_salt);
         }
     }
 
-    public static class TL_decryptedMessageMediaVideo_old extends TL_decryptedMessageMediaVideo {
-        public static int constructor = 0x4cee6ef3;
-
-        public byte[] thumb;
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            thumb = stream.readByteArray(exception);
-            thumb_w = stream.readInt32(exception);
-            thumb_h = stream.readInt32(exception);
-            duration = stream.readInt32(exception);
-            w = stream.readInt32(exception);
-            h = stream.readInt32(exception);
-            size = stream.readInt32(exception);
-            key = stream.readByteArray(exception);
-            iv = stream.readByteArray(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeByteArray(thumb);
-            stream.writeInt32(thumb_w);
-            stream.writeInt32(thumb_h);
-            stream.writeInt32(duration);
-            stream.writeInt32(w);
-            stream.writeInt32(h);
-            stream.writeInt32(size);
-            stream.writeByteArray(key);
-            stream.writeByteArray(iv);
-        }
-    }
 
     public static class User extends TLObject {
         public int id;
@@ -816,113 +185,21 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_userSelf extends User {
-        public static int constructor = 0x1c60e608;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            id = stream.readInt32(exception);
-            first_name = stream.readString(exception);
-            last_name = stream.readString(exception);
-            username = stream.readString(exception);
-            phone = stream.readString(exception);
-            photo = UserProfilePhoto.TLdeserialize(stream, stream.readInt32(exception), exception);
-//            status = UserStatus.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-            stream.writeString(username);
-            stream.writeString(phone);
-            photo.serializeToStream(stream);
-//            status.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_userForeign extends User {
-        public static int constructor = 0x75cf7a8;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            id = stream.readInt32(exception);
-            first_name = stream.readString(exception);
-            last_name = stream.readString(exception);
-            username = stream.readString(exception);
-            access_hash = stream.readInt64(exception);
-            photo = UserProfilePhoto.TLdeserialize(stream, stream.readInt32(exception), exception);
-//            status = UserStatus.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-            stream.writeString(username);
-            stream.writeInt64(access_hash);
-            photo.serializeToStream(stream);
-//            status.serializeToStream(stream);
-        }
-    }
-
 
 
 
 
-    public static class TL_userRequest extends User {
-        public static int constructor = 0xd9ccc4ef;
 
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            id = stream.readInt32(exception);
-            first_name = stream.readString(exception);
-            last_name = stream.readString(exception);
-            username = stream.readString(exception);
-            access_hash = stream.readInt64(exception);
-            phone = stream.readString(exception);
-            photo = UserProfilePhoto.TLdeserialize(stream, stream.readInt32(exception), exception);
-//            status = UserStatus.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-            stream.writeString(username);
-            stream.writeInt64(access_hash);
-            stream.writeString(phone);
-            photo.serializeToStream(stream);
-//            status.serializeToStream(stream);
-        }
-    }
 
 
 
 
 
-    public static class TL_userDeleted extends User {
-        public static int constructor = 0xd6016d7a;
 
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            id = stream.readInt32(exception);
-            first_name = stream.readString(exception);
-            last_name = stream.readString(exception);
-            username = stream.readString(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-            stream.writeString(username);
-        }
-    }
 
     public static class MessageMedia extends TLObject {
         public byte[] bytes;
@@ -1651,56 +928,8 @@ public void serializeToStream(AbsSerializedData stream) {
 
 
 
-    public static class DestroySessionRes extends TLObject {
-        public long session_id;
-
-        public static DestroySessionRes TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            DestroySessionRes result = null;
-            switch(constructor) {
-                case 0xe22045fc:
-                    result = new TL_destroy_session_ok();
-                    break;
-                case 0x62d350c9:
-                    result = new TL_destroy_session_none();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in DestroySessionRes", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
-    }
-
-    public static class TL_destroy_session_ok extends DestroySessionRes {
-        public static int constructor = 0xe22045fc;
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            session_id = stream.readInt64(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(session_id);
-        }
-    }
-
-    public static class TL_destroy_session_none extends DestroySessionRes {
-        public static int constructor = 0x62d350c9;
-
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            session_id = stream.readInt64(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(session_id);
-        }
-    }
 
     public static class PhotoSize extends TLObject {
         public String type;
@@ -2364,7 +1593,6 @@ public void serializeToStream(AbsSerializedData stream) {
         public int layer;
         public int in_seq_no;
         public int out_seq_no;
-        public DecryptedMessage message;
 
         public static TL_decryptedMessageLayer TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
             if (TL_decryptedMessageLayer.constructor != constructor) {
@@ -2384,7 +1612,7 @@ public void readParams(AbsSerializedData stream, boolean exception) {
             layer = stream.readInt32(exception);
             in_seq_no = stream.readInt32(exception);
             out_seq_no = stream.readInt32(exception);
-            message = DecryptedMessage.TLdeserialize(stream, stream.readInt32(exception), exception);
+//            message = DecryptedMessage.TLdeserialize(stream, stream.readInt32(exception), exception);
         }
 
         public void serializeToStream(AbsSerializedData stream) {
@@ -2393,7 +1621,7 @@ public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(layer);
             stream.writeInt32(in_seq_no);
             stream.writeInt32(out_seq_no);
-            message.serializeToStream(stream);
+//            message.serializeToStream(stream);
         }
     }
 
@@ -2860,34 +2088,6 @@ public void serializeToStream(AbsSerializedData stream) {
 
 
 
-    public static class TL_destroy_sessions_res extends TLObject {
-        public static int constructor = 0xfb95abcd;
-
-        public ArrayList<DestroySessionRes> destroy_results = new ArrayList<>();
-
-
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                DestroySessionRes object = DestroySessionRes.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                destroy_results.add(object);
-            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            int count = destroy_results.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                destroy_results.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
 
 
     //Message start
