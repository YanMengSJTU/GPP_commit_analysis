diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
index 12d9060ac..81f8f6609 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
@@ -123,6 +123,9 @@ public static ShareAlert createShareAlert(final Context context, MessageObject m
     public ShareAlert(final Context context, ArrayList<MessageObject> messages, final String text, boolean publicChannel, final String copyLink, boolean fullScreen) {
         super(context, true);
 
+        android.content.SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        boolean shareAnonym = preferences.getBoolean("shareAlertAsAnonym", true);
+
         shadowDrawable = context.getResources().getDrawable(R.drawable.sheet_shadow).mutate();
         shadowDrawable.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogBackground), PorterDuff.Mode.MULTIPLY));
 
@@ -247,10 +250,13 @@ public void onClick(View v) {
                             if (frameLayout2.getTag() != null && commentTextView.length() > 0) {
                                 SendMessagesHelper.getInstance(currentAccount).sendMessage(commentTextView.getText().toString(), key, null, null, true, null, null, null);
                             }
-                            for (MessageObject object : sendingMessageObjects) {
-                                SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(object, key);
+                            if (shareAnonym) {
+                                for (MessageObject object : sendingMessageObjects) {
+                                    SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(object, key);
+                                }
+                            } else {
+                                SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingMessageObjects, key);
                             }
-                            // SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingMessageObjects, key);
                         }
                     } else if (sendingText != null) {
                         for (int a = 0; a < selectedDialogs.size(); a++) {
@@ -289,14 +295,19 @@ public void onClick(View v) {
         imageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogIcon), PorterDuff.Mode.MULTIPLY));
         imageView.setScaleType(ImageView.ScaleType.CENTER);
         imageView.setPadding(0, AndroidUtilities.dp(2), 0, 0);
-        frameLayout.addView(imageView, LayoutHelper.createFrame(48 * 2 + 5, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
 
         ImageView emptyCaptionButton = new ImageView(context);
         emptyCaptionButton.setImageResource(R.drawable.photo_paint_text);
         emptyCaptionButton.setColorFilter(emptyCaptionButtonFilterGrey);
         emptyCaptionButton.setScaleType(ImageView.ScaleType.CENTER);
         emptyCaptionButton.setPadding(0, AndroidUtilities.dp(2), 0, 0);
-        frameLayout.addView(emptyCaptionButton, LayoutHelper.createFrame(48, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
+
+        int leftImageView = 48;
+        if (shareAnonym) {
+            leftImageView = 48 * 2 + 5;
+            frameLayout.addView(emptyCaptionButton, LayoutHelper.createFrame(48, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
+        }
+        frameLayout.addView(imageView, LayoutHelper.createFrame(leftImageView, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
         SendMessagesHelper.IS_EMPTY_CAPTION = false;
 
         emptyCaptionButton.setOnClickListener(v -> {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index ec2033de6..dd7b45799 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -53,6 +53,7 @@
     private int inappCameraRow;
     private int photoHasStickerRow;
     private int unmutedOnTopRow;
+    private int shareAnonymRow;
 
     private int syncPinsRow;
     private int pinOrderRow;
@@ -70,6 +71,7 @@ public boolean onFragmentCreate() {
         inappCameraRow = rowCount++;
         photoHasStickerRow = rowCount++;
         unmutedOnTopRow = rowCount++;
+        shareAnonymRow = rowCount++;
 
         emptyRow = rowCount++;
         sectionRow2 = rowCount++;
@@ -152,6 +154,8 @@ public boolean supportsPredictiveItemAnimations() {
             } else if (position == unmutedOnTopRow) {
                 toggleGlobalMainSetting("unmutedOnTop", view, false);
                 MessagesController.getInstance(currentAccount).sortDialogs(null);
+            } else if (position == shareAnonymRow) {
+                toggleGlobalMainSetting("shareAlertAsAnonym", view, true);
             } else if (position == pinOrderRow) {
                 presentFragment(new PinsOrderActivity());
             }
@@ -214,6 +218,9 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         String t = LocaleController.getString("UnmutedOnTop", R.string.UnmutedOnTop);
                         String info = LocaleController.getString("UnmutedOnTopInfo", R.string.UnmutedOnTopInfo);
                         textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("unmutedOnTop", false), true, false);
+                    } else if (position == shareAnonymRow) {
+                        String t = LocaleController.getString("ShareAlertAnonym", R.string.ShareAlertAnonym);
+                        textCell.setTextAndCheck(t, preferences.getBoolean("shareAlertAsAnonym", true), true);
                     }
                     break;
                 }
@@ -237,6 +244,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                         || position == photoHasStickerRow
                         || position == syncPinsRow
                         || position == unmutedOnTopRow
+                        || position == shareAnonymRow
                         || position == pinOrderRow;
             return fork;
         }
@@ -283,6 +291,7 @@ public int getItemViewType(int position) {
                 || position == inappCameraRow
                 || position == syncPinsRow
                 || position == unmutedOnTopRow
+                || position == shareAnonymRow
                 || position == photoHasStickerRow) {
                 return 3;
             } else if (position == sectionRow1
diff --git a/TMessagesProj/src/main/res/values-ru/strings.xml b/TMessagesProj/src/main/res/values-ru/strings.xml
index 6c656ab7c..4b8535ba2 100644
--- a/TMessagesProj/src/main/res/values-ru/strings.xml
+++ b/TMessagesProj/src/main/res/values-ru/strings.xml
@@ -30,5 +30,6 @@
     <string name="PhotoHasStickerInfo">При использовании стикеров на фотографии</string>
     <string name="PinDialogsOrder">Порядок закреп. диалогов</string>
     <string name="PinSection">Закреплённые диалоги</string>
+    <string name="ShareAlertAnonym">Анонимная кнопка Share</string>
     
 </resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 369dc9f26..993d08c52 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -2464,4 +2464,5 @@
     <string name="PhotoHasStickerInfo">When using Stickers on Photo</string>
     <string name="PinDialogsOrder">Pin Dialogs Order</string>
     <string name="PinSection">Pin Dialogs</string>
+    <string name="ShareAlertAnonym">Anonymous Share Button</string>
 </resources>
