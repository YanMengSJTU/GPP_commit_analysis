diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index cca6ff6fb..c29b0f7e2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -69,7 +69,7 @@ public void setAccountsShowed(boolean value, boolean animated) {
         }
         accountsShowed = value;
         if (profileCell != null) {
-            profileCell.setAccountsShowed(accountsShowed);
+            profileCell.setAccountsShowed(accountsShowed, animated);
         }
         MessagesController.getGlobalMainSettings().edit().putBoolean("accountsShowed", accountsShowed).commit();
         if (animated) {
@@ -105,10 +105,6 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
         switch (viewType) {
             case 0:
                 profileCell = new DrawerProfileCell(mContext);
-                profileCell.setOnArrowClickListener(v -> {
-                    DrawerProfileCell drawerProfileCell = (DrawerProfileCell) v;
-                    setAccountsShowed(drawerProfileCell.isAccountsShowed(), true);
-                });
                 view = profileCell;
                 break;
             case 1:
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
index 3276eebbe..66965e10d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
@@ -39,6 +39,7 @@ public DrawerActionCell(Context context) {
         textView.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);
         textView.setCompoundDrawablePadding(AndroidUtilities.dp(29));
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.LEFT | Gravity.TOP, 19, 0, 16, 0));
+        setBackgroundColor(Theme.getColor(Theme.key_chats_menuBackground));
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
index dd0eae431..cf9477526 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
@@ -87,8 +87,9 @@ public DrawerProfileCell(Context context) {
 
         arrowView = new ImageView(context);
         arrowView.setScaleType(ImageView.ScaleType.CENTER);
-        arrowView.setContentDescription(accountsShowed ? LocaleController.getString("AccDescrHideAccounts", R.string.AccDescrHideAccounts) : LocaleController.getString("AccDescrShowAccounts", R.string.AccDescrShowAccounts));
+        arrowView.setImageResource(R.drawable.collapse_down);
         addView(arrowView, LayoutHelper.createFrame(59, 59, Gravity.RIGHT | Gravity.BOTTOM));
+        setArrowState(false);
 
         if (Theme.getEventType() == 0) {
             snowflakesEffect = new SnowflakesEffect();
@@ -170,25 +171,12 @@ protected void onDraw(Canvas canvas) {
         }
     }
 
-    public boolean isAccountsShowed() {
-        return accountsShowed;
-    }
-
-    public void setAccountsShowed(boolean value) {
+    public void setAccountsShowed(boolean value, boolean animated) {
         if (accountsShowed == value) {
             return;
         }
         accountsShowed = value;
-        arrowView.setImageResource(accountsShowed ? R.drawable.collapse_up : R.drawable.collapse_down);
-    }
-
-    public void setOnArrowClickListener(final OnClickListener onClickListener) {
-        arrowView.setOnClickListener(v -> {
-            accountsShowed = !accountsShowed;
-            arrowView.setImageResource(accountsShowed ? R.drawable.collapse_up : R.drawable.collapse_down);
-            onClickListener.onClick(DrawerProfileCell.this);
-            arrowView.setContentDescription(accountsShowed ? LocaleController.getString("AccDescrHideAccounts", R.string.AccDescrHideAccounts) : LocaleController.getString("AccDescrShowAccounts", R.string.AccDescrShowAccounts));
-        });
+        setArrowState(animated);
     }
 
     public void setUser(TLRPC.User user, boolean accounts) {
@@ -196,7 +184,7 @@ public void setUser(TLRPC.User user, boolean accounts) {
             return;
         }
         accountsShowed = accounts;
-        arrowView.setImageResource(accountsShowed ? R.drawable.collapse_up : R.drawable.collapse_down);
+        setArrowState(false);
         nameTextView.setText(UserObject.getUserName(user));
         phoneTextView.setText(PhoneFormat.getInstance().format("+" + user.phone));
         AvatarDrawable avatarDrawable = new AvatarDrawable(user);
@@ -215,4 +203,18 @@ public String applyBackground() {
         }
         return backgroundKey;
     }
+
+    private void setArrowState(boolean animated) {
+        final float rotation = accountsShowed ? 180f : 0f;
+        if (animated) {
+            arrowView.animate().rotation(rotation);
+        } else {
+            arrowView.animate().cancel();
+            arrowView.setRotation(rotation);
+        }
+        arrowView.setContentDescription(accountsShowed
+                ? LocaleController.getString("AccDescrHideAccounts", R.string.AccDescrHideAccounts)
+                : LocaleController.getString("AccDescrShowAccounts", R.string.AccDescrShowAccounts));
+    }
+
 }
