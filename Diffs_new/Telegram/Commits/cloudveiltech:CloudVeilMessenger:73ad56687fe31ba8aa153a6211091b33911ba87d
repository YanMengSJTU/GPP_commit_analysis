diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index d3f256f33..3a4479392 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -121,7 +121,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 968
+    defaultConfig.versionCode = 969
 
     sourceSets.debug {
         manifest.srcFile 'config/debug/AndroidManifest.xml'
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
index c4e613447..61c61a8e4 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
@@ -15,6 +15,11 @@
         public ArrayList<HashMap<Long, Boolean>> users;
         public ArrayList<HashMap<Long, Boolean>> stickers;
 
+        public boolean isValid() {
+            return groups != null &&
+                    bots != null &&
+                    channels != null;
+        }
     }
     public AccessList access;
 
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
index 0b0da447e..dec8d3c67 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
@@ -178,6 +178,10 @@ private void addStickerSetToRequest(TLRPC.StickerSet stickerSet, SettingsRequest
     }
 
     private void processResponse(@NonNull SettingsResponse settingsResponse) {
+        if(settingsResponse.access == null || !settingsResponse.access.isValid()) {
+            return;
+        }
+
         ConcurrentHashMap<Long, Boolean> allowedDialogs = MessagesController.getInstance().allowedDialogs;
         allowedDialogs.clear();
 
@@ -185,13 +189,16 @@ private void processResponse(@NonNull SettingsResponse settingsResponse) {
         appendAllowedDialogs(allowedDialogs, settingsResponse.access.groups);
         appendAllowedDialogs(allowedDialogs, settingsResponse.access.users);
 
-        ConcurrentHashMap<Long, Boolean> allowedBots = MessagesController.getInstance().allowedBots;
-        allowedBots.clear();
-        appendAllowedDialogs(allowedBots, settingsResponse.access.bots);
-
-        StickersQuery.allowedStickerSets.clear();
+        if(settingsResponse.access.bots != null) {
+            ConcurrentHashMap<Long, Boolean> allowedBots = MessagesController.getInstance().allowedBots;
+            allowedBots.clear();
+            appendAllowedDialogs(allowedBots, settingsResponse.access.bots);
+        }
 
-        appendAllowedDialogs(StickersQuery.allowedStickerSets, settingsResponse.access.stickers);
+        if(settingsResponse.access.stickers != null) {
+            StickersQuery.allowedStickerSets.clear();
+            appendAllowedDialogs(StickersQuery.allowedStickerSets, settingsResponse.access.stickers);
+        }
 
         GlobalSecuritySettings.setDisableSecretChat(!settingsResponse.secretChat);
         GlobalSecuritySettings.setMinSecretChatTtl(settingsResponse.secretChatMinimumLength);
