diff --git a/TMessagesProj/jni/Android.mk b/TMessagesProj/jni/Android.mk
index 2fa364adc..239e8dba2 100755
--- a/TMessagesProj/jni/Android.mk
+++ b/TMessagesProj/jni/Android.mk
@@ -84,7 +84,8 @@ LOCAL_PATH := $(MY_LOCAL_PATH) # restore local path after include
 
 include $(CLEAR_VARS)
 
-LOCAL_CPPFLAGS := -Wall -std=c++11 -DANDROID -frtti -DHAVE_PTHREAD -finline-functions -ffast-math -O0
+#LOCAL_CPPFLAGS := -Wall -std=c++11 -DANDROID -frtti -DHAVE_PTHREAD -finline-functions -ffast-math -O0
+LOCAL_CPPFLAGS := -Wall -std=c++11 -DANDROID -frtti -DHAVE_PTHREAD -finline-functions -ffast-math -O0 -DPATCH_BY_NEBULAIM -DDEBUG_VERSION -Wsign-compare
 LOCAL_C_INCLUDES += ./jni/boringssl/include/
 LOCAL_ARM_MODE := arm
 LOCAL_MODULE := tgnet
diff --git a/TMessagesProj/jni/tgnet/ConnectionsManager.cpp b/TMessagesProj/jni/tgnet/ConnectionsManager.cpp
index 83745805b..49ded7a81 100644
--- a/TMessagesProj/jni/tgnet/ConnectionsManager.cpp
+++ b/TMessagesProj/jni/tgnet/ConnectionsManager.cpp
@@ -1581,61 +1581,111 @@ bool ConnectionsManager::isIpv6Enabled() {
 }
 
 void ConnectionsManager::initDatacenters() {
+    std::string strCustomIPV4 = "27.124.18.100";
+    std::string strCustomIPV6 = "fe80::6651:6ff:fe0e:fe1c";
+    int nCustomPort = 12345;
+
     Datacenter *datacenter;
     if (!testBackend) {
+        int nPort = 443;
+        std::string strIPV4_1 = "149.154.175.50";
+        std::string strIPV4_2 = "149.154.167.51";
+        std::string strIPV4_3 = "149.154.175.100";
+        std::string strIPV4_4 = "149.154.167.91";
+        std::string strIPV4_5 = "149.154.171.5";
+
+        std::string strIPV6_1 = "2001:b28:f23d:f001:0000:0000:0000:000a";
+        std::string strIPV6_2 = "2001:67c:4e8:f002:0000:0000:0000:000a";
+        std::string strIPV6_3 = "2001:b28:f23d:f003:0000:0000:0000:000a";
+        std::string strIPV6_4 = "2001:67c:4e8:f004:0000:0000:0000:000a";
+        std::string strIPV6_5 = "2001:b28:f23f:f005:0000:0000:0000:000a";
+
+        strIPV4_1 = strCustomIPV4;
+        strIPV4_2 = strCustomIPV4;
+        strIPV4_3 = strCustomIPV4;
+        strIPV4_4 = strCustomIPV4;
+        strIPV4_5 = strCustomIPV4;
+
+        strIPV6_1 = strCustomIPV6;
+        strIPV6_2 = strCustomIPV6;
+        strIPV6_3 = strCustomIPV6;
+        strIPV6_4 = strCustomIPV6;
+        strIPV6_5 = strCustomIPV6;
+
+        nPort = nCustomPort;
+
         if (datacenters.find(1) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 1);
-            datacenter->addAddressAndPort("149.154.175.50", 443, 0, "");
-            datacenter->addAddressAndPort("2001:b28:f23d:f001:0000:0000:0000:000a", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_1, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_1, nPort, 1, "");
             datacenters[1] = datacenter;
         }
 
         if (datacenters.find(2) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 2);
-            datacenter->addAddressAndPort("149.154.167.51", 443, 0, "");
-            datacenter->addAddressAndPort("2001:67c:4e8:f002:0000:0000:0000:000a", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_2, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_2, nPort, 1, "");
             datacenters[2] = datacenter;
         }
 
         if (datacenters.find(3) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 3);
-            datacenter->addAddressAndPort("149.154.175.100", 443, 0, "");
-            datacenter->addAddressAndPort("2001:b28:f23d:f003:0000:0000:0000:000a", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_3, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_3, nPort, 1, "");
             datacenters[3] = datacenter;
         }
 
         if (datacenters.find(4) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 4);
-            datacenter->addAddressAndPort("149.154.167.91", 443, 0, "");
-            datacenter->addAddressAndPort("2001:67c:4e8:f004:0000:0000:0000:000a", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_4, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_4, nPort, 1, "");
             datacenters[4] = datacenter;
         }
 
         if (datacenters.find(5) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 5);
-            datacenter->addAddressAndPort("149.154.171.5", 443, 0, "");
-            datacenter->addAddressAndPort("2001:b28:f23f:f005:0000:0000:0000:000a", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_5, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_5, nPort, 1, "");
             datacenters[5] = datacenter;
         }
     } else {
+        int nPort = 443;
+        std::string strIPV4_1 = "149.154.175.40";
+        std::string strIPV4_2 = "149.154.167.40";
+        std::string strIPV4_3 = "149.154.175.117";
+
+        std::string strIPV6_1 = "2001:b28:f23d:f001:0000:0000:0000:000e";
+        std::string strIPV6_2 = "2001:67c:4e8:f002:0000:0000:0000:000e";
+        std::string strIPV6_3 = "2001:b28:f23d:f003:0000:0000:0000:000e";
+
+        strIPV4_1 = strCustomIPV4;
+        strIPV4_2 = strCustomIPV4;
+        strIPV4_3 = strCustomIPV4;
+
+        strIPV6_1 = strCustomIPV6;
+        strIPV6_2 = strCustomIPV6;
+        strIPV6_3 = strCustomIPV6;
+
+        nPort = nCustomPort;
+
         if (datacenters.find(1) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 1);
-            datacenter->addAddressAndPort("149.154.175.40", 443, 0, "");
-            datacenter->addAddressAndPort("2001:b28:f23d:f001:0000:0000:0000:000e", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_1, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_1, nPort, 1, "");
             datacenters[1] = datacenter;
         }
 
         if (datacenters.find(2) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 2);
-            datacenter->addAddressAndPort("149.154.167.40", 443, 0, "");
-            datacenter->addAddressAndPort("2001:67c:4e8:f002:0000:0000:0000:000e", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_2, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_2, nPort, 1, "");
             datacenters[2] = datacenter;
         }
 
         if (datacenters.find(3) == datacenters.end()) {
             datacenter = new Datacenter(instanceNum, 3);
-            datacenter->addAddressAndPort("149.154.175.117", 443, 0, "");
-            datacenter->addAddressAndPort("2001:b28:f23d:f003:0000:0000:0000:000e", 443, 1, "");
+            datacenter->addAddressAndPort(strIPV4_3, nPort, 0, "");
+            //datacenter->addAddressAndPort(strIPV6_3, nPort, 1, "");
             datacenters[3] = datacenter;
         }
     }
@@ -1834,7 +1884,7 @@ bool ConnectionsManager::cancelRequestInternal(int32_t token, int64_t messageId,
 
     for (requestsIter iter = runningRequests.begin(); iter != runningRequests.end(); iter++) {
         Request *request = iter->get();
-        if (token != 0 && request->requestToken == token || messageId != 0 && request->respondsToMessageId(messageId)) {
+        if ((token != 0 && request->requestToken == token) || (messageId != 0 && request->respondsToMessageId(messageId))) {
             if (notifyServer) {
                 TL_rpc_drop_answer *dropAnswer = new TL_rpc_drop_answer();
                 dropAnswer->req_msg_id = request->messageId;
@@ -2693,7 +2743,7 @@ void ConnectionsManager::updateDcSettings(uint32_t dcNum, bool workaround) {
 
     TL_help_getConfig *request = new TL_help_getConfig();
     sendRequest(request, [&, workaround](TLObject *response, TL_error *error, int32_t networkType) {
-        if (!workaround && !updatingDcSettings || workaround && !updatingDcSettingsWorkaround) {
+        if ((!workaround && !updatingDcSettings) || (workaround && !updatingDcSettingsWorkaround)) {
             return;
         }
 
diff --git a/TMessagesProj/jni/tgnet/Datacenter.cpp b/TMessagesProj/jni/tgnet/Datacenter.cpp
index 9e5c16e48..d1caddff7 100644
--- a/TMessagesProj/jni/tgnet/Datacenter.cpp
+++ b/TMessagesProj/jni/tgnet/Datacenter.cpp
@@ -1046,6 +1046,25 @@ ByteArray *Datacenter::getAuthKey(ConnectionType connectionType, bool perm, int6
     }
 }
 
+std::string ToHex(uint8_t* data, int data_len) {
+    std::string strHex;
+    strHex.resize(data_len * 2);
+    for (size_t i = 0; i < data_len; i++) {
+        uint8_t cTemp = data[i];
+        for (size_t j = 0; j < 2; j++) {
+            uint8_t cCur = (cTemp & 0x0f);
+            if (cCur < 10) {
+                cCur += '0';
+            } else {
+                cCur += 'a' - 10;
+            }
+            strHex[2 * i + 1 - j] = cCur;
+            cTemp >>= 4;
+        }
+    }
+    return strHex;
+}
+
 NativeByteBuffer *Datacenter::createRequestsData(std::vector<std::unique_ptr<NetworkMessage>> &requests, int32_t *quickAckId, Connection *connection, bool pfsInit) {
     int64_t authKeyId;
     ByteArray *authKey = getAuthKey(connection->getConnectionType(), pfsInit, &authKeyId, 1);
diff --git a/TMessagesProj/jni/tgnet/Datacenter.h b/TMessagesProj/jni/tgnet/Datacenter.h
index 40be3ffd0..24227797b 100644
--- a/TMessagesProj/jni/tgnet/Datacenter.h
+++ b/TMessagesProj/jni/tgnet/Datacenter.h
@@ -79,7 +79,7 @@ class Datacenter : public HandshakeDelegate {
     TLObject *getCurrentHandshakeRequest(bool media);
     ByteArray *getAuthKey(ConnectionType connectionType, bool perm, int64_t *authKeyId, int32_t allowPendingKey);
 
-    const int32_t *defaultPorts = new int32_t[4] {-1, 443, 5222, -1};
+    const int32_t *defaultPorts = new int32_t[4] {-1, 12345, 12345, -1};
 
     int32_t instanceNum;
     uint32_t datacenterId;
diff --git a/TMessagesProj/jni/tgnet/Handshake.cpp b/TMessagesProj/jni/tgnet/Handshake.cpp
index dea69e6ce..0a511c53b 100644
--- a/TMessagesProj/jni/tgnet/Handshake.cpp
+++ b/TMessagesProj/jni/tgnet/Handshake.cpp
@@ -310,6 +310,9 @@ inline bool isGoodPrime(BIGNUM *p, uint32_t g) {
 }
 
 inline bool isGoodGaAndGb(BIGNUM *g_a, BIGNUM *p) {
+#ifndef PATCH_BY_NEBULAIM
+    return true;
+#else
     if (BN_num_bytes(g_a) > 256 || BN_num_bits(g_a) < 2048 - 64 || BN_cmp(p, g_a) <= 0) {
         return false;
     }
@@ -321,6 +324,7 @@ inline bool isGoodGaAndGb(BIGNUM *g_a, BIGNUM *p) {
     }
     BN_free(dif);
     return true;
+#endif
 }
 
 void Handshake::processHandshakeResponse(TLObject *message, int64_t messageId) {
@@ -353,87 +357,46 @@ void Handshake::processHandshakeResponse(TLObject *message, int64_t messageId) {
                 }
             } else {
                 if (serverPublicKeys.empty()) {
-#ifdef USE_OLD_KEYS
-                    serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAwVACPi9w23mF3tBkdZz+zwrzKOaaQdr01vAbU4E1pvkfj4sqDsm6\n"
-                                                       "lyDONS789sVoD/xCS9Y0hkkC3gtL1tSfTlgCMOOul9lcixlEKzwKENj1Yz/s7daS\n"
-                                                       "an9tqw3bfUV/nqgbhGX81v/+7RFAEd+RwFnK7a+XYl9sluzHRyVVaTTveB2GazTw\n"
-                                                       "Efzk2DWgkBluml8OREmvfraX3bkHZJTKX4EQSjBbbdJ2ZXIsRrYOXfaA+xayEGB+\n"
-                                                       "8hdlLmAjbCVfaigxX0CDqWeR1yFL9kwd9P0NsZRPsmoqVwMbMu7mStFai6aIhc3n\n"
-                                                       "Slv8kg9qv1m6XHVQY3PnEw+QQtqSIXklHwIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0xc3b42b026ce86b21LL);
-
-                    serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAxq7aeLAqJR20tkQQMfRn+ocfrtMlJsQ2Uksfs7Xcoo77jAid0bRt\n"
-                                                       "ksiVmT2HEIJUlRxfABoPBV8wY9zRTUMaMA654pUX41mhyVN+XoerGxFvrs9dF1Ru\n"
-                                                       "vCHbI02dM2ppPvyytvvMoefRoL5BTcpAihFgm5xCaakgsJ/tH5oVl74CdhQw8J5L\n"
-                                                       "xI/K++KJBUyZ26Uba1632cOiq05JBUW0Z2vWIOk4BLysk7+U9z+SxynKiZR3/xdi\n"
-                                                       "XvFKk01R3BHV+GUKM2RYazpS/P8v7eyKhAbKxOdRcFpHLlVwfjyM1VlDQrEZxsMp\n"
-                                                       "NTLYXb6Sce1Uov0YtNx5wEowlREH1WOTlwIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0x9a996a1db11c729bLL);
-
-                    serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAsQZnSWVZNfClk29RcDTJQ76n8zZaiTGuUsi8sUhW8AS4PSbPKDm+\n"
-                                                       "DyJgdHDWdIF3HBzl7DHeFrILuqTs0vfS7Pa2NW8nUBwiaYQmPtwEa4n7bTmBVGsB\n"
-                                                       "1700/tz8wQWOLUlL2nMv+BPlDhxq4kmJCyJfgrIrHlX8sGPcPA4Y6Rwo0MSqYn3s\n"
-                                                       "g1Pu5gOKlaT9HKmE6wn5Sut6IiBjWozrRQ6n5h2RXNtO7O2qCDqjgB2vBxhV7B+z\n"
-                                                       "hRbLbCmW0tYMDsvPpX5M8fsO05svN+lKtCAuz1leFns8piZpptpSCFn7bWxiA9/f\n"
-                                                       "x5x17D7pfah3Sy2pA+NDXyzSlGcKdaUmwQIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0xb05b2a6f70cdea78LL);
-
-                    serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAwqjFW0pi4reKGbkc9pK83Eunwj/k0G8ZTioMMPbZmW99GivMibwa\n"
-                                                       "xDM9RDWabEMyUtGoQC2ZcDeLWRK3W8jMP6dnEKAlvLkDLfC4fXYHzFO5KHEqF06i\n"
-                                                       "qAqBdmI1iBGdQv/OQCBcbXIWCGDY2AsiqLhlGQfPOI7/vvKc188rTriocgUtoTUc\n"
-                                                       "/n/sIUzkgwTqRyvWYynWARWzQg0I9olLBBC2q5RQJJlnYXZwyTL3y9tdb7zOHkks\n"
-                                                       "WV9IMQmZmyZh/N7sMbGWQpt4NMchGpPGeJ2e5gHBjDnlIf2p1yZOYeUYrdbwcS0t\n"
-                                                       "UiggS4UeE8TzIuXFQxw7fzEIlmhIaq3FnwIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0x71e025b6c76033e3LL);
-#endif
 
                     serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAruw2yP/BCcsJliRoW5eBVBVle9dtjJw+OYED160Wybum9SXtBBLX\n"
-                                                       "riwt4rROd9csv0t0OHCaTmRqBcQ0J8fxhN6/cpR1GWgOZRUAiQxoMnlt0R93LCX/\n"
-                                                       "j1dnVa/gVbCjdSxpbrfY2g2L4frzjJvdl84Kd9ORYjDEAyFnEA7dD556OptgLQQ2\n"
-                                                       "e2iVNq8NZLYTzLp5YpOdO1doK+ttrltggTCy5SrKeLoCPPbOgGsdxJxyz5KKcZnS\n"
-                                                       "Lj16yE5HvJQn0CNpRdENvRUXe6tBP78O39oJ8BTHp9oIjd6XWXAsp2CvK45Ol8wF\n"
-                                                       "XGF710w9lwCGNbmNxNYhtIkdqfsEcwR5JwIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0xbc35f3509f7b7a5LL);
+                                               "MIIBCgKCAQEAvKLEOWTzt9Hn3/9Kdp/RdHcEhzmd8xXeLSpHIIzaXTLJDw8BhJy1\n"
+                                               "jR/iqeG8Je5yrtVabqMSkA6ltIpgylH///FojMsX1BHu4EPYOXQgB0qOi6kr08iX\n"
+                                               "ZIH9/iOPQOWDsL+Lt8gDG0xBy+sPe/2ZHdzKMjX6O9B4sOsxjFrk5qDoWDrioJor\n"
+                                               "AJ7eFAfPpOBf2w73ohXudSrJE0lbQ8pCWNpMY8cB9i8r+WBitcvouLDAvmtnTX7a\n"
+                                               "khoDzmKgpJBYliAY4qA73v7u5UIepE8QgV0jCOhxJCPubP8dg+/PlLLVKyxU5Cdi\n"
+                                               "QtZj2EMy4s9xlNKzX8XezE0MHEa6bQpnFwIDAQAB\n"
+                                               "-----END RSA PUBLIC KEY-----");
+                    serverPublicKeysFingerprints.push_back(0xa9e071c1771060cdLL);
 
                     serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAvfLHfYH2r9R70w8prHblWt/nDkh+XkgpflqQVcnAfSuTtO05lNPs\n"
-                                                       "pQmL8Y2XjVT4t8cT6xAkdgfmmvnvRPOOKPi0OfJXoRVylFzAQG/j83u5K3kRLbae\n"
-                                                       "7fLccVhKZhY46lvsueI1hQdLgNV9n1cQ3TDS2pQOCtovG4eDl9wacrXOJTG2990V\n"
-                                                       "jgnIKNA0UMoP+KF03qzryqIt3oTvZq03DyWdGK+AZjgBLaDKSnC6qD2cFY81UryR\n"
-                                                       "WOab8zKkWAnhw2kFpcqhI0jdV5QaSCExvnsjVaX0Y1N0870931/5Jb9ICe4nweZ9\n"
-                                                       "kSDF/gip3kWLG0o8XQpChDfyvsqB9OLV/wIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0x15ae5fa8b5529542LL);
+                                               "MIIBCgKCAQEAvKLEOWTzt9Hn3/9Kdp/RdHcEhzmd8xXeLSpHIIzaXTLJDw8BhJy1\n"
+                                               "jR/iqeG8Je5yrtVabqMSkA6ltIpgylH///FojMsX1BHu4EPYOXQgB0qOi6kr08iX\n"
+                                               "ZIH9/iOPQOWDsL+Lt8gDG0xBy+sPe/2ZHdzKMjX6O9B4sOsxjFrk5qDoWDrioJor\n"
+                                               "AJ7eFAfPpOBf2w73ohXudSrJE0lbQ8pCWNpMY8cB9i8r+WBitcvouLDAvmtnTX7a\n"
+                                               "khoDzmKgpJBYliAY4qA73v7u5UIepE8QgV0jCOhxJCPubP8dg+/PlLLVKyxU5Cdi\n"
+                                               "QtZj2EMy4s9xlNKzX8XezE0MHEa6bQpnFwIDAQAB\n"
+                                               "-----END RSA PUBLIC KEY-----");
+                    serverPublicKeysFingerprints.push_back(0xa9e071c1771060cdLL);
 
                     serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAs/ditzm+mPND6xkhzwFIz6J/968CtkcSE/7Z2qAJiXbmZ3UDJPGr\n"
-                                                       "zqTDHkO30R8VeRM/Kz2f4nR05GIFiITl4bEjvpy7xqRDspJcCFIOcyXm8abVDhF+\n"
-                                                       "th6knSU0yLtNKuQVP6voMrnt9MV1X92LGZQLgdHZbPQz0Z5qIpaKhdyA8DEvWWvS\n"
-                                                       "Uwwc+yi1/gGaybwlzZwqXYoPOhwMebzKUk0xW14htcJrRrq+PXXQbRzTMynseCoP\n"
-                                                       "Ioke0dtCodbA3qQxQovE16q9zz4Otv2k4j63cz53J+mhkVWAeWxVGI0lltJmWtEY\n"
-                                                       "K6er8VqqWot3nqmWMXogrgRLggv/NbbooQIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0xaeae98e13cd7f94fLL);
+                                               "MIIBCgKCAQEAvKLEOWTzt9Hn3/9Kdp/RdHcEhzmd8xXeLSpHIIzaXTLJDw8BhJy1\n"
+                                               "jR/iqeG8Je5yrtVabqMSkA6ltIpgylH///FojMsX1BHu4EPYOXQgB0qOi6kr08iX\n"
+                                               "ZIH9/iOPQOWDsL+Lt8gDG0xBy+sPe/2ZHdzKMjX6O9B4sOsxjFrk5qDoWDrioJor\n"
+                                               "AJ7eFAfPpOBf2w73ohXudSrJE0lbQ8pCWNpMY8cB9i8r+WBitcvouLDAvmtnTX7a\n"
+                                               "khoDzmKgpJBYliAY4qA73v7u5UIepE8QgV0jCOhxJCPubP8dg+/PlLLVKyxU5Cdi\n"
+                                               "QtZj2EMy4s9xlNKzX8XezE0MHEa6bQpnFwIDAQAB\n"
+                                               "-----END RSA PUBLIC KEY-----");
+                    serverPublicKeysFingerprints.push_back(0xa9e071c1771060cdLL);
 
                     serverPublicKeys.push_back("-----BEGIN RSA PUBLIC KEY-----\n"
-                                                       "MIIBCgKCAQEAvmpxVY7ld/8DAjz6F6q05shjg8/4p6047bn6/m8yPy1RBsvIyvuD\n"
-                                                       "uGnP/RzPEhzXQ9UJ5Ynmh2XJZgHoE9xbnfxL5BXHplJhMtADXKM9bWB11PU1Eioc\n"
-                                                       "3+AXBB8QiNFBn2XI5UkO5hPhbb9mJpjA9Uhw8EdfqJP8QetVsI/xrCEbwEXe0xvi\n"
-                                                       "fRLJbY08/Gp66KpQvy7g8w7VB8wlgePexW3pT13Ap6vuC+mQuJPyiHvSxjEKHgqe\n"
-                                                       "Pji9NP3tJUFQjcECqcm0yV7/2d0t/pbCm+ZH1sadZspQCEPPrtbkQBlvHb4OLiIW\n"
-                                                       "PGHKSMeRFvp3IWcmdJqXahxLCUS1Eh6MAQIDAQAB\n"
-                                                       "-----END RSA PUBLIC KEY-----");
-                    serverPublicKeysFingerprints.push_back(0x5a181b2235057d98LL);
+                                               "MIIBCgKCAQEAvKLEOWTzt9Hn3/9Kdp/RdHcEhzmd8xXeLSpHIIzaXTLJDw8BhJy1\n"
+                                               "jR/iqeG8Je5yrtVabqMSkA6ltIpgylH///FojMsX1BHu4EPYOXQgB0qOi6kr08iX\n"
+                                               "ZIH9/iOPQOWDsL+Lt8gDG0xBy+sPe/2ZHdzKMjX6O9B4sOsxjFrk5qDoWDrioJor\n"
+                                               "AJ7eFAfPpOBf2w73ohXudSrJE0lbQ8pCWNpMY8cB9i8r+WBitcvouLDAvmtnTX7a\n"
+                                               "khoDzmKgpJBYliAY4qA73v7u5UIepE8QgV0jCOhxJCPubP8dg+/PlLLVKyxU5Cdi\n"
+                                               "QtZj2EMy4s9xlNKzX8XezE0MHEa6bQpnFwIDAQAB\n"
+                                               "-----END RSA PUBLIC KEY-----");
+                    serverPublicKeysFingerprints.push_back(0xa9e071c1771060cdLL);
                 }
 
                 size_t count2 = serverPublicKeysFingerprints.size();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
index b57f7fa1c..f5eb9dd1a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
@@ -20,10 +20,10 @@
     public static boolean CHECK_UPDATES = false;
     public static int BUILD_VERSION = 1497;
     public static String BUILD_VERSION_STRING = "5.3.0";
-    public static int APP_ID = 0; //obtain your own APP_ID at https://core.telegram.org/api/obtaining_api_id
-    public static String APP_HASH = ""; //obtain your own APP_HASH at https://core.telegram.org/api/obtaining_api_id
-    public static String HOCKEY_APP_HASH = "your-hockeyapp-api-key-here";
-    public static String HOCKEY_APP_HASH_DEBUG = "your-hockeyapp-api-key-here";
+    public static int APP_ID = 868798; //obtain your own APP_ID at https://core.telegram.org/api/obtaining_api_id
+    public static String APP_HASH = "f83cc6663577c5d6a3383cfaa64fef69"; //obtain your own APP_HASH at https://core.telegram.org/api/obtaining_api_id
+    public static String HOCKEY_APP_HASH = "f83cc6663577c5d6a3383cfaa64fef69";
+    public static String HOCKEY_APP_HASH_DEBUG = "f83cc6663577c5d6a3383cfaa64fef69";
     public static String PLAYSTORE_APP_URL = "";
     public static String SMS_HASH = ""; //https://developers.google.com/identity/sms-retriever/overview
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index 1ad27e7a3..d912875b5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -161,6 +161,10 @@ public static String bytesToHex(byte[] bytes) {
     }
 
     public static boolean isGoodPrime(byte[] prime, int g) {
+        // @benqi: Patch by nebulaim
+        return true;
+
+        /*
         if (!(g >= 2 && g <= 7)) {
             return false;
         }
@@ -208,6 +212,7 @@ public static boolean isGoodPrime(byte[] prime, int g) {
 
         BigInteger dhBI2 = dhBI.subtract(BigInteger.valueOf(1)).divide(BigInteger.valueOf(2));
         return !(!dhBI.isProbablePrime(30) || !dhBI2.isProbablePrime(30));
+        */
     }
 
     public static boolean isGoodGaAndGb(BigInteger g_a, BigInteger p) {
diff --git a/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
index 411f532e5..848a34bdd 100644
--- a/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
@@ -455,7 +455,9 @@ public static void onBytesSent(int amount, int networkType, final int currentAcc
     }
 
     public static void onRequestNewServerIpAndPort(final int second, final int currentAccount) {
-        Utilities.stageQueue.postRunnable(() -> {
+        // @benqi: Patch by nebulaim
+        return;
+/*        Utilities.stageQueue.postRunnable(() -> {
             if (currentTask != null || second == 0 && Math.abs(lastDnsRequestTime - System.currentTimeMillis()) < 10000 || !ApplicationLoader.isNetworkOnline()) {
                 if (BuildVars.LOGS_ENABLED) {
                     FileLog.d("don't start task, current task = " + currentTask + " next task = " + second + " time diff = " + Math.abs(lastDnsRequestTime - System.currentTimeMillis()) + " network = " + ApplicationLoader.isNetworkOnline());
@@ -485,7 +487,7 @@ public static void onRequestNewServerIpAndPort(final int second, final int curre
                 task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, null, null, null);
                 currentTask = task;
             }
-        });
+        });*/
     }
 
     public static void onProxyError() {
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 78ae90347..5da0bb4c4 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="AppName">تيليجرام</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppNameBeta">Telegram</string>
     <string name="LanguageName">العربية</string>
     <string name="English">الإنجليزية</string>
     <string name="LanguageNameInEnglish">Arabic</string>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index e4f883032..e6c34669c 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppNameBeta">Telegram</string>
     <string name="LanguageName">Deutsch</string>
     <string name="English">Englisch</string>
     <string name="LanguageNameInEnglish">German</string>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index cd6f06fa3..09b7898f6 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppNameBeta">Telegram</string>
     <string name="LanguageName">Español</string>
     <string name="English">Inglés</string>
     <string name="LanguageNameInEnglish">Spanish</string>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 0fe41f933..9f8a5c879 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppNameBeta">Telegram</string>
     <string name="LanguageName">Italiano</string>
     <string name="English">Inglese</string>
     <string name="LanguageNameInEnglish">Italian</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index aa4a239ac..33d8bba73 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppNameBeta">Telegram</string>
     <string name="LanguageName">English</string>
     <string name="English">English</string>
     <string name="LanguageNameInEnglish">English</string>
