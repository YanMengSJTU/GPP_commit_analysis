diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 388907731..02a564e35 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -133,7 +133,7 @@ public void deletePost(final String did, int offset, final boolean onlyHistory)
 
 
 
-    public void loadPosts(final int offset, final int serverOffset, final int count, boolean fromCache) {
+    public void loadPosts(final int offset, final int count, boolean fromCache) {
         if (loadingPosts) {
             return;
         }
@@ -156,7 +156,7 @@ public void processLoadedPosts(PostResponse postResponse,  final int offset,  fi
         loadingPosts = false;
         //TODO notify Activity to run postsAdapter.notifyDataSetChanged();
         if (!postResponse.getPosts().isEmpty()) {
-            NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);
         }
 
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
index 2a8467876..a56cc3129 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
@@ -23,7 +23,6 @@
 import org.telegram.ui.Cells.HashtagSearchCell;
 import org.telegram.ui.Cells.LoadingCell;
 import org.telegram.ui.Cells.PostCell;
-import org.telegram.ui.Cells.ProfileSearchCell;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -37,7 +36,7 @@
     private Timer searchTimer;
     private ArrayList<Object> searchResult = new ArrayList<>();
     private ArrayList<String> searchResultHashtags = new ArrayList<>();
-    private String lastSearchText;
+    //    private String lastSearchText;
     private long reqId = 0;
     private int lastReqId;
     private PostsActivitySearchAdapterDelegate delegate;
@@ -68,11 +67,12 @@ public void setDelegate(PostsActivitySearchAdapterDelegate delegate) {
     }
 
     public boolean isPostsSearchEndReached() {
-        return postsSearchEndReached;
+        return postsSearchEndReached; //TODO was it?
     }
 
-    public void loadMoreSearchMessages() {
-        searchMessagesInternal(lastPostsSearchString);
+    public void loadMoreSearchPosts() {
+//        searchPostsInternal(lastPostsSearchString);
+        searchPostsInternal(lastPostsSearchString, this.searchResult.size(), 20);
     }
 
     public String getLastSearchString() {
@@ -85,7 +85,8 @@ private void searchPostsInternal(final String query, final int offset, final int
         if (needPostsSearch == 0) {
             return;
         }
-
+        lastPostsSearchString = query;
+        //TODO move to controller ?
         PostResponse response = PostServiceMock.getPosts("location", query, offset, count);
         searchResult.addAll(PostServiceMock.convertPost(response.getPosts()));
         //TODO notify Activity to run postsAdapter.notifyDataSetChanged();
@@ -120,7 +121,7 @@ private void searchPostsInternal(final String query, final int searchId) {
     }
 
 
-    private void searchMessagesInternal(final String query) {
+    private void searchPostsInternal(final String query) {
 
     }
 
@@ -130,7 +131,7 @@ private void updateSearchResults(final ArrayList<Object> result, final ArrayList
     }
 
     public String getLastSearchText() {
-        return lastSearchText;
+        return lastPostsSearchString;
     }
 
     public boolean isGlobalSearch(int i) {
@@ -158,23 +159,24 @@ protected void setHashtags(ArrayList<HashtagObject> arrayList, HashMap<String, H
 
 
     public void searchPosts(final String query) {
-        if (query != null && lastSearchText != null && query.equals(lastSearchText)) {
+        if (query != null && lastPostsSearchString != null && query.equals(lastPostsSearchString)) {
             return;
         }
 
         // mock
         searchResult.clear();
+        //TODO move to controller.
         PostResponse response = PostServiceMock.getPosts("location", query, 0, 20);
         searchResult.addAll(PostServiceMock.convertPost(response.getPosts()));
         //TODO notify Activity to run postsAdapter.notifyDataSetChanged();
-//        if (!response.getPosts().isEmpty()) {
-        NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);
-//        }
+        if (!response.getPosts().isEmpty()) {
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);
+        }
         if (delegate != null) {
             delegate.searchStateChanged(false);
         }
 
-        lastSearchText = query;
+        lastPostsSearchString = query;
 
         //TODO mock a
         if (true) {
@@ -222,7 +224,7 @@ public void searchPosts(final String query) {
 //            if (needPostsSearch != 2) {
 //                queryServerSearch(null);
 //            }
-//            searchMessagesInternal(null);
+//            searchPostsInternal(null);
 //            notifyDataSetChanged();
 //        } else {
 //            if (query.startsWith("#") && query.length() == 1) {
@@ -265,7 +267,7 @@ public void searchPosts(final String query) {
 //                            if (needPostsSearch != 2) {
 //                                queryServerSearch(query);
 //                            }
-//                            searchMessagesInternal(query);
+//                            searchPostsInternal(query);
 //                        }
 //                    });
 //                }
@@ -300,10 +302,11 @@ public long getItemId(int i) {
     @Override
     public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
         View view = null;
+        //TODO fix it. I use 0 and 2 for PostCell. 0 - was ProfileCell
         switch (viewType) {
             case 0:
-                view = new ProfileSearchCell(mContext);
-                view.setBackgroundResource(R.drawable.list_selector);
+                view = new PostCell(mContext);
+//                view.setBackgroundResource(R.drawable.list_selector);
                 break;
             case 1:
                 view = new GreySectionCell(mContext);
@@ -325,7 +328,25 @@ public long getItemId(int i) {
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         //TODO
+        // onCreateViewHolder befor that. we create crate and put item view of PostCell or other
         switch (holder.getItemViewType()) {
+            case 0: {
+//                PostCell cell = (PostCell) holder.itemView;
+//                cell.useSeparator = (position != getItemCount() - 1);
+//                PostObject postObject = (PostObject) searchResult.get(position);
+                //TODO open ?? wie in PostsAdapter.
+//                if (AndroidUtilities.isTablet()) {
+//                    cell.setPostSelected(!StringUtils.isEmpty(postObject.getId()) && postObject.getId().equals(openedPostId));
+//                }
+//                cell.setPostObject(postObject, position, true);
+
+                //Copied from 2.
+                PostCell cell = (PostCell) holder.itemView;
+                cell.useSeparator = (position != getItemCount() - 1);
+                PostObject postObject = (PostObject) getItem(position);
+                cell.setPost(postObject.getId(), postObject, postObject.getCreatedDate());
+                break;
+            }
             case 1: {
                 GreySectionCell cell = (GreySectionCell) holder.itemView;
                 if (!searchResultHashtags.isEmpty()) {
@@ -356,8 +377,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         }
     }
 
+    //    getItemViewType() without parameters in holder ?
     @Override
     public int getItemViewType(int i) {
+        //TODO hashtag. delete probably
         if (!searchResultHashtags.isEmpty()) {
             return i == 0 ? 1 : 4;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
index e0cd630ca..ed4433b9e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
@@ -164,7 +164,7 @@ public PostCell(Context context) {
         avatarImage.setRoundRadius(AndroidUtilities.dp(26));
         avatarDrawable = new AvatarDrawable();
     }
-
+//TODO. I have 2 method for setting posts. setPostObject and setPost.
     public void setPostObject(PostObject postObject, int i, boolean server) {
         //TODO I should store id or object. And retrieve from Controller by id.
         currentPostId = postObject.getId();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 380bba79d..d0b3b9000 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -118,6 +118,8 @@ public boolean onFragmentCreate() {
         }
 
         if (searchString == null) {
+            //TODO learn NotificationCenter class especiallu case when post notification. There is different situations when notify when animation or not.
+            NotificationCenter.getInstance().addObserver(this, NotificationCenter.postsNeedReload);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.dialogsNeedReload);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.emojiDidLoaded);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.updateInterfaces);
@@ -134,7 +136,7 @@ public boolean onFragmentCreate() {
 
 
         if (!postsLoaded) {
-            PostsController.getInstance().loadPosts(0, 0, 100, true);
+            PostsController.getInstance().loadPosts(0, 20, true);
             ContactsController.getInstance().checkInviteText();
             postsLoaded = true;
         }
@@ -192,6 +194,7 @@ public void onSearchExpand() {
 
             @Override
             public boolean onSearchCollapse() {
+                //TODO search posts.
                 if (searchString != null) {
                     finishFragment();
                     return false;
@@ -227,6 +230,7 @@ public boolean onSearchCollapse() {
 
             @Override
             public void onTextChanged(EditText editText) {
+                //TODO search posts.
                 String text = editText.getText().toString();
                 if (text.length() != 0) {
                     searchWas = true;
@@ -524,14 +528,14 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
 
                 if (searching && searchWas) {
                     if (visibleItemCount > 0 && layoutManager.findLastVisibleItemPosition() == totalItemCount - 1 && !postsSearchAdapter.isPostsSearchEndReached()) {
-                        postsSearchAdapter.loadMoreSearchMessages();
+                        postsSearchAdapter.loadMoreSearchPosts();
                     }
                     return;
                 }
                 //TODO fix it.
                 if (visibleItemCount > 0) {
-                    if (layoutManager.findLastVisibleItemPosition() == PostsController.getInstance().postObjects.size()) {
-                        PostsController.getInstance().loadPosts(PostsController.getInstance().postObjects.size(), PostsController.getInstance().postObjects.size(), 100, true);
+                    if (layoutManager.findLastVisibleItemPosition() == PostsController.getInstance().postObjects.size() - 1) {
+                        PostsController.getInstance().loadPosts(PostsController.getInstance().postObjects.size(), 20, true);
                     }
                 }
 
@@ -638,7 +642,7 @@ public void onGlobalLayout() {
     @Override
     @SuppressWarnings("unchecked")
     public void didReceivedNotification(int id, Object... args) {
-        if (id == NotificationCenter.dialogsNeedReload) {
+        if (id == NotificationCenter.postsNeedReload) {
             if (postsAdapter != null) {
                 if (postsAdapter.isDataSetChanged()) {
                     postsAdapter.notifyDataSetChanged();
