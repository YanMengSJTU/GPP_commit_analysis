diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index 087bf70f7..835e1c877 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -25,12 +25,20 @@
 import android.support.v4.app.NotificationCompat;
 import android.support.v4.app.NotificationManagerCompat;
 import android.support.v4.app.RemoteInput;
+import android.text.Editable;
+import android.text.TextUtils;
+import android.widget.RemoteViews;
+import android.widget.RemoteViewsService;
 
 import org.json.JSONArray;
 import org.json.JSONObject;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
+
+import com.aniways.Aniways;
 import com.aniways.anigram.messenger.R;
+import com.aniways.data.AniwaysStatics;
+
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.ApplicationLoader;
@@ -96,7 +104,7 @@ public void setOpennedDialogId(long dialog_id) {
         openned_dialog_id = dialog_id;
     }
 
-    private String getStringForMessage(MessageObject messageObject, boolean shortMessage) {
+    private CharSequence getStringForMessage(MessageObject messageObject, boolean shortMessage) {
         long dialog_id = messageObject.messageOwner.dialog_id;
         int chat_id = messageObject.messageOwner.to_id.chat_id;
         int user_id = messageObject.messageOwner.to_id.user_id;
@@ -126,7 +134,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
             }
         }
 
-        String msg = null;
+        CharSequence msg = null;
         if ((int)dialog_id != 0) {
             if (chat_id == 0 && user_id != 0) {
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
@@ -203,7 +211,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
                                 msg = LocaleController.formatString("NotificationGroupKickMember", R.string.NotificationGroupKickMember, ContactsController.formatName(user.first_name, user.last_name), chat.title, ContactsController.formatName(u2.first_name, u2.last_name));
                             }
                         } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatCreate) {
-                            msg = messageObject.messageText.toString();
+                            msg = messageObject.messageText;
                         }
                     } else {
                         if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty) {
@@ -237,6 +245,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
         } else {
             msg = LocaleController.getString("YouHaveNewMessage", R.string.YouHaveNewMessage);
         }
+        msg = Aniways.getOriginalString(AniwaysStatics.getApplicationContext(), Aniways.decodeMessage(msg, null, null, true));
         return msg;
     }
 
@@ -441,10 +450,10 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             bundle.putString(NotificationCompat.EXTRA_PEOPLE, );
             mBuilder.setExtras()*/
 
-            String lastMessage = null;
-            String lastMessageFull = null;
+            CharSequence lastMessage = null;
+            CharSequence lastMessageFull = null;
             if (pushMessages.size() == 1) {
-                String message = lastMessageFull = getStringForMessage(pushMessages.get(0), false);
+                CharSequence message = lastMessageFull = getStringForMessage(pushMessages.get(0), false);
                 //lastMessage = getStringForMessage(pushMessages.get(0), true);
                 lastMessage = lastMessageFull;
                 if (message == null) {
@@ -452,9 +461,10 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                 }
                 if (replace) {
                     if (chat != null) {
-                        message = message.replace(" @ " + name, "");
+                        message = TextUtils.replace(message, new String[] {" @ " + name}, new String[] {""});
                     } else {
-                        message = message.replace(name + ": ", "").replace(name + " ", "");
+                        message = TextUtils.replace(message, new String[] {name + ": "}, new String[] {""});
+                        message = TextUtils.replace(message, new String[]{name + " "}, new String[]{""});
                     }
                 }
                 mBuilder.setContentText(message);
@@ -465,7 +475,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                 inboxStyle.setBigContentTitle(name);
                 int count = Math.min(10, pushMessages.size());
                 for (int i = 0; i < count; i++) {
-                    String message = getStringForMessage(pushMessages.get(i), false);
+                    CharSequence message = getStringForMessage(pushMessages.get(i), false);
                     if (message == null) {
                         continue;
                     }
@@ -477,9 +487,10 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     if (pushDialogs.size() == 1) {
                         if (replace) {
                             if (chat != null) {
-                                message = message.replace(" @ " + name, "");
+                                message = TextUtils.replace(message, new String[] {" @ " + name}, new String[] {""});
                             } else {
-                                message = message.replace(name + ": ", "").replace(name + " ", "");
+                                message = TextUtils.replace(message, new String[] {name + ": "}, new String[] {""});
+                                message = TextUtils.replace(message, new String[]{name + " "}, new String[]{""});
                             }
                         }
                     }
@@ -499,7 +510,8 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             if (!notifyDisabled) {
                 if (ApplicationLoader.mainInterfacePaused || inAppPreview) {
                     if (lastMessage.length() > 100) {
-                        lastMessage = lastMessage.substring(0, 100).replace("\n", " ").trim() + "...";
+                        lastMessage = TextUtils.replace(lastMessage.subSequence(0, 100), new String[] {"\n"} , new String[] {" "});
+                        lastMessage = TextUtils.concat(lastMessage, "...");
                     }
                     mBuilder.setTicker(lastMessage);
                 }
@@ -530,10 +542,9 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             } else {
                 mBuilder.setVibrate(new long[]{0, 0});
             }
-
             notificationManager.notify(1, mBuilder.build());
             if (preferences.getBoolean("EnablePebbleNotifications", false)) {
-                sendAlertToPebble(lastMessageFull);
+                sendAlertToPebble(lastMessageFull.toString());
             }
             showWearNotifications(notifyAboutLast);
             scheduleNotificationRepeat();
@@ -612,14 +623,15 @@ public void showWearNotifications(boolean notifyAboutLast) {
 
             String text = "";
             for (MessageObject messageObject : messageObjects) {
-                String message = getStringForMessage(messageObject, false);
+                CharSequence message = getStringForMessage(messageObject, false);
                 if (message == null) {
                     continue;
                 }
                 if (chat != null) {
-                    message = message.replace(" @ " + name, "");
+                    message = TextUtils.replace(message, new String[] {" @ " + name}, new String[] {""});
                 } else {
-                    message = message.replace(name + ": ", "").replace(name + " ", "");
+                    message = TextUtils.replace(message, new String[] {name + ": "}, new String[] {""});
+                    message = TextUtils.replace(message, new String[] {name + " "}, new String[] {""});
                 }
                 if (text.length() > 0) {
                     text += "\n\n";
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
index 116c438ea..3a8c8f393 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
@@ -27,6 +27,8 @@
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
+
+import com.aniways.AniwaysTextView;
 import com.aniways.anigram.messenger.R;
 import com.aniways.Aniways;
 import org.telegram.messenger.Utilities;
@@ -243,7 +245,9 @@ public int getCount() {
         public Object instantiateItem(ViewGroup container, int position) {
             View view = View.inflate(container.getContext(), R.layout.intro_view_layout, null);
             TextView headerTextView = (TextView)view.findViewById(R.id.header_text);
-            TextView messageTextView = (TextView)view.findViewById(R.id.message_text);
+            AniwaysTextView messageTextView = (AniwaysTextView)view.findViewById(R.id.message_text);
+            messageTextView.setUseSmallIcons(true);
+            messageTextView.setIconsClickable(false);
             container.addView(view, 0);
 
             headerTextView.setText(getString(titles[position]));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
index 1705ffc79..1d23c9645 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
@@ -42,6 +42,8 @@
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.android.NotificationCenter;
+
+import com.aniways.AniwaysTextView;
 import com.aniways.anigram.messenger.R;
 import org.telegram.messenger.TLRPC;
 import org.telegram.android.MessageObject;
@@ -519,7 +521,9 @@ public void onClick(View v) {
                 });
             }
 
-            TextView messageText = (TextView)view.findViewById(R.id.message_text);
+            AniwaysTextView messageText = (AniwaysTextView)view.findViewById(R.id.message_text);
+            messageText.setUseSmallIcons(true);
+            messageText.setIconsClickable(false);
             BackupImageView imageView = (BackupImageView) view.findViewById(R.id.message_image);
             imageView.imageReceiver.setAspectFit(true);
 
diff --git a/TMessagesProj/src/main/res/layout/intro_view_layout.xml b/TMessagesProj/src/main/res/layout/intro_view_layout.xml
index 08b700038..bb018d02c 100644
--- a/TMessagesProj/src/main/res/layout/intro_view_layout.xml
+++ b/TMessagesProj/src/main/res/layout/intro_view_layout.xml
@@ -14,7 +14,7 @@
         android:textColor="#ff000000"
         android:layout_marginTop="224dp"/>
 
-    <TextView android:layout_height="wrap_content"
+    <com.aniways.AniwaysTextView android:layout_height="wrap_content"
         android:layout_width="fill_parent"
         android:id="@+id/message_text"
         android:textSize="15dp"
