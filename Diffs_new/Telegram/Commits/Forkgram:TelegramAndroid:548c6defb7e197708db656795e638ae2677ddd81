diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index dcb5b57b6..08504b585 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -272,6 +272,8 @@ public void run() {
     private final Comparator<TLRPC.TL_dialog> dialogComparator = new Comparator<TLRPC.TL_dialog>() {
         @Override
         public int compare(TLRPC.TL_dialog dialog1, TLRPC.TL_dialog dialog2) {
+            boolean unmutedPrimary = mainPreferences.getBoolean("unmutedOnTop", false);
+
             if (!dialog1.pinned && dialog2.pinned) {
                 return 1;
             } else if (dialog1.pinned && !dialog2.pinned) {
@@ -289,6 +291,32 @@ public int compare(TLRPC.TL_dialog dialog1, TLRPC.TL_dialog dialog2) {
             int date1 = draftMessage != null && draftMessage.date >= dialog1.last_message_date ? draftMessage.date : dialog1.last_message_date;
             draftMessage = DataQuery.getInstance(currentAccount).getDraft(dialog2.id);
             int date2 = draftMessage != null && draftMessage.date >= dialog2.last_message_date ? draftMessage.date : dialog2.last_message_date;
+
+            if (unmutedPrimary) {
+                boolean mute1 = isDialogMuted(dialog1.id);
+                boolean mute2 = isDialogMuted(dialog2.id);
+                boolean unread1 = dialog1.unread_count > 0;
+                boolean unread2 = dialog2.unread_count > 0;
+
+                boolean newMention1 = unread1 && !mute1;
+                boolean newMention2 = unread2 && !mute2;
+
+                if (!newMention1 && newMention2) {
+                    return 1;
+                } else if (newMention1 && !newMention2) {
+                    return -1;
+                } else if (newMention1 && newMention2) {
+                    if (date1 < date2) {
+                        return 1;
+                    } else if (date1 > date2) {
+                        return -1;
+                    } else {
+                        return 0;
+                    }
+                }
+            }
+
+
             if (date1 < date2) {
                 return 1;
             } else if (date1 > date2) {
@@ -3810,6 +3838,7 @@ public void loadGlobalNotificationsSettings() {
                     }
                 }));
             }
+            sortDialogs(null);
         }
         if (!UserConfig.getInstance(currentAccount).notificationsSignUpSettingsLoaded) {
             loadSignUpNotificationsSettings();
@@ -4651,6 +4680,7 @@ private void applyDialogNotificationsSettings(long dialog_id, TLRPC.PeerNotifySe
         if (updated) {
             NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.notificationsSettingsUpdated);
         }
+        sortDialogs(null);
     }
 
     private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialogs) {
@@ -4694,6 +4724,7 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialog
         if (editor != null) {
             editor.commit();
         }
+        sortDialogs(null);
     }
 
     public void reloadMentionsCountForChannels(final ArrayList<Integer> arrayList) {
@@ -9097,6 +9128,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                                 }
                             }
                         }
+                        sortDialogs(null);
                     } else if (baseUpdate instanceof TLRPC.TL_updateChannel) {
                         final TLRPC.TL_updateChannel update = (TLRPC.TL_updateChannel) baseUpdate;
                         TLRPC.TL_dialog dialog = dialogs_dict.get(-(long) update.channel_id);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index 4366e56a1..09cb0ed65 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -52,6 +52,7 @@
     private int squareAvatarsRow;
     private int inappCameraRow;
     private int photoHasStickerRow;
+    private int unmutedOnTopRow;
 
     private int syncPinsRow;
     private int pinOrderRow;
@@ -66,6 +67,7 @@ public boolean onFragmentCreate() {
         squareAvatarsRow = rowCount++;
         inappCameraRow = rowCount++;
         photoHasStickerRow = rowCount++;
+        unmutedOnTopRow = rowCount++;
 
         sectionRow2 = rowCount++;
         syncPinsRow = rowCount++;
@@ -144,6 +146,9 @@ public boolean supportsPredictiveItemAnimations() {
                 }
             } else if (position == syncPinsRow) {
                 toggleGlobalMainSetting("syncPins", view, true);
+            } else if (position == unmutedOnTopRow) {
+                toggleGlobalMainSetting("unmutedOnTop", view, false);
+                MessagesController.getInstance(currentAccount).sortDialogs(null);
             } else if (position == pinOrderRow) {
                 presentFragment(new PinsOrderActivity());
             }
@@ -202,6 +207,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         String t = LocaleController.getString("SyncPins", R.string.SyncPins);
                         String info = LocaleController.getString("SyncPinsInfo", R.string.SyncPinsInfo);
                         textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("syncPins", true), true, false);
+                    } else if (position == unmutedOnTopRow) {
+                        String t = LocaleController.getString("UnmutedOnTop", R.string.UnmutedOnTop);
+                        String info = LocaleController.getString("UnmutedOnTopInfo", R.string.UnmutedOnTopInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("unmutedOnTop", false), true, false);
                     }
                     break;
                 }
@@ -224,6 +233,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                         || position == inappCameraRow
                         || position == photoHasStickerRow
                         || position == syncPinsRow
+                        || position == unmutedOnTopRow
                         || position == pinOrderRow;
             return fork;
         }
@@ -266,9 +276,10 @@ public int getItemViewType(int position) {
                 return 1;
             } else if (position == pinOrderRow) {
                 return 2;
-            } else if (position == squareAvatarsRow 
-                || position == inappCameraRow 
-                || position == syncPinsRow 
+            } else if (position == squareAvatarsRow
+                || position == inappCameraRow
+                || position == syncPinsRow
+                || position == unmutedOnTopRow
                 || position == photoHasStickerRow) {
                 return 3;
             } else if (position == sectionRow1
