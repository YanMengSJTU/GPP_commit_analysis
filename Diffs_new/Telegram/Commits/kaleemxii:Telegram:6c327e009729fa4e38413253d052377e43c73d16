diff --git a/TMessagesProj/src/main/java/BotchaHelper/Helpers.java b/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
index bb00b6d73..ddfed3ef9 100644
--- a/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
+++ b/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
@@ -6,6 +6,9 @@
 import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
 import org.springframework.web.client.RestTemplate;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import DataSchema.Greeting;
 import DataSchema.Response;
 
@@ -72,4 +75,27 @@ private static String giveChannelWithToken(long id) {
 
         return "Empty";
     }
+
+    public static boolean isChannelAllowed(long id) {
+        List<Long> allowedIDs = getAllowedIDs();
+        boolean flag = false;
+        for(int i = 0; i <allowedIDs.size(); i++) {
+            if (id == allowedIDs.get(i)) {
+                flag = true;
+            }
+        }
+
+        return flag;
+        //return id == 135483832 || id == 171135579 || id == 149007104 || id == 192493113 || id == 175641240;
+    }
+
+    public static List<Long> getAllowedIDs() {
+        List<Long> returnList = new ArrayList<Long>();
+        returnList.add(135483832L);
+        returnList.add(171135579L);
+        returnList.add(149007104L);
+        returnList.add(192493113L);
+        returnList.add(175641240L);
+        return returnList;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 769784be6..b524c3beb 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -18,6 +18,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.util.Base64;
+import android.util.Log;
 import android.util.SparseArray;
 import android.util.SparseIntArray;
 import android.widget.Toast;
@@ -43,6 +44,8 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.Semaphore;
 
+import BotchaHelper.Helpers;
+
 public class MessagesController implements NotificationCenter.NotificationCenterDelegate {
 
     private ConcurrentHashMap<Integer, TLRPC.Chat> chats = new ConcurrentHashMap<>(100, 1.0f, 2);
@@ -2471,6 +2474,15 @@ public void run() {
                         dialogsServerOnly.clear();
                         dialogsGroupsOnly.clear();
                         dialogs.addAll(dialogs_dict.values());
+                        for (int i=(dialogs.size() - 1) ; i >=0; i--) {
+                            if (!Helpers.isChannelAllowed(dialogs.get(i).id)) {
+                                dialogs.remove(i);
+                            }
+                        }
+
+                        Log.i("Botcha", "removing irrelevant dialogs");
+                        //dialogs.clear();
+
                         Collections.sort(dialogs, new Comparator<TLRPC.Dialog>() {
                             @Override
                             public int compare(TLRPC.Dialog tl_dialog, TLRPC.Dialog tl_dialog2) {
@@ -2753,6 +2765,13 @@ public void run() {
                         dialogsServerOnly.clear();
                         dialogsGroupsOnly.clear();
                         dialogs.addAll(dialogs_dict.values());
+                        Log.i("Botcha", "removing irrelevant dialogs");
+                        for (int i=(dialogs.size() - 1) ; i >=0; i--) {
+                            if (!Helpers.isChannelAllowed(dialogs.get(i).id)) {
+                                dialogs.remove(i);
+                            }
+                        }
+                        //dialogs.clear();
                         Collections.sort(dialogs, new Comparator<TLRPC.Dialog>() {
                             @Override
                             public int compare(TLRPC.Dialog dialog, TLRPC.Dialog dialog2) {
@@ -6008,7 +6027,12 @@ protected void updateInterfaceWithMessages(final long uid, final ArrayList<Messa
                 dialog.top_message = lastMessage.getId();
                 dialog.last_message_date = lastMessage.messageOwner.date;
                 dialogs_dict.put(uid, dialog);
-                dialogs.add(dialog);
+                if (Helpers.isChannelAllowed(dialog.id)) {
+                    dialogs.add(dialog);
+                }
+
+                Log.i("Botcha", "removing irrelevant dialogs");
+                //dialogs.remove(dialog);
                 dialogMessage.put(uid, lastMessage);
                 if (lastMessage.messageOwner.to_id.channel_id == 0) {
                     dialogMessagesByIds.put(lastMessage.getId(), lastMessage);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
index b6b9bdd4b..fc9ee00e3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
@@ -439,6 +439,12 @@ public void processNewMessages(final ArrayList<MessageObject> messageObjects, fi
             return;
         }
 
+        boolean flag = false;
+        if (flag == false) {
+            Log.i("Botcha", "hiding the irrelevant messages");
+            return;
+        }
+
         updateMyWidget();
 
         final ArrayList<MessageObject> popupArray = new ArrayList<>(popupMessages);
@@ -451,7 +457,6 @@ public void run() {
                 HashMap<Long, Boolean> settingsCache = new HashMap<>();
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
                 int popup = 0;
-
                 for (int a = 0; a < messageObjects.size(); a++) {
                     MessageObject messageObject = messageObjects.get(a);
                     Log.i("Botcha messages received:", messageObject.messageText.toString());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 62f8777c1..4f896332e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -190,6 +190,7 @@ public View createView(final Context context) {
             passcodeItem = menu.addItem(1, R.drawable.lock_close);
             updatePasscodeButton();
         }
+        /*
         final ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
@@ -267,7 +268,8 @@ public void onTextChanged(EditText editText) {
                 }
             }
         });
-        item.getSearchField().setHint(LocaleController.getString("Search", R.string.Search));
+        */
+        //item.getSearchField().setHint(LocaleController.getString("Search", R.string.Search));
         if (onlySelect) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setTitle(LocaleController.getString("SelectChat", R.string.SelectChat));
