diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index d91044047..9790bc7b6 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -5,14 +5,11 @@ repositories {
 }
 
 dependencies {
-    compile 'com.android.support:support-v4:23.1.1'
-    compile 'com.google.android.gms:play-services:8.3.0'
+    compile 'com.android.support:support-v4:23.0.+'
+    compile 'com.google.android.gms:play-services:3.2.+'
     compile 'net.hockeyapp.android:HockeySDK:3.5.+'
     compile 'com.googlecode.mp4parser:isoparser:1.0.+'
     compile 'org.apache.httpcomponents:httpmime:4.2.1'
-    compile 'com.google.android.gms:play-services-ads:8.3.0'
-    compile 'com.google.android.gms:play-services-identity:8.3.0'
-    compile 'com.google.android.gms:play-services-gcm:8.3.0'
 }
 
 android {
@@ -82,7 +79,7 @@ android {
     }
 
     defaultConfig {
-        minSdkVersion 9
+        minSdkVersion 8
         targetSdkVersion 22
         versionCode 627
         versionName "3.2.2"
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 72ce87e4f..4df32647e 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -185,7 +185,7 @@
 
         <receiver android:name=".WearReplyReceiver" android:enabled="true" />
 
-        <service android:name=".SPAPollingService">
+        <service android:name=".SPAKeyManagePollingService">
             <intent-filter>
                 <action android:name="org.telegram.android.spa.Key_Manager" />
             </intent-filter>
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SPAConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/SPAConfig.java
index a0cb40654..679347a19 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SPAConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SPAConfig.java
@@ -4,7 +4,12 @@
  * Created by zqguo on 2015/11/20.
  */
 public class SPAConfig {
-    public static String keyManager = "http://10.131.1.38:8000/addKeys/";
+    // POST method
+    public static String addKeys = "http://10.131.1.38:8000/addKeys/";
+    // POST method
+    public static String pollingKeyManager = "http://10.131.1.38:8000/pollingKeyManager/";
+    // POST method
+    public static String sendSPARequest = "http://10.131.1.38:8000/getSPARequest/";
     public static String resultMergeServer = "http://10.131.1.38/results/";
     public static String SPA_PREFERENCE = "spaconfig";
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SPAKeyManagePollingService.java b/TMessagesProj/src/main/java/org/telegram/messenger/SPAKeyManagePollingService.java
new file mode 100644
index 000000000..829131e33
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SPAKeyManagePollingService.java
@@ -0,0 +1,69 @@
+package org.telegram.messenger;
+
+import android.app.Service;
+import android.content.Context;
+import android.content.Intent;
+import android.os.IBinder;
+import android.util.Log;
+
+import org.telegram.messenger.volley.Request;
+import org.telegram.messenger.volley.RequestQueue;
+import org.telegram.messenger.volley.Response;
+import org.telegram.messenger.volley.VolleyError;
+import org.telegram.messenger.volley.toolbox.StringRequest;
+import org.telegram.messenger.volley.toolbox.Volley;
+
+/**
+ * Created by gzq on 15-11-24.
+ */
+public class SPAKeyManagePollingService extends Service {
+
+    Context context = this;
+
+    public static final String ACTION = "org.telegram.android.spa.Key_Manager";
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        return null;
+    }
+
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId) {
+        new PollingThread().start();
+        return super.onStartCommand(intent, flags, startId);
+    }
+
+    class PollingThread extends Thread {
+        @Override
+        public void run() {
+            RequestQueue queue = Volley.newRequestQueue(context);
+            String url = SPAConfig.pollingKeyManager;
+            // Request a string response from the provided URL.
+            StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
+                    new Response.Listener<String>() {
+                        @Override
+                        public void onResponse(String response) {
+                            if (response.compareTo("ok") == 0) {
+                            } else {
+                                Log.v("spa", "get keys: " + response);
+                            }
+                        }
+                    }, new Response.ErrorListener() {
+                @Override
+                public void onErrorResponse(VolleyError error) {
+                    Log.v("SPA", "SPAKeyManagePollingService didn't work!");
+                }
+            });
+            // Add the request to the RequestQueue.
+            queue.add(stringRequest);
+            Log.v("SPA", "Test Polling");
+        }
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        System.out.println("SPAKeyManagePollingService: onDestroy");
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SPAPollingService.java b/TMessagesProj/src/main/java/org/telegram/messenger/SPAPollingService.java
deleted file mode 100644
index 490a66d17..000000000
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SPAPollingService.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package org.telegram.messenger;
-
-import android.app.Notification;
-import android.app.NotificationManager;
-import android.app.Service;
-import android.content.Intent;
-import android.os.IBinder;
-
-/**
- * Created by gzq on 15-11-24.
- */
-public class SPAPollingService extends Service {
-
-    public static final String ACTION = "org.telegram.android.spa.Key_Manager";
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return null;
-    }
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        new PollingThread().start();
-    }
-
-    int count = 0;
-    class PollingThread extends Thread {
-        @Override
-        public void run() {
-            System.out.println("Polling...");
-            ++count;
-            if (count % 5 == 0) {
-                System.out.println("New message!");
-            }
-        }
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        System.out.println("SPAPollingService: onDestroy");
-    }
-
-
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index d28583cde..ced4d6630 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -49,7 +49,7 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NativeCrashManager;
-import org.telegram.messenger.SPAPollingService;
+import org.telegram.messenger.SPAKeyManagePollingService;
 import org.telegram.messenger.SPAPollingUtils;
 import org.telegram.messenger.SendMessagesHelper;
 import org.telegram.messenger.UserObject;
@@ -464,7 +464,7 @@ public void onClick(View v) {
             ViewServer.get(this).addWindow(this);
         }*/
 
-        SPAPollingUtils.startPollingService(this, 5, SPAPollingService.class, SPAPollingService.ACTION);
+        SPAPollingUtils.startPollingService(this, 5, SPAKeyManagePollingService.class, SPAKeyManagePollingService.ACTION);
 
         handleIntent(getIntent(), false, savedInstanceState != null, false);
         needLayout();
@@ -1482,7 +1482,7 @@ protected void onDestroy() {
         } catch (Exception e) {
             FileLog.e("tmessages", e);
         }
-        SPAPollingUtils.stopPollingService(this, SPAPollingService.class, SPAPollingService.ACTION);
+        SPAPollingUtils.stopPollingService(this, SPAKeyManagePollingService.class, SPAKeyManagePollingService.ACTION);
         super.onDestroy();
         onFinish();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/FriendListActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java
similarity index 63%
rename from TMessagesProj/src/main/java/org/telegram/ui/FriendListActivity.java
rename to TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java
index bcb25e5f8..af6ee7ae6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/FriendListActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SPAFriendListActivity.java
@@ -1,8 +1,10 @@
 package org.telegram.ui;
 
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
 import android.util.Log;
@@ -12,32 +14,42 @@
 import android.view.ViewGroup;
 import android.widget.AdapterView;
 import android.widget.FrameLayout;
-import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
+import org.json.JSONArray;
+import org.json.JSONObject;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
+import org.telegram.messenger.SPAConfig;
+import org.telegram.messenger.volley.Request;
+import org.telegram.messenger.volley.RequestQueue;
+import org.telegram.messenger.volley.Response;
+import org.telegram.messenger.volley.VolleyError;
+import org.telegram.messenger.volley.toolbox.StringRequest;
+import org.telegram.messenger.volley.toolbox.Volley;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextInfoCell;
+import org.telegram.ui.Cells.TextSettingsCell;
 import org.telegram.ui.Cells.UserCell;
 import org.telegram.ui.Components.LayoutHelper;
 
 import java.util.ArrayList;
 import java.util.HashMap;
-import java.util.LinkedList;
+import java.util.Map;
 
 /**
  * Created by zqguo on 2015/10/28.
  */
-public class FriendListActivity extends BaseFragment implements ContactsActivity.ContactsActivityDelegate {
+public class SPAFriendListActivity extends BaseFragment implements ContactsActivity.ContactsActivityDelegate {
 
     private ListView listView;
     private ListAdapter listViewAdapter;
@@ -46,6 +58,11 @@
     private int selectedUserId;
     private ArrayList<Integer> usersId = new ArrayList<>();
 
+    // in order to get users' phone number for `sendSPARequest`
+    private ArrayList<String[]> usersPhoneAndWeight = new ArrayList<>();
+
+    private final int leastNumberForSendSPARequest = 3;
+
     private final static int invite_friends = 1;
 
     @Override
@@ -59,7 +76,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context) {
+    public View createView(final Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("SPAFriendsList", R.string.SPAFriendsList));
@@ -74,7 +91,7 @@ public void onItemClick(int id) {
                     args.putBoolean("destroyAfterSelect", true);
                     args.putBoolean("returnAsResult", true);
                     ContactsActivity fragment = new ContactsActivity(args);
-                    fragment.setDelegate(FriendListActivity.this);
+                    fragment.setDelegate(SPAFriendListActivity.this);
                     presentFragment(fragment);
                 }
             }
@@ -120,10 +137,26 @@ public boolean onTouch(View v, MotionEvent event) {
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                if (i < usersId.size()) {
+                int usersSize = usersId.size();
+                if (i < usersSize) {
                     Bundle args = new Bundle();
                     args.putInt("user_id", usersId.get(i));
                     presentFragment(new ProfileActivity(args));
+                } else if (i == usersSize) {
+                    // pass
+                } else if (i > usersSize) {
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(SPAConfig.SPA_PREFERENCE, Activity.MODE_PRIVATE);
+                    boolean containsLastSeen = preferences.contains("last_seen_setting");
+                    boolean containsPasscodeLock = preferences.contains("passcode_lock_setting");
+                    if (usersSize >= leastNumberForSendSPARequest) {
+                        if (sendSPARequest(containsLastSeen, containsPasscodeLock, context)) {
+                            // TODO: 15-11-25 Toast success
+                        } else {
+                            // TODO: 15-11-25 Toast fail
+                        }
+                    } else {
+                        // TODO: 15-11-25 Toast no setting be chosen to send request
+                    }
                 }
             }
         });
@@ -166,6 +199,56 @@ public void onClick(DialogInterface dialogInterface, int i) {
         return fragmentView;
     }
 
+    private boolean sendSPARequest(boolean containsLastSeen, boolean containsPasscodeLock, Context context) {
+        // generate json request
+        RequestQueue queue = Volley.newRequestQueue(context);
+        final String sendContent;
+        JSONArray settings = new JSONArray();
+        if (containsLastSeen) {
+            if (containsPasscodeLock) {
+                settings.put("last_seen_setting");
+                settings.put("passcode_lock_setting");
+            } else {
+                settings.put("last_seen_setting");
+            }
+        } else {
+            if (containsPasscodeLock) {
+                settings.put("passcode_lock_setting");
+            } else {
+                // cannot arrive here, guard by caller
+            }
+        }
+        JSONArray persons = new JSONArray(usersPhoneAndWeight);
+        sendContent = "[settings:" + settings.toString() + ",persons:" + persons.toString() + "]";
+        StringRequest stringRequest = new StringRequest(
+                Request.Method.POST,
+                SPAConfig.sendSPARequest,
+                new Response.Listener<String>() {
+                    @Override
+                    public void onResponse(String response) {
+                        if (response.compareTo("ok") == 0) {
+                            // TODO: 15-11-25 Toast for success
+                        } else {
+                            // TODO: 15-11-25 Toast for failure
+                        }
+                    }
+                },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        Log.v("SPA", "SPA friend list activity cannot connect keymanager!");
+                    }
+                }) {
+            protected Map<String, String> getParams() {
+                Map<String, String> params = new HashMap<>();
+                params.put("content", sendContent);
+                return params;
+            }
+        };
+        queue.add(stringRequest);
+        return false;
+    }
+
     @Override
     public void onResume() {
         super.onResume();
@@ -196,7 +279,11 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return i != usersId.size();
+            if (i == usersId.size()) {
+                return false;
+            } else {
+                return true;
+            }
         }
 
         @Override
@@ -204,7 +291,7 @@ public int getCount() {
             if (usersId.isEmpty()) {
                 return 0;
             }
-            return usersId.size() + 1;
+            return usersId.size() + 2;
         }
 
         @Override
@@ -231,6 +318,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 }
                 TLRPC.User user = MessagesController.getInstance().getUser(usersId.get(i));
                 if (user != null) {
+                    usersPhoneAndWeight.add(new String[]{user.phone, "1"});
                     ((UserCell) view).setData(user, null, user.phone != null && user.phone.length() != 0 ? PhoneFormat.getInstance().format("+" + user.phone) : LocaleController.getString("NumberUnknown", R.string.NumberUnknown), 0);
                 }
             } else if (type == 1) {
@@ -238,16 +326,27 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     view = new TextInfoCell(mContext);
                     ((TextInfoCell) view).setText(LocaleController.getString("CancelUserText", R.string.CancelUserText));
                 }
+            } else if (type == 2) {
+                if (view == null) {
+                    view = new TextSettingsCell(mContext);
+                    view.setBackgroundColor(0xffffffff);
+                    TextSettingsCell textCell = (TextSettingsCell) view;
+                    textCell.setText(LocaleController.getString("SPASendRequest", R.string.SPASendRequest), true);
+                }
             }
             return view;
         }
 
         @Override
         public int getItemViewType(int i) {
-            if(i == usersId.size()) {
+            int usersSize = usersId.size();
+            if(i < usersSize) {
+                return 0;
+            } else if (i == usersSize) {
                 return 1;
+            } else {
+                return 2;
             }
-            return 0;
         }
 
         @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SelectPrivacyItemsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SPASelectPrivacyItemsActivity.java
similarity index 94%
rename from TMessagesProj/src/main/java/org/telegram/ui/SelectPrivacyItemsActivity.java
rename to TMessagesProj/src/main/java/org/telegram/ui/SPASelectPrivacyItemsActivity.java
index 17c430b32..4225e3004 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SelectPrivacyItemsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SPASelectPrivacyItemsActivity.java
@@ -16,6 +16,7 @@
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.messenger.SPAConfig;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
@@ -28,7 +29,7 @@
 /**
  * Created by zqguo on 2015/10/27.
  */
-public class SelectPrivacyItemsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
+public class SPASelectPrivacyItemsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
     private ListAdapter listAdapter;
 
     private int privacySectionRow;
@@ -95,7 +96,7 @@ public void onItemClick(int id) {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
                 if (i == lastSeenRow)  {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("spaconfig", Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(SPAConfig.SPA_PREFERENCE, Activity.MODE_PRIVATE);
                     boolean last_seen_setting = preferences.getBoolean("last_seen_setting", false);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("last_seen_setting", !last_seen_setting);
@@ -104,10 +105,10 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                         ((TextCheckCell) view).setChecked(!last_seen_setting);
                     }
                 } else if (i == passcodeLock) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("spaconfig", Activity.MODE_PRIVATE);
-                    boolean passcode_setting = preferences.getBoolean("passcode_setting", false);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(SPAConfig.SPA_PREFERENCE, Activity.MODE_PRIVATE);
+                    boolean passcode_setting = preferences.getBoolean("passcode_lock_setting", false);
                     SharedPreferences.Editor editor = preferences.edit();
-                    editor.putBoolean("passcode_setting", !passcode_setting);
+                    editor.putBoolean("passcode_lock_setting", !passcode_setting);
                     editor.commit();
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(!passcode_setting);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java
index 0f38107c0..7352d4613 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SPASettingsActivity.java
@@ -83,7 +83,7 @@ public View createView(Context context) {
         final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(SPAConfig.SPA_PREFERENCE, Activity.MODE_PRIVATE);
         if (!preferences.contains("paillier_n")) {
             RequestQueue queue = Volley.newRequestQueue(context);
-            String url = SPAConfig.keyManager;
+            String url = SPAConfig.addKeys;
             // Request a string response from the provided URL.
             StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                     new Response.Listener<String>() {
@@ -103,7 +103,7 @@ public void onResponse(String response) {
                     }, new Response.ErrorListener() {
                 @Override
                 public void onErrorResponse(VolleyError error) {
-                    Log.v("SPA", "That didn't work!");
+                    Log.v("SPA", "SPA Setting cannot connect keymanager!");
                 }
             }) {
                 protected Map<String, String> getParams() {
@@ -147,10 +147,10 @@ public void onItemClick(int id) {
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
                if (i == selectPrivacyItemsRow)  {
                    Log.v("SPA", "select privacy items");
-                   presentFragment(new SelectPrivacyItemsActivity());
+                   presentFragment(new SPASelectPrivacyItemsActivity());
                } else if (i == friendsListRow) {
                    Log.v("SPA", "friends list");
-                   presentFragment(new FriendListActivity());
+                   presentFragment(new SPAFriendListActivity());
                } else if (i == sendSpaRequstRow) {
                    Log.v("SPA", "send spa request");
                } else if (i == spaResultRow2) {
