diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
index 0a800454a..2c26cf2c4 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
@@ -136,7 +136,7 @@ public MessagesController() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageReceivedByServer);
         addSupportUser();
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-        enableJoined = preferences.getBoolean("EnableContactJoined", true);
+        enableJoined = preferences.getBoolean("EnableContactJoined", false);
 
         preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         maxGroupCount = preferences.getInt("maxGroupCount", 200);
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index 17864c582..cccb0393f 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -319,7 +319,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     } else if (choosenSoundPath == null) {
                         choosenSoundPath = preferences.getString("GlobalSoundPath", defaultPath);
                     }
-                    needVibrate = preferences.getInt("vibrate_messages", 0);
+                    needVibrate = preferences.getInt("vibrate_messages", 1);
                     ledColor = preferences.getInt("MessagesLed", 0xff00ff00);
                 }
                 if (preferences.contains("color_" + dialog_id)) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
index 32d3dec77..5639aea30 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
@@ -65,8 +65,9 @@
     public static volatile boolean isScreenOn = false;
     public static volatile boolean mainInterfacePaused = true;
 
-    public static boolean isPasscodeLock = false;
+    public static boolean isPasscodeLockSuccess = false;
     public static boolean isPasscodeLockOn = false;
+    public static boolean isPasscodeChange = false;
 
     public static void postInitApplication() {
         if (applicationInited) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 22b892c20..4d14b3718 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -9,7 +9,6 @@
 package org.telegram.ui;
 
 import android.app.Activity;
-import android.app.Application;
 import android.content.ContentResolver;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -37,6 +36,7 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.android.SendMessagesHelper;
+import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.android.LocaleController;
@@ -837,7 +837,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if(requestCode == PasscodeLock.UNLOCK_PASSWORD) {
             if (resultCode == Activity.RESULT_OK) {
-                ApplicationLoader.isPasscodeLock = true;
+                ApplicationLoader.isPasscodeLockSuccess = true;
             }
         }
     }
@@ -853,7 +853,7 @@ protected void onPause() {
         ApplicationLoader.mainInterfacePaused = true;
         ConnectionsManager.getInstance().setAppPaused(true, false);
 
-        ApplicationLoader.isPasscodeLock = false;
+        ApplicationLoader.isPasscodeLockSuccess = false;
     }
 
     @Override
@@ -877,20 +877,33 @@ protected void onResume() {
         ConnectionsManager.getInstance().setAppPaused(false, false);
         actionBarLayout.getActionBar().setBackOverlayVisible(currentConnectionState != 0);
 
-        // For PasscodeLock
-        if(ApplicationLoader.isPasscodeLockOn) {
-            ApplicationLoader.isPasscodeLockOn = false;
-        } else if(!ApplicationLoader.isPasscodeLock) {
+        if(ApplicationLoader.isPasscodeLockOn && ApplicationLoader.isPasscodeLockSuccess){
             ApplicationLoader.isPasscodeLockOn = false;
+            startPasscodeLockActivity();
+        } else if(ApplicationLoader.isPasscodeChange) {
+            ApplicationLoader.isPasscodeChange = false;
+        } else if(ApplicationLoader.isPasscodeLockSuccess == false) {
             if (LockManager.getInstance().getAppLock().isPasscodeSet()) {
-                Intent intent = new Intent(this, PasscodeLockActivity.class);
-                startActivity(intent);
-                intent.putExtra(PasscodeLock.TYPE, PasscodeLock.UNLOCK_PASSWORD);
-                startActivityForResult(intent, PasscodeLock.UNLOCK_PASSWORD);
+                ApplicationLoader.isPasscodeLockOn = false;
+                startPasscodeLockActivity();
             }
         }
     }
 
+    public void startPasscodeLockActivity() {
+        try {
+            Intent intent = new Intent(this, PasscodeLockActivity.class);
+            intent.putExtra(PasscodeLock.TYPE, PasscodeLock.UNLOCK_PASSWORD);
+            startActivityForResult(intent, PasscodeLock.UNLOCK_PASSWORD);
+        }catch(Exception e){
+            Intent intent = new Intent();
+            intent.setAction(Intent.ACTION_MAIN);
+            intent.addCategory(Intent.CATEGORY_HOME);
+            startActivity(intent);
+            finish();
+        }
+    }
+
     @Override
     public void onConfigurationChanged(android.content.res.Configuration newConfig) {
         AndroidUtilities.checkDisplaySize();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
index af23ea275..86362f1ee 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
@@ -257,7 +257,7 @@ public void run() {
                     } else if (i == contactJoinedRow) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
-                        boolean enabled = preferences.getBoolean("EnableContactJoined", true);
+                        boolean enabled = preferences.getBoolean("EnableContactJoined", false);
                         MessagesController.getInstance().enableJoined = !enabled;
                         editor.putBoolean("EnableContactJoined", !enabled);
                         editor.commit();
@@ -601,7 +601,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     textView.setText(LocaleController.getString("InAppPreview", R.string.InAppPreview));
                     divider.setVisibility(View.INVISIBLE);
                 } else if (i == contactJoinedRow) {
-                    enabled = preferences.getBoolean("EnableContactJoined", true);
+                    enabled = preferences.getBoolean("EnableContactJoined", false);
                     textView.setText(LocaleController.getString("ContactJoined", R.string.ContactJoined));
                     divider.setVisibility(View.INVISIBLE);
                 } else if (i == pebbleAlertRow) {
@@ -701,7 +701,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 textView.setText(LocaleController.getString("Vibrate", R.string.Vibrate));
                 divider.setVisibility(View.VISIBLE);
                 if (i == messageVibrateRow) {
-                    value = preferences.getInt("vibrate_messages", 0);
+                    value = preferences.getInt("vibrate_messages", 1);
                 } else if (i == groupVibrateRow) {
                     value = preferences.getInt("vibrate_group", 0);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsPasscodeLockActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsPasscodeLockActivity.java
index 19c9177e6..dede71104 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsPasscodeLockActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsPasscodeLockActivity.java
@@ -76,21 +76,26 @@ public void onItemClick(int id) {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
                     if (i == passcodeLockServiceRow) {
-                        // 화면 암호잠금 바로 켜기
-                        int type = LockManager.getInstance().getAppLock().isPasscodeSet() ? PasscodeLock.DISABLE_PASSLOCK
-                                : PasscodeLock.ENABLE_PASSLOCK;
-                        Intent intent = new Intent(getParentActivity(), PasscodeLockActivity.class);
-                        intent.putExtra(PasscodeLock.TYPE, type);
-                        startActivityForResult(intent, type);
-
-                    }else if(i == passcodeLockChangePasswordRow){
-                        if(LockManager.getInstance().getAppLock().isPasscodeSet()) {
-                            // 암호 변경 화면 출력
+                        try {
+                            ApplicationLoader.isPasscodeLockOn = true;
+                            int type = LockManager.getInstance().getAppLock().isPasscodeSet() ? PasscodeLock.DISABLE_PASSLOCK
+                                    : PasscodeLock.ENABLE_PASSLOCK;
                             Intent intent = new Intent(getParentActivity(), PasscodeLockActivity.class);
-                            intent.putExtra(PasscodeLock.TYPE, PasscodeLock.CHANGE_PASSWORD);
-                            intent.putExtra(PasscodeLock.MESSAGE,
-                                    LocaleController.getString("PasscodeLock_enter_old", R.string.PasscodeLock_enter_old));
-                            startActivityForResult(intent, PasscodeLock.CHANGE_PASSWORD);
+                            intent.putExtra(PasscodeLock.TYPE, type);
+                            startActivityForResult(intent, type);
+                        } catch(Exception e) {
+                            finishActivity();
+                        }
+                    } else if(i == passcodeLockChangePasswordRow){
+                        if(LockManager.getInstance().getAppLock().isPasscodeSet()) {
+                            try {
+                                Intent intent = new Intent(getParentActivity(), PasscodeLockActivity.class);
+                                intent.putExtra(PasscodeLock.TYPE, PasscodeLock.CHANGE_PASSWORD);
+                                intent.putExtra(PasscodeLock.MESSAGE, LocaleController.getString("PasscodeLock_enter_old", R.string.PasscodeLock_enter_old));
+                                startActivityForResult(intent, PasscodeLock.CHANGE_PASSWORD);
+                            }catch(Exception e) {
+                                finishActivity();
+                            }
                         }
                     }
                 }
@@ -104,6 +109,13 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
         return fragmentView;
     }
 
+    public void finishActivity() {
+        Intent intent = new Intent();
+        intent.setAction(Intent.ACTION_MAIN);
+        intent.addCategory(Intent.CATEGORY_HOME);
+        getParentActivity().startActivity(intent);
+        getParentActivity().finish();
+    }
     public void updateUI() {
         final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("PasscodeLock", Activity.MODE_PRIVATE);
         if (LockManager.getInstance().getAppLock().isPasscodeSet()) {
@@ -138,6 +150,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
             case PasscodeLock.DISABLE_PASSLOCK:
                 if (resultCode == Activity.RESULT_OK) {
                     ApplicationLoader.isPasscodeLockOn = false;
+                    ApplicationLoader.isPasscodeChange = false;
                     Toast.makeText(getParentActivity(), LocaleController.getString("PasscodeLock_disable", R.string.PasscodeLock_disable),
                             Toast.LENGTH_SHORT).show();
                 }
@@ -145,7 +158,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
             case PasscodeLock.ENABLE_PASSLOCK:
             case PasscodeLock.CHANGE_PASSWORD:
                 if (resultCode == Activity.RESULT_OK) {
-                    ApplicationLoader.isPasscodeLockOn = true;
+                    ApplicationLoader.isPasscodeChange = true;
                     Toast.makeText(getParentActivity(), LocaleController.getString("PasscodeLock_setup", R.string.PasscodeLock_setup),
                             Toast.LENGTH_SHORT).show();
                 }
@@ -237,7 +250,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     changePasswordTextView.setText(LocaleController.getString("PasscodeLock_change", R.string.PasscodeLock_change));
                     if(LockManager.getInstance().getAppLock().isPasscodeSet()) {
                         changePasswordTextView.setTextColor(Color.BLACK);
-                        ApplicationLoader.isPasscodeLockOn = true;
+                        ApplicationLoader.isPasscodeLockOn = false;
                     } else {
                         changePasswordTextView.setTextColor(Color.GRAY);
                     }
diff --git a/TMessagesProj/src/main/java/org/telegramkr/passcodelock/core/PasscodeLockActivity.java b/TMessagesProj/src/main/java/org/telegramkr/passcodelock/core/PasscodeLockActivity.java
index b0507eada..4fe5031a0 100644
--- a/TMessagesProj/src/main/java/org/telegramkr/passcodelock/core/PasscodeLockActivity.java
+++ b/TMessagesProj/src/main/java/org/telegramkr/passcodelock/core/PasscodeLockActivity.java
@@ -189,16 +189,19 @@ protected void onPasscodeInputed() {
     public void onBackPressed() {
         if (type == PasscodeLock.UNLOCK_PASSWORD) {
             // back to home screen
-            Intent intent = new Intent();
-            intent.setAction(Intent.ACTION_MAIN);
-            intent.addCategory(Intent.CATEGORY_HOME);
-            this.startActivity(intent);
-            finish();
+            finishPasscodeLockActivity();
         } else {
             finish();
         }
     }
 
+    private void finishPasscodeLockActivity(){
+        Intent intent = new Intent();
+        intent.setAction(Intent.ACTION_MAIN);
+        intent.addCategory(Intent.CATEGORY_HOME);
+        this.startActivity(intent);
+        finish();
+    }
     protected void setupEditText(EditText editText) {
         editText.setInputType(InputType.TYPE_NULL);
         editText.setFilters(filters);
