diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PostCreateActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PostCreateActivityEnterView.java
index ecb26573e..fc9680fd2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PostCreateActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PostCreateActivityEnterView.java
@@ -678,7 +678,14 @@ private void updateCharCounter(String message) {
     }
 
 
+    //TODO method to change sendButton to attachButton
     private void checkSendButton(final boolean animated) {
+        //TODO mock because I do not change the button.
+        if(true) {
+            sendButton.setVisibility(View.INVISIBLE);
+            attachButton.setVisibility(View.VISIBLE);
+            return;
+        }
         String message = getTrimmedString(messageEditText.getText().toString());
         if (message.length() > 0 || forceShowSendButton) {
             if (attachButton != null && attachButton.getVisibility() == View.VISIBLE) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 577f5df96..4b3fbd9a6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -35,7 +35,6 @@
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
 import android.widget.FrameLayout;
-import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -57,7 +56,6 @@
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.dto.Post;
-import org.telegram.messenger.dto.Venue;
 import org.telegram.messenger.object.PostObject;
 import org.telegram.messenger.service.mock.PostServiceMock;
 import org.telegram.messenger.service.mock.VenueServiceMock;
@@ -76,9 +74,11 @@
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
 import org.telegram.ui.Components.WebFrameLayout;
+import org.telegram.utils.StringUtils;
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Arrays;
 
 //TODO-aragats new
 public class PostCreateActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate,
@@ -111,6 +111,10 @@
     private TextView muteItem;
 
 
+    // Send button!
+    private TextView sendTextView;
+    private FrameLayout sendButtonContainer;
+
     private PostObject selectedObject;
     private boolean wasPaused = false;
     private TLRPC.WebPage foundWebPage;
@@ -128,6 +132,7 @@
 
     private Rect scrollRect = new Rect();
 
+    private final static int done_button = 1;
     private final static int chat_menu_attach = 5;
     private final static int attach_photo = 6;
     private final static int attach_gallery = 7;
@@ -286,72 +291,40 @@ public void onItemClick(final int id) {
                         postCreateActivityEnterView.hideEmojiPopup();
                     }
                     finishFragment();
+                } else if (id == done_button) {
+                    Toast.makeText(((Context) getParentActivity()), "DONE BUTTON is CLICKED", Toast.LENGTH_SHORT).show();
+
                 } else if (id == attach_photo) {
-                    try {
-                        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
-                        File image = AndroidUtilities.generatePicturePath();
-                        if (image != null) {
-                            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(image));
-                            currentPicturePath = image.getAbsolutePath();
-                        }
-                        startActivityForResult(takePictureIntent, 0);
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
+                    attachPhotoHandle();
                 } else if (id == attach_gallery) {
-//                    //TODO-TEMP
-                    PhotoAlbumPickerActivity fragment = new PhotoAlbumPickerActivity(true, null);
-                    fragment.setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate() {
-                        @Override
-                        public void didSelectPhotos(ArrayList<String> photos, ArrayList<String> captions, ArrayList<MediaController.SearchImage> webPhotos) {
-//                            SendMessagesHelper.prepareSendingPhotos(photos, null, dialog_id, replyingMessageObject, captions);
-//                            SendMessagesHelper.prepareSendingPhotosSearch(webPhotos, dialog_id, replyingMessageObject);
-//                            showReplyPanel(false, null, null, null, false, true);
-//                            System.out.println();
-                            PostCreateActivity.this.didSelectPhotos(photos);
-
-                        }
-
-                        @Override
-                        public void startPhotoSelectActivity() {
-                            //TODO-was ?
-                            try {
-                                Intent videoPickerIntent = new Intent();
-                                videoPickerIntent.setType("video/*");
-                                videoPickerIntent.setAction(Intent.ACTION_GET_CONTENT);
-                                videoPickerIntent.putExtra(MediaStore.EXTRA_SIZE_LIMIT, (long) (1024 * 1024 * 1536));
-
-                                Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
-                                photoPickerIntent.setType("image/*");
-                                Intent chooserIntent = Intent.createChooser(photoPickerIntent, null);
-                                chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, new Intent[]{videoPickerIntent});
-
-                                startActivityForResult(chooserIntent, 1);
-                            } catch (Exception e) {
-                                FileLog.e("tmessages", e);
-                            }
-                        }
-
-                        @Override
-                        public boolean didSelectVideo(String path) {
-//                            if (Build.VERSION.SDK_INT >= 16) {
-//                                return !openVideoEditor(path, true, true);
-//                            } else {
-//                                SendMessagesHelper.prepareSendingVideo(path, 0, 0, 0, 0, null, dialog_id, replyingMessageObject);
-//                                showReplyPanel(false, null, null, null, false, true);
-//                                return true;
-//                            }
-
-                            return false;
-                        }
-                    });
-                    presentFragment(fragment);
+                    attachGalleryHandle();
                 } else if (id == attach_location) {
                     openLocationChooser();
                 }
             }
         });
 
+//        sendButtonContainer = new FrameLayoutFixed(context);
+//        sendButtonContainer.setBackgroundResource(R.drawable.bar_selector);
+//        sendButtonContainer.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
+//        actionBar.addView(sendButtonContainer, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.RIGHT, 56, 0, 40, 0));
+//
+//        sendTextView = new TextView(context);
+//        sendTextView.setTextColor(0xffffffff);
+//        sendTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
+//        sendTextView.setLines(1);
+//        sendTextView.setMaxLines(1);
+//        sendTextView.setSingleLine(true);
+//        sendTextView.setEllipsize(TextUtils.TruncateAt.END);
+//        sendTextView.setGravity(Gravity.LEFT);
+//        sendTextView.setCompoundDrawablePadding(AndroidUtilities.dp(4));
+//        sendTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
+//        sendTextView.setText("Send");
+//        sendButtonContainer.addView(sendTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM, 54, 0, 0, 22));
+//
+
+
+
         avatarContainer = new FrameLayoutFixed(context);
         avatarContainer.setBackgroundResource(R.drawable.bar_selector);
         avatarContainer.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
@@ -394,22 +367,28 @@ public void onClick(View v) {
         onlineTextView.setGravity(Gravity.LEFT);
         avatarContainer.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM, 54, 0, 0, 4));
 
+
+
         ActionBarMenu menu = actionBar.createMenu();
 
-        headerItem = menu.addItem(0, R.drawable.ic_ab_other);
-        //TODO mute temp
-        muteItem = headerItem.addSubItem(mute, null, 0);
-        ((LinearLayout.LayoutParams) headerItem.getLayoutParams()).setMargins(0, 0, AndroidUtilities.dp(-48), 0);
+//        R.drawable.ic_send  - make it white icon then I can use it here. !!
+//        R.drawable.ic_done
+        menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
 
+//        headerItem = menu.addItem(0, R.drawable.ic_ab_other);
+//        //TODO mute temp
+//        muteItem = headerItem.addSubItem(mute, null, 0);
+//        ((LinearLayout.LayoutParams) headerItem.getLayoutParams()).setMargins(0, 0, AndroidUtilities.dp(-48), 0);
+//
         updateTitle();
         updateSubtitle();
         updateTitleIcons();
-
-        attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other);
-        attachItem.addSubItem(attach_photo, LocaleController.getString("ChatTakePhoto", R.string.ChatTakePhoto), R.drawable.ic_attach_photo);
-        attachItem.addSubItem(attach_gallery, LocaleController.getString("ChatGallery", R.string.ChatGallery), R.drawable.ic_attach_gallery);
-        attachItem.addSubItem(attach_location, LocaleController.getString("ChatLocation", R.string.ChatLocation), R.drawable.ic_attach_location);
-        attachItem.setVisibility(View.INVISIBLE);
+//
+//        attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other);
+//        attachItem.addSubItem(attach_photo, LocaleController.getString("ChatTakePhoto", R.string.ChatTakePhoto), R.drawable.ic_attach_photo);
+//        attachItem.addSubItem(attach_gallery, LocaleController.getString("ChatGallery", R.string.ChatGallery), R.drawable.ic_attach_gallery);
+//        attachItem.addSubItem(attach_location, LocaleController.getString("ChatLocation", R.string.ChatLocation), R.drawable.ic_attach_location);
+//        attachItem.setVisibility(View.INVISIBLE);
 
         menuItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_attach);
         menuItem.addSubItem(attach_photo, LocaleController.getString("ChatTakePhoto", R.string.ChatTakePhoto), R.drawable.ic_attach_photo);
@@ -545,6 +524,20 @@ public boolean onTouch(View v, MotionEvent event) {
         emptyView.setTextColor(0xffffffff);
         emptyView.setBackgroundResource(ApplicationLoader.isCustomTheme() ? R.drawable.system_black : R.drawable.system_blue);
         emptyView.setPadding(AndroidUtilities.dp(7), AndroidUtilities.dp(1), AndroidUtilities.dp(7), AndroidUtilities.dp(1));
+        emptyView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                attachGalleryHandle();
+            }
+        });
+
+        emptyView.setOnLongClickListener(new View.OnLongClickListener() {
+            @Override
+            public boolean onLongClick(View v) {
+                return attachPhotoHandle();
+            }
+        });
+
         emptyViewContainer.addView(emptyView, new FrameLayout.LayoutParams(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
 
@@ -852,10 +845,12 @@ private void updateTitleIcons() {
         int rightIcon = 0;
         nameTextView.setCompoundDrawablesWithIntrinsicBounds(leftIcon, 0, rightIcon, 0);
 
-        if (rightIcon != 0) {
-            muteItem.setText(LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications));
-        } else {
-            muteItem.setText(LocaleController.getString("MuteNotifications", R.string.MuteNotifications));
+        if(muteItem != null) {
+            if (rightIcon != 0) {
+                muteItem.setText(LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications));
+            } else {
+                muteItem.setText(LocaleController.getString("MuteNotifications", R.string.MuteNotifications));
+            }
         }
     }
 
@@ -913,11 +908,18 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                     @Override
                     public void sendButtonPressed(int index) {
                         MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) arrayList.get(0);
+                        //TODO works the second if. what is the difference. Probably I should delete on of them
                         if (photoEntry.imagePath != null) {
 //                            SendMessagesHelper.prepareSendingPhoto(photoEntry.imagePath, null, dialog_id, replyingMessageObject, photoEntry.caption);
+                            ArrayList<String> photos = new ArrayList<String>();
+                            photos.add(photoEntry.imagePath);
+                            didSelectPhotos(photos);
 
                         } else if (photoEntry.path != null) {
 //                            SendMessagesHelper.prepareSendingPhoto(photoEntry.path, null, dialog_id, replyingMessageObject, photoEntry.caption);
+                            ArrayList<String> photos = new ArrayList<String>();
+                            photos.add(photoEntry.path);
+                            didSelectPhotos(photos);
                         }
                     }
                 }, null);
@@ -973,10 +975,16 @@ protected void onOpenAnimationEnd() {
     }
 
     private void updateBottomOverlay() {
-        bottomOverlayChatText.setText(LocaleController.getString("DeleteThisChat", R.string.DeleteThisChat));
+        if (bottomOverlayChatText != null) {
+            bottomOverlayChatText.setText(LocaleController.getString("DeleteThisChat", R.string.DeleteThisChat));
+        }
 
-        bottomOverlayChat.setVisibility(View.INVISIBLE);
-        muteItem.setVisibility(View.VISIBLE);
+        if (bottomOverlayChat != null) {
+            bottomOverlayChat.setVisibility(View.INVISIBLE);
+        }
+        if (muteItem != null) {
+            muteItem.setVisibility(View.VISIBLE);
+        }
 //        postCreateActivityEnterView.setFieldFocused(false);
 
     }
@@ -1003,12 +1011,19 @@ public void onResume() {
 
         fixLayout(true);
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
-//        String lastMessageText = preferences.getString("dialog_" + dialog_id, null);
-        String lastMessageText = "";
+        String lastMessageText = preferences.getString("new_post_text", null);
         if (lastMessageText != null) {
-//            preferences.edit().remove("dialog_" + dialog_id).commit();
+            preferences.edit().remove("new_post_text").commit();
             postCreateActivityEnterView.setFieldText(lastMessageText);
         }
+        String lastPhotoURL = preferences.getString("new_post_photo", null);
+        if (!StringUtils.isEmpty(lastPhotoURL) && postObjects.isEmpty()) {
+            preferences.edit().remove("new_post_photo").commit();
+            ArrayList<String> photos = new ArrayList<>();
+            photos.add(lastPhotoURL);
+            didSelectPhotos(photos);
+        }
+
         if (bottomOverlayChat.getVisibility() != View.VISIBLE) {
             postCreateActivityEnterView.setFieldFocused(true);
         }
@@ -1038,7 +1053,10 @@ public void onPause() {
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 //TODO save text before pause.
-//                editor.putString("dialog_" + dialog_id, text);
+                editor.putString("new_post_text", text);
+                if(!postObjects.isEmpty()) {
+                    editor.putString("new_post_photo", postObjects.get(0).getImage().getUrl());
+                }
                 editor.commit();
             }
             postCreateActivityEnterView.setFieldFocused(false);
@@ -1088,7 +1106,7 @@ public void onConfigurationChanged(Configuration newConfig) {
 
     public void createMenu(View v, boolean single) {
         //TODO MOCK
-        if(true) {
+        if (true) {
             return;
         }
         if (actionBar.isActionModeShowed()) {
@@ -1102,7 +1120,7 @@ public void createMenu(View v, boolean single) {
         if (postObject == null) {
             return;
         }
-         int type = getPostType(postObject);
+        int type = getPostType(postObject);
 
         type = 1;
         selectedObject = null;
@@ -1614,4 +1632,73 @@ private void didSelectPhotos(ArrayList<String> photos) {
             postCreateAdapter.notifyDataSetChanged();
         }
     }
+
+
+    private void attachGalleryHandle() {
+        //                    //TODO-TEMP
+        PhotoAlbumPickerActivity fragment = new PhotoAlbumPickerActivity(true, null);
+        fragment.setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate() {
+            @Override
+            public void didSelectPhotos(ArrayList<String> photos, ArrayList<String> captions, ArrayList<MediaController.SearchImage> webPhotos) {
+//                            SendMessagesHelper.prepareSendingPhotos(photos, null, dialog_id, replyingMessageObject, captions);
+//                            SendMessagesHelper.prepareSendingPhotosSearch(webPhotos, dialog_id, replyingMessageObject);
+//                            showReplyPanel(false, null, null, null, false, true);
+//                            System.out.println();
+                PostCreateActivity.this.didSelectPhotos(photos);
+
+            }
+
+            @Override
+            public void startPhotoSelectActivity() {
+                //TODO-was ?
+                try {
+                    Intent videoPickerIntent = new Intent();
+                    videoPickerIntent.setType("video/*");
+                    videoPickerIntent.setAction(Intent.ACTION_GET_CONTENT);
+                    videoPickerIntent.putExtra(MediaStore.EXTRA_SIZE_LIMIT, (long) (1024 * 1024 * 1536));
+
+                    Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
+                    photoPickerIntent.setType("image/*");
+                    Intent chooserIntent = Intent.createChooser(photoPickerIntent, null);
+                    chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, new Intent[]{videoPickerIntent});
+
+                    startActivityForResult(chooserIntent, 1);
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+
+            @Override
+            public boolean didSelectVideo(String path) {
+//                            if (Build.VERSION.SDK_INT >= 16) {
+//                                return !openVideoEditor(path, true, true);
+//                            } else {
+//                                SendMessagesHelper.prepareSendingVideo(path, 0, 0, 0, 0, null, dialog_id, replyingMessageObject);
+//                                showReplyPanel(false, null, null, null, false, true);
+//                                return true;
+//                            }
+
+                return false;
+            }
+        });
+        presentFragment(fragment);
+    }
+
+
+    private boolean attachPhotoHandle() {
+        try {
+            Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+            File image = AndroidUtilities.generatePicturePath();
+            if (image != null) {
+                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(image));
+                currentPicturePath = image.getAbsolutePath();
+            }
+            startActivityForResult(takePictureIntent, 0);
+            return true;
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+            return false;
+        }
+    }
+
 }
