diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 6d01bec6f..16d84c1b4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -198,6 +198,8 @@
 @SuppressWarnings("unchecked")
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate, LocationActivity.LocationActivityDelegate {
 
+    private static boolean IS_ANONYMOUS_FORWARD = false;
+
     protected TLRPC.Chat currentChat;
     protected TLRPC.User currentUser;
     protected TLRPC.EncryptedChat currentEncryptedChat;
@@ -1189,6 +1191,7 @@ public void onItemClick(final int id) {
                     }
                     createDeleteMessagesAlert(null, null);
                 } else if (id == forward) {
+                    IS_ANONYMOUS_FORWARD = false;
                     openForward();
                 } else if (id == chat_enc_timer) {
                     if (getParentActivity() == null) {
@@ -6576,7 +6579,7 @@ public void showFieldPanel(boolean show, MessageObject messageObjectToReply, Mes
                 }
             }
             if (forwardingMessages != null) {
-                forwardMessages(forwardingMessages, false);
+                forwardMessages(forwardingMessages, IS_ANONYMOUS_FORWARD);
             }
             chatActivityEnterView.setForceShowSendButton(false, false);
             chatActivityEnterView.hideTopView(animated);
@@ -12346,6 +12349,9 @@ private void createMenu(View v, boolean single, boolean listView, float x, float
                             items.add(LocaleController.getString("Forward", R.string.Forward));
                             options.add(2);
                             icons.add(R.drawable.msg_forward);
+                            items.add("Anonymous Forward");
+                            options.add(202);
+                            icons.add(R.drawable.msg_forward);
                         }
                         if (allowUnpin) {
                             items.add(LocaleController.getString("UnpinMessage", R.string.UnpinMessage));
@@ -12818,6 +12824,19 @@ private void processSelectedOption(int option) {
                 break;
             }
             case 2: {
+                IS_ANONYMOUS_FORWARD = false;
+                forwardingMessage = selectedObject;
+                forwardingMessageGroup = selectedObjectGroup;
+                Bundle args = new Bundle();
+                args.putBoolean("onlySelect", true);
+                args.putInt("dialogsType", 3);
+                DialogsActivity fragment = new DialogsActivity(args);
+                fragment.setDelegate(this);
+                presentFragment(fragment);
+                break;
+            }
+            case 202: {
+                IS_ANONYMOUS_FORWARD = true;
                 forwardingMessage = selectedObject;
                 forwardingMessageGroup = selectedObjectGroup;
                 Bundle args = new Bundle();
