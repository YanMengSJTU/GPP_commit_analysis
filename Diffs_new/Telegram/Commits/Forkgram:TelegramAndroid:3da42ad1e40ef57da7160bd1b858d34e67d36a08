diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 205d30dc5..845086640 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -6056,7 +6056,8 @@ private void setMessageObjectInternal(MessageObject messageObject) {
 
             // Time and date of forwarded messages.
             java.util.Date dateOfFwdMsg = new java.util.Date((long)messageObject.messageOwner.fwd_from.date * 1000); 
-            String timeOfFwdMsg = "Date: " + new java.text.SimpleDateFormat("dd.MM.yyyy' 'HH:mm:ss").format(dateOfFwdMsg);
+            String startString = LocaleController.getString("DateForward", R.string.DateForward);
+            String timeOfFwdMsg = startString + ": " + new java.text.SimpleDateFormat("dd.MM.yyyy' 'HH:mm:ss").format(dateOfFwdMsg);
 
             if (messageObject.messageOwner.fwd_from.channel_id != 0) {
                 currentForwardChannel = MessagesController.getInstance(currentAccount).getChat(messageObject.messageOwner.fwd_from.channel_id);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 69955205d..5bce1367c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -1223,9 +1223,9 @@ public void onItemClick(final int id) {
                     checkAndUpdateAvatar();
                     if (hideTitleItem != null) {
                         if (SharedConfig.hideTitleDialog) {
-                            hideTitleItem.setText("Show title");
+                            hideTitleItem.setText(LocaleController.getString("ShowTitle", R.string.ShowTitle));
                         } else {
-                            hideTitleItem.setText("Hide title");
+                            hideTitleItem.setText(LocaleController.getString("HideTitle", R.string.HideTitle));
                         }
                     }
 
@@ -1404,7 +1404,9 @@ public void onCaptionCleared() {
             updateBotButtons();
         }
 
-        String hideTitleString = SharedConfig.hideTitleDialog ? "Show title" : "Hide title";
+        String show = LocaleController.getString("ShowTitle", R.string.ShowTitle);
+        String hide = LocaleController.getString("HideTitle", R.string.HideTitle);
+        String hideTitleString = SharedConfig.hideTitleDialog ? show : hide;
         hideTitleItem = headerItem.addSubItem(hideTitle, hideTitleString);
 
         if (currentUser != null) {
@@ -10658,7 +10660,7 @@ private void createMenu(View v, boolean single, boolean listView, boolean search
                         if (!selectedObject.needDrawBluredPreview() && !selectedObject.isLiveLocation()) {
                             items.add(LocaleController.getString("Forward", R.string.Forward));
                             options.add(2);
-                            items.add("Anonymous Forward");
+                            items.add(LocaleController.getString("AnonymousForward", R.string.AnonymousForward));
                             options.add(202);
                         }
                         if (allowUnpin) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 849b0bb9e..93e337e25 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -959,6 +959,8 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         Set<String> setStr = preferences.getStringSet("setOfDialogsToHide", (Set<String>)Collections.EMPTY_SET);
                         String selectedDialogStr = String.valueOf(selectedDialog);
                         final boolean isAlreadyHided = setStr.contains(selectedDialogStr);
+                        String removeHideMode = LocaleController.getString("RemoveFromHideMode", R.string.RemoveFromHideMode);
+                        String addHideMode = LocaleController.getString("AddToHideMode", R.string.AddToHideMode);
                         /////
 
                         builder.setItems(new CharSequence[]{
@@ -966,7 +968,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                                 LocaleController.getString("ClearHistory", R.string.ClearHistory),
                                 hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
                                 isChat ? LocaleController.getString("DeleteChat", R.string.DeleteChat) : isBot ? LocaleController.getString("DeleteAndStop", R.string.DeleteAndStop) : LocaleController.getString("Delete", R.string.Delete),
-                                isAlreadyHided ? "Remove from Hide Mode" : "Add to Hide Mode"
+                                isAlreadyHided ? removeHideMode : addHideMode
                         }, new int[]{
                                 dialog.pinned ? R.drawable.chats_unpin : R.drawable.chats_pin,
                                 R.drawable.chats_clear,
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 644230255..26bcde49a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -1299,17 +1299,29 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     if (position == enableAnimationsRow) {
                         textCell.setTextAndCheck(LocaleController.getString("EnableAnimations", R.string.EnableAnimations), preferences.getBoolean("view_animations", true), false);
                     } else if (position == squareAvatarsRow) {
-                        textCell.setTextAndCheck("Square Avatars (restart required)", preferences.getBoolean("squareAvatars", true), false);
+                        String t = LocaleController.getString("SquareAvatars", R.string.SquareAvatars);
+                        String info = LocaleController.getString("SquareAvatarsInfo", R.string.SquareAvatarsInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("squareAvatars", true), false, false);
                     } else if (position == inappCameraRow) {
-                        textCell.setTextAndCheck("Enable In-App Camera", preferences.getBoolean("inappCamera", true), false);
+                        String t = LocaleController.getString("InAppCamera", R.string.InAppCamera);
+                        String info = LocaleController.getString("InAppCameraInfo", R.string.InAppCameraInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("inappCamera", true), false, false);
                     } else if (position == syncPinsRow) {
-                        textCell.setTextAndCheck("Sync Pinned Dialogs", preferences.getBoolean("syncPins", true), false);
+                        String t = LocaleController.getString("SyncPins", R.string.SyncPins);
+                        String info = LocaleController.getString("SyncPinsInfo", R.string.SyncPinsInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("syncPins", true), true, false);
                     } else if (position == reverseOrderPinsRow) {
-                        textCell.setTextAndCheck("Reverse Pinned Dialogs Order", preferences.getBoolean("reverseOrderPins", false), false);
+                        String t = LocaleController.getString("ReverseOrderPins", R.string.ReverseOrderPins);
+                        String info = LocaleController.getString("ReverseOrderPinsInfo", R.string.ReverseOrderPinsInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("reverseOrderPins", false), true, false);
                     } else if (position == unmutedOnTopRow) {
-                        textCell.setTextAndCheck("Unmuted Messages are Primary", preferences.getBoolean("unmutedOnTop", false), false);
+                        String t = LocaleController.getString("UnmutedOnTop", R.string.UnmutedOnTop);
+                        String info = LocaleController.getString("UnmutedOnTopInfo", R.string.UnmutedOnTopInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("unmutedOnTop", false), true, false);
                     } else if (position == photoHasStickerRow) {
-                        textCell.setTextAndCheck("Send Sticker Info in Photo", preferences.getBoolean("photoHasSticker", false), false);
+                        String t = LocaleController.getString("PhotoHasSticker", R.string.PhotoHasSticker);
+                        String info = LocaleController.getString("PhotoHasStickerInfo", R.string.PhotoHasStickerInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("photoHasSticker", false), true, false);
                     } else if (position == sendByEnterRow) {
                         textCell.setTextAndCheck(LocaleController.getString("SendByEnter", R.string.SendByEnter), preferences.getBoolean("send_by_enter", false), true);
                     } else if (position == saveToGalleryRow) {
@@ -1335,7 +1347,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     } else if (position == numberSectionRow) {
                         ((HeaderCell) holder.itemView).setText(LocaleController.getString("Info", R.string.Info));
                     } else if (position == forkSectionRow) {
-                        ((HeaderCell) holder.itemView).setText("Fork Settings");
+                        ((HeaderCell) holder.itemView).setText(LocaleController.getString("ForkSettingsTitle", R.string.ForkSettingsTitle));
                     }
                     break;
                 }
diff --git a/TMessagesProj/src/main/res/values-ru/strings.xml b/TMessagesProj/src/main/res/values-ru/strings.xml
new file mode 100644
index 000000000..72e587401
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-ru/strings.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="AppName">Fork Client</string>
+    <string name="AppNameBeta">Fork Client</string>
+    <string name="LanguageName">Русский</string>
+    <string name="English">Русский</string>
+    <string name="LanguageNameInEnglish">Russian</string>
+    <string name="LanguageCode">ru</string>
+    <string name="ContinueOnThisLanguage">Continue in English</string>
+    <!--signin view-->
+    <!--FORK CLIENT-->
+    <string name="AnonymousForward">Переслать анонимно</string>
+    <string name="DateForward">Дата</string>
+    <string name="ShowTitle">Показать заголовок</string>
+    <string name="HideTitle">Скрыть заголовок</string>
+    <string name="RemoveFromHideMode">Убрать из Скрытого Режима</string>
+    <string name="AddToHideMode">Добавить в Скрытый Режим</string>
+    <!--fork settings view-->
+    <string name="ForkSettingsTitle">Настройки Fork Client</string>
+    <string name="SquareAvatars">Квадратные аватарки</string>
+    <string name="SquareAvatarsInfo">Требуется рестарт</string>
+    <string name="InAppCamera">Встроенная камера</string>
+    <string name="InAppCameraInfo">Во вложениях</string>
+    <string name="SyncPins">Синх. закреплённых диалогов</string>
+    <string name="SyncPinsInfo">В откл. режиме даёт безлимитное количество закреплённых диалогов</string>
+    <string name="ReverseOrderPins">Обратный порядок</string>
+    <string name="ReverseOrderPinsInfo">Закреплённых диалогов</string>
+    <string name="UnmutedOnTop">Сообщения с увед. находятся сверху</string>
+    <string name="UnmutedOnTopInfo">Сообщения будут под закреплёнными диалогами</string>
+    <string name="PhotoHasSticker">Отправлять инфо о стикере в фото</string>
+    <string name="PhotoHasStickerInfo">При использовании стикеров на фотографии</string>
+    
+</resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index dead10f58..a0ba189b4 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -2181,4 +2181,25 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s at %2$s</string>
+    <!--FORK CLIENT-->
+    <string name="AnonymousForward">Anonymous Forward</string>
+    <string name="DateForward">Date</string>
+    <string name="ShowTitle">Show title</string>
+    <string name="HideTitle">Hide title</string>
+    <string name="RemoveFromHideMode">Remove from Hide Mode</string>
+    <string name="AddToHideMode">Add to Hide Mode</string>
+    <!--fork settings view-->
+    <string name="ForkSettingsTitle">Fork Client Settings</string>
+    <string name="SquareAvatars">Square Avatars</string>
+    <string name="SquareAvatarsInfo">Restart required</string>
+    <string name="InAppCamera">Enable In-App Camera</string>
+    <string name="InAppCameraInfo">In Attachments</string>
+    <string name="SyncPins">Sync Pinned Dialogs</string>
+    <string name="SyncPinsInfo">Sync off allows to pin unlimited amount of dialogs</string>
+    <string name="ReverseOrderPins">Reverse Pinned Dialogs Order</string>
+    <string name="ReverseOrderPinsInfo"></string>
+    <string name="UnmutedOnTop">Unmuted Messages are Primary</string>
+    <string name="UnmutedOnTopInfo">Unmuted Messages will be under pinned dialogs</string>
+    <string name="PhotoHasSticker">Send Sticker Info in Photo</string>
+    <string name="PhotoHasStickerInfo">When using Stickers on Photo</string>
 </resources>
