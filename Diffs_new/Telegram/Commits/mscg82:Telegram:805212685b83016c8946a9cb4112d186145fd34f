diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 4109374aa..6c3831ef2 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -37,6 +37,8 @@
 import org.json.JSONObject;
 import org.telegram.objects.MessageObject;
 import org.telegram.objects.PhotoObject;
+import org.telegram.objects.VibrationSpeed;
+import org.telegram.ui.Dialog.VibrationCountDialog;
 import org.telegram.ui.LaunchActivity;
 import org.telegram.ui.ApplicationLoader;
 
@@ -4492,6 +4494,7 @@ private void showInAppNotification(MessageObject messageObject) {
                     choosenSoundPath = preferences.getString("GroupSoundPath", defaultPath);
                 }
                 needVibrate = preferences.getBoolean("EnableVibrateGroup", true);
+
             } else if (user_id != 0) {
                 choosenSoundPath = preferences.getString("sound_path_" + user_id, null);
                 if (choosenSoundPath != null && choosenSoundPath.equals(defaultPath)) {
@@ -4500,6 +4503,7 @@ private void showInAppNotification(MessageObject messageObject) {
                     choosenSoundPath = preferences.getString("GlobalSoundPath", defaultPath);
                 }
                 needVibrate = preferences.getBoolean("EnableVibrateAll", true);
+
             }
 
             if (!needVibrate && vibrate_override == 1) {
@@ -4508,6 +4512,18 @@ private void showInAppNotification(MessageObject messageObject) {
                 needVibrate = false;
             }
 
+            VibrationSpeed speed = VibrationSpeed.getDefault();
+            int vibrationCount = VibrationCountDialog.DEFAULT_VIBRATION_COUNT;
+            if(needVibrate) {
+                if (chat_id != 0) {
+                    speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                    vibrationCount = preferences.getInt("VibrationCountGroup", vibrationCount);
+                } else if (user_id != 0) {
+                    speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                    vibrationCount = preferences.getInt("VibrationCount", vibrationCount);
+                }
+            }
+
             intent.setAction("com.tmessages.openchat" + Math.random() + Integer.MAX_VALUE);
             intent.setFlags(32768);
             PendingIntent contentIntent = PendingIntent.getActivity(ApplicationLoader.applicationContext, 0, intent, PendingIntent.FLAG_ONE_SHOT);
@@ -4543,8 +4559,35 @@ private void showInAppNotification(MessageObject messageObject) {
             notification.ledOnMS = 1000;
             notification.ledOffMS = 1000;
             if (needVibrate) {
-                notification.defaults = Notification.DEFAULT_VIBRATE;
-                notification.vibrate = new long[]{0, 100, 0, 100};
+                long pause, duration;
+                switch (speed) {
+                    case FAST:
+                        pause = 0;
+                        duration = 100;
+                        break;
+                    case MEDIUM:
+                        pause = 200;
+                        duration = 300;
+                        break;
+                    case SLOW:
+                        pause = 200;
+                        duration = 800;
+                        break;
+                    case DEFAULT:
+                    default:
+                        pause = -1;
+                        duration = -1;
+                        notification.defaults = Notification.DEFAULT_VIBRATE;
+                }
+                if(pause >= 0 && duration >= 0) {
+                    long pattern[] = new long[vibrationCount * 2];
+                    pattern[0] = 0l;
+                    for(int i = 1, l = pattern.length; i < l; i++) {
+                        pattern[i] = ((i % 2 != 0) ? duration : pause);
+                    }
+
+                    notification.vibrate = pattern;
+                }
             } else {
                 notification.vibrate = new long[]{0, 0};
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
index a64a9d85c..644dca564 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
@@ -9,6 +9,7 @@
 package org.telegram.ui;
 
 import android.app.Activity;
+import android.app.Dialog;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -17,6 +18,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.provider.Settings;
+import android.support.v4.app.DialogFragment;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarActivity;
 import android.view.LayoutInflater;
@@ -39,6 +41,9 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
 import org.telegram.messenger.Utilities;
+import org.telegram.objects.VibrationSpeed;
+import org.telegram.ui.Dialog.VibrationCountDialog;
+import org.telegram.ui.Dialog.VibrationSpeedDialog;
 import org.telegram.ui.Views.BaseFragment;
 import org.telegram.ui.Views.OnSwipeTouchListener;
 
@@ -50,11 +55,15 @@
     private int messageAlertRow;
     private int messagePreviewRow;
     private int messageVibrateRow;
+    private int messageVibrationSpeedRow;
+    private int messageVibrationCountRow;
     private int messageSoundRow;
     private int groupSectionRow;
     private int groupAlertRow;
     private int groupPreviewRow;
     private int groupVibrateRow;
+    private int groupVibrationSpeedRow;
+    private int groupVibrationCountRow;
     private int groupSoundRow;
     private int inappSectionRow;
     private int inappSoundRow;
@@ -74,11 +83,15 @@ public boolean onFragmentCreate() {
         messageAlertRow = rowCount++;
         messagePreviewRow = rowCount++;
         messageVibrateRow = rowCount++;
+        messageVibrationSpeedRow = rowCount++;
+        messageVibrationCountRow = rowCount++;
         messageSoundRow = rowCount++;
         groupSectionRow = rowCount++;
         groupAlertRow = rowCount++;
         groupPreviewRow = rowCount++;
         groupVibrateRow = rowCount++;
+        groupVibrationSpeedRow = rowCount++;
+        groupVibrationCountRow = rowCount++;
         groupSoundRow = rowCount++;
         inappSectionRow = rowCount++;
         inappSoundRow = rowCount++;
@@ -153,6 +166,60 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         }
                         editor.commit();
                         listView.invalidateViews();
+                    } else if (i == messageVibrationSpeedRow || i == groupVibrationSpeedRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final int index = i;
+                        VibrationSpeed speed = VibrationSpeed.getDefault();
+                        if (index == messageVibrationSpeedRow) {
+                            speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                        } else if (index == groupVibrationSpeedRow) {
+                            speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                        }
+                        VibrationSpeedDialog vibrationSpeedDialog = new VibrationSpeedDialog();
+                        Bundle args = new Bundle();
+                        args.putSerializable(VibrationSpeedDialog.KEY_CURRENT_SPEED, speed);
+                        args.putSerializable(VibrationSpeedDialog.KEY_LISTENER, new VibrationSpeedDialog.VibrationSpeedSelectionListener() {
+                            @Override
+                            public void onSpeedSelected(DialogFragment dialog, VibrationSpeed selectedSpeed) {
+                                SharedPreferences.Editor editor = preferences.edit();
+                                if (index == messageVibrationSpeedRow) {
+                                    editor.putInt("VibrationSpeed", selectedSpeed.getValue());
+                                } else if (index == groupVibrationSpeedRow) {
+                                    editor.putInt("VibrationSpeedGroup", selectedSpeed.getValue());
+                                }
+                                editor.commit();
+                                listView.invalidateViews();
+                            }
+                        });
+                        vibrationSpeedDialog.setArguments(args);
+                        vibrationSpeedDialog.show(getFragmentManager(), "VibrationSpeedDialog");
+                    } else if (i == messageVibrationCountRow || i == groupVibrationCountRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final int index = i;
+                        int count = VibrationCountDialog.DEFAULT_VIBRATION_COUNT;
+                        if (index == messageVibrationCountRow) {
+                            count = preferences.getInt("VibrationCount", count);
+                        } else if (index == groupVibrationCountRow) {
+                            count = preferences.getInt("VibrationCountGroup", count);
+                        }
+                        VibrationCountDialog vibrationCountDialog = new VibrationCountDialog();
+                        Bundle args = new Bundle();
+                        args.putInt(VibrationCountDialog.KEY_CURRENT_COUNT, count);
+                        args.putSerializable(VibrationCountDialog.KEY_LISTENER, new VibrationCountDialog.VibrationCountSelectionListener() {
+                            @Override
+                            public void onCountSelected(DialogFragment dialog, int selectedCount) {
+                                SharedPreferences.Editor editor = preferences.edit();
+                                if (index == messageVibrationCountRow) {
+                                    editor.putInt("VibrationCount", selectedCount);
+                                } else if (index == groupVibrationCountRow) {
+                                    editor.putInt("VibrationCountGroup", selectedCount);
+                                }
+                                editor.commit();
+                                listView.invalidateViews();
+                            }
+                        });
+                        vibrationCountDialog.setArguments(args);
+                        vibrationCountDialog.show(getFragmentManager(), "VibrateCountDialog");
                     } else if (i == messageSoundRow || i == groupSoundRow) {
                         try {
                             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
@@ -389,7 +456,29 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return !(i == messageSectionRow || i == groupSectionRow || i == inappSectionRow || i == eventsSectionRow || i == pebbleSectionRow || i == resetSectionRow);
+            if(i == messageVibrationSpeedRow || i == messageVibrationCountRow || i == groupVibrationSpeedRow || i == groupVibrationCountRow) {
+                boolean enabled = true;
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                if(i == messageVibrationSpeedRow) {
+                    if(!preferences.getBoolean("EnableVibrateAll", true))
+                        enabled = false;
+                }
+                else if(i == groupVibrationSpeedRow) {
+                    if(!preferences.getBoolean("EnableVibrateGroup", true))
+                        enabled = false;
+                }
+                else if(i == messageVibrationCountRow) {
+                    if(!preferences.getBoolean("EnableVibrateAll", true) || preferences.getInt("VibrationSpeed", 0) == 0)
+                        enabled = false;
+                }
+                else if(i == groupVibrationCountRow) {
+                    if(!preferences.getBoolean("EnableVibrateGroup", true) || preferences.getInt("VibrationSpeedGroup", 0) == 0)
+                        enabled = false;
+                }
+                return enabled;
+            }
+            else
+                return !(i == messageSectionRow || i == groupSectionRow || i == inappSectionRow || i == eventsSectionRow || i == pebbleSectionRow || i == resetSectionRow);
         }
 
         @Override
@@ -524,6 +613,26 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     }
                     textView.setText(LocaleController.getString("Sound", R.string.Sound));
                     divider.setVisibility(View.INVISIBLE);
+                } else if (i == messageVibrationSpeedRow || i == groupVibrationSpeedRow) {
+                    VibrationSpeed speed = VibrationSpeed.getDefault();
+                    if (i == messageVibrationSpeedRow) {
+                        speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                    } else if (i == groupVibrationSpeedRow) {
+                        speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                    }
+                    textViewDetail.setText(LocaleController.getString(speed.getLocaleKey(), speed.getResourceId()));
+                    textView.setText(LocaleController.getString("VibrateSpeed", R.string.VibrateSpeed));
+                    divider.setVisibility(View.VISIBLE);
+                }  else if (i == messageVibrationCountRow || i == groupVibrationCountRow) {
+                    int count = VibrationCountDialog.DEFAULT_VIBRATION_COUNT;
+                    if (i == messageVibrationCountRow) {
+                        count = preferences.getInt("VibrationCount", count);
+                    } else if (i == groupVibrationCountRow) {
+                        count = preferences.getInt("VibrationCountGroup", count);
+                    }
+                    textViewDetail.setText(String.valueOf(count));
+                    textView.setText(LocaleController.getString("VibrateCount", R.string.VibrateCount));
+                    divider.setVisibility(View.VISIBLE);
                 } else if (i == resetNotificationsRow) {
                     textView.setText(LocaleController.getString("ResetAllNotifications", R.string.ResetAllNotifications));
                     textViewDetail.setText(LocaleController.getString("UndoAllCustom", R.string.UndoAllCustom));
@@ -538,6 +647,8 @@ public View getView(int i, View view, ViewGroup viewGroup) {
         public int getItemViewType(int i) {
             if (i == messageSectionRow || i == groupSectionRow || i == inappSectionRow || i == eventsSectionRow || i == pebbleSectionRow || i == resetSectionRow) {
                 return 0;
+            } else if(i == messageVibrationSpeedRow || i == groupVibrationSpeedRow || i == messageVibrationCountRow || i == groupVibrationCountRow) {
+                return 2;
             } else if (i == messageAlertRow || i == messagePreviewRow || i == messageVibrateRow ||
                     i == groupAlertRow || i == groupPreviewRow || i == groupVibrateRow ||
                     i == inappSoundRow || i == inappVibrateRow || i == inappPreviewRow ||
