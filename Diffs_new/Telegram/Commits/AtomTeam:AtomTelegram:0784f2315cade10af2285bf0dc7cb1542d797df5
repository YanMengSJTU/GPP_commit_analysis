diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java b/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java
index 25075edec..b081da7d0 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java
@@ -800,7 +800,7 @@ public void run() {
         } else {
             TLObject req = new TLRPC.TL_messages_getAllStickers();
             final int hash = ((TLRPC.TL_messages_getAllStickers) req).hash = force ? 0 : loadHash[type];
-            /*
+            /*//
             TLObject req;
             final int hash;
             if (type == TYPE_IMAGE) {
diff --git a/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java b/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java
index 4adc66a7e..505788fd2 100644
--- a/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java
+++ b/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java
@@ -896,7 +896,7 @@ public void onTypeChanged() {
     private void updateStickersTitle() {
         if (stickersView == null || stickersView.getVisibility() != VISIBLE) {
             return;
-        }/*
+        }/*//
         switch (stickersView.getCurrentType()) {
             case StickersQuery.TYPE_IMAGE:
                 actionBar.setTitle(LocaleController.getString("PaintStickers", R.string.PaintStickers));
diff --git a/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java
index eb52854c9..db93a1f5b 100644
--- a/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java
@@ -1165,7 +1165,7 @@ public ActionMode startActionModeForChild(View originalView, ActionMode.Callback
         containerView.setFocusable(false);
         windowView.addView(containerView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
         if (Build.VERSION.SDK_INT >= 21) {
-            //containerView.setFitsSystemWindows(true);
+            containerView.setFitsSystemWindows(true);
             containerView.setOnApplyWindowInsetsListener(new View.OnApplyWindowInsetsListener() {
                 @SuppressLint("NewApi")
                 @Override
@@ -1175,7 +1175,7 @@ public WindowInsets onApplyWindowInsets(View v, WindowInsets insets) {
                     return insets.consumeSystemWindowInsets();
                 }
             });
-            //containerView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);*/
+            containerView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
         }
 
         windowLayoutParams = new WindowManager.LayoutParams();
@@ -1183,7 +1183,7 @@ public WindowInsets onApplyWindowInsets(View v, WindowInsets insets) {
         windowLayoutParams.format = PixelFormat.TRANSLUCENT;
         windowLayoutParams.width = WindowManager.LayoutParams.MATCH_PARENT;
         windowLayoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-        windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
+        //windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
         if (Build.VERSION.SDK_INT >= 21) {
             windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN |
                     WindowManager.LayoutParams.FLAG_LAYOUT_INSET_DECOR |
@@ -2165,7 +2165,7 @@ private void updateCaptionTextForCurrentPhoto(Object object) {
         if (object instanceof MediaController.PhotoEntry) {
             caption = ((MediaController.PhotoEntry) object).caption;
         } else if (object instanceof TLRPC.BotInlineResult) {
-            //caption = ((TLRPC.BotInlineResult) object).send_message.caption;
+            caption = ((TLRPC.BotInlineResult) object).send_message.caption;
         } else if (object instanceof MediaController.SearchImage) {
             caption = ((MediaController.SearchImage) object).caption;
         }
@@ -2262,7 +2262,7 @@ private void applyCurrentEditMode() {
             bitmap = photoFilterView.getBitmap();
         } else if (currentEditMode == 3) {
             bitmap = photoPaintView.getBitmap();
-            //stickers = photoPaintView.getMasks();
+            stickers = photoPaintView.getMasks();
         }
         if (bitmap != null) {
             TLRPC.PhotoSize size = ImageLoader.scaleAndSaveImage(bitmap, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), 80, false, 101, 101);
@@ -3303,7 +3303,7 @@ private void setImageIndex(int index, boolean init) {
                     currentPathObject = botInlineResult.content_url;
                     isVideo = botInlineResult.type.equals("video");
                 }
-                //caption = botInlineResult.send_message.caption;
+                caption = botInlineResult.send_message.caption;
             } else if (object instanceof MediaController.SearchImage) {
                 MediaController.SearchImage searchImage = (MediaController.SearchImage) object;
                 if (searchImage.document != null) {
@@ -3732,7 +3732,7 @@ public boolean openPhoto(final MessageObject messageObject, final TLRPC.FileLoca
 
 
         try {
-            windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
+            //windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
             if (Build.VERSION.SDK_INT >= 21) {
                 windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN |
                         WindowManager.LayoutParams.FLAG_LAYOUT_INSET_DECOR |
