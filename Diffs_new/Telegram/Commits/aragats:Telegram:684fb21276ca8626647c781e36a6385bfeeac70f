diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
index e15b04180..29c324e28 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
@@ -36,7 +36,9 @@
 public class PostMediaCell extends BaseCell implements MediaController.FileDownloadProgressListener {
 
 
-    public interface PostBaseCellDelegate {
+    public interface PostMediaCellDelegate {
+
+        //base delegate
         void didPressedUserAvatar(PostMediaCell cell);
 
         void didPressedCancelSendButton(PostMediaCell cell);
@@ -50,9 +52,10 @@
         void needOpenWebView(String url, String title, String originalUrl, int w, int h);
 
         boolean canPerformActions();
-    }
 
-    public interface PostMediaCellDelegate {
+
+        // media delegate
+
         void didClickedImage(PostMediaCell cell);
 
         void didPressedOther(PostMediaCell cell);
@@ -60,7 +63,7 @@
 
 
     //TODO from chatBaseCell
-    private PostBaseCellDelegate delegate = null;
+    private PostMediaCellDelegate delegate = null;
     protected int backgroundWidth = 100;
     private AvatarDrawable imageDrawable;
 //    private ImageReceiver imageDrawable;
@@ -77,10 +80,6 @@
     private static TextPaint infoPaint;
     private static MessageObject lastDownloadedGifMessage = null;
     private static TextPaint namePaint;
-    private static Paint docBackPaint;
-    private static Paint deleteProgressPaint;
-    private static TextPaint locationTitlePaint;
-    private static TextPaint locationAddressPaint;
 
     private RadialProgress radialProgress;
 
@@ -113,7 +112,6 @@
     private int nameWidth = 0;
     private String currentNameString;
 
-    private PostMediaCellDelegate mediaDelegate = null;
     private RectF deleteProgressRect = new RectF();
 
     private int captionX;
@@ -131,17 +129,9 @@ public PostMediaCell(Context context) {
             namePaint.setColor(0xff212121);
             namePaint.setTextSize(AndroidUtilities.dp(16));
 
-            docBackPaint = new Paint();
-
-            deleteProgressPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-            deleteProgressPaint.setColor(0xffe4e2e0);
+//            backgroundMediaDrawableOutSelected = getResources().getDrawable(org.telegram.messenger.R.drawable.msg_out_photo_selected);
+//            backgroundMediaDrawableOut = getResources().getDrawable(org.telegram.messenger.R.drawable.msg_out_photo);
 
-            locationTitlePaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
-            locationTitlePaint.setTextSize(AndroidUtilities.dp(14));
-            locationTitlePaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-
-            locationAddressPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
-            locationAddressPaint.setTextSize(AndroidUtilities.dp(14));
 
         }
 
@@ -158,16 +148,17 @@ public PostMediaCell(Context context) {
 
     //TODO two delegates
 
-    public void setMediaDelegate(PostMediaCellDelegate delegate) {
-        this.mediaDelegate = delegate;
-    }
-
-    public void setDelegate(PostBaseCellDelegate delegate) {
+    public void setDelegate(PostMediaCellDelegate delegate) {
         this.delegate = delegate;
     }
+
     @Override
     protected void onDetachedFromWindow() {
         super.onDetachedFromWindow();
+        //old
+//        if (photoImage != null) {
+//            photoImage.clearImage();
+//        }
         photoImage.onDetachedFromWindow();
         MediaController.getInstance().removeLoadingFileObserver(this);
     }
@@ -231,8 +222,8 @@ public boolean onTouchEvent(MotionEvent event) {
                 if (event.getAction() == MotionEvent.ACTION_UP) {
                     otherPressed = false;
                     playSoundEffect(SoundEffectConstants.CLICK);
-                    if (mediaDelegate != null) {
-                        mediaDelegate.didPressedOther(this);
+                    if (delegate != null) {
+                        delegate.didPressedOther(this);
                     }
                 } else if (event.getAction() == MotionEvent.ACTION_CANCEL) {
                     otherPressed = false;
@@ -254,7 +245,7 @@ public boolean onTouchEvent(MotionEvent event) {
 
     private void didClickedImage() {
         if (this.delegate != null) {
-            this.mediaDelegate.didClickedImage(this);
+            this.delegate.didClickedImage(this);
         }
     }
 
@@ -697,7 +688,8 @@ public ImageReceiver getPhotoImage() {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14) + additionHeight);
+        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14));
+//        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14) + additionHeight);
 //        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14) + namesOffset + additionHeight);
     }
 
@@ -705,6 +697,11 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
         super.onLayout(changed, left, top, right, bottom);
 
+        //TODO from old. It was a reason why new PostMedia was not displayed
+        layoutWidth = getMeasuredWidth();
+        layoutHeight = getMeasuredHeight();
+
+
         int x = layoutWidth - backgroundWidth - AndroidUtilities.dp(3);
 
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 2084726f9..bf51a4eee 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -35,7 +35,6 @@
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
 import android.widget.FrameLayout;
-import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.TextView;
@@ -58,16 +57,16 @@
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.dto.Post;
+import org.telegram.messenger.dto.Venue;
 import org.telegram.messenger.object.PostObject;
-import org.telegram.messenger.object.UserObject;
 import org.telegram.messenger.service.mock.PostServiceMock;
+import org.telegram.messenger.service.mock.VenueServiceMock;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.BottomSheet;
-import org.telegram.ui.Cells.PostCell;
-import org.telegram.ui.Cells.PostMediaCellOld;
+import org.telegram.ui.Cells.PostMediaCell;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.FrameLayoutFixed;
@@ -76,7 +75,6 @@
 import org.telegram.ui.Components.RecyclerListView;
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
-import org.telegram.ui.Components.TimerDrawable;
 import org.telegram.ui.Components.WebFrameLayout;
 
 import java.io.File;
@@ -86,7 +84,7 @@
 public class PostCreateActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate,
         PostPhotoViewerProvider {
 
-    private ArrayList<PostMediaCellOld> postMediaCellsCache = new ArrayList<>();
+    private ArrayList<PostMediaCell> postMediaCellsCache = new ArrayList<>();
 
     private FrameLayout progressView;
     private FrameLayout bottomOverlay;
@@ -261,7 +259,7 @@ public void onFragmentDestroy() {
     public View createView(Context context, LayoutInflater inflater) {
 
         for (int a = 0; a < 4; a++) {
-            postMediaCellsCache.add(new PostMediaCellOld(context));
+            postMediaCellsCache.add(new PostMediaCell(context));
         }
 
 
@@ -1096,8 +1094,8 @@ public void createMenu(View v, boolean single) {
         }
 
         PostObject postObject = null;
-        if (v instanceof PostMediaCellOld) {
-            postObject = ((PostMediaCellOld) v).getPostObject();
+        if (v instanceof PostMediaCell) {
+            postObject = ((PostMediaCell) v).getPostObject();
         }
         if (postObject == null) {
             return;
@@ -1248,8 +1246,8 @@ private void updateVisibleRows() {
         int count = postListView.getChildCount();
         for (int a = 0; a < count; a++) {
             View view = postListView.getChildAt(a);
-            if (view instanceof PostMediaCellOld) {
-                PostMediaCellOld cell = (PostMediaCellOld) view;
+            if (view instanceof PostMediaCell) {
+                PostMediaCell cell = (PostMediaCell) view;
 
                 boolean disableSelection = false;
                 boolean selected = false;
@@ -1289,8 +1287,8 @@ public void updatePhotoAtIndex(int index) {
             PostObject postToOpen = null;
             ImageReceiver imageReceiver = null;
             View view = postListView.getChildAt(a);
-            if (view instanceof PostMediaCellOld) {
-                PostMediaCellOld cell = (PostMediaCellOld) view;
+            if (view instanceof PostMediaCell) {
+                PostMediaCell cell = (PostMediaCell) view;
                 PostObject post = cell.getPostObject();
                 if (post != null && post.getId() == postObject.getId()) {
                     postToOpen = post;
@@ -1382,7 +1380,7 @@ public long getItemId(int i) {
                     view = postMediaCellsCache.get(0);
                     postMediaCellsCache.remove(0);
                 } else {
-                    view = new PostMediaCellOld(mContext);
+                    view = new PostMediaCell(mContext);
                 }
             } else if (viewType == 5) {
                 LayoutInflater li = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
@@ -1393,55 +1391,73 @@ public long getItemId(int i) {
                 view = li.inflate(R.layout.chat_unread_layout, parent, false);
             }
 
-            if (view instanceof PostMediaCellOld) {
-                ((PostMediaCellOld) view).setDelegate(new PostMediaCellOld.PostMediaCellDelegate() {
+            if (view instanceof PostMediaCell) {
+                ((PostMediaCell) view).setDelegate(new PostMediaCell.PostMediaCellDelegate() {
                     @Override
-                    public void didClickedImage(PostMediaCellOld cell) {
-                        PostObject postObject = cell.getPostObject();
-//                    mContext - is getParentActivity form Post Activity. look at instance creation of PostAdapter
-                        PhotoViewer.getInstance().setParentActivity((Activity) mContext);
-//                        PhotoViewer.getInstance().openPhoto(postObject, PostCreateChatActivity.this);
-
-//                        Post post = cell.getMessageObject();
-//                        if (post.isSendError()) {
-//                            createMenu(cell);
-//                            return;
-//                        } else if (post.isSending()) {
-//                            return;
-//                        }
-//                        if (post.type == 1) {
-//                            PhotoViewer.getInstance().setParentActivity(getParentActivity());
-//                            PhotoViewer.getInstance().openPhoto(post, PostCreateChatActivity.this);
-//                        }
+                    public void didPressedUserAvatar(PostMediaCell cell) {
+
                     }
 
                     @Override
-                    public void didPressedOther(PostMediaCellOld cell) {
-                        //TODO popup menu.
-//                        createMenu(cell);
+                    public void didPressedCancelSendButton(PostMediaCell cell) {
+
                     }
 
                     @Override
-                    public void didPressedUserAvatar(PostCell cell, UserObject userObject) {
+                    public void didLongPressed(PostMediaCell cell) {
+                        createMenu(cell, false);
+                    }
 
+                    @Override
+                    public boolean canPerformActions() {
+                        return actionBar != null && !actionBar.isActionModeShowed();
                     }
 
                     @Override
-                    public void didPressedCancelSendButton(PostCell cell) {
+                    public void didPressUrl(String url) {
+                        if (url.startsWith("@")) {
+                            MessagesController.openByUserName(url.substring(1), PostCreateActivity.this, 0);
+                        } else if (url.startsWith("#")) {
+                            MessagesActivity fragment = new MessagesActivity(null);
+                            fragment.setSearchString(url);
+                            presentFragment(fragment);
+                        }
+                    }
 
+                    @Override
+                    public void needOpenWebView(String url, String title, String originalUrl, int w, int h) {
+                        BottomSheet.Builder builder = new BottomSheet.Builder(mContext);
+                        builder.setCustomView(new WebFrameLayout(mContext, builder.create(), title, originalUrl, url, w, h));
+                        builder.setOverrideTabletWidth(true);
+                        showDialog(builder.create());
                     }
 
                     @Override
-                    public void didLongPressed(PostCell cell) {
-//                        createMenu(cell);
+                    public void didPressReplyMessage(PostMediaCell cell, int id) {
+//                        scrollToMessageId(id, cell.getMessageObject().getId(), true);
+                    }
+
+                    @Override
+                    public void didClickedImage(PostMediaCell cell) {
+                        PostObject post = cell.getPostObject();
+
+                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
+                        PhotoViewer.getInstance().openPhoto(post, PostCreateActivity.this);
+
+                        //TODO open location view
+//                                LocationActivity fragment = new LocationActivity();
+//                                fragment.setMessageObject(post);
+//                                presentFragment(fragment);
 
                     }
 
                     @Override
-                    public boolean canPerformActions() {
-                        return actionBar != null && !actionBar.isActionModeShowed();
+                    public void didPressedOther(PostMediaCell cell) {
+                        createMenu(cell, true);
                     }
                 });
+                ((PostMediaCell) view).setAllowedToSetPhoto(openAnimationEnded);
+
 
             }
 
@@ -1473,8 +1489,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             }
 
 
-            if (view instanceof PostMediaCellOld) {
-                PostMediaCellOld cell = (PostMediaCellOld) view;
+            if (view instanceof PostMediaCell) {
+                PostMediaCell cell = (PostMediaCell) view;
                 cell.setPostObject(post);
             }
         }
@@ -1581,6 +1597,7 @@ private void didSelectPhotos(ArrayList<String> photos) {
 //            image = ImageServiceMock.getRandomImage();
             post.setImage(image);
             post.setPreviewImage(image);
+            post.setVenue(VenueServiceMock.getRandomVenue());
             //TODO-temp
 //            PostCreateActivity.this.postObject = new PostObject(post);
             PostCreateActivity.this.postObjects.add(new PostObject(post));
