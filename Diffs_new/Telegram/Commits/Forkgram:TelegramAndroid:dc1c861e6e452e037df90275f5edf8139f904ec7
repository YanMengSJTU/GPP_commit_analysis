diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index c445e45c5..76061e465 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -866,12 +866,23 @@ public boolean onItemClick(View view, int position, float x, float y) {
 
                     final boolean hasUnread = dialog.unread_count != 0 || dialog.unread_mark;
 
+                    //Mute item
+                    boolean muted = MessagesController.getInstance(currentAccount).isDialogMuted(selectedDialog);
+                    String muteString = "";
+                    if (muted) {
+                        muteString = LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications);
+                    } else {
+                        muteString = LocaleController.getString("MuteNotifications", R.string.MuteNotifications);
+                    }
+                    ////
+
                     if (DialogObject.isChannel(dialog)) {
                         final TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-lower_id);
                         CharSequence items[];
                         int icons[] = new int[]{
                                 dialog.pinned ? R.drawable.chats_unpin : R.drawable.chats_pin,
                                 hasUnread ? R.drawable.menu_read : R.drawable.menu_unread,
+                                muted ? R.drawable.notify_members_off : R.drawable.notify_members_on,
                                 R.drawable.chats_clear,
                                 R.drawable.chats_leave
                         };
@@ -879,18 +890,21 @@ public boolean onItemClick(View view, int position, float x, float y) {
                             items = new CharSequence[]{
                                     null,
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
+                                    muteString,
                                     LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     null};
                         } else if (chat != null && chat.megagroup) {
                             items = new CharSequence[]{
                                     dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop),
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
+                                    muteString,
                                     TextUtils.isEmpty(chat.username) ? LocaleController.getString("ClearHistory", R.string.ClearHistory) : LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu)};
                         } else {
                             items = new CharSequence[]{
                                     dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop),
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
+                                    muteString,
                                     LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu)};
                         }
@@ -911,13 +925,16 @@ public boolean onItemClick(View view, int position, float x, float y) {
                                 } else {
                                     MessagesController.getInstance(currentAccount).markDialogAsUnread(selectedDialog, null, 0);
                                 }
+                            } else if (which == 2) {
+                                toggleMute(selectedDialog);
                             } else {
-                                AlertsCreator.createClearOrDeleteDialogAlert(DialogsActivity.this, which == 2, chat, null, lower_id == 0, () -> {
-                                    if (which == 2 && (!chat.megagroup || !TextUtils.isEmpty(chat.username))) {
+                                int nextToLast = 3;
+                                AlertsCreator.createClearOrDeleteDialogAlert(DialogsActivity.this, which == nextToLast, chat, null, lower_id == 0, () -> {
+                                    if (which == nextToLast && (!chat.megagroup || !TextUtils.isEmpty(chat.username))) {
                                         MessagesController.getInstance(currentAccount).deleteDialog(selectedDialog, 2);
                                     } else {
-                                        undoView.showWithAction(selectedDialog, which == 2, () -> {
-                                            if (which == 2) {
+                                        undoView.showWithAction(selectedDialog, which == nextToLast, () -> {
+                                            if (which == nextToLast) {
                                                 MessagesController.getInstance(currentAccount).deleteDialog(selectedDialog, 1);
                                             } else {
                                                 MessagesController.getInstance(currentAccount).deleteUserFromChat((int) -selectedDialog, UserConfig.getInstance(currentAccount).getCurrentUser(), null);
@@ -932,7 +949,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         });
                         BottomSheet sheet = builder.create();
                         showDialog(sheet);
-                        sheet.setItemColor(3, Theme.getColor(Theme.key_dialogTextRed2), Theme.getColor(Theme.key_dialogRedIcon));
+                        sheet.setItemColor(4, Theme.getColor(Theme.key_dialogTextRed2), Theme.getColor(Theme.key_dialogRedIcon));
                     } else {
                         final boolean isChat = lower_id < 0 && high_id != 1;
                         TLRPC.User user;
@@ -951,11 +968,13 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         builder.setItems(new CharSequence[]{
                                 dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop),
                                 hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
+                                muteString,
                                 LocaleController.getString("ClearHistory", R.string.ClearHistory),
                                 isChat ? LocaleController.getString("DeleteChat", R.string.DeleteChat) : isBot ? LocaleController.getString("DeleteAndStop", R.string.DeleteAndStop) : LocaleController.getString("Delete", R.string.Delete)
                         }, new int[]{
                                 dialog.pinned ? R.drawable.chats_unpin : R.drawable.chats_pin,
                                 hasUnread ? R.drawable.menu_read : R.drawable.menu_unread,
+                                muted ? R.drawable.notify_members_off : R.drawable.notify_members_on,
                                 R.drawable.chats_clear,
                                 isChat ? R.drawable.chats_leave : R.drawable.chats_delete
                         }, (d, which) -> {
@@ -975,9 +994,12 @@ public boolean onItemClick(View view, int position, float x, float y) {
                                 } else {
                                     MessagesController.getInstance(currentAccount).markDialogAsUnread(selectedDialog, null, 0);
                                 }
+                            } else if (which == 2) {
+                                toggleMute(selectedDialog);
                             } else {
-                                AlertsCreator.createClearOrDeleteDialogAlert(DialogsActivity.this, which == 2, chat, user, lower_id == 0, () -> undoView.showWithAction(selectedDialog, which == 2, () -> {
-                                    if (which != 2) {
+                                int nextToLast = 3;
+                                AlertsCreator.createClearOrDeleteDialogAlert(DialogsActivity.this, which == nextToLast, chat, user, lower_id == 0, () -> undoView.showWithAction(selectedDialog, which == nextToLast, () -> {
+                                    if (which != nextToLast) {
                                         if (isChat) {
                                             TLRPC.Chat currentChat = MessagesController.getInstance(currentAccount).getChat((int) -selectedDialog);
                                             if (currentChat != null && ChatObject.isNotInChat(currentChat)) {
@@ -1002,7 +1024,7 @@ public boolean onItemClick(View view, int position, float x, float y) {
                         });
                         BottomSheet sheet = builder.create();
                         showDialog(sheet);
-                        sheet.setItemColor(3, Theme.getColor(Theme.key_dialogTextRed2), Theme.getColor(Theme.key_dialogRedIcon));
+                        sheet.setItemColor(4, Theme.getColor(Theme.key_dialogTextRed2), Theme.getColor(Theme.key_dialogRedIcon));
                     }
                 }
                 return true;
@@ -1565,6 +1587,24 @@ private void closeSearch() {
         }
     }
 
+    private void toggleMute(long dialog_id) {
+        boolean muted = MessagesController.getInstance(currentAccount).isDialogMuted(dialog_id);
+        if (!muted) {
+            showDialog(AlertsCreator.createMuteAlert(getParentActivity(), dialog_id));
+        } else {
+            SharedPreferences preferences = MessagesController.getNotificationsSettings(currentAccount);
+            SharedPreferences.Editor editor = preferences.edit();
+            editor.putInt("notify2_" + dialog_id, 0);
+            org.telegram.messenger.MessagesStorage.getInstance(currentAccount).setDialogFlags(dialog_id, 0);
+            editor.commit();
+            TLRPC.TL_dialog dialog = MessagesController.getInstance(currentAccount).dialogs_dict.get(dialog_id);
+            if (dialog != null) {
+                dialog.notify_settings = new TLRPC.TL_peerNotifySettings();
+            }
+            org.telegram.messenger.NotificationsController.getInstance(currentAccount).updateServerNotificationsSettings(dialog_id);
+        }
+    }
+
     /*private void checkUnreadCount(boolean animated) {
         if (!BuildVars.DEBUG_PRIVATE_VERSION) {
             return;
