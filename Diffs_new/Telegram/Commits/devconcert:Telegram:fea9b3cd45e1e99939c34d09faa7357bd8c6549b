diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
index c6fc1baf0..e404f06ca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
@@ -67,6 +67,59 @@ public void run() {
         }
     }
 
+    public static class SoundSearcher {
+        public SoundSearcher() { }
+
+        private static final char HANGUL_BEGIN_UNICODE = 44032;
+        private static final char HANGUL_LAST_UNICODE = 55203;
+        private static final char HANGUL_BASE_UNIT = 588;
+        private static final char[] INITIAL_SOUND = { 'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ' };
+
+        private static boolean isInitialSound(char ichar){
+            for(char c:INITIAL_SOUND){
+                if(c == ichar) return true;
+            }
+            return false;
+        }
+
+        private static char getInitialSound(char c) {
+            int hanBegin = (c - HANGUL_BEGIN_UNICODE);
+            int index = hanBegin / HANGUL_BASE_UNIT;
+            return INITIAL_SOUND[index];
+        }
+
+        private static boolean isKorean(char c) {
+            return HANGUL_BEGIN_UNICODE <= c && c <= HANGUL_LAST_UNICODE;
+        }
+
+        public static boolean matchString(String value, String search){
+            int seof = value.length() - search.length();
+            int slen = search.length();
+            if(seof < 0)
+                return false;
+            for(int i = 0, t = 0;i <= seof;i++){
+                while(t < slen){
+                    if(isInitialSound(search.charAt(t))== true && isKorean(value.charAt(i+t))){
+                        if(getInitialSound(value.charAt(i+t)) == search.charAt(t))
+                            t++;
+                        else
+                            break;
+                    } else {
+                        if(value.charAt(i+t) == search.charAt(t))
+                            t++;
+                        else
+                            break;
+                    }
+                }
+                if(t == slen)
+                    return true;
+
+                t = 0;
+            }
+            return false;
+        }
+    }
+
     private void processSearch(final String query) {
         AndroidUtilities.RunOnUIThread(new Runnable() {
             @Override
@@ -88,7 +141,7 @@ public void run() {
                         for (TLRPC.TL_contact contact : contactsCopy) {
                             TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
                             String name = ContactsController.formatName(user.first_name, user.last_name).toLowerCase();
-                            if (name.startsWith(q) || name.contains(" " + q)) {
+                            if (SoundSearcher.matchString(name, q) || name.startsWith(q) || name.contains(" " + q)) {
                                 if (user.id == UserConfig.getClientUserId()) {
                                     continue;
                                 }
