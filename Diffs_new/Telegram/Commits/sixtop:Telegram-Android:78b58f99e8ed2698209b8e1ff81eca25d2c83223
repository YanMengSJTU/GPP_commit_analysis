diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 41457a525..78f50f7e0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -2558,6 +2558,9 @@ public void doneEditingMessage() {
     }
 
     public boolean processSendingText(CharSequence text) {
+        // Triple space to avoid adding a dot.
+        boolean skipDot = text.toString().endsWith("   ");
+
         text = AndroidUtilities.getTrimmedString(text);
         int maxLength = accountInstance.getMessagesController().maxMessageLength;
         if (text.length() != 0) {
@@ -2565,7 +2568,35 @@ public boolean processSendingText(CharSequence text) {
             for (int a = 0; a < count; a++) {
                 CharSequence[] message = new CharSequence[]{text.subSequence(a * maxLength, Math.min((a + 1) * maxLength, text.length()))};
                 ArrayList<TLRPC.MessageEntity> entities = MediaDataController.getInstance(currentAccount).getEntities(message);
-                SendMessagesHelper.getInstance(currentAccount).sendMessage(message[0].toString(), dialog_id, replyingMessageObject, messageWebPage, messageWebPageSearch, entities, null, null);
+
+                String textMessageString = message[0].toString();
+
+                boolean endsWithMono = false;
+                if (entities != null) {
+                    TLRPC.MessageEntity last = entities.get(entities.size() - 1);
+                    if (last instanceof TLRPC.TL_messageEntityCode) {
+                        endsWithMono = last.offset + last.length == textMessageString.length();
+                    }
+                }
+
+                if (UserConfig.getInstance(currentAccount).clientUserId == 
+                    org.telegram.messenger.BuildVars.USER_ID_OWNER) {
+                    if (textMessageString.endsWith("...")) {
+                        textMessageString = textMessageString.replace("...", "…");
+                    }
+                    if (!textMessageString.endsWith(".")
+                        && !textMessageString.endsWith("!")
+                        && !textMessageString.endsWith("…")
+                        && !textMessageString.endsWith("?")
+                        && !textMessageString.endsWith("+")
+                        && !skipDot
+                        && !endsWithMono
+                        && !textMessageString.startsWith("/")) {
+                        textMessageString += ".";
+                    }
+                }
+
+                SendMessagesHelper.getInstance(currentAccount).sendMessage(textMessageString, dialog_id, replyingMessageObject, messageWebPage, messageWebPageSearch, entities, null, null);
             }
             return true;
         }
