diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 950a89324..b30b43ce4 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -141,7 +141,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 1520
+    defaultConfig.versionCode = 1522
 
     sourceSets.debug {
         manifest.srcFile 'config/debug/AndroidManifest.xml'
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index e66893b4e..f5e7835ea 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -9659,7 +9659,7 @@ public void didReceivedNotification(int id, int account, final Object... args) {
 
     //CloudVeil start
     public static void showWarning(BaseFragment fragment, TLObject tlObject, Runnable onOkRunnable, Runnable onDismissRunnable) {
-        if(tlObject == null) {
+        if (tlObject == null) {
             return;
         }
         AlertDialog.Builder builder = new AlertDialog.Builder(fragment.getParentActivity());
@@ -9667,7 +9667,7 @@ public static void showWarning(BaseFragment fragment, TLObject tlObject, Runnabl
                 .setMessage(fragment.getParentActivity().getString(R.string.cloudveil_message_dialog_forbidden))
                 .setPositiveButton(fragment.getParentActivity().getString(R.string.contact), (dialog, which) -> {
                     dialog.dismiss();
-                    if(onOkRunnable != null) {
+                    if (onOkRunnable != null) {
                         onOkRunnable.run();
                     }
 
@@ -9675,17 +9675,17 @@ public static void showWarning(BaseFragment fragment, TLObject tlObject, Runnabl
                 })
                 .setNegativeButton(fragment.getParentActivity().getString(R.string.cancel), (dialog, i) -> {
                     dialog.dismiss();
-                    if(onDismissRunnable != null) {
+                    if (onDismissRunnable != null) {
                         onDismissRunnable.run();
                     }
                 })
                 .setOnDismissListener(dialog -> {
-                    if(onDismissRunnable != null) {
+                    if (onDismissRunnable != null) {
                         onDismissRunnable.run();
                     }
                 })
                 .setOnBackButtonListener((dialog, which) -> {
-                    if(onDismissRunnable != null) {
+                    if (onDismissRunnable != null) {
                         onDismissRunnable.run();
                     }
                 });
@@ -9702,6 +9702,7 @@ private static void sendUnlockEmail(TLObject tlObject, int currentAccount) {
         String type = "";
         int id = 0;
 
+
         if (tlObject instanceof TLRPC.User) {
             type = "user";
             TLRPC.User user = (TLRPC.User) tlObject;
@@ -9718,6 +9719,27 @@ private static void sendUnlockEmail(TLObject tlObject, int currentAccount) {
             if (chat instanceof TLRPC.TL_channel) {
                 type = "channel";
             }
+            title = chat.title;
+            userName = chat.username;
+            id = chat.id;
+        } else if (tlObject instanceof TLRPC.TL_dialog) {
+            //megagroup
+            type = "megagroup";
+
+            TLRPC.TL_dialog dlg = (TLRPC.TL_dialog) tlObject;
+            int lower_id = (int) dlg.id;
+            TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-lower_id);
+            if (chat != null && chat.migrated_to != null) {
+                TLRPC.Chat chat2 = MessagesController.getInstance(currentAccount).getChat(chat.migrated_to.channel_id);
+                if (chat2 != null) {
+                    chat = chat2;
+                }
+            }
+            boolean isChannel = ChatObject.isChannel(chat) && !chat.megagroup;
+            if(isChannel) {
+                type = "channel";
+            }
+
             title = chat.title;
             userName = chat.username;
             id = chat.id;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersListActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersListActivity.java
index 7d1672c23..37f4a10c0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersListActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersListActivity.java
@@ -36,6 +36,7 @@
 import android.view.WindowManager;
 import android.widget.EditText;
 import android.widget.FrameLayout;
+import android.widget.ListAdapter;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
@@ -60,6 +61,7 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.ActionBar.ThemeDescription;
+import org.telegram.ui.Adapters.SearchAdapter;
 import org.telegram.ui.Cells.GraySectionCell;
 import org.telegram.ui.Cells.ShadowSectionCell;
 import org.telegram.ui.Cells.TextCell;
@@ -457,6 +459,8 @@ public void onItemClick(int id) {
             }
         });
 
+
+        /*CloudVeil start remove background search
         if (currentType == TYPE_ALL) {
             ActionBarMenu menu = actionBar.createMenu();
             searchItem = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
@@ -488,6 +492,8 @@ public void onCaptionCleared() {
             });
             searchItem.setSearchFieldHint(LocaleController.getString("SearchBackgrounds", R.string.SearchBackgrounds));
 
+
+
             final ActionBarMenu actionMode = actionBar.createActionMode(false);
             actionMode.setBackgroundColor(Theme.getColor(Theme.key_actionBarDefault));
             actionBar.setItemsColor(Theme.getColor(Theme.key_actionBarDefaultIcon), true);
@@ -505,6 +511,7 @@ public void onCaptionCleared() {
 
             selectedWallPapers.clear();
         }
+        CloudVeil end */
 
         fragmentView = new FrameLayout(context);
 
