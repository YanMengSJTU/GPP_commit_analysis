diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 49718a116..3a86cb4bd 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -36,11 +36,7 @@
 //TODO Look at MessagesController methods. There are many good examples and best practice.
 public class PostsController implements NotificationCenter.NotificationCenterDelegate {
 
-    private Location currentLocation;
-    public Venue currentVenue;
-
-    public Post currentPost;
-
+    private Venue lastVenue;
 
     public List<Post> posts = new ArrayList<>();
     public ConcurrentHashMap<String, Post> postsMap = new ConcurrentHashMap<>(100, 1.0f, 2);
@@ -154,9 +150,6 @@ public void loadPosts(final int offset, final int count, boolean reload, boolean
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
             return;
         }
-        currentLocation = location;
-//        NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
-
         //TODO here async  request
         PostResponse postResponse = PostServiceMock.getPosts("location", null, offset, count);
 //        after getting response.
@@ -164,11 +157,6 @@ public void loadPosts(final int offset, final int count, boolean reload, boolean
 
     }
 
-    public Location getCurrentLocation() {
-        return currentLocation;
-    }
-
-
     public void processLoadedPosts(PostResponse postResponse, final int offset, final int count, boolean reload) {
         if (reload) {
             posts.clear();
@@ -194,35 +182,7 @@ public void loadCurrentVenue(String loc) {
         Location location = LocationManagerHelper.getInstance().getLastLocation();
         if (location == null) {
 //            NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
-            return;
-        }
-
-        Venue venue = new Venue();
-        Coordinates coordinates = new Coordinates();
-        coordinates.setCoordinates(Arrays.asList(location.getLongitude(), location.getLatitude()));
-        coordinates.setType("Point");
-        venue.setCoordinates(coordinates);
-        if (StringUtils.isEmpty(venue.getAddress())) {
-            venue.setAddress(location.getLongitude() + ", " + location.getLatitude());
         }
-//        this.currentVenue = VenueServiceMock.getRandomVenue();
-        this.currentVenue = venue;
-    }
-
-    public Venue getCurrentVenue() {
-        return currentVenue;
-    }
-
-    public void setCurrentVenue(Venue currentVenue) {
-        this.currentVenue = currentVenue;
-    }
-
-    public Post getCurrentPost() {
-        return currentPost;
-    }
-
-    public void setCurrentPost(Post currentPost) {
-        this.currentPost = currentPost;
     }
 
     public boolean isLoadingPosts() {
@@ -251,4 +211,13 @@ public void setUser(User user) {
 //        }
 //        return usersByUsernames.get(username.toLowerCase());
 //    }
+
+
+    public Venue getLastVenue() {
+        return lastVenue;
+    }
+
+    public void setLastVenue(Venue lastVenue) {
+        this.lastVenue = lastVenue;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index ad29c8650..dbee74011 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -19,6 +19,8 @@
 
     private LocationListener locationListener;
 
+    private Location lastSavedLocation;
+
     public static LocationManagerHelper getInstance() {
         LocationManagerHelper localInstance = Instance;
         if (localInstance == null) {
@@ -83,6 +85,11 @@ public Location getLastLocation() {
                 break;
             }
         }
+        lastSavedLocation = l;
         return l;
     }
+
+    public Location getLastSavedLocation() {
+        return lastSavedLocation;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/dto/Post.java b/TMessagesProj/src/main/java/org/telegram/messenger/dto/Post.java
index 12225b408..88dc2f266 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/dto/Post.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/dto/Post.java
@@ -79,7 +79,7 @@ public void setCreatedDate(long createdDate) {
 
 
     public String getVenuePreviewImageUrl() {
-        if(this.getVenue() == null || this.getVenue().getImage() == null) {
+        if (this.getVenue() == null || this.getVenue().getImage() == null) {
             return null;
         }
         return this.getVenue().getImage().getUrl();
@@ -90,4 +90,13 @@ public String getPreviewImageUrl() {
         return this.getPreviewImage().getUrl();
     }
 
+
+    public Coordinates getPostCoordinates() {
+        if (venue != null && venue.getCoordinates() != null) {
+            return venue.getCoordinates();
+        } else {
+            return coordinates;
+        }
+    }
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/dto/Venue.java b/TMessagesProj/src/main/java/org/telegram/messenger/dto/Venue.java
index 19e6c21ae..04745a4ee 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/dto/Venue.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/dto/Venue.java
@@ -10,7 +10,6 @@
     //Text representation of address
     private String address;
     private Coordinates coordinates;
-    private Coordinates placeCoordinates;
     // distance in meters;
     private int distance;
     private Image image;
@@ -55,14 +54,6 @@ public void setCoordinates(Coordinates coordinates) {
         this.coordinates = coordinates;
     }
 
-    public Coordinates getPlaceCoordinates() {
-        return placeCoordinates;
-    }
-
-    public void setPlaceCoordinates(Coordinates placeCoordinates) {
-        this.placeCoordinates = placeCoordinates;
-    }
-
     public int getDistance() {
         return distance;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
index e78830318..1e2d311b0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
@@ -29,6 +29,7 @@
 import org.telegram.android.ImageReceiver;
 import org.telegram.android.LocaleController;
 import org.telegram.android.PostsController;
+import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.dto.Coordinates;
 import org.telegram.messenger.dto.Image;
@@ -261,7 +262,12 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         if (this.textLayoutBlock != null && this.textLayoutBlock.textLayout != null) {
             textHeight = this.textLayoutBlock.textLayout.getHeight();
         }
-        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(82) + textHeight + (useSeparator ? 1 : 0));
+        int marginHeight = AndroidUtilities.dp(82);
+        if (StringUtils.isEmpty(post.getMessage())) {
+            textHeight = 0;
+            marginHeight = 0;
+        }
+        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + marginHeight + textHeight + (useSeparator ? 1 : 0));
 
     }
 
@@ -387,7 +393,9 @@ public void buildLayout() {
             lastPrintString = null;
 
             String address = "";
-            address = post.getVenue().getAddress();
+            address = post.getVenue() != null ? post.getVenue().getAddress() :
+                    post.getPostCoordinates().getCoordinates().get(0) + ", "
+                            + post.getPostCoordinates().getCoordinates().get(0);
 
 
             checkMessage = false;
@@ -399,9 +407,9 @@ public void buildLayout() {
 //            String distance = LocaleController.formatString("AccurateTo", R.string.AccurateTo, LocaleController.formatPluralString("Meters", (int) PostsController.getInstance().getCurrentLocation().getAccuracy()));
 
             String distanceStr = "";
-            Location userLocation = PostsController.getInstance().getCurrentLocation();
-            if (userLocation != null && post.getCoordinates() != null) {
-                Coordinates coordinates = post.getCoordinates();
+            Location userLocation = LocationManagerHelper.getInstance().getLastSavedLocation();
+            if (userLocation != null && post.getPostCoordinates() != null) {
+                Coordinates coordinates = post.getPostCoordinates();
                 Location location = new Location("network");
                 location.setLongitude(coordinates.getCoordinates().get(0));
                 location.setLatitude(coordinates.getCoordinates().get(1));
@@ -443,10 +451,11 @@ public void buildLayout() {
         //  here was building name string
 
 
-        nameString = post.getVenue().getName();
+        nameString = post.getVenue() != null ? post.getVenue().getName() : "";
         if (StringUtils.isEmpty(nameString)) {
 //            nameString = LocaleController.getString("HiddenName", R.string.HiddenName);
-            nameString = LocaleController.getString("Place", R.string.Place);;
+            nameString = LocaleController.getString("Place", R.string.Place);
+            ;
         }
 
         int nameWidth;
@@ -816,24 +825,29 @@ protected void onDraw(Canvas canvas) {
 
         // TEXT
 
-        canvas.save();
-        canvas.translate(textLeft, textTop);
-        try {
-            //TODO draw text message
-            this.textLayoutBlock.textLayout.draw(canvas);
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
+        if (!StringUtils.isEmpty(post.getMessage())) {
+            canvas.save();
+            canvas.translate(textLeft, textTop);
+            try {
+                //TODO draw text message
+                this.textLayoutBlock.textLayout.draw(canvas);
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+            canvas.restore();
         }
-        canvas.restore();
     }
 
 
     //TODO utils method ?
     // TODO It should be before creating Cell. somewhere in generating entities. Because it is static layout. in Cell we just find the position. !!
     private void generateTextLayout(Post post) {
-        if (post == null || post.getMessage() == null || post.getMessage().length() == 0) {
+        if (post == null) {
             return;
         }
+        if (post.getMessage() == null) {
+            post.setMessage("");
+        }
 
         CharSequence messageText = post.getMessage();
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index 8e548985f..b284d8836 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -178,7 +178,7 @@ public void onItemClick(int id) {
                     }
                 } else if (id == share) {
                     try {
-                        List<Double> coordinates = post.getVenue().getCoordinates().getCoordinates();
+                        List<Double> coordinates = post.getPostCoordinates().getCoordinates();
                         double lat = coordinates.get(1);
                         double lon = coordinates.get(0);
                         getParentActivity().startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("geo:" + lat + "," + lon + "?q=" + lat + "," + lon)));
@@ -333,7 +333,7 @@ public void onClick(View view) {
             // change the top margin to change the position
             bottomView.addView(distanceTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT), LocaleController.isRTL ? 12 : 72, 10, LocaleController.isRTL ? 72 : 12, 0));
 
-            List<Double> coordinates = post.getVenue().getCoordinates().getCoordinates();
+            List<Double> coordinates = post.getPostCoordinates().getCoordinates();
             userLocation = new Location("network");
             userLocation.setLatitude(coordinates.get(1));
             userLocation.setLongitude(coordinates.get(0));
@@ -370,7 +370,7 @@ public void getOutline(View view, Outline outline) {
                 public void onClick(View v) {
                     if (myLocation != null) {
                         try {
-                            List<Double> coordinates = post.getVenue().getCoordinates().getCoordinates();
+                            List<Double> coordinates = post.getPostCoordinates().getCoordinates();
                             Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Locale.US, "http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f", myLocation.getLatitude(), myLocation.getLongitude(), coordinates.get(1), coordinates.get(0))));
                             getParentActivity().startActivity(intent);
                         } catch (Exception e) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index aa54ab80f..c8f8c9ec4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -20,6 +20,7 @@
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
+import android.location.Location;
 import android.media.ExifInterface;
 import android.net.Uri;
 import android.os.Build;
@@ -44,6 +45,7 @@
 import org.telegram.android.MediaController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.android.PostsController;
+import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.android.support.widget.LinearLayoutManager;
 import org.telegram.android.support.widget.RecyclerView;
 import org.telegram.messenger.FileLog;
@@ -66,6 +68,7 @@
 import org.telegram.ui.Components.RecyclerListView;
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
+import org.telegram.utils.CollectionUtils;
 import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
@@ -106,6 +109,7 @@
     //TODO - here are post for ???
     protected ArrayList<Post> posts = new ArrayList<>();
     protected Venue venue;
+    protected Coordinates userCoordinates;
 
 
     private String currentPicturePath;
@@ -149,8 +153,8 @@ public PostCreateActivity(Bundle args) {
     @Override
     public boolean onFragmentCreate() {
         //TODO-temp
-        PostsController.getInstance().loadCurrentVenue("location");
-        venue = PostsController.getInstance().getCurrentVenue();
+//        PostsController.getInstance().loadCurrentVenue("location");
+        userCoordinates = convertLocationToCoordinates(LocationManagerHelper.getInstance().getLastLocation());
 
 //        if(0==0) {
 //            return true;
@@ -228,7 +232,7 @@ public void onItemClick(final int id) {
                 } else if (id == done_button) {
                     Toast.makeText(((Context) getParentActivity()), "DONE BUTTON is CLICKED", Toast.LENGTH_SHORT).show();
                     Post post = null;
-                    if (posts != null && !posts.isEmpty() && posts.get(0) != null && venue != null) {
+                    if (!CollectionUtils.isEmpty(posts) && posts.get(0) != null && (venue != null || userCoordinates != null)) {
                         post = posts.get(0);
                         post.setVenue(venue);
 
@@ -238,18 +242,18 @@ public void onItemClick(final int id) {
 //                            image.setUrl(image.getUrl().replace("_64", "_bg_64"));
 //                            post.getVenue().setImage(image);
 //                        }
-
-
-                        post.setCoordinates(venue.getCoordinates());
+                        post.setCoordinates(userCoordinates);
                         String text = postCreateActivityEnterView.getFieldText();
-                        if (!StringUtils.isEmpty(text)) {
+                        if (text != null) {
                             text = text.trim();
+                        } else {
+                            text = "";
                         }
                         post.setMessage(text);
                     }
 
                     //TODO many check text, venue, coordinates and so on.
-                    if (post != null && venue != null) {
+                    if (post != null && post.getPostCoordinates() != null) {
                         final Post finalPost = post;
                         progressDialog.show();
 //                        AndroidUtilities.runOnUIThread(new Runnable() {
@@ -719,14 +723,15 @@ private void updateTitle() {
             return;
         }
         String name;
-        if (venue != null) {
-            if (!StringUtils.isEmpty(venue.getName())) {
-                name = venue.getName();
-            } else {
-                name = LocaleController.getString("CurrentLocation", R.string.CurrentLocation);
-            }
-            venueNameTextView.setText(name);
+        if (venue != null && !StringUtils.isEmpty(venue.getName())) {
+            name = venue.getName();
+        } else if (userCoordinates != null) {
+            name = LocaleController.getString("CurrentLocation", R.string.CurrentLocation);
+        } else {
+            name = LocaleController.getString("Place", R.string.Place);
         }
+        venueNameTextView.setText(name);
+
     }
 
     private void updateTitleIcons() {
@@ -745,8 +750,10 @@ private void updateSubtitle() {
         CharSequence addressString = LocaleController.getString("Address", R.string.Address);
         if (venue != null && !StringUtils.isEmpty(venue.getAddress())) {
             addressString = venue.getAddress();
+        } else if (userCoordinates != null) {
+            addressString = userCoordinates.getCoordinates().get(0) + ", " + userCoordinates.getCoordinates().get(1);
         }
-        addressString = TextUtils.replace(addressString, new String[]{"..."}, new String[]{""});
+//        addressString = TextUtils.replace(addressString, new String[]{"..."}, new String[]{""});
         addressTextView.setText(addressString);
     }
 
@@ -924,8 +931,7 @@ public void onResume() {
             photos.add(lastPhotoURL);
             didSelectPhotos(photos);
         }
-        venue = PostsController.getInstance().getCurrentVenue();
-//        PostsController.getInstance().setCurrentVenue(null);
+        venue = venue != null ? venue : PostsController.getInstance().getLastVenue();
         updateVenue();
 
 
@@ -950,7 +956,7 @@ public void onPause() {
         if (postCreateActivityEnterView != null) {
             postCreateActivityEnterView.hideEmojiPopup();
             String text = postCreateActivityEnterView.getFieldText();
-            if (text != null || !posts.isEmpty()) {
+            if (text != null || !posts.isEmpty() || venue != null) {
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 //TODO save text before pause.
@@ -961,7 +967,7 @@ public void onPause() {
                     editor.putString(Constants.PREF_NEW_POST_PHOTO, posts.get(0).getPreviewImage().getUrl());
                 }
                 editor.commit();
-                PostsController.getInstance().setCurrentVenue(venue);
+                PostsController.getInstance().setLastVenue(venue);
             }
             postCreateActivityEnterView.setFieldFocused(false);
         }
@@ -1366,28 +1372,31 @@ private void openLocationChooser() {
         fragment.setDelegate(new LocationActivityAragats.LocationActivityDelegate() {
             @Override
             public void didSelectLocation(TLRPC.MessageMedia location) {
-                Venue venue = new Venue();
                 Coordinates coordinates = new Coordinates();
                 coordinates.setCoordinates(Arrays.asList(location.geo._long, location.geo.lat));
                 coordinates.setType("Point");
-                venue.setCoordinates(coordinates);
+                PostCreateActivity.this.userCoordinates = coordinates;
                 if (location.geoPlace != null) {
-                    Coordinates placeCoordinates = new Coordinates();
-                    placeCoordinates.setCoordinates(Arrays.asList(location.geoPlace._long, location.geoPlace.lat));
-                    placeCoordinates.setType("Point");
-                    venue.setPlaceCoordinates(placeCoordinates);
-                }
-                venue.setFoursquareId(location.venue_id);
-                Image image = new Image();
-                image.setUrl(location.iconUrl);
-                venue.setImage(image);
-                venue.setName(location.title);
-                venue.setAddress(location.address);
-                if (StringUtils.isEmpty(venue.getAddress())) {
-                    venue.setAddress(location.geo._long + ", " + location.geo.lat);
+                    Venue venue = new Venue();
+                    if (location.geoPlace != null) {
+                        Coordinates placeCoordinates = new Coordinates();
+                        placeCoordinates.setCoordinates(Arrays.asList(location.geoPlace._long, location.geoPlace.lat));
+                        placeCoordinates.setType("Point");
+                        venue.setCoordinates(placeCoordinates);
+                    } else {
+                        venue.setCoordinates(coordinates);
+                    }
+                    venue.setFoursquareId(location.venue_id);
+                    Image image = new Image();
+                    image.setUrl(location.iconUrl);
+                    venue.setImage(image);
+                    venue.setName(location.title);
+                    venue.setAddress(location.address);
+                    if (StringUtils.isEmpty(venue.getAddress())) {
+                        venue.setAddress(location.geo._long + ", " + location.geo.lat);
+                    }
+                    PostCreateActivity.this.venue = venue;
                 }
-                PostCreateActivity.this.venue = venue;
-                PostsController.getInstance().setCurrentVenue(venue);
 //                location.iconUrl;
 //                Toast.makeText(getParentActivity(), location.venue_id + " " + location.geo.lat + " " + location.geo._long, Toast.LENGTH_LONG).show();
 //                            SendMessagesHelper.getInstance().sendMessage(location, dialog_id, replyingMessageObject);
@@ -1542,8 +1551,24 @@ private void updateVenue() {
     private void clearStates() {
         posts.clear();
         venue = null;
-        PostsController.getInstance().setCurrentVenue(venue);
+        userCoordinates = null;
+        PostsController.getInstance().setLastVenue(null);
         postCreateActivityEnterView.setFieldText("");
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        preferences.edit().remove(Constants.PREF_NEW_POST_TEXT).commit();
+        preferences.edit().remove(Constants.PREF_NEW_POST_PHOTO).commit();
+
+    }
+
+
+    private Coordinates convertLocationToCoordinates(Location location) {
+        if (location == null) {
+            return null;
+        }
+        Coordinates coordinates = new Coordinates();
+        coordinates.setCoordinates(Arrays.asList(location.getLongitude(), location.getLatitude()));
+        coordinates.setType("Point");
+        return coordinates;
     }
 
 }
