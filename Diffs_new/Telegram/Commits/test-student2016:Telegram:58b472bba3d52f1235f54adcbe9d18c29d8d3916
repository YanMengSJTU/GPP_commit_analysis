diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java
index 06a54138d..5320f08ea 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java
@@ -151,7 +151,7 @@ public void onRun() throws Throwable {
 
 		RokhPref Session;
 		String clientHandle = null;
-//reza_ak
+		//reza_ak
 		//Session = new RokhPref(SHAMChatApplication.getInstance().getApplicationContext());
 		clientHandle = "user6";
 
@@ -184,7 +184,7 @@ public void onRun() throws Throwable {
 
 		}
 */
-		MqttAndroidClient client = Connections.getInstance(ApplicationLoader.applicationContext).getConnection(clientHandle).getClient();
+		MqttAndroidClient client = Connections.getInstance(ApplicationLoader.getInstance().getApplicationContext()).getConnection(clientHandle).getClient();
 		
 		client.publish(topicName, jsonMessageString.getBytes(), qos, retained, null, new IMqttActionListener() {
 
@@ -238,9 +238,9 @@ public void onFailure(IMqttToken arg0, Throwable arg1) {
 				//mast - this is too much just for testing
 			    /*if (isOnline())
 			    {
-					Intent backgroundService = new Intent(ApplicationLoader.applicationContext, MQTTService.class);
-					ApplicationLoader.applicationContext.stopService(backgroundService);
-					ApplicationLoader.applicationContext.startService(backgroundService);
+					Intent backgroundService = new Intent(ApplicationLoader.getInstance(), MQTTService.class);
+					ApplicationLoader.getInstance().stopService(backgroundService);
+					ApplicationLoader.getInstance().startService(backgroundService);
 			    }*/
 
 			}
@@ -252,7 +252,7 @@ public void onFailure(IMqttToken arg0, Throwable arg1) {
 
 	private boolean isOnline()
 	{
-		ConnectivityManager cm = (ConnectivityManager)ApplicationLoader.applicationContext.getSystemService(ApplicationLoader.applicationContext.CONNECTIVITY_SERVICE);
+		ConnectivityManager cm = (ConnectivityManager)ApplicationLoader.getInstance().getSystemService(ApplicationLoader.applicationContext.CONNECTIVITY_SERVICE);
 		if(cm.getActiveNetworkInfo() != null &&
 				cm.getActiveNetworkInfo().isAvailable() &&
 				cm.getActiveNetworkInfo().isConnected())
@@ -279,7 +279,7 @@ public boolean addChatMessageToDB(int direction, int messageStatus, int messageC
 
 		boolean isExistingMessage = false;
 
-		ContentResolver mContentResolver = ApplicationLoader.applicationContext.getContentResolver();
+		ContentResolver mContentResolver = ApplicationLoader.getInstance().getContentResolver();
 
 		//mast - sample message to handle sent message and insert to db
 		//String jsonSampleMsg = "{\"to\": \"/groups/testgroup\",\"from\": \"wizgoonId\",\"messageBody\": \"hello everyone!\",\"messageType\": 1,\"timestamp\": \"2014-03-07T00:00:00.000Z\",\"groupAlias\": \"Good friends group\"\"packetId\": \"userId_timestamp\"}";
@@ -546,7 +546,7 @@ private boolean saveOrUpdateThread(String threadId, String receivedJsonMessage,
 
 		System.out.println("processMessage addChatMessageToDB saveOrUpdateThread");
 
-		ContentResolver mContentResolver = ApplicationLoader.applicationContext.getContentResolver();
+		ContentResolver mContentResolver = ApplicationLoader.getInstance().getContentResolver();
 
 		// Pars Json String
 
@@ -705,7 +705,7 @@ private boolean saveOrUpdateThread(String threadId, String receivedJsonMessage,
 
 	private void updateMessageStatus(final String packetId, ChatMessage.MessageStatusType messageStatusType ) {
 
-		ContentResolver mContentResolver = ApplicationLoader.applicationContext.getContentResolver();
+		ContentResolver mContentResolver = ApplicationLoader.getInstance().getContentResolver();
 //reza_ak
 	/*	Cursor cursor = null;
 		try {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java
index eabe4fc7b..d016e4921 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java
@@ -64,20 +64,20 @@ public void onRun() throws Throwable {
 			return;
 		}
 			
-		MqttAndroidClient mqttClient;		
-		RokhPref Session = new RokhPref(ApplicationLoader.applicationContext.getApplicationContext());
-		final String clientHandle = Session.getClientHandle();
+		MqttAndroidClient mqttClient;
+		//reza_ak
+		//RokhPref Session = new RokhPref(ApplicationLoader.getInstance().getApplicationContext());
+		final String clientHandle = "user6";
 		//reza_ak
 		String userId	= "6";
 		//phoneNumber = phoneNumber.startsWith("+") ? phoneNumber.substring(1) : phoneNumber;
 		String topic = "events/"+userId;
-		final Context context = ApplicationLoader.applicationContext.getApplicationContext();
+		final Context context = ApplicationLoader.getInstance().getApplicationContext();
 		
 		topics = new String[1];
 	    topics[0] = topic;
 	     
-		mqttClient = Connections.getInstance(
-				ApplicationLoader.applicationContext.getApplicationContext()).getConnection(clientHandle).getClient();
+		mqttClient = Connections.getInstance(ApplicationLoader.getInstance().getApplicationContext()).getConnection(clientHandle).getClient();
 		mqttClient.subscribe(topic, 1, null,   new IMqttActionListener() {
 			
 			@Override
@@ -118,7 +118,7 @@ protected boolean shouldReRunOnThrowable(Throwable throwable) {
 		// An error occurred in onRun.
 		// Return value determines whether this job should retry running (true)
 		// or abort (false).
-		System.out.println("********subscribe to events topic failed - retry******8");
+		System.out.println("********subscribe to events topic failed - retry******");
 	
 		return true;
 	}
