diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index cf9848807..e30473085 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -63,7 +63,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 821
+    defaultConfig.versionCode = 822
 
     sourceSets.main {
         jniLibs.srcDir 'libs'
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 415689a47..0d00f0010 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -3266,6 +3266,27 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialog
         }
     }
 
+    public void processDialogsUpdateRead(final HashMap<Long, Integer> dialogsUpdateUnreadCount, final HashMap<Long, Boolean> dialogsUpdateRequestMe) {
+        AndroidUtilities.runOnUIThread(new Runnable() {
+            @Override
+            public void run() {
+                for (HashMap.Entry<Long, Integer> entry : dialogsUpdateUnreadCount.entrySet()) {
+                    TLRPC.TL_dialog currentDialog = dialogs_dict.get(entry.getKey());
+                    if (currentDialog != null) {
+                        currentDialog.unread_count = entry.getValue();
+                    }
+                }
+                for (HashMap.Entry<Long, Boolean> entry : dialogsUpdateRequestMe.entrySet()) {
+                    TLRPC.TL_dialog currentDialog = dialogs_dict.get(entry.getKey());
+                    if (currentDialog != null) {
+                        currentDialog.request_me = entry.getValue();
+                    }
+                }
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, UPDATE_MASK_READ_DIALOG_MESSAGE);
+                NotificationsController.getInstance().processDialogsUpdateRead(dialogsUpdateUnreadCount);
+            }
+        });
+    }
     public void processDialogsUpdateRead(final HashMap<Long, Integer> dialogsToUpdate) {
         AndroidUtilities.runOnUIThread(new Runnable() {
             @Override
@@ -3274,6 +3295,10 @@ public void run() {
                     TLRPC.TL_dialog currentDialog = dialogs_dict.get(entry.getKey());
                     if (currentDialog != null) {
                         currentDialog.unread_count = entry.getValue();
+                        if(entry.getValue() == 0)
+                        {
+                            currentDialog.request_me = false;
+                        }
                     }
                 }
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, UPDATE_MASK_READ_DIALOG_MESSAGE);
@@ -3642,6 +3667,7 @@ public void run() {
                             TLRPC.TL_dialog dialog = dialogs_dict.get(dialog_id);
                             if (dialog != null) {
                                 dialog.unread_count = 0;
+                                dialog.request_me = false;
                                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, UPDATE_MASK_READ_DIALOG_MESSAGE);
                             }
                             if (!popup) {
@@ -3704,6 +3730,7 @@ public void run() {
                             TLRPC.TL_dialog dialog = dialogs_dict.get(dialog_id);
                             if (dialog != null) {
                                 dialog.unread_count = 0;
+                                dialog.request_me = false;
                                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, UPDATE_MASK_READ_DIALOG_MESSAGE);
                             }
                             HashMap<Long, Integer> dialogsToUpdate = new HashMap<>();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
index 4e21d0b40..c302948cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
@@ -17,6 +17,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.SQLite.SQLiteDatabase;
+import org.telegram.SQLite.SQLiteException;
 import org.telegram.SQLite.SQLitePreparedStatement;
 import org.telegram.messenger.query.BotQuery;
 import org.telegram.messenger.query.MessagesQuery;
@@ -115,7 +116,7 @@ public void openDatabase() {
                 database.executeFast("CREATE TABLE user_phones_v6(uid INTEGER, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (uid, phone))").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v6(sphone, deleted);").stepThis().dispose();
 
-                database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER)").stepThis().dispose();
+                database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, request_me INTEGER)").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
@@ -172,7 +173,7 @@ public void openDatabase() {
                 database.executeFast("CREATE TABLE pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
 
                 //version
-                database.executeFast("PRAGMA user_version = 34").stepThis().dispose();
+                database.executeFast("PRAGMA user_version = 35").stepThis().dispose();
 
                 //database.executeFast("CREATE TABLE secret_holes(uid INTEGER, seq_in INTEGER, seq_out INTEGER, data BLOB, PRIMARY KEY (uid, seq_in, seq_out));").stepThis().dispose();
                 //database.executeFast("CREATE TABLE attach_data(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
@@ -206,7 +207,7 @@ public void openDatabase() {
                     }
                 }
                 int version = database.executeInt("PRAGMA user_version");
-                if (version < 34) {
+                if (version < 35) {
                     updateDbToLastVersion(version);
                 }
             }
@@ -516,7 +517,13 @@ public void run() {
                     if (version == 33) {
                         database.executeFast("CREATE TABLE IF NOT EXISTS pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
                         database.executeFast("PRAGMA user_version = 34").stepThis().dispose();
-                        //version = 34;
+                        version = 34;
+                    }
+                    if (version == 34)
+                    {
+                        database.executeFast("ALTER TABLE dialogs ADD COLUMN request_me INTEGER default 0").stepThis().dispose();
+                        database.executeFast("PRAGMA user_version = 35").stepThis().dispose();
+                        //version = 35;
                     }
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
@@ -743,6 +750,28 @@ public void run() {
         });
     }
 
+    public boolean requestMeExist(HashMap<Long, Integer> pushDialogs) {
+        for (HashMap.Entry<Long, Integer> entry : pushDialogs.entrySet()) {
+            try
+            {
+                SQLiteCursor cursor = database.queryFinalized("SELECT request_me FROM dialogs WHERE did = " + entry.getKey());
+                if(cursor.next())
+                {
+                    if(cursor.intValue(0) == 1)
+                    {
+                        cursor.dispose();
+                        return true;
+                    }
+                }
+                cursor.dispose();
+            }
+            catch (Exception e)
+            {
+                FileLog.e("tmessages", e);
+            }
+        }
+        return false;
+    }
     public void loadUnreadMessages() {
         storageQueue.postRunnable(new Runnable() {
             @Override
@@ -1573,6 +1602,10 @@ private void updateDialogsWithReadMessagesInternal(final ArrayList<Integer> mess
                         if (cursor.next()) {
                             int count = cursor.intValue(0);
                             dialogsToUpdate.put((long) key, count);
+                            if(count == 0)
+                            {
+                                database.executeFast("UPDATE dialogs SET request_me = 0 WHERE did = " + key).stepThis().dispose();
+                            }
                         }
                         cursor.dispose();
 
@@ -1755,7 +1788,7 @@ public void run() {
                                 long last_mid = cursor.longValue(2);
                                 int outbox_max = cursor.intValue(4);
 
-                                state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                                state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                                 state.bindLong(1, -info.id);
                                 state.bindInteger(2, dialog_date);
                                 state.bindInteger(3, info.unread_count);
@@ -2079,7 +2112,7 @@ public void run() {
                     cursor.dispose();
                     currentMaxId = Math.max(currentMaxId, (int) max_id);
 
-                    state = database.executeFast("UPDATE dialogs SET unread_count = 0, unread_count_i = 0, inbox_max = ? WHERE did = ?");
+                    state = database.executeFast("UPDATE dialogs SET unread_count = 0, request_me = 0,unread_count_i = 0, inbox_max = ? WHERE did = ?");
                     state.requery();
                     state.bindInteger(1, currentMaxId);
                     state.bindLong(2, dialog_id);
@@ -3295,7 +3328,7 @@ public void run() {
                     data4.reuse();
                     data5.reuse();
                     if (dialog != null) {
-                        state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                        state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                         state.bindLong(1, dialog.id);
                         state.bindInteger(2, dialog.last_message_date);
                         state.bindInteger(3, dialog.unread_count);
@@ -3306,6 +3339,7 @@ public void run() {
                         state.bindInteger(8, 0);
                         state.bindInteger(9, dialog.pts);
                         state.bindInteger(10, 0);
+                        state.bindInteger(11, dialog.request_me ? 1:0);
                         state.step();
                         state.dispose();
                     }
@@ -4133,10 +4167,11 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
             state4.dispose();
             state5.dispose();
 
-            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
             HashMap<Long, TLRPC.Message> dids = new HashMap<>();
             dids.putAll(messagesMap);
 
+            HashMap<Long, Boolean> dialogsUpdateRequestMe = new HashMap<>();
             for (HashMap.Entry<Long, TLRPC.Message> pair : dids.entrySet()) {
                 Long key = pair.getKey();
                 if (key == 0) {
@@ -4149,13 +4184,14 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     channelId = message.to_id.channel_id;
                 }
 
-                SQLiteCursor cursor = database.queryFinalized("SELECT date, unread_count, pts, last_mid, inbox_max, outbox_max FROM dialogs WHERE did = " + key);
+                SQLiteCursor cursor = database.queryFinalized("SELECT date, unread_count, pts, last_mid, inbox_max, outbox_max, request_me FROM dialogs WHERE did = " + key);
                 int dialog_date = 0;
                 int last_mid = 0;
                 int old_unread_count = 0;
                 int pts = channelId != 0 ? 1 : 0;
                 int inbox_max = 0;
                 int outbox_max = 0;
+                boolean request_me = false;
                 if (cursor.next()) {
                     dialog_date = cursor.intValue(0);
                     old_unread_count = cursor.intValue(1);
@@ -4163,6 +4199,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     last_mid = cursor.intValue(3);
                     inbox_max = cursor.intValue(4);
                     outbox_max = cursor.intValue(5);
+                    request_me = cursor.intValue(6) == 1;
                 } else if (channelId != 0) {
                     MessagesController.getInstance().checkChannelInviter(channelId);
                 }
@@ -4192,6 +4229,15 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 } else {
                     state.bindInteger(2, dialog_date);
                 }
+                if(!request_me)
+                {
+                    TLRPC.User user = UserConfig.getCurrentUser();
+                    request_me = isRequestedMe(message, user.id, user.username);
+                    if(request_me)
+                    {
+                        dialogsUpdateRequestMe.put(key, request_me);
+                    }
+                }
                 state.bindInteger(3, old_unread_count + unread_count);
                 state.bindLong(4, messageId);
                 state.bindInteger(5, inbox_max);
@@ -4200,6 +4246,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 state.bindInteger(8, 0);
                 state.bindInteger(9, pts);
                 state.bindInteger(10, 0);
+                state.bindInteger(11, request_me ? 1:0);
                 state.step();
             }
             state.dispose();
@@ -4232,7 +4279,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
             if (withTransaction) {
                 database.commitTransaction();
             }
-            MessagesController.getInstance().processDialogsUpdateRead(messagesCounts);
+            MessagesController.getInstance().processDialogsUpdateRead(messagesCounts, dialogsUpdateRequestMe);
 
             if (downloadMediaMask != 0) {
                 final int downloadMediaMaskFinal = downloadMediaMask;
@@ -4247,6 +4294,57 @@ public void run() {
             FileLog.e("tmessages", e);
         }
     }
+    private boolean isRequestedMe(TLRPC.Message message, int idMe, String nameMe)
+    {
+        if(message.to_id != null && message.to_id.user_id == message.dialog_id)
+        {
+            return false;
+        }
+        if(message.entities != null && message.entities.size() > 0)
+        {
+            for(TLRPC.MessageEntity e : message.entities)
+            {
+                if(e instanceof TLRPC.TL_messageEntityMentionName)
+                {
+                    if(((TLRPC.TL_messageEntityMentionName)e).user_id == idMe)
+                    {
+                        return true;
+                    }
+                }
+            }
+        }
+        if(message.fwd_from != null && message.fwd_from.from_id == idMe)
+        {
+            return true;
+        }
+        try
+        {
+            SQLiteCursor cursor = database.queryFinalized("SELECT data FROM messages WHERE mid = " + message.reply_to_msg_id);
+            if(cursor.next())
+            {
+                NativeByteBuffer data = cursor.byteBufferValue(0);
+                if (data != null)
+                {
+                    TLRPC.Message m = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
+                    if(m.from_id == idMe)
+                    {
+                        cursor.dispose();
+                        return true;
+                    }
+                }
+            }
+            cursor.dispose();
+        }
+        catch(Exception e)
+        {
+
+        }
+        if(message.message.contains("@"+nameMe))
+        {
+            return true;
+        }
+        return false;
+    }
 
     public void putMessages(final ArrayList<TLRPC.Message> messages, final boolean withTransaction, boolean useQueue, final boolean doNotUpdateDialogDate, final int downloadMask) {
         putMessages(messages, withTransaction, useQueue, doNotUpdateDialogDate, downloadMask, false);
@@ -4793,13 +4891,14 @@ private void updateDialogsWithDeletedMessagesInternal(final ArrayList<Integer> m
             ArrayList<Integer> usersToLoad = new ArrayList<>();
             ArrayList<Integer> chatsToLoad = new ArrayList<>();
             ArrayList<Integer> encryptedToLoad = new ArrayList<>();
-            SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", ids));
+            SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.request_me FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", ids));
             while (cursor.next()) {
                 TLRPC.TL_dialog dialog = new TLRPC.TL_dialog();
                 dialog.id = cursor.longValue(0);
                 dialog.top_message = cursor.intValue(1);
                 dialog.read_inbox_max_id = cursor.intValue(10);
                 dialog.read_outbox_max_id = cursor.intValue(11);
+                dialog.request_me = cursor.intValue(12) == 1;
                 dialog.unread_count = cursor.intValue(2);
                 dialog.last_message_date = cursor.intValue(3);
                 dialog.pts = cursor.intValue(9);
@@ -5188,7 +5287,7 @@ public void run() {
                         }
 
                         if (a == 0 && createDialog) {
-                            SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                            SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                             state3.bindLong(1, dialog_id);
                             state3.bindInteger(2, message.date);
                             state3.bindInteger(3, 0);
@@ -5354,7 +5453,7 @@ public void run() {
                     ArrayList<Integer> encryptedToLoad = new ArrayList<>();
                     ArrayList<Long> replyMessages = new ArrayList<>();
                     HashMap<Long, TLRPC.Message> replyMessageOwners = new HashMap<>();
-                    SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did ORDER BY d.date DESC LIMIT %d,%d", offset, count));
+                    SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.request_me FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did ORDER BY d.date DESC LIMIT %d,%d", offset, count));
                     while (cursor.next()) {
                         TLRPC.TL_dialog dialog = new TLRPC.TL_dialog();
                         dialog.id = cursor.longValue(0);
@@ -5365,6 +5464,7 @@ public void run() {
                         dialog.flags = dialog.pts == 0 || (int) dialog.id > 0 ? 0 : 1;
                         dialog.read_inbox_max_id = cursor.intValue(11);
                         dialog.read_outbox_max_id = cursor.intValue(12);
+                        dialog.request_me = cursor.intValue(14) == 1;
                         long flags = cursor.longValue(8);
                         int low_flags = (int) flags;
                         dialog.notify_settings = new TLRPC.TL_peerNotifySettings();
@@ -5522,7 +5622,7 @@ private void putDialogsInternal(final TLRPC.messages_Dialogs dialogs) {
 
             if (!dialogs.dialogs.isEmpty()) {
                 SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?)");
-                SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
+                SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                 SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)");
                 SQLitePreparedStatement state4 = database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
                 SQLitePreparedStatement state5 = database.executeFast("REPLACE INTO messages_holes VALUES(?, ?, ?)");
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
index 36c54852e..e172075a2 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
@@ -1445,6 +1445,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             }
             PendingIntent contentIntent = PendingIntent.getActivity(ApplicationLoader.applicationContext, 0, intent, PendingIntent.FLAG_ONE_SHOT);
 
+            boolean requestMeExist = MessagesStorage.getInstance().requestMeExist(pushDialogs);
             String name;
             boolean replace = true;
             if ((int) dialog_id == 0 || pushDialogs.size() > 1 || AndroidUtilities.needShowPasscode(false) || UserConfig.isWaitingForPasscodeEnter) {
@@ -1497,9 +1498,17 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                         message = message.replace(name + ": ", "").replace(name + " ", "");
                     }
                 }
+                if(requestMeExist)
+                {
+                    message = "@" + message;
+                }
                 mBuilder.setContentText(message);
                 mBuilder.setStyle(new NotificationCompat.BigTextStyle().bigText(message));
             } else {
+                if(requestMeExist)
+                {
+                    detailText = "@" + detailText;
+                }
                 mBuilder.setContentText(detailText);
                 NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();
                 inboxStyle.setBigContentTitle(name);
diff --git a/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
index fc2342996..d5b9a3e7d 100644
--- a/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/tgnet/TLRPC.java
@@ -21321,6 +21321,7 @@ public void serializeToStream(AbstractSerializedData stream) {
 		public int read_inbox_max_id;
 		public int read_outbox_max_id;
 		public int unread_count;
+		public boolean request_me;
 		public PeerNotifySettings notify_settings;
 		public int pts;
 		public DraftMessage draft;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 59c30be3a..13d58db45 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -57,6 +57,7 @@
     private static Drawable errorDrawable;
     private static Drawable lockDrawable;
     private static Drawable countDrawable;
+    private static Drawable countDrawableYellow;
     private static Drawable countDrawableGrey;
     private static Drawable groupDrawable;
     private static Drawable broadcastDrawable;
@@ -72,6 +73,7 @@
     private boolean isDialogCell;
     private int lastMessageDate;
     private int unreadCount;
+    private boolean request_me;
     private boolean lastUnreadState;
     private int lastSendState;
     private boolean dialogMuted;
@@ -175,6 +177,7 @@ public DialogCell(Context context) {
             clockDrawable = getResources().getDrawable(R.drawable.msg_clock);
             errorDrawable = getResources().getDrawable(R.drawable.dialogs_warning);
             countDrawable = getResources().getDrawable(R.drawable.dialogs_badge);
+            countDrawableYellow = getResources().getDrawable(R.drawable.dialogs_badge_yellow);
             countDrawableGrey = getResources().getDrawable(R.drawable.dialogs_badge2);
             groupDrawable = getResources().getDrawable(R.drawable.list_group);
             broadcastDrawable = getResources().getDrawable(R.drawable.list_broadcast);
@@ -750,6 +753,7 @@ public void update(int mask) {
                 message = MessagesController.getInstance().dialogMessage.get(dialog.id);
                 lastUnreadState = message != null && message.isUnread();
                 unreadCount = dialog.unread_count;
+                request_me = dialog.request_me;
                 currentEditDate = message != null ? message.messageOwner.edit_date : 0;
                 lastMessageDate = dialog.last_message_date;
                 if (message != null) {
@@ -796,6 +800,7 @@ public void update(int mask) {
                     TLRPC.TL_dialog dialog = MessagesController.getInstance().dialogs_dict.get(currentDialogId);
                     if (dialog != null && unreadCount != dialog.unread_count) {
                         unreadCount = dialog.unread_count;
+                        request_me = dialog.request_me;
                         continueUpdate = true;
                     }
                 }
@@ -943,8 +948,16 @@ protected void onDraw(Canvas canvas) {
                 setDrawableBounds(countDrawableGrey, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
                 countDrawableGrey.draw(canvas);
             } else {
-                setDrawableBounds(countDrawable, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
-                countDrawable.draw(canvas);
+                if(request_me)
+                {
+                    setDrawableBounds(countDrawableYellow, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawableYellow.getIntrinsicHeight());
+                    countDrawableYellow.draw(canvas);
+                }
+                else
+                {
+                    setDrawableBounds(countDrawable, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
+                    countDrawable.draw(canvas);
+                }
             }
             canvas.save();
             canvas.translate(countLeft, countTop + AndroidUtilities.dp(4));
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/dialogs_badge_yellow.png b/TMessagesProj/src/main/res/drawable-hdpi/dialogs_badge_yellow.png
new file mode 100644
index 000000000..b5d965577
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/dialogs_badge_yellow.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/dialogs_badge_yellow.png b/TMessagesProj/src/main/res/drawable-mdpi/dialogs_badge_yellow.png
new file mode 100644
index 000000000..be0a6c627
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/dialogs_badge_yellow.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/dialogs_badge_yellow.png b/TMessagesProj/src/main/res/drawable-xhdpi/dialogs_badge_yellow.png
new file mode 100644
index 000000000..1806f0746
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/dialogs_badge_yellow.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/dialogs_badge_yellow.png b/TMessagesProj/src/main/res/drawable-xxhdpi/dialogs_badge_yellow.png
new file mode 100644
index 000000000..88994326b
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/dialogs_badge_yellow.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/dialogs_badge_yellow.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/dialogs_badge_yellow.png
new file mode 100644
index 000000000..17362a2cb
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/dialogs_badge_yellow.png differ
