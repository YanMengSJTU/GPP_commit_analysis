diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index ce1242084..9fcae18cf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -20,6 +20,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Handler;
+import android.support.v4.widget.DrawerLayout;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
@@ -40,6 +41,9 @@
 
 public class ActionBarLayout extends FrameLayout {
 
+
+    private DrawerLayout drawerlayout;
+
     public interface ActionBarLayoutDelegate {
         boolean onPreIme();
         boolean needPresentFragment(BaseFragment fragment, boolean removeLast, boolean forceWithoutAnimation, ActionBarLayout layout);
@@ -569,7 +573,21 @@ private void presentFragmentInternalRemoveOld(boolean removeLast, final BaseFrag
         }
         containerViewBack.setVisibility(View.GONE);
     }
+    public void setDrawerlayout(DrawerLayout drawerlayout){
+        this.drawerlayout=drawerlayout;
+    }
+
+    public void openDrawer(){
+        if(drawerlayout!=null){
+            drawerlayout.openDrawer(Gravity.RIGHT);
+        }
+    }
 
+    public void closeDrawer(){
+        if(drawerlayout!=null && drawerlayout.isDrawerOpen(Gravity.RIGHT)){
+            drawerlayout.closeDrawer(Gravity.RIGHT);
+        }
+    }
     public boolean presentFragment(BaseFragment fragment) {
         return presentFragment(fragment, false, false, true);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SlidingMenuAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SlidingMenuAdapter.java
new file mode 100644
index 000000000..01e9f6d32
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SlidingMenuAdapter.java
@@ -0,0 +1,71 @@
+package org.telegram.ui.Adapters;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import org.telegram.messenger.R;
+import org.telegram.ui.MenuItems;
+
+import java.util.ArrayList;
+
+/**
+ * Created by craterzone on 28/11/14.
+ */
+public class SlidingMenuAdapter extends ArrayAdapter<MenuItems> {
+
+int shareCount = -1;
+
+    public SlidingMenuAdapter(Context context, ArrayList<MenuItems> items) {
+        super(context, 0, items);
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        if (convertView == null) {
+            convertView = LayoutInflater.from(getContext()).inflate(R.layout.sliding_menu_row, null);
+        }
+        MenuItems item = getItem(position);
+        TextView title = (TextView) convertView.findViewById(R.id.row_title);
+        if(item.isTextShow()){
+            title.setVisibility(View.VISIBLE);
+            title.setText(item.getName());
+        }else{
+            title.setVisibility(View.GONE);
+        }
+
+        ImageView image = (ImageView) convertView.findViewById(R.id.menu_image);
+        image.setImageResource(item.getIcon());
+
+        TextView count = (TextView) convertView.findViewById(R.id.menu_count);
+        if(item.getCount() == ""){
+            count.setText("");
+        }
+
+
+        /*else if (Integer.parseInt(item.getCount()) == -1) {
+            count.setText("");
+        }*/ else {
+            count.setText(String.format("%s", item.getCount()));
+        }
+        if(count.getText() == "Loading...") {
+            if (shareCount != -1) {
+                count.setText(String.format("%d", shareCount));
+            }
+        }
+
+
+         return convertView;
+    }
+
+  public void  setTotalCount(int count){
+        this.shareCount = count;
+    }
+
+
+
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 3b1a2ccca..3ceabe48f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -24,11 +24,13 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewParent;
 import android.view.inputmethod.EditorInfo;
 import android.widget.AbsListView;
 import android.widget.AdapterView;
 import android.widget.EditText;
 import android.widget.FrameLayout;
+import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.TextView;
@@ -51,6 +53,7 @@
 import org.telegram.ui.Adapters.BaseSectionsAdapter;
 import org.telegram.ui.Adapters.ContactsAdapter;
 import org.telegram.ui.Adapters.SearchAdapter;
+import org.telegram.ui.Adapters.SlidingMenuAdapter;
 import org.telegram.ui.Cells.UserCell;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
@@ -318,8 +321,8 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                             else if(row == 1){
                                 try {
                                     SharedPreferences pp  = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-                                    if(false/*pp.getString("social_id","").equals("")*/) {
-                                       // presentFragment(new MyProfileActivity());
+                                    if(pp.getString("social_id","").equals("")) {
+                                        presentFragment(new MyProfileActivity());
                                     }
                                     else{
                                         Bundle args22 = new Bundle();
@@ -536,6 +539,9 @@ public void onResume() {
         if (listViewAdapter != null) {
             listViewAdapter.notifyDataSetChanged();
         }
+
+        setContactMenuList();
+
     }
 
     @Override
@@ -591,4 +597,94 @@ public void setDelegate(ContactsActivityDelegate delegate) {
     public void setIgnoreUsers(HashMap<Integer, TLRPC.User> users) {
         ignoreUsers = users;
     }
+
+
+
+
+    private void setContactMenuList(){
+        ArrayList<MenuItems> draweritems=new ArrayList<MenuItems>();
+       /* draweritems.add(new MenuItems(LocaleController.getString("AddNewContact", R.string.add_new_contact),R.drawable.menu_plus,true, "",0));*/
+        draweritems.add(new MenuItems(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_broadcast, true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat),R.drawable.menu_broadcast,true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel),R.drawable.menu_broadcast,true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink),R.drawable.menu_broadcast,true, "",0));
+
+        SlidingMenuAdapter adapter = new SlidingMenuAdapter(getParentActivity(),
+                draweritems);
+
+        ViewParent view=  parentLayout.getParent();
+        ListView drawerList=((ListView)((View) view.getParent()).findViewById(R.id.contact_slidermenu));
+        drawerList.setAdapter(adapter);drawerList.setOnItemClickListener(new ContactMenuClickListener());
+        ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.GONE);
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.GONE);
+        ((ImageView) ((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.transparent);
+        ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText("");
+    }
+
+
+    private class ContactMenuClickListener implements
+            ListView.OnItemClickListener {
+        @Override
+        public void onItemClick(AdapterView<?> parent, View view, int position,
+                                long id) {
+            switch(position){
+                case 0:
+                    parentLayout.closeDrawer();
+                    //   closeDrawer();
+                    try {
+                        Intent intent = new Intent(Intent.ACTION_SEND);
+                        intent.setType("text/plain");
+                        intent.putExtra(Intent.EXTRA_TEXT,  LocaleController.getString("InviteText", R.string.InviteTextsocial));
+                        getParentActivity().startActivity(intent);
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                    break;
+                case 1:
+                    parentLayout.closeDrawer();
+                    //    closeDrawer();
+                    Bundle args = new Bundle();
+                    args.putBoolean("onlyUsers", true);
+                    args.putBoolean("destroyAfterSelect", true);
+                    args.putBoolean("usersAsSections", true);
+                    args.putBoolean("createSecretChat", true);
+                    args.putString("title", LocaleController.getString("NewSecretChat", R.string.NewSecretChat));
+                    presentFragment(new ContactsActivity(args));
+                    break;
+                case 2:
+                    parentLayout.closeDrawer();
+
+                    if (!MessagesController.isFeatureEnabled("broadcast_create", parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 1))) {
+                        return;
+                    }
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    if (preferences.getBoolean("channel_intro", false)) {
+                        Bundle ars = new Bundle();
+                        ars.putInt("step", 0);
+
+                        presentFragment(new ChannelCreateActivity(ars));
+                    } else {
+                        presentFragment(new ChannelIntroActivity());
+                        preferences.edit().putBoolean("channel_intro", true).commit();
+                    }
+                    break;
+                case 3:
+                    SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("preferences", Activity.MODE_PRIVATE);
+                    if(p.getString("minage","0").equals("0")){
+                        presentFragment(new PreferencesActivity());
+                    }
+                    else {
+                        Bundle args2 = new Bundle();
+                        args2.putString("s_friend", "wink");
+                        presentFragment(new SocialFriendActivity(args2));
+                    }
+                    break;
+
+            }
+
+        }
+    }
+
+
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 5965224df..f5ea7cf2e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -26,8 +26,10 @@
 import android.os.Parcelable;
 import android.provider.ContactsContract;
 import android.support.annotation.NonNull;
+import android.support.v4.widget.DrawerLayout;
 import android.text.TextUtils;
 import android.view.ActionMode;
+import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
 import android.view.View;
@@ -39,6 +41,7 @@
 import android.widget.AdapterView;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
+import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.RelativeLayout;
 import android.widget.Toast;
@@ -111,7 +114,7 @@
     private FrameLayout shadowTablet;
     private FrameLayout shadowTabletSide;
     private ImageView backgroundTablet;
-    protected DrawerLayoutContainer drawerLayoutContainer;
+  //  protected DrawerLayoutContainer drawerLayoutContainer;
     private DrawerLayoutAdapter drawerLayoutAdapter;
     private PasscodeView passcodeView;
     private AlertDialog visibleDialog;
@@ -123,6 +126,8 @@
     private boolean tabletFullSize;
 
     private Runnable lockRunnable;
+    private View parentView;
+    private DrawerLayout drawerLayout;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -168,14 +173,16 @@ protected void onCreate(Bundle savedInstanceState) {
 
         actionBarLayout = new ActionBarLayout(this);
 
+/*
         drawerLayoutContainer = new DrawerLayoutContainer(this);
         setContentView(drawerLayoutContainer, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+*/
 
         if (AndroidUtilities.isTablet()) {
             getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
 
             RelativeLayout launchLayout = new RelativeLayout(this);
-            drawerLayoutContainer.addView(launchLayout);
+        //    drawerLayoutContainer.addView(launchLayout);
             FrameLayout.LayoutParams layoutParams1 = (FrameLayout.LayoutParams) launchLayout.getLayoutParams();
             layoutParams1.width = LayoutHelper.MATCH_PARENT;
             layoutParams1.height = LayoutHelper.MATCH_PARENT;
@@ -268,13 +275,84 @@ public void onClick(View v) {
             layersActionBarLayout.setLayoutParams(relativeLayoutParams);
             layersActionBarLayout.init(layerFragmentsStack);
             layersActionBarLayout.setDelegate(this);
-            layersActionBarLayout.setDrawerLayoutContainer(drawerLayoutContainer);
+       //     layersActionBarLayout.setDrawerLayoutContainer(drawerLayoutContainer);
             layersActionBarLayout.setVisibility(View.GONE);
         } else {
-            drawerLayoutContainer.addView(actionBarLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+
+
+            parentView = View.inflate(this, R.layout.menu, null);
+            setContentView(parentView, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+            RelativeLayout view1 = ((RelativeLayout) parentView.findViewById(R.id.frame_layout));
+            ListView menu = ((ListView) parentView.findViewById(R.id.contact_slidermenu));
+            LinearLayout belowLinearLayout = ((LinearLayout) parentView.findViewById(R.id.below_layout));
+            view1.addView(actionBarLayout);
+            ViewGroup.LayoutParams params = actionBarLayout.getLayoutParams();
+            params.width = ViewGroup.LayoutParams.MATCH_PARENT;
+            params.height = ViewGroup.LayoutParams.MATCH_PARENT;
+            actionBarLayout.setPadding(0, 0, 0, AndroidUtilities.dp(50));
+            actionBarLayout.setLayoutParams(params);
+            drawerLayout=((DrawerLayout)parentView.findViewById(R.id.chat_viewer_drawer_layout));
+            actionBarLayout.setDrawerlayout(drawerLayout);
+     //       setTabEnableDisable(true,false,true);
+
+
+     //       drawerLayoutContainer.addView(actionBarLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
         }
 
-        ListView listView = new ListView(this) {
+
+        parentView.findViewById(R.id.contact).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                /*if(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getBoolean("Login_Status",true)) {
+                    ArrayList<CustomHttpParams> paramse = new ArrayList();//todo ram
+                    paramse.add(new CustomHttpParams("uniqueId", Util.getNumber(UserConfig.getCurrentUser().phone)));
+                    BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse, LaunchActivity.this));
+                }*/
+                presentFragment(new ContactsActivity(null), true, true);
+//                setTabEnableDisable(false, true, true);
+
+                //      drawerLayoutContainer.closeDrawer(false);
+
+            }
+        });
+        parentView.findViewById(R.id.setting).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                /*if(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getBoolean("Login_Status",true)) {
+                    ArrayList<CustomHttpParams> paramse = new ArrayList();//todo ram
+                    paramse.add(new CustomHttpParams("uniqueId", Util.getNumber(UserConfig.getCurrentUser().phone)));
+                    BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse, LaunchActivity.this));
+                }*/
+                presentFragment(new SettingsActivity(),true,true);
+            //    setTabEnableDisable(true, true, false);
+                //      drawerLayoutContainer.closeDrawer(false);
+
+            }
+        });
+
+        parentView.findViewById(R.id.menu).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+                drawerLayout.openDrawer(Gravity.RIGHT);
+
+            }
+        });
+///// TODO: 20/6/16 ram
+        parentView.findViewById(R.id.message).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                presentFragment(new DialogsActivity(null),true,true);
+              //  setTabEnableDisable(true,false,true);
+
+//                drawerLayoutContainer.closeDrawer(false);
+
+            }
+        });
+
+
+
+       /* ListView listView = new ListView(this) {
             @Override
             public boolean hasOverlappingRendering() {
                 return false;
@@ -286,7 +364,7 @@ public boolean hasOverlappingRendering() {
         listView.setDivider(null);
         listView.setDividerHeight(0);
         listView.setVerticalScrollBarEnabled(false);
-        drawerLayoutContainer.setDrawerLayout(listView);
+//        drawerLayoutContainer.setDrawerLayout(listView);
         FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
         Point screenSize = AndroidUtilities.getRealScreenSize();
         layoutParams.width = AndroidUtilities.isTablet() ? AndroidUtilities.dp(320) : Math.min(AndroidUtilities.dp(320), Math.min(screenSize.x, screenSize.y) - AndroidUtilities.dp(56));
@@ -347,19 +425,21 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             }
         });
 
+
         drawerLayoutContainer.setParentActionBarLayout(actionBarLayout);
         actionBarLayout.setDrawerLayoutContainer(drawerLayoutContainer);
+       */
         actionBarLayout.init(mainFragmentsStack);
         actionBarLayout.setDelegate(this);
 
         ApplicationLoader.loadWallpaper();
 
         passcodeView = new PasscodeView(this);
-        drawerLayoutContainer.addView(passcodeView);
-        FrameLayout.LayoutParams layoutParams1 = (FrameLayout.LayoutParams) passcodeView.getLayoutParams();
+//        drawerLayoutContainer.addView(passcodeView);
+/*        FrameLayout.LayoutParams layoutParams1 = (FrameLayout.LayoutParams) passcodeView.getLayoutParams();
         layoutParams1.width = LayoutHelper.MATCH_PARENT;
         layoutParams1.height = LayoutHelper.MATCH_PARENT;
-        passcodeView.setLayoutParams(layoutParams1);
+        passcodeView.setLayoutParams(layoutParams1);*/
 
         NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeOtherAppActivities, this);
         currentConnectionState = ConnectionsManager.getInstance().getConnectionState();
@@ -373,11 +453,29 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
 
         if (actionBarLayout.fragmentsStack.isEmpty()) {
             if (!UserConfig.isClientActivated()) {
+
+
+                ListView menu = ((ListView) parentView.findViewById(R.id.contact_slidermenu));
+                LinearLayout belowLinearLayout = ((LinearLayout) parentView.findViewById(R.id.below_layout));
+
+                DrawerLayout drawerLayout=((DrawerLayout)parentView.findViewById(R.id.chat_viewer_drawer_layout));
+                drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
+                actionBarLayout.setPadding(0,0,0,0);
                 actionBarLayout.addFragmentToStack(new LoginActivity());
+                /*  actionBarLayout.addFragmentToStack(new LoginActivity());
                 drawerLayoutContainer.setAllowOpenDrawer(false, false);
+                */
+
+
+
             } else {
+
                 actionBarLayout.addFragmentToStack(new DialogsActivity(null));
-                drawerLayoutContainer.setAllowOpenDrawer(true, false);
+               // setTabEnableDisable(true, false, true);
+
+                // drawerLayoutContainer.setAllowOpenDrawer(true, false);
+                /*   actionBarLayout.addFragmentToStack(new DialogsActivity(null));
+                drawerLayoutContainer.setAllowOpenDrawer(true, false);*/
             }
 
             try {
@@ -455,7 +553,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             if (actionBarLayout.fragmentsStack.size() == 1 && actionBarLayout.fragmentsStack.get(0) instanceof LoginActivity) {
                 allowOpen = false;
             }
-            drawerLayoutContainer.setAllowOpenDrawer(allowOpen, false);
+       //     drawerLayoutContainer.setAllowOpenDrawer(allowOpen, false);
         }
 
         handleIntent(getIntent(), false, savedInstanceState != null, false);
@@ -484,7 +582,7 @@ private void showPasscodeActivity() {
         }
         passcodeView.onShow();
         UserConfig.isWaitingForPasscodeEnter = true;
-        drawerLayoutContainer.setAllowOpenDrawer(false, false);
+    //    drawerLayoutContainer.setAllowOpenDrawer(false, false);
         passcodeView.setDelegate(new PasscodeView.PasscodeViewDelegate() {
             @Override
             public void didAcceptedPassword() {
@@ -493,7 +591,7 @@ public void didAcceptedPassword() {
                     handleIntent(passcodeSaveIntent, passcodeSaveIntentIsNew, passcodeSaveIntentIsRestore, true);
                     passcodeSaveIntent = null;
                 }
-                drawerLayoutContainer.setAllowOpenDrawer(true, false);
+   //             drawerLayoutContainer.setAllowOpenDrawer(true, false);
                 actionBarLayout.showLastFragment();
                 if (AndroidUtilities.isTablet()) {
                     layersActionBarLayout.showLastFragment();
@@ -974,7 +1072,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                     }
                     actionBarLayout.showLastFragment();
                     rightActionBarLayout.showLastFragment();
-                    drawerLayoutContainer.setAllowOpenDrawer(false, false);
+              //      drawerLayoutContainer.setAllowOpenDrawer(false, false);
                 } else {
                     for (int a = 0; a < actionBarLayout.fragmentsStack.size(); a++) {
                         BaseFragment fragment = actionBarLayout.fragmentsStack.get(a);
@@ -983,7 +1081,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                             break;
                         }
                     }
-                    drawerLayoutContainer.setAllowOpenDrawer(true, false);
+               //     drawerLayoutContainer.setAllowOpenDrawer(true, false);
                 }
                 actionBarLayout.presentFragment(new AudioPlayerActivity(), false, true, true);
                 pushOpened = true;
@@ -1015,12 +1113,12 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                         PhotoViewer.getInstance().closePhoto(false, true);
                     }
 
-                    drawerLayoutContainer.setAllowOpenDrawer(false, false);
+                //    drawerLayoutContainer.setAllowOpenDrawer(false, false);
                     if (AndroidUtilities.isTablet()) {
                         actionBarLayout.showLastFragment();
                         rightActionBarLayout.showLastFragment();
                     } else {
-                        drawerLayoutContainer.setAllowOpenDrawer(true, false);
+                 //       drawerLayoutContainer.setAllowOpenDrawer(true, false);
                     }
                 } else {
                     didSelectDialog(null, dialogId, false);
@@ -1030,9 +1128,9 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                 if (AndroidUtilities.isTablet()) {
                     actionBarLayout.showLastFragment();
                     rightActionBarLayout.showLastFragment();
-                    drawerLayoutContainer.setAllowOpenDrawer(false, false);
+                //    drawerLayoutContainer.setAllowOpenDrawer(false, false);
                 } else {
-                    drawerLayoutContainer.setAllowOpenDrawer(true, false);
+             //       drawerLayoutContainer.setAllowOpenDrawer(true, false);
                 }
                 pushOpened = true;
             }
@@ -1042,22 +1140,22 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                     if (!UserConfig.isClientActivated()) {
                         if (layersActionBarLayout.fragmentsStack.isEmpty()) {
                             layersActionBarLayout.addFragmentToStack(new LoginActivity());
-                            drawerLayoutContainer.setAllowOpenDrawer(false, false);
+                    //        drawerLayoutContainer.setAllowOpenDrawer(false, false);
                         }
                     } else {
                         if (actionBarLayout.fragmentsStack.isEmpty()) {
                             actionBarLayout.addFragmentToStack(new DialogsActivity(null));
-                            drawerLayoutContainer.setAllowOpenDrawer(true, false);
+                       //     drawerLayoutContainer.setAllowOpenDrawer(true, false);
                         }
                     }
                 } else {
                     if (actionBarLayout.fragmentsStack.isEmpty()) {
                         if (!UserConfig.isClientActivated()) {
                             actionBarLayout.addFragmentToStack(new LoginActivity());
-                            drawerLayoutContainer.setAllowOpenDrawer(false, false);
+                         //   drawerLayoutContainer.setAllowOpenDrawer(false, false);
                         } else {
                             actionBarLayout.addFragmentToStack(new DialogsActivity(null));
-                            drawerLayoutContainer.setAllowOpenDrawer(true, false);
+                       //     drawerLayoutContainer.setAllowOpenDrawer(true, false);
                         }
                     }
                 }
@@ -1769,6 +1867,7 @@ public void didReceivedNotification(int id, Object... args) {
         if (id == NotificationCenter.appDidLogout) {
             if (drawerLayoutAdapter != null) {
                 drawerLayoutAdapter.notifyDataSetChanged();
+
             }
             for (BaseFragment fragment : actionBarLayout.fragmentsStack) {
                 fragment.onFragmentDestroy();
@@ -1801,7 +1900,7 @@ public void didReceivedNotification(int id, Object... args) {
                 updateCurrentConnectionState();
             }
         } else if (id == NotificationCenter.mainUserInfoChanged) {
-            drawerLayoutAdapter.notifyDataSetChanged();
+//            drawerLayoutAdapter.notifyDataSetChanged();
         } else if (id == NotificationCenter.needShowAlert) {
             final Integer reason = (Integer) args[0];
             AlertDialog.Builder builder = new AlertDialog.Builder(this);
@@ -1976,8 +2075,8 @@ public void onBackPressed() {
         }
         if (PhotoViewer.getInstance().isVisible()) {
             PhotoViewer.getInstance().closePhoto(true, false);
-        } else if (drawerLayoutContainer.isDrawerOpened()) {
-            drawerLayoutContainer.closeDrawer(false);
+        } else if (false/*drawerLayoutContainer.isDrawerOpened()*/) {
+        //    drawerLayoutContainer.closeDrawer(false);
         } else if (AndroidUtilities.isTablet()) {
             if (layersActionBarLayout.getVisibility() == View.VISIBLE) {
                 layersActionBarLayout.onBackPressed();
@@ -2054,14 +2153,14 @@ public boolean onKeyUp(int keyCode, @NonNull KeyEvent event) {
                 }
             } else {
                 if (actionBarLayout.fragmentsStack.size() == 1) {
-                    if (!drawerLayoutContainer.isDrawerOpened()) {
+                   /* if (!drawerLayoutContainer.isDrawerOpened()) {
                         if (getCurrentFocus() != null) {
                             AndroidUtilities.hideKeyboard(getCurrentFocus());
                         }
                         drawerLayoutContainer.openDrawer(false);
                     } else {
                         drawerLayoutContainer.closeDrawer(false);
-                    }
+                    }*/
                 } else {
                     actionBarLayout.onKeyUp(keyCode, event);
                 }
@@ -2073,7 +2172,7 @@ public boolean onKeyUp(int keyCode, @NonNull KeyEvent event) {
     @Override
     public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, boolean forceWithoutAnimation, ActionBarLayout layout) {
         if (AndroidUtilities.isTablet()) {
-            drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity) && layersActionBarLayout.getVisibility() != View.VISIBLE, true);
+        //    drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity) && layersActionBarLayout.getVisibility() != View.VISIBLE, true);
             if (fragment instanceof DialogsActivity) {
                 DialogsActivity dialogsActivity = (DialogsActivity)fragment;
                 if (dialogsActivity.isMainDialogList() && layout != actionBarLayout) {
@@ -2081,7 +2180,7 @@ public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, bo
                     actionBarLayout.presentFragment(fragment, removeLast, forceWithoutAnimation, false);
                     layersActionBarLayout.removeAllFragments();
                     layersActionBarLayout.setVisibility(View.GONE);
-                    drawerLayoutContainer.setAllowOpenDrawer(true, false);
+           //         drawerLayoutContainer.setAllowOpenDrawer(true, false);
                     if (!tabletFullSize) {
                         shadowTabletSide.setVisibility(View.VISIBLE);
                         if (rightActionBarLayout.fragmentsStack.isEmpty()) {
@@ -2141,7 +2240,7 @@ public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, bo
                 }
             } else if (layout != layersActionBarLayout) {
                 layersActionBarLayout.setVisibility(View.VISIBLE);
-                drawerLayoutContainer.setAllowOpenDrawer(false, true);
+              //  drawerLayoutContainer.setAllowOpenDrawer(false, true);
                 if (fragment instanceof LoginActivity) {
                     backgroundTablet.setVisibility(View.VISIBLE);
                     shadowTabletSide.setVisibility(View.GONE);
@@ -2154,7 +2253,7 @@ public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, bo
             }
             return true;
         } else {
-            drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity), false);
+        //    drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity), false);
             return true;
         }
     }
@@ -2162,7 +2261,7 @@ public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, bo
     @Override
     public boolean needAddFragmentToStack(BaseFragment fragment, ActionBarLayout layout) {
         if (AndroidUtilities.isTablet()) {
-            drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity) && layersActionBarLayout.getVisibility() != View.VISIBLE, true);
+         //   drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity) && layersActionBarLayout.getVisibility() != View.VISIBLE, true);
             if (fragment instanceof DialogsActivity) {
                 DialogsActivity dialogsActivity = (DialogsActivity)fragment;
                 if (dialogsActivity.isMainDialogList() && layout != actionBarLayout) {
@@ -2170,7 +2269,7 @@ public boolean needAddFragmentToStack(BaseFragment fragment, ActionBarLayout lay
                     actionBarLayout.addFragmentToStack(fragment);
                     layersActionBarLayout.removeAllFragments();
                     layersActionBarLayout.setVisibility(View.GONE);
-                    drawerLayoutContainer.setAllowOpenDrawer(true, false);
+                //    drawerLayoutContainer.setAllowOpenDrawer(true, false);
                     if (!tabletFullSize) {
                         shadowTabletSide.setVisibility(View.VISIBLE);
                         if (rightActionBarLayout.fragmentsStack.isEmpty()) {
@@ -2206,7 +2305,7 @@ public boolean needAddFragmentToStack(BaseFragment fragment, ActionBarLayout lay
                 }
             } else if (layout != layersActionBarLayout) {
                 layersActionBarLayout.setVisibility(View.VISIBLE);
-                drawerLayoutContainer.setAllowOpenDrawer(false, true);
+           //     drawerLayoutContainer.setAllowOpenDrawer(false, true);
                 if (fragment instanceof LoginActivity) {
                     backgroundTablet.setVisibility(View.VISIBLE);
                     shadowTabletSide.setVisibility(View.GONE);
@@ -2219,7 +2318,7 @@ public boolean needAddFragmentToStack(BaseFragment fragment, ActionBarLayout lay
             }
             return true;
         } else {
-            drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity), false);
+         //   drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity), false);
             return true;
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MenuItems.java b/TMessagesProj/src/main/java/org/telegram/ui/MenuItems.java
new file mode 100644
index 000000000..795fccf3e
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MenuItems.java
@@ -0,0 +1,62 @@
+package org.telegram.ui;
+
+/**
+ * Created by craterzone on 28/11/14.
+ */
+public class MenuItems {
+
+    private String name;
+    private int icon;
+    private boolean isTextShow;
+    private String count;
+    private int id;
+
+    public MenuItems(String name, int icon, boolean isTextShow, String count, int id) {
+        this.name = name;
+        this.icon = icon;
+        this.isTextShow = isTextShow;
+        this.count = count;
+        this.id=id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public int getIcon() {
+        return icon;
+    }
+
+    public boolean isTextShow() {
+        return isTextShow;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public void setIcon(int icon) {
+        this.icon = icon;
+    }
+
+    public void setTextShow(boolean isTextShow) {
+        this.isTextShow = isTextShow;
+    }
+
+    public String getCount(){
+        return count;
+    }
+
+    public void setCount(String count){
+        this.count = count;
+
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 06c547fbf..7a1bb4036 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -300,7 +300,7 @@ public BackgroundDrawable(int color) {
         @Override
         public void setAlpha(int alpha) {
             if (parentActivity instanceof LaunchActivity) {
-                ((LaunchActivity) parentActivity).drawerLayoutContainer.setAllowDrawContent(!isVisible || alpha != 255);
+              //  ((LaunchActivity) parentActivity).drawerLayoutContainer.setAllowDrawContent(!isVisible || alpha != 255);
             }
             super.setAlpha(alpha);
         }
diff --git a/TMessagesProj/src/main/res/layout/menu.xml b/TMessagesProj/src/main/res/layout/menu.xml
new file mode 100644
index 000000000..44f5bfc20
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/menu.xml
@@ -0,0 +1,190 @@
+<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/chat_viewer_drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <RelativeLayout
+        android:id="@+id/frame_layout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:background="#ffffffff"
+            android:layout_height="50dp"
+            android:layout_alignParentTop="true"
+            android:id="@+id/notification_layout">
+        </FrameLayout>
+
+        <LinearLayout
+            android:id="@+id/below_layout"
+            android:orientation="horizontal"
+            android:layout_width="fill_parent"
+            android:layout_height="50dp"
+            android:layout_alignParentBottom="true"
+
+            >
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:background="#ff323232"
+                android:layout_height="match_parent"
+                android:id="@+id/contact"
+                android:orientation="vertical">
+
+                <View
+                    android:layout_width="match_parent"
+                    android:layout_height="3dp"
+                  ></View>
+
+                <ImageView
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="center"
+                    android:src="@drawable/attach_contact"
+                    />
+            </LinearLayout>
+            <View
+                android:layout_width="2dp"
+                android:layout_height="match_parent"
+                android:background="#ff151515"></View>
+
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:background="#ff323232"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:id="@+id/message">
+                <View
+                    android:layout_width="match_parent"
+                    android:layout_height="3dp"
+                ></View>
+
+                <ImageView
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="center"
+                    />
+
+            </LinearLayout>
+            <View
+                android:layout_width="2dp"
+                android:layout_height="match_parent"
+                android:background="#ff151515"></View>
+
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:background="#ff323232"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:id="@+id/setting">
+                <View
+                    android:layout_width="match_parent"
+                    android:layout_height="3dp"
+                >
+
+                </View>
+
+
+                <ImageView
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="center"
+                    />
+            </LinearLayout>
+            <View
+                android:layout_width="2dp"
+                android:layout_height="match_parent"
+                android:background="#ff151515"></View>
+
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_weight="1"
+                android:background="#ff323232"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:id="@+id/menu">
+
+
+                <ImageView
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="center"
+                    />
+            </LinearLayout>
+        </LinearLayout>
+
+
+
+    </RelativeLayout>
+    <RelativeLayout
+        android:layout_width="250dp"
+        android:layout_gravity="end"
+        android:gravity="center_vertical"
+        android:id="@+id/menu_container"
+        android:background="#ff111111"
+        android:layout_height="match_parent">
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:gravity="center_vertical"
+            android:background="#ff111111"
+            android:orientation="vertical"
+            >
+            <View
+                android:layout_width="match_parent"
+                android:layout_height="1dp"
+                android:layout_marginLeft="10dp"
+                android:background="@color/divider_drawer"
+                ></View>
+            <ListView
+                android:id="@+id/contact_slidermenu"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:choiceMode="singleChoice"
+                android:divider="@color/divider_drawer"
+
+                />
+            <View
+                android:layout_width="match_parent"
+                android:layout_height="1dp"
+                android:layout_marginLeft="10dp"
+                android:background="@color/divider_drawer"
+
+                ></View>
+        </LinearLayout>
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:background="@color/divider_drawer"
+            android:layout_marginLeft="10dp"
+            android:layout_above="@+id/bottom_panel"
+            android:visibility= "gone"
+            android:id="@+id/divider"
+
+            ></View>
+      <!--  <View
+            android:visibility= "gone"
+            android:id="@+id/divider"
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_marginLeft="10dp"
+            android:background="#262626"
+            android:layout_above="@+id/bottom_panel"
+            ></View>-->
+        <include layout="@layout/sliding_menu_row"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_alignParentBottom="true"
+            android:visibility= "gone"
+            android:id="@+id/bottom_panel"
+            ></include>
+
+
+    </RelativeLayout>
+</android.support.v4.widget.DrawerLayout>
diff --git a/TMessagesProj/src/main/res/layout/sliding_menu_row.xml b/TMessagesProj/src/main/res/layout/sliding_menu_row.xml
new file mode 100644
index 000000000..3716a9302
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/sliding_menu_row.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="250dp"
+    android:layout_height="match_parent"
+
+    android:orientation="horizontal">
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:padding="5dp"
+        android:id="@+id/menu_image"
+        />
+
+    <TextView
+        android:layout_width="0dp"
+        android:layout_height="match_parent"
+        android:layout_weight="1"
+        android:padding="5dp"
+        android:gravity="center_vertical"
+        android:textColor="#d6d6d6"
+        android:textSize="14dp"
+        android:id="@+id/row_title" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:gravity="center_vertical|right"
+        android:padding="10dp"
+        android:textColor="#d6d6d6"
+        android:id="@+id/menu_count"
+
+        />
+</LinearLayout>
