diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 9319616ab..0f69ff953 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -5832,7 +5832,11 @@ public static void prepareSendingMedia(AccountInstance accountInstance, final Ar
                                 final HashMap<String, String> params = new HashMap<>();
                                 final Bitmap[] bitmapFinal = new Bitmap[1];
                                 final String[] keyFinal = new String[1];
-                                if (photo.has_stickers = info.masks != null && !info.masks.isEmpty()) {
+                                if (photo.has_stickers = (
+                                    info.masks != null &&
+                                    !info.masks.isEmpty() &&
+                                    org.telegram.messenger.SharedConfig.hasSticker
+                                    )) {
                                     SerializedData serializedData = new SerializedData(4 + info.masks.size() * 20);
                                     serializedData.writeInt32(info.masks.size());
                                     for (int b = 0; b < info.masks.size(); b++) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java
index 2b9fd4b1b..d4ed52b25 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java
@@ -96,6 +96,7 @@
     public static int distanceSystemType;
 
     public static boolean hideTitleDialog = false;
+    public static boolean hasSticker = false;;
 
     static {
         loadConfig();
@@ -255,6 +256,7 @@ public static void loadConfig() {
             showNotificationsForAllAccounts = preferences.getBoolean("AllAccounts", true);
 
             hideTitleDialog = preferences.getBoolean("hideTitle", false);
+            hasSticker = preferences.getBoolean("photoHasSticker", false);
 
             configLoaded = true;
         }
@@ -566,6 +568,14 @@ public static void setDistanceSystemType(int type) {
         LocaleController.resetImperialSystemType();
     }
 
+    public static void toggleHasSticker() {
+        hasSticker = !hasSticker;
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putBoolean("photoHasSticker", hasSticker);
+        editor.commit();
+    }
+
     public static void loadProxyList() {
         if (proxyListLoaded) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index 6aa4c134f..99d416e00 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -53,6 +53,7 @@
 
     private int squareAvatarsRow;
     private int inappCameraRow;
+    private int photoHasStickerRow;
 
     private int pinOrderRow;
 
@@ -65,6 +66,8 @@ public boolean onFragmentCreate() {
         sectionRow1 = rowCount++;
         squareAvatarsRow = rowCount++;
         inappCameraRow = rowCount++;
+        photoHasStickerRow = rowCount++;
+
         pinOrderRow = rowCount++;
 
         return true;
@@ -121,6 +124,11 @@ public boolean supportsPredictiveItemAnimations() {
                 if (view instanceof TextCheckCell) {
                     ((TextCheckCell) view).setChecked(SharedConfig.inappCamera);
                 }
+            } else if (position == photoHasStickerRow) {
+                SharedConfig.toggleHasSticker();
+                if (view instanceof TextCheckCell) {
+                    ((TextCheckCell) view).setChecked(SharedConfig.hasSticker);
+                }
             } else if (position == pinOrderRow) {
                 presentFragment(new PinsOrderActivity());
             }
@@ -171,6 +179,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         String t = LocaleController.getString("InAppCamera", R.string.InAppCamera);
                         String info = LocaleController.getString("InAppCameraInfo", R.string.InAppCameraInfo);
                         textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("inappCamera", true), false, false);
+                    } else if (position == photoHasStickerRow) {
+                        String t = LocaleController.getString("PhotoHasSticker", R.string.PhotoHasSticker);
+                        String info = LocaleController.getString("PhotoHasStickerInfo", R.string.PhotoHasStickerInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("photoHasSticker", false), true, false);
                     }
                     break;
                 }
@@ -188,7 +200,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         public boolean isEnabled(RecyclerView.ViewHolder holder) {
             int position = holder.getAdapterPosition();
             boolean fork = position == squareAvatarsRow
-                        || position == inappCameraRow;
+                        || position == inappCameraRow
+                        || position == photoHasStickerRow
                         || position == pinOrderRow;
             return fork;
         }
@@ -233,6 +246,7 @@ public int getItemViewType(int position) {
                 return 2;
             } else if (position == squareAvatarsRow 
                 || position == inappCameraRow 
+                || position == photoHasStickerRow 
                 || position == pinOrderRow) {
                 return 3;
             } else if (position == sectionRow1) {
