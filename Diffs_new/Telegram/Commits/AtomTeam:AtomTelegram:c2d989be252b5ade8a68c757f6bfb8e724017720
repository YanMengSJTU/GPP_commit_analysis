diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java b/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java
index 39e99ade5..25075edec 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/query/StickersQuery.java
@@ -361,6 +361,7 @@ public void run(final TLObject response, TLRPC.TL_error error) {
                 TLRPC.TL_messages_getRecentStickers req = new TLRPC.TL_messages_getRecentStickers();
                 req.hash = calcDocumentsHash(recentStickers[type]);
                 req.attached = type == TYPE_MASK;
+                //req.attached = type ==TYPE_IMAGE;
                 ConnectionsManager.getInstance().sendRequest(req, new RequestDelegate() {
                     @Override
                     public void run(TLObject response, TLRPC.TL_error error) {
@@ -480,6 +481,7 @@ public static void addNewStickerSet(final TLRPC.TL_messages_stickerSet set) {
             return;
         }
         int type = set.set.masks ? TYPE_MASK : TYPE_IMAGE;
+        //int type = TYPE_IMAGE;
         stickerSets[type].add(0, set);
         stickerSetsById.put(set.set.id, set);
         stickerSetsByName.put(set.set.short_name, set);
@@ -796,6 +798,9 @@ public void run() {
                 }
             });
         } else {
+            TLObject req = new TLRPC.TL_messages_getAllStickers();
+            final int hash = ((TLRPC.TL_messages_getAllStickers) req).hash = force ? 0 : loadHash[type];
+            /*
             TLObject req;
             final int hash;
             if (type == TYPE_IMAGE) {
@@ -804,7 +809,7 @@ public void run() {
             } else {
                 req = new TLRPC.TL_messages_getMaskStickers();
                 hash = ((TLRPC.TL_messages_getMaskStickers) req).hash = force ? 0 : loadHash[type];
-            }
+            }*/
             ConnectionsManager.getInstance().sendRequest(req, new RequestDelegate() {
                 @Override
                 public void run(final TLObject response, final TLRPC.TL_error error) {
diff --git a/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java b/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java
index 337cc3915..4adc66a7e 100644
--- a/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java
+++ b/TMessagesProj/src/main/java/org/atomgram/ui/Components/PhotoPaintView.java
@@ -896,7 +896,7 @@ public void onTypeChanged() {
     private void updateStickersTitle() {
         if (stickersView == null || stickersView.getVisibility() != VISIBLE) {
             return;
-        }
+        }/*
         switch (stickersView.getCurrentType()) {
             case StickersQuery.TYPE_IMAGE:
                 actionBar.setTitle(LocaleController.getString("PaintStickers", R.string.PaintStickers));
@@ -904,7 +904,9 @@ private void updateStickersTitle() {
             case StickersQuery.TYPE_MASK:
                 actionBar.setTitle(LocaleController.getString("Masks", R.string.Masks));
                 break;
-        }
+        }*/
+        actionBar.setTitle("Stickers");
+        //actionBar.setTitle(LocaleController.getString("PaintStickers", R.string.PaintStickers));
     }
 
     private void closeStickersView() {
diff --git a/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java
index ef4233aae..eb52854c9 100644
--- a/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/atomgram/ui/PhotoViewer.java
@@ -2252,7 +2252,7 @@ public void onDismiss(DialogInterface dialog) {
             FileLog.e("tmessages", e);
         }
     }
-
+    //
     private void applyCurrentEditMode() {
         Bitmap bitmap = null;
         ArrayList<TLRPC.InputDocument> stickers = null;
@@ -2262,7 +2262,7 @@ private void applyCurrentEditMode() {
             bitmap = photoFilterView.getBitmap();
         } else if (currentEditMode == 3) {
             bitmap = photoPaintView.getBitmap();
-            stickers = photoPaintView.getMasks();
+            //stickers = photoPaintView.getMasks();
         }
         if (bitmap != null) {
             TLRPC.PhotoSize size = ImageLoader.scaleAndSaveImage(bitmap, AndroidUtilities.getPhotoSize(), AndroidUtilities.getPhotoSize(), 80, false, 101, 101);
diff --git a/gradle.properties b/gradle.properties
index 08f287cfb..8ee78a110 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -6,7 +6,7 @@
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
 # Default value: -Xmx10248m -XX:MaxPermSize=256m
-# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
 #
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
@@ -17,3 +17,4 @@ RELEASE_KEY_PASSWORD=password
 RELEASE_KEY_ALIAS=alias
 RELEASE_STORE_PASSWORD=password
 android.useDeprecatedNdk=true
+# org.gradle.jvmargs=-Xmx2048M
\ No newline at end of file
