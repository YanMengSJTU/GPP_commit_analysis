diff --git a/SDMessagesProj/build.gradle b/SDMessagesProj/build.gradle
index 448acca31..e890cab68 100644
--- a/SDMessagesProj/build.gradle
+++ b/SDMessagesProj/build.gradle
@@ -68,7 +68,12 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 821
+    defaultConfig {
+        versionCode = 821
+        ndk {
+            moduleName "YourModuleName"
+        }
+    }
 
     sourceSets.main {
         jniLibs.srcDir 'libs'
@@ -87,6 +92,33 @@ android {
         manifest.srcFile 'config/foss/AndroidManifest.xml'
     }
 
+    sourceSets.main {
+        jni.srcDirs = [] // This prevents the auto generation of Android.mk
+        jniLibs.srcDir 'jniLibs' // This is necessary for precompiled libraries
+    }
+
+    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
+        def ndkDir = android.ndkDirectory
+        commandLine "$ndkDir/ndk-build",
+                '-C', file('jni').absolutePath, // relative path to jni source
+                '-j', Runtime.runtime.availableProcessors(),
+                'all',
+                'NDK_DEBUG=1'
+    }
+
+    task cleanNative(type: Exec, description: 'Clean JNI object files') {
+        def ndkDir = android.ndkDirectory
+        commandLine "$ndkDir/ndk-build",
+                '-C', file('jni').absolutePath, // relative path to jni source
+                'clean'
+    }
+
+    clean.dependsOn 'cleanNative'
+
+    tasks.withType(JavaCompile) {
+        compileTask -> compileTask.dependsOn buildNative
+    }
+
     productFlavors {
         x86 {
             ndk {
diff --git a/SDMessagesProj/jni/Android.mk b/SDMessagesProj/jni/Android.mk
index bbcdfab94..6474b4479 100755
--- a/SDMessagesProj/jni/Android.mk
+++ b/SDMessagesProj/jni/Android.mk
@@ -112,7 +112,7 @@ LOCAL_CPPFLAGS := -Wall -std=c++11 -DANDROID -frtti -DHAVE_PTHREAD -finline-func
 LOCAL_C_INCLUDES += ./boringssl/include/
 LOCAL_ARM_MODE := arm
 LOCAL_MODULE := tgnet
-LOCAL_STATIC_LIBRARIES := crypto
+LOCAL_WHOLE_STATIC_LIBRARIES := crypto
 
 LOCAL_SRC_FILES := \
 ./tgnet/BuffersStorage.cpp \
@@ -139,7 +139,7 @@ include $(CLEAR_VARS)
 LOCAL_CFLAGS := -Wall -DANDROID -DHAVE_MALLOC_H -DHAVE_PTHREAD -DWEBP_USE_THREAD -finline-functions -ffast-math -ffunction-sections -fdata-sections -Os
 LOCAL_C_INCLUDES += ./libwebp/src
 LOCAL_ARM_MODE := arm
-LOCAL_STATIC_LIBRARIES := cpufeatures
+LOCAL_WHOLE_STATIC_LIBRARIES := cpufeatures
 LOCAL_MODULE := webp
 
 ifneq ($(findstring armeabi-v7a, $(TARGET_ARCH_ABI)),)
@@ -241,7 +241,7 @@ LOCAL_CFLAGS 	+= -Drestrict='' -D__EMX__ -DOPUS_BUILD -DFIXED_POINT -DUSE_ALLOCA
 LOCAL_CFLAGS 	+= -DANDROID_NDK -DDISABLE_IMPORTGL -fno-strict-aliasing -fprefetch-loop-arrays -DAVOID_TABLES -DANDROID_TILE_BASED_DECODE -DANDROID_ARMV6_IDCT -ffast-math -D__STDC_CONSTANT_MACROS
 LOCAL_CPPFLAGS 	:= -DBSD=1 -ffast-math -Os -funroll-loops -std=c++11
 LOCAL_LDLIBS 	:= -ljnigraphics -llog -lz -latomic
-LOCAL_STATIC_LIBRARIES := webp sqlite tgnet breakpad avformat avcodec avutil
+LOCAL_WHOLE_STATIC_LIBRARIES := webp sqlite tgnet breakpad avformat avcodec avutil
 
 LOCAL_SRC_FILES     := \
 ./opus/src/opus.c \
diff --git a/SDMessagesProj/jni/sqlite.c b/SDMessagesProj/jni/sqlite.c
deleted file mode 100755
index d7f61749a..000000000
--- a/SDMessagesProj/jni/sqlite.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "sqlite/sqlite3.h"
-#include "sqlite.h"
-
-void throw_sqlite3_exception(JNIEnv *env, sqlite3 *handle, int errcode) {
-	if (SQLITE_OK == errcode) {
-		errcode = sqlite3_errcode(handle);
-	}
-	const char *errmsg = sqlite3_errmsg(handle);
-	jclass exClass = (*env)->FindClass(env, "com/sirisdevelopment/telegram/SQLite/SQLiteException");
-	(*env)->ThrowNew(env, exClass, errmsg);
-}
diff --git a/SDMessagesProj/jni/sqlite.h b/SDMessagesProj/jni/sqlite.h
deleted file mode 100755
index af19fcb85..000000000
--- a/SDMessagesProj/jni/sqlite.h
+++ /dev/null
@@ -1,10 +0,0 @@
-#ifndef sqlite_h
-#define sqlite_h
-
-#include <jni.h>
-#include "sqlite/sqlite3.h"
-
-void throw_sqlite3_exception(JNIEnv* env, sqlite3 *handle, int errcode);
-jint sqliteOnJNILoad(JavaVM *vm, void *reserved, JNIEnv *env);
-
-#endif
diff --git a/SDMessagesProj/jni/sqlite/sqlite3.c b/SDMessagesProj/jni/sqlite/sqlite3.c
index e19867890..94f63cd2d 100644
--- a/SDMessagesProj/jni/sqlite/sqlite3.c
+++ b/SDMessagesProj/jni/sqlite/sqlite3.c
@@ -196839,4 +196839,4 @@ static int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){
     
 #endif /* !defined(SQLITE_CORE) || defined(SQLITE_ENABLE_FTS5) */
 
-/************** End of fts5.c ************************************************/
+/************** End of fts5.c ************************************************/
\ No newline at end of file
diff --git a/SDMessagesProj/jni/sqlite/sqlite3.h b/SDMessagesProj/jni/sqlite/sqlite3.h
index 313b5ec3c..bf00ec3ce 100644
--- a/SDMessagesProj/jni/sqlite/sqlite3.h
+++ b/SDMessagesProj/jni/sqlite/sqlite3.h
@@ -10185,4 +10185,4 @@ struct fts5_api {
 #endif /* _FTS5_H */
 
 
-/******** End of fts5.h *********/
+/******** End of fts5.h *********/
\ No newline at end of file
diff --git a/SDMessagesProj/jni/sqlite_cursor.c b/SDMessagesProj/jni/sqlite_cursor.c
deleted file mode 100755
index fc100d654..000000000
--- a/SDMessagesProj/jni/sqlite_cursor.c
+++ /dev/null
@@ -1,79 +0,0 @@
-#include "sqlite.h"
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnType(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	return sqlite3_column_type(handle, columnIndex);
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnIsNull(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	int valType = sqlite3_column_type(handle, columnIndex);
-	return SQLITE_NULL == valType;
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnIntValue(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	int valType = sqlite3_column_type(handle, columnIndex);
-	if (SQLITE_NULL == valType) {
-		return 0;
-	}
-	return sqlite3_column_int(handle, columnIndex);
-}
-
-long long Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnLongValue(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	int valType = sqlite3_column_type(handle, columnIndex);
-	if (SQLITE_NULL == valType) {
-		return 0;
-	}
-	return sqlite3_column_int64(handle, columnIndex);
-}
-
-double Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnDoubleValue(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	int valType = sqlite3_column_type(handle, columnIndex);
-	if (SQLITE_NULL == valType) {
-		return 0;
-	}
-	return sqlite3_column_double(handle, columnIndex);
-}
-
-jstring Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnStringValue(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	const char *str = sqlite3_column_text(handle, columnIndex);
-	if (str != 0) {
-		return (*env)->NewStringUTF(env, str);
-	}
-	return 0;
-}
-
-jbyteArray Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnByteArrayValue(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-    sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	void *buf = sqlite3_column_blob(handle, columnIndex);
-	int length = sqlite3_column_bytes(handle, columnIndex);
-	if (buf != 0 && length > 0) {
-		jbyteArray result = (*env)->NewByteArray(env, length);
-        (*env)->SetByteArrayRegion(env, result, 0, length, buf);
-        return result;
-	}
-	return 0;
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnByteArrayLength(JNIEnv *env, jobject object, int statementHandle, int columnIndex) {
-	return sqlite3_column_bytes((sqlite3_stmt *)statementHandle, columnIndex);
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLiteCursor_columnByteBufferValue(JNIEnv *env, jobject object, int statementHandle, int columnIndex, jobject buffer) {
-    if (!buffer) {
-        return 0;
-    }
-	sqlite3_stmt *handle = (sqlite3_stmt *)statementHandle;
-	void *buf = sqlite3_column_blob(handle, columnIndex);
-	int length = sqlite3_column_bytes(handle, columnIndex);
-	if (buf != 0 && length > 0) {
-        jbyte *byteBuff = (*env)->GetDirectBufferAddress(env, buffer);
-        memcpy(byteBuff, buf, length);
-        return length;
-	}
-	return 0;
-}
diff --git a/SDMessagesProj/jni/sqlite_database.c b/SDMessagesProj/jni/sqlite_database.c
deleted file mode 100755
index 63b719a15..000000000
--- a/SDMessagesProj/jni/sqlite_database.c
+++ /dev/null
@@ -1,42 +0,0 @@
-#include "sqlite.h"
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLiteDatabase_closedb(JNIEnv *env, jobject object, int sqliteHandle) {
-	sqlite3 *handle = (sqlite3 *)sqliteHandle;
-	int err = sqlite3_close(handle);
-	if (SQLITE_OK != err) {
-		throw_sqlite3_exception(env, handle, err);
-	}
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLiteDatabase_beginTransaction(JNIEnv *env, jobject object, int sqliteHandle) {
-    sqlite3 *handle = (sqlite3 *)sqliteHandle;
-    sqlite3_exec(handle, "BEGIN", 0, 0, 0);
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLiteDatabase_commitTransaction(JNIEnv *env, jobject object, int sqliteHandle) {
-    sqlite3 *handle = (sqlite3 *)sqliteHandle;
-    sqlite3_exec(handle, "COMMIT", 0, 0, 0);
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLiteDatabase_opendb(JNIEnv *env, jobject object, jstring fileName, jstring tempDir) {
-    char const *fileNameStr = (*env)->GetStringUTFChars(env, fileName, 0);
-    char const *tempDirStr = (*env)->GetStringUTFChars(env, tempDir, 0);
-    
-    if (sqlite3_temp_directory != 0) {
-        sqlite3_free(sqlite3_temp_directory);
-    }
-    sqlite3_temp_directory = sqlite3_mprintf("%s", tempDirStr);
-    
-    sqlite3 *handle = 0;
-    int err = sqlite3_open(fileNameStr, &handle);
-    if (SQLITE_OK != err) {
-    	throw_sqlite3_exception(env, handle, err);
-    }
-    if (fileNameStr != 0) {
-        (*env)->ReleaseStringUTFChars(env, fileName, fileNameStr);
-    }
-    if (tempDirStr != 0) {
-        (*env)->ReleaseStringUTFChars(env, tempDir, tempDirStr);
-    }
-    return (int)handle;
-}
diff --git a/SDMessagesProj/jni/sqlite_statement.c b/SDMessagesProj/jni/sqlite_statement.c
deleted file mode 100755
index 6208e5f54..000000000
--- a/SDMessagesProj/jni/sqlite_statement.c
+++ /dev/null
@@ -1,120 +0,0 @@
-#include "sqlite.h"
-
-jfieldID queryArgsCountField;
-
-jint sqliteOnJNILoad(JavaVM *vm, void *reserved, JNIEnv *env) {
-	jclass class = (*env)->FindClass(env, "com/sirisdevelopment/telegram/SQLite/SQLitePreparedStatement");
-	queryArgsCountField = (*env)->GetFieldID(env, class, "queryArgsCount", "I");
-	return JNI_VERSION_1_6;
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_step(JNIEnv *env, jobject object, int statementHandle) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-    
-    int errcode = sqlite3_step(handle);
-    if (errcode == SQLITE_ROW)  {
-        return 0;
-    } else if(errcode == SQLITE_DONE) {
-        return 1;
-    }  else if(errcode == SQLITE_BUSY) {
-        return -1;
-    }
-	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-}
-
-int Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_prepare(JNIEnv *env, jobject object, int sqliteHandle, jstring sql) {
-	sqlite3 *handle = (sqlite3 *) sqliteHandle;
-
-    char const *sqlStr = (*env)->GetStringUTFChars(env, sql, 0);
-
-    sqlite3_stmt *stmt_handle;
-
-    int errcode = sqlite3_prepare_v2(handle, sqlStr, -1, &stmt_handle, 0);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, handle, errcode);
-    } else {
-    	int argsCount = sqlite3_bind_parameter_count(stmt_handle);
-    	(*env)->SetIntField(env, object, queryArgsCountField, argsCount);
-    }
-
-    if (sqlStr != 0) {
-        (*env)->ReleaseStringUTFChars(env, sql, sqlStr);
-    }
-
-    return (int) stmt_handle;
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_reset(JNIEnv *env, jobject object, int statementHandle) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-
-	int errcode = sqlite3_reset(handle);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_finalize(JNIEnv *env, jobject object, int statementHandle) {
-    sqlite3_finalize((sqlite3_stmt *) statementHandle);
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_bindByteBuffer(JNIEnv *env, jobject object, int statementHandle, int index, jobject value, int length) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-    jbyte *buf = (*env)->GetDirectBufferAddress(env, value);
-    
-	int errcode = sqlite3_bind_blob(handle, index, buf, length, SQLITE_STATIC);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_bindString(JNIEnv *env, jobject object, int statementHandle, int index, jstring value) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-
-	char const *valueStr = (*env)->GetStringUTFChars(env, value, 0);
-
-	int errcode = sqlite3_bind_text(handle, index, valueStr, -1, SQLITE_TRANSIENT);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-
-	if (valueStr != 0) {
-        (*env)->ReleaseStringUTFChars(env, value, valueStr);
-    }
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_bindInt(JNIEnv *env, jobject object, int statementHandle, int index, int value) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-
-	int errcode = sqlite3_bind_int(handle, index, value);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_bindLong(JNIEnv *env, jobject object, int statementHandle, int index, long long value) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-    
-	int errcode = sqlite3_bind_int64(handle, index, value);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_bindDouble(JNIEnv *env, jobject object, int statementHandle, int index, double value) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-
-	int errcode = sqlite3_bind_double(handle, index, value);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-}
-
-void Java_com_sirisdevelopment_telegram_SQLite_SQLitePreparedStatement_bindNull(JNIEnv *env, jobject object, int statementHandle, int index) {
-	sqlite3_stmt *handle = (sqlite3_stmt *) statementHandle;
-
-	int errcode = sqlite3_bind_null(handle, index);
-    if (SQLITE_OK != errcode) {
-    	throw_sqlite3_exception(env, sqlite3_db_handle(handle), errcode);
-    }
-}
-
diff --git a/SDMessagesProj/libs/armeabi-v7a/gdb.setup b/SDMessagesProj/libs/armeabi-v7a/gdb.setup
new file mode 100644
index 000000000..e02a5eb81
--- /dev/null
+++ b/SDMessagesProj/libs/armeabi-v7a/gdb.setup
@@ -0,0 +1,2 @@
+set solib-search-path /spadev/studio/Telegram/SDMessagesProj/obj/local/armeabi-v7a
+directory /Android/adt-bundle-mac/sdk/ndk-bundle/platforms/android-9/arch-arm/usr/include /spadev/studio/Telegram/SDMessagesProj/jni ./breakpad/common/android/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/include/backward /Android/adt-bundle-mac/sdk/ndk-bundle/sources/android/cpufeatures ./boringssl/include/ ./opus/include ./opus/silk ./opus/silk/fixed ./opus/celt ./opus/opusfile ./libyuv/include ./ffmpeg/include ./libwebp/src
diff --git a/SDMessagesProj/libs/armeabi-v7a/gdbserver b/SDMessagesProj/libs/armeabi-v7a/gdbserver
new file mode 100755
index 000000000..8a1db5b8c
Binary files /dev/null and b/SDMessagesProj/libs/armeabi-v7a/gdbserver differ
diff --git a/SDMessagesProj/libs/armeabi-v7a/libtmessages.22.so b/SDMessagesProj/libs/armeabi-v7a/libtmessages.22.so
new file mode 100755
index 000000000..a3fcbc6d4
Binary files /dev/null and b/SDMessagesProj/libs/armeabi-v7a/libtmessages.22.so differ
diff --git a/SDMessagesProj/libs/armeabi/gdb.setup b/SDMessagesProj/libs/armeabi/gdb.setup
new file mode 100644
index 000000000..603871258
--- /dev/null
+++ b/SDMessagesProj/libs/armeabi/gdb.setup
@@ -0,0 +1,2 @@
+set solib-search-path /spadev/studio/Telegram/SDMessagesProj/obj/local/armeabi
+directory /Android/adt-bundle-mac/sdk/ndk-bundle/platforms/android-9/arch-arm/usr/include /spadev/studio/Telegram/SDMessagesProj/jni ./breakpad/common/android/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/include/backward /Android/adt-bundle-mac/sdk/ndk-bundle/sources/android/cpufeatures ./boringssl/include/ ./opus/include ./opus/silk ./opus/silk/fixed ./opus/celt ./opus/opusfile ./libyuv/include ./ffmpeg/include ./libwebp/src
diff --git a/SDMessagesProj/libs/armeabi/gdbserver b/SDMessagesProj/libs/armeabi/gdbserver
new file mode 100755
index 000000000..8a1db5b8c
Binary files /dev/null and b/SDMessagesProj/libs/armeabi/gdbserver differ
diff --git a/SDMessagesProj/libs/armeabi/libtmessages.22.so b/SDMessagesProj/libs/armeabi/libtmessages.22.so
new file mode 100755
index 000000000..01feb4cce
Binary files /dev/null and b/SDMessagesProj/libs/armeabi/libtmessages.22.so differ
diff --git a/SDMessagesProj/libs/x86/gdb.setup b/SDMessagesProj/libs/x86/gdb.setup
new file mode 100644
index 000000000..cad66a5b9
--- /dev/null
+++ b/SDMessagesProj/libs/x86/gdb.setup
@@ -0,0 +1,2 @@
+set solib-search-path /spadev/studio/Telegram/SDMessagesProj/obj/local/x86
+directory /Android/adt-bundle-mac/sdk/ndk-bundle/platforms/android-9/arch-x86/usr/include /spadev/studio/Telegram/SDMessagesProj/jni ./breakpad/common/android/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86/include /Android/adt-bundle-mac/sdk/ndk-bundle/sources/cxx-stl/gnu-libstdc++/4.9/include/backward /Android/adt-bundle-mac/sdk/ndk-bundle/sources/android/cpufeatures ./boringssl/include/ ./opus/include ./opus/silk ./opus/silk/fixed ./opus/celt ./opus/opusfile ./libyuv/include ./ffmpeg/include ./libwebp/src
diff --git a/SDMessagesProj/libs/x86/gdbserver b/SDMessagesProj/libs/x86/gdbserver
new file mode 100755
index 000000000..3bbce97fa
Binary files /dev/null and b/SDMessagesProj/libs/x86/gdbserver differ
diff --git a/SDMessagesProj/libs/x86/libtmessages.22.so b/SDMessagesProj/libs/x86/libtmessages.22.so
new file mode 100755
index 000000000..b6c97e5c3
Binary files /dev/null and b/SDMessagesProj/libs/x86/libtmessages.22.so differ
