diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 9c5789695..9129171e8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -924,7 +924,7 @@ public void run() {
                             }
                         };
                         AndroidUtilities.runOnUIThread(waitingForKeyboardCloseRunnable, 200);
-                    } else if (fragment.needDelayOpenAnimation()) {
+                    } else if (fragment.getOpenAnimationDelay() > 0) {
                         delayedOpenAnimationRunnable = new Runnable() {
                             @Override
                             public void run() {
@@ -935,7 +935,8 @@ public void run() {
                                 startLayoutAnimation(true, true, preview);
                             }
                         };
-                        AndroidUtilities.runOnUIThread(delayedOpenAnimationRunnable, 200);
+                        AndroidUtilities.runOnUIThread(delayedOpenAnimationRunnable,
+                                fragment.getOpenAnimationDelay());
                     } else {
                         startLayoutAnimation(true, true, preview);
                     }
@@ -1496,9 +1497,7 @@ public void rebuildAllFragmentViews(boolean last, boolean showLastAfter) {
             return;
         }
         int size = fragmentsStack.size();
-        if (!last) {
-            size--;
-        }
+        if (!last) size--;
         if (inPreviewMode) {
             size--;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 152596220..cc9c2d5aa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -15,15 +15,12 @@
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
-import android.os.Handler;
 import android.text.TextUtils;
 import android.view.Menu;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.accessibility.AccessibilityManager;
 
-import androidx.core.util.Consumer;
-
 import org.telegram.messenger.AccountInstance;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ContactsController;
@@ -54,6 +51,7 @@
     protected Bundle arguments;
     protected boolean swipeBackEnabled = true;
     protected boolean hasOwnBackground = false;
+    protected int openAnimationDelay;
 
     private final List<Runnable> fullyVisibleActions = new ArrayList<>();
 
@@ -231,8 +229,12 @@ public void onFragmentDestroy() {
         }
     }
 
-    public boolean needDelayOpenAnimation() {
-        return false;
+    public int getOpenAnimationDelay() {
+        return openAnimationDelay;
+    }
+
+    public void setOpenAnimationDelay(int openAnimationDelay) {
+        this.openAnimationDelay = openAnimationDelay;
     }
 
     public void onResume() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java
index 042dc9470..accd2d4e7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java
@@ -23,6 +23,9 @@
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
@@ -51,9 +54,6 @@
 import java.util.Iterator;
 import java.util.List;
 
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
 public class CallLogActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
 
 	private ListAdapter listViewAdapter;
@@ -362,54 +362,55 @@ private void getCalls(int max_id, final int count) {
 		req.filter = new TLRPC.TL_inputMessagesFilterPhoneCalls();
 		req.q = "";
 		req.offset_id = max_id;
-		int reqId = ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> {
-			if (error == null) {
-				SparseArray<TLRPC.User> users = new SparseArray<>();
-				TLRPC.messages_Messages msgs = (TLRPC.messages_Messages) response;
-				endReached = msgs.messages.isEmpty();
-				for (int a = 0; a < msgs.users.size(); a++) {
-					TLRPC.User user = msgs.users.get(a);
-					users.put(user.id, user);
-				}
-				CallLogRow currentRow = calls.size() > 0 ? calls.get(calls.size() - 1) : null;
-				for (int a = 0; a < msgs.messages.size(); a++) {
-					TLRPC.Message msg = msgs.messages.get(a);
-					if (msg.action == null || msg.action instanceof TLRPC.TL_messageActionHistoryClear) {
-						continue;
-					}
-					int callType = msg.from_id == UserConfig.getInstance(currentAccount).getClientUserId() ? TYPE_OUT : TYPE_IN;
-					TLRPC.PhoneCallDiscardReason reason = msg.action.reason;
-					if (callType == TYPE_IN && (reason instanceof TLRPC.TL_phoneCallDiscardReasonMissed || reason instanceof TLRPC.TL_phoneCallDiscardReasonBusy)) {
-						callType = TYPE_MISSED;
-					}
-					int userID = msg.from_id == UserConfig.getInstance(currentAccount).getClientUserId() ? msg.to_id.user_id : msg.from_id;
-					if (currentRow == null || currentRow.user.id != userID || currentRow.type != callType) {
-						if (currentRow != null && !calls.contains(currentRow)) {
-							calls.add(currentRow);
-						}
-						CallLogRow row = new CallLogRow();
-						row.calls = new ArrayList<>();
-						row.user = users.get(userID);
-						row.type = callType;
-						currentRow = row;
-					}
-					currentRow.calls.add(msg);
-				}
-				if (currentRow != null && currentRow.calls.size() > 0 && !calls.contains(currentRow)) {
-					calls.add(currentRow);
-				}
-			} else {
-				endReached = true;
-			}
-			loading = false;
-			firstLoaded = true;
-			if (emptyView != null) {
-				emptyView.showTextView();
-			}
-			if (listViewAdapter != null) {
-				listViewAdapter.notifyDataSetChanged();
-			}
-		}), ConnectionsManager.RequestFlagFailOnServerErrors);
+        int reqId = ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) ->
+            AndroidUtilities.runOnUIThread(() -> doWhenFullyVisible(() -> {
+                if (error == null) {
+                    SparseArray<TLRPC.User> users = new SparseArray<>();
+                    TLRPC.messages_Messages msgs = (TLRPC.messages_Messages) response;
+                    endReached = msgs.messages.isEmpty();
+                    for (int a = 0; a < msgs.users.size(); a++) {
+                        TLRPC.User user = msgs.users.get(a);
+                        users.put(user.id, user);
+                    }
+                    CallLogRow currentRow = calls.size() > 0 ? calls.get(calls.size() - 1) : null;
+                    for (int a = 0; a < msgs.messages.size(); a++) {
+                        TLRPC.Message msg = msgs.messages.get(a);
+                        if (msg.action == null || msg.action instanceof TLRPC.TL_messageActionHistoryClear) {
+                            continue;
+                        }
+                        int callType = msg.from_id == UserConfig.getInstance(currentAccount).getClientUserId() ? TYPE_OUT : TYPE_IN;
+                        TLRPC.PhoneCallDiscardReason reason = msg.action.reason;
+                        if (callType == TYPE_IN && (reason instanceof TLRPC.TL_phoneCallDiscardReasonMissed || reason instanceof TLRPC.TL_phoneCallDiscardReasonBusy)) {
+                            callType = TYPE_MISSED;
+                        }
+                        int userID = msg.from_id == UserConfig.getInstance(currentAccount).getClientUserId() ? msg.to_id.user_id : msg.from_id;
+                        if (currentRow == null || currentRow.user.id != userID || currentRow.type != callType) {
+                            if (currentRow != null && !calls.contains(currentRow)) {
+                                calls.add(currentRow);
+                            }
+                            CallLogRow row = new CallLogRow();
+                            row.calls = new ArrayList<>();
+                            row.user = users.get(userID);
+                            row.type = callType;
+                            currentRow = row;
+                        }
+                        currentRow.calls.add(msg);
+                    }
+                    if (currentRow != null && currentRow.calls.size() > 0 && !calls.contains(currentRow)) {
+                        calls.add(currentRow);
+                    }
+                } else {
+                    endReached = true;
+                }
+                loading = false;
+                firstLoaded = true;
+                if (emptyView != null) {
+                    emptyView.showTextView();
+                }
+                if (listViewAdapter != null) {
+                    listViewAdapter.notifyDataSetChanged();
+                }
+            })), ConnectionsManager.RequestFlagFailOnServerErrors);
 		ConnectionsManager.getInstance(currentAccount).bindRequestToGuid(reqId, classGuid);
 	}
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 1407ed08f..23e62fe15 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -10573,8 +10573,8 @@ private void updateSearchButtons(int mask, int num, int count) {
     }
 
     @Override
-    public boolean needDelayOpenAnimation() {
-        return firstLoading;
+    public int getOpenAnimationDelay() {
+        return Math.max(firstLoading ? 200 : 0, openAnimationDelay);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 7e473a77b..abeaca317 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -432,7 +432,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
                     Browser.openUrl(LaunchActivity.this, LocaleController.getString("TelegramFaqUrl", R.string.TelegramFaqUrl));
                     drawerLayoutContainer.closeDrawer(false);
                 } else if (id == 10) {
-                    presentFragment(new CallLogActivity());
+                    presentFragmentWithOpenDelay(new CallLogActivity(), 150);
                     drawerLayoutContainer.closeDrawer(false);
                 } else if (id == 11) {
                     Bundle args = new Bundle();
@@ -592,6 +592,11 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
         MediaController.getInstance().setBaseActivity(this, true);
     }
 
+    private void presentFragmentWithOpenDelay(BaseFragment fragment, int openAnimationDelay) {
+        fragment.setOpenAnimationDelay(openAnimationDelay);
+        presentFragment(fragment);
+    }
+
     public void switchToAccount(int account, boolean removeAll) {
         if (account == UserConfig.selectedAccount) {
             return;
