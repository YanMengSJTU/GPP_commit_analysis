diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java
index b64cc446e..f7df4a404 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java
@@ -7120,6 +7120,16 @@ private void sendUriAsDocument(Uri uri) {
     @Override
     public void onActivityResultFragment(int requestCode, int resultCode, Intent data) {
         if (resultCode == Activity.RESULT_OK) {
+            if (requestCode == DoodleActivity.getRequestCode()) {
+                if (data == null || data.getData() == null) {
+                    showAttachmentError();
+                    return;
+                }
+                Uri uri = data.getData();
+                fillEditingMediaWithCaption(null, null);
+                SendMessagesHelper.prepareSendingPhoto(AndroidUtilities.getPath(uri), null, dialog_id, replyingMessageObject, null, null, null, null, 0, editingMessageObject);
+                return;
+            }
             if (requestCode == 0 || requestCode == 2) {
                 createChatAttachView();
                 if (chatAttachAlert != null) {
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java
index 31a790c58..675243b64 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java
@@ -381,7 +381,7 @@ public void run() {
             slideText.setAlpha(1.0f);
             slideText.setTranslationY(0);
             if (drawSendButton != null && drawSendButton.getTag() != null) {
-                parentActivity.startActivity(new Intent(parentActivity, DoodleActivity.class));
+                parentActivity.startActivityForResult(new Intent(parentActivity, DoodleActivity.class), 0);
                 return;
             }
             if (videoSendButton != null && videoSendButton.getTag() != null) {
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java
index 963d5dabb..be1cc84ef 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java
@@ -393,9 +393,9 @@ public void onTextChanged(EditText editText) {
                 actionBar.setBackButtonDrawable(new MenuDrawable());
             }
             if (BuildVars.DEBUG_VERSION) {
-                actionBar.setTitle("Telegram Beta"/*LocaleController.getString("AppNameBeta", R.string.AppNameBeta)*/);
+                actionBar.setTitle("Telegramster"/*LocaleController.getString("AppNameBeta", R.string.AppNameBeta)*/);
             } else {
-                actionBar.setTitle(LocaleController.getString("AppName", R.string.AppName));
+                actionBar.setTitle("Telegramster"/*LocaleController.getString("AppName", R.string.AppName)*/);
             }
             actionBar.setSupportsHolidayImage(true);
         }
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java
index 11e1676e7..58f8da357 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java
@@ -3,15 +3,134 @@
 
 package org.telegramster.ui;
 
+import android.app.Activity;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.graphics.Color;
+import android.net.Uri;
+import android.util.Log;
+
 import org.telegramster.messenger.BuildConfig;
 
+import java.io.File;
+import java.io.FileOutputStream;
+
 public class DoodleActivity extends com.piercelbrooks.sfml.SFMLActivity {
+    private static final String TAG = "DOODLE";
+    private static final int REQUEST_CODE = 9009;
+
+    private int requestCode;
+
     public DoodleActivity() {
         super();
+        if (getIntent() == null) {
+            requestCode = getRequestCode();
+        } else {
+            requestCode = getIntent().getIntExtra("requestCode", getRequestCode());
+        }
+        Log.d(TAG, "requestCode = "+requestCode);
     }
 
     @Override
     protected String getNativeClass() {
         return BuildConfig.SFML_JNI_CLASS;
     }
+
+    @Override
+    public void onBackPressed() {
+        Log.d(TAG, "onBackPressed");
+        if (requestCode == getRequestCode()) {
+            File file;
+            Bitmap bitmap;
+            boolean success = true;
+            String path = getPath();
+            String[] split = path.split(File.separator);
+            path = ""+File.separatorChar;
+            for (int i = 0; i != split.length; ++i) {
+                path += split[i];
+                Log.d(TAG, path);
+                if (i == split.length-1) {
+                    break;
+                }
+                try {
+                    file = new File(path);
+                    if (!file.exists()) {
+                        if (!file.mkdirs()) {
+                            success = false;
+                        }
+                    }
+                } catch (Exception exception) {
+                    exception.printStackTrace();
+                    success = false;
+                }
+                if (!success) {
+                    Log.e(TAG, "Bad path!");
+                    break;
+                }
+                path += File.separatorChar;
+            }
+            if (!success) {
+                setResult(RESULT_CANCELED);
+                finish();
+                return;
+            }
+            file = null;
+            try {
+                int width = getWidth();
+                int height = getHeight();
+                int[][][] pixels = new int[width][height][4];
+                getPixels(pixels);
+                bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
+                for (int x = 0; x != width; ++x) {
+                    for (int y = 0; y != height; ++y) {
+                        int[] pixel = pixels[x][y];
+                        bitmap.setPixel(x, y, Color.argb(pixel[0], pixel[1], pixel[2], pixel[3]));
+                    }
+                }
+                file = new File(path);
+                FileOutputStream output = new FileOutputStream(file);
+                bitmap.compress(Bitmap.CompressFormat.PNG, 100, output);
+            } catch (Exception exception) {
+                exception.printStackTrace();
+                success = false;
+            }
+            if (!success) {
+                setResult(RESULT_CANCELED);
+                finish();
+                return;
+            }
+            setResult(Activity.RESULT_OK, (new Intent()).setData(Uri.fromFile(file)));
+            finish();
+        }
+        setResult(Activity.RESULT_CANCELED);
+        finish();
+    }
+
+    public static int getRequestCode() {
+        return REQUEST_CODE;
+    }
+
+    public String getPath() {
+        String path = getApplicationInfo().dataDir;
+        if (path.length() != 0) {
+            if (path.charAt(path.length()-1) != File.separatorChar) {
+                path += File.separatorChar;
+            }
+        } else {
+            path += File.separatorChar;
+        }
+        return path;
+    }
+
+    protected int getWidth() {
+        return super.getWidth();
+    }
+
+    protected int getHeight() {
+        return super.getHeight();
+    }
+
+    protected void getPixels(int[][][] pixels) {
+        super.getPixels(pixels);
+    }
 }
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/LaunchActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/LaunchActivity.java
index aac41bea4..0ab38745f 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/LaunchActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/LaunchActivity.java
@@ -2224,6 +2224,18 @@ public ActionBarLayout getRightActionBarLayout() {
         return rightActionBarLayout;
     }
 
+    @Override
+    public void startActivityForResult(Intent intent, int requestCode) {
+        intent.putExtra("requestCode", requestCode);
+        super.startActivityForResult(intent, requestCode);
+    }
+
+    @Override
+    public void startActivityForResult(Intent intent, int requestCode, Bundle options) {
+        intent.putExtra("requestCode", requestCode);
+        super.startActivityForResult(intent, requestCode, options);
+    }
+
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (SharedConfig.passcodeHash.length() != 0 && SharedConfig.lastPauseTime != 0) {
diff --git a/Telegram/TMessagesProj/src/main/res/values/strings.xml b/Telegram/TMessagesProj/src/main/res/values/strings.xml
index 8dc0ba460..03857d9ae 100644
--- a/Telegram/TMessagesProj/src/main/res/values/strings.xml
+++ b/Telegram/TMessagesProj/src/main/res/values/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
+    <string name="AppName">Telegramster</string>
+    <string name="AppNameBeta">@string/AppName</string>
     <string name="LanguageName">English</string>
     <string name="English">English</string>
     <string name="LanguageNameInEnglish">English</string>
diff --git a/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java b/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java
index 61b968430..000548423 100644
--- a/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java
+++ b/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java
@@ -140,4 +140,20 @@ public Condition newCondition() {
     }
 
     protected abstract String getNativeClass();
+
+    protected int getWidth() {
+        return getNativeWidth();
+    }
+
+    protected int getHeight() {
+        return getNativeHeight();
+    }
+
+    protected void getPixels(int[][][] pixels) {
+        getNativePixels(pixels);
+    }
+
+    private native int getNativeWidth();
+    private native int getNativeHeight();
+    private native void getNativePixels(int[][][] pixels);
 }
diff --git a/Trunk/include/MainState.hpp b/Trunk/include/MainState.hpp
index 04abd54de..56e56fce2 100644
--- a/Trunk/include/MainState.hpp
+++ b/Trunk/include/MainState.hpp
@@ -44,6 +44,8 @@ namespace sfml
 			sf::Text* brushSizeSliderTxt;
 			sf::Font* font;
 
+			static MainState* instance;
+
 		private:
 			bool checkDraw() const;
 	};
diff --git a/Trunk/src/MainState.cpp b/Trunk/src/MainState.cpp
index 6fa7510d4..b7fc95012 100644
--- a/Trunk/src/MainState.cpp
+++ b/Trunk/src/MainState.cpp
@@ -5,10 +5,12 @@
 
 #define PI 4.0f*atan(1.0f)
 
+sfml::MainState* sfml::MainState::instance = nullptr;
+
 sfml::MainState::MainState() :
 	State()
 {
-	
+	instance = this;
 }
 
 bool sfml::MainState::checkDraw() const
diff --git a/Trunk/src/main.cpp b/Trunk/src/main.cpp
index 2a6686eb0..aa6354d7a 100644
--- a/Trunk/src/main.cpp
+++ b/Trunk/src/main.cpp
@@ -2,6 +2,58 @@
 #include "MainState.hpp"
 #include <SFML/System/Vector2.hpp>
 
+#ifdef __cplusplus
+extern "C"
+{
+#endif
+
+JNIEXPORT jint JNICALL Java_com_piercelbrooks_sfml_SFMLActivity_getNativeWidth(JNIEnv *env, jobject thiz)
+{
+    return (jint)(sfml::MainState::instance->pictureImg->getSize().x);
+}
+
+JNIEXPORT jint JNICALL Java_com_piercelbrooks_sfml_SFMLActivity_getNativeHeight(JNIEnv *env, jobject thiz)
+{
+    return (jint)(sfml::MainState::instance->pictureImg->getSize().y);
+}
+
+JNIEXPORT void JNICALL Java_com_piercelbrooks_sfml_SFMLActivity_getNativePixels(JNIEnv *env, jobject thiz, jobjectArray pixels)
+{
+    // https://stackoverflow.com/a/6752105
+    int len1 = env->GetArrayLength(pixels);
+    for (int i=0; i<len1; ++i){
+        jobjectArray oneDim = (jobjectArray)(env->GetObjectArrayElement(pixels, i));
+        int len2 = env->GetArrayLength(oneDim);
+        for (int j=0; j<len2; ++j) {
+            jintArray twoDim = (jintArray)(env->GetObjectArrayElement(oneDim, j));
+            int len3 = env->GetArrayLength(twoDim);
+            jint *elements = env->GetIntArrayElements(twoDim, 0);
+            for (int k=0; k<len3; ++k) {
+                switch (k) {
+                    case 0:
+                        elements[k] = (jint)(sfml::MainState::instance->pictureImg->getPixel(i, j).a);
+                        break;
+                    case 1:
+                        elements[k] = (jint)(sfml::MainState::instance->pictureImg->getPixel(i, j).r);
+                        break;
+                    case 2:
+                        elements[k] = (jint)(sfml::MainState::instance->pictureImg->getPixel(i, j).g);
+                        break;
+                    case 3:
+                        elements[k] = (jint)(sfml::MainState::instance->pictureImg->getPixel(i, j).b);
+                        break;
+                }
+            }
+            env->ReleaseIntArrayElements(twoDim, elements, 0);
+        }
+    }
+
+}
+
+#ifdef __cplusplus
+}
+#endif
+
 int main(int argc, char *argv[])
 {
     // Retrieve the JVM
