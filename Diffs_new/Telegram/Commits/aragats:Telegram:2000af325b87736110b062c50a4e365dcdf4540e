diff --git a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
index 828ad416b..da18be72e 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
@@ -8,6 +8,7 @@
 
 package org.telegram.android;
 
+import android.Manifest;
 import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.BroadcastReceiver;
@@ -15,6 +16,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
 import android.database.ContentObserver;
 import android.database.Cursor;
 import android.graphics.Bitmap;
@@ -43,6 +45,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.utils.CollectionUtils;
 import org.telegram.utils.Constants;
+import org.telegram.utils.Permissions;
 import org.telegram.utils.StringUtils;
 
 import java.io.File;
@@ -766,6 +769,11 @@ public boolean canSaveToGallery() {
     //TODO why it is static
     //TODO what is it guid. I need guid in postNotification. I should pass this parameter in args to say to which activiy I send the notification, because many activities could subscribe to the same notification, but not all of them must receive the response
     public static void loadGeoTaggedGalleryPhotos(final int guid, final boolean forceReSync) {
+        Activity activity = ApplicationLoader.parentActivity;
+        if (!Permissions.storagePermitted && activity != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && activity.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+            activity.requestPermissions(Permissions.STORAGE_PERMISSION_GROUP, Permissions.STORAGE_REQUEST);
+            return;
+        }
         if (!forceReSync && (getInstance().rTree != null || getInstance().isRTreeloaded())) {
             AndroidUtilities.runOnUIThread(new Runnable() {
                 @Override
@@ -847,7 +855,7 @@ public void run() {
 //                            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);
 //                        } else {
 ////            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);  //TODO hide progress view does not work !!!
-//                            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postRequestFinished);
+//                            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished);
 //                        }
 //
 //                    }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
index 3b8b6ba01..bfb241707 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
@@ -27,8 +27,8 @@
     public static final int switchToOnlineMode = totalEvents++;
     public static final int stopRefreshingView = totalEvents++;
     public static final int venuesNeedReload = totalEvents++;
-    public static final int postsNeedReload = totalEvents++;
-    public static final int postRequestFinished = totalEvents++;
+//    public static final int postsNeedReload = totalEvents++;
+    public static final int postsRequestFinished = totalEvents++;
     public static final int undefinedLocation = totalEvents++;
     public static final int locationServiceDisabled = totalEvents++;
     public static final int newPostSaved = totalEvents++;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 8b26be9a3..295c050d4 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -304,7 +304,6 @@ public void loadPosts(final String idOffset, final String nextFromOffset, final
                 break;
             case VK_NEWS_FEED:
                 loadVKNewsFeed(postRequest, reload);
-
                 break;
             case VK_PHOTO:
                 loadVKPhotos(postRequest, reload);
@@ -378,15 +377,16 @@ public void onResponse(Call<PostResponse> call, Response<PostResponse> response)
 
             @Override
             public void onFailure(Call<PostResponse> call, Throwable t) {
+//                java.net.SocketTimeoutException: failed to connect to /192.168.0.101 (port 8080) after 10000ms
                 removeCall(call);
-//                loadingPosts = false; // TODO false or true ??? if continue then true otherwise false. False if finish. true if goes to VK
-//                boolean withError = true;
-//                if (t != null && t.getMessage().equals("Cancelled")) {
-//                    withError = false;
-//                }
-//                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postRequestFinished, withError);
+                loadingPosts = false; // TODO false or true ??? if continue then true otherwise false. False if finish. true if goes to VK
+                boolean withError = true; // failed to connect to /192.168.0.101 (port 8080) after 10000ms
+                if (t != null && !StringUtils.isEmpty(t.getMessage()) && t.getMessage().equalsIgnoreCase(Constants.CANCELLED_HTTP_EXCEPTION_MSG)) {
+                    withError = false; // because we cancelled it manually.
+                }
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished, reload, withError);
 
-                loadVKPhotos(postRequest, reload);
+//                loadVKPhotos(postRequest, reload);
             }
 
         });
@@ -445,10 +445,10 @@ public void onFailure(Call<VKNewsFeedResponse> call, Throwable t) {
                 removeCall(call);
                 loadingPosts = false;
                 boolean withError = true;
-                if (t != null && t.getMessage().equals("Canceled")) {
+                if (t != null && !StringUtils.isEmpty(t.getMessage()) && t.getMessage().equalsIgnoreCase(Constants.CANCELLED_HTTP_EXCEPTION_MSG)) {
                     withError = false;
                 }
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postRequestFinished, withError);
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished, reload, withError);
             }
         });
         addCall(call);
@@ -487,10 +487,10 @@ public void onFailure(Call<VKPhotoResponse> call, Throwable t) {
                 removeCall(call);
                 loadingPosts = false;
                 boolean withError = true;
-                if (t != null && t.getMessage().equals("Canceled")) {
+                if (t != null && !StringUtils.isEmpty(t.getMessage()) && t.getMessage().equalsIgnoreCase(Constants.CANCELLED_HTTP_EXCEPTION_MSG)) {
                     withError = false;
                 }
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postRequestFinished, withError);
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished, reload, withError);
             }
         });
         addCall(call);
@@ -572,12 +572,14 @@ public void processLoadedPosts(PostResponse postResponse, boolean reload) {
 //        }
 
         //TODO notify Activity to run postsAdapter.notifyDataSetChanged();
-        if (!postResponse.getPosts().isEmpty() || reload) {
-            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload, reload);
-        } else {
-//            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);  //TODO hide progress view does not work !!!
-            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postRequestFinished);
-        }
+        NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished, reload, false);
+
+//        if (!postResponse.getPosts().isEmpty() || reload) {
+//            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload, reload);
+//        } else {
+////            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);  //TODO hide progress view does not work !!!
+//            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished);
+//        }
 
 
     }
@@ -650,7 +652,7 @@ public Post createPost(String dir, String photo, double latitude, double longitu
         post.setLocal(local);
         post.setId(photo);
         Coordinates coordinates = new Coordinates();
-        coordinates.setType("Point");
+        coordinates.setType(Constants.POINT);
         coordinates.setCoordinates(Arrays.asList(longitude, latitude));
         post.setCoordinates(coordinates);
         post.setText("");
diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index 63548a89c..a4d25c2d8 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -15,6 +15,7 @@
 
 import org.telegram.messenger.TLRPC;
 import org.telegram.utils.CollectionUtils;
+import org.telegram.utils.Constants;
 import org.telegram.utils.Permissions;
 import org.telegram.utils.StringUtils;
 
@@ -367,7 +368,7 @@ public static Coordinates convertLocationToCoordinates(Location location) {
         }
         Coordinates coordinates = new Coordinates();
         coordinates.setCoordinates(Arrays.asList(location.getLongitude(), location.getLatitude()));
-        coordinates.setType("Point");
+        coordinates.setType(Constants.POINT);
         return coordinates;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
index dbca36463..a1cbd0e4c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
@@ -15,9 +15,11 @@
 import org.telegram.android.LocaleController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.android.support.widget.RecyclerView;
+
 import ru.aragats.wgo.dto.Post;
 import ru.aragats.wgo.dto.PostResponse;
 import ru.aragats.wgo.rest.mock.PostServiceMock;
+
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.HashtagSearchCell;
 import org.telegram.ui.Cells.LoadingCell;
@@ -92,7 +94,7 @@ private void searchPostsInternal(final String query, final int offset, final int
         searchResult.addAll(response.getPosts());
         //TODO notify Activity to run postsAdapter.notifyDataSetChanged();
         if (!response.getPosts().isEmpty()) {
-            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished, true, false);
         }
 
 
@@ -171,7 +173,7 @@ public void searchPosts(final String query) {
         searchResult.addAll(response.getPosts());
         //TODO notify Activity to run postsAdapter.notifyDataSetChanged();
         if (!response.getPosts().isEmpty()) {
-            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsNeedReload);
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.postsRequestFinished, true, false);
         }
         if (delegate != null) {
             delegate.searchStateChanged(false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 8ecc44df2..b51ca89cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -313,6 +313,11 @@ public void onItemClick(final int id) {
                     }
                     finishFragment();
                 } else if (id == done_button) {
+                    Activity activity = getParentActivity();
+                    if (!Permissions.storagePermitted && activity != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && activity.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                        activity.requestPermissions(Permissions.STORAGE_PERMISSION_GROUP, Permissions.STORAGE_REQUEST);
+                        return;
+                    }
                     Post post = buildPost();
                     boolean valid = validatePost(post, false);
                     if (valid) {
@@ -1488,13 +1493,13 @@ private void openLocationChooser() {
             public void didSelectLocation(TLRPC.MessageMedia location) {
                 Coordinates coordinates = new Coordinates();
                 coordinates.setCoordinates(Arrays.asList(location.geo._long, location.geo.lat));
-                coordinates.setType("Point");
+                coordinates.setType(Constants.POINT);
 //                PostCreateActivity.this.userCoordinates = coordinates; // TODO I do not need to change userCoordinates.
                 Venue venue = new Venue();
                 if (location.geoPlace != null) {
                     Coordinates placeCoordinates = new Coordinates();
                     placeCoordinates.setCoordinates(Arrays.asList(location.geoPlace._long, location.geoPlace.lat));
-                    placeCoordinates.setType("Point");
+                    placeCoordinates.setType(Constants.POINT);
                     venue.setCoordinates(placeCoordinates);
                 } else {
                     venue.setCoordinates(coordinates);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 6da55d66e..0211bdc9e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -253,8 +253,7 @@ public boolean onFragmentCreate() {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.postsRefresh);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.undefinedLocation);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.locationServiceDisabled);
-            NotificationCenter.getInstance().addObserver(this, NotificationCenter.postRequestFinished);
-            NotificationCenter.getInstance().addObserver(this, NotificationCenter.postsNeedReload);
+            NotificationCenter.getInstance().addObserver(this, NotificationCenter.postsRequestFinished);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.emojiDidLoaded);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.updateInterfaces);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.locationPermissionGranted);
@@ -319,8 +318,7 @@ public void onFragmentDestroy() {
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.postsRefresh);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.undefinedLocation);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.locationServiceDisabled);
-            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.postRequestFinished);
-            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.postsNeedReload);
+            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.postsRequestFinished);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.emojiDidLoaded);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.updateInterfaces);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.locationPermissionGranted);
@@ -854,30 +852,24 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                 showDialog(builder.create());
             }
-        } else if (id == NotificationCenter.postRequestFinished) {
+        } else if (id == NotificationCenter.postsRequestFinished) {
+            boolean reloaded = false;
             boolean withError = false;
             if (args != null && args.length != 0) {
-                withError = (boolean) args[0];
+                reloaded = (boolean) args[0]; //reload is true.
+                if (args.length > 1) {
+                    withError = (boolean) args[1];
+                }
+            }
+            if (reloaded) {
+                layoutManager.scrollToPosition(0);
             }
             notifyDateSetChanged();
             updateViewLayers(withError);
             stopRefreshingProgressView();
             if (withError) {
-                Toast.makeText(((Context) getParentActivity()), "Load posts error", Toast.LENGTH_SHORT).show();
-            }
-        } else if (id == NotificationCenter.postsNeedReload) {
-//            hideProgressView();
-            boolean scrollToTop = false;
-            if (args != null && args.length != 0) {
-                scrollToTop = (boolean) args[0];
+                Toast.makeText(getParentActivity(), "Load posts error", Toast.LENGTH_SHORT).show(); // TODO localize
             }
-
-            if (scrollToTop) {
-                layoutManager.scrollToPosition(0);
-            }
-            notifyDateSetChanged();
-            updateViewLayers(false);
-            stopRefreshingProgressView();
         } else if (id == NotificationCenter.emojiDidLoaded) {
             if (postListView != null) {
                 updateVisibleRows(0);
diff --git a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
index 45ca1ff76..32a2f0cf9 100644
--- a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
+++ b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
@@ -89,4 +89,9 @@
 
     public static final String SIMPLE_DATE_FORMAT_PATTERN = "yyyy:MM:dd hh:mm:ss";
     public static final SimpleDateFormat SIMPLE_DATE_FORMAT = new SimpleDateFormat(SIMPLE_DATE_FORMAT_PATTERN, Locale.getDefault());
+
+
+    // TODO cancelled or cancelled ??? Check it.
+    public static final String CANCELLED_HTTP_EXCEPTION_MSG = "Canceled";
+    public static final String SOCKET_CLOSED_HTTP_EXCEPTION_MSG = "Socket closed";
 }
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java
index e1f9ae9b4..efe66a8df 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java
@@ -27,7 +27,7 @@ public Venue convertIntern(Geo source) {
         target.setCoordinates(coordinates);
         target.setName("");
         target.setAddress("");
-        coordinates.setType("Point");
+        coordinates.setType(Constants.POINT);
         String coordinatesStr = source.getCoordinates();
         if (!StringUtils.isEmpty(coordinatesStr)) {
             String[] coordinatesStrArr = coordinatesStr.trim().split("\\s+");
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
index d5f4c926d..3698bb21c 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
@@ -1,5 +1,6 @@
 package ru.aragats.wgo.converter.vk.photos;
 
+import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
 import java.util.ArrayList;
@@ -29,7 +30,7 @@ public Post convertIntern(PhotoItem source) {
         result.setOwnerId(source.getOwnerId());
         result.setCreatedDate(((long) source.getDate() * 1000));
         Coordinates coordinates = new Coordinates();
-        coordinates.setType("Point");
+        coordinates.setType(Constants.POINT);
         coordinates.setCoordinates(Arrays.asList(source.getLong(), source.getLat()));
         result.setCoordinates(coordinates);
         result.setText(source.getText());
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java
index 2df9ce684..86971eeb3 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java
@@ -1,5 +1,7 @@
 package ru.aragats.wgo.rest.mock;
 
+import org.telegram.utils.Constants;
+
 import ru.aragats.wgo.dto.Coordinates;
 
 import java.util.ArrayList;
@@ -22,7 +24,7 @@
 
     public static Coordinates generateCoordinates() {
         Coordinates result = new Coordinates();
-        result.setType("Point");
+        result.setType(Constants.POINT);
         Random random = new Random();
         result.setCoordinates(Arrays.asList(180 * random.nextDouble(), 90 * random.nextDouble()));
         return result;
