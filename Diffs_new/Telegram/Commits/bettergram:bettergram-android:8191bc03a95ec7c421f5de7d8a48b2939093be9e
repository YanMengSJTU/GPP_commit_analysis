diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
index c570050f4..f5d59b1ce 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
@@ -1,12 +1,18 @@
 package io.bettergram.adapters;
 
+import static android.text.TextUtils.isEmpty;
+import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
+import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
+
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.graphics.Canvas;
 import android.graphics.Color;
+import android.graphics.Paint;
 import android.graphics.Typeface;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -25,7 +31,6 @@
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import com.sackcentury.shinebuttonlib.ShineButton;
-import com.squareup.picasso.Picasso;
 import io.bettergram.data.CryptoCurrencyInfo;
 import io.bettergram.data.CryptoCurrencyInfoResponse;
 import io.bettergram.data.CryptoCurrencyInfoResponse__JsonHelper;
@@ -38,15 +43,11 @@
 import io.bettergram.telegram.ui.Components.TabStrip.SlidingTabLayout;
 import io.bettergram.utils.Number;
 import io.bettergram.utils.SpanBuilder;
-
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 
-import static android.text.TextUtils.isEmpty;
-import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
-
 public class CryptoAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
     /**
@@ -77,7 +78,8 @@ public void onReceive(Context context, Intent intent) {
         public void run() {
             android.os.Process.setThreadPriority(android.os.Process.THREAD_PRIORITY_BACKGROUND);
             try {
-                CryptoCurrencyInfoResponse res = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(json);
+                CryptoCurrencyInfoResponse res = CryptoCurrencyInfoResponse__JsonHelper
+                        .parseFromJson(json);
                 AndroidUtilities.runOnUIThread(() -> setCryptoData(res));
             } catch (IOException e) {
                 e.printStackTrace();
@@ -85,7 +87,8 @@ public void run() {
         }
     }
 
-    class MainViewHolder extends RecyclerView.ViewHolder implements ShineButton.OnCheckedChangeListener {
+    class MainViewHolder extends RecyclerView.ViewHolder implements
+            ShineButton.OnCheckedChangeListener {
 
         ImageView imageCrypto;
         TextView textCryptoName, textCryptoPrice, textDayDelta;
@@ -124,7 +127,8 @@ public void onCheckedChanged(View view, boolean checked) {
             backup.addAll(data);
             favorites.clear();
             favorites.addAll(data);
-            for (Iterator<CryptoCurrencyInfo> iterator = favorites.iterator(); iterator.hasNext(); ) {
+            for (Iterator<CryptoCurrencyInfo> iterator = favorites.iterator();
+                    iterator.hasNext(); ) {
                 CryptoCurrencyInfo value = iterator.next();
                 if (!value.favorite) {
                     iterator.remove();
@@ -146,12 +150,14 @@ public void onCheckedChanged(View view, boolean checked) {
     }
 
     class TabsViewHolder extends RecyclerView.ViewHolder {
+
         public TabsViewHolder(View itemView) {
             super(itemView);
         }
     }
 
     class LabelViewHolder extends RecyclerView.ViewHolder {
+
         public LabelViewHolder(View itemView) {
             super(itemView);
         }
@@ -177,7 +183,8 @@ public void setCryptoData(CryptoCurrencyInfoResponse cryptoData) {
                 backup.addAll(data);
                 favorites.clear();
                 favorites.addAll(data);
-                for (Iterator<CryptoCurrencyInfo> iterator = favorites.iterator(); iterator.hasNext(); ) {
+                for (Iterator<CryptoCurrencyInfo> iterator = favorites.iterator();
+                        iterator.hasNext(); ) {
                     CryptoCurrencyInfo value = iterator.next();
                     if (!value.favorite) {
                         iterator.remove();
@@ -205,8 +212,10 @@ public int getItemViewType(int position) {
             case 1:
                 SlidingTabLayout tabLayout = new SlidingTabLayout(context);
                 tabLayout.setAdapter(new TabsPagerAdapter());
-                tabLayout.setDividerColors(context.getResources().getColor(android.R.color.transparent));
-                tabLayout.setSelectedIndicatorColors(context.getResources().getColor(R.color.actionBarDefault));
+                tabLayout.setDividerColors(
+                        context.getResources().getColor(android.R.color.transparent));
+                tabLayout.setSelectedIndicatorColors(
+                        context.getResources().getColor(R.color.actionBarDefault));
                 tabLayout.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
                     @Override
                     public void onPageSelected(int position) {
@@ -225,21 +234,18 @@ public void onPageSelected(int position) {
                         }
                     }
                 });
-                tabLayout.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
+                tabLayout.setLayoutParams(
+                        new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
+                                ViewGroup.LayoutParams.WRAP_CONTENT));
                 return new TabsViewHolder(tabLayout);
             case 2:
-                return new LabelViewHolder(inflater.inflate(R.layout.item_crypto_top, parent, false));
+                return new LabelViewHolder(
+                        inflater.inflate(R.layout.item_crypto_top, parent, false));
             case 3:
-                LinearLayout content = new LinearLayout(context);
-                content.setOrientation(LinearLayout.HORIZONTAL);
-                content.setWeightSum(1);
-                LinearLayout.MarginLayoutParams margin = LayoutHelper.createMargin(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT);
-                margin.topMargin = margin.bottomMargin = AndroidUtilities.dp(2);
-                content.setLayoutParams(margin);
-
                 LinearLayout container = new LinearLayout(context);
                 container.setOrientation(LinearLayout.HORIZONTAL);
-                container.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8));
+                container.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(8),
+                        AndroidUtilities.dp(8), AndroidUtilities.dp(8));
 
                 ShineButton star = new ShineButton(context);
                 star.setBtnColor(context.getResources().getColor(android.R.color.darker_gray));
@@ -248,11 +254,13 @@ public void onPageSelected(int position) {
                 star.setShineSize(AndroidUtilities.dp(14));
                 star.setShapeResource(R.raw.star);
                 star.setTag("star");
-                container.addView(star, LayoutHelper.createLinear(22, 22, Gravity.CENTER, 0, 0, 8, 0));
+                container.addView(star,
+                        LayoutHelper.createLinear(22, 22, Gravity.CENTER, 0, 0, 8, 0));
 
                 ImageView cryptoImage = new ImageView(context);
                 cryptoImage.setTag("imageCrypto");
-                container.addView(cryptoImage, LayoutHelper.createLinear(32, 32, Gravity.CENTER, 16, 0, 4, 0));
+                container.addView(cryptoImage,
+                        LayoutHelper.createLinear(32, 32, Gravity.CENTER, 16, 0, 4, 0));
 
                 TextView cryptoName = new TextView(context);
                 cryptoName.setTypeface(Typeface.DEFAULT_BOLD);
@@ -262,21 +270,49 @@ public void onPageSelected(int position) {
                 cryptoName.setGravity(Gravity.CENTER);
                 cryptoName.setEllipsize(TextUtils.TruncateAt.END);
                 cryptoName.setTag("textCryptoName");
-                container.addView(cryptoName, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER, 8, 0, 0, 0));
+                container.addView(cryptoName, LayoutHelper
+                        .createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT,
+                                Gravity.CENTER, 8, 0, 0, 0));
 
-                content.addView(container, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.5f));
+                final Paint divider_paint = new Paint();
+                divider_paint.setColor(Theme.getColor(Theme.key_crypto_dividerColor));
+                divider_paint.setStrokeWidth(1); // set stroke so you can actually see the lines
+
+                LinearLayout content = new LinearLayout(context) {
+                    @Override
+                    protected void onDraw(Canvas canvas) {
+                        super.onDraw(canvas);
+                        final int width = getMeasuredWidth();
+                        final int height = getMeasuredHeight();
+                        final float offset_y = height - 1;
+                        final float offset_x = cryptoName.getX();
+                        canvas.drawLine(offset_x, offset_y, width, offset_y, divider_paint);
+                    }
+                };
+                content.setWillNotDraw(false);
+                content.setOrientation(LinearLayout.HORIZONTAL);
+                content.setWeightSum(1);
+                LinearLayout.MarginLayoutParams margin = LayoutHelper
+                        .createMargin(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT);
+                margin.topMargin = margin.bottomMargin = AndroidUtilities.dp(2);
+                content.setLayoutParams(margin);
+                content.addView(container,
+                        LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.5f));
 
                 TextView cryptoPrice = new TextView(context);
                 cryptoPrice.setGravity(Gravity.CENTER);
                 cryptoPrice.setTextSize(14);
                 cryptoPrice.setTag("textCryptoPrice");
-                content.addView(cryptoPrice, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.25f, Gravity.CENTER));
+                content.addView(cryptoPrice, LayoutHelper
+                        .createLinear(0, LayoutHelper.WRAP_CONTENT, 0.25f, Gravity.CENTER));
 
                 TextView cryptoDelta = new TextView(context);
                 cryptoDelta.setTextSize(14);
                 cryptoDelta.setGravity(Gravity.CENTER | Gravity.END);
                 cryptoDelta.setTag("textDayDelta");
-                content.addView(cryptoDelta, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.25f, Gravity.CENTER, 0, 0, 8, 0));
+                content.addView(cryptoDelta, LayoutHelper
+                        .createLinear(0, LayoutHelper.WRAP_CONTENT, 0.25f, Gravity.CENTER, 0, 0, 8,
+                                0));
 
                 return new MainViewHolder(content);
             default:
@@ -292,16 +328,27 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
         if (holder instanceof HeaderViewHolder) {
             HeaderViewHolder header = (HeaderViewHolder) holder;
             double cap = cryptoData.cap;
-            header.textCap.setText(formatHeaderValue(context, "MARKET CAP($)", Number.truncateNumber(cap)));
+            header.textCap.setText(
+                    formatHeaderValue(context, "MARKET CAP($)", Number.truncateNumber(cap)));
             double dom = cryptoData.btcDominance;
-            header.textDom.setText(formatHeaderValue(context, "BTC DOM.", String.format("%.2f%%", (dom * 100))));
+            header.textDom.setText(
+                    formatHeaderValue(context, "BTC DOM.", String.format("%.2f%%", (dom * 100))));
             double vol = cryptoData.volume;
-            header.textVol.setText(formatHeaderValue(context, "24H VOL($)", Number.truncateNumber(vol)));
-        } else if (holder instanceof LabelViewHolder) {
-
+            header.textVol
+                    .setText(formatHeaderValue(context, "24H VOL($)", Number.truncateNumber(vol)));
         } else if (holder instanceof MainViewHolder) {
-            int realPosition = position - 3;
-            CryptoCurrencyInfo info = data.get(realPosition);
+
+            int real_position = position - 3;
+
+            if (real_position < 0 || real_position > data.size()) {
+                return;
+            }
+
+            CryptoCurrencyInfo info = data.get(real_position);
+
+            if (info == null) {
+                return;
+            }
 
             MainViewHolder main = (MainViewHolder) holder;
             main.setCrypto(info.code);
@@ -310,21 +357,26 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             if (price > 0) {
                 boolean isGreaterZero = Math.floor(price) > 0;
                 double deltaMinute = -1 * ((1 - info.delta.minute) * 100);
-                main.textCryptoPrice.setTextColor(deltaMinute > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
-                main.textCryptoPrice.setText(String.format(isGreaterZero ? "$%,.2f" : "$%.4f", price));
+                main.textCryptoPrice
+                        .setTextColor(deltaMinute > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
+                main.textCryptoPrice
+                        .setText(String.format(isGreaterZero ? "$%,.2f" : "$%.4f", price));
             }
             if (!isEmpty(info.icon)) {
-                Picasso.get().load(info.icon).into(main.imageCrypto);
+                picasso().load(info.icon).into(main.imageCrypto);
             }
             if (info.delta != null) {
                 double deltaDay = -1 * ((1 - info.delta.day) * 100);
-                main.textDayDelta.setTextColor(deltaDay > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
-                main.textDayDelta.setText(String.format(deltaDay > 0 ? "+%s%%" : "%s%%", Number.truncateNumber(deltaDay)));
+                main.textDayDelta
+                        .setTextColor(deltaDay > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
+                main.textDayDelta.setText(String.format(deltaDay > 0 ? "+%s%%" : "%s%%",
+                        Number.truncateNumber(deltaDay)));
 
                 main.textDayDelta.setCompoundDrawablesWithIntrinsicBounds(
                         null,
                         null,
-                        deltaDay > 0 ? Theme.crypto_priceUpDrawable : Theme.crypto_priceDownDrawable,
+                        deltaDay > 0 ? Theme.crypto_priceUpDrawable
+                                : Theme.crypto_priceDownDrawable,
                         null
                 );
                 main.textDayDelta.setCompoundDrawablePadding(2);
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
index 033bef7ec..29d214859 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
@@ -1,5 +1,7 @@
 package io.bettergram.adapters;
 
+import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
+
 import android.app.Activity;
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -14,7 +16,6 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 import com.squareup.picasso.Callback;
-import com.squareup.picasso.Picasso;
 import io.bettergram.data.News;
 import io.bettergram.data.NewsList;
 import io.bettergram.data.NewsList__JsonHelper;
@@ -22,7 +23,6 @@
 import io.bettergram.service.NewsDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
-
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
@@ -112,19 +112,21 @@ public void onBindViewHolder(NewsViewHolder holder, int position) {
             int height = (int) (holder.imageThumb.getMeasuredHeight() * 0.5f);
 
             if (width > 0 && height > 0) {
-                Picasso.get().load(news.urlToImage).resize(width, height).centerCrop().into(holder.imageThumb, new Callback.EmptyCallback() {
-                    @Override
-                    public void onSuccess() {
-                        holder.imageThumb.requestLayout();
-                    }
-                });
+                picasso().load(news.urlToImage).resize(width, height).centerCrop()
+                        .into(holder.imageThumb, new Callback.EmptyCallback() {
+                            @Override
+                            public void onSuccess() {
+                                holder.imageThumb.requestLayout();
+                            }
+                        });
             } else {
-                Picasso.get().load(news.urlToImage).into(holder.imageThumb, new Callback.EmptyCallback() {
-                    @Override
-                    public void onSuccess() {
-                        holder.imageThumb.requestLayout();
-                    }
-                });
+                picasso().load(news.urlToImage)
+                        .into(holder.imageThumb, new Callback.EmptyCallback() {
+                            @Override
+                            public void onSuccess() {
+                                holder.imageThumb.requestLayout();
+                            }
+                        });
             }
         });
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java
index f8421a3ab..d48bfe5de 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/ResourcesAdapter.java
@@ -1,8 +1,15 @@
 package io.bettergram.adapters;
 
 
+import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
+
 import android.app.Activity;
-import android.content.*;
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -11,7 +18,6 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
-import com.squareup.picasso.Picasso;
 import io.bettergram.data.ResourceGroup;
 import io.bettergram.data.ResourceItem;
 import io.bettergram.data.ResourcesData;
@@ -21,13 +27,10 @@
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.ui.Components.RecyclerListView;
-
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
-import static android.text.TextUtils.isEmpty;
-
 public class ResourcesAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
     /**
@@ -78,6 +81,7 @@ public void run() {
     }
 
     class TitleViewHolder extends RecyclerView.ViewHolder {
+
         TextView textTitle;
 
         TitleViewHolder(View itemView) {
@@ -88,6 +92,7 @@ public void run() {
     }
 
     class ContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+
         View layoutContent;
         ImageView imageResource;
         TextView textName, textDesc;
@@ -111,7 +116,8 @@ public void onClick(View v) {
             final Context context = v.getContext();
             Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(item.url));
             if (item.url.contains("tg://")) {
-                ComponentName comp = new ComponentName(context.getPackageName(), "io.bettergram.telegram.ui.LaunchActivity");
+                ComponentName comp = new ComponentName(context.getPackageName(),
+                        "io.bettergram.telegram.ui.LaunchActivity");
                 intent.setComponent(comp);
             }
             context.startActivity(intent);
@@ -129,8 +135,12 @@ public void setResources(List<Object> objects) {
     public int getItemViewType(int position) {
         for (int i = 0, size_i = objects.size(); i < size_i; i++) {
             if (i == position) {
-                if (objects.get(i) instanceof String) return 0;
-                if (objects.get(i) instanceof ResourceItem) return 1;
+                if (objects.get(i) instanceof String) {
+                    return 0;
+                }
+                if (objects.get(i) instanceof ResourceItem) {
+                    return 1;
+                }
             }
         }
         return -1;
@@ -149,12 +159,16 @@ public int getItemCount() {
         switch (viewType) {
             case -1:
                 View footer = new View(parent.getContext());
-                footer.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(98)));
+                footer.setLayoutParams(
+                        new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
+                                AndroidUtilities.dp(98)));
                 return new RecyclerListView.Holder(footer);
             case 0:
-                return new TitleViewHolder(inflater.inflate(R.layout.item_resource_header, parent, false));
+                return new TitleViewHolder(
+                        inflater.inflate(R.layout.item_resource_header, parent, false));
             case 1:
-                return new ContentViewHolder(inflater.inflate(R.layout.item_resource_content, parent, false));
+                return new ContentViewHolder(
+                        inflater.inflate(R.layout.item_resource_content, parent, false));
             default:
                 throw new IllegalStateException("Unrecognizable view type");
         }
@@ -178,7 +192,7 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
                 if (!isEmpty(item.title) && !isEmpty(item.url) && !isEmpty(item.description)) {
                     cvh.textName.setText(item.title);
                     cvh.textDesc.setText(item.description);
-                    Picasso.get().load(item.thumbnail()).into(cvh.imageResource);
+                    picasso().load(item.thumbnail()).into(cvh.imageResource);
                 }
                 break;
             default:
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
index bc902b2a2..4b17d431c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
@@ -1,11 +1,15 @@
 package io.bettergram.adapters;
 
+import static com.flipkart.youtubeview.models.YouTubePlayerType.STRICT_NATIVE;
+import static io.bettergram.telegram.messenger.ApplicationLoader.picasso;
+
 import android.app.Activity;
 import android.app.FragmentManager;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.graphics.Bitmap.Config;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.view.LayoutInflater;
@@ -14,7 +18,6 @@
 import android.widget.TextView;
 import com.flipkart.youtubeview.YouTubePlayerView;
 import com.flipkart.youtubeview.models.ImageLoader;
-import com.squareup.picasso.Picasso;
 import io.bettergram.data.Video;
 import io.bettergram.data.VideoList;
 import io.bettergram.data.VideoList__JsonHelper;
@@ -22,15 +25,12 @@
 import io.bettergram.service.YoutubeDataService;
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
-import io.bettergram.utils.RoundedCornersTransform;
-
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
-import static com.flipkart.youtubeview.models.YouTubePlayerType.STRICT_NATIVE;
-
-public class YouTubePlayerAdapter extends RecyclerView.Adapter<YouTubePlayerAdapter.YouTubePlayerViewHolder> {
+public class YouTubePlayerAdapter extends
+        RecyclerView.Adapter<YouTubePlayerAdapter.YouTubePlayerViewHolder> {
 
     /**
      * Receives data from {@link YoutubeDataService}
@@ -93,17 +93,19 @@ public void run() {
 
     private ImageLoader imageLoader = (imageView, url, height, width) -> {
         //Picasso.get().invalidate(url);// temporarily invalidated so the app wont load from memory as it shows blank image
-        Picasso.get()
+        picasso()
                 .load(url)
+                .config(Config.RGB_565)
                 .resize((int) (width * 0.30f), (int) (height * 0.30f))
                 .centerCrop()
                 .placeholder(R.color.grey70)
-                .transform(RoundedCornersTransform.getInstance())
                 .into(imageView);
     };
 
     public void setVideos(List<Video> videos) {
-        if (videos == null || videos.isEmpty()) return;
+        if (videos == null || videos.isEmpty()) {
+            return;
+        }
         this.videos.clear();
         this.videos.addAll(videos);
         notifyDataSetChanged();
@@ -115,7 +117,6 @@ public YouTubePlayerAdapter(Activity activity) {
         this.playerType = STRICT_NATIVE;
         this.apiKey = context.getString(R.string.youtube_api_key);
         this.webviewUrl = context.getString(R.string.youtube_webview_url);
-        Picasso.get().setLoggingEnabled(true);
     }
 
     @Override
@@ -153,7 +154,8 @@ public void onBindViewHolder(final YouTubePlayerViewHolder holder, int position)
         holder.textViewCount.setText(String.format("%s views", viewCount));
 
         if (!playerView.initted) {
-            playerView.initPlayer(apiKey, videoId, webviewUrl, playerType, null, fragmentManager, imageLoader);
+            playerView.initPlayer(apiKey, videoId, webviewUrl, playerType, null, fragmentManager,
+                    imageLoader);
         } else {
             playerView.load(videoId);
         }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/BaseDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/BaseDataService.java
index 1fd0f78da..5280bfa83 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/BaseDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/BaseDataService.java
@@ -14,7 +14,6 @@ public BaseDataService(String name) {
 
     @Override
     protected void onHandleIntent(@Nullable Intent intent) {
-
     }
 
     protected void publishResults(String jsonResult, String action, String extraKey) {
@@ -22,5 +21,4 @@ protected void publishResults(String jsonResult, String action, String extraKey)
         intent.putExtra(extraKey, jsonResult);
         sendBroadcast(intent);
     }
-
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
index 273dfb4fb..234ea6b0e 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
@@ -1,20 +1,31 @@
 package io.bettergram.service;
 
+import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
+
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.support.annotation.Nullable;
-import io.bettergram.data.*;
+import io.bettergram.data.CryptoCurrency;
+import io.bettergram.data.CryptoCurrencyData;
+import io.bettergram.data.CryptoCurrencyData__JsonHelper;
+import io.bettergram.data.CryptoCurrencyInfo;
+import io.bettergram.data.CryptoCurrencyInfoData;
+import io.bettergram.data.CryptoCurrencyInfoData__JsonHelper;
+import io.bettergram.data.CryptoCurrencyInfoResponse;
+import io.bettergram.data.CryptoCurrencyInfoResponse__JsonHelper;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import java.util.Objects;
+import java.util.Timer;
+import java.util.TimerTask;
 import okhttp3.HttpUrl;
-import okhttp3.OkHttpClient;
 import okhttp3.Request;
 import okhttp3.Response;
-import io.bettergram.telegram.messenger.ApplicationLoader;
-
-import java.io.IOException;
-import java.util.*;
-
-import static android.text.TextUtils.isEmpty;
 
 public class CryptoDataService extends BaseDataService {
 
@@ -40,7 +51,8 @@
     public static final int notify = 60000;
     private Timer mTimer = null;
 
-    private static SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(CRYPTO_PREF, Context.MODE_PRIVATE);
+    private static SharedPreferences preferences = ApplicationLoader.applicationContext
+            .getSharedPreferences(CRYPTO_PREF, Context.MODE_PRIVATE);
 
     public CryptoDataService() {
         super("CryptoDataService");
@@ -62,7 +74,8 @@ protected void onHandleIntent(@Nullable Intent intent) {
                 canStart = false;
             } catch (IllegalStateException e) {
                 e.printStackTrace();
-                String savedCryptoInfoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
+                String savedCryptoInfoJson = preferences
+                        .getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
                 if (!isEmpty(savedCryptoInfoJson)) {
                     publishResults(savedCryptoInfoJson, NOTIFICATION, RESULT);
                 }
@@ -75,13 +88,17 @@ private void startTimer(Intent intent) {
         mTimer.scheduleAtFixedRate(new TimeDisplay(intent), 0, notify);   //Schedule task
     }
 
-    private List<CryptoCurrencyInfo> addIcons(List<CryptoCurrencyInfo> list, List<CryptoCurrency> currencies) {
-        if (currencies == null) return new ArrayList<>();
+    private List<CryptoCurrencyInfo> addIcons(List<CryptoCurrencyInfo> list,
+            List<CryptoCurrency> currencies) {
+        if (currencies == null) {
+            return new ArrayList<>();
+        }
 
         for (int i = 0, size = list.size(); i < size; i++) {
             final int index = i;
 
-            CryptoCurrency foundCurrency = CollectionUtil.find(currencies, (CryptoCurrency item) -> list.get(index).code.equals(item.code));
+            CryptoCurrency foundCurrency = CollectionUtil.find(currencies,
+                    (CryptoCurrency item) -> list.get(index).code.equals(item.code));
 
             if (foundCurrency != null) {
                 list.get(index).icon = foundCurrency.icon;
@@ -92,6 +109,7 @@ private void startTimer(Intent intent) {
     }
 
     public interface Predicate<T> {
+
         boolean contains(T item);
     }
 
@@ -127,16 +145,15 @@ public void run() {
             String savedCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES, null);
             List<CryptoCurrency> currencies = new ArrayList<>();
 
-            OkHttpClient client = new OkHttpClient();
-
             if (fetchCryptoCurrencies || isEmpty(savedCryptoJson)) {
                 Request request = new Request.Builder().url(CRYPTO_CURRENCIES_URL).build();
                 try {
-                    Response response = client.newCall(request).execute();
+                    Response response = okhttp_client().newCall(request).execute();
 
                     if (response.isSuccessful() && response.body() != null) {
                         String fetchedCryptoJson = response.body().string();
-                        preferences.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson).apply();
+                        preferences.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson)
+                                .apply();
                         savedCryptoJson = fetchedCryptoJson;
                     }
                 } catch (IOException e) {
@@ -146,7 +163,8 @@ public void run() {
 
             try {
                 if (!isEmpty(savedCryptoJson)) {
-                    CryptoCurrencyData currencyData = CryptoCurrencyData__JsonHelper.parseFromJson(savedCryptoJson);
+                    CryptoCurrencyData currencyData = CryptoCurrencyData__JsonHelper
+                            .parseFromJson(savedCryptoJson);
                     currencies.addAll(currencyData.data);
                 }
             } catch (IOException e) {
@@ -160,43 +178,53 @@ public void run() {
             String favorites = intent.getStringExtra(EXTRA_FAVORITE);
             String currency = intent.getStringExtra(EXTRA__CURRENCY);
 
-            HttpUrl.Builder urlBuilder = Objects.requireNonNull(HttpUrl.parse(CRYPTO_COINS_URL)).newBuilder();
+            HttpUrl.Builder urlBuilder = Objects.requireNonNull(HttpUrl.parse(CRYPTO_COINS_URL))
+                    .newBuilder();
             urlBuilder.addQueryParameter("sort", !isEmpty(sortBy) ? sortBy : "rank");
             urlBuilder.addQueryParameter("order", !isEmpty(orderBy) ? orderBy : "ascending");
             urlBuilder.addQueryParameter("offset", String.valueOf(offset));
             urlBuilder.addQueryParameter("limit", String.valueOf(limit));
-            urlBuilder.addQueryParameter("favorites", !isEmpty(favorites) ? favorites : String.valueOf(false));
+            urlBuilder.addQueryParameter("favorites",
+                    !isEmpty(favorites) ? favorites : String.valueOf(false));
             urlBuilder.addQueryParameter("currency", currency);
 
             String url = urlBuilder.build().toString();
             Request request = new Request.Builder().url(url).build();
 
             try {
-                Response response = client.newCall(request).execute();
+                Response response = okhttp_client().newCall(request).execute();
 
                 if (response.isSuccessful() && response.body() != null) {
                     String fetchedCurrencyJson = response.body().string();
-                    CryptoCurrencyInfoResponse cryptoResponse = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(fetchedCurrencyJson);
-                    cryptoResponse.data.favorites = addIcons(cryptoResponse.data.favorites, currencies);
+                    CryptoCurrencyInfoResponse cryptoResponse = CryptoCurrencyInfoResponse__JsonHelper
+                            .parseFromJson(fetchedCurrencyJson);
+                    cryptoResponse.data.favorites = addIcons(cryptoResponse.data.favorites,
+                            currencies);
                     cryptoResponse.data.list = addIcons(cryptoResponse.data.list, currencies);
                     if (!cryptoResponse.data.favorites.isEmpty()) {
-                        for (int i = 0, size = cryptoResponse.data.favorites.size(); i < size; i++) {
+                        for (int i = 0, size = cryptoResponse.data.favorites.size(); i < size;
+                                i++) {
                             cryptoResponse.data.favorites.get(i).favorite = true;
                         }
                     }
-                    String savedFaveCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_FAVORITE, null);
+                    String savedFaveCryptoJson = preferences
+                            .getString(KEY_CRYPTO_CURRENCIES_FAVORITE, null);
                     if (!isEmpty(savedFaveCryptoJson)) {
-                        CryptoCurrencyInfoData data = CryptoCurrencyInfoData__JsonHelper.parseFromJson(savedFaveCryptoJson);
+                        CryptoCurrencyInfoData data = CryptoCurrencyInfoData__JsonHelper
+                                .parseFromJson(savedFaveCryptoJson);
                         if (data != null && !data.favorites.isEmpty()) {
                             for (int i = 0, size = cryptoResponse.data.list.size(); i < size; i++) {
                                 final int index = i;
-                                CryptoCurrencyInfo inf = CollectionUtil.find(data.favorites, (CryptoCurrencyInfo item) -> cryptoResponse.data.list.get(index).code.equals(item.code));
+                                CryptoCurrencyInfo inf = CollectionUtil.find(data.favorites,
+                                        (CryptoCurrencyInfo item) -> cryptoResponse.data.list
+                                                .get(index).code.equals(item.code));
                                 cryptoResponse.data.list.get(index).favorite = inf != null;
                             }
                         }
                     }
 
-                    String json = CryptoCurrencyInfoResponse__JsonHelper.serializeToJson(cryptoResponse);
+                    String json = CryptoCurrencyInfoResponse__JsonHelper
+                            .serializeToJson(cryptoResponse);
                     preferences.edit().putString(KEY_CRYPTO_CURRENCIES_SAVED, json).apply();
 
                     publishResults(json, NOTIFICATION, RESULT);
@@ -230,7 +258,8 @@ public static boolean faveCrypto(boolean fave, CryptoCurrencyInfo crypto) {
             data.favorites.remove(crypto);
         }
         try {
-            preferences.edit().putString(KEY_CRYPTO_CURRENCIES_FAVORITE, CryptoCurrencyInfoData__JsonHelper.serializeToJson(data)).apply();
+            preferences.edit().putString(KEY_CRYPTO_CURRENCIES_FAVORITE,
+                    CryptoCurrencyInfoData__JsonHelper.serializeToJson(data)).apply();
             return true;
         } catch (IOException e) {
             e.printStackTrace();
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index 39687e8d5..fb791e75d 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -1,5 +1,9 @@
 package io.bettergram.service;
 
+import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
+import static io.bettergram.utils.AeSimpleSHA1.SHA1;
+
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -8,18 +12,14 @@
 import com.rometools.rome.io.FeedException;
 import com.rometools.rome.io.SyndFeedInput;
 import com.rometools.rome.io.XmlReader;
-import io.bettergram.data.*;
+import io.bettergram.data.News;
+import io.bettergram.data.NewsData;
+import io.bettergram.data.NewsData__JsonHelper;
+import io.bettergram.data.NewsList;
+import io.bettergram.data.NewsList__JsonHelper;
+import io.bettergram.data.Source;
 import io.bettergram.service.api.NewsApi;
 import io.bettergram.utils.io.IOUtils;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
-import okhttp3.Response;
-import org.json.JSONException;
-import org.jsoup.Jsoup;
-import org.jsoup.nodes.Document;
-import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
-
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -31,19 +31,16 @@
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
-import java.util.concurrent.TimeUnit;
-
-import static android.text.TextUtils.isEmpty;
-import static io.bettergram.utils.AeSimpleSHA1.SHA1;
+import okhttp3.Request;
+import okhttp3.Response;
+import org.json.JSONException;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
 
 public class NewsDataService extends BaseDataService {
 
-    private static final OkHttpClient CLIENT = new OkHttpClient.Builder()
-            .connectTimeout(5, TimeUnit.MINUTES)
-            .writeTimeout(5, TimeUnit.MINUTES)
-            .readTimeout(5, TimeUnit.MINUTES)
-            .build();
-
     public static final String NEWS_PREF = "NEWS_PREF";
     public static final String KEY_FEED_XML_SET = "KEY_FEED_XML_SET";
     public static final String KEY_SAVED_LIST = "KEY_SAVED_LIST";
@@ -90,8 +87,10 @@ protected void onHandleIntent(Intent intent) {
                 }
                 String xmlFetched = IOUtils.toString(in, "UTF-8");
                 Set<String> savedStringSet = pref.getStringSet(KEY_FEED_XML_SET + urlHash, null);
-                String xmlSaveHash = savedStringSet != null ? savedStringSet.toArray(new String[0])[0] : null;
-                String xmlSaved = savedStringSet != null ? savedStringSet.toArray(new String[0])[1] : null;
+                String xmlSaveHash =
+                        savedStringSet != null ? savedStringSet.toArray(new String[0])[0] : null;
+                String xmlSaved =
+                        savedStringSet != null ? savedStringSet.toArray(new String[0])[1] : null;
                 String xmlFinal = null;
                 try {
                     if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(xmlSaveHash)) {
@@ -107,9 +106,12 @@ protected void onHandleIntent(Intent intent) {
                     e.printStackTrace();
                 }
 
-                if (isEmpty(xmlFinal)) break;
+                if (isEmpty(xmlFinal)) {
+                    break;
+                }
 
-                InputStream stream = new ByteArrayInputStream(xmlFinal.getBytes(StandardCharsets.UTF_8));
+                InputStream stream = new ByteArrayInputStream(
+                        xmlFinal.getBytes(StandardCharsets.UTF_8));
 
                 SyndFeed feed = new SyndFeedInput().build(new XmlReader(stream, "text/xml"));
 
@@ -146,7 +148,6 @@ protected void onHandleIntent(Intent intent) {
 
         if (!articles.isEmpty()) {
 
-
             for (int i = 0, size = articles.size(); i < size; i++) {
                 try {
                     if (isEmpty(articles.get(i).urlToImage)) {
@@ -155,14 +156,15 @@ protected void onHandleIntent(Intent intent) {
                                 .url(articles.get(i).url)
                                 .build();
 
-                        Response response = CLIENT.newCall(request).execute();
+                        Response response = okhttp_client().newCall(request).execute();
 
                         if (response.body() != null && response.isSuccessful()) {
                             String result = response.body().string();
                             Document document = Jsoup.parse(result);
                             Elements metas = document.head().getElementsByTag("meta");
                             for (Element meta : metas) {
-                                Elements attribute = meta.getElementsByAttributeValue("property", "og:image");
+                                Elements attribute = meta
+                                        .getElementsByAttributeValue("property", "og:image");
                                 String content = attribute.attr("content");
                                 if (!isEmpty(content)) {
                                     articles.get(i).urlToImage = content;
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
index ffbd8c2ef..47dbb512a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
@@ -8,33 +8,56 @@
 
 package io.bettergram.telegram.messenger;
 
+import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
+
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlarmManager;
 import android.app.Application;
 import android.app.PendingIntent;
-import android.content.*;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
 import android.content.res.Configuration;
 import android.os.Handler;
 import android.os.PowerManager;
 import android.text.TextUtils;
+import android.util.Log;
 import com.crashlytics.android.Crashlytics;
 import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
+import com.google.android.gms.common.GooglePlayServicesRepairableException;
 import com.google.android.gms.common.GooglePlayServicesUtil;
+import com.google.android.gms.security.ProviderInstaller;
 import com.google.firebase.iid.FirebaseInstanceId;
+import com.squareup.picasso.OkHttp3Downloader;
+import com.squareup.picasso.Picasso;
 import io.bettergram.service.CryptoDataService;
-import io.fabric.sdk.android.Fabric;
 import io.bettergram.telegram.tgnet.ConnectionsManager;
 import io.bettergram.telegram.tgnet.TLRPC;
 import io.bettergram.telegram.ui.Components.ForegroundDetector;
-
+import io.fabric.sdk.android.Fabric;
 import java.io.File;
-
-import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
+import java.security.KeyManagementException;
+import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.concurrent.TimeUnit;
+import javax.net.ssl.SSLContext;
+import okhttp3.CipherSuite;
+import okhttp3.ConnectionSpec;
+import okhttp3.OkHttpClient;
+import okhttp3.TlsVersion;
 
 public class ApplicationLoader extends Application {
 
+    public static OkHttpClient okhttp_singleton;
+    private static Picasso picasso_singleton;
+
     @SuppressLint("StaticFieldLeak")
     public static volatile Context applicationContext;
     public static volatile Handler applicationHandler;
@@ -87,7 +110,8 @@ public static void postInitApplication() {
         }
 
         try {
-            PowerManager pm = (PowerManager) ApplicationLoader.applicationContext.getSystemService(Context.POWER_SERVICE);
+            PowerManager pm = (PowerManager) ApplicationLoader.applicationContext
+                    .getSystemService(Context.POWER_SERVICE);
             isScreenOn = pm.isScreenOn();
             if (BuildVars.LOGS_ENABLED) {
                 FileLog.d("screen state = " + isScreenOn);
@@ -135,6 +159,9 @@ public void onCreate() {
         Fabric.with(fabric);
 
         applicationContext = getApplicationContext();
+
+        updateAndroidSecurityProvider();
+
         NativeLoader.initNativeLibs(ApplicationLoader.applicationContext);
         ConnectionsManager.native_setJava(false);
         new ForegroundDetector(this);
@@ -148,7 +175,8 @@ public static void startPushService() {
         SharedPreferences preferences = MessagesController.getGlobalNotificationsSettings();
         if (preferences.getBoolean("pushService", true)) {
             try {
-                applicationContext.startService(new Intent(applicationContext, NotificationsService.class));
+                applicationContext
+                        .startService(new Intent(applicationContext, NotificationsService.class));
             } catch (Throwable ignore) {
 
             }
@@ -160,8 +188,10 @@ public static void startPushService() {
     public static void stopPushService() {
         applicationContext.stopService(new Intent(applicationContext, NotificationsService.class));
 
-        PendingIntent pintent = PendingIntent.getService(applicationContext, 0, new Intent(applicationContext, NotificationsService.class), 0);
-        AlarmManager alarm = (AlarmManager) applicationContext.getSystemService(Context.ALARM_SERVICE);
+        PendingIntent pintent = PendingIntent.getService(applicationContext, 0,
+                new Intent(applicationContext, NotificationsService.class), 0);
+        AlarmManager alarm = (AlarmManager) applicationContext
+                .getSystemService(Context.ALARM_SERVICE);
         alarm.cancel(pintent);
     }
 
@@ -217,9 +247,77 @@ private boolean checkPlayServices() {
         return true;
     }
 
+    private void updateAndroidSecurityProvider() {
+        try {
+            ProviderInstaller.installIfNeeded(applicationContext);
+            SSLContext sslContext;
+            sslContext = SSLContext.getInstance("TLSv1.2");
+            sslContext.init(null, null, null);
+            sslContext.createSSLEngine();
+        } catch (GooglePlayServicesRepairableException
+                | GooglePlayServicesNotAvailableException
+                | NoSuchAlgorithmException
+                | KeyManagementException e) {
+            e.printStackTrace();
+        }
+    }
+
+    protected static List<ConnectionSpec> connectionSpecs() {
+        // Necessary because our servers don't have the right cipher suites.
+        // https://github.com/square/okhttp/issues/4053
+        List<CipherSuite> cipherSuites = new ArrayList<>(ConnectionSpec.MODERN_TLS.cipherSuites());
+        cipherSuites.add(CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA);
+        cipherSuites.add(CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA);
+        cipherSuites.add(CipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA);
+
+        ConnectionSpec legacyTls = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
+                .tlsVersions(TlsVersion.TLS_1_2)
+                .cipherSuites(cipherSuites.toArray(new CipherSuite[0]))
+                .build();
+
+        return Arrays.asList(legacyTls, ConnectionSpec.CLEARTEXT);
+    }
+
     public static void warmupCryptos(Activity activity) {
         Intent intent = new Intent(activity, CryptoDataService.class);
         intent.putExtra(EXTRA_LIMIT, 100);
         activity.startService(intent);
     }
+
+    public static OkHttpClient okhttp_client() {
+        if (okhttp_singleton == null) {
+            synchronized (OkHttpClient.class) {
+                if (okhttp_singleton == null) {
+                    okhttp_singleton = new OkHttpClient
+                            .Builder()
+                            .connectTimeout(5, TimeUnit.MINUTES)
+                            .writeTimeout(5, TimeUnit.MINUTES)
+                            .readTimeout(5, TimeUnit.MINUTES)
+                            .connectionSpecs(connectionSpecs())
+                            .build();
+                }
+            }
+        }
+        return okhttp_singleton;
+    }
+
+    public static Picasso picasso() {
+        if (picasso_singleton == null) {
+            synchronized (Picasso.class) {
+                if (picasso_singleton == null) {
+                    picasso_singleton = new Picasso
+                            .Builder(applicationContext)
+                            .downloader(new OkHttp3Downloader(okhttp_client()))
+                            .loggingEnabled(true)
+                            .listener((picasso1, uri, exception) -> {
+                                Log.e("Picasso", exception.getMessage());
+                            })
+                            .build();
+                }
+            }
+        }
+        return picasso_singleton;
+    }
+
+
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java
index a83f86cea..7f36d42be 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ActionBar/Theme.java
@@ -1050,6 +1050,8 @@ public int getMinimumHeight() {
     public static final String key_topbar_activeColor = "topbar_activeColor";
     public static final String key_topbar_unreadCounterColor = "topbar_unreadCounterColor";
 
+    public static final String key_crypto_dividerColor = "crypto_dividerColor";
+
     public static final String key_dialog_activeStateBorderColor = "dialog_activeStateBorderColor";
     public static final String key_dialog_activeStateOnlineColor = "dialog_activeStateOnlineColor";
     public static final String key_dialog_activeStateOfflineColor = "dialog_activeStateOfflineColor";
@@ -1690,6 +1692,8 @@ public int getMinimumHeight() {
         defaultColors.put(key_topbar_activeColor, 0xffffffff);
         defaultColors.put(key_topbar_unreadCounterColor, 0xFFEB3E4A);
 
+        defaultColors.put(key_crypto_dividerColor, 0xffd7d7d7);
+
         defaultColors.put(key_dialog_activeStateBorderColor, 0xFFFFFFFF);
         defaultColors.put(key_dialog_activeStateOnlineColor, 0xff69bc35);
         defaultColors.put(key_dialog_activeStateOfflineColor, 0xffcdcdcd);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/TabStrip/SlidingTabLayout.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/TabStrip/SlidingTabLayout.java
index ffced45a2..f6beae4d9 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/TabStrip/SlidingTabLayout.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/TabStrip/SlidingTabLayout.java
@@ -17,6 +17,7 @@
 package io.bettergram.telegram.ui.Components.TabStrip;
 
 import android.content.Context;
+import android.graphics.Color;
 import android.graphics.Typeface;
 import android.os.Build;
 import android.support.v4.view.PagerAdapter;
@@ -75,6 +76,8 @@
     private int mTabViewLayoutId;
     private int mTabViewTextViewId;
 
+    private int prev_position = 0;
+
     private ViewPager mViewPager;
     private ViewPager.OnPageChangeListener mViewPagerPageChangeListener;
 
@@ -179,14 +182,14 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
      * Create a default view to be used for tabs. This is called if a custom tab view is not set via
      * {@link #setCustomTabView(int, int)}.
      */
-    protected TextView createDefaultTabView(Context context) {
+    protected TextView createDefaultTabView(Context context, int index) {
         TextView textView = new TextView(context);
         textView.setGravity(Gravity.CENTER);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_SP, TAB_VIEW_TEXT_SIZE_SP);
         textView.setTypeface(Typeface.DEFAULT_BOLD);
         textView.setAllCaps(false);
         textView.setTypeface(textView.getTypeface(), Typeface.BOLD);
-        textView.setTextColor(getResources().getColor(android.R.color.black));
+        textView.setTextColor(index == 0 ? Color.BLACK : Color.parseColor("#979797"));
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
             // If we're running on Honeycomb or newer, then we can use the Theme's
@@ -220,11 +223,11 @@ private void populateTabStrip() {
                 // If there is a custom tab view layout id set, try and inflate it
                 tabView = LayoutInflater.from(getContext()).inflate(mTabViewLayoutId, mTabStrip,
                         false);
-                tabTitleView = (TextView) tabView.findViewById(mTabViewTextViewId);
+                tabTitleView = tabView.findViewById(mTabViewTextViewId);
             }
 
             if (tabView == null) {
-                tabView = createDefaultTabView(getContext());
+                tabView = createDefaultTabView(getContext(), i);
             }
 
             if (tabTitleView == null && TextView.class.isInstance(tabView)) {
@@ -306,6 +309,14 @@ public void onPageSelected(int position) {
                 scrollToTab(position, 0);
             }
 
+            TextView prev_textView = (TextView) mTabStrip.getChildAt(prev_position);
+            prev_textView.setTextColor(Color.parseColor("#979797"));
+
+            TextView curr_textView = (TextView) mTabStrip.getChildAt(position);
+            curr_textView.setTextColor(Color.BLACK);
+
+            prev_position = position;
+
             if (mViewPagerPageChangeListener != null) {
                 mViewPagerPageChangeListener.onPageSelected(position);
             }
diff --git a/inline-youtube-view/src/main/res/layout/video_container.xml b/inline-youtube-view/src/main/res/layout/video_container.xml
index 63ca55461..1e7a2035e 100644
--- a/inline-youtube-view/src/main/res/layout/video_container.xml
+++ b/inline-youtube-view/src/main/res/layout/video_container.xml
@@ -1,33 +1,33 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:id="@+id/video_container"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  android:id="@+id/video_container"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent">
 
-    <ImageView
-            android:id="@+id/video_thumbnail_image"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:adjustViewBounds="true"/>
+  <ImageView
+    android:id="@+id/video_thumbnail_image"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/black"/>
 
-    <ImageView
-            android:id="@+id/play_btn"
-            android:layout_width="48dp"
-            android:layout_height="48dp"
-            android:layout_centerInParent="true"
-            android:src="@drawable/play_btn_thumbnail"/>
+  <ImageView
+    android:id="@+id/play_btn"
+    android:layout_width="48dp"
+    android:layout_height="48dp"
+    android:layout_centerInParent="true"
+    android:src="@drawable/play_btn_thumbnail"/>
 
-    <include
-            layout="@layout/recycler_progressbar"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"
-            android:visibility="gone"/>
+  <include
+    layout="@layout/recycler_progressbar"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_centerInParent="true"
+    android:visibility="gone"/>
 
-    <FrameLayout
-            android:id="@+id/youtubeFragmentContainer"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:orientation="horizontal"/>
+  <FrameLayout
+    android:id="@+id/youtubeFragmentContainer"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="horizontal"/>
 </RelativeLayout>
\ No newline at end of file
