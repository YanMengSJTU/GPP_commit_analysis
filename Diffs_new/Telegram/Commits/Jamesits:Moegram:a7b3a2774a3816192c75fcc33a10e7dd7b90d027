diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 1049b140d..288725054 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -80,8 +80,8 @@ android {
     productFlavors {
         Moegram {
             applicationId "me.swineson.moegram.messenger"
-            versionCode 518
-            versionName "0.1.0 alpha 1"
+            versionCode 521
+            versionName "0.1.0 alpha 4"
         }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index ee9d7e2b9..994eacaf6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -1023,37 +1023,6 @@ public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                     ((EmptyCell) view).setHeight(AndroidUtilities.dp(82));
                 }
             }
-
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
-            if (preferences.getBoolean("use_system_emoji", true)) {
-                if (view instanceof ImageView) {
-                    ImageView imageView = (ImageView) view;
-                    String convert = convert((long) imageView.getTag());
-                    try {
-                        // Emoji.java Line 211-216
-                        int drawImgSize = AndroidUtilities.dp(20);
-                        int bigImgSize;
-                        if (AndroidUtilities.isTablet()) {
-                            bigImgSize = AndroidUtilities.dp(40);
-                        } else {
-                            bigImgSize = AndroidUtilities.dp(32);
-                        }
-                        imageView.setImageDrawable(TextDrawable.builder()
-                                .beginConfig()
-                                .textColor(Color.BLACK)
-                                .fontSize(preferences.getBoolean("keyboard_big_emoji", false) ? bigImgSize : drawImgSize)
-                                .endConfig()
-                                .buildRect(convert, Color.TRANSPARENT));
-                    } catch (Exception ignored) {
-                        imageView.setImageDrawable(TextDrawable.builder()
-                                .beginConfig()
-                                .textColor(Color.BLACK)
-                                .endConfig()
-                                .buildRect(convert, Color.TRANSPARENT));
-
-                    }
-                }
-            }
             return view;
         }
 
@@ -1174,6 +1143,38 @@ public void onClick(View view) {
             }
             imageView.setImageDrawable(Emoji.getEmojiBigDrawable(code));
             imageView.setTag(code);
+
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+            if (preferences.getBoolean("use_system_emoji", true)) {
+                if (imageView instanceof ImageView) {
+                    //ImageView imageView = (ImageView) imageView;
+                    String convert = convert((long) imageView.getTag());
+                    try {
+                        // Emoji.java Line 211-216
+                        int drawImgSize = AndroidUtilities.dp(20);
+                        int bigImgSize;
+                        if (AndroidUtilities.isTablet()) {
+                            bigImgSize = AndroidUtilities.dp(40);
+                        } else {
+                            bigImgSize = AndroidUtilities.dp(32);
+                        }
+
+                        imageView.setImageDrawable(TextDrawable.builder()
+                                .beginConfig()
+                                .textColor(Color.BLACK)
+                                .fontSize(preferences.getBoolean("keyboard_big_emoji", false) ? bigImgSize : drawImgSize)
+                                .endConfig()
+                                .buildRect(convert, Color.TRANSPARENT));
+                    } catch (Exception ignored) {
+                        imageView.setImageDrawable(TextDrawable.builder()
+                                .beginConfig()
+                                .textColor(Color.BLACK)
+                                .endConfig()
+                                .buildRect(convert, Color.TRANSPARENT));
+
+                    }
+                }
+            }
             return imageView;
         }
 
