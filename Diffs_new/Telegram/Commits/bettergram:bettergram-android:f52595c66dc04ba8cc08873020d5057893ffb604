diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
index 6b728846a..8c90a7a39 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
@@ -126,7 +126,7 @@ public void didReceivedNotification(int id, int account, Object... args) {
                     e.printStackTrace();
                 }
             }
-        } else if (id == NotificationCenter.updateCurrenyDataToBackup) {
+        } else if (id == NotificationCenter.updateCurrencyDataToBackup) {
             AndroidUtilities.runOnUIThread(() -> {
                 data.clear();
                 data.addAll(backup);
@@ -279,7 +279,7 @@ public void setSearchMode(boolean searchMode) {
     public CryptoAdapter(Activity activity) {
         this.activity = activity;
         NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.currencySearchResultsUpdate);
-        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateCurrenyDataToBackup);
+        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateCurrencyDataToBackup);
     }
 
     public void setCryptoData(CryptoCurrencyInfoResponse cryptoData) {
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
index eb2da5cc7..ca922d2fd 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/NewsAdapter.java
@@ -11,12 +11,16 @@
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.text.Html;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
 import io.bettergram.data.News;
 import io.bettergram.data.NewsList;
 import io.bettergram.data.NewsList__JsonHelper;
@@ -29,10 +33,6 @@
 import io.bettergram.telegram.ui.Components.CardView.CardView;
 import io.bettergram.telegram.ui.Components.PullToRefresh.PullRefreshLayout;
 
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
 import static io.bettergram.service.api.NewsApi.formatToYesterdayOrToday;
 
 public class NewsAdapter extends RecyclerView.Adapter<NewsAdapter.NewsViewHolder> implements PullRefreshLayout.OnRefreshListener {
@@ -78,7 +78,7 @@ public void onRefresh(PullRefreshLayout ptrLayout) {
         if (this.ptrLayout == null) {
             this.ptrLayout = ptrLayout;
         }
-        startService(activity);
+        startService(activity, false);
     }
 
     private Activity activity;
@@ -195,8 +195,9 @@ public int getItemCount() {
         return newsList.size();
     }
 
-    public void startService(Activity activity) {
+    public void startService(Activity activity, boolean fromStart) {
         Intent intent = new Intent(activity, NewsDataService.class);
+        intent.putExtra(NewsDataService.EXTRA_FROM_START, fromStart);
         activity.startService(intent);
     }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
index a3134b195..18073b735 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/YouTubePlayerAdapter.java
@@ -15,7 +15,13 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
+
 import com.flipkart.youtubeview.YouTubePlayerView;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
 import io.bettergram.data.Video;
 import io.bettergram.data.VideoList;
 import io.bettergram.data.VideoList__JsonHelper;
@@ -28,10 +34,6 @@
 import io.bettergram.telegram.ui.Components.CardView.CardView;
 import io.bettergram.telegram.ui.Components.PullToRefresh.PullRefreshLayout;
 
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
 import static com.flipkart.youtubeview.models.YouTubePlayerType.STRICT_NATIVE;
 import static io.bettergram.service.api.VideosApi.formatToYesterdayOrToday;
 
@@ -79,7 +81,7 @@ public void onRefresh(PullRefreshLayout ptrLayout) {
         if (this.ptrLayout == null) {
             this.ptrLayout = ptrLayout;
         }
-        startService(activity);
+        startService(activity, false);
     }
 
     private Activity activity;
@@ -210,8 +212,9 @@ public void onBindViewHolder(final YouTubePlayerViewHolder holder, int position)
         }
     }
 
-    public void startService(Activity activity) {
+    public void startService(Activity activity, boolean fromStart) {
         Intent intent = new Intent(activity, YoutubeDataService.class);
+        intent.putExtra(YoutubeDataService.EXTRA_FROM_START, fromStart);
         activity.startService(intent);
     }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index f7c41e158..c890eb425 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -4,15 +4,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.util.Log;
-import io.bettergram.data.*;
-import io.bettergram.messenger.BuildConfig;
-import io.bettergram.service.api.NewsApi;
-import io.bettergram.telegram.messenger.ApplicationLoader;
-import io.bettergram.telegram.messenger.NotificationCenter;
-import io.bettergram.utils.CollectionUtil;
-import io.bettergram.utils.io.IOUtils;
-import okhttp3.Request;
-import okhttp3.Response;
+
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
@@ -24,10 +16,29 @@
 import java.net.HttpURLConnection;
 import java.net.URL;
 import java.security.NoSuchAlgorithmException;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import io.bettergram.data.News;
+import io.bettergram.data.NewsData;
+import io.bettergram.data.NewsData__JsonHelper;
+import io.bettergram.data.NewsList;
+import io.bettergram.data.NewsList__JsonHelper;
+import io.bettergram.data.Source;
+import io.bettergram.messenger.BuildConfig;
+import io.bettergram.service.api.NewsApi;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.NotificationCenter;
+import io.bettergram.utils.CollectionUtil;
+import io.bettergram.utils.io.IOUtils;
+import okhttp3.Request;
+import okhttp3.Response;
+
 import static android.text.TextUtils.isEmpty;
 import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
 import static io.bettergram.utils.AeSimpleSHA1.SHA1;
@@ -41,6 +52,8 @@
     public static final String RESULT = "result";
     public static final String NOTIFICATION = "io.bettergram.service.NewsDataService";
 
+    public static final String EXTRA_FROM_START = "EXTRA_FROM_START";
+
     public static boolean isIntentServiceRunning = false;
 
     private SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(NEWS_PREF, Context.MODE_PRIVATE);
@@ -54,6 +67,8 @@ protected void onHandleIntent(Intent intent) {
         if (!isIntentServiceRunning) {
             isIntentServiceRunning = true;
 
+            final boolean fromStart = intent.getBooleanExtra(EXTRA_FROM_START, false);
+
             String jsonRaw = preferences.getString(KEY_SAVED_LIST, null);
             if (!isEmpty(jsonRaw)) {
                 publishResults(jsonRaw, NOTIFICATION, RESULT);
@@ -318,6 +333,27 @@ protected void onHandleIntent(Intent intent) {
                 } catch (IOException e) {
                     e.printStackTrace();
                 }
+
+                try {
+                    int counter = 0;
+                    if (!isEmpty(jsonRaw) && !fromStart) {
+                        NewsList rawNewsList = NewsList__JsonHelper.parseFromJson(jsonRaw);
+                        for (int i = 0, size = newsList.articles.size(); i < size; i++) {
+                            final News indexedNews = newsList.articles.get(i);
+                            final News foundNews = CollectionUtil.find(rawNewsList.articles, item -> indexedNews.title.equals(item.title));
+                            if (foundNews == null) {
+                                counter++;
+                            }
+                        }
+                    } else {
+                        if (newsList.articles != null && !newsList.articles.isEmpty()) {
+                            counter = newsList.articles.size() - 1;
+                        }
+                    }
+                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateBottombarCounter, counter, "news");
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
             }
             isIntentServiceRunning = false;
         }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
index 0009050da..d42c06ae8 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
@@ -3,14 +3,9 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+
 import com.crashlytics.android.Crashlytics;
-import io.bettergram.data.*;
-import io.bettergram.service.api.VideosApi;
-import io.bettergram.telegram.messenger.ApplicationLoader;
-import io.bettergram.telegram.messenger.NotificationCenter;
-import io.bettergram.utils.Counter;
-import okhttp3.Request;
-import okhttp3.Response;
+
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
@@ -19,6 +14,19 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
+import io.bettergram.data.Video;
+import io.bettergram.data.VideoData;
+import io.bettergram.data.VideoData__JsonHelper;
+import io.bettergram.data.VideoList;
+import io.bettergram.data.VideoList__JsonHelper;
+import io.bettergram.service.api.VideosApi;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.NotificationCenter;
+import io.bettergram.utils.CollectionUtil;
+import io.bettergram.utils.Counter;
+import okhttp3.Request;
+import okhttp3.Response;
+
 import static android.text.TextUtils.isEmpty;
 import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
 
@@ -27,13 +35,13 @@
     private static final String TAG = YoutubeDataService.class.getName();
 
     public static final String YOUTUBE_PREF = "YOUTUBE_PREF";
-
     public static final String KEY_VIDEO_JSON = "KEY_VIDEO_JSON";
 
     public static final String RESULT = "result";
-
     public static final String NOTIFICATION = "io.bettergram.service.YoutubeDataService";
 
+    public static final String EXTRA_FROM_START = "EXTRA_FROM_START";
+
     private SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(YOUTUBE_PREF, Context.MODE_PRIVATE);
 
     public YoutubeDataService() {
@@ -43,6 +51,8 @@ public YoutubeDataService() {
     @Override
     protected void onHandleIntent(Intent intent) {
 
+        final boolean fromStart = intent.getBooleanExtra(EXTRA_FROM_START, false);
+
         String jsonRaw = preferences.getString(KEY_VIDEO_JSON, null);
         if (!isEmpty(jsonRaw)) {
             publishResults(jsonRaw, NOTIFICATION, RESULT);
@@ -110,6 +120,23 @@ protected void onHandleIntent(Intent intent) {
                 preferences.edit().putString(KEY_VIDEO_JSON, jsonResult).apply();
 
                 publishResults(jsonResult, NOTIFICATION, RESULT);
+
+                int counter = 0;
+                if (!isEmpty(jsonRaw) && !fromStart) {
+                    VideoList rawVideoList = VideoList__JsonHelper.parseFromJson(jsonRaw);
+                    for (int i = 0, size = videoList.videos.size(); i < size; i++) {
+                        final Video indexedVideo = videoList.videos.get(i);
+                        final Video foundVideo = CollectionUtil.find(rawVideoList.videos, item -> indexedVideo.title.equals(item.title));
+                        if (foundVideo == null) {
+                            counter++;
+                        }
+                    }
+                } else {
+                    if (videoList.videos != null && !videoList.videos.isEmpty()) {
+                        counter = videoList.videos.size() - 1;
+                    }
+                }
+                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateBottombarCounter, counter, "video");
             } else {
                 if (response.code() == 410) {
                     NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/api/CurrencyApi.java b/TMessagesProj/src/main/java/io/bettergram/service/api/CurrencyApi.java
index 4866afdae..48226c60c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/api/CurrencyApi.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/api/CurrencyApi.java
@@ -30,7 +30,7 @@
     public static void search(String query) {
         if (query.length() == 0) {
             cancelCallsByTag("request_currency_search");
-            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrenyDataToBackup);
+            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyDataToBackup);
             return;
         }
         THREAD_POOL.submit(() -> {
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java b/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java
index d002ba83a..a64362ab7 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/api/NewsApi.java
@@ -1,7 +1,7 @@
 package io.bettergram.service.api;
 
 import android.annotation.SuppressLint;
-import io.bettergram.utils.io.IOUtils;
+
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -13,6 +13,9 @@
 import java.util.Calendar;
 import java.util.Date;
 
+import io.bettergram.utils.Time;
+import io.bettergram.utils.io.IOUtils;
+
 public class NewsApi {
 
     //@formatter:off
@@ -65,13 +68,13 @@ public static String formatToYesterdayOrToday(String date) {
             yesterday.add(Calendar.DATE, -1);
 
             if (calendar.get(Calendar.YEAR) == today.get(Calendar.YEAR) && calendar.get(Calendar.DAY_OF_YEAR) == today.get(Calendar.DAY_OF_YEAR)) {
-                return "Today";
+                return Time.getTimeAgo(dateTime);
             } else if (calendar.get(Calendar.YEAR) == yesterday.get(Calendar.YEAR) && calendar.get(Calendar.DAY_OF_YEAR) == yesterday.get(Calendar.DAY_OF_YEAR)) {
                 return "Yesterday";
             } else {
                 return formatDate(date);
             }
-        } catch (ParseException e) {
+        } catch (Exception e) {
             e.printStackTrace();
             return "";
         }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java
index f5f3843f1..eb93b6eaf 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/NotificationCenter.java
@@ -149,7 +149,9 @@
 
     public static final int updateToLatestApiVersion = totalEvents++;
     public static final int currencySearchResultsUpdate = totalEvents++;
-    public static final int updateCurrenyDataToBackup = totalEvents++;
+    public static final int updateCurrencyDataToBackup = totalEvents++;
+    public static final int updateBottombarCounter = totalEvents++;
+    public static final int openBottombarCounter = totalEvents++;
 
     private SparseArray<ArrayList<Object>> observers = new SparseArray<>();
     private SparseArray<ArrayList<Object>> removeAfterBroadcast = new SparseArray<>();
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java
index 7239e8910..905aaf68b 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/BottomNavigationBar.java
@@ -1,6 +1,7 @@
 package io.bettergram.telegram.ui.Components.BottomBar;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.content.res.TypedArray;
 import android.os.Build;
 import android.os.Parcelable;
@@ -11,29 +12,36 @@
 import android.support.v4.content.ContextCompat;
 import android.support.v4.view.ViewCompat;
 import android.util.AttributeSet;
-import android.util.Log;
 import android.util.Pair;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewOutlineProvider;
-import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
 import io.bettergram.messenger.R;
 import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ApplicationLoader;
 import io.bettergram.telegram.messenger.NotificationCenter;
+import io.bettergram.telegram.messenger.Strings;
 import io.bettergram.telegram.ui.ActionBar.Theme;
+import io.bettergram.telegram.ui.Components.CounterImage;
 import io.bettergram.telegram.ui.Components.LayoutHelper;
+import io.bettergram.utils.Counter;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
+import static android.text.TextUtils.isEmpty;
 
 public class BottomNavigationBar extends LinearLayout implements NotificationCenter.NotificationCenterDelegate {
 
     private static final String TAG = BottomNavigationBar.class.getName();
+    private static final String BOTTOM_COUNTER = "BOTTOM_COUNTER";
+    private SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(BOTTOM_COUNTER, Context.MODE_PRIVATE);
 
     private static final List<Pair<Integer, Integer>> ITEMS = Arrays.asList(
             new Pair<>(R.drawable.ic_tab_chats, R.string.barItemChats),
@@ -75,6 +83,20 @@ public BottomNavigationBar(Context context, AttributeSet attrs, int defStyleAttr
         createStubForEditMode();
     }
 
+    @Override
+    protected void onAttachedToWindow() {
+        super.onAttachedToWindow();
+        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateBottombarCounter);
+        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.openBottombarCounter);
+    }
+
+    @Override
+    protected void onDetachedFromWindow() {
+        super.onDetachedFromWindow();
+        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.updateBottombarCounter);
+        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.openBottombarCounter);
+    }
+
     private void createStubForEditMode() {
         Thread t = new Thread(() -> {
             int size = ITEMS.size();
@@ -176,14 +198,15 @@ private void setUpElevation(@NonNull Context context, @Nullable AttributeSet att
     public BottomNavigationBar addTab(@NonNull BottomBarItem item) {
         final Context context = getContext();
         LinearLayout tabView = new LinearLayout(context);
+        tabView.setClipChildren(false);
         tabView.setClickable(true);
         tabView.setOrientation(LinearLayout.VERTICAL);
         tabView.setTranslationY(AndroidUtilities.dp(2));
         tabView.setBackgroundResource(tabItemBgRes);
 
-        ImageView tabIcon = new ImageView(context);
+        CounterImage tabIcon = new CounterImage(context);
 
-        addViewOnUIThread(tabView, tabIcon, LayoutHelper.createLinear(24, 24, Gravity.CENTER));
+        addViewOnUIThread(tabView, tabIcon, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.CENTER));
 
         TextView tabTitle = new TextView(context);
         tabTitle.setMaxLines(1);
@@ -282,8 +305,35 @@ protected Parcelable onSaveInstanceState() {
 
     @Override
     public void didReceivedNotification(int id, int account, Object... args) {
-        for (Object object : args) {
-            Log.i(TAG, "object: " + object.toString());
+        if (id == NotificationCenter.updateBottombarCounter) {
+            int count = (int) args[0];
+            String tag = (String) args[1];
+            if (!isEmpty(tag)) {
+                if (!preferences.getBoolean(tag + "_counter_opened", false)) {
+                    if (tag.equals("news")) {
+                        if (count > 0 && selectedPosition != 2) {
+                            getTabAt(2).icon.countString(String.format("%s", Counter.format(count))).update();
+                        }
+                    } else if (tag.equals("video") && selectedPosition != 3) {
+                        if (count > 0) {
+                            getTabAt(3).icon.countString(String.format("%s", Counter.format(count))).update();
+                        }
+                    }
+                } else {
+                    if (tag.equals("news")) {
+                        getTabAt(2).icon.countString(Strings.EMPTY).update();
+                    } else if (tag.equals("video")) {
+                        getTabAt(3).icon.countString(Strings.EMPTY).update();
+                    }
+                    preferences.edit().putBoolean(tag + "_counter_opened", false).apply();
+                }
+            }
+        } else if (id == NotificationCenter.openBottombarCounter) {
+            String tag = (String) args[0];
+            if (!isEmpty(tag)) {
+                preferences.edit().putBoolean(tag + "_counter_opened", true).apply();
+                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateBottombarCounter, 0, tag);
+            }
         }
     }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/Tab.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/Tab.java
index 4b3bd140a..9469a32db 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/Tab.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/BottomBar/Tab.java
@@ -9,16 +9,21 @@
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
-import io.bettergram.telegram.messenger.AndroidUtilities;
+
+import io.bettergram.telegram.ui.ActionBar.Theme;
+import io.bettergram.telegram.ui.Components.CounterImage;
+import io.bettergram.telegram.ui.Components.WrappedDrawable;
 
 import static android.view.View.GONE;
+import static io.bettergram.telegram.messenger.AndroidUtilities.dp;
+import static io.bettergram.telegram.messenger.AndroidUtilities.findViewsByType;
 import static io.bettergram.telegram.ui.Components.BottomBar.TabAnimator.animateTranslationY;
 
 public class Tab {
     private final BottomBarItem item;
     private final View root;
     private final TextView title;
-    private final ImageView icon;
+    public final CounterImage icon;
     private final Context context;
 
     private final int activeTopMargin;
@@ -34,11 +39,12 @@
         this.root = root;
         context = root.getContext();
 
-        title = AndroidUtilities.findViewsByType(root, TextView.class).get(0);
-        icon = AndroidUtilities.findViewsByType(root, ImageView.class).get(0);
+        title = findViewsByType(root, TextView.class).get(0);
+        icon = findViewsByType(root, CounterImage.class).get(0);
+        icon.textSize(9).borderColor(Theme.getColor(Theme.key_bottombar_backgroundColor)).update();
 
-        activeTopMargin = AndroidUtilities.dp(0);
-        inactiveTopMargin = AndroidUtilities.dp(3);
+        activeTopMargin = dp(0);
+        inactiveTopMargin = dp(3);
         this.activeColor = activeColor;
         this.inactiveColor = inactiveColor;
         iconDrawable = item.getIconDrawable(context);
@@ -49,7 +55,9 @@
 
     private void setupIcon(@NonNull ImageView icon) {
         DrawableCompat.setTint(iconDrawable, inactiveColor);
-        icon.setImageDrawable(iconDrawable);
+        WrappedDrawable wrappedDrawable = new WrappedDrawable(iconDrawable);
+        wrappedDrawable.setBounds(0, 0, dp(24), dp(24));
+        icon.setImageDrawable(wrappedDrawable);
     }
 
     private int getSizeInPx(@DimenRes int res) {
@@ -59,6 +67,9 @@ private int getSizeInPx(@DimenRes int res) {
     void select(boolean animate) {
         title.setTextColor(activeColor);
         DrawableCompat.setTint(iconDrawable, activeColor);
+        WrappedDrawable wrappedDrawable = new WrappedDrawable(iconDrawable);
+        wrappedDrawable.setBounds(0, 0, dp(24), dp(24));
+        icon.setImageDrawable(wrappedDrawable);
 
         if (animate) {
             animateTranslationY(root, activeTopMargin);
@@ -70,6 +81,9 @@ void select(boolean animate) {
     void deselect(boolean animate) {
         title.setTextColor(inactiveColor);
         DrawableCompat.setTint(iconDrawable, inactiveColor);
+        WrappedDrawable wrappedDrawable = new WrappedDrawable(iconDrawable);
+        wrappedDrawable.setBounds(0, 0, dp(24), dp(24));
+        icon.setImageDrawable(wrappedDrawable);
 
         if (animate) {
             animateTranslationY(root, inactiveTopMargin);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/CounterImage.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/CounterImage.java
new file mode 100644
index 000000000..a0707a450
--- /dev/null
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/CounterImage.java
@@ -0,0 +1,112 @@
+package io.bettergram.telegram.ui.Components;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.drawable.Drawable;
+import android.text.Layout;
+import android.text.StaticLayout;
+import android.text.TextPaint;
+import android.util.AttributeSet;
+import android.widget.ImageView;
+
+import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.Strings;
+import io.bettergram.telegram.ui.ActionBar.Theme;
+
+import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.AndroidUtilities.dp;
+
+public class CounterImage extends ImageView {
+
+    TextPaint countTextPaint;
+    Paint countPaint;
+    Paint countPaintStroke;
+    int borderColor;
+    StaticLayout countLayout;
+    RectF rect = new RectF();
+    int countWidth;
+    float centreX, centreY;
+    String countString = Strings.EMPTY;
+    boolean draw = false;
+    private int textSize;
+
+    public CounterImage textSize(int textSize) {
+        this.textSize = textSize;
+        return this;
+    }
+
+    public CounterImage borderColor(int borderColor) {
+        this.borderColor = borderColor;
+        return this;
+    }
+
+    public CounterImage countString(String countString) {
+        this.countString = countString;
+        return this;
+    }
+
+    public void update() {
+        warmUpEverything();
+        post(this::invalidate);
+    }
+
+    public CounterImage(Context context) {
+        super(context);
+        init();
+    }
+
+    public CounterImage(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init();
+    }
+
+    public CounterImage(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init();
+    }
+
+    private void init() {
+        countTextPaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
+        countTextPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
+        countTextPaint.setColor(Theme.getColor(Theme.key_chats_unreadCounterText));
+        countPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        countPaint.setColor(Color.RED);
+        countPaintStroke = new Paint(Paint.ANTI_ALIAS_FLAG);
+        countPaintStroke.setStyle(Paint.Style.STROKE);
+        countPaintStroke.setStrokeWidth(2);
+        warmUpEverything();
+    }
+
+    private void warmUpEverything() {
+        countTextPaint.setTextSize(dp(textSize));
+        countPaintStroke.setColor(borderColor);
+        countWidth = Math.max(dp(9), (int) Math.ceil(countTextPaint.measureText(countString)));
+        countLayout = new StaticLayout(countString, countTextPaint, countWidth, Layout.Alignment.ALIGN_CENTER, 1.0f, 0.0f, false);
+        draw = !isEmpty(countString);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        if (draw) {
+            centreX = getX() + getWidth() * 0.5f;
+            centreY = getY() + getHeight() * 0.5f;
+
+            Drawable drawable = getDrawable();
+            int countLeft = Math.round(centreX + (drawable.getIntrinsicWidth() * 0.45f));// + AndroidUtilities.dp(len > 2 ? 2 : 4));
+            int countTop = Math.round(centreY - dp(3.25f));
+            int x = countLeft - dp(3.25f);
+            rect.set(x, countTop, x + countWidth + dp(8), countTop + dp(17));
+            canvas.drawRoundRect(rect, 8.5f * AndroidUtilities.density, 8.5f * AndroidUtilities.density, countPaint);
+            canvas.drawRoundRect(rect, 8.5f * AndroidUtilities.density, 8.5f * AndroidUtilities.density, countPaintStroke);
+            canvas.save();
+            int len = countString.length();
+            //canvas.translate(countLeft + dp(len > 2 ? 0.125f : 0.5f), countTop + dp(1.90f));
+            canvas.translate(countLeft + dp(len > 2 ? 0.125f : 0.5f), countTop + ((rect.height() - dp(textSize)) * 0.5f) - dp(0.25f));
+            countLayout.draw(canvas);
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/PlusPagerSlidingTabStrip.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/PlusPagerSlidingTabStrip.java
index 9d145d2a4..8978181a3 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/PlusPagerSlidingTabStrip.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/PlusPagerSlidingTabStrip.java
@@ -24,24 +24,26 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.graphics.*;
+import android.graphics.Canvas;
+import android.graphics.Paint;
 import android.graphics.Paint.Style;
-import android.graphics.drawable.Drawable;
+import android.graphics.PorterDuff;
+import android.graphics.Typeface;
 import android.os.Build;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.v4.view.ViewPager;
 import android.support.v4.view.ViewPager.OnPageChangeListener;
-import android.text.Layout;
-import android.text.StaticLayout;
-import android.text.TextPaint;
-import android.text.TextUtils;
-import android.util.AttributeSet;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewTreeObserver.OnGlobalLayoutListener;
-import android.widget.*;
+import android.widget.HorizontalScrollView;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.ApplicationLoader;
 import io.bettergram.telegram.messenger.FileLog;
@@ -242,7 +244,7 @@ private void addTextTabWithCounter(final int position, String title) {
 
     private void addIconTabWithCounter(final int position, int resId) {
         CounterImage tab = new CounterImage(getContext());
-        //tab.setBackgroundResource(btnBgRes);
+        tab.textSize(11).borderColor(Theme.getColor(Theme.key_actionBarDefault)).update();
         tab.setImageResource(resId);
         //Log.e(TAG, "addIconTabWithCounter position " + position + " pager.getCurrentItem() " + pager.getCurrentItem());
         tab.setColorFilter(position == pager.getCurrentItem() ? tabTextIconSelectedColor : tabTextIconUnselectedColor, PorterDuff.Mode.SRC_IN);
@@ -252,7 +254,6 @@ private void addIconTabWithCounter(final int position, int resId) {
 
     public void addTabWithCounter(final int position, View view) {
         RelativeLayout tab = new RelativeLayout(getContext());
-        tab.setClipChildren(false);
         tab.setFocusable(true);
 
         tabsContainer.addView(tab, tabShouldExpand ? expandedTabLayoutParams : defaultTabLayoutParams);
@@ -327,10 +328,10 @@ public void updateCounter(int position, int count, boolean allMuted, boolean for
                 if (count > 0) {
                     //tv.setVisibility(VISIBLE);
                     //tv.setText(String.format("%s", Counter.format(count)));
-                    img.setCountString(String.format("%s", Counter.format(count)));
+                    img.countString(String.format("%s", Counter.format(count))).update();
                 } else {
                     //tv.setVisibility(INVISIBLE);
-                    img.setCountString("");
+                    img.countString(Strings.EMPTY).update();
                 }
                 if (force) {
                     //tv.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 11);
@@ -347,9 +348,11 @@ private void updateTabStyles() {
 
             tab.setPadding(0, 0, 0, 0);
             if (tabShouldExpand) {
-                if (tab.getLayoutParams() != expandedTabLayoutParams) tab.setLayoutParams(expandedTabLayoutParams);
+                if (tab.getLayoutParams() != expandedTabLayoutParams)
+                    tab.setLayoutParams(expandedTabLayoutParams);
             } else {
-                if (tab.getLayoutParams() != defaultTabLayoutParams) tab.setLayoutParams(defaultTabLayoutParams);
+                if (tab.getLayoutParams() != defaultTabLayoutParams)
+                    tab.setLayoutParams(defaultTabLayoutParams);
                 View view = ((RelativeLayout) tabsContainer.getChildAt(i)).getChildAt(0);
                 if (view != null) {
                     view.setPadding(tabPadding, 0, tabPadding, 0);
@@ -725,126 +728,4 @@ public SavedState createFromParcel(Parcel in) {
         };
     }
 
-//    class CircularTextView extends TextView {
-//
-//        int solidColor;
-//
-//        public CircularTextView(Context context) {
-//            super(context);
-//        }
-//
-//        public CircularTextView(Context context, AttributeSet attrs) {
-//            super(context, attrs);
-//        }
-//
-//        public CircularTextView(Context context, AttributeSet attrs, int defStyleAttr) {
-//            super(context, attrs, defStyleAttr);
-//        }
-//
-//        @Override
-//        public void draw(Canvas canvas) {
-//            if (getBackground() == null ||
-//                    !(getBackground() != null
-//                            && getBackground() instanceof ShapeDrawable
-//                            && ((ShapeDrawable) getBackground()).getShape() instanceof CurvedSidesShape
-//                    )) {
-//                ShapeDrawable curvedSidesShape = new ShapeDrawable(new CurvedSidesShape());
-//                curvedSidesShape.setIntrinsicWidth(getWidth());
-//                curvedSidesShape.setIntrinsicHeight(getHeight());
-//                curvedSidesShape.getPaint().setColor(Color.RED);
-//                setBackground(curvedSidesShape);
-//            }
-//            super.draw(canvas);
-//        }
-//
-//        public void setSolidColor(int color) {
-//            solidColor = color;
-//        }
-//    }
-//
-//    class CurvedSidesShape extends RectShape {
-//
-//        @Override
-//        public void draw(Canvas canvas, Paint paint) {
-//            Path path = new Path();
-//            path.addRoundRect(rect(), rect().height(), rect().height(), Path.Direction.CW);
-//            canvas.drawPath(path, paint);
-//        }
-//    }
-
-    class CounterImage extends ImageButton {
-
-        TextPaint countTextPaint;
-        Paint countPaint;
-        Paint countPaintStroke;
-        StaticLayout countLayout;
-        RectF rect = new RectF();
-        int countWidth;
-        float centreX, centreY;
-        String countString = Strings.EMPTY;
-        boolean draw_count = true;
-
-        public void setCountString(String countString) {
-            this.countString = countString;
-            draw_count = !TextUtils.isEmpty(countString);
-            warmUpText();
-            invalidate();
-        }
-
-        public CounterImage(Context context) {
-            super(context);
-            init();
-        }
-
-        public CounterImage(Context context, AttributeSet attrs) {
-            super(context, attrs);
-            init();
-        }
-
-        public CounterImage(Context context, AttributeSet attrs, int defStyleAttr) {
-            super(context, attrs, defStyleAttr);
-            init();
-        }
-
-        private void init() {
-            countTextPaint = new TextPaint(TextPaint.ANTI_ALIAS_FLAG);
-            countTextPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-            countTextPaint.setTextSize(AndroidUtilities.dp(11));
-            countTextPaint.setColor(Theme.getColor(Theme.key_chats_unreadCounterText));
-            countPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-            countPaint.setColor(Color.RED);
-            countPaintStroke = new Paint(Paint.ANTI_ALIAS_FLAG);
-            countPaintStroke.setStyle(Paint.Style.STROKE);
-            countPaintStroke.setColor(Theme.getColor(Theme.key_actionBarDefault));
-            countPaintStroke.setStrokeWidth(2);
-            warmUpText();
-        }
-
-        private void warmUpText() {
-            countWidth = Math.max(AndroidUtilities.dp(9), (int) Math.ceil(countTextPaint.measureText(countString)));
-            countLayout = new StaticLayout(countString, countTextPaint, countWidth, Layout.Alignment.ALIGN_CENTER, 1.0f, 0.0f, false);
-        }
-
-        @Override
-        protected void onDraw(Canvas canvas) {
-            super.onDraw(canvas);
-
-            if (draw_count) {
-                centreX = getX() + getWidth() * 0.5f;
-                centreY = getY() + getHeight() * 0.5f;
-
-                Drawable drawable = getDrawable();
-                int countLeft = Math.round(centreX + (drawable.getIntrinsicWidth() * 0.45f));// + AndroidUtilities.dp(len > 2 ? 2 : 4));
-                int countTop = Math.round(centreY - AndroidUtilities.dp(3.25f));
-                int x = countLeft - AndroidUtilities.dp(3.25f);
-                rect.set(x, countTop, x + countWidth + AndroidUtilities.dp(8), countTop + AndroidUtilities.dp(17));
-                canvas.drawRoundRect(rect, 8.5f * AndroidUtilities.density, 8.5f * AndroidUtilities.density, countPaint);
-                canvas.drawRoundRect(rect, 8.5f * AndroidUtilities.density, 8.5f * AndroidUtilities.density, countPaintStroke);
-                canvas.save();
-                int len = countString.length();
-                canvas.translate(countLeft + AndroidUtilities.dp(len > 2 ? 0.125f : 0.5f), countTop + AndroidUtilities.dp(1.90f));
-                countLayout.draw(canvas);
-            }
-        }
-    }
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/WrappedDrawable.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/WrappedDrawable.java
new file mode 100644
index 000000000..e52c02066
--- /dev/null
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/WrappedDrawable.java
@@ -0,0 +1,84 @@
+package io.bettergram.telegram.ui.Components;
+
+import android.graphics.Canvas;
+import android.graphics.ColorFilter;
+import android.graphics.PixelFormat;
+import android.graphics.drawable.Drawable;
+
+/**
+ * Created by ceph3us on 23.05.17.
+ * file belong to pl.ceph3us.base.android.drawables
+ * this class wraps drawable and forwards draw canvas
+ * on it wrapped instance by using its defined bounds
+ */
+public class WrappedDrawable extends Drawable {
+
+    private final Drawable _drawable;
+
+    protected Drawable getDrawable() {
+        return _drawable;
+    }
+
+    public WrappedDrawable(Drawable drawable) {
+        super();
+        _drawable = drawable;
+    }
+
+    @Override
+    public void setBounds(int left, int top, int right, int bottom) {
+        //update bounds to get correctly
+        super.setBounds(left, top, right, bottom);
+        Drawable drawable = getDrawable();
+        if (drawable != null) {
+            drawable.setBounds(left, top, right, bottom);
+        }
+    }
+
+    @Override
+    public void setAlpha(int alpha) {
+        Drawable drawable = getDrawable();
+        if (drawable != null) {
+            drawable.setAlpha(alpha);
+        }
+    }
+
+    @Override
+    public void setColorFilter(ColorFilter colorFilter) {
+        Drawable drawable = getDrawable();
+        if (drawable != null) {
+            drawable.setColorFilter(colorFilter);
+        }
+    }
+
+    @Override
+    public int getOpacity() {
+        Drawable drawable = getDrawable();
+        return drawable != null
+                ? drawable.getOpacity()
+                : PixelFormat.UNKNOWN;
+    }
+
+    @Override
+    public void draw(Canvas canvas) {
+        Drawable drawable = getDrawable();
+        if (drawable != null) {
+            drawable.draw(canvas);
+        }
+    }
+
+    @Override
+    public int getIntrinsicWidth() {
+        Drawable drawable = getDrawable();
+        return drawable != null
+                ? drawable.getBounds().width()
+                : 0;
+    }
+
+    @Override
+    public int getIntrinsicHeight() {
+        Drawable drawable = getDrawable();
+        return drawable != null ?
+                drawable.getBounds().height()
+                : 0;
+    }
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index 6c6339f52..edfbb1a7a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -249,7 +249,7 @@ public boolean onFragmentCreate() {
 
             NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateToLatestApiVersion);
             NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.currencySearchResultsUpdate);
-            NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateCurrenyDataToBackup);
+            NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.updateCurrencyDataToBackup);
         }
 
         if (!dialogsLoaded[currentAccount]) {
@@ -295,7 +295,7 @@ public void onFragmentDestroy() {
 
             NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.updateToLatestApiVersion);
             NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.currencySearchResultsUpdate);
-            NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.updateCurrenyDataToBackup);
+            NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.updateCurrencyDataToBackup);
         }
         if (commentView != null) {
             commentView.onDestroy();
@@ -347,7 +347,7 @@ public void onSearchExpand() {
             public boolean canCollapseSearch() {
                 if (currentBottomTabPosition == 1) {
                     cryptoAdapter.setSearchMode(false);
-                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrenyDataToBackup);
+                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyDataToBackup);
                 }
                 if (switchItem != null) {
                     switchItem.setVisibility(View.VISIBLE);
@@ -1561,11 +1561,11 @@ public void onMessageSend(CharSequence message) {
                 if (newsAdapter == null) {
                     newsAdapter = new NewsAdapter(activity);
                 }
-                newsAdapter.startService(activity);
+                newsAdapter.startService(activity, true);
                 if (videoAdapter == null) {
                     videoAdapter = new YouTubePlayerAdapter(activity);
                 }
-                videoAdapter.startService(activity);
+                videoAdapter.startService(activity, true);
                 resourcesAdapter.startService(activity);
             }
         });
@@ -1598,12 +1598,14 @@ public void onMessageSend(CharSequence message) {
                                 break;
                             case 2:
                                 if (!(listView.getAdapter() instanceof NewsAdapter)) {
+                                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.openBottombarCounter, "news");
                                     listView.setAdapter(newsAdapter);
                                     ptrLayout.setOnRefreshListener(newsAdapter);
                                 }
                                 break;
                             case 3:
                                 if (!(listView.getAdapter() instanceof YouTubePlayerAdapter)) {
+                                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.openBottombarCounter, "video");
                                     listView.setAdapter(videoAdapter);
                                     ptrLayout.setOnRefreshListener(videoAdapter);
                                 }
@@ -2036,7 +2038,7 @@ public void onRequestPermissionsResultFragment(int requestCode, String[] permiss
     @Override
     @SuppressWarnings("unchecked")
     public void didReceivedNotification(int id, int account, Object... args) {
-        if (id == NotificationCenter.currencySearchResultsUpdate || id == NotificationCenter.updateCurrenyDataToBackup) {
+        if (id == NotificationCenter.currencySearchResultsUpdate || id == NotificationCenter.updateCurrencyDataToBackup) {
             ptrLayout.post(() -> ptrLayout.setRefreshing(false));
         } else if (id == NotificationCenter.dialogsNeedReload) {
             checkUnreadCount(true);
diff --git a/TMessagesProj/src/main/java/io/bettergram/utils/Time.java b/TMessagesProj/src/main/java/io/bettergram/utils/Time.java
index cfa824c88..ce91c1d37 100644
--- a/TMessagesProj/src/main/java/io/bettergram/utils/Time.java
+++ b/TMessagesProj/src/main/java/io/bettergram/utils/Time.java
@@ -1,6 +1,47 @@
 package io.bettergram.utils;
 
+import java.util.Calendar;
+import java.util.Date;
+
 public class Time {
+    private static final int SECOND_MILLIS = 1000;
+    private static final int MINUTE_MILLIS = 60 * SECOND_MILLIS;
+    private static final int HOUR_MILLIS = 60 * MINUTE_MILLIS;
+    private static final int DAY_MILLIS = 24 * HOUR_MILLIS;
+
+    private static Date currentDate() {
+        Calendar calendar = Calendar.getInstance();
+        return calendar.getTime();
+    }
+
+    public static String getTimeAgo(Date date) {
+        long time = date.getTime();
+        if (time < 1000000000000L) {
+            time *= 1000;
+        }
+
+        long now = currentDate().getTime();
+        if (time > now || time <= 0) {
+            return "in the future";
+        }
+
+        final long diff = now - time;
+        if (diff < MINUTE_MILLIS) {
+            return "moments ago";
+        } else if (diff < 2 * MINUTE_MILLIS) {
+            return "a minute ago";
+        } else if (diff < 60 * MINUTE_MILLIS) {
+            return diff / MINUTE_MILLIS + " minutes ago";
+        } else if (diff < 2 * HOUR_MILLIS) {
+            return "An hour ago";
+        } else if (diff < 24 * HOUR_MILLIS) {
+            return diff / HOUR_MILLIS + " hours ago";
+        } else if (diff < 48 * HOUR_MILLIS) {
+            return "yesterday";
+        } else {
+            return diff / DAY_MILLIS + " days ago";
+        }
+    }
 
     public static int currentMillis() {
         return (int) (System.currentTimeMillis() % 0x7fffffff);
