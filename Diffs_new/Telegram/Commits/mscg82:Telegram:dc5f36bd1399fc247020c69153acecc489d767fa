diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 105028c2d..9593c1a51 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -4514,12 +4514,14 @@ private void showInAppNotification(MessageObject messageObject) {
             VibrationOptions.VibrationSpeed speed = VibrationOptions.VibrationSpeed.getDefault();
             int vibrationCount = VibrationOptions.DEFAULT_VIBRATION_COUNT;
             if(needVibrate) {
+                int speedValueOverride = preferences.getInt("VibrationSpeed_" + dialog_id, -1);
+                int vibrationCountOverride = preferences.getInt("VibrationCount_" + dialog_id, -1);
                 if (chat_id != 0) {
-                    speed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
-                    vibrationCount = preferences.getInt("VibrationCountGroup", vibrationCount);
+                    speed = VibrationOptions.VibrationSpeed.fromValue(speedValueOverride != -1 ? speedValueOverride : preferences.getInt("VibrationSpeedGroup", 0));
+                    vibrationCount = vibrationCountOverride != -1 ? vibrationCountOverride : preferences.getInt("VibrationCountGroup", vibrationCount);
                 } else if (user_id != 0) {
-                    speed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
-                    vibrationCount = preferences.getInt("VibrationCount", vibrationCount);
+                    speed = VibrationOptions.VibrationSpeed.fromValue(speedValueOverride != -1 ? speedValueOverride : preferences.getInt("VibrationSpeed", 0));
+                    vibrationCount = vibrationCountOverride != -1 ? vibrationCountOverride : preferences.getInt("VibrationCount", vibrationCount);
                 }
             }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
index b056d792d..493d53f83 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
@@ -44,6 +44,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.objects.VibrationOptions;
 import org.telegram.ui.Cells.ChatOrUserCell;
 import org.telegram.ui.Views.AvatarUpdater;
 import org.telegram.ui.Views.BackupImageView;
@@ -71,6 +72,8 @@
     private int settingsSectionRow;
     private int settingsNotificationsRow;
     private int settingsVibrateRow;
+    private int settingsVibrationSpeedRow;
+    private int settingsVibrationCountRow;
     private int settingsSoundRow;
     private int sharedMediaSectionRow;
     private int sharedMediaRow;
@@ -112,6 +115,8 @@ private void updateRowsIds() {
         settingsSectionRow = rowCount++;
         settingsNotificationsRow = rowCount++;
         settingsVibrateRow = rowCount++;
+        settingsVibrationSpeedRow = rowCount++;
+        settingsVibrationCountRow = rowCount++;
         settingsSoundRow = rowCount++;
         sharedMediaSectionRow = rowCount++;
         sharedMediaRow = rowCount++;
@@ -256,7 +261,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                             builder.setTitle(LocaleController.getString("Vibrate", R.string.Vibrate));
                         else
                             builder.setTitle(LocaleController.getString("Notifications", R.string.Notifications));
-                        builder.setSingleChoiceItems(new CharSequence[] {
+                        builder.setSingleChoiceItems(new CharSequence[]{
                                 LocaleController.getString("Default", R.string.Default),
                                 LocaleController.getString("Enabled", R.string.Enabled),
                                 LocaleController.getString("Disabled", R.string.Disabled)
@@ -265,7 +270,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                             public void onClick(DialogInterface dialog, int which) {
                                 SharedPreferences.Editor editor = preferences.edit();
 
-                                if(which != 0)
+                                if (which != 0)
                                     editor.putInt(key, which);
                                 else
                                     editor.remove(key);
@@ -279,6 +284,78 @@ public void onClick(DialogInterface dialog, int which) {
                         });
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         builder.show().setCanceledOnTouchOutside(true);
+                    } else if(i == settingsVibrationSpeedRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final String key = "VibrationSpeed_" + (-chat_id);
+
+                        VibrationOptions.VibrationSpeed[] vibrationSpeeds = VibrationOptions.VibrationSpeed.values();
+                        String speeds[] = new String[vibrationSpeeds.length + 1];
+                        speeds[0] = LocaleController.getString("Default", R.string.Default);
+                        for(int j = 0, vl = vibrationSpeeds.length; j < vl; j++) {
+                            VibrationOptions.VibrationSpeed speedVal = vibrationSpeeds[j];
+                            speeds[j + 1] = LocaleController.getString(speedVal.getLocaleKey(), speedVal.getResourceId());
+                        }
+                        int currentSpeedIndex = 0;
+
+                        int storedValue = preferences.getInt(key, -1);
+                        if(storedValue != -1) {
+                            VibrationOptions.VibrationSpeed currentSpeed = VibrationOptions.VibrationSpeed.fromValue(storedValue);
+                            currentSpeedIndex = currentSpeed.getValue() + 1; // index 0 is used to store the "Default" string
+                        }
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity)
+                                .setTitle(LocaleController.getString("VibrateSpeedTitle", R.string.VibrateSpeedTitle))
+                                .setSingleChoiceItems(speeds, currentSpeedIndex, new DialogInterface.OnClickListener() {
+                                    @Override
+                                    public void onClick(DialogInterface dialog, int which) {
+                                        SharedPreferences.Editor editor = preferences.edit();
+                                        if(which != 0) {
+                                            which--;
+                                            VibrationOptions.VibrationSpeed selectedSpeed = VibrationOptions.VibrationSpeed.fromValue(which);
+
+                                            editor.putInt(key, selectedSpeed.getValue());
+                                        }
+                                        else
+                                            editor.remove(key);
+
+                                        editor.commit();
+                                        listView.invalidateViews();
+
+                                        dialog.dismiss();
+                                    }
+                                })
+                                .setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
+                    } else if(i == settingsVibrationCountRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final String key = "VibrationCount_"  + (-chat_id);
+
+                        String counts[] = new String[11];
+                        counts[0] = LocaleController.getString("Default", R.string.Default);
+                        for(int j = 1, vl = counts.length; j < vl; j++)
+                            counts[j] = String.valueOf(j);
+
+                        int count = preferences.getInt(key, 0);
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
+                                .setTitle(LocaleController.getString("VibrateCountTitle", R.string.VibrateCountTitle))
+                                .setSingleChoiceItems(counts, count, new DialogInterface.OnClickListener() {
+                                    @Override
+                                    public void onClick(DialogInterface dialog, int which) {
+                                        SharedPreferences.Editor editor = preferences.edit();
+                                        if(which != 0) {
+                                            editor.putInt(key, which);
+                                        }
+                                        else
+                                            editor.remove(key);
+
+                                        editor.commit();
+                                        listView.invalidateViews();
+
+                                        dialog.dismiss();
+                                    }
+                                }).setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
                     }
                 }
             });
@@ -568,7 +645,7 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return i == settingsNotificationsRow || i == settingsSoundRow || i == sharedMediaRow || i > membersSectionRow && i <= addMemberRow || i == settingsVibrateRow;
+            return i == settingsNotificationsRow || i == settingsSoundRow || i == sharedMediaRow || i > membersSectionRow && i <= addMemberRow || i == settingsVibrateRow || i == settingsVibrationSpeedRow || i == settingsVibrationCountRow;
         }
 
         @Override
@@ -735,6 +812,28 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     } else if (value == 2) {
                         detailTextView.setText(LocaleController.getString("Disabled", R.string.Disabled));
                     }
+                } else if(i == settingsVibrationSpeedRow) {
+                    textView.setText(LocaleController.getString("VibrateSpeed", R.string.VibrateSpeed));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int storedValue = preferences.getInt("VibrationSpeed_" + (-chat_id), -1);
+                    if(storedValue != -1) {
+                        VibrationOptions.VibrationSpeed speed = VibrationOptions.VibrationSpeed.fromValue(storedValue);
+                        detailTextView.setText(LocaleController.getString(speed.getLocaleKey(), speed.getResourceId()));
+                    }
+                    else
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+
+                } else if(i == settingsVibrationCountRow) {
+                    textView.setText(LocaleController.getString("VibrateCount", R.string.VibrateCount));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int count = preferences.getInt("VibrationCount_"  + (-chat_id), -1);
+                    if(count != -1)
+                        detailTextView.setText(String.valueOf(count));
+                    else
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+
                 }
             } else if (type == 3) {
                 TLRPC.TL_chatParticipant part = info.participants.get(sortedUsers.get(i - membersSectionRow - 1));
@@ -812,7 +911,7 @@ public int getItemViewType(int i) {
                 return 0;
             } else if (i == settingsSectionRow || i == sharedMediaSectionRow || i == membersSectionRow) {
                 return 1;
-            } else if (i == sharedMediaRow || i == settingsVibrateRow || i == settingsNotificationsRow) {
+            } else if (i == sharedMediaRow || i == settingsVibrateRow || i == settingsNotificationsRow || i == settingsVibrationSpeedRow || i == settingsVibrationCountRow) {
                 return 2;
             } else if (i == settingsSoundRow) {
                 return 6;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
index df035a07b..118a575f0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
@@ -48,6 +48,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
 import org.telegram.messenger.Utilities;
+import org.telegram.objects.VibrationOptions;
 import org.telegram.ui.Views.BackupImageView;
 import org.telegram.ui.Views.BaseFragment;
 import org.telegram.ui.Views.IdenticonView;
@@ -79,6 +80,8 @@
     private int settingsKeyRow;
     private int settingsNotificationsRow;
     private int settingsVibrateRow;
+    private int settingsVibrationSpeedRow;
+    private int settingsVibrationCountRow;
     private int settingsSoundRow;
     private int sharedMediaSectionRow;
     private int sharedMediaRow;
@@ -126,6 +129,8 @@ private void updateRowsIds() {
         }
         settingsNotificationsRow = rowCount++;
         settingsVibrateRow = rowCount++;
+        settingsVibrationSpeedRow = rowCount++;
+        settingsVibrationCountRow = rowCount++;
         settingsSoundRow = rowCount++;
         sharedMediaSectionRow = rowCount++;
         sharedMediaRow = rowCount++;
@@ -194,16 +199,16 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                             builder.setTitle(LocaleController.getString("Vibrate", R.string.Vibrate));
                         else
                             builder.setTitle(LocaleController.getString("Notifications", R.string.Notifications));
-                        builder.setSingleChoiceItems(new CharSequence[] {
+                        builder.setSingleChoiceItems(new CharSequence[]{
                                 LocaleController.getString("Default", R.string.Default),
                                 LocaleController.getString("Enabled", R.string.Enabled),
                                 LocaleController.getString("Disabled", R.string.Disabled)
-                        },currentValue, new DialogInterface.OnClickListener() {
+                        }, currentValue, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
                                 SharedPreferences.Editor editor = preferences.edit();
 
-                                if(which != 0)
+                                if (which != 0)
                                     editor.putInt(key, which);
                                 else
                                     editor.remove(key);
@@ -217,6 +222,88 @@ public void onClick(DialogInterface dialog, int which) {
                         });
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         builder.show().setCanceledOnTouchOutside(true);
+                    } else if(i == settingsVibrationSpeedRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final String key;
+                        if (dialog_id == 0) {
+                            key = "VibrationSpeed_" + user_id;
+                        } else {
+                            key = "VibrationSpeed_" + dialog_id;
+                        }
+
+                        VibrationOptions.VibrationSpeed[] vibrationSpeeds = VibrationOptions.VibrationSpeed.values();
+                        String speeds[] = new String[vibrationSpeeds.length + 1];
+                        speeds[0] = LocaleController.getString("Default", R.string.Default);
+                        for(int j = 0, vl = vibrationSpeeds.length; j < vl; j++) {
+                            VibrationOptions.VibrationSpeed speedVal = vibrationSpeeds[j];
+                            speeds[j + 1] = LocaleController.getString(speedVal.getLocaleKey(), speedVal.getResourceId());
+                        }
+                        int currentSpeedIndex = 0;
+
+                        int storedValue = preferences.getInt(key, -1);
+                        if(storedValue != -1) {
+                            VibrationOptions.VibrationSpeed currentSpeed = VibrationOptions.VibrationSpeed.fromValue(storedValue);
+                            currentSpeedIndex = currentSpeed.getValue() + 1; // index 0 is used to store the "Default" string
+                        }
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity)
+                            .setTitle(LocaleController.getString("VibrateSpeedTitle", R.string.VibrateSpeedTitle))
+                            .setSingleChoiceItems(speeds, currentSpeedIndex, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    SharedPreferences.Editor editor = preferences.edit();
+                                    if(which != 0) {
+                                        which--;
+                                        VibrationOptions.VibrationSpeed selectedSpeed = VibrationOptions.VibrationSpeed.fromValue(which);
+
+                                        editor.putInt(key, selectedSpeed.getValue());
+                                    }
+                                    else
+                                        editor.remove(key);
+
+                                    editor.commit();
+                                    listView.invalidateViews();
+
+                                    dialog.dismiss();
+                                }
+                            })
+                            .setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
+                    } else if(i == settingsVibrationCountRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final String key;
+                        if (dialog_id == 0) {
+                            key = "VibrationCount_" + user_id;
+                        } else {
+                            key = "VibrationCount_" + dialog_id;
+                        }
+
+                        String counts[] = new String[11];
+                        counts[0] = LocaleController.getString("Default", R.string.Default);
+                        for(int j = 1, vl = counts.length; j < vl; j++)
+                            counts[j] = String.valueOf(j);
+
+                        int count = preferences.getInt(key, 0);
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
+                            .setTitle(LocaleController.getString("VibrateCountTitle", R.string.VibrateCountTitle))
+                            .setSingleChoiceItems(counts, count, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    SharedPreferences.Editor editor = preferences.edit();
+                                    if(which != 0) {
+                                        editor.putInt(key, which);
+                                    }
+                                    else
+                                        editor.remove(key);
+
+                                    editor.commit();
+                                    listView.invalidateViews();
+
+                                    dialog.dismiss();
+                                }
+                            }).setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
                     } else if (i == settingsSoundRow) {
                         try {
                             Intent tmpIntent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
@@ -639,7 +726,7 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return i == phoneRow || i == settingsTimerRow || i == settingsKeyRow || i == settingsNotificationsRow || i == sharedMediaRow || i == settingsSoundRow || i == settingsVibrateRow;
+            return i == phoneRow || i == settingsTimerRow || i == settingsKeyRow || i == settingsNotificationsRow || i == sharedMediaRow || i == settingsSoundRow || i == settingsVibrateRow || i == settingsVibrationSpeedRow || i == settingsVibrationCountRow;
         }
 
         @Override
@@ -874,6 +961,42 @@ public void onClick(View view) {
                     } else if (value == 2) {
                         detailTextView.setText(LocaleController.getString("Disabled", R.string.Disabled));
                     }
+                } else if(i == settingsVibrationSpeedRow) {
+                    String key;
+                    if (dialog_id == 0) {
+                        key = "VibrationSpeed_" + user_id;
+                    } else {
+                        key = "VibrationSpeed_" + dialog_id;
+                    }
+
+                    textView.setText(LocaleController.getString("VibrateSpeed", R.string.VibrateSpeed));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int storedValue = preferences.getInt(key, -1);
+                    if(storedValue != -1) {
+                        VibrationOptions.VibrationSpeed speed = VibrationOptions.VibrationSpeed.fromValue(storedValue);
+                        detailTextView.setText(LocaleController.getString(speed.getLocaleKey(), speed.getResourceId()));
+                    }
+                    else
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+
+                } else if(i == settingsVibrationCountRow) {
+                    String key;
+                    if (dialog_id == 0) {
+                        key = "VibrationCount_" + user_id;
+                    } else {
+                        key = "VibrationCount_" + dialog_id;
+                    }
+
+                    textView.setText(LocaleController.getString("VibrateCount", R.string.VibrateCount));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int count = preferences.getInt(key, -1);
+                    if(count != -1)
+                        detailTextView.setText(String.valueOf(count));
+                    else
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+
                 }
             } else if (type == 4) {
                 if (view == null) {
@@ -920,7 +1043,7 @@ public int getItemViewType(int i) {
                 return 1;
             } else if (i == phoneRow) {
                 return 2;
-            } else if (i == sharedMediaRow || i == settingsTimerRow || i == settingsNotificationsRow || i == settingsVibrateRow) {
+            } else if (i == sharedMediaRow || i == settingsTimerRow || i == settingsNotificationsRow || i == settingsVibrateRow || i == settingsVibrationSpeedRow || i == settingsVibrationCountRow) {
                 return 3;
             } else if (i == settingsKeyRow) {
                 return 4;
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 3d2a19dc5..2673401b8 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -238,7 +238,7 @@
     <string name="VibrateSpeedFast">Veloce</string>
     <string name="VibrateSpeedMedium">Media</string>
     <string name="VibrateSpeedSlow">Lenta</string>
-    <string name="VibrateSpeedDefault">Default</string>
+    <string name="VibrateSpeedDefault">Standard</string>
     <string name="VibrateCount">Numero di vibrazioni</string>
     <string name="VibrateCountTitle">Seleziona il numero di vibrazioni</string>
     <string name="InAppPreview">Anteprima in-app</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 55c075e24..96ba11c09 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -238,7 +238,7 @@
     <string name="VibrateSpeedFast">Fast</string>
     <string name="VibrateSpeedMedium">Medium</string>
     <string name="VibrateSpeedSlow">Slow</string>
-    <string name="VibrateSpeedDefault">Default</string>
+    <string name="VibrateSpeedDefault">Standard</string>
     <string name="VibrateCount">Vibrations number</string>
     <string name="VibrateCountTitle">Pick the number fo vibrations</string>
     <string name="InAppPreview">In-App Preview</string>
