diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
index 122031ab8..42ddb9889 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ApplicationLoader.java
@@ -22,7 +22,6 @@
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.os.AsyncTask;
-import android.os.Build;
 import android.os.Handler;
 import android.os.PowerManager;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index fc5ae78d8..fc3b36bb6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -210,81 +210,6 @@ public ChatActivity(Bundle args) {
         super(args);
     }
 
-        @Override
-        public boolean onPrepareActionMode(ActionMode actionMode, Menu menu) {
-            return false;
-        }
-
-        @Override
-        public boolean onActionItemClicked(ActionMode actionMode, MenuItem menuItem) {
-            switch (menuItem.getItemId()) {
-                case copy: {
-                    String str = "";
-                    ArrayList<Integer> ids = new ArrayList<Integer>(selectedMessagesCanCopyIds.keySet());
-                    if (currentEncryptedChat == null) {
-                        Collections.sort(ids);
-                    } else {
-                        Collections.sort(ids, Collections.reverseOrder());
-                    }
-                    for (Integer id : ids) {
-                        MessageObject messageObject = selectedMessagesCanCopyIds.get(id);
-                        if (str.length() != 0) {
-                            str += "\n";
-                        }
-                        str += messageObject.messageOwner.message;
-                    }
-                    if (str.length() != 0) {
-                        if(android.os.Build.VERSION.SDK_INT < 11) {
-                            android.text.ClipboardManager clipboard = (android.text.ClipboardManager)parentActivity.getSystemService(Context.CLIPBOARD_SERVICE);
-                            clipboard.setText(str);
-                        } else {
-                            android.content.ClipboardManager clipboard = (android.content.ClipboardManager)parentActivity.getSystemService(Context.CLIPBOARD_SERVICE);
-                            android.content.ClipData clip = android.content.ClipData.newPlainText("label", str);
-                            clipboard.setPrimaryClip(clip);
-                        }
-                    }
-                    break;
-                }
-                case delete: {
-                    ArrayList<Integer> ids = new ArrayList<Integer>(selectedMessagesIds.keySet());
-                    ArrayList<Long> random_ids = null;
-                    if (currentEncryptedChat != null) {
-                        random_ids = new ArrayList<Long>();
-                        for (HashMap.Entry<Integer, MessageObject> entry : selectedMessagesIds.entrySet()) {
-                            MessageObject msg = entry.getValue();
-                            if (msg.messageOwner.random_id != 0 && msg.type != 10) {
-                                random_ids.add(msg.messageOwner.random_id);
-                            }
-                        }
-                    }
-                    MessagesController.getInstance().deleteMessages(ids, random_ids, currentEncryptedChat);
-                    break;
-                }
-                case forward: {
-                    MessagesActivity fragment = new MessagesActivity();
-                    fragment.selectAlertString = R.string.ForwardMessagesTo;
-                    fragment.selectAlertStringDesc = "ForwardMessagesTo";
-                    fragment.animationType = 1;
-                    Bundle args = new Bundle();
-                    args.putBoolean("onlySelect", true);
-                    args.putBoolean("serverOnly", true);
-                    fragment.setArguments(args);
-                    fragment.delegate = ChatActivity.this;
-                    ((LaunchActivity)parentActivity).presentFragment(fragment, "select_chat", false);
-                    break;
-                }
-            }
-            actionMode.finish();
-            return false;
-        }
-
-        @Override
-        public void onDestroyActionMode(ActionMode actionMode) {
-            mActionMode = null;
-            updateVisibleRows();
-        }
-    };
-
     @Override
     public boolean onFragmentCreate() {
         final int chatId = arguments.getInt("chat_id", 0);
@@ -3170,7 +3095,7 @@ private void processSelectedOption(int option) {
                 }
                 selectedObject = null;
             }
-        } else if (option == 5) {
+/*        } else if (option == 5) {
             if (selectedObject != null) {
 
                 String ObjectPath = "";
@@ -3213,7 +3138,7 @@ private void processSelectedOption(int option) {
                 shareIntent.setType(MimeType);
                 startActivity(Intent.createChooser(shareIntent, "Share with"));
                 selectedObject = null;
-            }
+            } */
         }
     }
 
