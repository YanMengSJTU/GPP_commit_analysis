diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
index 6e143e497..e9ff12efb 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
@@ -20,6 +20,7 @@
     public static final int venuesNeedReload = -1;
     public static final int postsNeedReload = -2;
     public static final int postRequestFinished = -3;
+    public static final int undefinedLocation = -4;
 
 
     private static int totalEvents = 1;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 7364c6c1f..ec544ca0c 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -10,6 +10,7 @@
 
 import android.app.Activity;
 import android.content.SharedPreferences;
+import android.location.Location;
 
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.dto.Post;
@@ -17,6 +18,7 @@
 import org.telegram.messenger.dto.Venue;
 import org.telegram.messenger.service.mock.PostServiceMock;
 import org.telegram.messenger.service.mock.VenueServiceMock;
+import org.telegram.ui.LocationActivityAragats;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -123,6 +125,12 @@ public void loadPosts(final int offset, final int count, boolean reload, boolean
             return;
         }
         loadingPosts = true;
+        Location location = LocationActivityAragats.getLastLocation();
+        if(location == null) {
+            loadingPosts = false;
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
+            return;
+        }
 //        NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
 
         //TODO here async  request
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index 39b8bb28b..86ae4257f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -738,7 +738,8 @@ public void run() {
         }
     }
 
-    private Location getLastLocation() {
+    //TODO method to get location
+    public static Location getLastLocation() {
         LocationManager lm = (LocationManager) ApplicationLoader.applicationContext.getSystemService(Context.LOCATION_SERVICE);
         List<String> providers = lm.getProviders(true);
         Location l = null;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index b106e5e55..e6061a8c4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -1041,6 +1041,7 @@ public boolean canOpenMenu() {
         ActionBarMenu menu = actionBar.createMenu();
 
         menuItem = menu.addItem(0, R.drawable.ic_ab_other);
+        //TODO-aragats
         menuItem.addSubItem(gallery_menu_showall, LocaleController.getString("ShowAllMedia", R.string.ShowAllMedia), 0);
         menuItem.addSubItem(gallery_menu_save, LocaleController.getString("SaveToGallery", R.string.SaveToGallery), 0);
         menuItem.addSubItem(gallery_menu_delete, LocaleController.getString("Delete", R.string.Delete), 0);
@@ -1102,6 +1103,10 @@ public void onClick(View v) {
                     } else if (currentFileLocation != null) {
                         f = FileLoader.getPathToAttach(currentFileLocation, avatarsUserId != 0);
                     }
+//
+//                    else if(currentPost != null) {
+//                        f = currentPost.getImage().getUrl();
+//                    }
 
                     if (f.exists()) {
                         Intent intent = new Intent(Intent.ACTION_SEND);
@@ -2184,11 +2189,7 @@ private void onPhotoShowNew(final Post post, final PlaceProviderObject object) {
 
         if (post != null) {
             imagesPostArr.add(post);
-
-            menuItem.showSubItem(gallery_menu_showall);
-//            else
-//            menuItem.hideSubItem(gallery_menu_showall);
-
+            menuItem.hideSubItem(gallery_menu_showall);
             setImageIndexPostNew(0, true);
         }
 
@@ -2610,26 +2611,26 @@ private void setImageIndexPostNew(int index, boolean init) {
         boolean sameImage = false;
 
         if (!imagesPostArr.isEmpty()) {
-            menuItem.showSubItem(gallery_menu_delete);
             if (currentIndex < 0 || currentIndex >= imagesPostArr.size()) {
                 closePhoto(false, false);
                 return;
             }
             currentPost = imagesPostArr.get(currentIndex);
 
-            nameTextView.setText("USER-Aragats");
+            //TODO name of venue (user) !!!
+            nameTextView.setText(currentPost.getVenue().getName());
             long date = currentPost.getCreatedDate();
             String dateString = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(new Date(date)), LocaleController.formatterDay.format(new Date(date)));
-
             dateTextView.setText(dateString);
+
             CharSequence caption = currentPost.getMessage();
             setCurrentCaption(caption);
 
+            //TODO  It is title 1 of 1
             if (totalImagesCount != 0 && !needSearchImageInArr) {
-
                 actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, (totalImagesCount - imagesPostArr.size()) + currentIndex + 1, totalImagesCount));
-
             }
+
 //            if (currentMessageObject.messageOwner.ttl != 0) {
 //                menuItem.hideSubItem(gallery_menu_save);
 //                shareButton.setVisibility(View.GONE);
@@ -2637,8 +2638,9 @@ private void setImageIndexPostNew(int index, boolean init) {
 //                menuItem.showSubItem(gallery_menu_save);
 //                shareButton.setVisibility(View.VISIBLE);
 //            }
+            menuItem.hideSubItem(gallery_menu_delete);
             menuItem.showSubItem(gallery_menu_save);
-            shareButton.setVisibility(View.VISIBLE);
+            shareButton.setVisibility(View.GONE);
         }
 
         if (currentPlaceObject != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 6ea8c1b15..a8de84d52 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -95,8 +95,6 @@
     private String searchString;
     private String openedPostId;
 
-    private MessagesActivityDelegate delegate;
-
     // Swipe Refresh Layout
     private SwipeRefreshLayout swipeRefreshLayout;
 
@@ -202,6 +200,7 @@ public boolean onFragmentCreate() {
 
         if (searchString == null) {
             //TODO learn NotificationCenter class especiallu case when post notification. There is different situations when notify when animation or not.
+            NotificationCenter.getInstance().addObserver(this, NotificationCenter.undefinedLocation);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.postRequestFinished);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.postsNeedReload);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.dialogsNeedReload);
@@ -231,6 +230,7 @@ public boolean onFragmentCreate() {
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
         if (searchString == null) {
+            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.undefinedLocation);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.postRequestFinished);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.postsNeedReload);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.dialogsNeedReload);
@@ -246,7 +246,6 @@ public void onFragmentDestroy() {
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.messageSendError);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.didSetPasscode);
         }
-        delegate = null;
     }
 
     @Override
@@ -485,18 +484,19 @@ public boolean onTouch(View v, MotionEvent event) {
         });
 
         TextView textView = new TextView(context);
-        textView.setText(LocaleController.getString("NoChats", R.string.NoChats));
+//        textView.setText(LocaleController.getString("NoChats", R.string.NoChats));
+        textView.setText("There are not recent posts around your.");
         textView.setTextColor(0xff959595);
         textView.setGravity(Gravity.CENTER);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
         emptyView.addView(textView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
 
         textView = new TextView(context);
-        String help = LocaleController.getString("NoChatsHelp", R.string.NoChatsHelp);
-        if (AndroidUtilities.isTablet() && !AndroidUtilities.isSmallTablet()) {
-            help = help.replace("\n", " ");
-        }
-        textView.setText(help);
+//        String help = LocaleController.getString("NoChatsHelp", R.string.NoChatsHelp);
+//        if (AndroidUtilities.isTablet() && !AndroidUtilities.isSmallTablet()) {
+//            help = help.replace("\n", " ");
+//        }
+        textView.setText("Please check whether your gps is enabled.");
         textView.setTextColor(0xff959595);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
         textView.setGravity(Gravity.CENTER);
@@ -667,8 +667,25 @@ public void onGlobalLayout() {
     @Override
     @SuppressWarnings("unchecked")
     public void didReceivedNotification(int id, Object... args) {
-        if (id == NotificationCenter.postRequestFinished) {
-            if(swipeRefreshLayout != null) {
+        if (id == NotificationCenter.undefinedLocation) {
+//            Toast.makeText(((Context) getParentActivity()), "Please, enable gps on your phone", Toast.LENGTH_SHORT).show();
+            if (swipeRefreshLayout != null) {
+                swipeRefreshLayout.setRefreshing(false);
+            }
+            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+            builder.setTitle("Whats going on?");
+            builder.setMessage("Please, enable gps on your phone.");
+            builder.setPositiveButton("OK", null);
+//            builder.setPositiveButton(LocaleController.getString("ClearButton", R.string.ClearButton).toUpperCase(), new DialogInterface.OnClickListener() {
+//                @Override
+//                public void onClick(DialogInterface dialogInterface, int i) {
+//                    postsSearchAdapter.clearRecentHashtags();
+//                }
+//            });
+            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+            showDialog(builder.create());
+        } else if (id == NotificationCenter.postRequestFinished) {
+            if (swipeRefreshLayout != null) {
                 swipeRefreshLayout.setRefreshing(false);
             }
         } else if (id == NotificationCenter.postsNeedReload) {
@@ -702,7 +719,7 @@ public void didReceivedNotification(int id, Object... args) {
                     FileLog.e("tmessages", e); //TODO fix it in other way?
                 }
             }
-            if(swipeRefreshLayout != null) {
+            if (swipeRefreshLayout != null) {
                 swipeRefreshLayout.setRefreshing(false);
             }
         } else if (id == NotificationCenter.emojiDidLoaded) {
@@ -780,17 +797,10 @@ private void updateVisibleRows(int mask) {
         }
     }
 
-    public void setDelegate(MessagesActivityDelegate delegate) {
-        this.delegate = delegate;
-    }
-
     public void setSearchString(String string) {
         searchString = string;
     }
 
-    public boolean isMainDialogList() {
-        return delegate == null && searchString == null;
-    }
 
     private void didSelectResult(final String dialog_id, boolean useAlert, final boolean param) {
         //TODO here onlySelect Posts (Dialog)
