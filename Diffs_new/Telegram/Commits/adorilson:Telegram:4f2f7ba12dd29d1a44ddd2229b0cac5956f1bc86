diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
index 1c76bc86d..e596cbeb8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
@@ -8,6 +8,10 @@
 
 package org.telegram.ui.ActionBar;
 
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.content.res.Configuration;
 import android.graphics.drawable.Drawable;
@@ -22,14 +26,12 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
 import java.util.ArrayList;
+import java.util.Collection;
 
 public class ActionBar extends FrameLayout {
 
@@ -236,16 +238,15 @@ public void showActionMode() {
         }
         actionModeVisible = true;
         if (Build.VERSION.SDK_INT >= 14) {
-            ArrayList<Object> animators = new ArrayList<>();
-            animators.add(ObjectAnimatorProxy.ofFloat(actionMode, "alpha", 0.0f, 1.0f));
+            Collection<Animator> animators = new ArrayList<>();
+            animators.add(ObjectAnimator.ofFloat(actionMode, "alpha", 0.0f, 1.0f));
             if (occupyStatusBar && actionModeTop != null) {
-                animators.add(ObjectAnimatorProxy.ofFloat(actionModeTop, "alpha", 0.0f, 1.0f));
+                animators.add(ObjectAnimator.ofFloat(actionModeTop, "alpha", 0.0f, 1.0f));
             }
-            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
+            AnimatorSet animatorSetProxy = new AnimatorSet();
             animatorSetProxy.playTogether(animators);
             animatorSetProxy.setDuration(200);
-            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSetProxy.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationStart(Object animation) {
                     actionMode.setVisibility(VISIBLE);
                     if (occupyStatusBar && actionModeTop != null) {
@@ -253,7 +254,6 @@ public void onAnimationStart(Object animation) {
                     }
                 }
 
-                @Override
                 public void onAnimationEnd(Object animation) {
                     if (titleTextView != null) {
                         titleTextView.setVisibility(INVISIBLE);
@@ -297,16 +297,15 @@ public void hideActionMode() {
         }
         actionModeVisible = false;
         if (Build.VERSION.SDK_INT >= 14) {
-            ArrayList<Object> animators = new ArrayList<>();
-            animators.add(ObjectAnimatorProxy.ofFloat(actionMode, "alpha", 0.0f));
+            Collection<Animator> animators = new ArrayList<>();
+            animators.add(ObjectAnimator.ofFloat(actionMode, "alpha", 0.0f));
             if (occupyStatusBar && actionModeTop != null) {
-                animators.add(ObjectAnimatorProxy.ofFloat(actionModeTop, "alpha", 0.0f));
+                animators.add(ObjectAnimator.ofFloat(actionModeTop, "alpha", 0.0f));
             }
-            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
+            AnimatorSet animatorSetProxy = new AnimatorSet();
             animatorSetProxy.playTogether(animators);
             animatorSetProxy.setDuration(200);
-            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSetProxy.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     actionMode.setVisibility(INVISIBLE);
                     if (occupyStatusBar && actionModeTop != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index a3aa8f879..19e6b386c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -8,6 +8,10 @@
 
 package org.telegram.ui.ActionBar;
 
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
@@ -29,13 +33,10 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.R;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Components.LayoutHelper;
 
 import java.util.ArrayList;
+import java.util.Collection;
 
 public class ActionBarLayout extends FrameLayout {
 
@@ -97,7 +98,7 @@ public boolean hasOverlappingRendering() {
     private DrawerLayoutContainer drawerLayoutContainer;
     private ActionBar currentActionBar;
 
-    private AnimatorSetProxy currentAnimation;
+    private AnimatorSet currentAnimation;
     private DecelerateInterpolator decelerateInterpolator = new DecelerateInterpolator(1.5f);
     private AccelerateDecelerateInterpolator accelerateDecelerateInterpolator = new AccelerateDecelerateInterpolator();
 
@@ -314,8 +315,8 @@ private void onSlideAnimationEnd(final boolean backAnimation) {
         startedTracking = false;
         animationInProgress = false;
 
-        ViewProxy.setTranslationX(containerView, 0);
-        ViewProxy.setTranslationX(containerViewBack, 0);
+        containerView.setTranslationX(0);
+        containerViewBack.setTranslationX(0);
         setInnerTranslationX(0);
     }
 
@@ -395,7 +396,7 @@ public boolean onTouchEvent(MotionEvent ev) {
                             currentFragment.onBeginSlide();
                             beginTrackingSent = true;
                         }
-                        ViewProxy.setTranslationX(containerView, dx);
+                        containerView.setTranslationX(dx);
                         setInnerTranslationX(dx);
                     }
                 } else if (ev != null && ev.getPointerId(0) == startedTrackingPointerId && (ev.getAction() == MotionEvent.ACTION_CANCEL || ev.getAction() == MotionEvent.ACTION_UP || ev.getAction() == MotionEvent.ACTION_POINTER_UP)) {
@@ -417,8 +418,8 @@ public boolean onTouchEvent(MotionEvent ev) {
                         }
                     }
                     if (startedTracking) {
-                        float x = ViewProxy.getX(containerView);
-                        AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+                        float x = containerView.getX();
+                        AnimatorSet animatorSet = new AnimatorSet();
                         float velX = velocityTracker.getXVelocity();
                         float velY = velocityTracker.getYVelocity();
                         final boolean backAnimation = x < containerView.getMeasuredWidth() / 3.0f && (velX < 3500 || velX < velY);
@@ -426,25 +427,23 @@ public boolean onTouchEvent(MotionEvent ev) {
                         if (!backAnimation) {
                             distToMove = containerView.getMeasuredWidth() - x;
                             animatorSet.playTogether(
-                                    ObjectAnimatorProxy.ofFloat(containerView, "translationX", containerView.getMeasuredWidth()),
-                                    ObjectAnimatorProxy.ofFloat(this, "innerTranslationX", (float)containerView.getMeasuredWidth())
+                                    ObjectAnimator.ofFloat(containerView, "translationX", containerView.getMeasuredWidth()),
+                                    ObjectAnimator.ofFloat(this, "innerTranslationX", (float)containerView.getMeasuredWidth())
                             );
                         } else {
                             distToMove = x;
                             animatorSet.playTogether(
-                                    ObjectAnimatorProxy.ofFloat(containerView, "translationX", 0),
-                                    ObjectAnimatorProxy.ofFloat(this, "innerTranslationX", 0.0f)
+                                    ObjectAnimator.ofFloat(containerView, "translationX", 0),
+                                    ObjectAnimator.ofFloat(this, "innerTranslationX", 0.0f)
                             );
                         }
 
                         animatorSet.setDuration(Math.max((int) (200.0f / containerView.getMeasuredWidth() * distToMove), 50));
-                        animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        animatorSet.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animator) {
                                 onSlideAnimationEnd(backAnimation);
                             }
 
-                            @Override
                             public void onAnimationCancel(Object animator) {
                                 onSlideAnimationEnd(backAnimation);
                             }
@@ -508,13 +507,13 @@ private void onAnimationEndCheck(boolean byCheck) {
             AndroidUtilities.cancelRunOnUIThread(animationRunnable);
             animationRunnable = null;
         }
-        ViewProxy.setAlpha(this, 1.0f);
-        ViewProxy.setAlpha(containerView, 1.0f);
-        ViewProxy.setScaleX(containerView, 1.0f);
-        ViewProxy.setScaleY(containerView, 1.0f);
-        ViewProxy.setAlpha(containerViewBack, 1.0f);
-        ViewProxy.setScaleX(containerViewBack, 1.0f);
-        ViewProxy.setScaleY(containerViewBack, 1.0f);
+        this.setAlpha(1.0f);
+        containerView.setAlpha(1.0f);
+        containerView.setScaleX(1.0f);
+        containerView.setScaleY(1.0f);
+        containerViewBack.setAlpha( 1.0f);
+        containerViewBack.setScaleX( 1.0f);
+        containerViewBack.setScaleY( 1.0f);
     }
 
     public boolean checkTransitionAnimation() {
@@ -589,11 +588,11 @@ public void run() {
                 }
                 float interpolated = decelerateInterpolator.getInterpolation(animationProgress);
                 if (open) {
-                    ViewProxy.setAlpha(containerView, interpolated);
-                    ViewProxy.setTranslationX(containerView, AndroidUtilities.dp(48) * (1.0f - interpolated));
+                    containerView.setAlpha(interpolated);
+                    containerView.setTranslationX(AndroidUtilities.dp(48) * (1.0f - interpolated));
                 } else {
-                    ViewProxy.setAlpha(containerViewBack, 1.0f - interpolated);
-                    ViewProxy.setTranslationX(containerViewBack, AndroidUtilities.dp(48) * interpolated);
+                    containerViewBack.setAlpha(1.0f - interpolated);
+                    containerViewBack.setTranslationX(AndroidUtilities.dp(48) * interpolated);
                 }
                 if (animationProgress < 1) {
                     startLayoutAnimation(open, false);
@@ -677,24 +676,28 @@ public void run() {
                     }
                 };
                 ArrayList<Object> animators = new ArrayList<>();
-                animators.add(ObjectAnimatorProxy.ofFloat(this, "alpha", 0.0f, 1.0f));
+                animators.add(ObjectAnimator.ofFloat(this, "alpha", 0.0f, 1.0f));
+
+                fragment.onTransitionAnimationStart(true, false);
+                currentAnimation = new AnimatorSet();
+
                 if (backgroundView != null) {
                     backgroundView.setVisibility(VISIBLE);
-                    animators.add(ObjectAnimatorProxy.ofFloat(backgroundView, "alpha", 0.0f, 1.0f));
+                    currentAnimation.playTogether(ObjectAnimator.ofFloat(this, "alpha", 0.0f, 1.0f),
+                            ObjectAnimator.ofFloat(backgroundView, "alpha", 0.0f, 1.0f)
+                    );
+
+                }else{
+                    currentAnimation.playTogether(ObjectAnimator.ofFloat(this, "alpha", 0.0f, 1.0f));
                 }
 
-                fragment.onTransitionAnimationStart(true, false);
-                currentAnimation = new AnimatorSetProxy();
-                currentAnimation.playTogether(animators);
                 currentAnimation.setInterpolator(accelerateDecelerateInterpolator);
                 currentAnimation.setDuration(200);
-                currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                currentAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         onAnimationEndCheck(false);
                     }
 
-                    @Override
                     public void onAnimationCancel(Object animation) {
                         onAnimationEndCheck(false);
                     }
@@ -713,33 +716,33 @@ public void run() {
                         presentFragmentInternalRemoveOld(removeLast, currentFragment);
                         fragment.onTransitionAnimationEnd(true, false);
                         fragment.onBecomeFullyVisible();
-                        ViewProxy.setTranslationX(containerView, 0);
+                        containerView.setTranslationX(0);
                     }
                 };
                 fragment.onTransitionAnimationStart(true, false);
-                AnimatorSetProxy animation = fragment.onCustomTransitionAnimation(true, new Runnable() {
+                AnimatorSet animation = fragment.onCustomTransitionAnimation(true, new Runnable() {
                     @Override
                     public void run() {
                         onAnimationEndCheck(false);
                     }
                 });
                 if (animation == null) {
-                    ViewProxy.setAlpha(containerView, 0.0f);
-                    ViewProxy.setTranslationX(containerView, 48.0f);
+                    containerView.setAlpha(0.0f);
+                    containerView.setTranslationX(48.0f);
                     startLayoutAnimation(true, true);
                 } else {
                     if (Build.VERSION.SDK_INT > 15) {
                         //containerView.setLayerType(LAYER_TYPE_HARDWARE, null);
                         //containerViewBack.setLayerType(LAYER_TYPE_HARDWARE, null);
                     }
-                    ViewProxy.setAlpha(containerView, 1.0f);
-                    ViewProxy.setTranslationX(containerView, 0.0f);
+                    containerView.setAlpha(1.0f);
+                    containerView.setTranslationX(0.0f);
                     currentAnimation = animation;
                 }
             }
         } else {
             if (backgroundView != null) {
-                ViewProxy.setAlpha(backgroundView, 1.0f);
+                backgroundView.setAlpha(1.0f);
                 backgroundView.setVisibility(VISIBLE);
             }
             fragment.onTransitionAnimationStart(true, false);
@@ -862,13 +865,13 @@ public void run() {
                             containerViewBack.setLayerType(LAYER_TYPE_NONE, null);
                         }
                         closeLastFragmentInternalRemoveOld(currentFragment);
-                        ViewProxy.setTranslationX(containerViewBack, 0);
+                        containerViewBack.setTranslationX(0);
                         currentFragment.onTransitionAnimationEnd(false, false);
                         previousFragmentFinal.onTransitionAnimationEnd(true, true);
                         previousFragmentFinal.onBecomeFullyVisible();
                     }
                 };
-                AnimatorSetProxy animation = currentFragment.onCustomTransitionAnimation(false, new Runnable() {
+                AnimatorSet animation = currentFragment.onCustomTransitionAnimation(false, new Runnable() {
                     @Override
                     public void run() {
                         onAnimationEndCheck(false);
@@ -907,28 +910,25 @@ public void run() {
                     }
                 };
 
-                ArrayList<Object> animators = new ArrayList<>();
-                animators.add(ObjectAnimatorProxy.ofFloat(this, "alpha", 1.0f, 0.0f));
+                Collection<Animator> animators = new ArrayList<>();
+                animators.add(ObjectAnimator.ofFloat(this, "alpha", 1.0f, 0.0f));
                 if (backgroundView != null) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(backgroundView, "alpha", 1.0f, 0.0f));
+                    animators.add(ObjectAnimator.ofFloat(backgroundView, "alpha", 1.0f, 0.0f));
                 }
 
-                currentAnimation = new AnimatorSetProxy();
+                currentAnimation = new AnimatorSet();
                 currentAnimation.playTogether(animators);
                 currentAnimation.setInterpolator(accelerateDecelerateInterpolator);
                 currentAnimation.setDuration(200);
-                currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                currentAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationStart(Object animation) {
                         transitionAnimationStartTime = System.currentTimeMillis();
                     }
 
-                    @Override
                     public void onAnimationEnd(Object animation) {
                         onAnimationEndCheck(false);
                     }
 
-                    @Override
                     public void onAnimationCancel(Object animation) {
                         onAnimationEndCheck(false);
                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
index 40618db78..ba9aee24a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
@@ -33,7 +33,6 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Components.FrameLayoutFixed;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -452,7 +451,7 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {
                         listener.onTextChanged(searchField);
                     }
                     if (clearButton != null) {
-                        ViewProxy.setAlpha(clearButton, s == null || s.length() == 0 ? 0.6f : 1.0f);
+                        clearButton.setAlpha(s == null || s.length() == 0 ? 0.6f : 1.0f);
                     }
                 }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 46631c952..8591a030a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui.ActionBar;
 
+import android.animation.AnimatorSet;
 import android.app.Activity;
 import android.app.Dialog;
 import android.content.Context;
@@ -17,7 +18,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.ConnectionsManager;
@@ -251,7 +251,7 @@ protected void onBecomeFullyVisible() {
 
     }
 
-    protected AnimatorSetProxy onCustomTransitionAnimation(boolean isOpen, final Runnable callback) {
+    protected AnimatorSet onCustomTransitionAnimation(boolean isOpen, final Runnable callback) {
         return null;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
index 97906bc3c..395618c81 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BottomSheet.java
@@ -41,10 +41,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
@@ -518,7 +514,7 @@ private void startRevealAnimation(final boolean open) {
         } else {
             backgroundDrawable.setAlpha(51);
         }
-        ViewProxy.setTranslationY(containerView, 0);
+        containerView.setTranslationY(0);
 
         AnimatorSet animatorSet = new AnimatorSet();
 
@@ -628,17 +624,16 @@ private void startOpenAnimation() {
         if (useRevealAnimation) {
             startRevealAnimation(true);
         } else {
-            ViewProxy.setTranslationY(containerView, containerView.getMeasuredHeight());
+            containerView.setTranslationY(containerView.getMeasuredHeight());
             backgroundDrawable.setAlpha(0);
-            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-            animatorSetProxy.playTogether(
-                    ObjectAnimatorProxy.ofFloat(containerView, "translationY", 0),
-                    ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", focusable ? 0 : 51));
-            animatorSetProxy.setDuration(200);
-            animatorSetProxy.setStartDelay(20);
-            animatorSetProxy.setInterpolator(new DecelerateInterpolator());
-            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            AnimatorSet animatorSet = new AnimatorSet();
+            animatorSet.playTogether(
+                    ObjectAnimator.ofFloat(containerView, "translationY", 0),
+                    ObjectAnimator.ofInt(backgroundDrawable, "alpha", focusable ? 0 : 51));
+            animatorSet.setDuration(200);
+            animatorSet.setStartDelay(20);
+            animatorSet.setInterpolator(new DecelerateInterpolator());
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (delegate != null) {
                         delegate.onOpenAnimationEnd();
@@ -648,7 +643,7 @@ public void onAnimationEnd(Object animation) {
                     }
                 }
             });
-            animatorSetProxy.start();
+            animatorSet.start();
         }
     }
 
@@ -681,15 +676,14 @@ public void dismissWithButtonClick(final int item) {
             return;
         }
         dismissed = true;
-        AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-        animatorSetProxy.playTogether(
-                ObjectAnimatorProxy.ofFloat(containerView, "translationY", containerView.getMeasuredHeight() + AndroidUtilities.dp(10)),
-                ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", 0)
+        AnimatorSet animatorSet = new AnimatorSet();
+        animatorSet.playTogether(
+                ObjectAnimator.ofFloat(containerView, "translationY", containerView.getMeasuredHeight() + AndroidUtilities.dp(10)),
+                ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0)
         );
-        animatorSetProxy.setDuration(180);
-        animatorSetProxy.setInterpolator(new AccelerateInterpolator());
-        animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        animatorSet.setDuration(180);
+        animatorSet.setInterpolator(new AccelerateInterpolator());
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animation) {
                 if (onClickListener != null) {
                     onClickListener.onClick(BottomSheet.this, item);
@@ -706,12 +700,11 @@ public void run() {
                 });
             }
 
-            @Override
             public void onAnimationCancel(Object animation) {
                 onAnimationEnd(animation);
             }
         });
-        animatorSetProxy.start();
+        animatorSet.start();
     }
 
     @Override
@@ -723,15 +716,14 @@ public void dismiss() {
         if (useRevealAnimation) {
             startRevealAnimation(false);
         } else {
-            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-            animatorSetProxy.playTogether(
-                    ObjectAnimatorProxy.ofFloat(containerView, "translationY", containerView.getMeasuredHeight() + AndroidUtilities.dp(10)),
-                    ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", 0)
+            AnimatorSet animatorSet = new AnimatorSet();
+            animatorSet.playTogether(
+                    ObjectAnimator.ofFloat(containerView, "translationY", containerView.getMeasuredHeight() + AndroidUtilities.dp(10)),
+                    ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0)
             );
-            animatorSetProxy.setDuration(180);
-            animatorSetProxy.setInterpolator(new AccelerateInterpolator());
-            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSet.setDuration(180);
+            animatorSet.setInterpolator(new AccelerateInterpolator());
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     AndroidUtilities.runOnUIThread(new Runnable() {
                         @Override
@@ -745,12 +737,11 @@ public void run() {
                     });
                 }
 
-                @Override
                 public void onAnimationCancel(Object animation) {
                     onAnimationEnd(animation);
                 }
             });
-            animatorSetProxy.start();
+            animatorSet.start();
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
index 55dcbc3e0..b7f0ed81b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui.ActionBar;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
@@ -28,9 +31,6 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 
 public class DrawerLayoutContainer extends FrameLayout {
 
@@ -46,7 +46,7 @@
     private int startedTrackingPointerId;
     private VelocityTracker velocityTracker = null;
     private boolean beginTrackingSent;
-    private AnimatorSetProxy currentAnimation = null;
+    private AnimatorSet currentAnimation = null;
 
     private Paint scrimPaint = new Paint();
 
@@ -172,9 +172,9 @@ public void openDrawer(boolean fast) {
             AndroidUtilities.hideKeyboard(parentActionBarLayout.parentActivity.getCurrentFocus());
         }
         cancelCurrentAnimation();
-        AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+        AnimatorSet animatorSet = new AnimatorSet();
         animatorSet.playTogether(
-                ObjectAnimatorProxy.ofFloat(this, "drawerPosition", drawerLayout.getMeasuredWidth())
+                ObjectAnimator.ofFloat(this, "drawerPosition", drawerLayout.getMeasuredWidth())
         );
         animatorSet.setInterpolator(new DecelerateInterpolator());
         if (fast) {
@@ -182,13 +182,11 @@ public void openDrawer(boolean fast) {
         } else {
             animatorSet.setDuration(300);
         }
-        animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animator) {
                 onDrawerAnimationEnd(true);
             }
 
-            @Override
             public void onAnimationCancel(Object animator) {
                 onDrawerAnimationEnd(true);
             }
@@ -199,9 +197,9 @@ public void onAnimationCancel(Object animator) {
 
     public void closeDrawer(boolean fast) {
         cancelCurrentAnimation();
-        AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+        AnimatorSet animatorSet = new AnimatorSet();
         animatorSet.playTogether(
-                ObjectAnimatorProxy.ofFloat(this, "drawerPosition", 0)
+                ObjectAnimator.ofFloat(this, "drawerPosition", 0)
         );
         animatorSet.setInterpolator(new DecelerateInterpolator());
         if (fast) {
@@ -209,13 +207,11 @@ public void closeDrawer(boolean fast) {
         } else {
             animatorSet.setDuration(300);
         }
-        animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animator) {
                 onDrawerAnimationEnd(false);
             }
 
-            @Override
             public void onAnimationCancel(Object animator) {
                 onDrawerAnimationEnd(false);
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
index bcee796f0..93ed52478 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
@@ -19,7 +19,6 @@
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.DividerCell;
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.LetterSectionCell;
@@ -253,9 +252,9 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
             }
             if (ignoreUsers != null) {
                 if (ignoreUsers.containsKey(user.id)) {
-                    ViewProxy.setAlpha(convertView, 0.5f);
+                    convertView.setAlpha(0.5f);
                 } else {
-                    ViewProxy.setAlpha(convertView, 1.0f);
+                    convertView.setAlpha(1.0f);
                 }
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java
index e39fb48a2..e30f272e0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java
@@ -8,15 +8,14 @@
 
 package org.telegram.ui.Cells;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.view.Gravity;
 import android.widget.FrameLayout;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.CheckBox;
@@ -27,7 +26,7 @@
     public BackupImageView photoImage;
     public FrameLayout checkFrame;
     public CheckBox checkBox;
-    private AnimatorSetProxy animator;
+    private AnimatorSet animator;
     public int itemWidth;
 
     public PhotoPickerPhotoCell(Context context) {
@@ -62,12 +61,11 @@ public void setChecked(final boolean checked, boolean animated) {
             if (checked) {
                 setBackgroundColor(0xff0A0A0A);
             }
-            animator = new AnimatorSetProxy();
-            animator.playTogether(ObjectAnimatorProxy.ofFloat(photoImage, "scaleX", checked ? 0.85f : 1.0f),
-                    ObjectAnimatorProxy.ofFloat(photoImage, "scaleY", checked ? 0.85f : 1.0f));
+            animator = new AnimatorSet();
+            animator.playTogether(ObjectAnimator.ofFloat(photoImage, "scaleX", checked ? 0.85f : 1.0f),
+                    ObjectAnimator.ofFloat(photoImage, "scaleY", checked ? 0.85f : 1.0f));
             animator.setDuration(200);
-            animator.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animator.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (animator.equals(animation)) {
                         animator = null;
@@ -80,8 +78,8 @@ public void onAnimationEnd(Object animation) {
             animator.start();
         } else {
             setBackgroundColor(checked ? 0xff0A0A0A : 0);
-            ViewProxy.setScaleX(photoImage, checked ? 0.85f : 1.0f);
-            ViewProxy.setScaleY(photoImage, checked ? 0.85f : 1.0f);
+            photoImage.setScaleX(checked ? 0.85f : 1.0f);
+            photoImage.setScaleY(checked ? 0.85f : 1.0f);
         }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java
index bcb61072b..3b1b58b37 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java
@@ -21,7 +21,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
@@ -136,7 +135,7 @@ public void onClick(View v) {
                 }
             });
         } else {
-            ViewProxy.setAlpha(searchButton, 0.5f);
+            searchButton.setAlpha(0.5f);
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
index 362144781..4b7fc7087 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui.Cells;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.os.Build;
 import android.util.TypedValue;
@@ -19,10 +22,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLoader;
@@ -56,7 +55,7 @@
         private View selector;
         private CheckBox checkBox;
         private FrameLayoutFixed container;
-        private AnimatorSetProxy animator;
+        private AnimatorSet animator;
 
         public PhotoVideoView(Context context) {
             super(context);
@@ -116,12 +115,11 @@ public void setChecked(final boolean checked, boolean animated) {
                 if (checked) {
                     setBackgroundColor(0xfff5f5f5);
                 }
-                animator = new AnimatorSetProxy();
-                animator.playTogether(ObjectAnimatorProxy.ofFloat(container, "scaleX", checked ? 0.85f : 1.0f),
-                        ObjectAnimatorProxy.ofFloat(container, "scaleY", checked ? 0.85f : 1.0f));
+                animator = new AnimatorSet();
+                animator.playTogether(ObjectAnimator.ofFloat(container, "scaleX", checked ? 0.85f : 1.0f),
+                        ObjectAnimator.ofFloat(container, "scaleY", checked ? 0.85f : 1.0f));
                 animator.setDuration(200);
-                animator.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                animator.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         if (animator.equals(animation)) {
                             animator = null;
@@ -134,8 +132,8 @@ public void onAnimationEnd(Object animation) {
                 animator.start();
             } else {
                 setBackgroundColor(checked ? 0xfff5f5f5 : 0);
-                ViewProxy.setScaleX(container, checked ? 0.85f : 1.0f);
-                ViewProxy.setScaleY(container, checked ? 0.85f : 1.0f);
+                container.setScaleX(checked ? 0.85f : 1.0f);
+                container.setScaleY(checked ? 0.85f : 1.0f);
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java
index f04f7e70b..1c41f823b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerSetCell.java
@@ -22,7 +22,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.TLRPC;
@@ -104,13 +103,13 @@ public void setStickersSet(TLRPC.TL_messages_stickerSet set, boolean divider) {
 
         textView.setText(stickersSet.set.title);
         if (stickersSet.set.disabled) {
-            ViewProxy.setAlpha(textView, 0.5f);
-            ViewProxy.setAlpha(valueTextView, 0.5f);
-            ViewProxy.setAlpha(imageView, 0.5f);
+            textView.setAlpha(0.5f);
+            valueTextView.setAlpha(0.5f);
+            imageView.setAlpha(0.5f);
         } else {
-            ViewProxy.setAlpha(textView, 1.0f);
-            ViewProxy.setAlpha(valueTextView, 1.0f);
-            ViewProxy.setAlpha(imageView, 1.0f);
+            textView.setAlpha(1.0f);
+            valueTextView.setAlpha(1.0f);
+            imageView.setAlpha(1.0f);
         }
         ArrayList<TLRPC.Document> documents = set.documents;
         if (documents != null && !documents.isEmpty()) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
index d4ab922a9..b223ec838 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
@@ -52,10 +55,6 @@
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Components.HintEditText;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.SlideView;
@@ -225,22 +224,20 @@ public void setPage(int page, boolean animated, Bundle params, boolean back) {
             newView.setParams(params);
             actionBar.setTitle(newView.getHeaderName());
             newView.onShow();
-            ViewProxy.setX(newView, back ? -AndroidUtilities.displaySize.x : AndroidUtilities.displaySize.x);
+            newView.setX(back ? -AndroidUtilities.displaySize.x : AndroidUtilities.displaySize.x);
 
-            AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            AnimatorSet animatorSet = new AnimatorSet();
             animatorSet.setInterpolator(new AccelerateDecelerateInterpolator());
             animatorSet.setDuration(300);
             animatorSet.playTogether(
-                    ObjectAnimatorProxy.ofFloat(outView, "translationX", back ? AndroidUtilities.displaySize.x : -AndroidUtilities.displaySize.x),
-                    ObjectAnimatorProxy.ofFloat(newView, "translationX", 0));
-            animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+                    ObjectAnimator.ofFloat(outView, "translationX", back ? AndroidUtilities.displaySize.x : -AndroidUtilities.displaySize.x),
+                    ObjectAnimator.ofFloat(newView, "translationX", 0));
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationStart(Object animation) {
                     newView.setVisibility(View.VISIBLE);
                 }
 
                 @SuppressLint("NewApi")
-                @Override
                 public void onAnimationEnd(Object animation) {
                     outView.setVisibility(View.GONE);
                     outView.setX(0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index d94a3b623..904a9dc44 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -9,6 +9,10 @@
 package org.telegram.ui;
 
 import android.Manifest;
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.Dialog;
@@ -88,10 +92,6 @@
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.MentionsAdapter;
 import org.telegram.ui.Adapters.StickersAdapter;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.ChatActionCell;
 import org.telegram.ui.Cells.ChatAudioCell;
 import org.telegram.ui.Cells.ChatBaseCell;
@@ -133,6 +133,7 @@
 import java.io.File;
 import java.net.URLDecoder;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.concurrent.Semaphore;
@@ -194,7 +195,7 @@
     private MentionsAdapter mentionsAdapter;
     private RecyclerListView mentionListView;
     private LinearLayoutManager mentionLayoutManager;
-    private AnimatorSetProxy mentionListAnimation;
+    private AnimatorSet mentionListAnimation;
     private ChatAttachView chatAttachView;
     private BottomSheet chatAttachViewSheet;
     private LinearLayout reportSpamView;
@@ -205,8 +206,8 @@
     private TextView gifHintTextView;
     private View emojiButtonRed;
 
-    private ObjectAnimatorProxy pagedownButtonAnimation;
-    private AnimatorSetProxy replyButtonAnimation;
+    private ObjectAnimator pagedownButtonAnimation;
+    private AnimatorSet replyButtonAnimation;
 
     private TLRPC.User reportSpamUser;
 
@@ -218,7 +219,7 @@
     private boolean allowStickersPanel;
     private boolean allowContextBotPanel;
     private boolean allowContextBotPanelSecond = true;
-    private AnimatorSetProxy runningAnimation;
+    private AnimatorSet runningAnimation;
 
     private MessageObject selectedObject;
     private ArrayList<MessageObject> forwardingMessages;
@@ -1764,7 +1765,7 @@ public void needChangePanelVisibility(boolean show) {
                         }
 
                         if (mentionListView.getVisibility() == View.VISIBLE) {
-                            ViewProxy.setAlpha(mentionListView, 1.0f);
+                            mentionListView.setAlpha(1.0f);
                             return;
                         } else {
                             mentionLayoutManager.scrollToPositionWithOffset(0, 10000);
@@ -1772,12 +1773,11 @@ public void needChangePanelVisibility(boolean show) {
                         if (allowStickersPanel && (!mentionsAdapter.isBotContext() || (allowContextBotPanel || allowContextBotPanelSecond))) {
                             mentionListView.setVisibility(View.VISIBLE);
                             mentionListView.setTag(null);
-                            mentionListAnimation = new AnimatorSetProxy();
+                            mentionListAnimation = new AnimatorSet();
                             mentionListAnimation.playTogether(
-                                    ObjectAnimatorProxy.ofFloat(mentionListView, "alpha", 0.0f, 1.0f)
+                                    ObjectAnimator.ofFloat(mentionListView, "alpha", 0.0f, 1.0f)
                             );
-                            mentionListAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                                @Override
+                            mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                                 public void onAnimationEnd(Object animation) {
                                     if (mentionListAnimation != null && mentionListAnimation.equals(animation)) {
                                         mentionListView.clearAnimation();
@@ -1788,7 +1788,7 @@ public void onAnimationEnd(Object animation) {
                             mentionListAnimation.setDuration(200);
                             mentionListAnimation.start();
                         } else {
-                            ViewProxy.setAlpha(mentionListView, 1.0f);
+                            mentionListView.setAlpha(1.0f);
                             mentionListView.clearAnimation();
                             mentionListView.setVisibility(View.INVISIBLE);
                         }
@@ -1802,12 +1802,11 @@ public void onAnimationEnd(Object animation) {
                             return;
                         }
                         if (allowStickersPanel) {
-                            mentionListAnimation = new AnimatorSetProxy();
+                            mentionListAnimation = new AnimatorSet();
                             mentionListAnimation.playTogether(
-                                    ObjectAnimatorProxy.ofFloat(mentionListView, "alpha", 0.0f)
+                                    ObjectAnimator.ofFloat(mentionListView, "alpha", 0.0f)
                             );
-                            mentionListAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                                @Override
+                            mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                                 public void onAnimationEnd(Object animation) {
                                     if (mentionListAnimation != null && mentionListAnimation.equals(animation)) {
                                         mentionListView.clearAnimation();
@@ -2148,13 +2147,12 @@ public void needChangePanelVisibility(final boolean show) {
                         runningAnimation = null;
                     }
                     if (stickersPanel.getVisibility() != View.INVISIBLE) {
-                        runningAnimation = new AnimatorSetProxy();
+                        runningAnimation = new AnimatorSet();
                         runningAnimation.playTogether(
-                                ObjectAnimatorProxy.ofFloat(stickersPanel, "alpha", show ? 0.0f : 1.0f, show ? 1.0f : 0.0f)
+                                ObjectAnimator.ofFloat(stickersPanel, "alpha", show ? 0.0f : 1.0f, show ? 1.0f : 0.0f)
                         );
                         runningAnimation.setDuration(150);
-                        runningAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        runningAnimation.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animation) {
                                 if (runningAnimation != null && runningAnimation.equals(animation)) {
                                     if (!show) {
@@ -2331,13 +2329,12 @@ private void showGifHint() {
         gifHintTextView.setGravity(Gravity.CENTER_VERTICAL);
         frameLayout.addView(gifHintTextView, index + 1, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, 32, Gravity.LEFT | Gravity.BOTTOM, 5, 0, 0, 3));
 
-        AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-        animatorSetProxy.playTogether(
-                ObjectAnimatorProxy.ofFloat(gifHintTextView, "alpha", 0.0f, 1.0f),
-                ObjectAnimatorProxy.ofFloat(emojiButtonRed, "alpha", 0.0f, 1.0f)
+        AnimatorSet animatorSet = new AnimatorSet();
+        animatorSet.playTogether(
+                ObjectAnimator.ofFloat(gifHintTextView, "alpha", 0.0f, 1.0f),
+                ObjectAnimator.ofFloat(emojiButtonRed, "alpha", 0.0f, 1.0f)
         );
-        animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animation) {
                 AndroidUtilities.runOnUIThread(new Runnable() {
                     @Override
@@ -2345,12 +2342,11 @@ public void run() {
                         if (gifHintTextView == null) {
                             return;
                         }
-                        AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-                        animatorSetProxy.playTogether(
-                                ObjectAnimatorProxy.ofFloat(gifHintTextView, "alpha", 0.0f)
+                        AnimatorSet animatorSet = new AnimatorSet();
+                        animatorSet.playTogether(
+                                ObjectAnimator.ofFloat(gifHintTextView, "alpha", 0.0f)
                         );
-                        animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        animatorSet.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animation) {
                                 if (gifHintTextView != null) {
                                     gifHintTextView.clearAnimation();
@@ -2358,14 +2354,14 @@ public void onAnimationEnd(Object animation) {
                                 }
                             }
                         });
-                        animatorSetProxy.setDuration(300);
-                        animatorSetProxy.start();
+                        animatorSet.setDuration(300);
+                        animatorSet.start();
                     }
                 }, 2000);
             }
         });
-        animatorSetProxy.setDuration(300);
-        animatorSetProxy.start();
+        animatorSet.setDuration(300);
+        animatorSet.start();
     }
 
     private void checkContextBotPanel() {
@@ -2378,12 +2374,11 @@ private void checkContextBotPanel() {
                     }
 
                     mentionListView.setTag(1);
-                    mentionListAnimation = new AnimatorSetProxy();
+                    mentionListAnimation = new AnimatorSet();
                     mentionListAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(mentionListView, "alpha", 0.0f)
+                            ObjectAnimator.ofFloat(mentionListView, "alpha", 0.0f)
                     );
-                    mentionListAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             if (mentionListAnimation != null && mentionListAnimation.equals(animation)) {
                                 mentionListView.clearAnimation();
@@ -2403,12 +2398,11 @@ public void onAnimationEnd(Object animation) {
                     }
                     mentionListView.setTag(null);
                     mentionListView.setVisibility(View.VISIBLE);
-                    mentionListAnimation = new AnimatorSetProxy();
+                    mentionListAnimation = new AnimatorSet();
                     mentionListAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(mentionListView, "alpha", 0.0f, 1.0f)
+                            ObjectAnimator.ofFloat(mentionListView, "alpha", 0.0f, 1.0f)
                     );
-                    mentionListAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             if (mentionListAnimation != null && mentionListAnimation.equals(animation)) {
                                 mentionListView.clearAnimation();
@@ -3200,12 +3194,16 @@ private void showPagedownButton(boolean show, boolean animated) {
                     pagedownButtonAnimation = null;
                 }
                 if (animated) {
-                    if (ViewProxy.getTranslationY(pagedownButton) == 0) {
-                        ViewProxy.setTranslationY(pagedownButton, AndroidUtilities.dp(100));
+                    if (pagedownButton.getTranslationY() == 0) {
+                        pagedownButton.setTranslationY(AndroidUtilities.dp(100));
                     }
                     pagedownButton.setVisibility(View.VISIBLE);
                     pagedownButton.setTag(1);
-                    pagedownButtonAnimation = ObjectAnimatorProxy.ofFloatProxy(pagedownButton, "translationY", 0).setDuration(200).start();
+
+
+                    pagedownButtonAnimation.ofFloat(pagedownButton, "translationY");
+                    pagedownButtonAnimation.setDuration(200);
+                    pagedownButtonAnimation.start();
                 } else {
                     pagedownButton.setVisibility(View.VISIBLE);
                 }
@@ -3219,13 +3217,15 @@ private void showPagedownButton(boolean show, boolean animated) {
                     pagedownButtonAnimation = null;
                 }
                 if (animated) {
-                    pagedownButtonAnimation = ObjectAnimatorProxy.ofFloatProxy(pagedownButton, "translationY", AndroidUtilities.dp(100)).setDuration(200).addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    pagedownButtonAnimation.ofFloat(pagedownButton, "translationY", AndroidUtilities.dp(100));
+                    pagedownButtonAnimation.setDuration(200);
+                    pagedownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             pagedownButton.clearAnimation();
                             pagedownButton.setVisibility(View.INVISIBLE);
                         }
-                    }).start();
+                    });
+                    pagedownButtonAnimation.start();
                 } else {
                     pagedownButton.clearAnimation();
                     pagedownButton.setVisibility(View.INVISIBLE);
@@ -3490,32 +3490,31 @@ private void addToSelectedMessages(MessageObject messageObject) {
                         }
                         if (copyVisible != newCopyVisible) {
                             if (newVisibility == View.VISIBLE) {
-                                ViewProxy.setAlpha(replyItem, 1.0f);
-                                ViewProxy.setScaleX(replyItem, 1.0f);
+                                replyItem.setAlpha(1.0f);
+                                replyItem.setScaleX(1.0f);
                             } else {
-                                ViewProxy.setAlpha(replyItem, 0.0f);
-                                ViewProxy.setScaleX(replyItem, 0.0f);
+                                replyItem.setAlpha(0.0f);
+                                replyItem.setScaleX(0.0f);
                             }
                             replyItem.setVisibility(newVisibility);
                             replyItem.clearAnimation();
                         } else {
-                            replyButtonAnimation = new AnimatorSetProxy();
-                            ViewProxy.setPivotX(replyItem, AndroidUtilities.dp(54));
+                            replyButtonAnimation = new AnimatorSet();
+                            replyItem.setPivotX(AndroidUtilities.dp(54));
                             if (newVisibility == View.VISIBLE) {
                                 replyItem.setVisibility(newVisibility);
                                 replyButtonAnimation.playTogether(
-                                        ObjectAnimatorProxy.ofFloat(replyItem, "alpha", 1.0f),
-                                        ObjectAnimatorProxy.ofFloat(replyItem, "scaleX", 1.0f)
+                                        ObjectAnimator.ofFloat(replyItem, "alpha", 1.0f),
+                                        ObjectAnimator.ofFloat(replyItem, "scaleX", 1.0f)
                                 );
                             } else {
                                 replyButtonAnimation.playTogether(
-                                        ObjectAnimatorProxy.ofFloat(replyItem, "alpha", 0.0f),
-                                        ObjectAnimatorProxy.ofFloat(replyItem, "scaleX", 0.0f)
+                                        ObjectAnimator.ofFloat(replyItem, "alpha", 0.0f),
+                                        ObjectAnimator.ofFloat(replyItem, "scaleX", 0.0f)
                                 );
                             }
                             replyButtonAnimation.setDuration(100);
-                            replyButtonAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                                @Override
+                            replyButtonAnimation.addListener(new AnimatorListenerAdapter() {
                                 public void onAnimationEnd(Object animation) {
                                     if (replyButtonAnimation.equals(animation)) {
                                         replyItem.clearAnimation();
@@ -5407,8 +5406,8 @@ private void updateSearchButtons(int mask) {
         if (searchUpItem != null) {
             searchUpItem.setEnabled((mask & 1) != 0);
             searchDownItem.setEnabled((mask & 2) != 0);
-            ViewProxy.setAlpha(searchUpItem, searchUpItem.isEnabled() ? 1.0f : 0.6f);
-            ViewProxy.setAlpha(searchDownItem, searchDownItem.isEnabled() ? 1.0f : 0.6f);
+            searchUpItem.setAlpha(searchUpItem.isEnabled() ? 1.0f : 0.6f);
+            searchDownItem.setAlpha(searchDownItem.isEnabled() ? 1.0f : 0.6f);
         }
     }
 
@@ -6103,12 +6102,12 @@ public void onClick(DialogInterface dialogInterface, int i) {
         actionBar.showActionMode();
 
         if (Build.VERSION.SDK_INT >= 11) {
-            AnimatorSetProxy animatorSet = new AnimatorSetProxy();
-            ArrayList<Object> animators = new ArrayList<>();
+            AnimatorSet animatorSet = new AnimatorSet();
+            Collection<Animator> animators = new ArrayList<>();
             for (int a = 0; a < actionModeViews.size(); a++) {
                 View view = actionModeViews.get(a);
                 AndroidUtilities.clearDrawableAnimation(view);
-                animators.add(ObjectAnimatorProxy.ofFloat(view, "scaleY", 0.1f, 1.0f));
+                animators.add(ObjectAnimator.ofFloat(view, "scaleY", 0.1f, 1.0f));
             }
             animatorSet.playTogether(animators);
             animatorSet.setDuration(250);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 217d44621..c3e74275a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -9,6 +9,9 @@
 package org.telegram.ui.Components;
 
 import android.Manifest;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
@@ -59,10 +62,6 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.ui.StickersActivity;
 
@@ -194,9 +193,9 @@ public boolean onTouchEvent(MotionEvent event) {
     private boolean hasBotCommands;
 
     private PowerManager.WakeLock mWakeLock;
-    private AnimatorSetProxy runningAnimation;
-    private AnimatorSetProxy runningAnimation2;
-    private AnimatorSetProxy runningAnimationAudio;
+    private AnimatorSet runningAnimation;
+    private AnimatorSet runningAnimation2;
+    private AnimatorSet runningAnimationAudio;
     private int runningAnimationType;
     private int audioInterfaceState;
 
@@ -232,7 +231,7 @@ public boolean onTouchEvent(MotionEvent event) {
     private boolean topViewShowed;
     private boolean needShowTopView;
     private boolean allowShowTopView;
-    private AnimatorSetProxy currentTopViewAnimation;
+    private AnimatorSet currentTopViewAnimation;
 
     private boolean waitingForKeyboardOpen;
     private Runnable openKeyboardRunnable = new Runnable() {
@@ -539,7 +538,7 @@ public void afterTextChanged(Editable editable) {
             attachButton = new LinearLayout(context);
             attachButton.setOrientation(LinearLayout.HORIZONTAL);
             attachButton.setEnabled(false);
-            ViewProxy.setPivotX(attachButton, AndroidUtilities.dp(48));
+            attachButton.setPivotX(AndroidUtilities.dp(48));
             frameLayout.addView(attachButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, 48, Gravity.BOTTOM | Gravity.RIGHT));
 
             botButton = new ImageView(context);
@@ -675,11 +674,11 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                         updateAudioRecordIntefrace();
                     }
 
-                    x = x + ViewProxy.getX(audioSendButton);
+                    x = x + audioSendButton.getX();
                     FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) slideText.getLayoutParams();
                     if (startedDraggingX != -1) {
                         float dist = (x - startedDraggingX);
-                        ViewProxy.setTranslationX(recordCircle, dist);
+                        recordCircle.setTranslationX(dist);
                         params.leftMargin = AndroidUtilities.dp(30) + (int) dist;
                         slideText.setLayoutParams(params);
                         float alpha = 1.0f + dist / distCanMove;
@@ -688,9 +687,9 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                         } else if (alpha < 0) {
                             alpha = 0;
                         }
-                        ViewProxy.setAlpha(slideText, alpha);
+                        slideText.setAlpha(alpha);
                     }
-                    if (x <= ViewProxy.getX(slideText) + slideText.getWidth() + AndroidUtilities.dp(30)) {
+                    if (x <= slideText.getX() + slideText.getWidth() + AndroidUtilities.dp(30)) {
                         if (startedDraggingX == -1) {
                             startedDraggingX = x;
                             distCanMove = (recordPanel.getMeasuredWidth() - slideText.getMeasuredWidth() - AndroidUtilities.dp(48)) / 2.0f;
@@ -703,9 +702,9 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                     }
                     if (params.leftMargin > AndroidUtilities.dp(30)) {
                         params.leftMargin = AndroidUtilities.dp(30);
-                        ViewProxy.setTranslationX(recordCircle, 0);
+                        recordCircle.setTranslationX(0);
                         slideText.setLayoutParams(params);
-                        ViewProxy.setAlpha(slideText, 1);
+                        slideText.setAlpha(1);
                         startedDraggingX = -1;
                     }
                 }
@@ -723,9 +722,9 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
         sendButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
         sendButton.setImageResource(R.drawable.ic_send);
         sendButton.setSoundEffectsEnabled(false);
-        ViewProxy.setScaleX(sendButton, 0.1f);
-        ViewProxy.setScaleY(sendButton, 0.1f);
-        ViewProxy.setAlpha(sendButton, 0.0f);
+        sendButton.setScaleX(0.1f);
+        sendButton.setScaleY(0.1f);
+        sendButton.setAlpha(0.0f);
         sendButton.clearAnimation();
         frameLayout1.addView(sendButton, LayoutHelper.createFrame(48, 48));
         sendButton.setOnClickListener(new View.OnClickListener() {
@@ -815,12 +814,11 @@ public void showTopView(boolean animated, final boolean openKeyboard) {
             }
             if (animated) {
                 if (keyboardVisible || isPopupShowing()) {
-                    currentTopViewAnimation = new AnimatorSetProxy();
+                    currentTopViewAnimation = new AnimatorSet();
                     currentTopViewAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(ChatActivityEnterView.this, "topViewAnimation", 1.0f)
+                            ObjectAnimator.ofFloat(ChatActivityEnterView.this, "topViewAnimation", 1.0f)
                     );
-                    currentTopViewAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    currentTopViewAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             if (currentTopViewAnimation != null && currentTopViewAnimation.equals(animation)) {
                                 setTopViewAnimation(1.0f);
@@ -860,12 +858,11 @@ public void hideTopView(final boolean animated) {
                 currentTopViewAnimation = null;
             }
             if (animated) {
-                currentTopViewAnimation = new AnimatorSetProxy();
+                currentTopViewAnimation = new AnimatorSet();
                 currentTopViewAnimation.playTogether(
-                        ObjectAnimatorProxy.ofFloat(ChatActivityEnterView.this, "topViewAnimation", resumeValue, 0.0f)
+                        ObjectAnimator.ofFloat(ChatActivityEnterView.this, "topViewAnimation", resumeValue, 0.0f)
                 );
-                currentTopViewAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                currentTopViewAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         if (currentTopViewAnimation != null && currentTopViewAnimation.equals(animation)) {
                             topView.setVisibility(GONE);
@@ -1090,14 +1087,13 @@ private void checkSendButton(final boolean animated) {
                     }
 
                     if (attachButton != null) {
-                        runningAnimation2 = new AnimatorSetProxy();
+                        runningAnimation2 = new AnimatorSet();
                         runningAnimation2.playTogether(
-                                ObjectAnimatorProxy.ofFloat(attachButton, "alpha", 0.0f),
-                                ObjectAnimatorProxy.ofFloat(attachButton, "scaleX", 0.0f)
+                                ObjectAnimator.ofFloat(attachButton, "alpha", 0.0f),
+                                ObjectAnimator.ofFloat(attachButton, "scaleX", 0.0f)
                         );
                         runningAnimation2.setDuration(100);
-                        runningAnimation2.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        runningAnimation2.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animation) {
                                 if (runningAnimation2.equals(animation)) {
                                     attachButton.setVisibility(View.GONE);
@@ -1113,21 +1109,20 @@ public void onAnimationEnd(Object animation) {
                     }
 
                     sendButton.setVisibility(View.VISIBLE);
-                    runningAnimation = new AnimatorSetProxy();
+                    runningAnimation = new AnimatorSet();
                     runningAnimationType = 1;
 
                     runningAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(audioSendButton, "scaleX", 0.1f),
-                            ObjectAnimatorProxy.ofFloat(audioSendButton, "scaleY", 0.1f),
-                            ObjectAnimatorProxy.ofFloat(audioSendButton, "alpha", 0.0f),
-                            ObjectAnimatorProxy.ofFloat(sendButton, "scaleX", 1.0f),
-                            ObjectAnimatorProxy.ofFloat(sendButton, "scaleY", 1.0f),
-                            ObjectAnimatorProxy.ofFloat(sendButton, "alpha", 1.0f)
+                            ObjectAnimator.ofFloat(audioSendButton, "scaleX", 0.1f),
+                            ObjectAnimator.ofFloat(audioSendButton, "scaleY", 0.1f),
+                            ObjectAnimator.ofFloat(audioSendButton, "alpha", 0.0f),
+                            ObjectAnimator.ofFloat(sendButton, "scaleX", 1.0f),
+                            ObjectAnimator.ofFloat(sendButton, "scaleY", 1.0f),
+                            ObjectAnimator.ofFloat(sendButton, "alpha", 1.0f)
                     );
 
                     runningAnimation.setDuration(150);
-                    runningAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    runningAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             if (runningAnimation != null && runningAnimation.equals(animation)) {
                                 sendButton.setVisibility(View.VISIBLE);
@@ -1140,12 +1135,12 @@ public void onAnimationEnd(Object animation) {
                     });
                     runningAnimation.start();
                 } else {
-                    ViewProxy.setScaleX(audioSendButton, 0.1f);
-                    ViewProxy.setScaleY(audioSendButton, 0.1f);
-                    ViewProxy.setAlpha(audioSendButton, 0.0f);
-                    ViewProxy.setScaleX(sendButton, 1.0f);
-                    ViewProxy.setScaleY(sendButton, 1.0f);
-                    ViewProxy.setAlpha(sendButton, 1.0f);
+                    audioSendButton.setScaleX(0.1f);
+                    audioSendButton.setScaleY(0.1f);
+                    audioSendButton.setAlpha(0.0f);
+                    sendButton.setScaleX(1.0f);
+                    sendButton.setScaleY(1.0f);
+                    sendButton.setAlpha(1.0f);
                     sendButton.setVisibility(View.VISIBLE);
                     audioSendButton.setVisibility(View.GONE);
                     audioSendButton.clearAnimation();
@@ -1174,10 +1169,10 @@ public void onAnimationEnd(Object animation) {
 
                 if (attachButton != null) {
                     attachButton.setVisibility(View.VISIBLE);
-                    runningAnimation2 = new AnimatorSetProxy();
+                    runningAnimation2 = new AnimatorSet();
                     runningAnimation2.playTogether(
-                            ObjectAnimatorProxy.ofFloat(attachButton, "alpha", 1.0f),
-                            ObjectAnimatorProxy.ofFloat(attachButton, "scaleX", 1.0f)
+                            ObjectAnimator.ofFloat(attachButton, "alpha", 1.0f),
+                            ObjectAnimator.ofFloat(attachButton, "scaleX", 1.0f)
                     );
                     runningAnimation2.setDuration(100);
                     runningAnimation2.start();
@@ -1188,21 +1183,20 @@ public void onAnimationEnd(Object animation) {
                 }
 
                 audioSendButton.setVisibility(View.VISIBLE);
-                runningAnimation = new AnimatorSetProxy();
+                runningAnimation = new AnimatorSet();
                 runningAnimationType = 2;
 
                 runningAnimation.playTogether(
-                        ObjectAnimatorProxy.ofFloat(sendButton, "scaleX", 0.1f),
-                        ObjectAnimatorProxy.ofFloat(sendButton, "scaleY", 0.1f),
-                        ObjectAnimatorProxy.ofFloat(sendButton, "alpha", 0.0f),
-                        ObjectAnimatorProxy.ofFloat(audioSendButton, "scaleX", 1.0f),
-                        ObjectAnimatorProxy.ofFloat(audioSendButton, "scaleY", 1.0f),
-                        ObjectAnimatorProxy.ofFloat(audioSendButton, "alpha", 1.0f)
+                        ObjectAnimator.ofFloat(sendButton, "scaleX", 0.1f),
+                        ObjectAnimator.ofFloat(sendButton, "scaleY", 0.1f),
+                        ObjectAnimator.ofFloat(sendButton, "alpha", 0.0f),
+                        ObjectAnimator.ofFloat(audioSendButton, "scaleX", 1.0f),
+                        ObjectAnimator.ofFloat(audioSendButton, "scaleY", 1.0f),
+                        ObjectAnimator.ofFloat(audioSendButton, "alpha", 1.0f)
                 );
 
                 runningAnimation.setDuration(150);
-                runningAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                runningAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         if (runningAnimation != null && runningAnimation.equals(animation)) {
                             sendButton.setVisibility(View.GONE);
@@ -1215,12 +1209,12 @@ public void onAnimationEnd(Object animation) {
                 });
                 runningAnimation.start();
             } else {
-                ViewProxy.setScaleX(sendButton, 0.1f);
-                ViewProxy.setScaleY(sendButton, 0.1f);
-                ViewProxy.setAlpha(sendButton, 0.0f);
-                ViewProxy.setScaleX(audioSendButton, 1.0f);
-                ViewProxy.setScaleY(audioSendButton, 1.0f);
-                ViewProxy.setAlpha(audioSendButton, 1.0f);
+                sendButton.setScaleX(0.1f);
+                sendButton.setScaleY(0.1f);
+                sendButton.setAlpha(0.0f);
+                audioSendButton.setScaleX(1.0f);
+                audioSendButton.setScaleY(1.0f);
+                audioSendButton.setAlpha(1.0f);
                 sendButton.setVisibility(View.GONE);
                 sendButton.clearAnimation();
                 audioSendButton.setVisibility(View.VISIBLE);
@@ -1285,22 +1279,21 @@ private void updateAudioRecordIntefrace() {
             FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) slideText.getLayoutParams();
             params.leftMargin = AndroidUtilities.dp(30);
             slideText.setLayoutParams(params);
-            ViewProxy.setAlpha(slideText, 1);
-            ViewProxy.setX(recordPanel, AndroidUtilities.displaySize.x);
-            ViewProxy.setTranslationX(recordCircle, 0);
+            slideText.setAlpha(1);
+            recordPanel.setX(AndroidUtilities.displaySize.x);
+            recordCircle.setTranslationX(0);
             if (runningAnimationAudio != null) {
                 runningAnimationAudio.cancel();
             }
-            runningAnimationAudio = new AnimatorSetProxy();
-            runningAnimationAudio.playTogether(ObjectAnimatorProxy.ofFloat(recordPanel, "translationX", 0),
-                    ObjectAnimatorProxy.ofFloat(recordCircle, "scale", 1),
-                    ObjectAnimatorProxy.ofFloat(audioSendButton, "alpha", 0));
+            runningAnimationAudio = new AnimatorSet();
+            runningAnimationAudio.playTogether(ObjectAnimator.ofFloat(recordPanel, "translationX", 0),
+                    ObjectAnimator.ofFloat(recordCircle, "scale", 1),
+                    ObjectAnimator.ofFloat(audioSendButton, "alpha", 0));
             runningAnimationAudio.setDuration(300);
-            runningAnimationAudio.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            runningAnimationAudio.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animator) {
                     if (runningAnimationAudio != null && runningAnimationAudio.equals(animator)) {
-                        ViewProxy.setX(recordPanel, 0);
+                        recordPanel.setX(0);
                         runningAnimationAudio = null;
                     }
                 }
@@ -1325,19 +1318,18 @@ public void onAnimationEnd(Object animator) {
             if (runningAnimationAudio != null) {
                 runningAnimationAudio.cancel();
             }
-            runningAnimationAudio = new AnimatorSetProxy();
-            runningAnimationAudio.playTogether(ObjectAnimatorProxy.ofFloat(recordPanel, "translationX", AndroidUtilities.displaySize.x),
-                    ObjectAnimatorProxy.ofFloat(recordCircle, "scale", 0.0f),
-                    ObjectAnimatorProxy.ofFloat(audioSendButton, "alpha", 1.0f));
+            runningAnimationAudio = new AnimatorSet();
+            runningAnimationAudio.playTogether(ObjectAnimator.ofFloat(recordPanel, "translationX", AndroidUtilities.displaySize.x),
+                    ObjectAnimator.ofFloat(recordCircle, "scale", 0.0f),
+                    ObjectAnimator.ofFloat(audioSendButton, "alpha", 1.0f));
             runningAnimationAudio.setDuration(300);
-            runningAnimationAudio.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            runningAnimationAudio.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animator) {
                     if (runningAnimationAudio != null && runningAnimationAudio.equals(animator)) {
                         FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) slideText.getLayoutParams();
                         params.leftMargin = AndroidUtilities.dp(30);
                         slideText.setLayoutParams(params);
-                        ViewProxy.setAlpha(slideText, 1);
+                        slideText.setAlpha(1);
                         recordPanel.setVisibility(View.GONE);
                         recordCircle.setVisibility(View.GONE);
                         runningAnimationAudio = null;
@@ -1489,7 +1481,7 @@ private void updateBotButton() {
             botButton.setVisibility(GONE);
         }
         updateFieldRight(2);
-        ViewProxy.setPivotX(attachButton, AndroidUtilities.dp(botButton.getVisibility() == GONE ? 48 : 96));
+        attachButton.setPivotX(AndroidUtilities.dp(botButton.getVisibility() == GONE ? 48 : 96));
         attachButton.clearAnimation();
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachView.java
index 00dbf0795..b32383ff3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachView.java
@@ -30,7 +30,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessageObject;
@@ -416,7 +415,7 @@ private PhotoAttachPhotoCell getCellForIndex(int index) {
             object.parentView = attachPhotoRecyclerView;
             object.imageReceiver = cell.getImageView().getImageReceiver();
             object.thumb = object.imageReceiver.getBitmap();
-            object.scale = ViewProxy.getScaleX(cell.getImageView());
+            object.scale = cell.getImageView().getScaleX();
             object.clipBottomAddition = (Build.VERSION.SDK_INT >= 21 ? 0 : -AndroidUtilities.statusBarHeight);
             cell.getCheckBox().setVisibility(View.GONE);
             return object;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java
index 5a075500f..7b68bc2e1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
@@ -18,7 +19,6 @@
 import android.view.View;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 
 public class CheckBox extends View {
 
@@ -37,7 +37,7 @@
     private boolean drawBackground;
 
     private float progress;
-    private ObjectAnimatorProxy checkAnimator;
+    private ObjectAnimator checkAnimator;
     private boolean isCheckAnimation = true;
 
     private boolean attachedToWindow;
@@ -117,7 +117,7 @@ private void cancelCheckAnimator() {
 
     private void animateToCheckedState(boolean newCheckedState) {
         isCheckAnimation = newCheckedState;
-        checkAnimator = ObjectAnimatorProxy.ofFloatProxy(this, "progress", newCheckedState ? 1 : 0);
+        checkAnimator = ObjectAnimator.ofFloat(this, "progress", newCheckedState ? 1 : 0);
         checkAnimator.setDuration(300);
         checkAnimator.start();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBoxSquare.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBoxSquare.java
index eea7e1615..ab89f7ab0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBoxSquare.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBoxSquare.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
@@ -19,7 +20,6 @@
 import android.view.View;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 
 public class CheckBoxSquare extends View {
 
@@ -32,7 +32,7 @@
     private Canvas drawCanvas;
 
     private float progress;
-    private ObjectAnimatorProxy checkAnimator;
+    private ObjectAnimator checkAnimator;
 
     private boolean attachedToWindow;
     private boolean isChecked;
@@ -91,7 +91,7 @@ private void cancelCheckAnimator() {
     }
 
     private void animateToCheckedState(boolean newCheckedState) {
-        checkAnimator = ObjectAnimatorProxy.ofFloatProxy(this, "progress", newCheckedState ? 1 : 0);
+        checkAnimator = ObjectAnimator.ofFloat(this, "progress", newCheckedState ? 1 : 0);
         checkAnimator.setDuration(300);
         checkAnimator.start();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java
index 615777efe..4ed69e2b1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java
@@ -19,7 +19,6 @@
 import android.view.View;
 
 import org.telegram.messenger.FileLog;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 
 public class ClippingImageView extends View {
 
@@ -64,10 +63,10 @@ public float getAnimationProgress() {
     public void setAnimationProgress(float progress) {
         animationProgress = progress;
 
-        ViewProxy.setScaleX(this, animationValues[0][0] + (animationValues[1][0] - animationValues[0][0]) * animationProgress);
-        ViewProxy.setScaleY(this, animationValues[0][1] + (animationValues[1][1] - animationValues[0][1]) * animationProgress);
-        ViewProxy.setTranslationX(this, animationValues[0][2] + (animationValues[1][2] - animationValues[0][2]) * animationProgress);
-        ViewProxy.setTranslationY(this, animationValues[0][3] + (animationValues[1][3] - animationValues[0][3]) * animationProgress);
+        this.setScaleX(animationValues[0][0] + (animationValues[1][0] - animationValues[0][0]) * animationProgress);
+        this.setScaleY(animationValues[0][1] + (animationValues[1][1] - animationValues[0][1]) * animationProgress);
+        this.setTranslationX(animationValues[0][2] + (animationValues[1][2] - animationValues[0][2]) * animationProgress);
+        this.setTranslationY(animationValues[0][3] + (animationValues[1][3] - animationValues[0][3]) * animationProgress);
         setClipHorizontal((int) (animationValues[0][4] + (animationValues[1][4] - animationValues[0][4]) * animationProgress));
         setClipTop((int) (animationValues[0][5] + (animationValues[1][5] - animationValues[0][5]) * animationProgress));
         setClipBottom((int) (animationValues[0][6] + (animationValues[1][6] - animationValues[0][6]) * animationProgress));
@@ -105,7 +104,7 @@ public void onDraw(Canvas canvas) {
             return;
         }
         if (bmp != null) {
-            float scaleY = ViewProxy.getScaleY(this);
+            float scaleY = this.getScaleY();
             canvas.save();
 
             if (needRadius) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index 6363e5855..9adb80426 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -41,7 +41,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.EmojiData;
 import org.telegram.messenger.LocaleController;
@@ -858,12 +857,12 @@ public boolean onTouchEvent(MotionEvent ev) {
                             first = false;
                             lastX = ev.getX();
                         }
-                        float newTranslationX = ViewProxy.getTranslationX(scrollSlidingTabStrip);
+                        float newTranslationX = scrollSlidingTabStrip.getTranslationX();
                         if (scrollSlidingTabStrip.getScrollX() == 0 && newTranslationX == 0) {
                             if (!startedScroll && lastX - ev.getX() < 0) {
                                 if (pager.beginFakeDrag()) {
                                     startedScroll = true;
-                                    lastTranslateX = ViewProxy.getTranslationX(scrollSlidingTabStrip);
+                                    lastTranslateX = scrollSlidingTabStrip.getTranslationX();
                                 }
                             } else if (startedScroll && lastX - ev.getX() > 0) {
                                 if (pager.isFakeDragging()) {
@@ -905,7 +904,7 @@ public boolean onTouchEvent(MotionEvent ev) {
             scrollSlidingTabStrip.setUnderlineColor(0xffe2e5e7);
             scrollSlidingTabStrip.setVisibility(INVISIBLE);
             addView(scrollSlidingTabStrip, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 48, Gravity.LEFT | Gravity.TOP));
-            ViewProxy.setTranslationX(scrollSlidingTabStrip, AndroidUtilities.displaySize.x);
+            scrollSlidingTabStrip.setTranslationX(AndroidUtilities.displaySize.x);
             updateStickerTabs();
             scrollSlidingTabStrip.setDelegate(new ScrollSlidingTabStrip.ScrollSlidingTabStripDelegate() {
                 @Override
@@ -1135,9 +1134,9 @@ private void onPageScrolled(int position, int width, int positionOffsetPixels) {
             }
         }
 
-        if (ViewProxy.getTranslationX(pagerSlidingTabStripContainer) != margin) {
-            ViewProxy.setTranslationX(pagerSlidingTabStripContainer, margin);
-            ViewProxy.setTranslationX(scrollSlidingTabStrip, width + margin);
+        if (pagerSlidingTabStripContainer.getTranslationX() != margin) {
+            pagerSlidingTabStripContainer.setTranslationX(margin);
+            pagerSlidingTabStripContainer.setTranslationX(width + margin);
             scrollSlidingTabStrip.setVisibility(margin < 0 ? VISIBLE : INVISIBLE);
             if (Build.VERSION.SDK_INT < 11) {
                 if (margin <= -width) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberTextView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberTextView.java
index dbc1f0f5b..9b1270534 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberTextView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberTextView.java
@@ -8,6 +8,8 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
@@ -18,8 +20,6 @@
 import android.view.View;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 
 import java.util.ArrayList;
 import java.util.Locale;
@@ -29,7 +29,7 @@
     private ArrayList<StaticLayout> letters = new ArrayList<>();
     private ArrayList<StaticLayout> oldLetters = new ArrayList<>();
     private TextPaint textPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
-    private ObjectAnimatorProxy animator;
+    private ObjectAnimator animator;
     private float progress = 0.0f;
     private int currentNumber = 1;
 
@@ -77,10 +77,9 @@ public void setNumber(int number, boolean animated) {
             }
         }
         if (animated && !oldLetters.isEmpty()) {
-            animator = ObjectAnimatorProxy.ofFloatProxy(this, "progress", forwardAnimation ? -1 : 1, 0);
+            animator = ObjectAnimator.ofFloat(this, "progress", forwardAnimation ? -1 : 1, 0);
             animator.setDuration(150);
-            animator.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animator.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     animator = null;
                     oldLetters.clear();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index cf49b2769..3fe31dca8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -8,6 +8,10 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
@@ -52,12 +56,9 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Locale;
 
 public class PasscodeView extends FrameLayout {
@@ -72,7 +73,7 @@
         private ArrayList<TextView> dotTextViews;
         private StringBuilder stringBuilder;
         private String DOT = "\u2022";
-        private AnimatorSetProxy currentAnimation;
+        private AnimatorSet currentAnimation;
         private Runnable dotRunnable;
 
         public AnimatingTextView(Context context) {
@@ -86,9 +87,9 @@ public AnimatingTextView(Context context) {
                 textView.setTextColor(0xffffffff);
                 textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 36);
                 textView.setGravity(Gravity.CENTER);
-                ViewProxy.setAlpha(textView, 0);
-                ViewProxy.setPivotX(textView, AndroidUtilities.dp(25));
-                ViewProxy.setPivotY(textView, AndroidUtilities.dp(25));
+                textView.setAlpha(0);
+                textView.setPivotX(AndroidUtilities.dp(25));
+                textView.setPivotY(AndroidUtilities.dp(25));
                 addView(textView);
                 LayoutParams layoutParams = (LayoutParams) textView.getLayoutParams();
                 layoutParams.width = AndroidUtilities.dp(50);
@@ -101,10 +102,10 @@ public AnimatingTextView(Context context) {
                 textView.setTextColor(0xffffffff);
                 textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 36);
                 textView.setGravity(Gravity.CENTER);
-                ViewProxy.setAlpha(textView, 0);
+                textView.setAlpha(0);
                 textView.setText(DOT);
-                ViewProxy.setPivotX(textView, AndroidUtilities.dp(25));
-                ViewProxy.setPivotY(textView, AndroidUtilities.dp(25));
+                textView.setPivotX(AndroidUtilities.dp(25));
+                textView.setPivotY(AndroidUtilities.dp(25));
                 addView(textView);
                 layoutParams = (LayoutParams) textView.getLayoutParams();
                 layoutParams.width = AndroidUtilities.dp(50);
@@ -130,37 +131,37 @@ public void appendCharacter(String c) {
             }
 
 
-            ArrayList<Object> animators = new ArrayList<>();
+            Collection<Animator> animators  = new ArrayList<>();
             final int newPos = stringBuilder.length();
             stringBuilder.append(c);
 
             TextView textView = characterTextViews.get(newPos);
             textView.setText(c);
-            ViewProxy.setTranslationX(textView, getXForTextView(newPos));
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0, 1));
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0, 1));
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0, 1));
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationY", AndroidUtilities.dp(20), 0));
+            textView.setTranslationX(getXForTextView(newPos));
+            animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0, 1));
+            animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0, 1));
+            animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0, 1));
+            animators.add(ObjectAnimator.ofFloat(textView, "translationY", AndroidUtilities.dp(20), 0));
             textView = dotTextViews.get(newPos);
-            ViewProxy.setTranslationX(textView, getXForTextView(newPos));
-            ViewProxy.setAlpha(textView, 0);
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0, 1));
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0, 1));
-            animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationY", AndroidUtilities.dp(20), 0));
+            textView.setTranslationX(getXForTextView(newPos));
+            textView.setAlpha(0);
+            animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0, 1));
+            animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0, 1));
+            animators.add(ObjectAnimator.ofFloat(textView, "translationY", AndroidUtilities.dp(20), 0));
 
             for (int a = newPos + 1; a < 4; a++) {
                 textView = characterTextViews.get(a);
-                if (ViewProxy.getAlpha(textView) != 0) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
+                if (textView.getAlpha() != 0) {
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
                 }
 
                 textView = dotTextViews.get(a);
-                if (ViewProxy.getAlpha(textView) != 0) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
+                if (textView.getAlpha() != 0) {
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
                 }
             }
 
@@ -173,22 +174,21 @@ public void run() {
                     if (dotRunnable != this) {
                         return;
                     }
-                    ArrayList<Object> animators = new ArrayList<>();
+                    Collection<Animator> animators = new ArrayList<>();
 
                     TextView textView = characterTextViews.get(newPos);
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
                     textView = dotTextViews.get(newPos);
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 1));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 1));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 1));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 1));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 1));
+                    animators.add(ObjectAnimator.ofFloat(textView, "alpha", 1));
 
-                    currentAnimation = new AnimatorSetProxy();
+                    currentAnimation = new AnimatorSet();
                     currentAnimation.setDuration(150);
                     currentAnimation.playTogether(animators);
-                    currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    currentAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             if (currentAnimation != null && currentAnimation.equals(animation)) {
                                 currentAnimation = null;
@@ -202,27 +202,26 @@ public void onAnimationEnd(Object animation) {
 
             for (int a = 0; a < newPos; a++) {
                 textView = characterTextViews.get(a);
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationX", getXForTextView(a)));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationY", 0));
+                animators.add(ObjectAnimator.ofFloat(textView, "translationX", getXForTextView(a)));
+                animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
+                animators.add(ObjectAnimator.ofFloat(textView, "translationY", 0));
                 textView = dotTextViews.get(a);
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationX", getXForTextView(a)));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 1));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 1));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 1));
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationY", 0));
+                animators.add(ObjectAnimator.ofFloat(textView, "translationX", getXForTextView(a)));
+                animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 1));
+                animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 1));
+                animators.add(ObjectAnimator.ofFloat(textView, "alpha", 1));
+                animators.add(ObjectAnimator.ofFloat(textView, "translationY", 0));
             }
 
             if (currentAnimation != null) {
                 currentAnimation.cancel();
             }
-            currentAnimation = new AnimatorSetProxy();
+            currentAnimation = new AnimatorSet();
             currentAnimation.setDuration(150);
             currentAnimation.playTogether(animators);
-            currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            currentAnimation.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (currentAnimation != null && currentAnimation.equals(animation)) {
                         currentAnimation = null;
@@ -250,7 +249,7 @@ public void eraseLastCharacter() {
                 FileLog.e("tmessages", e);
             }
 
-            ArrayList<Object> animators = new ArrayList<>();
+            Collection<Animator> animators = new ArrayList<>();
             int deletingPos = stringBuilder.length() - 1;
             if (deletingPos != 0) {
                 stringBuilder.deleteCharAt(deletingPos);
@@ -258,21 +257,21 @@ public void eraseLastCharacter() {
 
             for (int a = deletingPos; a < 4; a++) {
                 TextView textView = characterTextViews.get(a);
-                if (ViewProxy.getAlpha(textView) != 0) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationX", getXForTextView(a)));
+                if (textView.getAlpha() != 0) {
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "translationY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "translationX", getXForTextView(a)));
                 }
 
                 textView = dotTextViews.get(a);
-                if (ViewProxy.getAlpha(textView) != 0) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationY", 0));
-                    animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationX", getXForTextView(a)));
+                if (textView.getAlpha() != 0) {
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "translationY", 0));
+                    animators.add(ObjectAnimator.ofFloat(textView, "translationX", getXForTextView(a)));
                 }
             }
 
@@ -282,9 +281,9 @@ public void eraseLastCharacter() {
 
             for (int a = 0; a < deletingPos; a++) {
                 TextView textView = characterTextViews.get(a);
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationX", getXForTextView(a)));
+                animators.add(ObjectAnimator.ofFloat(textView, "translationX", getXForTextView(a)));
                 textView = dotTextViews.get(a);
-                animators.add(ObjectAnimatorProxy.ofFloat(textView, "translationX", getXForTextView(a)));
+                animators.add(ObjectAnimator.ofFloat(textView, "translationX", getXForTextView(a)));
             }
 
             if (dotRunnable != null) {
@@ -295,11 +294,10 @@ public void eraseLastCharacter() {
             if (currentAnimation != null) {
                 currentAnimation.cancel();
             }
-            currentAnimation = new AnimatorSetProxy();
+            currentAnimation = new AnimatorSet();
             currentAnimation.setDuration(150);
             currentAnimation.playTogether(animators);
-            currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            currentAnimation.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (currentAnimation != null && currentAnimation.equals(animation)) {
                         currentAnimation = null;
@@ -323,29 +321,28 @@ private void eraseAllCharacters(final boolean animated) {
             }
             stringBuilder.delete(0, stringBuilder.length());
             if (animated) {
-                ArrayList<Object> animators = new ArrayList<>();
+                Collection<Animator> animators  = new ArrayList<>();
 
                 for (int a = 0; a < 4; a++) {
                     TextView textView = characterTextViews.get(a);
-                    if (ViewProxy.getAlpha(textView) != 0) {
-                        animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                        animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                        animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
+                    if (textView.getAlpha() != 0) {
+                        animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                        animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                        animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
                     }
 
                     textView = dotTextViews.get(a);
-                    if (ViewProxy.getAlpha(textView) != 0) {
-                        animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleX", 0));
-                        animators.add(ObjectAnimatorProxy.ofFloat(textView, "scaleY", 0));
-                        animators.add(ObjectAnimatorProxy.ofFloat(textView, "alpha", 0));
+                    if (textView.getAlpha() != 0) {
+                        animators.add(ObjectAnimator.ofFloat(textView, "scaleX", 0));
+                        animators.add(ObjectAnimator.ofFloat(textView, "scaleY", 0));
+                        animators.add(ObjectAnimator.ofFloat(textView, "alpha", 0));
                     }
                 }
 
-                currentAnimation = new AnimatorSetProxy();
+                currentAnimation = new AnimatorSet();
                 currentAnimation.setDuration(150);
                 currentAnimation.playTogether(animators);
-                currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                currentAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         if (currentAnimation != null && currentAnimation.equals(animation)) {
                             currentAnimation = null;
@@ -356,9 +353,9 @@ public void onAnimationEnd(Object animation) {
             } else {
                 for (int a = 0; a < 4; a++) {
                     TextView textView = characterTextViews.get(a);
-                    ViewProxy.setAlpha(textView, 0);
+                    textView.setAlpha(0);
                     textView = dotTextViews.get(a);
-                    ViewProxy.setAlpha(textView, 0);
+                    textView.setAlpha(0);
                 }
             }
         }
@@ -377,23 +374,23 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             for (int a = 0; a < 4; a++) {
                 if (a < stringBuilder.length()) {
                     TextView textView = characterTextViews.get(a);
-                    ViewProxy.setAlpha(textView, 0);
-                    ViewProxy.setScaleX(textView, 1);
-                    ViewProxy.setScaleY(textView, 1);
-                    ViewProxy.setTranslationY(textView, 0);
-                    ViewProxy.setTranslationX(textView, getXForTextView(a));
+                    textView.setAlpha(0);
+                    textView.setScaleX(1);
+                    textView.setScaleY(1);
+                    textView.setTranslationY(0);
+                    textView.setTranslationX(getXForTextView(a));
 
                     textView = dotTextViews.get(a);
-                    ViewProxy.setAlpha(textView, 1);
-                    ViewProxy.setScaleX(textView, 1);
-                    ViewProxy.setScaleY(textView, 1);
-                    ViewProxy.setTranslationY(textView, 0);
-                    ViewProxy.setTranslationX(textView, getXForTextView(a));
+                    textView.setAlpha(1);
+                    textView.setScaleX(1);
+                    textView.setScaleY(1);
+                    textView.setTranslationY(0);
+                    textView.setTranslationX(getXForTextView(a));
                 } else {
                     TextView textView = characterTextViews.get(a);
-                    ViewProxy.setAlpha(textView, 0);
+                    textView.setAlpha(0);
                     textView = dotTextViews.get(a);
-                    ViewProxy.setAlpha(textView, 0);
+                    textView.setAlpha(0);
                 }
             }
             super.onLayout(changed, left, top, right, bottom);
@@ -765,19 +762,18 @@ private void processDone(boolean fingerprint) {
         AndroidUtilities.hideKeyboard(passwordEditText);
 
         if (Build.VERSION.SDK_INT >= 14) {
-            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-            animatorSetProxy.setDuration(200);
-            animatorSetProxy.playTogether(
-                    ObjectAnimatorProxy.ofFloat(this, "translationY", AndroidUtilities.dp(20)),
-                    ObjectAnimatorProxy.ofFloat(this, "alpha", AndroidUtilities.dp(0.0f)));
-            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            AnimatorSet animatorSet = new AnimatorSet();
+            animatorSet.setDuration(200);
+            animatorSet.playTogether(
+                    ObjectAnimator.ofFloat(this, "translationY", AndroidUtilities.dp(20)),
+                    ObjectAnimator.ofFloat(this, "alpha", AndroidUtilities.dp(0.0f)));
+            animatorSet.addListener(new AnimatorListenerAdapter(){
                 public void onAnimationEnd(Object animation) {
                     PasscodeView.this.clearAnimation();
                     setVisibility(View.GONE);
                 }
             });
-            animatorSetProxy.start();
+            animatorSet.start();
         } else {
             setVisibility(View.GONE);
         }
@@ -796,16 +792,15 @@ private void shakeTextView(final float x, final int num) {
             passcodeTextView.clearAnimation();
             return;
         }
-        AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-        animatorSetProxy.playTogether(ObjectAnimatorProxy.ofFloat(passcodeTextView, "translationX", AndroidUtilities.dp(x)));
-        animatorSetProxy.setDuration(50);
-        animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        AnimatorSet animatorSet = new AnimatorSet();
+        animatorSet.playTogether(ObjectAnimator.ofFloat(passcodeTextView, "translationX", AndroidUtilities.dp(x)));
+        animatorSet.setDuration(50);
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animation) {
                 shakeTextView(num == 5 ? 0 : -x, num + 1);
             }
         });
-        animatorSetProxy.start();
+        animatorSet.start();
     }
 
     private void onPasscodeError() {
@@ -987,8 +982,8 @@ public void onShow() {
             return;
         }
         if (Build.VERSION.SDK_INT >= 14) {
-            ViewProxy.setAlpha(this, 1.0f);
-            ViewProxy.setTranslationY(this, 0);
+            this.setAlpha(1.0f);
+            this.setTranslationY(0);
             this.clearAnimation();
         }
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
index 0ecb1b689..cabfbe4c7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -35,10 +38,6 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.PhotoEditToolCell;
 
 import java.nio.ByteBuffer;
@@ -1869,24 +1868,22 @@ public void switchToOrFromEditMode() {
             blurControl.setVisibility(INVISIBLE);
         }
 
-        AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+        AnimatorSet animatorSet = new AnimatorSet();
         animatorSet.playTogether(
-                ObjectAnimatorProxy.ofFloat(viewFrom, "translationY", 0, AndroidUtilities.dp(126))
+                ObjectAnimator.ofFloat(viewFrom, "translationY", 0, AndroidUtilities.dp(126))
         );
-        animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        animatorSet.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animation) {
                 viewFrom.clearAnimation();
                 viewFrom.setVisibility(GONE);
                 viewTo.setVisibility(VISIBLE);
-                ViewProxy.setTranslationY(viewTo, AndroidUtilities.dp(126));
+                viewTo.setTranslationY(AndroidUtilities.dp(126));
 
-                AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+                AnimatorSet animatorSet = new AnimatorSet();
                 animatorSet.playTogether(
-                        ObjectAnimatorProxy.ofFloat(viewTo, "translationY", 0)
+                        ObjectAnimator.ofFloat(viewTo, "translationY", 0)
                 );
-                animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                animatorSet.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         viewTo.clearAnimation();
                         if (selectedTool == enhanceTool) {
@@ -2054,10 +2051,10 @@ public void setEditViewFirst() {
 
     private void checkEnhance() {
         if (enhanceValue == 0) {
-            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
-            animatorSetProxy.setDuration(200);
-            animatorSetProxy.playTogether(ObjectAnimatorProxy.ofInt(valueSeekBar, "progress", 50));
-            animatorSetProxy.start();
+            AnimatorSet animatorSet = new AnimatorSet();
+            animatorSet.setDuration(200);
+            animatorSet.playTogether(ObjectAnimator.ofInt(valueSeekBar, "progress", 50));
+            animatorSet.start();
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
index 87532d29e..835fd38e4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
@@ -8,6 +8,8 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.text.Editable;
 import android.text.InputFilter;
@@ -32,8 +34,6 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 
 public class PhotoViewerCaptionEnterView extends FrameLayoutFixed implements NotificationCenter.NotificationCenterDelegate, SizeNotifierFrameLayoutPhoto.SizeNotifierFrameLayoutPhotoDelegate {
 
@@ -48,9 +48,9 @@
     private EmojiView emojiView;
     private SizeNotifierFrameLayoutPhoto sizeNotifierLayout;
 
-    private AnimatorSetProxy runningAnimation;
-    private AnimatorSetProxy runningAnimation2;
-    private ObjectAnimatorProxy runningAnimationAudio;
+    private AnimatorSet runningAnimation;
+    private AnimatorSet runningAnimation2;
+    private ObjectAnimator runningAnimationAudio;
     private int runningAnimationType;
     private int audioInterfaceState;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PlayerView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PlayerView.java
index 71a23d079..674627297 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PlayerView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PlayerView.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.os.Build;
@@ -23,10 +26,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.NotificationCenter;
@@ -39,7 +38,7 @@
     private ImageView playButton;
     private TextView titleTextView;
     private MessageObject lastMessageObject;
-    private AnimatorSetProxy animatorSet;
+    private AnimatorSet animatorSet;
     private float yPosition;
     private BaseFragment fragment;
     private float topPadding;
@@ -171,13 +170,12 @@ private void checkPlayer(boolean create) {
                         animatorSet.cancel();
                         animatorSet = null;
                     }
-                    animatorSet = new AnimatorSetProxy();
-                    animatorSet.playTogether(ObjectAnimatorProxy.ofFloat(this, "translationY", -AndroidUtilities.dp(36)),
-                            ObjectAnimatorProxy.ofFloat(this, "topPadding", 0));
+                    animatorSet = new AnimatorSet();
+                    animatorSet.playTogether(ObjectAnimator.ofFloat(this, "translationY", -AndroidUtilities.dp(36)),
+                            ObjectAnimator.ofFloat(this, "topPadding", 0));
                     animatorSet.setDuration(200);
-                    animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
-                        public void onAnimationEnd(Object animation) {
+                    animatorSet.addListener(new AnimatorListenerAdapter() {
+                       public void onAnimationEnd(Object animation) {
                             if (animatorSet != null && animatorSet.equals(animation)) {
                                 clearAnimation();
                                 setVisibility(GONE);
@@ -191,7 +189,7 @@ public void onAnimationEnd(Object animation) {
         } else {
             if (create && topPadding == 0) {
                 setTopPadding(AndroidUtilities.dp(36));
-                ViewProxy.setTranslationY(this, 0);
+                this.setTranslationY(0);
                 yPosition = 0;
             }
             if (!visible) {
@@ -200,12 +198,11 @@ public void onAnimationEnd(Object animation) {
                         animatorSet.cancel();
                         animatorSet = null;
                     }
-                    animatorSet = new AnimatorSetProxy();
-                    animatorSet.playTogether(ObjectAnimatorProxy.ofFloat(this, "translationY", -AndroidUtilities.dp(36), 0),
-                            ObjectAnimatorProxy.ofFloat(this, "topPadding", AndroidUtilities.dp(36)));
+                    animatorSet = new AnimatorSet();
+                    animatorSet.playTogether(ObjectAnimator.ofFloat(this, "translationY", -AndroidUtilities.dp(36), 0),
+                            ObjectAnimator.ofFloat(this, "topPadding", AndroidUtilities.dp(36)));
                     animatorSet.setDuration(200);
-                    animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    animatorSet.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationEnd(Object animation) {
                             if (animatorSet != null && animatorSet.equals(animation)) {
                                 animatorSet = null;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RadioButton.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RadioButton.java
index ed9293bf3..dc183a3e2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RadioButton.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RadioButton.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
@@ -18,7 +19,6 @@
 import android.view.View;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageLoader;
 
@@ -34,7 +34,7 @@
     private int color = 0xffd7e8f7;
 
     private float progress;
-    private ObjectAnimatorProxy checkAnimator;
+    private ObjectAnimator checkAnimator;
 
     private boolean attachedToWindow;
     private boolean isChecked;
@@ -94,7 +94,7 @@ private void cancelCheckAnimator() {
     }
 
     private void animateToCheckedState(boolean newCheckedState) {
-        checkAnimator = ObjectAnimatorProxy.ofFloatProxy(this, "progress", newCheckedState ? 1 : 0);
+        checkAnimator = ObjectAnimator.ofFloat(this, "progress", newCheckedState ? 1 : 0);
         checkAnimator.setDuration(200);
         checkAnimator.start();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
index 2f93be636..c8ad1ea12 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
@@ -16,6 +16,7 @@
 
 package org.telegram.ui.Components;
 
+import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.PorterDuff;
@@ -33,7 +34,6 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 
 public class Switch extends CompoundButton {
 
@@ -89,7 +89,7 @@ public static float constrain(float amount, float low, float high) {
     private int mSwitchRight;
     private int mSwitchBottom;
 
-    private ObjectAnimatorProxy mPositionAnimator;
+    private ObjectAnimator mPositionAnimator;
 
     private final Rect mTempRect = new Rect();
 
@@ -358,7 +358,7 @@ private void stopDrag(MotionEvent ev) {
 
     private void animateThumbToCheckedState(boolean newCheckedState) {
         final float targetPosition = newCheckedState ? 1 : 0;
-        mPositionAnimator = ObjectAnimatorProxy.ofFloatProxy(this, "thumbPosition", targetPosition);
+        mPositionAnimator = ObjectAnimator.ofFloat(this, "thumbPosition", targetPosition);
         mPositionAnimator.setDuration(THUMB_ANIMATION_DURATION);
         mPositionAnimator.start();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 62f8777c1..a552951f7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -57,8 +57,6 @@
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.DialogsAdapter;
 import org.telegram.ui.Adapters.DialogsSearchAdapter;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.ProfileSearchCell;
 import org.telegram.ui.Cells.UserCell;
 import org.telegram.ui.Cells.DialogCell;
@@ -232,7 +230,7 @@ public void onSearchCollapse() {
                     if (!onlySelect) {
                         floatingButton.setVisibility(View.VISIBLE);
                         floatingHidden = true;
-                        ViewProxy.setTranslationY(floatingButton, AndroidUtilities.dp(100));
+                        floatingButton.setTranslationY(AndroidUtilities.dp(100));
                         hideFloatingButton(false);
                     }
                     if (listView.getAdapter() != dialogsAdapter) {
@@ -823,7 +821,7 @@ public void onConfigurationChanged(Configuration newConfig) {
             floatingButton.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
                 @Override
                 public void onGlobalLayout() {
-                    ViewProxy.setTranslationY(floatingButton, floatingHidden ? AndroidUtilities.dp(100) : 0);
+                    floatingButton.setTranslationY(floatingHidden ? AndroidUtilities.dp(100) : 0);
                     floatingButton.setClickable(!floatingHidden);
                     if (floatingButton != null) {
                         if (Build.VERSION.SDK_INT < 16) {
@@ -963,7 +961,7 @@ private void hideFloatingButton(boolean hide) {
             return;
         }
         floatingHidden = hide;
-        ObjectAnimatorProxy animator = ObjectAnimatorProxy.ofFloatProxy(floatingButton, "translationY", floatingHidden ? AndroidUtilities.dp(100) : 0).setDuration(300);
+        ObjectAnimator animator = ObjectAnimator.ofFloat(floatingButton, "translationY", floatingHidden ? AndroidUtilities.dp(100) : 0).setDuration(300);
         animator.setInterpolator(floatingInterpolator);
         floatingButton.setClickable(!hide);
         animator.start();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
index db9e4887c..1cdde8d65 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui;
 
+import android.animation.Animator;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.app.AlertDialog;
 import android.content.BroadcastReceiver;
@@ -36,8 +39,6 @@
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Cells.SharedDocumentCell;
 import org.telegram.ui.Components.LayoutHelper;
@@ -48,6 +49,7 @@
 import java.io.FileReader;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collection;
 import java.util.Comparator;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -238,12 +240,12 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int i, long id)
                     selectedFiles.put(file.toString(), item);
                     selectedMessagesCountTextView.setNumber(1, false);
                     if (Build.VERSION.SDK_INT >= 11) {
-                        AnimatorSetProxy animatorSet = new AnimatorSetProxy();
-                        ArrayList<Object> animators = new ArrayList<>();
+                        AnimatorSet animatorSet = new AnimatorSet();
+                        Collection<Animator> animators = new ArrayList<>();
                         for (int a = 0; a < actionModeViews.size(); a++) {
                             View view2 = actionModeViews.get(a);
                             AndroidUtilities.clearDrawableAnimation(view2);
-                            animators.add(ObjectAnimatorProxy.ofFloat(view2, "scaleY", 0.1f, 1.0f));
+                            animators.add(ObjectAnimator.ofFloat(view2, "scaleY", 0.1f, 1.0f));
                         }
                         animatorSet.playTogether(animators);
                         animatorSet.setDuration(250);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index 5ee1c3916..5e2a925f4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui;
 
+import android.animation.Animator;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
@@ -63,8 +66,6 @@
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Adapters.BaseSectionsAdapter;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.LoadingCell;
 import org.telegram.ui.Cells.SharedDocumentCell;
@@ -81,6 +82,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Timer;
@@ -972,12 +974,12 @@ private boolean onItemLongClick(MessageObject item, View view, int a) {
         actionBar.createActionMode().getItem(delete).setVisibility(cantDeleteMessagesCount == 0 ? View.VISIBLE : View.GONE);
         selectedMessagesCountTextView.setNumber(1, false);
         if (Build.VERSION.SDK_INT >= 11) {
-            AnimatorSetProxy animatorSet = new AnimatorSetProxy();
-            ArrayList<Object> animators = new ArrayList<>();
+            AnimatorSet animatorSet = new AnimatorSet();
+            Collection<Animator> animators = new ArrayList<>();
             for (int i = 0; i < actionModeViews.size(); i++) {
                 View view2 = actionModeViews.get(i);
                 AndroidUtilities.clearDrawableAnimation(view2);
-                animators.add(ObjectAnimatorProxy.ofFloat(view2, "scaleY", 0.1f, 1.0f));
+                animators.add(ObjectAnimator.ofFloat(view2, "scaleY", 0.1f, 1.0f));
             }
             animatorSet.playTogether(animators);
             animatorSet.setDuration(250);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index c7cb26b90..d5a3464e3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -34,7 +34,6 @@
 import org.json.JSONArray;
 import org.json.JSONObject;
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
@@ -513,7 +512,7 @@ private PhotoPickerPhotoCell getCellForIndex(int index) {
             object.viewX = coords[0];
             object.viewY = coords[1] - AndroidUtilities.statusBarHeight;
             if (Build.VERSION.SDK_INT < 11) {
-                float scale = ViewProxy.getScaleX(cell.photoImage);
+                float scale = cell.photoImage.getScaleX();
                 if (scale != 1) {
                     int width = cell.photoImage.getMeasuredWidth();
                     object.viewX += (width - width * scale) / 2;
@@ -523,7 +522,7 @@ private PhotoPickerPhotoCell getCellForIndex(int index) {
             object.parentView = listView;
             object.imageReceiver = cell.photoImage.getImageReceiver();
             object.thumb = object.imageReceiver.getBitmap();
-            object.scale = ViewProxy.getScaleX(cell.photoImage);
+            object.scale = cell.photoImage.getScaleX();
             cell.checkBox.setVisibility(View.GONE);
             return object;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index fa07e8ffb..ed58e56cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -9,6 +9,10 @@
 package org.telegram.ui;
 
 import android.Manifest;
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -67,10 +71,6 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.Adapters.MentionsAdapter;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -87,6 +87,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Date;
 import java.util.HashMap;
@@ -124,7 +125,7 @@
     private ActionBarMenuItem tuneItem;
     private ActionBarMenuItem captionItem;
     private ActionBarMenuItem captionDoneItem;
-    private AnimatorSetProxy currentActionBarAnimation;
+    private AnimatorSet currentActionBarAnimation;
     private PhotoCropView photoCropView;
     private PhotoFilterView photoFilterView;
     private AlertDialog visibleDialog;
@@ -142,7 +143,7 @@
     private MentionsAdapter mentionsAdapter;
     private RecyclerListView mentionListView;
     private LinearLayoutManager mentionLayoutManager;
-    private AnimatorSetProxy mentionListAnimation;
+    private AnimatorSet mentionListAnimation;
     private boolean allowMentions;
 
     private int animationInProgress = 0;
@@ -188,8 +189,8 @@
     private float animateToScale;
     private float animationValue;
     private long animationStartTime;
-    private AnimatorSetProxy imageMoveAnimation;
-    private AnimatorSetProxy changeModeAnimation;
+    private AnimatorSet imageMoveAnimation;
+    private AnimatorSet changeModeAnimation;
     private GestureDetector gestureDetector;
     private DecelerateInterpolator interpolator = new DecelerateInterpolator(1.5f);
     private float pinchStartDistance = 0;
@@ -1407,19 +1408,18 @@ public void needChangePanelVisibility(boolean show) {
                     }
 
                     if (mentionListView.getVisibility() == View.VISIBLE) {
-                        ViewProxy.setAlpha(mentionListView, 1.0f);
+                        mentionListView.setAlpha(1.0f);
                         return;
                     } else {
                         mentionLayoutManager.scrollToPositionWithOffset(0, 10000);
                     }
                     if (allowMentions) {
                         mentionListView.setVisibility(View.VISIBLE);
-                        mentionListAnimation = new AnimatorSetProxy();
+                        mentionListAnimation = new AnimatorSet();
                         mentionListAnimation.playTogether(
-                                ObjectAnimatorProxy.ofFloat(mentionListView, "alpha", 0.0f, 1.0f)
+                                ObjectAnimator.ofFloat(mentionListView, "alpha", 0.0f, 1.0f)
                         );
-                        mentionListAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animation) {
                                 if (mentionListAnimation != null && mentionListAnimation.equals(animation)) {
                                     mentionListView.clearAnimation();
@@ -1430,7 +1430,7 @@ public void onAnimationEnd(Object animation) {
                         mentionListAnimation.setDuration(200);
                         mentionListAnimation.start();
                     } else {
-                        ViewProxy.setAlpha(mentionListView, 1.0f);
+                        mentionListView.setAlpha(1.0f);
                         mentionListView.clearAnimation();
                         mentionListView.setVisibility(View.INVISIBLE);
                     }
@@ -1444,12 +1444,11 @@ public void onAnimationEnd(Object animation) {
                         return;
                     }
                     if (allowMentions) {
-                        mentionListAnimation = new AnimatorSetProxy();
+                        mentionListAnimation = new AnimatorSet();
                         mentionListAnimation.playTogether(
-                                ObjectAnimatorProxy.ofFloat(mentionListView, "alpha", 0.0f)
+                                ObjectAnimator.ofFloat(mentionListView, "alpha", 0.0f)
                         );
-                        mentionListAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animation) {
                                 if (mentionListAnimation != null && mentionListAnimation.equals(animation)) {
                                     mentionListView.clearAnimation();
@@ -1690,23 +1689,22 @@ private void switchToEditMode(final int mode) {
                 zoomAnimation = true;
             }
 
-            imageMoveAnimation = new AnimatorSetProxy();
+            imageMoveAnimation = new AnimatorSet();
             if (currentEditMode == 1) {
                 imageMoveAnimation.playTogether(
-                        ObjectAnimatorProxy.ofFloat(editorDoneLayout, "translationY", AndroidUtilities.dp(48)),
-                        ObjectAnimatorProxy.ofFloat(PhotoViewer.this, "animationValue", 0, 1),
-                        ObjectAnimatorProxy.ofFloat(photoCropView, "alpha", 0)
+                        ObjectAnimator.ofFloat(editorDoneLayout, "translationY", AndroidUtilities.dp(48)),
+                        ObjectAnimator.ofFloat(PhotoViewer.this, "animationValue", 0, 1),
+                        ObjectAnimator.ofFloat(photoCropView, "alpha", 0)
                 );
             } else if (currentEditMode == 2) {
                 photoFilterView.shutdown();
                 imageMoveAnimation.playTogether(
-                        ObjectAnimatorProxy.ofFloat(photoFilterView.getToolsView(), "translationY", AndroidUtilities.dp(126)),
-                        ObjectAnimatorProxy.ofFloat(PhotoViewer.this, "animationValue", 0, 1)
+                        ObjectAnimator.ofFloat(photoFilterView.getToolsView(), "translationY", AndroidUtilities.dp(126)),
+                        ObjectAnimator.ofFloat(PhotoViewer.this, "animationValue", 0, 1)
                 );
             }
             imageMoveAnimation.setDuration(200);
-            imageMoveAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (currentEditMode == 1) {
                         photoCropView.clearAnimation();
@@ -1727,20 +1725,19 @@ public void onAnimationEnd(Object animation) {
                     updateMinMax(scale);
                     containerView.invalidate();
 
-                    AnimatorSetProxy animatorSet = new AnimatorSetProxy();
-                    ArrayList<Object> arrayList = new ArrayList<>();
-                    arrayList.add(ObjectAnimatorProxy.ofFloat(pickerView, "translationY", 0));
-                    arrayList.add(ObjectAnimatorProxy.ofFloat(actionBar, "translationY", 0));
+                    AnimatorSet animatorSet = new AnimatorSet();
+                    Collection<Animator> arrayList = new ArrayList<>(); 
+                    arrayList.add(ObjectAnimator.ofFloat(pickerView, "translationY", 0));
+                    arrayList.add(ObjectAnimator.ofFloat(actionBar, "translationY", 0));
                     if (needCaptionLayout) {
-                        arrayList.add(ObjectAnimatorProxy.ofFloat(captionTextView, "translationY", 0));
+                        arrayList.add(ObjectAnimator.ofFloat(captionTextView, "translationY", 0));
                     }
                     if (sendPhotoType == 0) {
-                        arrayList.add(ObjectAnimatorProxy.ofFloat(checkImageView, "alpha", 1));
+                        arrayList.add(ObjectAnimator.ofFloat(checkImageView, "alpha", 1));
                     }
                     animatorSet.playTogether(arrayList);
                     animatorSet.setDuration(200);
-                    animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    animatorSet.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationStart(Object animation) {
                             pickerView.setVisibility(View.VISIBLE);
                             actionBar.setVisibility(View.VISIBLE);
@@ -1752,7 +1749,6 @@ public void onAnimationStart(Object animation) {
                             }
                         }
 
-                        @Override
                         public void onAnimationEnd(Object animation) {
                             pickerView.clearAnimation();
                             actionBar.clearAnimation();
@@ -1789,20 +1785,19 @@ public void needMoveImageTo(float x, float y, float s, boolean animated) {
             }
 
             editorDoneLayout.doneButtonTextView.setText(LocaleController.getString("Crop", R.string.Crop));
-            changeModeAnimation = new AnimatorSetProxy();
-            ArrayList<Object> arrayList = new ArrayList<>();
-            arrayList.add(ObjectAnimatorProxy.ofFloat(pickerView, "translationY", 0, AndroidUtilities.dp(96)));
-            arrayList.add(ObjectAnimatorProxy.ofFloat(actionBar, "translationY", 0, -actionBar.getHeight()));
+            changeModeAnimation = new AnimatorSet();
+            Collection<Animator> arrayList = new ArrayList<>();
+            arrayList.add(ObjectAnimator.ofFloat(pickerView, "translationY", 0, AndroidUtilities.dp(96)));
+            arrayList.add(ObjectAnimator.ofFloat(actionBar, "translationY", 0, -actionBar.getHeight()));
             if (needCaptionLayout) {
-                arrayList.add(ObjectAnimatorProxy.ofFloat(captionTextView, "translationY", 0, AndroidUtilities.dp(96)));
+                arrayList.add(ObjectAnimator.ofFloat(captionTextView, "translationY", 0, AndroidUtilities.dp(96)));
             }
             if (sendPhotoType == 0) {
-                arrayList.add(ObjectAnimatorProxy.ofFloat(checkImageView, "alpha", 1, 0));
+                arrayList.add(ObjectAnimator.ofFloat(checkImageView, "alpha", 1, 0));
             }
             changeModeAnimation.playTogether(arrayList);
             changeModeAnimation.setDuration(200);
-            changeModeAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     changeModeAnimation = null;
                     pickerView.clearAnimation();
@@ -1838,21 +1833,19 @@ public void onAnimationEnd(Object animation) {
                         zoomAnimation = true;
                     }
 
-                    imageMoveAnimation = new AnimatorSetProxy();
+                    imageMoveAnimation = new AnimatorSet();
                     imageMoveAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(editorDoneLayout, "translationY", AndroidUtilities.dp(48), 0),
-                            ObjectAnimatorProxy.ofFloat(PhotoViewer.this, "animationValue", 0, 1),
-                            ObjectAnimatorProxy.ofFloat(photoCropView, "alpha", 0, 1)
+                            ObjectAnimator.ofFloat(editorDoneLayout, "translationY", AndroidUtilities.dp(48), 0),
+                            ObjectAnimator.ofFloat(PhotoViewer.this, "animationValue", 0, 1),
+                            ObjectAnimator.ofFloat(photoCropView, "alpha", 0, 1)
                     );
                     imageMoveAnimation.setDuration(200);
-                    imageMoveAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationStart(Object animation) {
                             editorDoneLayout.setVisibility(View.VISIBLE);
                             photoCropView.setVisibility(View.VISIBLE);
                         }
 
-                        @Override
                         public void onAnimationEnd(Object animation) {
                             imageMoveAnimation = null;
                             currentEditMode = mode;
@@ -1905,23 +1898,22 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     }
                 });
                 //photoFilterView.setEditViewFirst();
-                ViewProxy.setTranslationY(photoFilterView.getToolsView(), AndroidUtilities.dp(126));
+                photoFilterView.getToolsView().setTranslationY(AndroidUtilities.dp(126));
             }
 
-            changeModeAnimation = new AnimatorSetProxy();
-            ArrayList<Object> arrayList = new ArrayList<>();
-            arrayList.add(ObjectAnimatorProxy.ofFloat(pickerView, "translationY", 0, AndroidUtilities.dp(96)));
-            arrayList.add(ObjectAnimatorProxy.ofFloat(actionBar, "translationY", 0, -actionBar.getHeight()));
+            changeModeAnimation = new AnimatorSet();
+            Collection<Animator> arrayList = new ArrayList<>(); 
+            arrayList.add(ObjectAnimator.ofFloat(pickerView, "translationY", 0, AndroidUtilities.dp(96)));
+            arrayList.add(ObjectAnimator.ofFloat(actionBar, "translationY", 0, -actionBar.getHeight()));
             if (needCaptionLayout) {
-                arrayList.add(ObjectAnimatorProxy.ofFloat(captionTextView, "translationY", 0, AndroidUtilities.dp(96)));
+                arrayList.add(ObjectAnimator.ofFloat(captionTextView, "translationY", 0, AndroidUtilities.dp(96)));
             }
             if (sendPhotoType == 0) {
-                arrayList.add(ObjectAnimatorProxy.ofFloat(checkImageView, "alpha", 1, 0));
+                arrayList.add(ObjectAnimator.ofFloat(checkImageView, "alpha", 1, 0));
             }
             changeModeAnimation.playTogether(arrayList);
             changeModeAnimation.setDuration(200);
-            changeModeAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     changeModeAnimation = null;
                     pickerView.clearAnimation();
@@ -1956,19 +1948,17 @@ public void onAnimationEnd(Object animation) {
                         zoomAnimation = true;
                     }
 
-                    imageMoveAnimation = new AnimatorSetProxy();
+                    imageMoveAnimation = new AnimatorSet();
                     imageMoveAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(PhotoViewer.this, "animationValue", 0, 1),
-                            ObjectAnimatorProxy.ofFloat(photoFilterView.getToolsView(), "translationY", AndroidUtilities.dp(126), 0)
+                            ObjectAnimator.ofFloat(PhotoViewer.this, "animationValue", 0, 1),
+                            ObjectAnimator.ofFloat(photoFilterView.getToolsView(), "translationY", AndroidUtilities.dp(126), 0)
                     );
                     imageMoveAnimation.setDuration(200);
-                    imageMoveAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                        @Override
+                    imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                         public void onAnimationStart(Object animation) {
 
                         }
 
-                        @Override
                         public void onAnimationEnd(Object animation) {
                             photoFilterView.init();
                             imageMoveAnimation = null;
@@ -1990,14 +1980,14 @@ public void onAnimationEnd(Object animation) {
     }
 
     private void toggleCheckImageView(boolean show) {
-        AnimatorSetProxy animatorSet = new AnimatorSetProxy();
-        ArrayList<Object> arrayList = new ArrayList<>();
-        arrayList.add(ObjectAnimatorProxy.ofFloat(pickerView, "alpha", show ? 1.0f : 0.0f));
+        AnimatorSet animatorSet = new AnimatorSet();
+        Collection<Animator> arrayList = new ArrayList<>(); 
+        arrayList.add(ObjectAnimator.ofFloat(pickerView, "alpha", show ? 1.0f : 0.0f));
         if (needCaptionLayout) {
-            arrayList.add(ObjectAnimatorProxy.ofFloat(captionTextView, "alpha", show ? 1.0f : 0.0f));
+            arrayList.add(ObjectAnimator.ofFloat(captionTextView, "alpha", show ? 1.0f : 0.0f));
         }
         if (sendPhotoType == 0) {
-            arrayList.add(ObjectAnimatorProxy.ofFloat(checkImageView, "alpha", show ? 1.0f : 0.0f));
+            arrayList.add(ObjectAnimator.ofFloat(checkImageView, "alpha", show ? 1.0f : 0.0f));
         }
         animatorSet.playTogether(arrayList);
         animatorSet.setDuration(200);
@@ -2019,17 +2009,16 @@ private void toggleActionBar(boolean show, final boolean animated) {
         bottomLayout.setEnabled(show);
 
         if (animated) {
-            ArrayList<Object> arrayList = new ArrayList<>();
-            arrayList.add(ObjectAnimatorProxy.ofFloat(actionBar, "alpha", show ? 1.0f : 0.0f));
-            arrayList.add(ObjectAnimatorProxy.ofFloat(bottomLayout, "alpha", show ? 1.0f : 0.0f));
+            Collection<Animator> arrayList = new ArrayList<>(); 
+            arrayList.add(ObjectAnimator.ofFloat(actionBar, "alpha", show ? 1.0f : 0.0f));
+            arrayList.add(ObjectAnimator.ofFloat(bottomLayout, "alpha", show ? 1.0f : 0.0f));
             if (captionTextView.getTag() != null) {
-                arrayList.add(ObjectAnimatorProxy.ofFloat(captionTextView, "alpha", show ? 1.0f : 0.0f));
+                arrayList.add(ObjectAnimator.ofFloat(captionTextView, "alpha", show ? 1.0f : 0.0f));
             }
-            currentActionBarAnimation = new AnimatorSetProxy();
+            currentActionBarAnimation = new AnimatorSet();
             currentActionBarAnimation.playTogether(arrayList);
             if (!show) {
-                currentActionBarAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                currentActionBarAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         if (currentActionBarAnimation != null && currentActionBarAnimation.equals(animation)) {
                             actionBar.setVisibility(View.GONE);
@@ -2050,10 +2039,10 @@ public void onAnimationEnd(Object animation) {
             currentActionBarAnimation.setDuration(200);
             currentActionBarAnimation.start();
         } else {
-            ViewProxy.setAlpha(actionBar, show ? 1.0f : 0.0f);
-            ViewProxy.setAlpha(bottomLayout, show ? 1.0f : 0.0f);
+            actionBar.setAlpha(show ? 1.0f : 0.0f);
+            bottomLayout.setAlpha(show ? 1.0f : 0.0f);
             if (captionTextView.getTag() != null) {
-                ViewProxy.setAlpha(captionTextView, show ? 1.0f : 0.0f);
+                captionTextView.setAlpha(show ? 1.0f : 0.0f);
             }
             if (!show) {
                 actionBar.setVisibility(View.GONE);
@@ -2272,10 +2261,10 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
         bottomLayout.setVisibility(View.VISIBLE);
         shareButton.setVisibility(View.GONE);
         menuItem.hideSubItem(gallery_menu_showall);
-        ViewProxy.setTranslationY(actionBar, 0);
-        ViewProxy.setTranslationY(pickerView, 0);
-        ViewProxy.setAlpha(checkImageView, 1.0f);
-        ViewProxy.setAlpha(pickerView, 1.0f);
+        actionBar.setTranslationY(0);
+        pickerView.setTranslationY(0);
+        checkImageView.setAlpha(1.0f);
+        pickerView.setAlpha(1.0f);
         checkImageView.clearAnimation();
         pickerView.clearAnimation();
         editorDoneLayout.clearAnimation();
@@ -2631,7 +2620,7 @@ private void setCurrentCaption(final CharSequence caption) {
             captionItem.setIcon(R.drawable.photo_text2);
             captionTextView.setTag(caption);
             captionTextView.setText(caption);
-            ViewProxy.setAlpha(captionTextView, bottomLayout.getVisibility() == View.VISIBLE || pickerView.getVisibility() == View.VISIBLE ? 1.0f : 0.0f);
+            captionTextView.setAlpha(bottomLayout.getVisibility() == View.VISIBLE || pickerView.getVisibility() == View.VISIBLE ? 1.0f : 0.0f);
             AndroidUtilities.runOnUIThread(new Runnable() {
                 @Override
                 public void run() {
@@ -2910,13 +2899,13 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             animatingImageView.setNeedRadius(object.radius != 0);
             animatingImageView.setImageBitmap(object.thumb);
 
-            ViewProxy.setAlpha(animatingImageView, 1.0f);
-            ViewProxy.setPivotX(animatingImageView, 0.0f);
-            ViewProxy.setPivotY(animatingImageView, 0.0f);
-            ViewProxy.setScaleX(animatingImageView, object.scale);
-            ViewProxy.setScaleY(animatingImageView, object.scale);
-            ViewProxy.setTranslationX(animatingImageView, object.viewX + drawRegion.left * object.scale);
-            ViewProxy.setTranslationY(animatingImageView, object.viewY + drawRegion.top * object.scale);
+            animatingImageView.setAlpha(1.0f);
+            animatingImageView.setPivotX(0.0f);
+            animatingImageView.setPivotY(0.0f);
+            animatingImageView.setScaleX(object.scale);
+            animatingImageView.setScaleY(object.scale);
+            animatingImageView.setTranslationX(object.viewX + drawRegion.left * object.scale);
+            animatingImageView.setTranslationY(object.viewY + drawRegion.top * object.scale);
             final ViewGroup.LayoutParams layoutParams = animatingImageView.getLayoutParams();
             layoutParams.width = (drawRegion.right - drawRegion.left);
             layoutParams.height = (drawRegion.bottom - drawRegion.top);
@@ -2945,10 +2934,10 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             clipTop = Math.max(clipTop, clipVertical);
             clipBottom = Math.max(clipBottom, clipVertical);
 
-            animationValues[0][0] = ViewProxy.getScaleX(animatingImageView);
-            animationValues[0][1] = ViewProxy.getScaleY(animatingImageView);
-            animationValues[0][2] = ViewProxy.getTranslationX(animatingImageView);
-            animationValues[0][3] = ViewProxy.getTranslationY(animatingImageView);
+            animationValues[0][0] = animatingImageView.getScaleX();
+            animationValues[0][1] = animatingImageView.getScaleY();
+            animationValues[0][2] = animatingImageView.getTranslationX();
+            animationValues[0][3] = animatingImageView.getTranslationY();
             animationValues[0][4] = clipHorizontal * object.scale;
             animationValues[0][5] = clipTop * object.scale;
             animationValues[0][6] = clipBottom * object.scale;
@@ -2965,13 +2954,13 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
 
             animatingImageView.setAnimationProgress(0);
             backgroundDrawable.setAlpha(0);
-            ViewProxy.setAlpha(containerView, 0);
+            containerView.setAlpha(0);
 
-            final AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            final AnimatorSet animatorSet = new AnimatorSet();
             animatorSet.playTogether(
-                    ObjectAnimatorProxy.ofFloat(animatingImageView, "animationProgress", 0.0f, 1.0f),
-                    ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", 0, 255),
-                    ObjectAnimatorProxy.ofFloat(containerView, "alpha", 0.0f, 1.0f)
+                    ObjectAnimator.ofFloat(animatingImageView, "animationProgress", 0.0f, 1.0f),
+                    ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0, 255),
+                    ObjectAnimator.ofFloat(containerView, "alpha", 0.0f, 1.0f)
             );
 
             animationEndRunnable = new Runnable() {
@@ -3006,8 +2995,7 @@ public void run() {
             };
 
             animatorSet.setDuration(200);
-            animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     AndroidUtilities.runOnUIThread(new Runnable() {
                         @Override
@@ -3021,7 +3009,6 @@ public void run() {
                     });
                 }
 
-                @Override
                 public void onAnimationCancel(Object animation) {
                     onAnimationEnd(animation);
                 }
@@ -3054,7 +3041,7 @@ public void run() {
             }
 
             backgroundDrawable.setAlpha(255);
-            ViewProxy.setAlpha(containerView, 1.0f);
+            containerView.setAlpha(1.0f);
             onPhotoShow(messageObject, fileLocation, messages, photos, index, object);
         }
     }
@@ -3118,7 +3105,7 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
             animatingImageView.setVisibility(View.VISIBLE);
             containerView.invalidate();
 
-            AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            AnimatorSet animatorSet = new AnimatorSet();
 
             final ViewGroup.LayoutParams layoutParams = animatingImageView.getLayoutParams();
             Rect drawRegion = null;
@@ -3144,10 +3131,10 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
             float height = layoutParams.height * scale * scale2;
             float xPos = (AndroidUtilities.displaySize.x - width) / 2.0f;
             float yPos = (AndroidUtilities.displaySize.y - AndroidUtilities.statusBarHeight - height) / 2.0f;
-            ViewProxy.setTranslationX(animatingImageView, xPos + translationX);
-            ViewProxy.setTranslationY(animatingImageView, yPos + translationY);
-            ViewProxy.setScaleX(animatingImageView, scale * scale2);
-            ViewProxy.setScaleY(animatingImageView, scale * scale2);
+            animatingImageView.setTranslationX(xPos + translationX);
+            animatingImageView.setTranslationY(yPos + translationY);
+            animatingImageView.setScaleX(scale * scale2);
+            animatingImageView.setScaleY(scale * scale2);
 
             if (object != null) {
                 object.imageReceiver.setVisible(false, true);
@@ -3168,10 +3155,10 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
                 clipTop = Math.max(clipTop, clipVertical);
                 clipBottom = Math.max(clipBottom, clipVertical);
 
-                animationValues[0][0] = ViewProxy.getScaleX(animatingImageView);
-                animationValues[0][1] = ViewProxy.getScaleY(animatingImageView);
-                animationValues[0][2] = ViewProxy.getTranslationX(animatingImageView);
-                animationValues[0][3] = ViewProxy.getTranslationY(animatingImageView);
+                animationValues[0][0] = animatingImageView.getScaleX();
+                animationValues[0][1] = animatingImageView.getScaleY();
+                animationValues[0][2] = animatingImageView.getTranslationX();
+                animationValues[0][3] = animatingImageView.getTranslationY();
                 animationValues[0][4] = 0;
                 animationValues[0][5] = 0;
                 animationValues[0][6] = 0;
@@ -3187,16 +3174,16 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
                 animationValues[1][7] = object.radius;
 
                 animatorSet.playTogether(
-                        ObjectAnimatorProxy.ofFloat(animatingImageView, "animationProgress", 0.0f, 1.0f),
-                        ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", 0),
-                        ObjectAnimatorProxy.ofFloat(containerView, "alpha", 0.0f)
+                        ObjectAnimator.ofFloat(animatingImageView, "animationProgress", 0.0f, 1.0f),
+                        ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0),
+                        ObjectAnimator.ofFloat(containerView, "alpha", 0.0f)
                 );
             } else {
                 animatorSet.playTogether(
-                        ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", 0),
-                        ObjectAnimatorProxy.ofFloat(animatingImageView, "alpha", 0.0f),
-                        ObjectAnimatorProxy.ofFloat(animatingImageView, "translationY", translationY >= 0 ? AndroidUtilities.displaySize.y : -AndroidUtilities.displaySize.y),
-                        ObjectAnimatorProxy.ofFloat(containerView, "alpha", 0.0f)
+                        ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0),
+                        ObjectAnimator.ofFloat(animatingImageView, "alpha", 0.0f),
+                        ObjectAnimator.ofFloat(animatingImageView, "translationY", translationY >= 0 ? AndroidUtilities.displaySize.y : -AndroidUtilities.displaySize.y),
+                        ObjectAnimator.ofFloat(containerView, "alpha", 0.0f)
                 );
             }
 
@@ -3212,8 +3199,7 @@ public void run() {
             };
 
             animatorSet.setDuration(200);
-            animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     AndroidUtilities.runOnUIThread(new Runnable() {
                         @Override
@@ -3226,7 +3212,6 @@ public void run() {
                     });
                 }
 
-                @Override
                 public void onAnimationCancel(Object animation) {
                     onAnimationEnd(animation);
                 }
@@ -3237,12 +3222,12 @@ public void onAnimationCancel(Object animation) {
             }
             animatorSet.start();
         } else {
-            AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            AnimatorSet animatorSet = new AnimatorSet();
             animatorSet.playTogether(
-                    ObjectAnimatorProxy.ofFloat(containerView, "scaleX", 0.9f),
-                    ObjectAnimatorProxy.ofFloat(containerView, "scaleY", 0.9f),
-                    ObjectAnimatorProxy.ofInt(backgroundDrawable, "alpha", 0),
-                    ObjectAnimatorProxy.ofFloat(containerView, "alpha", 0.0f)
+                    ObjectAnimator.ofFloat(containerView, "scaleX", 0.9f),
+                    ObjectAnimator.ofFloat(containerView, "scaleY", 0.9f),
+                    ObjectAnimator.ofInt(backgroundDrawable, "alpha", 0),
+                    ObjectAnimator.ofFloat(containerView, "alpha", 0.0f)
             );
             animationInProgress = 2;
             animationEndRunnable = new Runnable() {
@@ -3256,14 +3241,13 @@ public void run() {
                     }
                     animationInProgress = 0;
                     onPhotoClosed(object);
-                    ViewProxy.setScaleX(containerView, 1.0f);
-                    ViewProxy.setScaleY(containerView, 1.0f);
+                    containerView.setScaleX(1.0f);
+                    containerView.setScaleY(1.0f);
                     containerView.clearAnimation();
                 }
             };
             animatorSet.setDuration(200);
-            animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (animationEndRunnable != null) {
                         animationEndRunnable.run();
@@ -3693,14 +3677,13 @@ private void animateTo(float newScale, float newTx, float newTy, boolean isZoom,
         animateToX = newTx;
         animateToY = newTy;
         animationStartTime = System.currentTimeMillis();
-        imageMoveAnimation = new AnimatorSetProxy();
+        imageMoveAnimation = new AnimatorSet();
         imageMoveAnimation.playTogether(
-                ObjectAnimatorProxy.ofFloat(this, "animationValue", 0, 1)
+                ObjectAnimator.ofFloat(this, "animationValue", 0, 1)
         );
         imageMoveAnimation.setInterpolator(interpolator);
         imageMoveAnimation.setDuration(duration);
-        imageMoveAnimation.addListener(new AnimatorListenerAdapterProxy() {
-            @Override
+        imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
             public void onAnimationEnd(Object animation) {
                 imageMoveAnimation = null;
                 containerView.invalidate();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index e95fc7010..1ec54c90f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -8,6 +8,9 @@
 
 package org.telegram.ui;
 
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
 import android.animation.StateListAnimator;
 import android.annotation.SuppressLint;
@@ -42,9 +45,6 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesStorage;
@@ -69,7 +69,6 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.ActionBar.BackDrawable;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.AboutLinkCell;
 import org.telegram.ui.Cells.DividerCell;
 import org.telegram.ui.Cells.EmptyCell;
@@ -92,6 +91,7 @@
 import org.telegram.ui.Components.RecyclerListView;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
@@ -106,7 +106,7 @@
     private TextView nameTextView[] = new TextView[2];
     private TextView onlineTextView[] = new TextView[2];
     private ImageView writeButton;
-    private AnimatorSetProxy writeButtonAnimation;
+    private AnimatorSet writeButtonAnimation;
     private View extraHeightView;
     private View shadowView;
     private AvatarDrawable avatarDrawable;
@@ -784,7 +784,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         frameLayout.addView(actionBar);
 
         extraHeightView = new View(context);
-        ViewProxy.setPivotY(extraHeightView, 0);
+        extraHeightView.setPivotY(0);
         extraHeightView.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) && !currentChat.megagroup ? 5 : chat_id));
         frameLayout.addView(extraHeightView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 88));
 
@@ -798,8 +798,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         avatarImage = new BackupImageView(context);
         avatarImage.setRoundRadius(AndroidUtilities.dp(21));
-        ViewProxy.setPivotX(avatarImage, 0);
-        ViewProxy.setPivotY(avatarImage, 0);
+        avatarImage.setPivotX(0);
+        avatarImage.setPivotY(0);
         frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 64, 0, 0, 0));
         avatarImage.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -834,8 +834,8 @@ public void onClick(View v) {
             nameTextView[a].setGravity(Gravity.LEFT);
             nameTextView[a].setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
             nameTextView[a].setCompoundDrawablePadding(AndroidUtilities.dp(4));
-            ViewProxy.setPivotX(nameTextView[a], 0);
-            ViewProxy.setPivotY(nameTextView[a], 0);
+            nameTextView[a].setPivotX(0);
+            nameTextView[a].setPivotY(0);
             frameLayout.addView(nameTextView[a], LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, a == 0 ? 48 : 0, 0));
 
             onlineTextView[a] = new TextView(context);
@@ -1120,14 +1120,14 @@ private void needLayout() {
             if (layoutParams.topMargin != newTop) {
                 layoutParams.topMargin = newTop;
                 listView.setLayoutParams(layoutParams);
-                ViewProxy.setTranslationY(extraHeightView, newTop);
+                extraHeightView.setTranslationY(newTop);
             }
         }
 
         if (avatarImage != null) {
             float diff = extraHeight / (float) AndroidUtilities.dp(88);
-            ViewProxy.setScaleY(extraHeightView, diff);
-            ViewProxy.setTranslationY(shadowView, newTop + extraHeight);
+            extraHeightView.setScaleY(diff);
+            shadowView.setTranslationY(newTop + extraHeight);
             listView.setTopGlowOffset(extraHeight);
 
             if (writeButton != null) {
@@ -1136,7 +1136,7 @@ private void needLayout() {
                     layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f);
                     writeButton.setLayoutParams(layoutParams);
                 } else {
-                    ViewProxy.setTranslationY(writeButton, (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
+                    writeButton.setTranslationY((actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
                 }
 
                 if (!openAnimationInProgress) {
@@ -1152,29 +1152,28 @@ private void needLayout() {
                             writeButton.setTag(0);
                         }
                         if (writeButtonAnimation != null) {
-                            AnimatorSetProxy old = writeButtonAnimation;
+                            AnimatorSet old = writeButtonAnimation;
                             writeButtonAnimation = null;
                             old.cancel();
                         }
-                        writeButtonAnimation = new AnimatorSetProxy();
+                        writeButtonAnimation = new AnimatorSet();
                         if (setVisible) {
                             writeButtonAnimation.setInterpolator(new DecelerateInterpolator());
                             writeButtonAnimation.playTogether(
-                                    ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 1.0f),
-                                    ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 1.0f),
-                                    ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 1.0f)
+                                    ObjectAnimator.ofFloat(writeButton, "scaleX", 1.0f),
+                                    ObjectAnimator.ofFloat(writeButton, "scaleY", 1.0f),
+                                    ObjectAnimator.ofFloat(writeButton, "alpha", 1.0f)
                             );
                         } else {
                             writeButtonAnimation.setInterpolator(new AccelerateInterpolator());
                             writeButtonAnimation.playTogether(
-                                    ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 0.2f),
-                                    ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 0.2f),
-                                    ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 0.0f)
+                                    ObjectAnimator.ofFloat(writeButton, "scaleX", 0.2f),
+                                    ObjectAnimator.ofFloat(writeButton, "scaleY", 0.2f),
+                                    ObjectAnimator.ofFloat(writeButton, "alpha", 0.0f)
                             );
                         }
                         writeButtonAnimation.setDuration(150);
-                        writeButtonAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                            @Override
+                        writeButtonAnimation.addListener(new AnimatorListenerAdapter() {
                             public void onAnimationEnd(Object animation) {
                                 if (writeButtonAnimation != null && writeButtonAnimation.equals(animation)) {
                                     writeButton.clearAnimation();
@@ -1199,21 +1198,21 @@ public void onAnimationEnd(Object animation) {
                 avatarImage.setLayoutParams(layoutParams);
                 avatarImage.setRoundRadius(layoutParams.height / 2);
             } else {
-                ViewProxy.setScaleX(avatarImage, (42 + 18 * diff) / 42.0f);
-                ViewProxy.setScaleY(avatarImage, (42 + 18 * diff) / 42.0f);
-                ViewProxy.setTranslationX(avatarImage, -AndroidUtilities.dp(47) * diff);
-                ViewProxy.setTranslationY(avatarImage, (float) Math.ceil(avatarY));
+                avatarImage.setScaleX((42 + 18 * diff) / 42.0f);
+                avatarImage.setScaleY((42 + 18 * diff) / 42.0f);
+                avatarImage.setTranslationX(-AndroidUtilities.dp(47) * diff);
+                avatarImage.setTranslationY((float) Math.ceil(avatarY));
             }
             for (int a = 0; a < 2; a++) {
                 if (nameTextView[a] == null) {
                     continue;
                 }
-                ViewProxy.setTranslationX(nameTextView[a], -21 * AndroidUtilities.density * diff);
-                ViewProxy.setTranslationY(nameTextView[a], (float) Math.floor(avatarY) - (float) Math.ceil(AndroidUtilities.density) + (float) Math.floor(7 * AndroidUtilities.density * diff));
-                ViewProxy.setTranslationX(onlineTextView[a], -21 * AndroidUtilities.density * diff);
-                ViewProxy.setTranslationY(onlineTextView[a], (float) Math.floor(avatarY) + AndroidUtilities.dp(22) + (float) Math.floor(11 * AndroidUtilities.density) * diff);
-                ViewProxy.setScaleX(nameTextView[a], 1.0f + 0.12f * diff);
-                ViewProxy.setScaleY(nameTextView[a], 1.0f + 0.12f * diff);
+                nameTextView[a].setTranslationX(-21 * AndroidUtilities.density * diff);
+                nameTextView[a].setTranslationY((float) Math.floor(avatarY) - (float) Math.ceil(AndroidUtilities.density) + (float) Math.floor(7 * AndroidUtilities.density * diff));
+                onlineTextView[a].setTranslationX(-21 * AndroidUtilities.density * diff);
+                onlineTextView[a].setTranslationY((float) Math.floor(avatarY) + AndroidUtilities.dp(22) + (float) Math.floor(11 * AndroidUtilities.density) * diff);
+                nameTextView[a].setScaleX(1.0f + 0.12f * diff);
+                nameTextView[a].setScaleY(1.0f + 0.12f * diff);
                 if (a == 1 && !openAnimationInProgress) {
                     int width;
                     if (AndroidUtilities.isTablet()) {
@@ -1221,8 +1220,8 @@ public void onAnimationEnd(Object animation) {
                     } else {
                         width = AndroidUtilities.displaySize.x;
                     }
-                    width = (int) (width - AndroidUtilities.dp(118 + 8 + 40 * (1.0f - diff)) - ViewProxy.getTranslationX(nameTextView[a]));
-                    float width2 = nameTextView[a].getPaint().measureText(nameTextView[a].getText().toString()) * ViewProxy.getScaleX(nameTextView[a]);
+                    width = (int) (width - AndroidUtilities.dp(118 + 8 + 40 * (1.0f - diff)) - onlineTextView[a].getTranslationX());
+                    float width2 = nameTextView[a].getPaint().measureText(nameTextView[a].getText().toString()) * nameTextView[a].getScaleX();
                     Drawable[] drawables = nameTextView[a].getCompoundDrawables();
                     for (int b = 0; b < drawables.length; b++) {
                         if (drawables[b] != null) {
@@ -1231,14 +1230,14 @@ public void onAnimationEnd(Object animation) {
                     }
                     layoutParams = (FrameLayout.LayoutParams) nameTextView[a].getLayoutParams();
                     if (width < width2) {
-                        layoutParams.width = (int) Math.ceil(width / ViewProxy.getScaleX(nameTextView[a]));
+                        layoutParams.width = (int) Math.ceil(width / nameTextView[a].getScaleX());
                     } else {
                         layoutParams.width = LayoutHelper.WRAP_CONTENT;
                     }
                     nameTextView[a].setLayoutParams(layoutParams);
 
                     layoutParams = (FrameLayout.LayoutParams) onlineTextView[a].getLayoutParams();
-                    layoutParams.rightMargin = (int) Math.ceil(ViewProxy.getTranslationX(onlineTextView[a]) + AndroidUtilities.dp(8) + AndroidUtilities.dp(40) * (1.0f - diff));
+                    layoutParams.rightMargin = (int) Math.ceil(onlineTextView[a].getTranslationX() + AndroidUtilities.dp(8) + AndroidUtilities.dp(40) * (1.0f - diff));
                     onlineTextView[a].setLayoutParams(layoutParams);
                 }
             }
@@ -1478,8 +1477,8 @@ public float getAnimationProgress() {
 
     public void setAnimationProgress(float progress) {
         animationProgress = progress;
-        ViewProxy.setAlpha(listView, progress);
-        ViewProxy.setTranslationX(listView, AndroidUtilities.dp(48) * (1.0f - progress));
+        listView.setAlpha(progress);
+        listView.setTranslationX(AndroidUtilities.dp(48) * (1.0f - progress));
         int color = AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) && !currentChat.megagroup ? 5 : chat_id);
         int rD = (int) ((Color.red(color) - 0x54) * progress);
         int gD = (int) ((Color.green(color) - 0x75) * progress);
@@ -1511,9 +1510,9 @@ public void setAnimationProgress(float progress) {
     }
 
     @Override
-    protected AnimatorSetProxy onCustomTransitionAnimation(final boolean isOpen, final Runnable callback) {
+    protected AnimatorSet onCustomTransitionAnimation(final boolean isOpen, final Runnable callback) {
         if (playProfileAnimation) {
-            final AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            final AnimatorSet animatorSet = new AnimatorSet();
             animatorSet.setDuration(150);
             if (Build.VERSION.SDK_INT > 15) {
                 listView.setLayerType(View.LAYER_TYPE_HARDWARE, null);
@@ -1549,48 +1548,47 @@ protected AnimatorSetProxy onCustomTransitionAnimation(final boolean isOpen, fin
                 initialAnimationExtraHeight = AndroidUtilities.dp(88);
                 fragmentView.setBackgroundColor(0);
                 setAnimationProgress(0);
-                ArrayList<Object> animators = new ArrayList<>();
-                animators.add(ObjectAnimatorProxy.ofFloat(this, "animationProgress", 0.0f, 1.0f));
+                Collection<Animator> animators = new ArrayList<>();
+                animators.add(ObjectAnimator.ofFloat(this, "animationProgress", 0.0f, 1.0f));
                 if (writeButton != null) {
-                    ViewProxy.setScaleX(writeButton, 0.2f);
-                    ViewProxy.setScaleY(writeButton, 0.2f);
-                    ViewProxy.setAlpha(writeButton, 0.0f);
-                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 1.0f));
-                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 1.0f));
-                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 1.0f));
+                    writeButton.setScaleX(0.2f);
+                    writeButton.setScaleY(0.2f);
+                    writeButton.setAlpha(0.0f);
+                    animators.add(ObjectAnimator.ofFloat(writeButton, "scaleX", 1.0f));
+                    animators.add(ObjectAnimator.ofFloat(writeButton, "scaleY", 1.0f));
+                    animators.add(ObjectAnimator.ofFloat(writeButton, "alpha", 1.0f));
                 }
                 for (int a = 0; a < 2; a++) {
-                    ViewProxy.setAlpha(onlineTextView[a], a == 0 ? 1.0f : 0.0f);
-                    ViewProxy.setAlpha(nameTextView[a], a == 0 ? 1.0f : 0.0f);
-                    animators.add(ObjectAnimatorProxy.ofFloat(onlineTextView[a], "alpha", a == 0 ? 0.0f : 1.0f));
-                    animators.add(ObjectAnimatorProxy.ofFloat(nameTextView[a], "alpha", a == 0 ? 0.0f : 1.0f));
+                    onlineTextView[a].setAlpha(a == 0 ? 1.0f : 0.0f);
+                    nameTextView[a].setAlpha(a == 0 ? 1.0f : 0.0f);
+                    animators.add(ObjectAnimator.ofFloat(onlineTextView[a], "alpha", a == 0 ? 0.0f : 1.0f));
+                    animators.add(ObjectAnimator.ofFloat(nameTextView[a], "alpha", a == 0 ? 0.0f : 1.0f));
                 }
                 if (animatingItem != null) {
-                    ViewProxy.setAlpha(animatingItem, 1.0f);
-                    animators.add(ObjectAnimatorProxy.ofFloat(animatingItem, "alpha", 0.0f));
+                    animatingItem.setAlpha(1.0f);
+                    animators.add(ObjectAnimator.ofFloat(animatingItem, "alpha", 0.0f));
                 }
                 animatorSet.playTogether(animators);
             } else {
                 initialAnimationExtraHeight = extraHeight;
-                ArrayList<Object> animators = new ArrayList<>();
-                animators.add(ObjectAnimatorProxy.ofFloat(this, "animationProgress", 1.0f, 0.0f));
+                Collection<Animator> animators = new ArrayList<>();
+                animators.add(ObjectAnimator.ofFloat(this, "animationProgress", 1.0f, 0.0f));
                 if (writeButton != null) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 0.2f));
-                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 0.2f));
-                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 0.0f));
+                    animators.add(ObjectAnimator.ofFloat(writeButton, "scaleX", 0.2f));
+                    animators.add(ObjectAnimator.ofFloat(writeButton, "scaleY", 0.2f));
+                    animators.add(ObjectAnimator.ofFloat(writeButton, "alpha", 0.0f));
                 }
                 for (int a = 0; a < 2; a++) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(onlineTextView[a], "alpha", a == 0 ? 1.0f : 0.0f));
-                    animators.add(ObjectAnimatorProxy.ofFloat(nameTextView[a], "alpha", a == 0 ? 1.0f : 0.0f));
+                    animators.add(ObjectAnimator.ofFloat(onlineTextView[a], "alpha", a == 0 ? 1.0f : 0.0f));
+                    animators.add(ObjectAnimator.ofFloat(nameTextView[a], "alpha", a == 0 ? 1.0f : 0.0f));
                 }
                 if (animatingItem != null) {
-                    ViewProxy.setAlpha(animatingItem, 0.0f);
-                    animators.add(ObjectAnimatorProxy.ofFloat(animatingItem, "alpha", 1.0f));
+                    animatingItem.setAlpha(0.0f);
+                    animators.add(ObjectAnimator.ofFloat(animatingItem, "alpha", 1.0f));
                 }
                 animatorSet.playTogether(animators);
             }
-            animatorSet.addListener(new AnimatorListenerAdapterProxy() {
-                @Override
+            animatorSet.addListener(new AnimatorListenerAdapter() {
                 public void onAnimationEnd(Object animation) {
                     if (Build.VERSION.SDK_INT > 15) {
                         listView.setLayerType(View.LAYER_TYPE_NONE, null);
@@ -1603,7 +1601,6 @@ public void onAnimationEnd(Object animation) {
                     callback.run();
                 }
 
-                @Override
                 public void onAnimationCancel(Object animation) {
                     if (Build.VERSION.SDK_INT > 15) {
                         listView.setLayerType(View.LAYER_TYPE_NONE, null);
@@ -1660,7 +1657,7 @@ public void updatePhotoAtIndex(int index) {
             object.thumb = object.imageReceiver.getBitmap();
             object.size = -1;
             object.radius = avatarImage.getImageReceiver().getRoundRadius();
-            object.scale = ViewProxy.getScaleX(avatarImage);
+            object.scale = avatarImage.getScaleX();
             return object;
         }
         return null;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 7d61c8f14..080ae7d79 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -8,6 +8,8 @@
 
 package org.telegram.ui;
 
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
 import android.animation.StateListAnimator;
 import android.annotation.SuppressLint;
@@ -51,9 +53,6 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.UserObject;
@@ -75,7 +74,6 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.CheckBoxCell;
 import org.telegram.ui.Cells.TextInfoCell;
 import org.telegram.ui.Cells.EmptyCell;
@@ -106,7 +104,7 @@
     private TextView nameTextView;
     private TextView onlineTextView;
     private ImageView writeButton;
-    private AnimatorSetProxy writeButtonAnimation;
+    private AnimatorSet writeButtonAnimation;
     private AvatarUpdater avatarUpdater = new AvatarUpdater();
     private View extraHeightView;
     private View shadowView;
@@ -624,7 +622,7 @@ public void onClick(View v) {
         frameLayout.addView(actionBar);
 
         extraHeightView = new View(context);
-        ViewProxy.setPivotY(extraHeightView, 0);
+        extraHeightView.setPivotY(0);
         extraHeightView.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
         frameLayout.addView(extraHeightView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 88));
 
@@ -634,8 +632,8 @@ public void onClick(View v) {
 
         avatarImage = new BackupImageView(context);
         avatarImage.setRoundRadius(AndroidUtilities.dp(21));
-        ViewProxy.setPivotX(avatarImage, 0);
-        ViewProxy.setPivotY(avatarImage, 0);
+        avatarImage.setPivotX(0);
+        avatarImage.setPivotY(0);
         frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 64, 0, 0, 0));
         avatarImage.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -657,8 +655,8 @@ public void onClick(View v) {
         nameTextView.setEllipsize(TextUtils.TruncateAt.END);
         nameTextView.setGravity(Gravity.LEFT);
         nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        ViewProxy.setPivotX(nameTextView, 0);
-        ViewProxy.setPivotY(nameTextView, 0);
+        nameTextView.setPivotX(0);
+        nameTextView.setPivotY(0);
         frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
 
         onlineTextView = new TextView(context);
@@ -791,7 +789,7 @@ public void updatePhotoAtIndex(int index) {
                 object.thumb = object.imageReceiver.getBitmap();
                 object.size = -1;
                 object.radius = avatarImage.getImageReceiver().getRoundRadius();
-                object.scale = ViewProxy.getScaleX(avatarImage);
+                object.scale = avatarImage.getScaleX();
                 return object;
             }
         }
@@ -973,21 +971,21 @@ private void needLayout() {
             if (layoutParams.topMargin != newTop) {
                 layoutParams.topMargin = newTop;
                 listView.setLayoutParams(layoutParams);
-                ViewProxy.setTranslationY(extraHeightView, newTop);
+                extraHeightView.setTranslationY(newTop);
             }
         }
 
         if (avatarImage != null) {
             float diff = extraHeight / (float) AndroidUtilities.dp(88);
-            ViewProxy.setScaleY(extraHeightView, diff);
-            ViewProxy.setTranslationY(shadowView, newTop + extraHeight);
+            extraHeightView.setScaleY(diff);
+            shadowView.setTranslationY(newTop + extraHeight);
 
             if (Build.VERSION.SDK_INT < 11) {
                 layoutParams = (FrameLayout.LayoutParams) writeButton.getLayoutParams();
                 layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f);
                 writeButton.setLayoutParams(layoutParams);
             } else {
-                ViewProxy.setTranslationY(writeButton, (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
+                writeButton.setTranslationY((actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
             }
 
             final boolean setVisible = diff > 0.2f;
@@ -1000,29 +998,28 @@ private void needLayout() {
                     writeButton.setTag(0);
                 }
                 if (writeButtonAnimation != null) {
-                    AnimatorSetProxy old = writeButtonAnimation;
+                    AnimatorSet old = writeButtonAnimation;
                     writeButtonAnimation = null;
                     old.cancel();
                 }
-                writeButtonAnimation = new AnimatorSetProxy();
+                writeButtonAnimation = new AnimatorSet();
                 if (setVisible) {
                     writeButtonAnimation.setInterpolator(new DecelerateInterpolator());
                     writeButtonAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 1.0f),
-                            ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 1.0f),
-                            ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 1.0f)
+                            ObjectAnimator.ofFloat(writeButton, "scaleX", 1.0f),
+                            ObjectAnimator.ofFloat(writeButton, "scaleY", 1.0f),
+                            ObjectAnimator.ofFloat(writeButton, "alpha", 1.0f)
                     );
                 } else {
                     writeButtonAnimation.setInterpolator(new AccelerateInterpolator());
                     writeButtonAnimation.playTogether(
-                            ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 0.2f),
-                            ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 0.2f),
-                            ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 0.0f)
+                            ObjectAnimator.ofFloat(writeButton, "scaleX", 0.2f),
+                            ObjectAnimator.ofFloat(writeButton, "scaleY", 0.2f),
+                            ObjectAnimator.ofFloat(writeButton, "alpha", 0.0f)
                     );
                 }
                 writeButtonAnimation.setDuration(150);
-                writeButtonAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
+                writeButtonAnimation.addListener(new AnimatorListenerAdapter() {
                     public void onAnimationEnd(Object animation) {
                         if (writeButtonAnimation != null && writeButtonAnimation.equals(animation)) {
                             writeButton.clearAnimation();
@@ -1034,17 +1031,17 @@ public void onAnimationEnd(Object animation) {
                 writeButtonAnimation.start();
             }
 
-            ViewProxy.setScaleX(avatarImage, (42 + 18 * diff) / 42.0f);
-            ViewProxy.setScaleY(avatarImage, (42 + 18 * diff) / 42.0f);
+            avatarImage.setScaleX((42 + 18 * diff) / 42.0f);
+            avatarImage.setScaleY((42 + 18 * diff) / 42.0f);
             float avatarY = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() / 2.0f * (1.0f + diff) - 21 * AndroidUtilities.density + 27 * AndroidUtilities.density * diff;
-            ViewProxy.setTranslationX(avatarImage, -AndroidUtilities.dp(47) * diff);
-            ViewProxy.setTranslationY(avatarImage, (float) Math.ceil(avatarY));
-            ViewProxy.setTranslationX(nameTextView, -21 * AndroidUtilities.density * diff);
-            ViewProxy.setTranslationY(nameTextView, (float) Math.floor(avatarY) - (float) Math.ceil(AndroidUtilities.density) + (float) Math.floor(7 * AndroidUtilities.density * diff));
-            ViewProxy.setTranslationX(onlineTextView, -21 * AndroidUtilities.density * diff);
-            ViewProxy.setTranslationY(onlineTextView, (float) Math.floor(avatarY) + AndroidUtilities.dp(22) + (float )Math.floor(11 * AndroidUtilities.density) * diff);
-            ViewProxy.setScaleX(nameTextView, 1.0f + 0.12f * diff);
-            ViewProxy.setScaleY(nameTextView, 1.0f + 0.12f * diff);
+            avatarImage.setTranslationX(-AndroidUtilities.dp(47) * diff);
+            avatarImage.setTranslationY((float) Math.ceil(avatarY));
+            nameTextView.setTranslationX(-21 * AndroidUtilities.density * diff);
+            nameTextView.setTranslationY((float) Math.floor(avatarY) - (float) Math.ceil(AndroidUtilities.density) + (float) Math.floor(7 * AndroidUtilities.density * diff));
+            onlineTextView.setTranslationX(-21 * AndroidUtilities.density * diff);
+            onlineTextView.setTranslationY((float) Math.floor(avatarY) + AndroidUtilities.dp(22) + (float) Math.floor(11 * AndroidUtilities.density) * diff);
+            nameTextView.setScaleX(1.0f + 0.12f * diff);
+            nameTextView.setScaleY(1.0f + 0.12f * diff);
         }
     }
 
