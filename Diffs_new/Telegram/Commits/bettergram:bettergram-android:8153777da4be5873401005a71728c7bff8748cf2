diff --git a/TMessagesProj/src/main/java/io/bettergram/Constants.java b/TMessagesProj/src/main/java/io/bettergram/Constants.java
index 17eca6772..f06c6c0c0 100644
--- a/TMessagesProj/src/main/java/io/bettergram/Constants.java
+++ b/TMessagesProj/src/main/java/io/bettergram/Constants.java
@@ -1,5 +1,5 @@
 package io.bettergram;
 
 public class Constants {
-    public static final String[] AUTOSUB_GROUPS = new String[]{"https://t.me/bettergramapp", "https://t.me/join_changelly", "https://t.me/livecoinwatchofficial"};
+    public static final String[] AUTOSUB_GROUPS = new String[]{"https://t.me/bettergramapp", "https://t.me/livecoinwatchofficial", "https://t.me/bgsecuritytokens", "https://t.me/bettergramchannel", "https://t.me/join_changelly"};
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
index 0e2993f4a..a1673a01a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
@@ -28,6 +28,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
+import java.util.ListIterator;
 import java.util.Locale;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.CountDownLatch;
@@ -132,6 +133,7 @@
     private int currentDeletingTaskChannelId;
     private Runnable currentDeleteTaskRunnable;
 
+    private boolean loadedFavoriteDialogs;
     private boolean loadingUnreadDialogs;
     public boolean loadingDialogs;
     private boolean migratingDialogs;
@@ -3399,6 +3401,11 @@ public void loadHintDialogs() {
         });
     }
 
+    public void loadFuckingEverything() {
+        loadedFavoriteDialogs = false;
+        loadDialogs(0, 100, true);
+    }
+
     public void loadDialogs(final int offset, final int count, boolean fromCache) {
         if (loadingDialogs || resetingDialogs) {
             return;
@@ -4286,6 +4293,11 @@ public void processLoadedDialogs(final TLRPC.messages_Dialogs dialogsRes, final
                     reloadDialogsReadValue(dialogsToReload, 0);
                 }
                 loadUnreadDialogs();
+                loadLocalPinnedDialogs();
+                if (!loadedFavoriteDialogs) {
+                    loadLocalFavoriteDialogs();
+                    loadedFavoriteDialogs = true;
+                }
             });
         });
     }
@@ -6543,11 +6555,24 @@ public void markDialogAsUnread(long did, TLRPC.InputPeer peer, long taskId) {
     public void favoriteDialog(final long did) {
         TLRPC.TL_dialog dialog = dialogs_dict.get(did);
         if (dialog != null) {
-            MessagesStorage.getInstance(currentAccount).setDialogFavorite(did, dialog.favorite_date);
+            final int fave_date = MessagesStorage.getInstance(currentAccount).setDialogFavorite(did, dialog.favorite_date);
+            dialogs_dict.get(did).favorite_date = fave_date;
+            for (int i = 0, size = dialogs.size(); i < size; i++) {
+                if (dialogs.get(i).id == dialogs_dict.get(did).id) {
+                    dialogs.get(i).favorite_date = dialogs_dict.get(did).favorite_date;
+                }
+            }
+            MigrationController.getInstance(currentAccount).storeFavoriteDialog(did, fave_date);
+            loadedFavoriteDialogs = true;
             loadDialogs(0, 100, true);
+            NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
         }
     }
 
+    public void updateDialogFavorite(final long did, int favorite_date) {
+        MessagesStorage.getInstance(currentAccount).updateDialogFavorite(did, favorite_date);
+    }
+
     public void loadUnreadDialogs() {
         if (loadingUnreadDialogs || UserConfig.getInstance(currentAccount).unreadDialogsLoaded) {
             return;
@@ -6595,6 +6620,15 @@ public int getPinnedCount() {
         return MessagesStorage.getInstance(currentAccount).getPinnedCount();
     }
 
+    public int getDialogFavoriteDate(final long did) {
+        for (int i = 0, size = dialogs.size(); i < size; i++) {
+            if (dialogs.get(i).id == did) {
+                return dialogs.get(i).favorite_date;
+            }
+        }
+        return dialogs_dict.get(did).favorite_date;
+    }
+
     public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskId) {
         int lower_id = (int) did;
         TLRPC.TL_dialog dialog = dialogs_dict.get(did);
@@ -6619,7 +6653,7 @@ public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskI
         if (!pin && dialogs.get(dialogs.size() - 1) == dialog && !dialogsEndReached) {
             dialogs.remove(dialogs.size() - 1);
         }
-        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
+//        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
         if (lower_id != 0) {
             if (taskId != -1) {
 //                TLRPC.TL_messages_toggleDialogPin req = new TLRPC.TL_messages_toggleDialogPin();
@@ -6658,7 +6692,21 @@ public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskI
 //                });
             }
         }
+        for (int i = 0, size = dialogs_dict.size(); i < size; i++) {
+            if (dialogs_dict.valueAt(i).id == dialog.id) {
+                dialogs_dict.valueAt(i).pinnedNum = dialog.pinnedNum;
+            }
+        }
+        for (int i = 0, size_i = dialogs_dict.size(); i < size_i; i++) {
+            for (int j = 0, size_j = dialogs.size(); j < size_j; j++) {
+                if (dialogs_dict.valueAt(i).id == dialogs.get(j).id) {
+                    dialogs.get(j).pinnedNum = dialogs_dict.valueAt(i).pinnedNum;
+                }
+            }
+        }
         MessagesStorage.getInstance(currentAccount).setDialogPinned(did, dialog.pinnedNum);
+        MigrationController.getInstance(currentAccount).storePinnedDialog(dialog);
+        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
         return true;
     }
 
@@ -6674,6 +6722,51 @@ public void swapPinnedDialogs(int index1, int index2) {
         }
     }
 
+    public void loadLocalPinnedDialogs() {
+        MigrationController.getInstance(currentAccount).migratePinnedDialogs(dialogs);
+        for (int i = 0, size = dialogs_dict.size(); i < size; i++) {
+            TLRPC.TL_dialog dialog = dialogs_dict.valueAt(i);
+            dialogs_dict.valueAt(i).pinnedNum = MigrationController.getInstance(currentAccount).restorePinnedNum(dialog);
+        }
+        for (int a = 0, size_a = dialogs_dict.size(); a < size_a; a++) {
+            for (int b = 0, size_b = dialogs.size(); b < size_b; b++) {
+                if (dialogs_dict.valueAt(a).id == dialogs.get(b).id) {
+                    dialogs.get(b).pinnedNum = dialogs_dict.valueAt(a).pinnedNum;
+                }
+            }
+        }
+        for (int i = 0, size = dialogs.size(); i < size; i++) {
+            TLRPC.TL_dialog dialog = dialogs.get(i);
+            pinDialog(dialog.id, dialog.pinnedNum > 0, null, 0);
+        }
+        sortDialogs(null);
+    }
+
+    public void loadLocalFavoriteDialogs() {
+        MigrationController.getInstance(currentAccount).migrateFavoritedDialogs(dialogs);
+        for (int i = 0, size = dialogs_dict.size(); i < size; i++) {
+            TLRPC.TL_dialog dialog = dialogs_dict.valueAt(i);
+            dialogs_dict.valueAt(i).favorite_date = MigrationController.getInstance(currentAccount).restoreFavoriteDate(dialog);
+        }
+        for (int a = 0, size = dialogs_dict.size(); a < size; a++) {
+            TLRPC.TL_dialog d1 = dialogs_dict.valueAt(a);
+            ListIterator<TLRPC.TL_dialog> iterator = dialogs.listIterator();
+            while (iterator.hasNext()) {
+                TLRPC.TL_dialog d2 = iterator.next();
+                if (d2.id == d1.id) {
+                    iterator.set(d1);
+                }
+            }
+        }
+        for (int i = 0, size = dialogs.size(); i < size; i++) {
+            TLRPC.TL_dialog dialog = dialogs.get(i);
+            if (dialog.favorite_date > 0) {
+                updateDialogFavorite(dialog.id, dialog.favorite_date);
+            }
+        }
+        sortDialogs(null);
+    }
+
     public void loadPinnedDialogs(final long newDialogId, final ArrayList<Long> order) {
         if (UserConfig.getInstance(currentAccount).pinnedDialogsLoaded) {
             return;
@@ -8589,7 +8682,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                         if (!pinDialog(did, updateDialogPinned.pinned, null, -1)) {
                             UserConfig.getInstance(currentAccount).pinnedDialogsLoaded = false;
                             UserConfig.getInstance(currentAccount).saveConfig(false);
-                            loadPinnedDialogs(did, null);
+                            //loadPinnedDialogs(did, null);
                         }
                     } else if (baseUpdate instanceof TLRPC.TL_updatePinnedDialogs) {
                         TLRPC.TL_updatePinnedDialogs update = (TLRPC.TL_updatePinnedDialogs) baseUpdate;
@@ -8619,7 +8712,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                         } else {
                             order = null;
                         }
-                        loadPinnedDialogs(0, order);
+                        //loadPinnedDialogs(0, order);
                     } else if (baseUpdate instanceof TLRPC.TL_updateUserPhoto) {
                         TLRPC.TL_updateUserPhoto update = (TLRPC.TL_updateUserPhoto) baseUpdate;
                         final TLRPC.User currentUser = getUser(update.user_id);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java
index 74546649a..4811c2b3c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesStorage.java
@@ -6978,7 +6978,9 @@ public int getPinnedCount() {
         return count[0];
     }
 
-    public void setDialogFavorite(final long did, final int favorite_date) {
+    public int setDialogFavorite(final long did, final int favorite_date) {
+        final CountDownLatch countDownLatch = new CountDownLatch(1);
+        final Integer[] dates = new Integer[]{0};
         storageQueue.postRunnable(() -> {
             try {
                 int value = 0;
@@ -6996,18 +6998,67 @@ public void setDialogFavorite(final long did, final int favorite_date) {
                     }
                 }
 
-                value = (value == 0 ? favorite_date : value) > 0 ? 0 : Time.currentMillis();
+                dates[0] = value = (value == 0 ? favorite_date : value) > 0 ? 0 : Time.currentMillis();
 
                 SQLitePreparedStatement state = database.executeFast("UPDATE dialogs SET favorite_date = ? WHERE did = ?");
                 state.bindInteger(1, value);
                 state.bindLong(2, did);
                 state.step();
                 state.dispose();
+                countDownLatch.countDown();
             } catch (Exception e) {
                 e.printStackTrace();
                 FileLog.e(e);
             }
         });
+        try {
+            countDownLatch.await();
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
+        return dates[0];
+    }
+
+    public void updateDialogFavorite(final long did, final int favorite_date) {
+        storageQueue.postRunnable(() -> {
+            try {
+                SQLitePreparedStatement state = database.executeFast("UPDATE dialogs SET favorite_date = ? WHERE did = ?");
+                state.bindInteger(1, favorite_date);
+                state.bindLong(2, did);
+                state.step();
+                state.dispose();
+            } catch (Exception e) {
+                e.printStackTrace();
+                FileLog.e(e);
+            }
+        });
+    }
+
+    public int getDialogFavoriteDate(final long did) {
+        final CountDownLatch countDownLatch = new CountDownLatch(1);
+        final Integer[] dates = new Integer[]{0};
+        storageQueue.postRunnable(() -> {
+            SQLiteCursor cursor = null;
+            try {
+                cursor = database.queryFinalized("SELECT favorite_date FROM dialogs WHERE did = " + did);
+                if (cursor.next()) {
+                    dates[0] = cursor.intValue(0);
+                }
+            } catch (Exception e) {
+                FileLog.e(e);
+            } finally {
+                if (cursor != null) {
+                    cursor.dispose();
+                }
+            }
+            countDownLatch.countDown();
+        });
+        try {
+            countDownLatch.await();
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
+        return dates[0];
     }
 
     public void setDialogPinned(final long did, final int pinned) {
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MigrationController.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MigrationController.java
new file mode 100644
index 000000000..cbeeefedf
--- /dev/null
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MigrationController.java
@@ -0,0 +1,132 @@
+package io.bettergram.telegram.messenger;
+
+import android.app.Activity;
+import android.content.SharedPreferences;
+
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.Set;
+
+import io.bettergram.telegram.tgnet.TLRPC;
+
+public class MigrationController {
+
+    private SharedPreferences dialogsPreferences;
+
+    private int currentAccount;
+    private static volatile MigrationController[] Instance = new MigrationController[UserConfig.MAX_ACCOUNT_COUNT];
+
+    public static MigrationController getInstance(int num) {
+        MigrationController localInstance = Instance[num];
+        if (localInstance == null) {
+            synchronized (MigrationController.class) {
+                localInstance = Instance[num];
+                if (localInstance == null) {
+                    Instance[num] = localInstance = new MigrationController(num);
+                }
+            }
+        }
+        return localInstance;
+    }
+
+    private MigrationController(int num) {
+        currentAccount = num;
+        dialogsPreferences = ApplicationLoader.applicationContext.getSharedPreferences("local_dialogs_" + currentAccount, Activity.MODE_PRIVATE);
+    }
+
+    public void storePinnedDialog(TLRPC.TL_dialog d) {
+        Set<String> string_set = restorePinnedDialogsStringSet();
+        Set<String> string_set_copy = new HashSet<>(string_set);
+        string_set_copy.add(String.valueOf(d.id) + "," + String.valueOf(d.pinnedNum));
+        SharedPreferences.Editor editor = dialogsPreferences.edit();
+        editor.putStringSet("stored_pinned_dialog_set", string_set_copy);
+        editor.apply();
+    }
+
+    public int restorePinnedNum(TLRPC.TL_dialog d) {
+        Set<String> string_set = restorePinnedDialogsStringSet();
+        Set<String> string_set_copy = new HashSet<>(string_set);
+        for (String s : string_set_copy) {
+            String[] parts = s.split(",", 2);
+            long did = Long.valueOf(parts[0]);
+            int pinnedNum = Integer.valueOf(parts[1]);
+            if (d.id == did) {
+                return pinnedNum;
+            }
+        }
+        return 0;
+    }
+
+    public void storeFavoriteDialog(final long did, final int favorite_date) {
+        Set<String> string_set = restoreFavoriteDialogsStringSet();
+        Set<String> string_set_copy = new HashSet<>(string_set);
+        string_set_copy.add(String.valueOf(did) + "," + String.valueOf(favorite_date));
+        SharedPreferences.Editor editor = dialogsPreferences.edit();
+        editor.putStringSet("stored_favorite_dialog_set", string_set_copy);
+        editor.apply();
+    }
+
+    public int restoreFavoriteDate(TLRPC.TL_dialog d) {
+        Set<String> string_set = restoreFavoriteDialogsStringSet();
+        Set<String> string_set_copy = new HashSet<>(string_set);
+        for (String s : string_set_copy) {
+            String[] parts = s.split(",", 2);
+            long did = Long.valueOf(parts[0]);
+            int favorite_date = Integer.valueOf(parts[1]);
+            if (d.id == did) {
+                return favorite_date;
+            }
+        }
+        return 0;
+    }
+
+    private Set<String> restorePinnedDialogsStringSet() {
+        return dialogsPreferences.getStringSet("stored_pinned_dialog_set", new HashSet<>());
+    }
+
+    private Set<String> restoreFavoriteDialogsStringSet() {
+        return dialogsPreferences.getStringSet("stored_favorite_dialog_set", new HashSet<>());
+    }
+
+    public void migratePinnedDialogs(ArrayList<TLRPC.TL_dialog> dialogs) {
+        boolean once = dialogsPreferences.getBoolean("pinned_dialog_migrate_once", true);
+        if (once) {
+            SharedPreferences.Editor editor = dialogsPreferences.edit();
+            editor.putBoolean("pinned_dialog_migrate_once", false);
+            editor.apply();
+            Set<String> string_set = restorePinnedDialogsStringSet();
+            Set<String> string_set_copy = new HashSet<>(string_set);
+            for (int i = 0, size = dialogs.size(); i < size; i++) {
+                TLRPC.TL_dialog dialog = dialogs.get(i);
+                final long did = dialog.id;
+                final int pinnedNum = dialog.pinnedNum;
+                if (pinnedNum > 0) {
+                    string_set_copy.add(String.valueOf(did) + "," + String.valueOf(pinnedNum));
+                }
+            }
+            editor.putStringSet("stored_pinned_dialog_set", string_set_copy);
+            editor.apply();
+        }
+    }
+
+    public void migrateFavoritedDialogs(ArrayList<TLRPC.TL_dialog> dialogs) {
+        boolean once = dialogsPreferences.getBoolean("favorite_dialog_migrate_once", true);
+        if (once) {
+            SharedPreferences.Editor editor = dialogsPreferences.edit();
+            editor.putBoolean("favorite_dialog_migrate_once", false);
+            editor.apply();
+            Set<String> string_set = restoreFavoriteDialogsStringSet();
+            Set<String> string_set_copy = new HashSet<>(string_set);
+            for (int i = 0, size = dialogs.size(); i < size; i++) {
+                TLRPC.TL_dialog dialog = dialogs.get(i);
+                final long did = dialog.id;
+                final int favorite_date = dialog.favorite_date;
+                if (favorite_date > 0) {
+                    string_set_copy.add(String.valueOf(did) + "," + String.valueOf(favorite_date));
+                }
+            }
+            editor.putStringSet("stored_favorite_dialog_set", string_set_copy);
+            editor.apply();
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java b/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java
index 2aa369777..5479d1eca 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java
@@ -16,6 +16,7 @@
 import android.telephony.TelephonyManager;
 import android.text.TextUtils;
 import android.util.Base64;
+import android.util.Log;
 
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
@@ -24,20 +25,6 @@
 
 import org.json.JSONArray;
 import org.json.JSONObject;
-import io.bettergram.telegram.messenger.AndroidUtilities;
-import io.bettergram.messenger.BuildConfig;
-import io.bettergram.telegram.messenger.BuildVars;
-import io.bettergram.telegram.messenger.ContactsController;
-import io.bettergram.telegram.messenger.ApplicationLoader;
-import io.bettergram.telegram.messenger.FileLoader;
-import io.bettergram.telegram.messenger.FileLog;
-import io.bettergram.telegram.messenger.KeepAliveJob;
-import io.bettergram.telegram.messenger.LocaleController;
-import io.bettergram.telegram.messenger.MessagesController;
-import io.bettergram.telegram.messenger.NotificationCenter;
-import io.bettergram.telegram.messenger.StatsController;
-import io.bettergram.telegram.messenger.UserConfig;
-import io.bettergram.telegram.messenger.Utilities;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;
@@ -57,6 +44,21 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import io.bettergram.messenger.BuildConfig;
+import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.BuildVars;
+import io.bettergram.telegram.messenger.ContactsController;
+import io.bettergram.telegram.messenger.FileLoader;
+import io.bettergram.telegram.messenger.FileLog;
+import io.bettergram.telegram.messenger.KeepAliveJob;
+import io.bettergram.telegram.messenger.LocaleController;
+import io.bettergram.telegram.messenger.MessagesController;
+import io.bettergram.telegram.messenger.NotificationCenter;
+import io.bettergram.telegram.messenger.StatsController;
+import io.bettergram.telegram.messenger.UserConfig;
+import io.bettergram.telegram.messenger.Utilities;
+
 public class ConnectionsManager {
 
     public final static int ConnectionTypeGeneric = 1;
@@ -120,6 +122,7 @@ public ResolvedDomain(String a, long t) {
 
     private int currentAccount;
     private static volatile ConnectionsManager[] Instance = new ConnectionsManager[UserConfig.MAX_ACCOUNT_COUNT];
+
     public static ConnectionsManager getInstance(int num) {
         ConnectionsManager localInstance = Instance[num];
         if (localInstance == null) {
@@ -423,11 +426,14 @@ public static void onUnparsedMessageReceived(long address, final int currentAcco
                 if (BuildVars.LOGS_ENABLED) {
                     FileLog.d("java received " + message);
                 }
+                Log.e("test", "the fucking flags: " + ((TLRPC.Updates) message).flags);
                 KeepAliveJob.finishJob();
                 Utilities.stageQueue.postRunnable(new Runnable() {
                     @Override
                     public void run() {
-                        MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) message, false);
+                        if (((TLRPC.Updates) message).flags != 0) {
+                            MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) message, false);
+                        }
                     }
                 });
             }
@@ -663,29 +669,53 @@ public static void setProxySettings(boolean enabled, String address, int port, S
     }
 
     public static native void native_switchBackend(int currentAccount);
+
     public static native int native_isTestBackend(int currentAccount);
+
     public static native void native_pauseNetwork(int currentAccount);
+
     public static native void native_setUseIpv6(int currentAccount, boolean value);
+
     public static native void native_updateDcSettings(int currentAccount);
+
     public static native void native_setNetworkAvailable(int currentAccount, boolean value, int networkType, boolean slow);
+
     public static native void native_resumeNetwork(int currentAccount, boolean partial);
+
     public static native long native_getCurrentTimeMillis(int currentAccount);
+
     public static native int native_getCurrentTime(int currentAccount);
+
     public static native int native_getTimeDifference(int currentAccount);
+
     public static native void native_sendRequest(int currentAccount, long object, RequestDelegateInternal onComplete, QuickAckDelegate onQuickAck, WriteToSocketDelegate onWriteToSocket, int flags, int datacenterId, int connetionType, boolean immediate, int requestToken);
+
     public static native void native_cancelRequest(int currentAccount, int token, boolean notifyServer);
+
     public static native void native_cleanUp(int currentAccount, boolean resetKeys);
+
     public static native void native_cancelRequestsForGuid(int currentAccount, int guid);
+
     public static native void native_bindRequestToGuid(int currentAccount, int requestToken, int guid);
+
     public static native void native_applyDatacenterAddress(int currentAccount, int datacenterId, String ipAddress, int port);
+
     public static native int native_getConnectionState(int currentAccount);
+
     public static native void native_setUserId(int currentAccount, int id);
+
     public static native void native_init(int currentAccount, int version, int layer, int apiId, String deviceModel, String systemVersion, String appVersion, String langCode, String systemLangCode, String configPath, String logPath, int userId, boolean enablePushConnection, boolean hasNetwork, int networkType);
+
     public static native void native_setProxySettings(int currentAccount, String address, int port, String username, String password, String secret);
+
     public static native void native_setLangCode(int currentAccount, String langCode);
+
     public static native void native_setJava(boolean useJavaByteBuffers);
+
     public static native void native_setPushConnectionEnabled(int currentAccount, boolean value);
+
     public static native void native_applyDnsConfig(int currentAccount, long address, String phone);
+
     public static native long native_checkProxy(int currentAccount, String address, int port, String username, String password, String secret, RequestTimeDelegate requestTimeDelegate);
 
     public static int generateClassGuid() {
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/Indicator/FavoriteIndicator.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/Indicator/FavoriteIndicator.java
index ef07ffe33..8b4374f0f 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/Indicator/FavoriteIndicator.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/Indicator/FavoriteIndicator.java
@@ -3,10 +3,10 @@
 import android.graphics.Canvas;
 import android.graphics.drawable.Drawable;
 import android.support.v4.graphics.drawable.DrawableCompat;
+
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.MessagesController;
 import io.bettergram.telegram.messenger.UserConfig;
-import io.bettergram.telegram.tgnet.TLRPC;
 import io.bettergram.telegram.ui.ActionBar.Theme;
 
 public class FavoriteIndicator {
@@ -43,9 +43,9 @@ public void draw(Canvas canvas) {
         if (dialog_id == 0) {
             return;
         }
-       
-        TLRPC.TL_dialog dialog = MessagesController.getInstance(currentAccount).dialogs_dict.get(dialog_id);
-        if (dialog != null && dialog.favorite_date > 0) {
+
+        final int favorite_date = MessagesController.getInstance(currentAccount).getDialogFavoriteDate(dialog_id);
+        if (favorite_date > 0) {
             float x0 = offsetX + radius;
             float y0 = offsetY + radius;
             float dx = (float) (x0 + radius * Math.cos(-40 * Math.PI / 180));
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index f530438a5..a1aaf9b98 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -254,10 +254,12 @@ public boolean onFragmentCreate() {
 
         if (!dialogsLoaded[currentAccount]) {
             MessagesController.getInstance(currentAccount).loadGlobalNotificationsSettings();
-            MessagesController.getInstance(currentAccount).loadDialogs(0, 100, true);
+            //MessagesController.getInstance(currentAccount).loadDialogs(0, 100, true);
+            MessagesController.getInstance(currentAccount).loadFuckingEverything();
             MessagesController.getInstance(currentAccount).loadHintDialogs();
             ContactsController.getInstance(currentAccount).checkInviteText();
-            MessagesController.getInstance(currentAccount).loadPinnedDialogs(0, null);
+            //MessagesController.getInstance(currentAccount).loadPinnedDialogs(0, null);
+            //MessagesController.getInstance(currentAccount).loadLocalFavoriteDialogs();
             DataQuery.getInstance(currentAccount).loadRecents(DataQuery.TYPE_FAVE, false, true, false);
             DataQuery.getInstance(currentAccount).checkFeaturedStickers();
             dialogsLoaded[currentAccount] = true;
@@ -946,7 +948,6 @@ public boolean onItemClick(View view, int position, float x, float y) {
                 }
 
                 final TLRPC.TL_dialog dialog = _dialog;
-
                 if (dialog == null) {
                     return false;
                 }
@@ -1166,11 +1167,12 @@ public void onMove(float dx, float dy) {
             public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {
                 final int position = viewHolder.getAdapterPosition();
                 final TLRPC.TL_dialog dialog = getDialog(position);
-                if (dialog != null && dialog.pinned && MessagesController.getInstance(currentAccount).getPinnedCount() > 1) {
+                final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount() - 1;
+                final int target_position = target.getAdapterPosition();
+                if (dialog != null && dialog.pinned && pinned_highest_pos > 1 && position <= pinned_highest_pos && target_position <= pinned_highest_pos) {
                     if (bottomSheetDialog != null) {
                         bottomSheetDialog.dismiss();
                     }
-                    int target_position = target.getAdapterPosition();
                     MessagesController.getInstance(currentAccount).swapPinnedDialogs(position, target_position);
                     dialogsAdapter.notifyItemMoved(position, target_position);
                     return true;
@@ -1187,10 +1189,8 @@ public void onSelectedChanged(RecyclerView.ViewHolder viewHolder, int actionStat
                     viewHolder.itemView.setBackground(draggingDrawable);
                 } else if (actionState == 0) {
                     viewHolder.itemView.setBackground(previousDrawable);
-
                     final int position = viewHolder.getAdapterPosition();
                     final TLRPC.TL_dialog dialog = getDialog(position);
-
                     if (dialog != null && dialog.pinned && bottomSheetDialog != null) {
                         bottomSheetDialog.show();
                     }
@@ -1206,8 +1206,10 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
             public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {
                 final int position = viewHolder.getAdapterPosition();
                 final TLRPC.TL_dialog dialog = getDialog(position);
-                if (dialog != null && dialog.pinned && dialogsAdapter.getDialogsArray().size() > 1 && !searching && MessagesController.getInstance(currentAccount).getPinnedCount() > 1) {
-                    return makeFlag(ItemTouchHelper.ACTION_STATE_DRAG, ItemTouchHelper.DOWN | ItemTouchHelper.UP);
+                final int dialogs_size = dialogsAdapter.getDialogsArray().size();
+                final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount();
+                if (dialog != null && dialog.pinned && dialogs_size > 1 && !searching && pinned_highest_pos > 1 && position <= pinned_highest_pos) {
+                    return makeFlag(ItemTouchHelper.ACTION_STATE_DRAG, (position == pinned_highest_pos - 1) ? ItemTouchHelper.UP : ItemTouchHelper.DOWN | ItemTouchHelper.UP);
                 } else {
                     return makeFlag(ItemTouchHelper.ACTION_STATE_IDLE, ItemTouchHelper.ACTION_STATE_IDLE);
                 }
@@ -2045,7 +2047,9 @@ public void didReceivedNotification(int id, int account, Object... args) {
             checkUnreadCount(true);
             if (dialogsAdapter != null) {
                 if (dialogsAdapter.isDataSetChanged() || args.length > 0) {
-                    dialogsAdapter.notifyDataSetChanged();
+                    //MessagesController.getInstance(currentAccount).loadLocalPinnedDialogs();
+                    //MessagesController.getInstance(currentAccount).loadLocalFavoriteDialogs();
+                    listView.postAndNotifyAdapter(dialogsAdapter::notifyDataSetChanged);
                 } else {
                     updateVisibleRows(MessagesController.UPDATE_MASK_NEW_MESSAGE);
                 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/SettingsActivity.java
index e5d0d7dc2..fe9a4fd3c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/SettingsActivity.java
@@ -8,7 +8,11 @@
 
 package io.bettergram.telegram.ui;
 
-import android.animation.*;
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
+import android.animation.StateListAnimator;
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.Intent;
@@ -33,30 +37,74 @@
 import android.text.style.URLSpan;
 import android.util.Base64;
 import android.util.TypedValue;
-import android.view.*;
+import android.view.Gravity;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewOutlineProvider;
+import android.view.ViewTreeObserver;
 import android.view.animation.AccelerateInterpolator;
 import android.view.animation.DecelerateInterpolator;
-import android.widget.*;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.Locale;
+
 import io.bettergram.messenger.BuildConfig;
 import io.bettergram.messenger.R;
 import io.bettergram.telegram.PhoneFormat.PhoneFormat;
-import io.bettergram.telegram.messenger.*;
+import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.BuildVars;
+import io.bettergram.telegram.messenger.ContactsController;
+import io.bettergram.telegram.messenger.DataQuery;
+import io.bettergram.telegram.messenger.FileLoader;
+import io.bettergram.telegram.messenger.FileLog;
+import io.bettergram.telegram.messenger.LocaleController;
+import io.bettergram.telegram.messenger.MessageObject;
+import io.bettergram.telegram.messenger.MessagesController;
+import io.bettergram.telegram.messenger.MessagesStorage;
+import io.bettergram.telegram.messenger.NotificationCenter;
+import io.bettergram.telegram.messenger.SharedConfig;
+import io.bettergram.telegram.messenger.UserConfig;
+import io.bettergram.telegram.messenger.UserObject;
 import io.bettergram.telegram.messenger.browser.Browser;
 import io.bettergram.telegram.messenger.support.widget.LinearLayoutManager;
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.tgnet.ConnectionsManager;
 import io.bettergram.telegram.tgnet.SerializedData;
 import io.bettergram.telegram.tgnet.TLRPC;
-import io.bettergram.telegram.ui.ActionBar.*;
-import io.bettergram.telegram.ui.Cells.*;
-import io.bettergram.telegram.ui.Components.*;
+import io.bettergram.telegram.ui.ActionBar.ActionBar;
+import io.bettergram.telegram.ui.ActionBar.ActionBarMenu;
+import io.bettergram.telegram.ui.ActionBar.ActionBarMenuItem;
+import io.bettergram.telegram.ui.ActionBar.AlertDialog;
+import io.bettergram.telegram.ui.ActionBar.BaseFragment;
+import io.bettergram.telegram.ui.ActionBar.BottomSheet;
+import io.bettergram.telegram.ui.ActionBar.Theme;
+import io.bettergram.telegram.ui.ActionBar.ThemeDescription;
+import io.bettergram.telegram.ui.Cells.CheckBoxCell;
+import io.bettergram.telegram.ui.Cells.EmptyCell;
+import io.bettergram.telegram.ui.Cells.HeaderCell;
+import io.bettergram.telegram.ui.Cells.ShadowSectionCell;
+import io.bettergram.telegram.ui.Cells.TextCheckCell;
+import io.bettergram.telegram.ui.Cells.TextDetailSettingsCell;
+import io.bettergram.telegram.ui.Cells.TextInfoCell;
+import io.bettergram.telegram.ui.Cells.TextSettingsCell;
+import io.bettergram.telegram.ui.Components.AvatarDrawable;
+import io.bettergram.telegram.ui.Components.BackupImageView;
+import io.bettergram.telegram.ui.Components.CombinedDrawable;
+import io.bettergram.telegram.ui.Components.ImageUpdater;
+import io.bettergram.telegram.ui.Components.LayoutHelper;
 import io.bettergram.telegram.ui.Components.NumberPicker;
+import io.bettergram.telegram.ui.Components.RecyclerListView;
+import io.bettergram.telegram.ui.Components.URLSpanNoUnderline;
 import io.bettergram.telegram.ui.Components.voip.VoIPHelper;
 
-import java.io.File;
-import java.util.ArrayList;
-import java.util.Locale;
-
 public class SettingsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
 
     private RecyclerListView listView;
@@ -513,7 +561,7 @@ public void onClick(View widget) {
                 } else if (position == telegramFaqRow) {
                     Browser.openUrl(getParentActivity(), LocaleController.getString("BettergramFaqUrl", R.string.BettergramFaqUrl));
                 } else if (position == privacyPolicyRow) {
-                    Browser.openUrl(getParentActivity(), LocaleController.getString("PrivacyPolicyUrl", R.string.PrivacyPolicyUrl));
+                    Browser.openUrl(getParentActivity(), LocaleController.getString("_PrivacyPolicyUrl", R.string.PrivacyPolicyUrl));
                 } else if (position == contactsReimportRow) {
                     //not implemented
                 } else if (position == contactsSortRow) {
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index ad7659155..6e4e5d14e 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">سياسة الخصوصية</string>
     <string name="TermsOfService">شروط الخدمة</string>
     <string name="TermsOfServiceLogin">من خلال تسجيلك،\nأنت توافق على *شروط الخدمة*.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">حذف التعريب؟</string>
     <string name="IncorrectLocalization">ملف التعريب غير صحيح</string>
     <string name="NotificationsService">التشغيل المستمر في الخلفية</string>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 242541599..16c810c37 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -827,8 +827,8 @@
     <string name="MessageLifetimePhoto">Bild wird nach Ablauf der Zeit selbst zerstört.</string>
     <string name="MessageLifetimeVideo">Video wird nach Ablauf der Zeit selbst zerstört.</string>
     <string name="ShortMessageLifetimeForever">Aus</string>
-    <string name="EncryptionKeyDescription">Bild und Text zeigen den Schlüssel dieses geheimen Chats mit **%1$s**.\n\nSehen sie auf dem Gerät von **%2$s\'s** genau so aus, ist Ende-zu-Ende Verschlüsselung garantiert.\n\nErfahre mehr unter Bettergram.org</string>
-    <string name="EncryptionKeyLink">https://Bettergram.org/faq/de#geheime-chats</string>
+    <string name="EncryptionKeyDescription">Bild und Text zeigen den Schlüssel dieses geheimen Chats mit **%1$s**.\n\nSehen sie auf dem Gerät von **%2$s\'s** genau so aus, ist Ende-zu-Ende Verschlüsselung garantiert.\n\nErfahre mehr unter Bettergram.io</string>
+    <string name="EncryptionKeyLink">https://Bettergram.io/faq/de#geheime-chats</string>
     <string name="NumberUnknown">Unbekannt</string>
     <string name="Info">Info</string>
     <string name="Phone">Telefon</string>
@@ -984,7 +984,7 @@
     <string name="PinnedMessages">Angeheftete Nachrichten</string>
     <string name="Language">Sprache</string>
     <string name="LanguageCustom">Eigene</string>
-    <string name="AskAQuestionInfo">Bedenke bitte, dass der Bettergram Support von Freiwilligen betreut wird. Alle versuchen so schnell wie möglich zu antworten, dies kann jedoch manchmal ein bisschen dauern.\n\nBitte schau auch in den  <![CDATA[<a href=\"https://Bettergram.org/faq/de#allgemeine-fragen\">Bettergram FAQ</a>]]> nach. Dort findest du Antworten auf die meisten Fragen und wichtige Tipps zur <![CDATA[<a href=\"https://Bettergram.org/faq/de#problembehandlung\">Problembehandlung</a>]]>.</string>
+    <string name="AskAQuestionInfo">Bedenke bitte, dass der Bettergram Support von Freiwilligen betreut wird. Alle versuchen so schnell wie möglich zu antworten, dies kann jedoch manchmal ein bisschen dauern.\n\nBitte schau auch in den  <![CDATA[<a href=\"https://Bettergram.io/faq/de#allgemeine-fragen\">Bettergram FAQ</a>]]> nach. Dort findest du Antworten auf die meisten Fragen und wichtige Tipps zur <![CDATA[<a href=\"https://Bettergram.io/faq/de#problembehandlung\">Problembehandlung</a>]]>.</string>
     <string name="AskButton">Eine Frage stellen</string>
     <string name="BettergramFAQ">Bettergram FAQ</string>
     <string name="BettergramFaq">Fragen und Antworten</string>
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">Datenschutzerklärung</string>
     <string name="TermsOfService">Nutzungsbedingungen</string>
     <string name="TermsOfServiceLogin">Mit der Registrierung\nstimmst du den *Nutzungsbedingungen* zu.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">Lokalisierung löschen?</string>
     <string name="IncorrectLocalization">Falsche Sprachdatei</string>
     <string name="NotificationsService">Keep-Alive-Dienst</string>
@@ -1707,7 +1707,7 @@
     <string name="ActionBotDocumentRentalAgreement">Mietvertrag</string>
     <string name="ActionBotDocumentPhone">Telefonnummer</string>
     <string name="ActionBotDocumentEmail">E-Mail-Adresse</string>
-    <string name="UnsupportedMedia">Diese Nachricht wird von deiner Bettergram-Version nicht unterstützt. Bitte aktualisiere Bettergram um sie zu sehen: https://Bettergram.org/update</string>
+    <string name="UnsupportedMedia">Diese Nachricht wird von deiner Bettergram-Version nicht unterstützt. Bitte aktualisiere Bettergram um sie zu sehen: https://Bettergram.io/update</string>
     <string name="AttachPhoto">Bild</string>
     <string name="AttachVideo">Video</string>
     <string name="AttachDestructingPhoto">Selbstzerstörendes Bild</string>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 78aeebeb4..1a0e68c19 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -827,8 +827,8 @@
     <string name="MessageLifetimePhoto">Si pones un temporizador, la foto se autodestruirá después de ser vista.</string>
     <string name="MessageLifetimeVideo">Si pones un temporizador, el vídeo se autodestruirá después ser visto.</string>
     <string name="ShortMessageLifetimeForever">Apagada</string>
-    <string name="EncryptionKeyDescription">El texto e imagen derivan de la clave de cifrado para el chat secreto creado con **%1$s**.\n\nSi se ven igual en el dispositivo de **%2$s**, el cifrado end-to-end está garantizado.\n\nConoce más en Bettergram.org</string>
-    <string name="EncryptionKeyLink">https://Bettergram.org/faq/es#chats-secretos</string>
+    <string name="EncryptionKeyDescription">El texto e imagen derivan de la clave de cifrado para el chat secreto creado con **%1$s**.\n\nSi se ven igual en el dispositivo de **%2$s**, el cifrado end-to-end está garantizado.\n\nConoce más en Bettergram.io</string>
+    <string name="EncryptionKeyLink">https://Bettergram.io/faq/es#chats-secretos</string>
     <string name="NumberUnknown">Desconocido</string>
     <string name="Info">Información</string>
     <string name="Phone">Teléfono</string>
@@ -984,7 +984,7 @@
     <string name="PinnedMessages">Mensajes anclados</string>
     <string name="Language">Idioma</string>
     <string name="LanguageCustom">Personalizado</string>
-    <string name="AskAQuestionInfo">Por favor, considera que el soporte de Bettergram está hecho por voluntarios. Respondemos lo antes posible, pero puede tomar tiempo.\n\nPor favor, mira las <![CDATA[<a href=\"https://Bettergram.org/faq/es#general\">Preguntas frecuentes de Bettergram</a>]]>: tienen respuestas para la mayoría de las preguntas y <![CDATA[<a href=\"https://Bettergram.org/faq#troubleshooting\">soluciones a problemas</a>]]>.</string>
+    <string name="AskAQuestionInfo">Por favor, considera que el soporte de Bettergram está hecho por voluntarios. Respondemos lo antes posible, pero puede tomar tiempo.\n\nPor favor, mira las <![CDATA[<a href=\"https://Bettergram.io/faq/es#general\">Preguntas frecuentes de Bettergram</a>]]>: tienen respuestas para la mayoría de las preguntas y <![CDATA[<a href=\"https://Bettergram.io/faq#troubleshooting\">soluciones a problemas</a>]]>.</string>
     <string name="AskButton">Preguntar</string>
     <string name="BettergramFAQ">Preguntas frecuentes</string>
     <string name="BettergramFaq">Preguntas frecuentes</string>
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">Política de privacidad</string>
     <string name="TermsOfService">Términos de servicio</string>
     <string name="TermsOfServiceLogin">Al inscribirte,\naceptas los *términos de servicio*.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">¿Eliminar traducción?</string>
     <string name="IncorrectLocalization">Archivo de traducción incorrecto</string>
     <string name="NotificationsService">Servicio keep-alive</string>
@@ -1707,7 +1707,7 @@
     <string name="ActionBotDocumentRentalAgreement">Contrato de alquiler</string>
     <string name="ActionBotDocumentPhone">Número de teléfono</string>
     <string name="ActionBotDocumentEmail">Dirección de correo</string>
-    <string name="UnsupportedMedia">Tu versión de Bettergram no es compatible con este mensaje. Por favor, actualiza tu app para verlo: https://Bettergram.org/update</string>
+    <string name="UnsupportedMedia">Tu versión de Bettergram no es compatible con este mensaje. Por favor, actualiza tu app para verlo: https://Bettergram.io/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Vídeo</string>
     <string name="AttachDestructingPhoto">Foto con autodestrucción</string>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index da83af174..cd30b53b3 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -827,8 +827,8 @@
     <string name="MessageLifetimePhoto">Se imposti un timer, la foto si autodistruggerà dopo essere stata vista.</string>
     <string name="MessageLifetimeVideo">Se imposti un timer, il video si autodistruggerà dopo essere stato visto.</string>
     <string name="ShortMessageLifetimeForever">Spento</string>
-    <string name="EncryptionKeyDescription">L\'immagine e il testo sono derivati dalla chiave di crittografia di questa chat segreta con **%1$s**.\n\nSe sono uguali sul dispositivo di **%2$s**, la crittografia end-to-end è garantita.\n\nUlteriori informazioni su Bettergram.org</string>
-    <string name="EncryptionKeyLink">https://Bettergram.org/faq/it#chat-segrete</string>
+    <string name="EncryptionKeyDescription">L\'immagine e il testo sono derivati dalla chiave di crittografia di questa chat segreta con **%1$s**.\n\nSe sono uguali sul dispositivo di **%2$s**, la crittografia end-to-end è garantita.\n\nUlteriori informazioni su Bettergram.io</string>
+    <string name="EncryptionKeyLink">https://Bettergram.io/faq/it#chat-segrete</string>
     <string name="NumberUnknown">Sconosciuto</string>
     <string name="Info">Info</string>
     <string name="Phone">Telefono</string>
@@ -984,7 +984,7 @@
     <string name="PinnedMessages">Messaggi fissati</string>
     <string name="Language">Lingua</string>
     <string name="LanguageCustom">Personalizzata</string>
-    <string name="AskAQuestionInfo">Per favore nota che l\'assistenza di Bettergram è gestita da volontari. Proviamo a rispondere quanto prima, ma potrebbe volerci del tempo.\n\nDai un\'occhiata alle <![CDATA[<a href=\"https://Bettergram.org/faq/it#domande-generali\">domande frequenti di Bettergram</a>]]>: contengono suggerimenti importanti per <![CDATA[<a href=\"https://Bettergram.org/faq/it#risoluzione-dei-problemi\">risolvere i  problemi</a>]]> e risposte a quasi tutte le domande.</string>
+    <string name="AskAQuestionInfo">Per favore nota che l\'assistenza di Bettergram è gestita da volontari. Proviamo a rispondere quanto prima, ma potrebbe volerci del tempo.\n\nDai un\'occhiata alle <![CDATA[<a href=\"https://Bettergram.io/faq/it#domande-generali\">domande frequenti di Bettergram</a>]]>: contengono suggerimenti importanti per <![CDATA[<a href=\"https://Bettergram.io/faq/it#risoluzione-dei-problemi\">risolvere i  problemi</a>]]> e risposte a quasi tutte le domande.</string>
     <string name="AskButton">Chiedi a un volontario</string>
     <string name="BettergramFAQ">Domande frequenti</string>
     <string name="BettergramFaq">Domande frequenti</string>
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">Informativa sulla privacy</string>
     <string name="TermsOfService">Termini di servizio</string>
     <string name="TermsOfServiceLogin">Iscrivendoti,\naccetti i *Termini di servizio*.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">Eliminare la traduzione?</string>
     <string name="IncorrectLocalization">File di traduzione non valido</string>
     <string name="NotificationsService">Servizio keep-alive</string>
@@ -1707,7 +1707,7 @@
     <string name="ActionBotDocumentRentalAgreement">Contratto di locazione</string>
     <string name="ActionBotDocumentPhone">Numero di telefono</string>
     <string name="ActionBotDocumentEmail">Indirizzo email</string>
-    <string name="UnsupportedMedia">Questo messaggio non è supportato dalla tua versione di Bettergram. Aggiorna l\'app per visualizzarlo: https://Bettergram.org/update</string>
+    <string name="UnsupportedMedia">Questo messaggio non è supportato dalla tua versione di Bettergram. Aggiorna l\'app per visualizzarlo: https://Bettergram.io/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Video</string>
     <string name="AttachDestructingPhoto">Foto con autodistruzione</string>
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index f30adaff6..51b95390a 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -827,8 +827,8 @@
     <string name="MessageLifetimePhoto">타이머를 설정하시면, 사진이 열람된 뒤 자동으로 삭제됩니다.</string>
     <string name="MessageLifetimeVideo">타이머를 설정하시면, 동영상이 열람된 뒤 자동으로 삭제됩니다.</string>
     <string name="ShortMessageLifetimeForever">해제</string>
-    <string name="EncryptionKeyDescription">이 이미지와 문자는 **%1$s** 님과의 비밀 대화에 사용된 암호화 키에서 파생됐습니다.\n\n이 이미지와 문자가 **%2$s** 님 기기에서도 똑같이 보인다면, 종단간 암호화에 문제가 없음이 보장됩니다.\n\n자세한 내용은 Bettergram.org를 참조하세요.</string>
-    <string name="EncryptionKeyLink">https://Bettergram.org/faq#secret-chats</string>
+    <string name="EncryptionKeyDescription">이 이미지와 문자는 **%1$s** 님과의 비밀 대화에 사용된 암호화 키에서 파생됐습니다.\n\n이 이미지와 문자가 **%2$s** 님 기기에서도 똑같이 보인다면, 종단간 암호화에 문제가 없음이 보장됩니다.\n\n자세한 내용은 Bettergram.io를 참조하세요.</string>
+    <string name="EncryptionKeyLink">https://Bettergram.io/faq#secret-chats</string>
     <string name="NumberUnknown">알 수 없음</string>
     <string name="Info">정보</string>
     <string name="Phone">전화번호</string>
@@ -984,7 +984,7 @@
     <string name="PinnedMessages">고정된 메시지</string>
     <string name="Language">언어</string>
     <string name="LanguageCustom">사용자 지정</string>
-    <string name="AskAQuestionInfo">텔레그램에 관한 질문은 자원봉사자들이 답변해 드립니다. 신속하게 응답하기 위해 노력하지만 다소 시간이 걸릴 수 있습니다.\n\n<![CDATA[<a href=\"https://Bettergram.org/faq#general\"> 자주 묻는 질문</a>]]>을 확인해보세요. 잦은 질문에 대한 답과 <![CDATA[<a href=\"https://Bettergram.org/faq#troubleshooting\">문제 해결</a>]]>을 위한 중요한 조언이 있습니다.</string>
+    <string name="AskAQuestionInfo">텔레그램에 관한 질문은 자원봉사자들이 답변해 드립니다. 신속하게 응답하기 위해 노력하지만 다소 시간이 걸릴 수 있습니다.\n\n<![CDATA[<a href=\"https://Bettergram.io/faq#general\"> 자주 묻는 질문</a>]]>을 확인해보세요. 잦은 질문에 대한 답과 <![CDATA[<a href=\"https://Bettergram.io/faq#troubleshooting\">문제 해결</a>]]>을 위한 중요한 조언이 있습니다.</string>
     <string name="AskButton">봉사자에게 질문</string>
     <string name="BettergramFAQ">자주 묻는 질문</string>
     <string name="BettergramFaq">자주 묻는 질문</string>
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">개인 정보 정책</string>
     <string name="TermsOfService">이용 약관</string>
     <string name="TermsOfServiceLogin">가입함으로써 귀하는 *이용 약관*에 동의하게 됩니다.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">언어를 삭제할까요?</string>
     <string name="IncorrectLocalization">언어 파일이 올바르지 않습니다</string>
     <string name="NotificationsService">항상 활성화 서비스</string>
@@ -1707,7 +1707,7 @@
     <string name="ActionBotDocumentRentalAgreement">임차 계약서</string>
     <string name="ActionBotDocumentPhone">전화번호</string>
     <string name="ActionBotDocumentEmail">이메일 주소</string>
-    <string name="UnsupportedMedia">이 메시지는 현재 텔레그램 버전에서 지원되지 않습니다. 메시지를 보시려면 http://Bettergram.org/update에서 앱을 업데이트하세요.</string>
+    <string name="UnsupportedMedia">이 메시지는 현재 텔레그램 버전에서 지원되지 않습니다. 메시지를 보시려면 http://Bettergram.io/update에서 앱을 업데이트하세요.</string>
     <string name="AttachPhoto">사진</string>
     <string name="AttachVideo">동영상</string>
     <string name="AttachDestructingPhoto">자동 삭제 사진</string>
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index be42b349d..89c95d1a7 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -827,8 +827,8 @@
     <string name="MessageLifetimePhoto">Als je een timer instelt vernietigt de foto zichzelf na het bekijken.</string>
     <string name="MessageLifetimeVideo">Als je een timer instelt vernietigt de video zichzelf na het bekijken.</string>
     <string name="ShortMessageLifetimeForever">Uit</string>
-    <string name="EncryptionKeyDescription">Deze afbeelding en tekst zijn afgeleid van de encryptiesleutel voor deze geheime chat met **%1$s**.\n\nAls dit er hetzelfde uitziet op het apparaat van **%2$s**, dan is end-to-end-encryptie gegarandeerd.\n\nLees meer op Bettergram.org</string>
-    <string name="EncryptionKeyLink">https://Bettergram.org/faq#secret-chats</string>
+    <string name="EncryptionKeyDescription">Deze afbeelding en tekst zijn afgeleid van de encryptiesleutel voor deze geheime chat met **%1$s**.\n\nAls dit er hetzelfde uitziet op het apparaat van **%2$s**, dan is end-to-end-encryptie gegarandeerd.\n\nLees meer op Bettergram.io</string>
+    <string name="EncryptionKeyLink">https://Bettergram.io/faq#secret-chats</string>
     <string name="NumberUnknown">Onbekend</string>
     <string name="Info">Info</string>
     <string name="Phone">Telefoon</string>
@@ -984,7 +984,7 @@
     <string name="PinnedMessages">Vastgezette berichten</string>
     <string name="Language">Taal</string>
     <string name="LanguageCustom">Aangepast</string>
-    <string name="AskAQuestionInfo">De ondersteuning van Bettergram wordt gedaan door vrijwilligers. We doen ons best om zo snel mogelijk te antwoorden, maar het kan even duren.\n\nBekijk ook de <![CDATA[<a href=\"https://Bettergram.org/faq#general-questions\">veelgestelde vragen</a>]]>: Hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href=\"https://Bettergram.org/faq#troubleshooting\">het oplossen van problemen</a>]]>.</string>
+    <string name="AskAQuestionInfo">De ondersteuning van Bettergram wordt gedaan door vrijwilligers. We doen ons best om zo snel mogelijk te antwoorden, maar het kan even duren.\n\nBekijk ook de <![CDATA[<a href=\"https://Bettergram.io/faq#general-questions\">veelgestelde vragen</a>]]>: Hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href=\"https://Bettergram.io/faq#troubleshooting\">het oplossen van problemen</a>]]>.</string>
     <string name="AskButton">Vraag een vrijwilliger</string>
     <string name="BettergramFAQ">Veelgestelde vragen</string>
     <string name="BettergramFaq">Veelgestelde vragen</string>
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">Privacybeleid</string>
     <string name="TermsOfService">Gebruiksvoorwaarden</string>
     <string name="TermsOfServiceLogin">Door aan te melden ga je akkoord \nmet onze *Gebruiksvoorwaarden*.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">Vertaling verwijderen?</string>
     <string name="IncorrectLocalization">Ongeldig vertalingsbestand</string>
     <string name="NotificationsService">Meldingenservice</string>
@@ -1707,7 +1707,7 @@
     <string name="ActionBotDocumentRentalAgreement">Huurovereenkomst</string>
     <string name="ActionBotDocumentPhone">Telefoonnummer</string>
     <string name="ActionBotDocumentEmail">E-mailadres</string>
-    <string name="UnsupportedMedia">Dit bericht wordt niet ondersteund door jouw versie van Bettergram. Werk Bettergram bij om dit bericht te bekijken: https://Bettergram.org/update</string>
+    <string name="UnsupportedMedia">Dit bericht wordt niet ondersteund door jouw versie van Bettergram. Werk Bettergram bij om dit bericht te bekijken: https://Bettergram.io/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Video</string>
     <string name="AttachDestructingPhoto">Zelfvernietigende foto</string>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index b76dca5de..507b2b2cf 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -828,7 +828,7 @@
     <string name="MessageLifetimeVideo">Se você definir um temporizador, o vídeo irá se auto-destruir após ser visto.</string>
     <string name="ShortMessageLifetimeForever">Desativado</string>
     <string name="EncryptionKeyDescription">Essa imagem e texto foram derivadas da chave criptográfica para esse chat secreto com **%1$s**.\n\nSe você vê o mesmo no dispositivo de **%2$s**, a criptografia ponta a ponta está garantida.</string>
-    <string name="EncryptionKeyLink">https://Bettergram.org/faq/br#chats-secretos</string>
+    <string name="EncryptionKeyLink">https://Bettergram.io/faq/br#chats-secretos</string>
     <string name="NumberUnknown">Desconhecido</string>
     <string name="Info">Info</string>
     <string name="Phone">Telefone</string>
@@ -984,7 +984,7 @@
     <string name="PinnedMessages">Mensagens Fixadas</string>
     <string name="Language">Idioma</string>
     <string name="LanguageCustom">Personalizado</string>
-    <string name="AskAQuestionInfo">Note que o suporte do Bettergram é feito por voluntários. Tentaremos responder o mais rápido possível, mas poderemos demorar um pouco.\n\nPor favor verifique a página de <![CDATA[<a href=\"https://Bettergram.org/faq/br#questes-gerais\">Perguntas Frequentes</a>]]>: há dicas e respostas para a maioria dos <![CDATA[<a href=\"https://Bettergram.org/faq/br#soluo-de-problemas\">problemas</a>]]>.</string>
+    <string name="AskAQuestionInfo">Note que o suporte do Bettergram é feito por voluntários. Tentaremos responder o mais rápido possível, mas poderemos demorar um pouco.\n\nPor favor verifique a página de <![CDATA[<a href=\"https://Bettergram.io/faq/br#questes-gerais\">Perguntas Frequentes</a>]]>: há dicas e respostas para a maioria dos <![CDATA[<a href=\"https://Bettergram.io/faq/br#soluo-de-problemas\">problemas</a>]]>.</string>
     <string name="AskButton">Perguntar</string>
     <string name="BettergramFAQ">Perguntas Frequentes</string>
     <string name="BettergramFaq">Perguntas Frequentes</string>
@@ -994,7 +994,7 @@
     <string name="PrivacyPolicy">Política de Privacidade</string>
     <string name="TermsOfService">Termos de Serviço</string>
     <string name="TermsOfServiceLogin">Ao se cadastrar,\nvocê concorda com os *Termos de Serviço*.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">Apagar localização?</string>
     <string name="IncorrectLocalization">Arquivo de localização incorreto</string>
     <string name="NotificationsService">Manter Serviço Ativo</string>
@@ -1707,7 +1707,7 @@
     <string name="ActionBotDocumentRentalAgreement">Contrato de Locação</string>
     <string name="ActionBotDocumentPhone">Número de Telefone</string>
     <string name="ActionBotDocumentEmail">Endereço de E-mail</string>
-    <string name="UnsupportedMedia">Esta mensagem não é suportada na sua versão do Bettergram. Para visualizá-la atualize seu aplicativo em https://Bettergram.org/update</string>
+    <string name="UnsupportedMedia">Esta mensagem não é suportada na sua versão do Bettergram. Para visualizá-la atualize seu aplicativo em https://Bettergram.io/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Vídeo</string>
     <string name="AttachDestructingPhoto">Foto Autodestrutiva</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 745d7a477..ee1b0260c 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1169,7 +1169,7 @@
     <string name="PrivacyPolicy">Privacy Policy</string>
     <string name="TermsOfService">Terms of Service</string>
     <string name="TermsOfServiceLogin">By signing up,\nyou agree to the *Terms of Service*.</string>
-    <string name="PrivacyPolicyUrl">https://bettergram.io/#</string>
+    <string name="PrivacyPolicyUrl">https://bettergram.io/#myModal3</string>
     <string name="DeleteLocalization">Delete localization?</string>
     <string name="IncorrectLocalization">Incorrect localization file</string>
     <string name="NotificationsService">Keep-Alive Service</string>
