diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 962498f60..60e1423dc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -8,15 +8,18 @@
 
 package org.telegram.ui;
 
+import android.app.Activity;
 import android.content.ContentResolver;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.os.Parcelable;
 import android.provider.ContactsContract;
 import android.view.View;
+import android.view.WindowManager;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -74,6 +77,14 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
 
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH
+                && preferences.getBoolean("disable_screenshot", false)) {
+            getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE,
+                WindowManager.LayoutParams.FLAG_SECURE);
+        }
+
         super.onCreate(savedInstanceState);
 
         int resourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 07184d6b5..bd3f3fe5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
@@ -18,6 +19,7 @@
 import android.content.pm.PackageInfo;
 import android.graphics.Typeface;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.text.Html;
 import android.text.Spannable;
@@ -99,7 +101,9 @@
     private int contactsSectionRow;
     private int contactsReimportRow;
     private int contactsSortRow;
+    private int disableScreenShot;
     private int rowCount;
+    private Boolean prev_enabled;
 
     private static class LinkMovementMethodMy extends LinkMovementMethod {
         @Override
@@ -185,6 +189,7 @@ public void run() {
         notificationRow = rowCount++;
         blockedRow = rowCount++;
         backgroundRow = rowCount++;
+        disableScreenShot = rowCount++;
         terminateSessionsRow = rowCount++;
         photoDownloadSection = rowCount++;
         photoDownloadChatRow = rowCount++;
@@ -369,6 +374,17 @@ public void run() {
                         });
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showAlertDialog(builder);
+                    } else if (i == disableScreenShot) {
+                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                            boolean disable_screen = preferences.getBoolean("disable_screenshot", false);
+                            SharedPreferences.Editor editor = preferences.edit();
+                            editor.putBoolean("disable_screenshot", !disable_screen);
+                            editor.commit();
+                            if (listView != null) {
+                                listView.invalidateViews();
+                            }
+                        }
                     } else if (i == languageRow) {
                         presentFragment(new LanguageSelectActivity());
                     } else if (i == switchBackendButtonRow) {
@@ -677,7 +693,7 @@ public boolean areAllItemsEnabled() {
         @Override
         public boolean isEnabled(int i) {
             return i == textSizeRow || i == enableAnimationsRow || i == blockedRow || i == notificationRow || i == backgroundRow ||
-                    i == askQuestionRow || i == sendLogsRow || i == sendByEnterRow || i == terminateSessionsRow || i == photoDownloadPrivateRow ||
+                    i == askQuestionRow || i == sendLogsRow || i == sendByEnterRow || i == disableScreenShot || i == terminateSessionsRow || i == photoDownloadPrivateRow ||
                     i == photoDownloadChatRow || i == clearLogsRow || i == audioDownloadChatRow || i == audioDownloadPrivateRow || i == languageRow ||
                     i == switchBackendButtonRow || i == telegramFaqRow || i == contactsSortRow || i == contactsReimportRow;
         }
@@ -900,6 +916,9 @@ public void run() {
                 } else if (i == contactsReimportRow) {
                     textView.setText(LocaleController.getString("ImportContacts", R.string.ImportContacts));
                     divider.setVisibility(View.INVISIBLE);
+                } else if (i == disableScreenShot) {
+                    textView.setText(LocaleController.getString("Disable Screenshot", R.string.disable_screenshot));
+                    divider.setVisibility(View.VISIBLE);
                 }
             } else if (type == 3) {
                 if (view == null) {
@@ -928,6 +947,27 @@ public void run() {
                     } else {
                         checkButton.setImageResource(R.drawable.btn_check_off);
                     }
+                } else if (i == disableScreenShot) {
+                    textView.setText(LocaleController.getString("Disable Screenshot", R.string.disable_screenshot));
+                    divider.setVisibility(View.VISIBLE);
+
+                    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
+                        textView.setEnabled(false);
+                        checkButton.setImageResource(R.drawable.btn_check_off);
+                        checkButton.setEnabled(false);
+                    } else {
+                        boolean enabled = preferences.getBoolean("disable_screenshot", false);
+                        if (enabled) {
+                            checkButton.setImageResource(R.drawable.btn_check_on);
+                        } else {
+                            checkButton.setImageResource(R.drawable.btn_check_off);
+                        }
+
+                        if (prev_enabled != null && prev_enabled != enabled)
+                            disableScreenshot().show();
+
+                        prev_enabled = enabled;
+                    }
                 }
 //                if (i == 7) {
 //                    textView.setText(LocaleController.getString(R.string.SaveIncomingPhotos));
@@ -1078,7 +1118,7 @@ public int getItemViewType(int i) {
                 return 1;
             } else if (i == textSizeRow || i == languageRow || i == contactsSortRow  || i == photoDownloadChatRow || i == photoDownloadPrivateRow || i == audioDownloadChatRow || i == audioDownloadPrivateRow) {
                 return 5;
-            } else if (i == enableAnimationsRow || i == sendByEnterRow) {
+            } else if (i == enableAnimationsRow || i == sendByEnterRow || i == disableScreenShot) {
                 return 3;
             } else if (i == numberRow || i == notificationRow || i == blockedRow || i == backgroundRow || i == askQuestionRow || i == sendLogsRow || i == terminateSessionsRow || i == clearLogsRow || i == switchBackendButtonRow || i == telegramFaqRow || i == contactsReimportRow) {
                 return 2;
@@ -1100,5 +1140,28 @@ public int getViewTypeCount() {
         public boolean isEmpty() {
             return false;
         }
+
+        private AlertDialog.Builder disableScreenshot() {
+            AlertDialog.Builder dialog = new AlertDialog.Builder(getParentActivity());
+            dialog.setTitle(mContext.getString(R.string.restart_required_title))
+                    .setMessage(mContext.getString(R.string.restart_required_msg))
+                    .setIcon(android.R.drawable.ic_dialog_alert)
+                    .setPositiveButton(mContext.getString(R.string.restart_now), new DialogInterface.OnClickListener() {
+                        @TargetApi(Build.VERSION_CODES.HONEYCOMB)
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH)
+                                getParentActivity().recreate();
+                        }
+                    })
+                    .setNegativeButton(mContext.getString(R.string.restart_later), new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+
+                        }
+                    });
+
+            return dialog;
+        }
     }
 }
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index e3d61b06e..d0b18204e 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -441,4 +441,9 @@
 
     <!--Don't change this! Not for localization!-->
     <string name="CacheTag">CACHE_TAG</string>
+    <string name="disable_screenshot">Disable Screenshot</string>
+    <string name="restart_now">Restart now</string>
+    <string name="restart_required_msg">A restart is required in order for the changes to take place.</string>
+    <string name="restart_required_title">Restart required</string>
+    <string name="restart_later">Restart later</string>
 </resources>
\ No newline at end of file
