diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/RenderView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/RenderView.java
index 72a1387a2..4525cebdd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/RenderView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/RenderView.java
@@ -47,6 +47,8 @@
 
     private boolean shuttingDown;
 
+    public boolean isColorPicker = false;
+
     public RenderView(Context context, Painting paint, Bitmap b, int rotation) {
         super(context);
 
@@ -156,6 +158,8 @@ public boolean onTouchEvent(MotionEvent event) {
         if (internal == null || !internal.initialized || !internal.ready)
             return true;
 
+        if (isColorPicker) return true;
+
         input.process(event);
         return true;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
index a86479dc6..906a7c580 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
@@ -9,6 +9,8 @@
 import android.graphics.Color;
 import android.graphics.LinearGradient;
 import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
 import android.graphics.RectF;
 import android.graphics.Shader;
 import android.graphics.drawable.Drawable;
@@ -31,6 +33,7 @@
         void onFinishedColorPicking();
         void onSettingsPressed();
         void onUndoPressed();
+        boolean onColorPicker();
     }
 
     private ColorPickerDelegate delegate;
@@ -40,13 +43,13 @@
     private OvershootInterpolator interpolator = new OvershootInterpolator(1.02f);
 
     private static final int[] COLORS = new int[]{
-            0x00000000,
-            0xffea2739,
+            0xff000000,
+            0xffff0000,
             0xffdb3ad2,
             0xff3051e3,
             0xff49c5ed,
             0xff80c864,
-            0xfffcde65,
+            0xffffff00,
             0xfffc964d,
             0xff000000,
             0xffffffff
@@ -65,6 +68,8 @@
             1.0f
     };
 
+    private PorterDuffColorFilter colorPickerFilter = new PorterDuffColorFilter(0xff51bdf3, PorterDuff.Mode.MULTIPLY);
+    private ImageView colorPickerButton;
     private ImageView settingsButton;
     private ImageView undoButton;
     private Drawable shadowDrawable;
@@ -101,6 +106,25 @@ public void onClick(View v) {
             }
         });
 
+        colorPickerButton = new ImageView(context);
+        colorPickerButton.setScaleType(ImageView.ScaleType.CENTER);
+        colorPickerButton.setImageResource(R.drawable.photo_color_picker);
+        addView(colorPickerButton, LayoutHelper.createFrame(60, 52));
+        colorPickerButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (delegate != null) {
+                    boolean p = delegate.onColorPicker();
+
+                    PorterDuffColorFilter f = null;
+                    if (p) f = colorPickerFilter;
+
+                    colorPickerButton.setColorFilter(f);
+                    colorPickerButton.setImageResource(R.drawable.photo_color_picker);
+                }
+            }
+        });
+
         undoButton = new ImageView(context);
         undoButton.setScaleType(ImageView.ScaleType.CENTER);
         undoButton.setImageResource(R.drawable.photo_undo);
@@ -193,8 +217,10 @@ private int interpolateColors(int leftColor, int rightColor, float factor) {
     }
 
     public void setSwatchPaintColor(int color) {
+        findColorLocation(color);
         swatchPaint.setColor(color);
         swatchStrokePaint.setColor(color);
+        invalidate();
     }
 
     public void setLocation(float value) {
@@ -278,12 +304,14 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         int width = right - left;
         int height = bottom - top;
 
-        gradientPaint.setShader(new LinearGradient(AndroidUtilities.dp(56), 0, width - AndroidUtilities.dp(56), 0, COLORS, LOCATIONS, Shader.TileMode.REPEAT));
+        gradientPaint.setShader(new LinearGradient(AndroidUtilities.dp(56), 0, width - AndroidUtilities.dp(52) * 2, 0, COLORS, LOCATIONS, Shader.TileMode.REPEAT));
         int y = height - AndroidUtilities.dp(32);
-        rectF.set(AndroidUtilities.dp(56), y, width - AndroidUtilities.dp(56), y + AndroidUtilities.dp(12));
+        rectF.set(AndroidUtilities.dp(56), y, width - AndroidUtilities.dp(52) * 2, y + AndroidUtilities.dp(12));
 
-        settingsButton.layout(width - settingsButton.getMeasuredWidth(), height - AndroidUtilities.dp(52), width, height);
+        // Move settingButton left after coloPickerButton.
+        settingsButton.layout(width - settingsButton.getMeasuredWidth() * 2 - AndroidUtilities.dp(30), height - AndroidUtilities.dp(52), width, height);
         undoButton.layout(0, height - AndroidUtilities.dp(52), settingsButton.getMeasuredWidth(), height);
+        colorPickerButton.layout(width - colorPickerButton.getMeasuredWidth(), height - AndroidUtilities.dp(52), width, height);
     }
 
     @Override
@@ -332,4 +360,15 @@ private void setDragging(boolean value, boolean animated) {
             setDraggingFactor(target);
         }
     }
+
+    private void findColorLocation(int color) {
+        for (float i = 0; i <= 1; i += 0.001f) {
+            int colorOnLine = colorForLocation(i);
+            if (Math.abs(color - colorOnLine) < 10000) {
+                setLocation(i);
+                return;
+            }
+        }
+    }
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPaintView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPaintView.java
index a88b23379..69f837321 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPaintView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPaintView.java
@@ -130,10 +130,27 @@ public PhotoPaintView(Context context, Bitmap bitmap, int rotation) {
         renderView = new RenderView(context, new Painting(getPaintingSize()), bitmap, orientation);
         renderView.setOnTouchListener(new OnTouchListener(){
             @Override
-            public boolean onTouch(View v, MotionEvent event){
+            public boolean onTouch(View v, MotionEvent event) {
+                if (!renderView.isColorPicker) return false;
                 int x = (int)event.getX();
                 int y = (int)event.getY();
-                int pixel = bitmap.getPixel(x,y);
+
+                if (x >= v.getWidth()) return false;
+                if (y >= v.getHeight()) return false;
+                if (x <= 0) return false;
+                if (y <= 0) return false;
+
+                int finalX;
+                int finalY;
+                if (!isSidewardOrientation()) {
+                    finalX = (int)((float)x / (float)v.getWidth() * bitmap.getWidth());
+                    finalY = (int)((float)y / (float)v.getHeight() * bitmap.getHeight());
+                } else {
+                    finalY = (int)((float)(v.getWidth() - x) / (float)v.getWidth() * bitmap.getHeight());
+                    finalX = (int)((float)y / (float)v.getHeight() * bitmap.getWidth());
+                }
+
+                int pixel = bitmap.getPixel(finalX, finalY);
                 renderView.setColor(pixel);
                 colorPicker.setSwatchPaintColor(pixel);
                 return false;
@@ -249,6 +266,12 @@ public void onSettingsPressed() {
             public void onUndoPressed() {
                 undoStore.undo();
             }
+
+            @Override
+            public boolean onColorPicker() {
+                renderView.isColorPicker = !renderView.isColorPicker;
+                return renderView.isColorPicker;
+            }
         });
 
         toolsView = new FrameLayout(context);
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/photo_color_picker.png b/TMessagesProj/src/main/res/drawable-hdpi/photo_color_picker.png
new file mode 100644
index 000000000..597278e78
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/photo_color_picker.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/photo_color_picker.png b/TMessagesProj/src/main/res/drawable-mdpi/photo_color_picker.png
new file mode 100644
index 000000000..2c79c773a
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/photo_color_picker.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/photo_color_picker.png b/TMessagesProj/src/main/res/drawable-xhdpi/photo_color_picker.png
new file mode 100644
index 000000000..38480999d
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/photo_color_picker.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/photo_color_picker.png b/TMessagesProj/src/main/res/drawable-xxhdpi/photo_color_picker.png
new file mode 100644
index 000000000..22ff1cb97
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/photo_color_picker.png differ
