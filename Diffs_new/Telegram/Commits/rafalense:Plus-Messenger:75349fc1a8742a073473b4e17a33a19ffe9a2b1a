diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index b15fb74e5..ad3b7a5ee 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -1,4 +1,3 @@
-
 apply plugin: 'com.android.application'
 
 repositories {
@@ -82,7 +81,7 @@ android {
         applicationId "org.telegram.plus"
         minSdkVersion 8
         targetSdkVersion 22
-        versionCode 576
-        versionName "3.0.1.5"
+        versionCode 583
+        versionName "3.1.1.3"
     }
 }
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 4235c45a0..a2d46e6e7 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -161,8 +161,20 @@
 
         <service android:name="org.telegram.android.NotificationsService" android:enabled="true"/>
         <service android:name="org.telegram.android.NotificationRepeat" android:exported="false"/>
-        <service android:name="org.telegram.android.NotificationDelay" android:exported="false"/>
         <service android:name="org.telegram.android.VideoEncodingService" android:enabled="true"/>
+        <service android:name="org.telegram.android.MusicPlayerService" android:exported="true" android:enabled="true"/>
+
+        <receiver android:name="org.telegram.android.MusicPlayerReceiver" >
+            <intent-filter>
+                <action android:name="org.telegram.android.musicplayer.close" />
+                <action android:name="org.telegram.android.musicplayer.pause" />
+                <action android:name="org.telegram.android.musicplayer.next" />
+                <action android:name="org.telegram.android.musicplayer.play" />
+                <action android:name="org.telegram.android.musicplayer.previous" />
+                <action android:name="android.intent.action.MEDIA_BUTTON" />
+                <action android:name="android.media.AUDIO_BECOMING_NOISY" />
+            </intent-filter>
+        </receiver>
 
         <receiver android:name="org.telegram.android.AppStartReceiver" android:enabled="true">
             <intent-filter>
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java
index 6e78412dc..92dc7dea2 100644
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java
@@ -30,7 +30,7 @@ public int getStatementHandle() {
 	public SQLitePreparedStatement(SQLiteDatabase db, String sql, boolean finalize) throws SQLiteException {
 		finalizeAfterQuery = finalize;
 		sqliteStatementHandle = prepare(db.getSQLiteHandle(), sql);
-        //if (BuildVars.DEBUG_VERSION) {
+        /*//if (BuildVars.DEBUG_VERSION) {
         if (BuildConfig.DEBUG) {
             if (hashMap == null) {
                 hashMap = new HashMap<>();
@@ -39,7 +39,7 @@ public SQLitePreparedStatement(SQLiteDatabase db, String sql, boolean finalize)
             for (HashMap.Entry<SQLitePreparedStatement, String> entry : hashMap.entrySet()) {
                 FileLog.d("tmessages", "exist entry = " + entry.getValue());
             }
-        }
+        }*/
 	}
 
 
@@ -102,10 +102,10 @@ public void finalizeQuery() {
             return;
         }
 		try {
-            //if (BuildVars.DEBUG_VERSION) {
+            /*//if (BuildVars.DEBUG_VERSION) {
             if (BuildConfig.DEBUG) {
                 hashMap.remove(this);
-            }
+            }*/
 			isFinalized = true;
 			finalize(sqliteStatementHandle);
 		} catch (SQLiteException e) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java
index 17f51edbf..b6451e5c4 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/AndroidUtilities.java
@@ -54,18 +54,18 @@
 import net.hockeyapp.android.CrashManagerListener;
 import net.hockeyapp.android.UpdateManager;
 
-import org.telegram.android.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.android.AnimationCompat.AnimatorSetProxy;
-import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.android.AnimationCompat.ViewProxy;
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.UserConfig;
+import org.telegram.android.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.android.AnimationCompat.AnimatorSetProxy;
+import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.android.AnimationCompat.ViewProxy;
 import org.telegram.ui.Components.ForegroundDetector;
 import org.telegram.ui.Components.NumberPicker;
 import org.telegram.ui.Components.TypefaceSpan;
@@ -558,16 +558,6 @@ public static int getViewInset(View view) {
         return 0;
     }
 
-    public static int getCurrentActionBarHeight() {
-        if (isTablet()) {
-            return dp(64);
-        } else if (ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
-            return dp(48);
-        } else {
-            return dp(56);
-        }
-    }
-
     public static Point getRealScreenSize() {
         Point size = new Point();
         try {
@@ -965,8 +955,8 @@ public static CharSequence generateSearchName(String name, String name2, String
                 builder.append(" ");
             }
             query = query.trim();
-            builder.append(AndroidUtilities.replaceTags("<c" + hexDarkColor + ">" + query + "</c>"));
-            //builder.append(AndroidUtilities.replaceTags("<c#ff4d83b3>" + query + "</c>"));
+          //builder.append(AndroidUtilities.replaceTags("<c#ff4d83b3>" + query + "</c>"));
+            builder.append(AndroidUtilities.replaceTags("<c" + hexDarkColor + ">" + query + "</c>"));      
 
             lastIndex = end;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/AnimationCompat/AnimatorSetProxy.java b/TMessagesProj/src/main/java/org/telegram/android/AnimationCompat/AnimatorSetProxy.java
index be5993931..c41b14bfa 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/AnimationCompat/AnimatorSetProxy.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/AnimationCompat/AnimatorSetProxy.java
@@ -66,13 +66,13 @@ public void playTogether(Object... items) {
 
     public void playTogether(ArrayList<Object> items) {
         if (View10.NEED_PROXY) {
-            ArrayList<Animator10> animators = new ArrayList<Animator10>();
+            ArrayList<Animator10> animators = new ArrayList<>();
             for (Object obj : items) {
                 animators.add((Animator10)obj);
             }
             ((AnimatorSet10) animatorSet).playTogether(animators);
         } else {
-            ArrayList<Animator> animators = new ArrayList<Animator>();
+            ArrayList<Animator> animators = new ArrayList<>();
             for (Object obj : items) {
                 animators.add((Animator)obj);
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
index 00bc64051..449dfcef4 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
@@ -20,10 +20,10 @@
 import android.net.Uri;
 import android.provider.BaseColumns;
 import android.provider.ContactsContract;
+import android.text.TextUtils;
 import android.util.SparseArray;
 
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
@@ -33,6 +33,7 @@
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.messenger.ApplicationLoader;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -331,7 +332,7 @@ public void run() {
             ContentResolver cr = ApplicationLoader.applicationContext.getContentResolver();
 
             HashMap<String, Contact> shortContacts = new HashMap<>();
-            StringBuilder ids = new StringBuilder();
+            ArrayList<Integer> idsArr = new ArrayList<>();
             Cursor pCur = cr.query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, projectionPhones, null, null, null);
             if (pCur != null) {
                 if (pCur.getCount() > 0) {
@@ -356,10 +357,9 @@ public void run() {
                         }
 
                         Integer id = pCur.getInt(0);
-                        if (ids.length() != 0) {
-                            ids.append(",");
+                        if (!idsArr.contains(id)) {
+                            idsArr.add(id);
                         }
-                        ids.append(id);
 
                         int type = pCur.getInt(2);
                         Contact contact = contactsMap.get(id);
@@ -393,8 +393,9 @@ public void run() {
                 }
                 pCur.close();
             }
+            String ids = TextUtils.join(",", idsArr);
 
-            pCur = cr.query(ContactsContract.Data.CONTENT_URI, projectionNames, ContactsContract.CommonDataKinds.StructuredName.CONTACT_ID + " IN (" + ids.toString() + ") AND " + ContactsContract.Data.MIMETYPE + " = '" + ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE + "'", null, null);
+            pCur = cr.query(ContactsContract.Data.CONTENT_URI, projectionNames, ContactsContract.CommonDataKinds.StructuredName.CONTACT_ID + " IN (" + ids + ") AND " + ContactsContract.Data.MIMETYPE + " = '" + ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE + "'", null, null);
             if (pCur != null && pCur.getCount() > 0) {
                 while (pCur.moveToNext()) {
                     int id = pCur.getInt(0);
@@ -475,6 +476,23 @@ public void run() {
             FileLog.e("tmessages", e);
             contactsMap.clear();
         }
+        if (BuildVars.DEBUG_VERSION) {
+            for (HashMap.Entry<Integer, Contact> entry : contactsMap.entrySet()) {
+                Contact contact = entry.getValue();
+                FileLog.e("tmessages", "contact = " + contact.first_name + " " + contact.last_name);
+                if (contact.first_name.length() == 0 && contact.last_name.length() == 0 && contact.phones.size() > 0) {
+                    FileLog.e("tmessages", "warning, empty name for contact = " + contact.id);
+                }
+                FileLog.e("tmessages", "phones:");
+                for (String s : contact.phones) {
+                    FileLog.e("tmessages", "phone = " + s);
+                }
+                FileLog.e("tmessages", "short phones:");
+                for (String s : contact.shortPhones) {
+                    FileLog.e("tmessages", "short phone = " + s);
+                }
+            }
+        }
         return contactsMap;
     }
 
@@ -570,7 +588,7 @@ public void run() {
                             }
                         }
 
-                        boolean nameChanged = existing != null && (!existing.first_name.equals(value.first_name) || !existing.last_name.equals(value.last_name));
+                        boolean nameChanged = existing != null && (value.first_name.length() != 0 && !existing.first_name.equals(value.first_name) || value.last_name != null && !existing.last_name.equals(value.last_name));
                         if (existing == null || nameChanged) {
                             for (int a = 0; a < value.phones.size(); a++) {
                                 String sphone = value.shortPhones.get(a);
@@ -608,8 +626,12 @@ public void run() {
                                 int index = existing.shortPhones.indexOf(sphone);
                                 if (index == -1) {
                                     if (request) {
-                                        if (contactsByPhone.containsKey(sphone)) {
-                                            continue;
+                                        TLRPC.TL_contact contact = contactsByPhone.get(sphone);
+                                        if (contact != null) {
+                                            TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
+                                            if (user == null || user.first_name != null && user.first_name.length() != 0 || user.last_name != null && user.last_name.length() != 0) {
+                                                continue;
+                                            }
                                         }
 
                                         TLRPC.TL_inputPhoneContact imp = new TLRPC.TL_inputPhoneContact();
@@ -703,8 +725,12 @@ public void run() {
                         int id = pair.getKey();
                         for (int a = 0; a < value.phones.size(); a++) {
                             String phone = value.shortPhones.get(a);
-                            if (contactsByPhone.containsKey(phone)) {
-                                continue;
+                            TLRPC.TL_contact contact = contactsByPhone.get(phone);
+                            if (contact != null) {
+                                TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
+                                if (user == null || user.first_name != null && user.first_name.length() != 0 || user.last_name != null && user.last_name.length() != 0) {
+                                    continue;
+                                }
                             }
                             TLRPC.TL_inputPhoneContact imp = new TLRPC.TL_inputPhoneContact();
                             imp.client_id = id;
@@ -722,9 +748,9 @@ public void run() {
                     if (!toImport.isEmpty()) {
                         if (BuildVars.DEBUG_VERSION) {
                             FileLog.e("tmessages", "start import contacts");
-//                            for (TLRPC.TL_inputPhoneContact contact : toImport) {
-//                                FileLog.e("tmessages", "add contact " + contact.first_name + " " + contact.last_name + " " + contact.phone);
-//                            }
+                            for (TLRPC.TL_inputPhoneContact contact : toImport) {
+                                FileLog.e("tmessages", "add contact " + contact.first_name + " " + contact.last_name + " " + contact.phone);
+                            }
                         }
                         final int count = (int)Math.ceil(toImport.size() / 500.0f);
                         for (int a = 0; a < count; a++) {
@@ -744,9 +770,9 @@ public void run(TLObject response, TLRPC.TL_error error) {
                                         }
                                         TLRPC.TL_contacts_importedContacts res = (TLRPC.TL_contacts_importedContacts)response;
                                         if (BuildVars.DEBUG_VERSION) {
-//                                            for (TLRPC.User user : res.users) {
-//                                                FileLog.e("tmessages", "received user " + user.first_name + " " + user.last_name + " " + user.phone);
-//                                            }
+                                            for (TLRPC.User user : res.users) {
+                                                FileLog.e("tmessages", "received user " + user.first_name + " " + user.last_name + " " + user.phone);
+                                            }
                                         }
                                         MessagesStorage.getInstance().putUsersAndChats(res.users, null, true, true);
                                         ArrayList<TLRPC.TL_contact> cArr = new ArrayList<>();
@@ -904,9 +930,9 @@ public void run() {
                     if (user != null) {
                         usersDict.put(user.id, user);
 
-//                        if (BuildVars.DEBUG_VERSION) {
-//                            FileLog.e("tmessages", "loaded user contact " + user.first_name + " " + user.last_name + " " + user.phone);
-//                        }
+                        if (BuildVars.DEBUG_VERSION) {
+                            FileLog.e("tmessages", "loaded user contact " + user.first_name + " " + user.last_name + " " + user.phone);
+                        }
                     }
                 }
 
@@ -1525,9 +1551,9 @@ public void addContact(TLRPC.User user) {
         contactsParams.add(c);
         req.contacts = contactsParams;
         req.replace = false;
-//        if (BuildVars.DEBUG_VERSION) {
-//            FileLog.e("tmessages", "add contact " + user.first_name + " " + user.last_name + " " + user.phone);
-//        }
+        if (BuildVars.DEBUG_VERSION) {
+            FileLog.e("tmessages", "add contact " + user.first_name + " " + user.last_name + " " + user.phone);
+        }
         ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
             @Override
             public void run(TLObject response, TLRPC.TL_error error) {
@@ -1537,11 +1563,11 @@ public void run(TLObject response, TLRPC.TL_error error) {
                 final TLRPC.TL_contacts_importedContacts res = (TLRPC.TL_contacts_importedContacts)response;
                 MessagesStorage.getInstance().putUsersAndChats(res.users, null, true, true);
 
-//                if (BuildVars.DEBUG_VERSION) {
-//                    for (TLRPC.User user : res.users) {
-//                        FileLog.e("tmessages", "received user " + user.first_name + " " + user.last_name + " " + user.phone);
-//                    }
-//                }
+                if (BuildVars.DEBUG_VERSION) {
+                    for (TLRPC.User user : res.users) {
+                        FileLog.e("tmessages", "received user " + user.first_name + " " + user.last_name + " " + user.phone);
+                    }
+                }
 
                 for (final TLRPC.User u : res.users) {
                     Utilities.phoneBookQueue.postRunnable(new Runnable() {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/Emoji.java b/TMessagesProj/src/main/java/org/telegram/android/Emoji.java
index 01df41ab2..7ef2edc86 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/Emoji.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/Emoji.java
@@ -8,6 +8,11 @@
 
 package org.telegram.android;
 
+import java.io.File;
+import java.io.InputStream;
+import java.util.HashMap;
+import java.util.Locale;
+
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
@@ -23,14 +28,9 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.Utilities;
-
-import java.io.File;
-import java.io.InputStream;
-import java.util.HashMap;
-import java.util.Locale;
+import org.telegram.messenger.ApplicationLoader;
 
 public class Emoji {
 	private static HashMap<Long, DrawableInfo> rects = new HashMap<>();
@@ -64,7 +64,8 @@
             new long[]
                     {},
             new long[]//189
-                    {0x00000000D83DDE04L, 0x00000000D83DDE03L, 0x00000000D83DDE00L, 0x00000000D83DDE0AL, 0x000000000000263AL, 0x00000000D83DDE09L, 0x00000000D83DDE0DL,
+                    {
+                            0x00000000D83DDE04L, 0x00000000D83DDE03L, 0x00000000D83DDE00L, 0x00000000D83DDE0AL, 0x000000000000263AL, 0x00000000D83DDE09L, 0x00000000D83DDE0DL,
                     0x00000000D83DDE18L, 0x00000000D83DDE1AL, 0x00000000D83DDE17L, 0x00000000D83DDE19L, 0x00000000D83DDE1CL, 0x00000000D83DDE1DL, 0x00000000D83DDE1BL,
                     0x00000000D83DDE33L, 0x00000000D83DDE01L, 0x00000000D83DDE14L, 0x00000000D83DDE0CL, 0x00000000D83DDE12L, 0x00000000D83DDE1EL, 0x00000000D83DDE23L,
                     0x00000000D83DDE22L, 0x00000000D83DDE02L, 0x00000000D83DDE2DL, 0x00000000D83DDE2AL, 0x00000000D83DDE25L, 0x00000000D83DDE30L, 0x00000000D83DDE05L,
@@ -92,7 +93,8 @@
                     0x00000000D83DDC93L, 0x00000000D83DDC95L, 0x00000000D83DDC96L, 0x00000000D83DDC9EL, 0x00000000D83DDC98L, 0x00000000D83DDC8CL, 0x00000000D83DDC8BL,
                     0x00000000D83DDC8DL, 0x00000000D83DDC8EL, 0x00000000D83DDC64L, 0x00000000D83DDC65L, 0x00000000D83DDCACL, 0x00000000D83DDC63L, 0x00000000D83DDCADL},
             new long[]//116
-                    {0x00000000D83DDC36L, 0x00000000D83DDC3AL, 0x00000000D83DDC31L, 0x00000000D83DDC2DL, 0x00000000D83DDC39L, 0x00000000D83DDC30L, 0x00000000D83DDC38L, 0x00000000D83DDC2FL,
+                    {
+                            0x00000000D83DDC36L, 0x00000000D83DDC3AL, 0x00000000D83DDC31L, 0x00000000D83DDC2DL, 0x00000000D83DDC39L, 0x00000000D83DDC30L, 0x00000000D83DDC38L, 0x00000000D83DDC2FL,
                     0x00000000D83DDC28L, 0x00000000D83DDC3BL, 0x00000000D83DDC37L, 0x00000000D83DDC3DL, 0x00000000D83DDC2EL, 0x00000000D83DDC17L, 0x00000000D83DDC35L,
                     0x00000000D83DDC12L, 0x00000000D83DDC34L, 0x00000000D83DDC11L, 0x00000000D83DDC18L, 0x00000000D83DDC3CL, 0x00000000D83DDC27L, 0x00000000D83DDC26L,
                     0x00000000D83DDC24L, 0x00000000D83DDC25L, 0x00000000D83DDC23L, 0x00000000D83DDC14L, 0x00000000D83DDC0DL, 0x00000000D83DDC22L, 0x00000000D83DDC1BL,
@@ -110,7 +112,8 @@
                     0x00000000000026C5L, 0x0000000000002601L, 0x00000000000026A1L, 0x0000000000002614L, 0x0000000000002744L, 0x00000000000026C4L, 0x00000000D83CDF00L,
                     0x00000000D83CDF01L, 0x00000000D83CDF08L, 0x00000000D83CDF0AL},
             new long[]//230
-                    {0x00000000D83CDF8DL, 0x00000000D83DDC9DL, 0x00000000D83CDF8EL, 0x00000000D83CDF92L, 0x00000000D83CDF93L, 0x00000000D83CDF8FL, 0x00000000D83CDF86L, 0x00000000D83CDF87L,
+                    {
+                            0x00000000D83CDF8DL, 0x00000000D83DDC9DL, 0x00000000D83CDF8EL, 0x00000000D83CDF92L, 0x00000000D83CDF93L, 0x00000000D83CDF8FL, 0x00000000D83CDF86L, 0x00000000D83CDF87L,
                     0x00000000D83CDF90L, 0x00000000D83CDF91L, 0x00000000D83CDF83L, 0x00000000D83DDC7BL, 0x00000000D83CDF85L, 0x00000000D83CDF84L, 0x00000000D83CDF81L,
                     0x00000000D83CDF8BL, 0x00000000D83CDF89L, 0x00000000D83CDF8AL, 0x00000000D83CDF88L, 0x00000000D83CDF8CL, 0x00000000D83DDD2EL, 0x00000000D83CDFA5L,
                     0x00000000D83DDCF7L, 0x00000000D83DDCF9L, 0x00000000D83DDCFCL, 0x00000000D83DDCBFL, 0x00000000D83DDCC0L, 0x00000000D83DDCBDL, 0x00000000D83DDCBEL,
@@ -144,7 +147,8 @@
                     0x00000000D83CDF49L, 0x00000000D83CDF53L, 0x00000000D83CDF51L, 0x00000000D83CDF48L, 0x00000000D83CDF4CL, 0x00000000D83CDF50L, 0x00000000D83CDF4DL,
                     0x00000000D83CDF60L, 0x00000000D83CDF46L, 0x00000000D83CDF45L, 0x00000000D83CDF3DL},
             new long[]//101
-                    {0x00000000D83CDFE0L, 0x00000000D83CDFE1L, 0x00000000D83CDFEBL, 0x00000000D83CDFE2L, 0x00000000D83CDFE3L, 0x00000000D83CDFE5L, 0x00000000D83CDFE6L, 0x00000000D83CDFEAL,
+                    {
+                            0x00000000D83CDFE0L, 0x00000000D83CDFE1L, 0x00000000D83CDFEBL, 0x00000000D83CDFE2L, 0x00000000D83CDFE3L, 0x00000000D83CDFE5L, 0x00000000D83CDFE6L, 0x00000000D83CDFEAL,
                     0x00000000D83CDFE9L, 0x00000000D83CDFE8L, 0x00000000D83DDC92L, 0x00000000000026EAL, 0x00000000D83CDFECL, 0x00000000D83CDFE4L, 0x00000000D83CDF07L,
                     0x00000000D83CDF06L, 0x00000000D83CDFEFL, 0x00000000D83CDFF0L, 0x00000000000026FAL, 0x00000000D83CDFEDL, 0x00000000D83DDDFCL, 0x00000000D83DDDFEL,
                     0x00000000D83DDDFBL, 0x00000000D83CDF04L, 0x00000000D83CDF05L, 0x00000000D83CDF03L, 0x00000000D83DDDFDL, 0x00000000D83CDF09L, 0x00000000D83CDFA0L,
@@ -160,7 +164,8 @@
                     0xD83CDDF0D83CDDF7L, 0xD83CDDE9D83CDDEAL, 0xD83CDDE8D83CDDF3L, 0xD83CDDFAD83CDDF8L, 0xD83CDDEBD83CDDF7L, 0xD83CDDEAD83CDDF8L, 0xD83CDDEED83CDDF9L,
                     0xD83CDDF7D83CDDFAL, 0xD83CDDECD83CDDE7L},
             new long[]//209
-                    {0x00000000003120E3L, 0x00000000003220E3L, 0x00000000003320E3L, 0x00000000003420E3L, 0x00000000003520E3L, 0x00000000003620E3L, 0x00000000003720E3L,
+                    {
+                            0x00000000003120E3L, 0x00000000003220E3L, 0x00000000003320E3L, 0x00000000003420E3L, 0x00000000003520E3L, 0x00000000003620E3L, 0x00000000003720E3L,
                     0x00000000003820E3L, 0x00000000003920E3L, 0x00000000003020E3L, 0x00000000D83DDD1FL, 0x00000000D83DDD22L, 0x00000000002320E3L, 0x00000000D83DDD23L,
                     0x0000000000002B06L, 0x0000000000002B07L, 0x0000000000002B05L, 0x00000000000027A1L, 0x00000000D83DDD20L, 0x00000000D83DDD21L, 0x00000000D83DDD24L,
                     0x0000000000002197L, 0x0000000000002196L, 0x0000000000002198L, 0x0000000000002199L, 0x0000000000002194L, 0x0000000000002195L, 0x00000000D83DDD04L,
@@ -213,7 +218,7 @@
 		for (int j = 1; j < data.length; j++) {
 			for (int i = 0; i < data[j].length; i++) {
                 Rect rect = new Rect((i % cols[j - 1]) * emojiFullSize, (i / cols[j - 1]) * emojiFullSize, (i % cols[j - 1] + 1) * emojiFullSize, (i / cols[j - 1] + 1) * emojiFullSize);
-				rects.put(data[j][i], new DrawableInfo(rect, (byte)(j - 1)));
+                rects.put(data[j][i], new DrawableInfo(rect, (byte) (j - 1)));
 			}
 		}
 		placeholderPaint = new Paint();
@@ -290,7 +295,7 @@ public void run() {
                     NotificationCenter.getInstance().postNotificationName(NotificationCenter.emojiDidLoaded);
                 }
             });
-		} catch(Throwable x) {
+        } catch (Throwable x) {
             FileLog.e("tmessages", "Error loading emoji", x);
         }
 	}
@@ -310,7 +315,7 @@ public void run() {
 	
 	public static void invalidateAll(View view) {
 		if (view instanceof ViewGroup) {
-			ViewGroup g = (ViewGroup)view;
+            ViewGroup g = (ViewGroup) view;
 			for (int i = 0; i < g.getChildCount(); i++) {
 				invalidateAll(g.getChildAt(i));
 			}
@@ -425,15 +430,17 @@ private static boolean isNextCharIsColor(CharSequence cs, int i) {
         return value == 0xd83cdffb || value == 0xd83cdffc || value == 0xd83cdffd || value == 0xd83cdffe || value == 0xd83cdfff;
     }
 
-    public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fontMetrics, int size) {
+    public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fontMetrics, int size, boolean createNew) {
         if (cs == null || cs.length() == 0) {
             return cs;
         }
+        //SpannableStringLight.isFieldsAvailable();
+        //SpannableStringLight s = new SpannableStringLight(cs.toString());
         Spannable s;
-        if (cs instanceof Spannable) {
-            s = (Spannable)cs;
+        if (!createNew && cs instanceof Spannable) {
+            s = (Spannable) cs;
         } else {
-            s = Spannable.Factory.getInstance().newSpannable(cs);
+            s = Spannable.Factory.getInstance().newSpannable(cs.toString());
         }
         // If showAndroidEmoji is enabled don't replace anything
         if (android.os.Build.VERSION.SDK_INT >= 19 && ApplicationLoader.SHOW_ANDROID_EMOJI) {
@@ -441,6 +448,8 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
         }
         long buf = 0;
         int emojiCount = 0;
+        //s.setSpansCount(emojiCount);
+
         try {
             for (int i = 0; i < cs.length(); i++) {
                 char c = cs.charAt(i);
@@ -454,12 +463,12 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
                     if (d != null) {
                         boolean nextIsSkinTone = isNextCharIsColor(cs, i);
                         EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
-                        emojiCount++;
                         if (c >= 0xDDE6 && c <= 0xDDFA) {
                             s.setSpan(span, i - 3, i + (nextIsSkinTone ? 3 : 1), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                         } else {
                             s.setSpan(span, i - 1, i + (nextIsSkinTone ? 3 : 1), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                         }
+                        emojiCount++;
                         if (nextIsSkinTone) {
                             i += 2;
                         }
@@ -476,8 +485,8 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
                             if (d != null) {
                                 boolean nextIsSkinTone = isNextCharIsColor(cs, i);
                                 EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
-                                emojiCount++;
                                 s.setSpan(span, i - 1, i + (nextIsSkinTone ? 3 : 1), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+                                emojiCount++;
                                 if (nextIsSkinTone) {
                                     i += 2;
                                 }
@@ -490,8 +499,8 @@ public static CharSequence replaceEmoji(CharSequence cs, Paint.FontMetricsInt fo
                     if (d != null) {
                         boolean nextIsSkinTone = isNextCharIsColor(cs, i);
                         EmojiSpan span = new EmojiSpan(d, DynamicDrawableSpan.ALIGN_BOTTOM, size, fontMetrics);
-                        emojiCount++;
                         s.setSpan(span, i, i + (nextIsSkinTone ? 3 : 1), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+                        emojiCount++;
                         if (nextIsSkinTone) {
                             i += 2;
                         }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
index 859d35598..a7b1f404f 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
@@ -1298,6 +1298,9 @@ public void run() {
     }
 
     public Float getFileProgress(String location) {
+        if (location == null) {
+            return null;
+        }
         return fileProgresses.get(location);
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
index e6564fc61..ebd9fc877 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
@@ -46,6 +46,8 @@
 import android.provider.MediaStore;
 import android.view.View;
 
+import org.telegram.android.audioinfo.AudioInfo;
+import org.telegram.android.query.SharedMediaQuery;
 import org.telegram.android.video.InputSurface;
 import org.telegram.android.video.MP4Builder;
 import org.telegram.android.video.Mp4Movie;
@@ -77,25 +79,37 @@
 
 public class MediaController implements NotificationCenter.NotificationCenterDelegate, SensorEventListener {
 
+	public static String iFilter = "*";
+
     private native int startRecord(String path);
+
     private native int writeFrame(ByteBuffer frame, int len);
+
     private native void stopRecord();
+
     private native int openOpusFile(String path);
+
     private native int seekOpusFile(float position);
+
     private native int isOpusFile(String path);
+
     private native void closeOpusFile();
+
     private native void readOpusFile(ByteBuffer buffer, int capacity, int[] args);
+
     private native long getTotalPcmDuration();
 
     public static int[] readArgs = new int[3];
 
-    public static String iFilter = "*";
-
     public interface FileDownloadProgressListener {
         void onFailedDownload(String fileName);
+
         void onSuccessDownload(String fileName);
+
         void onProgressDownload(String fileName, float progress);
+
         void onProgressUpload(String fileName, float progress, boolean isEncrypted);
+
         int getObserverTag();
     }
 
@@ -129,6 +143,16 @@ public AudioBuffer(int capacity) {
             MediaStore.Video.Media.DATE_TAKEN
     };
 
+    public static class AudioEntry {
+        public long id;
+        public String author;
+        public String title;
+        public String genre;
+        public int duration;
+        public String path;
+        public MessageObject messageObject;
+    }
+
     public static class AlbumEntry {
         public int bucketId;
         public String bucketName;
@@ -223,7 +247,10 @@ public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int or
     private HashMap<String, DownloadObject> downloadQueueKeys = new HashMap<>();
 
     private boolean saveToGallery = true;
+    private boolean shuffleMusic;
+    private int repeatMode;
 
+    private Runnable refreshGalleryRunnable;
     public static AlbumEntry allPhotosAlbumEntry;
 
     private HashMap<String, ArrayList<WeakReference<FileDownloadProgressListener>>> loadingFileObservers = new HashMap<>();
@@ -251,6 +278,11 @@ public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int or
     private final Object progressTimerSync = new Object();
     private boolean useFrontSpeaker;
     private int buffersWrited;
+    private ArrayList<MessageObject> playlist = new ArrayList<>();
+    private ArrayList<MessageObject> shuffledPlaylist = new ArrayList<>();
+    private int currentPlaylistNum;
+    private boolean downloadingCurrentMessage;
+    private AudioInfo audioInfo;
 
     private AudioRecord audioRecorder = null;
     private TLRPC.TL_audio recordingAudio = null;
@@ -273,6 +305,7 @@ public PhotoEntry(int bucketId, int imageId, long dateTaken, String path, int or
     private int recordBufferSize;
     private boolean sendAfterDone;
 
+    private Runnable recordStartRunnable;
     private DispatchQueue recordQueue;
     private DispatchQueue fileEncodingQueue;
     private Runnable recordRunnable = new Runnable() {
@@ -361,7 +394,7 @@ public void onChange(boolean selfChange) {
         }
     }
 
-    /*private class GalleryObserverInternal extends ContentObserver {
+    private class GalleryObserverInternal extends ContentObserver {
         public GalleryObserverInternal() {
             super(null);
         }
@@ -369,9 +402,13 @@ public GalleryObserverInternal() {
         @Override
         public void onChange(boolean selfChange) {
             super.onChange(selfChange);
-            AndroidUtilities.runOnUIThread(new Runnable() {
+            if (refreshGalleryRunnable != null) {
+                AndroidUtilities.cancelRunOnUIThread(refreshGalleryRunnable);
+            }
+            AndroidUtilities.runOnUIThread(refreshGalleryRunnable = new Runnable() {
                 @Override
                 public void run() {
+                    refreshGalleryRunnable = null;
                     loadGalleryPhotosAlbums(0);
                 }
             }, 2000);
@@ -386,14 +423,18 @@ public GalleryObserverExternal() {
         @Override
         public void onChange(boolean selfChange) {
             super.onChange(selfChange);
-            AndroidUtilities.runOnUIThread(new Runnable() {
+            if (refreshGalleryRunnable != null) {
+                AndroidUtilities.cancelRunOnUIThread(refreshGalleryRunnable);
+            }
+            AndroidUtilities.runOnUIThread(refreshGalleryRunnable = new Runnable() {
                 @Override
                 public void run() {
+                    refreshGalleryRunnable = null;
                     loadGalleryPhotosAlbums(0);
                 }
             }, 2000);
         }
-    }*/
+    }
 
     private ExternalObserver externalObserver = null;
     private InternalObserver internalObserver = null;
@@ -404,6 +445,7 @@ public void run() {
     private ArrayList<Long> lastSecretChatVisibleMessages = null;
     private int startObserverToken = 0;
     private StopMediaObserverRunnable stopMediaObserverRunnable = null;
+
     private final class StopMediaObserverRunnable implements Runnable {
         public int currentObserverToken = 0;
 
@@ -429,9 +471,11 @@ public void run() {
             }
         }
     }
+
     private String[] mediaProjections = null;
 
     private static volatile MediaController Instance = null;
+
     public static MediaController getInstance() {
         MediaController localInstance = Instance;
         if (localInstance == null) {
@@ -486,6 +530,8 @@ public MediaController() {
         wifiDownloadMask = preferences.getInt("wifiDownloadMask", AUTODOWNLOAD_MASK_PHOTO | AUTODOWNLOAD_MASK_AUDIO);
         roamingDownloadMask = preferences.getInt("roamingDownloadMask", 0);
         saveToGallery = preferences.getBoolean("save_gallery", false);
+        shuffleMusic = preferences.getBoolean("shuffleMusic", false);
+        repeatMode = preferences.getInt("repeatMode", 0);
 
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
@@ -493,6 +539,7 @@ public MediaController() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileUploadProgressChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.messagesDeleted);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.removeAllMessagesFromDialog);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.musicDidLoaded);
 
         BroadcastReceiver networkStateReceiver = new BroadcastReceiver() {
             @Override
@@ -508,7 +555,7 @@ public void onReceive(Context context, Intent intent) {
         }
 
         if (Build.VERSION.SDK_INT >= 16) {
-            mediaProjections = new String[] {
+            mediaProjections = new String[]{
                     MediaStore.Images.ImageColumns.DATA,
                     MediaStore.Images.ImageColumns.DISPLAY_NAME,
                     MediaStore.Images.ImageColumns.BUCKET_DISPLAY_NAME,
@@ -518,7 +565,7 @@ public void onReceive(Context context, Intent intent) {
                     MediaStore.Images.ImageColumns.HEIGHT
             };
         } else {
-            mediaProjections = new String[] {
+            mediaProjections = new String[]{
                     MediaStore.Images.ImageColumns.DATA,
                     MediaStore.Images.ImageColumns.DISPLAY_NAME,
                     MediaStore.Images.ImageColumns.BUCKET_DISPLAY_NAME,
@@ -527,7 +574,7 @@ public void onReceive(Context context, Intent intent) {
             };
         }
 
-        /*try {
+        try {
             ApplicationLoader.applicationContext.getContentResolver().registerContentObserver(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, false, new GalleryObserverExternal());
         } catch (Exception e) {
             FileLog.e("tmessages", e);
@@ -536,7 +583,7 @@ public void onReceive(Context context, Intent intent) {
             ApplicationLoader.applicationContext.getContentResolver().registerContentObserver(MediaStore.Images.Media.INTERNAL_CONTENT_URI, false, new GalleryObserverInternal());
         } catch (Exception e) {
             FileLog.e("tmessages", e);
-        }*/
+        }
     }
 
     private void startProgressTimer() {
@@ -608,12 +655,13 @@ private void stopProgressTimer() {
     }
 
     public void cleanup() {
-        clenupPlayer(false);
+        clenupPlayer(false, true);
         if (currentGifDrawable != null) {
             currentGifDrawable.recycle();
             currentGifDrawable = null;
         }
         currentMediaCell = null;
+        audioInfo = null;
         currentGifMessageObject = null;
         photoDownloadQueue.clear();
         audioDownloadQueue.clear();
@@ -621,6 +669,8 @@ public void cleanup() {
         videoDownloadQueue.clear();
         downloadQueueKeys.clear();
         videoConvertQueue.clear();
+        playlist.clear();
+        shuffledPlaylist.clear();
         typingTimes.clear();
         cancelVideoConvert(null);
     }
@@ -654,7 +704,7 @@ public void checkAutodownloadSettings() {
             }
         } else {
             for (DownloadObject downloadObject : photoDownloadQueue) {
-                FileLoader.getInstance().cancelLoadFile((TLRPC.PhotoSize)downloadObject.object);
+                FileLoader.getInstance().cancelLoadFile((TLRPC.PhotoSize) downloadObject.object);
             }
             photoDownloadQueue.clear();
         }
@@ -664,7 +714,7 @@ public void checkAutodownloadSettings() {
             }
         } else {
             for (DownloadObject downloadObject : audioDownloadQueue) {
-                FileLoader.getInstance().cancelLoadFile((TLRPC.Audio)downloadObject.object);
+                FileLoader.getInstance().cancelLoadFile((TLRPC.Audio) downloadObject.object);
             }
             audioDownloadQueue.clear();
         }
@@ -674,7 +724,7 @@ public void checkAutodownloadSettings() {
             }
         } else {
             for (DownloadObject downloadObject : documentDownloadQueue) {
-                FileLoader.getInstance().cancelLoadFile((TLRPC.Document)downloadObject.object);
+                FileLoader.getInstance().cancelLoadFile((TLRPC.Document) downloadObject.object);
             }
             documentDownloadQueue.clear();
         }
@@ -684,7 +734,7 @@ public void checkAutodownloadSettings() {
             }
         } else {
             for (DownloadObject downloadObject : videoDownloadQueue) {
-                FileLoader.getInstance().cancelLoadFile((TLRPC.Video)downloadObject.object);
+                FileLoader.getInstance().cancelLoadFile((TLRPC.Video) downloadObject.object);
             }
             videoDownloadQueue.clear();
         }
@@ -715,7 +765,7 @@ public boolean canDownloadMedia(int type) {
     private int getCurrentDownloadMask() {
         if (ConnectionsManager.isConnectedToWiFi()) {
             return wifiDownloadMask;
-        } else if(ConnectionsManager.isRoaming()) {
+        } else if (ConnectionsManager.isRoaming()) {
             return roamingDownloadMask;
         } else {
             return mobileDataDownloadMask;
@@ -744,13 +794,13 @@ protected void processDownloadObjects(int type, ArrayList<DownloadObject> object
 
             boolean added = true;
             if (downloadObject.object instanceof TLRPC.Audio) {
-                FileLoader.getInstance().loadFile((TLRPC.Audio)downloadObject.object, false);
+                FileLoader.getInstance().loadFile((TLRPC.Audio) downloadObject.object, false);
             } else if (downloadObject.object instanceof TLRPC.PhotoSize) {
-                FileLoader.getInstance().loadFile((TLRPC.PhotoSize)downloadObject.object, null, false);
+                FileLoader.getInstance().loadFile((TLRPC.PhotoSize) downloadObject.object, null, false);
             } else if (downloadObject.object instanceof TLRPC.Video) {
-                FileLoader.getInstance().loadFile((TLRPC.Video)downloadObject.object, false);
+                FileLoader.getInstance().loadFile((TLRPC.Video) downloadObject.object, false);
             } else if (downloadObject.object instanceof TLRPC.Document) {
-                FileLoader.getInstance().loadFile((TLRPC.Document)downloadObject.object, false, false);
+                FileLoader.getInstance().loadFile((TLRPC.Document) downloadObject.object, false, false);
             } else {
                 added = false;
             }
@@ -988,7 +1038,7 @@ private void processLaterArrays() {
     public void didReceivedNotification(int id, Object... args) {
         if (id == NotificationCenter.FileDidFailedLoad) {
             listenerInProgress = true;
-            String fileName = (String)args[0];
+            String fileName = (String) args[0];
             ArrayList<WeakReference<FileDownloadProgressListener>> arrayList = loadingFileObservers.get(fileName);
             if (arrayList != null) {
                 for (WeakReference<FileDownloadProgressListener> reference : arrayList) {
@@ -1001,10 +1051,16 @@ public void didReceivedNotification(int id, Object... args) {
             }
             listenerInProgress = false;
             processLaterArrays();
-            checkDownloadFinished(fileName, (Integer)args[1]);
+            checkDownloadFinished(fileName, (Integer) args[1]);
         } else if (id == NotificationCenter.FileDidLoaded) {
             listenerInProgress = true;
-            String fileName = (String)args[0];
+            String fileName = (String) args[0];
+            if (downloadingCurrentMessage && playingMessageObject != null) {
+                String file = FileLoader.getAttachFileName(playingMessageObject.messageOwner.media.document);
+                if (file.equals(fileName)) {
+                    playAudio(playingMessageObject);
+                }
+            }
             ArrayList<WeakReference<FileDownloadProgressListener>> arrayList = loadingFileObservers.get(fileName);
             if (arrayList != null) {
                 for (WeakReference<FileDownloadProgressListener> reference : arrayList) {
@@ -1020,10 +1076,10 @@ public void didReceivedNotification(int id, Object... args) {
             checkDownloadFinished(fileName, 0);
         } else if (id == NotificationCenter.FileLoadProgressChanged) {
             listenerInProgress = true;
-            String fileName = (String)args[0];
+            String fileName = (String) args[0];
             ArrayList<WeakReference<FileDownloadProgressListener>> arrayList = loadingFileObservers.get(fileName);
             if (arrayList != null) {
-                Float progress = (Float)args[1];
+                Float progress = (Float) args[1];
                 for (WeakReference<FileDownloadProgressListener> reference : arrayList) {
                     if (reference.get() != null) {
                         reference.get().onProgressDownload(fileName, progress);
@@ -1034,11 +1090,11 @@ public void didReceivedNotification(int id, Object... args) {
             processLaterArrays();
         } else if (id == NotificationCenter.FileUploadProgressChanged) {
             listenerInProgress = true;
-            String fileName = (String)args[0];
+            String fileName = (String) args[0];
             ArrayList<WeakReference<FileDownloadProgressListener>> arrayList = loadingFileObservers.get(fileName);
             if (arrayList != null) {
-                Float progress = (Float)args[1];
-                Boolean enc = (Boolean)args[2];
+                Float progress = (Float) args[1];
+                Boolean enc = (Boolean) args[2];
                 for (WeakReference<FileDownloadProgressListener> reference : arrayList) {
                     if (reference.get() != null) {
                         reference.get().onProgressUpload(fileName, progress, enc);
@@ -1072,15 +1128,27 @@ public void didReceivedNotification(int id, Object... args) {
             }
         } else if (id == NotificationCenter.messagesDeleted) {
             if (playingMessageObject != null) {
-                ArrayList<Integer> markAsDeletedMessages = (ArrayList<Integer>)args[0];
+                ArrayList<Integer> markAsDeletedMessages = (ArrayList<Integer>) args[0];
                 if (markAsDeletedMessages.contains(playingMessageObject.getId())) {
-                    clenupPlayer(false);
+                    clenupPlayer(false, true);
                 }
             }
         } else if (id == NotificationCenter.removeAllMessagesFromDialog) {
-            long did = (Long)args[0];
+            long did = (Long) args[0];
             if (playingMessageObject != null && playingMessageObject.getDialogId() == did) {
-                clenupPlayer(false);
+                clenupPlayer(false, true);
+            }
+        } else if (id == NotificationCenter.musicDidLoaded) {
+            long did = (Long) args[0];
+            if (playingMessageObject != null && playingMessageObject.isMusic() && playingMessageObject.getDialogId() == did) {
+                ArrayList<MessageObject> arrayList = (ArrayList<MessageObject>) args[1];
+                playlist.addAll(0, arrayList);
+                if (shuffleMusic) {
+                    buildShuffledPlayList();
+                    currentPlaylistNum = 0;
+                } else {
+                    currentPlaylistNum += arrayList.size();
+                }
             }
         }
     }
@@ -1176,7 +1244,7 @@ public void run() {
                                         audioTrackPlayer.setNotificationMarkerPosition(1);
                                     }
                                     if (finalBuffersWrited == 1) {
-                                        clenupPlayer(true);
+                                        clenupPlayer(true, true);
                                     }
                                 }
                             }
@@ -1223,7 +1291,7 @@ public void onSensorChanged(SensorEvent event) {
         NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioRouteChanged, useFrontSpeaker);
         MessageObject currentMessageObject = playingMessageObject;
         float progress = playingMessageObject.audioProgress;
-        clenupPlayer(false);
+        clenupPlayer(false, true);
         currentMessageObject.audioProgress = progress;
         playAudio(currentMessageObject);
         ignoreProximity = false;
@@ -1268,9 +1336,9 @@ private void startProximitySensor() {
         }
     }
 
-    private void clenupPlayer(boolean notify) {
+    public void clenupPlayer(boolean notify, boolean stopService) {
         stopProximitySensor();
-        if (audioPlayer != null || audioTrackPlayer != null) {
+        if (playingMessageObject != null) {
             if (audioPlayer != null) {
                 try {
                     audioPlayer.stop();
@@ -1303,12 +1371,20 @@ private void clenupPlayer(boolean notify) {
             lastProgress = 0;
             buffersWrited = 0;
             isPaused = false;
+            if (downloadingCurrentMessage) {
+                FileLoader.getInstance().cancelLoadFile(playingMessageObject.messageOwner.media.document);
+            }
             MessageObject lastFile = playingMessageObject;
             playingMessageObject.audioProgress = 0.0f;
             playingMessageObject.audioProgressSec = 0;
             playingMessageObject = null;
+            downloadingCurrentMessage = false;
             if (notify) {
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioDidReset, lastFile.getId());
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioDidReset, lastFile.getId(), stopService);
+            }
+            if (stopService) {
+                Intent intent = new Intent(ApplicationLoader.applicationContext, MusicPlayerService.class);
+                ApplicationLoader.applicationContext.stopService(intent);
             }
         }
     }
@@ -1366,6 +1442,151 @@ public boolean seekToProgress(MessageObject messageObject, float progress) {
         return true;
     }
 
+    public MessageObject getPlayingMessageObject() {
+        return playingMessageObject;
+    }
+
+    private void buildShuffledPlayList() {
+        ArrayList<MessageObject> all = new ArrayList<>(playlist);
+        shuffledPlaylist.clear();
+
+        MessageObject messageObject = playlist.get(currentPlaylistNum);
+        all.remove(currentPlaylistNum);
+        shuffledPlaylist.add(messageObject);
+
+        int count = all.size();
+        for (int a = 0; a < count; a++) {
+            int index = Utilities.random.nextInt(all.size());
+            shuffledPlaylist.add(all.get(index));
+            all.remove(index);
+        }
+    }
+
+    public boolean setPlaylist(ArrayList<MessageObject> messageObjects, MessageObject current) {
+        if (playingMessageObject == current) {
+            return playAudio(current);
+        }
+        playlist.clear();
+        for (int a = messageObjects.size() - 1; a >= 0; a--) {
+            MessageObject messageObject = messageObjects.get(a);
+            if (messageObject.isMusic()) {
+                playlist.add(messageObject);
+            }
+        }
+        currentPlaylistNum = playlist.indexOf(current);
+        if (currentPlaylistNum == -1) {
+            playlist.clear();
+            shuffledPlaylist.clear();
+            return false;
+        }
+        if (shuffleMusic) {
+            buildShuffledPlayList();
+            currentPlaylistNum = 0;
+        }
+        SharedMediaQuery.loadMusic(current.getDialogId(), playlist.get(0).getId());
+        return playAudio(current);
+    }
+
+    public void playNextMessage() {
+        playNextMessage(false);
+    }
+
+    private void playNextMessage(boolean byStop) {
+        ArrayList<MessageObject> currentPlayList = shuffleMusic ? shuffledPlaylist : playlist;
+
+        if (byStop && repeatMode == 2) {
+            clenupPlayer(false, false);
+            playAudio(currentPlayList.get(currentPlaylistNum));
+            return;
+        }
+        currentPlaylistNum++;
+        if (currentPlaylistNum >= currentPlayList.size()) {
+            currentPlaylistNum = 0;
+            if (byStop && repeatMode == 0) {
+                stopProximitySensor();
+                if (audioPlayer != null || audioTrackPlayer != null) {
+                    if (audioPlayer != null) {
+                        try {
+                            audioPlayer.stop();
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }
+                        try {
+                            audioPlayer.release();
+                            audioPlayer = null;
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }
+                    } else if (audioTrackPlayer != null) {
+                        synchronized (playerObjectSync) {
+                            try {
+                                audioTrackPlayer.pause();
+                                audioTrackPlayer.flush();
+                            } catch (Exception e) {
+                                FileLog.e("tmessages", e);
+                            }
+                            try {
+                                audioTrackPlayer.release();
+                                audioTrackPlayer = null;
+                            } catch (Exception e) {
+                                FileLog.e("tmessages", e);
+                            }
+                        }
+                    }
+                    stopProgressTimer();
+                    lastProgress = 0;
+                    buffersWrited = 0;
+                    isPaused = true;
+                    playingMessageObject.audioProgress = 0.0f;
+                    playingMessageObject.audioProgressSec = 0;
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioPlayStateChanged, playingMessageObject.getId());
+                }
+                return;
+            }
+        }
+        if (currentPlaylistNum < 0 || currentPlaylistNum >= currentPlayList.size()) {
+            return;
+        }
+        playAudio(currentPlayList.get(currentPlaylistNum));
+    }
+
+    public void playPreviousMessage() {
+        ArrayList<MessageObject> currentPlayList = shuffleMusic ? shuffledPlaylist : playlist;
+
+        currentPlaylistNum--;
+        if (currentPlaylistNum < 0) {
+            currentPlaylistNum = currentPlayList.size() - 1;
+        }
+        if (currentPlaylistNum < 0 || currentPlaylistNum >= currentPlayList.size()) {
+            return;
+        }
+        playAudio(currentPlayList.get(currentPlaylistNum));
+    }
+
+    private void checkIsNextMusicFileDownloaded() {
+        ArrayList<MessageObject> currentPlayList = shuffleMusic ? shuffledPlaylist : playlist;
+        if (currentPlayList == null || currentPlayList.size() < 2) {
+            return;
+        }
+        int nextIndex = currentPlaylistNum + 1;
+        if (nextIndex >= currentPlayList.size()) {
+            nextIndex = 0;
+        }
+        MessageObject nextAudio = currentPlayList.get(nextIndex);
+        File file = null;
+        if (nextAudio.messageOwner.attachPath != null && nextAudio.messageOwner.attachPath.length() > 0) {
+            file = new File(nextAudio.messageOwner.attachPath);
+            if (!file.exists()) {
+                file = null;
+            }
+        }
+        final File cacheFile = file != null ? file : FileLoader.getPathToMessage(nextAudio.messageOwner);
+        boolean exist = cacheFile != null && cacheFile.exists();
+        if (cacheFile != null && cacheFile != file && !cacheFile.exists() && nextAudio.isMusic()) {
+            FileLoader.getInstance().loadFile(nextAudio.messageOwner.media.document, true, false);
+        }
+    }
+
     public boolean playAudio(MessageObject messageObject) {
         if (messageObject == null) {
             return false;
@@ -1376,8 +1597,10 @@ public boolean playAudio(MessageObject messageObject) {
             }
             return true;
         }
-        NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioDidStarted, messageObject);
-        clenupPlayer(true);
+        if (audioTrackPlayer != null) {
+            MusicPlayerService.setIgnoreAudioFocus();
+        }
+        clenupPlayer(true, false);
         File file = null;
         if (messageObject.messageOwner.attachPath != null && messageObject.messageOwner.attachPath.length() > 0) {
             file = new File(messageObject.messageOwner.attachPath);
@@ -1386,8 +1609,33 @@ public boolean playAudio(MessageObject messageObject) {
             }
         }
         final File cacheFile = file != null ? file : FileLoader.getPathToMessage(messageObject.messageOwner);
+        if (cacheFile != null && cacheFile != file && !cacheFile.exists() && messageObject.isMusic()) {
+            FileLoader.getInstance().loadFile(messageObject.messageOwner.media.document, true, false);
+            downloadingCurrentMessage = true;
+            isPaused = false;
+            lastProgress = 0;
+            lastPlayPcm = 0;
+            audioInfo = null;
+            playingMessageObject = messageObject;
+            if (playingMessageObject.messageOwner.media.document != null) {
+                Intent intent = new Intent(ApplicationLoader.applicationContext, MusicPlayerService.class);
+                ApplicationLoader.applicationContext.startService(intent);
+            } else {
+                Intent intent = new Intent(ApplicationLoader.applicationContext, MusicPlayerService.class);
+                ApplicationLoader.applicationContext.stopService(intent);
+            }
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioPlayStateChanged, playingMessageObject.getId());
+            return true;
+        } else {
+            downloadingCurrentMessage = false;
+        }
+        if (messageObject.isMusic()) {
+            checkIsNextMusicFileDownloaded();
+        }
 
         if (isOpusFile(cacheFile.getAbsolutePath()) == 1) {
+            playlist.clear();
+            shuffledPlaylist.clear();
             synchronized (playerObjectSync) {
                 try {
                     ignoreFirstProgress = 3;
@@ -1412,7 +1660,7 @@ public void run() {
                     audioTrackPlayer.setPlaybackPositionUpdateListener(new AudioTrack.OnPlaybackPositionUpdateListener() {
                         @Override
                         public void onMarkerReached(AudioTrack audioTrack) {
-                            clenupPlayer(true);
+                            clenupPlayer(true, true);
                         }
 
                         @Override
@@ -1422,7 +1670,9 @@ public void onPeriodicNotification(AudioTrack audioTrack) {
                     });
                     audioTrackPlayer.play();
                     startProgressTimer();
-                    startProximitySensor();
+                    if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaAudio) {
+                        startProximitySensor();
+                    }
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                     if (audioTrackPlayer != null) {
@@ -1430,6 +1680,7 @@ public void onPeriodicNotification(AudioTrack audioTrack) {
                         audioTrackPlayer = null;
                         isPaused = false;
                         playingMessageObject = null;
+                        downloadingCurrentMessage = false;
                     }
                     return false;
                 }
@@ -1442,13 +1693,28 @@ public void onPeriodicNotification(AudioTrack audioTrack) {
                 audioPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                     @Override
                     public void onCompletion(MediaPlayer mediaPlayer) {
-                        clenupPlayer(true);
+                        if (!playlist.isEmpty() && playlist.size() > 1) {
+                            playNextMessage(true);
+                        } else {
+                            clenupPlayer(true, true);
+                        }
                     }
                 });
                 audioPlayer.prepare();
                 audioPlayer.start();
                 startProgressTimer();
-                startProximitySensor();
+                if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaAudio) {
+                    audioInfo = null;
+                    playlist.clear();
+                    shuffledPlaylist.clear();
+                    startProximitySensor();
+                } else {
+                    try {
+                        audioInfo = AudioInfo.getAudioInfo(cacheFile);
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                }
             } catch (Exception e) {
                 FileLog.e("tmessages", e);
                 if (audioPlayer != null) {
@@ -1456,6 +1722,7 @@ public void onCompletion(MediaPlayer mediaPlayer) {
                     audioPlayer = null;
                     isPaused = false;
                     playingMessageObject = null;
+                    downloadingCurrentMessage = false;
                 }
                 return false;
             }
@@ -1465,6 +1732,7 @@ public void onCompletion(MediaPlayer mediaPlayer) {
         lastProgress = 0;
         lastPlayPcm = 0;
         playingMessageObject = messageObject;
+        NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioDidStarted, messageObject);
 
         if (audioPlayer != null) {
             try {
@@ -1486,7 +1754,7 @@ public void onCompletion(MediaPlayer mediaPlayer) {
                 public void run() {
                     try {
                         if (playingMessageObject != null && playingMessageObject.audioProgress != 0) {
-                            lastPlayPcm = (long)(currentTotalPcmDuration * playingMessageObject.audioProgress);
+                            lastPlayPcm = (long) (currentTotalPcmDuration * playingMessageObject.audioProgress);
                             seekOpusFile(playingMessageObject.audioProgress);
                         }
                     } catch (Exception e) {
@@ -1502,6 +1770,14 @@ public void run() {
             });
         }
 
+        if (playingMessageObject.messageOwner.media.document != null) {
+            Intent intent = new Intent(ApplicationLoader.applicationContext, MusicPlayerService.class);
+            ApplicationLoader.applicationContext.startService(intent);
+        } else {
+            Intent intent = new Intent(ApplicationLoader.applicationContext, MusicPlayerService.class);
+            ApplicationLoader.applicationContext.stopService(intent);
+        }
+
         return true;
     }
 
@@ -1535,7 +1811,55 @@ public void stopAudio() {
         }
         stopProgressTimer();
         playingMessageObject = null;
+        downloadingCurrentMessage = false;
         isPaused = false;
+
+        Intent intent = new Intent(ApplicationLoader.applicationContext, MusicPlayerService.class);
+        ApplicationLoader.applicationContext.stopService(intent);
+    }
+
+    public AudioInfo getAudioInfo() {
+        return audioInfo;
+    }
+
+    public boolean isShuffleMusic() {
+        return shuffleMusic;
+    }
+
+    public int getRepeatMode() {
+        return repeatMode;
+    }
+
+    public void toggleShuffleMusic() {
+        shuffleMusic = !shuffleMusic;
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putBoolean("shuffleMusic", shuffleMusic);
+        editor.commit();
+        if (shuffleMusic) {
+            buildShuffledPlayList();
+            currentPlaylistNum = 0;
+        } else {
+            if (playingMessageObject != null) {
+                currentPlaylistNum = playlist.indexOf(playingMessageObject);
+                if (currentPlaylistNum == -1) {
+                    playlist.clear();
+                    shuffledPlaylist.clear();
+                    clenupPlayer(true, true);
+                }
+            }
+        }
+    }
+
+    public void toggleRepeatMode() {
+        repeatMode++;
+        if (repeatMode > 2) {
+            repeatMode = 0;
+        }
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putInt("repeatMode", repeatMode);
+        editor.commit();
     }
 
     public boolean pauseAudio(MessageObject messageObject) {
@@ -1551,6 +1875,7 @@ public boolean pauseAudio(MessageObject messageObject) {
                 audioTrackPlayer.pause();
             }
             isPaused = true;
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioPlayStateChanged, playingMessageObject.getId());
         } catch (Exception e) {
             FileLog.e("tmessages", e);
             isPaused = false;
@@ -1563,7 +1888,9 @@ public boolean resumeAudio(MessageObject messageObject) {
         if (audioTrackPlayer == null && audioPlayer == null || messageObject == null || playingMessageObject == null || playingMessageObject != null && playingMessageObject.getId() != messageObject.getId()) {
             return false;
         }
-        startProximitySensor();
+        if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaAudio) {
+            startProximitySensor();
+        }
         try {
             startProgressTimer();
             if (audioPlayer != null) {
@@ -1573,6 +1900,7 @@ public boolean resumeAudio(MessageObject messageObject) {
                 checkPlayerQueue();
             }
             isPaused = false;
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioPlayStateChanged, playingMessageObject.getId());
         } catch (Exception e) {
             FileLog.e("tmessages", e);
             return false;
@@ -1581,15 +1909,23 @@ public boolean resumeAudio(MessageObject messageObject) {
     }
 
     public boolean isPlayingAudio(MessageObject messageObject) {
-        return !(audioTrackPlayer == null && audioPlayer == null || messageObject == null || playingMessageObject == null || playingMessageObject != null && playingMessageObject.getId() != messageObject.getId());
+        return !(audioTrackPlayer == null && audioPlayer == null || messageObject == null || playingMessageObject == null || playingMessageObject != null && (playingMessageObject.getId() != messageObject.getId() || downloadingCurrentMessage));
     }
 
     public boolean isAudioPaused() {
-        return isPaused;
+        return isPaused || downloadingCurrentMessage;
+    }
+
+    public boolean isDownloadingCurrentMessage() {
+        return downloadingCurrentMessage;
     }
 
     public void startRecording(final long dialog_id, final MessageObject reply_to_msg) {
-        clenupPlayer(true);
+        boolean paused = false;
+        if (playingMessageObject != null && isPlayingAudio(playingMessageObject) && !isAudioPaused()) {
+            paused = true;
+            pauseAudio(playingMessageObject);
+        }
 
         try {
             Vibrator v = (Vibrator) ApplicationLoader.applicationContext.getSystemService(Context.VIBRATOR_SERVICE);
@@ -1598,13 +1934,14 @@ public void startRecording(final long dialog_id, final MessageObject reply_to_ms
             FileLog.e("tmessages", e);
         }
 
-        recordQueue.postRunnable(new Runnable() {
+        recordQueue.postRunnable(recordStartRunnable = new Runnable() {
             @Override
             public void run() {
                 if (audioRecorder != null) {
                     AndroidUtilities.runOnUIThread(new Runnable() {
                         @Override
                         public void run() {
+                            recordStartRunnable = null;
                             NotificationCenter.getInstance().postNotificationName(NotificationCenter.recordStartError);
                         }
                     });
@@ -1626,6 +1963,7 @@ public void run() {
                         AndroidUtilities.runOnUIThread(new Runnable() {
                             @Override
                             public void run() {
+                                recordStartRunnable = null;
                                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.recordStartError);
                             }
                         });
@@ -1655,6 +1993,7 @@ public void run() {
                     AndroidUtilities.runOnUIThread(new Runnable() {
                         @Override
                         public void run() {
+                            recordStartRunnable = null;
                             NotificationCenter.getInstance().postNotificationName(NotificationCenter.recordStartError);
                         }
                     });
@@ -1665,11 +2004,12 @@ public void run() {
                 AndroidUtilities.runOnUIThread(new Runnable() {
                     @Override
                     public void run() {
+                        recordStartRunnable = null;
                         NotificationCenter.getInstance().postNotificationName(NotificationCenter.recordStarted);
                     }
                 });
             }
-        });
+        }, paused ? 500 : 0);
     }
 
     private void stopRecordingInternal(final boolean send) {
@@ -1711,6 +2051,9 @@ public void run() {
     }
 
     public void stopRecording(final boolean send) {
+        if (recordStartRunnable != null) {
+            recordQueue.cancelRunnable(recordStartRunnable);
+        }
         recordQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
@@ -1792,10 +2135,15 @@ public void run() {
                             destFile = AndroidUtilities.generateVideoPath();
                         } else if (type == 2) {
                             File f = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
+                            f.mkdir();
+                            destFile = new File(f, name);
+                        } else if (type == 3) {
+                            File f = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC);
+                            f.mkdirs();
                             destFile = new File(f, name);
                         }
 
-                        if(!destFile.exists()) {
+                        if (!destFile.exists()) {
                             destFile.createNewFile();
                         }
                         FileChannel source = null;
@@ -1837,7 +2185,7 @@ public void run() {
                             }
                         }
 
-                        if (result && (type == 0 || type == 1)) {
+                        if (result && (type == 0 || type == 1 || type == 3)) {
                             AndroidUtilities.addMediaToGallery(Uri.fromFile(destFile));
                         }
                     } catch (Exception e) {
@@ -1942,7 +2290,7 @@ public static boolean isWebp(Uri uri) {
                 String str = new String(header);
                 if (str != null) {
                     str = str.toLowerCase();
-                    if (str.startsWith("riff") && str.endsWith("webp")){
+                    if (str.startsWith("riff") && str.endsWith("webp")) {
                         return true;
                     }
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
index e1ae5e253..4a4139652 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
@@ -338,6 +338,8 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                     } else {
                     messageText = LocaleController.getString("AttachSticker", R.string.AttachSticker);
                     }
+                } else if (isMusic()) {
+                    messageText = LocaleController.getString("AttachMusic", R.string.AttachMusic);
                 } else {
                     String name = FileLoader.getDocumentFileName(message.media.document);
                     if (name != null && name.length() > 0) {
@@ -352,7 +354,9 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
         } else {
             messageText = message.message;
         }
-        messageText = Emoji.replaceEmoji(messageText, textPaint.getFontMetricsInt(), AndroidUtilities.dp(20));
+        if (generateLayout) {
+            messageText = Emoji.replaceEmoji(messageText, textPaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
+        }
 
         if (message instanceof TLRPC.TL_message || message instanceof TLRPC.TL_messageForwarded_old2) {
             if (isMediaEmpty()) {
@@ -380,6 +384,9 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                         type = 8;
                     } else if (message.media.document.mime_type.equals("image/webp") && isSticker()) {
                         type = 13;
+                    } else if (isMusic()) {
+                        type = 14;
+                        contentType = 8;
                     } else {
                         type = 9;
                     }
@@ -625,7 +632,7 @@ public void generateCaption() {
             return;
         }
         if (messageOwner.media != null && messageOwner.media.caption != null && messageOwner.media.caption.length() > 0) {
-            caption = Emoji.replaceEmoji(messageOwner.media.caption, textPaint.getFontMetricsInt(), AndroidUtilities.dp(20));
+            caption = Emoji.replaceEmoji(messageOwner.media.caption, textPaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
             if (containsUrls(caption)) {
                 try {
                     Linkify.addLinks((Spannable) caption, Linkify.WEB_URLS);
@@ -975,6 +982,17 @@ public static boolean isStickerMessage(TLRPC.Message message) {
         return false;
     }
 
+    public static boolean isMusicMessage(TLRPC.Message message) {
+        if (message.media != null && message.media.document != null) {
+            for (TLRPC.DocumentAttribute attribute : message.media.document.attributes) {
+                if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
     public static TLRPC.InputStickerSet getInputStickerSet(TLRPC.Message message) {
         if (message.media != null && message.media.document != null) {
             for (TLRPC.DocumentAttribute attribute : message.media.document.attributes) {
@@ -1011,6 +1029,8 @@ public int getApproximateHeight() {
             return AndroidUtilities.dp(100);
         } else if (type == 4) {
             return AndroidUtilities.dp(114);
+        } else if (type == 14) {
+            return AndroidUtilities.dp(78);
         } else if (type == 13) {
             float maxHeight = AndroidUtilities.displaySize.y * 0.4f;
             float maxWidth;
@@ -1086,6 +1106,39 @@ public boolean isSticker() {
         return isStickerMessage(messageOwner);
     }
 
+    public boolean isMusic() {
+        return isMusicMessage(messageOwner);
+    }
+
+    public String getMusicTitle() {
+        for (TLRPC.DocumentAttribute attribute : messageOwner.media.document.attributes) {
+            if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
+                String title = attribute.title;
+                if (title == null || title.length() == 0) {
+                    title = FileLoader.getDocumentFileName(messageOwner.media.document);
+                    if (title == null || title.length() == 0) {
+                        title = LocaleController.getString("AudioUnknownTitle", R.string.AudioUnknownTitle);
+                    }
+                }
+                return title;
+            }
+        }
+        return "";
+    }
+
+    public String getMusicAuthor() {
+        for (TLRPC.DocumentAttribute attribute : messageOwner.media.document.attributes) {
+            if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
+                String performer = attribute.performer;
+                if (performer == null || performer.length() == 0) {
+                    performer = LocaleController.getString("AudioUnknownArtist", R.string.AudioUnknownArtist);
+                }
+                return performer;
+            }
+        }
+        return "";
+    }
+
     public TLRPC.InputStickerSet getInputStickerSet() {
         return getInputStickerSet(messageOwner);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
index 318b83b49..49ed73605 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
@@ -3902,7 +3902,7 @@ public void run() {
         }
         if (!markAsReadMessagesInbox.isEmpty() || !markAsReadMessagesOutbox.isEmpty() || !markAsReadEncrypted.isEmpty()) {
             if (!markAsReadMessagesInbox.isEmpty() || !markAsReadMessagesOutbox.isEmpty()) {
-                MessagesStorage.getInstance().updateDialogsWithReadedMessages(markAsReadMessagesInbox, true);
+                MessagesStorage.getInstance().updateDialogsWithReadMessages(markAsReadMessagesInbox, true);
             }
             MessagesStorage.getInstance().markMessagesAsRead(markAsReadMessagesInbox, markAsReadMessagesOutbox, markAsReadEncrypted, true);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
index b5030041b..ad37757fc 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
@@ -1149,7 +1149,7 @@ public void run() {
         });
     }
 
-    private void updateDialogsWithReadedMessagesInternal(final ArrayList<Integer> messages, final HashMap<Integer, Integer> inbox) {
+    private void updateDialogsWithReadMessagesInternal(final ArrayList<Integer> messages, final HashMap<Integer, Integer> inbox) {
         try {
             HashMap<Long, Integer> dialogsToUpdate = new HashMap<>();
             StringBuilder dialogsToReload = new StringBuilder();
@@ -1184,14 +1184,13 @@ private void updateDialogsWithReadedMessagesInternal(final ArrayList<Integer> me
                     SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM messages WHERE uid = %d AND mid <= %d AND read_state IN(0,2) AND out = 0", entry.getKey(), entry.getValue()));
                     if (cursor.next()) {
                         int count = cursor.intValue(0);
-                        if (count == 0) {
-                            continue;
-                        }
-                        dialogsToUpdate.put((long) entry.getKey(), count);
-                        if (dialogsToReload.length() != 0) {
-                            dialogsToReload.append(",");
+                        if (count != 0) {
+                            dialogsToUpdate.put((long) entry.getKey(), count);
+                            if (dialogsToReload.length() != 0) {
+                                dialogsToReload.append(",");
+                            }
+                            dialogsToReload.append(entry.getKey());
                         }
-                        dialogsToReload.append(entry.getKey());
                     }
                     cursor.dispose();
                 }
@@ -1231,7 +1230,7 @@ private void updateDialogsWithReadedMessagesInternal(final ArrayList<Integer> me
         }
     }
 
-    public void updateDialogsWithReadedMessages(final HashMap<Integer, Integer> inbox, boolean useQueue) {
+    public void updateDialogsWithReadMessages(final HashMap<Integer, Integer> inbox, boolean useQueue) {
         if (inbox.isEmpty()) {
             return;
         }
@@ -1239,11 +1238,11 @@ public void updateDialogsWithReadedMessages(final HashMap<Integer, Integer> inbo
             storageQueue.postRunnable(new Runnable() {
                 @Override
                 public void run() {
-                    updateDialogsWithReadedMessagesInternal(null, inbox);
+                    updateDialogsWithReadMessagesInternal(null, inbox);
                 }
             });
         } else {
-            updateDialogsWithReadedMessagesInternal(null, inbox);
+            updateDialogsWithReadMessagesInternal(null, inbox);
         }
     }
 
@@ -3473,7 +3472,7 @@ public void run() {
                                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.messagesDeleted, mids);
                             }
                         });
-                        MessagesStorage.getInstance().updateDialogsWithReadedMessagesInternal(mids, null);
+                        MessagesStorage.getInstance().updateDialogsWithReadMessagesInternal(mids, null);
                         MessagesStorage.getInstance().markMessagesAsDeletedInternal(mids);
                         MessagesStorage.getInstance().updateDialogsWithDeletedMessagesInternal(mids);
                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
index ffaf321a6..474d0c770 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationCenter.java
@@ -64,6 +64,7 @@
     public static final int botInfoDidLoaded = totalEvents++;
     public static final int botKeyboardDidLoaded = totalEvents++;
     public static final int chatSearchResultsAvailable = totalEvents++;
+    public static final int musicDidLoaded = totalEvents++;
 
     public static final int httpFileDidLoaded = totalEvents++;
     public static final int httpFileDidFailedLoad = totalEvents++;
@@ -89,6 +90,7 @@
 
     public static final int audioProgressDidChanged = totalEvents++;
     public static final int audioDidReset = totalEvents++;
+    public static final int audioPlayStateChanged = totalEvents++;
     public static final int recordProgressChanged = totalEvents++;
     public static final int recordStarted = totalEvents++;
     public static final int recordStartError = totalEvents++;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index 7c0e401cd..97cbe020a 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -31,8 +31,6 @@
 import android.support.v4.app.NotificationManagerCompat;
 import android.support.v4.app.RemoteInput;
 
-import org.json.JSONArray;
-import org.json.JSONObject;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.DispatchQueue;
 import org.telegram.messenger.FileLog;
@@ -602,11 +600,8 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             }
 
             String lastMessage = null;
-            String lastMessageFull = null;
             if (pushMessages.size() == 1) {
-                String message = lastMessageFull = getStringForMessage(pushMessages.get(0), false);
-                //lastMessage = getStringForMessage(pushMessages.get(0), true);
-                lastMessage = lastMessageFull;
+                String message = lastMessage = getStringForMessage(pushMessages.get(0), false);
                 if (message == null) {
                     return;
                 }
@@ -630,8 +625,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                         continue;
                     }
                     if (i == 0) {
-                        lastMessageFull = message;
-                        lastMessage = lastMessageFull;
+                        lastMessage = message;
                     }
                     if (pushDialogs.size() == 1) {
                         if (replace) {
@@ -692,9 +686,6 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
 
             showExtraNotifications(mBuilder, notifyAboutLast);
             notificationManager.notify(1, mBuilder.build());
-            if (preferences.getBoolean("EnablePebbleNotifications", false)) {
-                sendAlertToPebble(lastMessageFull);
-            }
 
             scheduleNotificationRepeat();
         } catch (Exception e) {
@@ -897,26 +888,6 @@ private void dismissNotification() {
         }
     }
 
-    private void sendAlertToPebble(String message) {
-        try {
-            final Intent i = new Intent("com.getpebble.action.SEND_NOTIFICATION");
-
-            final HashMap<String, String> data = new HashMap<>();
-            data.put("title", LocaleController.getString("AppName", R.string.AppName));
-            data.put("body", message);
-            final JSONObject jsonData = new JSONObject(data);
-            final String notificationData = new JSONArray().put(jsonData).toString();
-
-            i.putExtra("messageType", "PEBBLE_ALERT");
-            i.putExtra("sender", LocaleController.formatString("AppName", R.string.AppName));
-            i.putExtra("notificationData", notificationData);
-
-            ApplicationLoader.applicationContext.sendBroadcast(i);
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
-        }
-    }
-
     public void processReadMessages(HashMap<Integer, Integer> inbox, long dialog_id, int max_date, int max_id, boolean isPopup) {
         int oldCount = popupMessages.size();
         if (inbox != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
index 060d21799..62eecb357 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
@@ -19,6 +19,7 @@
 import android.webkit.MimeTypeMap;
 import android.widget.Toast;
 
+import org.telegram.android.audioinfo.AudioInfo;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
@@ -557,6 +558,9 @@ public void sendMessage(ArrayList<MessageObject> messages, long peer) {
 
         for (int a = 0; a < messages.size(); a++) {
             MessageObject msgObj = messages.get(a);
+            if (msgObj.getId() <= 0) {
+                continue;
+            }
 
             final TLRPC.Message newMsg = new TLRPC.TL_message();
             newMsg.flags |= TLRPC.MESSAGE_FLAG_FWD;
@@ -1858,6 +1862,7 @@ private static boolean prepareSendingDocumentInternal(String path, String origin
             return false;
         }
         MimeTypeMap myMime = MimeTypeMap.getSingleton();
+        TLRPC.TL_documentAttributeAudio attributeAudio = null;
         if (uri != null) {
             String extension = null;
             if (mime != null) {
@@ -1885,9 +1890,32 @@ private static boolean prepareSendingDocumentInternal(String path, String origin
         if (idx != -1) {
             ext = path.substring(idx + 1);
         }
+        if (ext.toLowerCase().equals("mp3") || ext.toLowerCase().equals("m4a")) {
+            AudioInfo audioInfo = AudioInfo.getAudioInfo(f);
+            if (audioInfo != null && audioInfo.getDuration() != 0) {
+                if (isEncrypted) {
+                    attributeAudio = new TLRPC.TL_documentAttributeAudio_old();
+                } else {
+                    attributeAudio = new TLRPC.TL_documentAttributeAudio();
+                }
+                attributeAudio.duration = (int) (audioInfo.getDuration() / 1000);
+                attributeAudio.title = audioInfo.getTitle();
+                attributeAudio.performer = audioInfo.getArtist();
+                if (attributeAudio.title == null) {
+                    attributeAudio.title = "";
+                }
+                if (attributeAudio.performer == null) {
+                    attributeAudio.performer = "";
+                }
+            }
+        }
         if (originalPath != null) {
+            if (attributeAudio != null) {
+                originalPath += "audio" + f.length();
+            } else {
             originalPath += "" + f.length();
         }
+        }
 
         TLRPC.TL_document document = null;
         if (!isEncrypted) {
@@ -1905,6 +1933,9 @@ private static boolean prepareSendingDocumentInternal(String path, String origin
             document.attributes.add(fileName);
             document.size = (int) f.length();
             document.dc_id = 0;
+            if (attributeAudio != null) {
+                document.attributes.add(attributeAudio);
+            }
             if (ext.length() != 0) {
                 if (ext.toLowerCase().equals("webp")) {
                     document.mime_type = "image/webp";
@@ -1990,6 +2021,56 @@ public static void prepareSendingDocument(String path, String originalPath, Uri
         prepareSendingDocuments(paths, originalPaths, uris, mine, dialog_id, reply_to_msg);
     }
 
+    public static void prepareSendingAudioDocuments(final ArrayList<MessageObject> messageObjects, final long dialog_id, final MessageObject reply_to_msg) {
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                int size = messageObjects.size();
+                for (int a = 0; a < size; a++) {
+                    final MessageObject messageObject = messageObjects.get(a);
+                    String originalPath = messageObject.messageOwner.attachPath;
+                    final File f = new File(originalPath);
+
+                    boolean isEncrypted = (int) dialog_id == 0;
+
+
+                    if (originalPath != null) {
+                        originalPath += "audio" + f.length();
+                    }
+
+                    TLRPC.TL_document document = null;
+                    if (!isEncrypted) {
+                        document = (TLRPC.TL_document) MessagesStorage.getInstance().getSentFile(originalPath, !isEncrypted ? 1 : 4);
+                    }
+                    if (document == null) {
+                        document = (TLRPC.TL_document) messageObject.messageOwner.media.document;
+                    }
+
+                    if (isEncrypted) {
+                        for (int b = 0; b < document.attributes.size(); b++) {
+                            if (document.attributes.get(b) instanceof TLRPC.TL_documentAttributeAudio) {
+                                TLRPC.TL_documentAttributeAudio_old old = new TLRPC.TL_documentAttributeAudio_old();
+                                old.duration = document.attributes.get(b).duration;
+                                document.attributes.remove(b);
+                                document.attributes.add(old);
+                                break;
+                            }
+                        }
+                    }
+
+                    final String originalPathFinal = originalPath;
+                    final TLRPC.TL_document documentFinal = document;
+                    AndroidUtilities.runOnUIThread(new Runnable() {
+                        @Override
+                        public void run() {
+                            SendMessagesHelper.getInstance().sendMessage(documentFinal, originalPathFinal, messageObject.messageOwner.attachPath, dialog_id, reply_to_msg);
+                        }
+                    });
+                }
+            }
+        }).start();
+    }
+
     public static void prepareSendingDocuments(final ArrayList<String> paths, final ArrayList<String> originalPaths, final ArrayList<Uri> uris, final String mime, final long dialog_id, final MessageObject reply_to_msg) {
         if (paths == null && originalPaths == null && uris == null || paths != null && originalPaths != null && paths.size() != originalPaths.size()) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/query/SharedMediaQuery.java b/TMessagesProj/src/main/java/org/telegram/android/query/SharedMediaQuery.java
index f1acd0285..492fea8d9 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/query/SharedMediaQuery.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/query/SharedMediaQuery.java
@@ -400,4 +400,38 @@ public void run() {
             }
         });
     }
+
+    public static void loadMusic(final long uid, final int max_id) {
+        MessagesStorage.getInstance().getStorageQueue().postRunnable(new Runnable() {
+            @Override
+            public void run() {
+                final ArrayList<MessageObject> arrayList = new ArrayList<>();
+                try {
+                    SQLiteCursor cursor = MessagesStorage.getInstance().getDatabase().queryFinalized(String.format(Locale.US, "SELECT data, mid FROM media_v2 WHERE uid = %d AND mid < %d AND type = %d ORDER BY date DESC, mid DESC LIMIT 1000", uid, max_id, MEDIA_FILE));
+
+                    while (cursor.next()) {
+                        ByteBufferDesc data = MessagesStorage.getInstance().getBuffersStorage().getFreeBuffer(cursor.byteArrayLength(0));
+                        if (data != null && cursor.byteBufferValue(0, data.buffer) != 0) {
+                            TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
+                            if (MessageObject.isMusicMessage(message)) {
+                                message.id = cursor.intValue(1);
+                                message.dialog_id = uid;
+                                arrayList.add(0, new MessageObject(message, null, false));
+                            }
+                        }
+                        MessagesStorage.getInstance().getBuffersStorage().reuseFreeBuffer(data);
+                    }
+                    cursor.dispose();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+                AndroidUtilities.runOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        NotificationCenter.getInstance().postNotificationName(NotificationCenter.musicDidLoaded, uid, arrayList);
+                    }
+                });
+            }
+        });
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/util/SortedList.java b/TMessagesProj/src/main/java/org/telegram/android/support/util/SortedList.java
index 688e032c8..c8bb6d3e9 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/util/SortedList.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/util/SortedList.java
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package android.support.v7.util;
+package org.telegram.android.support.util;
 
 import java.lang.reflect.Array;
+import java.util.Arrays;
 
 /**
  * A Sorted list implementation that can keep items in order and also notify for changes in the
@@ -418,6 +419,19 @@ private void addToData(int index, T item) {
         mSize++;
     }
 
+    /**
+     * Removes all items from the SortedList.
+     */
+    public void clear() {
+        if (mSize == 0) {
+            return;
+        }
+        final int prevSize = mSize;
+        Arrays.fill(mData, 0, prevSize, null);
+        mSize = 0;
+        mCallback.onRemoved(0, prevSize);
+    }
+
     /**
      * The class that controls the behavior of the {@link SortedList}.
      * <p>
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/AdapterHelper.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/AdapterHelper.java
index 3b4c28c1a..d56fb0b99 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/AdapterHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/AdapterHelper.java
@@ -19,6 +19,9 @@
 import android.support.v4.util.Pools;
 import android.util.Log;
 
+import org.telegram.android.support.widget.OpReorderer;
+import org.telegram.android.support.widget.RecyclerView;
+
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/DefaultItemAnimator.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/DefaultItemAnimator.java
index bbbc20a54..0d7e11af7 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/DefaultItemAnimator.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/DefaultItemAnimator.java
@@ -18,6 +18,7 @@
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.ViewPropertyAnimatorCompat;
 import android.support.v4.view.ViewPropertyAnimatorListener;
+
 import org.telegram.android.support.widget.RecyclerView.ViewHolder;
 import android.view.View;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/GridLayoutManager.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/GridLayoutManager.java
index 790bf06f8..37453d67c 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/GridLayoutManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/GridLayoutManager.java
@@ -24,6 +24,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import org.telegram.android.support.widget.RecyclerView;
+
 import java.util.Arrays;
 
 /**
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/LayoutState.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/LayoutState.java
index c431b6149..b91274a1e 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/LayoutState.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/LayoutState.java
@@ -60,11 +60,14 @@
     int mLayoutDirection;
 
     /**
-     * Used if you want to pre-layout items that are not yet visible.
-     * The difference with {@link #mAvailable} is that, when recycling, distance rendered for
-     * {@link #mExtra} is not considered not to recycle visible children.
+     * This is the target pixel closest to the start of the layout that we are trying to fill
      */
-    int mExtra = 0;
+    int mStartLine = 0;
+
+    /**
+     * This is the target pixel closest to the end of the layout that we are trying to fill
+     */
+    int mEndLine = 0;
 
     /**
      * @return true if there are more items in the data adapter
@@ -84,4 +87,16 @@ View next(RecyclerView.Recycler recycler) {
         mCurrentPosition += mItemDirection;
         return view;
     }
+
+    @Override
+    public String toString() {
+        return "LayoutState{" +
+                "mAvailable=" + mAvailable +
+                ", mCurrentPosition=" + mCurrentPosition +
+                ", mItemDirection=" + mItemDirection +
+                ", mLayoutDirection=" + mLayoutDirection +
+                ", mStartLine=" + mStartLine +
+                ", mEndLine=" + mEndLine +
+                '}';
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/LinearLayoutManager.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/LinearLayoutManager.java
index a52bbffe5..a0508ad5f 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/LinearLayoutManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/LinearLayoutManager.java
@@ -23,6 +23,12 @@
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.accessibility.AccessibilityEventCompat;
 import android.support.v4.view.accessibility.AccessibilityRecordCompat;
+import android.util.AttributeSet;
+
+import org.telegram.android.support.widget.OrientationHelper;
+import org.telegram.android.support.widget.RecyclerView;
+import org.telegram.android.support.widget.ScrollbarHelper;
+import org.telegram.android.support.widget.helper.ItemTouchHelper;
 import android.util.Log;
 import android.view.View;
 import android.view.ViewGroup;
@@ -33,10 +39,11 @@
 import static org.telegram.android.support.widget.RecyclerView.NO_POSITION;
 
 /**
- * A {@link android.support.v7.widget.RecyclerView.LayoutManager} implementation which provides
+ * A {@link RecyclerView.LayoutManager} implementation which provides
  * similar functionality to {@link android.widget.ListView}.
  */
-public class LinearLayoutManager extends RecyclerView.LayoutManager {
+public class LinearLayoutManager extends RecyclerView.LayoutManager implements
+        ItemTouchHelper.ViewDropHandler {
 
     private static final String TAG = "LinearLayoutManager";
 
@@ -130,7 +137,7 @@
     *  Re-used variable to keep anchor information on re-layout.
     *  Anchor position and coordinate defines the reference point for LLM while doing a layout.
     * */
-    final AnchorInfo mAnchorInfo;
+    final AnchorInfo mAnchorInfo = new AnchorInfo();
 
     /**
      * Creates a vertical LinearLayoutManager
@@ -148,7 +155,6 @@ public LinearLayoutManager(Context context) {
      * @param reverseLayout When set to true, layouts from end to start.
      */
     public LinearLayoutManager(Context context, int orientation, boolean reverseLayout) {
-        mAnchorInfo = new AnchorInfo();
         setOrientation(orientation);
         setReverseLayout(reverseLayout);
     }
@@ -342,8 +348,8 @@ public boolean getReverseLayout() {
      * laid out at the end of the UI, second item is laid out before it etc.
      *
      * For horizontal layouts, it depends on the layout direction.
-     * When set to true, If {@link android.support.v7.widget.RecyclerView} is LTR, than it will
-     * layout from RTL, if {@link android.support.v7.widget.RecyclerView}} is RTL, it will layout
+     * When set to true, If {@link RecyclerView} is LTR, than it will
+     * layout from RTL, if {@link RecyclerView}} is RTL, it will layout
      * from LTR.
      *
      * If you are looking for the exact same behavior of
@@ -371,9 +377,13 @@ public View findViewByPosition(int position) {
         final int firstChild = getPosition(getChildAt(0));
         final int viewPosition = position - firstChild;
         if (viewPosition >= 0 && viewPosition < childCount) {
-            return getChildAt(viewPosition);
+            final View child = getChildAt(viewPosition);
+            if (getPosition(child) == position) {
+                return child; // in pre-layout, this may not match
+            }
         }
-        return null;
+        // fallback to traversal. This might be necessary in pre-layout.
+        return super.findViewByPosition(position);
     }
 
     /**
@@ -796,6 +806,7 @@ private boolean updateAnchorFromPendingData(RecyclerView.State state, AnchorInfo
         }
         // override layout from end values for consistency
         anchorInfo.mLayoutFromEnd = mShouldReverseLayout;
+        // if this changes, we should update prepareForDrop as well
         if (mShouldReverseLayout) {
             anchorInfo.mCoordinate = mOrientationHelper.getEndAfterPadding() -
                     mPendingScrollPositionOffset;
@@ -941,7 +952,6 @@ public void scrollToPosition(int position) {
      * <code>item[10]</code>'s bottom is 20 pixels above the RecyclerView's bottom.
      * <p>
      * Note that scroll position change will not be reflected until the next layout call.
-     *
      * <p>
      * If you are just trying to make a position visible, use {@link #scrollToPosition(int)}.
      *
@@ -1175,11 +1185,10 @@ private void recycleChildren(RecyclerView.Recycler recycler, int startIndex, int
     /**
      * Recycles views that went out of bounds after scrolling towards the end of the layout.
      *
-     * @param recycler Recycler instance of {@link android.support.v7.widget.RecyclerView}
+     * @param recycler Recycler instance of {@link RecyclerView}
      * @param dt       This can be used to add additional padding to the visible area. This is used
-     *                 to
-     *                 detect children that will go out of bounds after scrolling, without actually
-     *                 moving them.
+     *                 to detect children that will go out of bounds after scrolling, without
+     *                 actually moving them.
      */
     private void recycleViewsFromStart(RecyclerView.Recycler recycler, int dt) {
         if (dt < 0) {
@@ -1215,7 +1224,7 @@ private void recycleViewsFromStart(RecyclerView.Recycler recycler, int dt) {
     /**
      * Recycles views that went out of bounds after scrolling towards the start of the layout.
      *
-     * @param recycler Recycler instance of {@link android.support.v7.widget.RecyclerView}
+     * @param recycler Recycler instance of {@link RecyclerView}
      * @param dt       This can be used to add additional padding to the visible area. This is used
      *                 to detect children that will go out of bounds after scrolling, without
      *                 actually moving them.
@@ -1257,8 +1266,8 @@ private void recycleViewsFromEnd(RecyclerView.Recycler recycler, int dt) {
      * @param layoutState Current layout state. Right now, this object does not change but
      *                    we may consider moving it out of this view so passing around as a
      *                    parameter for now, rather than accessing {@link #mLayoutState}
-     * @see #recycleViewsFromStart(android.support.v7.widget.RecyclerView.Recycler, int)
-     * @see #recycleViewsFromEnd(android.support.v7.widget.RecyclerView.Recycler, int)
+     * @see #recycleViewsFromStart(RecyclerView.Recycler, int)
+     * @see #recycleViewsFromEnd(RecyclerView.Recycler, int)
      * @see android.support.v7.widget.LinearLayoutManager.LayoutState#mLayoutDirection
      */
     private void recycleByLayoutState(RecyclerView.Recycler recycler, LayoutState layoutState) {
@@ -1788,6 +1797,40 @@ public boolean supportsPredictiveItemAnimations() {
         return mPendingSavedState == null && mLastStackFromEnd == mStackFromEnd;
     }
 
+    /**
+     * @hide This method should be called by ItemTouchHelper only.
+     */
+    @Override
+    public void prepareForDrop(View view, View target, int x, int y) {
+        assertNotInLayoutOrScroll("Cannot drop a view during a scroll or layout calculation");
+        ensureLayoutState();
+        resolveShouldLayoutReverse();
+        final int myPos = getPosition(view);
+        final int targetPos = getPosition(target);
+        final int dropDirection = myPos < targetPos ? LayoutState.ITEM_DIRECTION_TAIL :
+                LayoutState.ITEM_DIRECTION_HEAD;
+        if (mShouldReverseLayout) {
+            if (dropDirection == LayoutState.ITEM_DIRECTION_TAIL) {
+                scrollToPositionWithOffset(targetPos,
+                        mOrientationHelper.getEndAfterPadding() -
+                                (mOrientationHelper.getDecoratedStart(target) +
+                                mOrientationHelper.getDecoratedMeasurement(view)));
+            } else {
+                scrollToPositionWithOffset(targetPos,
+                        mOrientationHelper.getEndAfterPadding() -
+                                mOrientationHelper.getDecoratedEnd(target));
+            }
+        } else {
+            if (dropDirection == LayoutState.ITEM_DIRECTION_HEAD) {
+                scrollToPositionWithOffset(targetPos, mOrientationHelper.getDecoratedStart(target));
+            } else {
+                scrollToPositionWithOffset(targetPos,
+                        mOrientationHelper.getDecoratedEnd(target) -
+                                mOrientationHelper.getDecoratedMeasurement(view));
+            }
+        }
+    }
+
     /**
      * Helper class that keeps temporary state while {LayoutManager} is filling out the empty
      * space.
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/OpReorderer.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/OpReorderer.java
index 3d56822f7..05d0e93a9 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/OpReorderer.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/OpReorderer.java
@@ -16,14 +16,14 @@
 
 package org.telegram.android.support.widget;
 
-import java.util.List;
-
 import org.telegram.android.support.widget.AdapterHelper.UpdateOp;
 import static org.telegram.android.support.widget.AdapterHelper.UpdateOp.ADD;
 import static org.telegram.android.support.widget.AdapterHelper.UpdateOp.MOVE;
 import static org.telegram.android.support.widget.AdapterHelper.UpdateOp.REMOVE;
 import static org.telegram.android.support.widget.AdapterHelper.UpdateOp.UPDATE;
 
+import java.util.List;
+
 class OpReorderer {
 
     final Callback mCallback;
@@ -58,7 +58,7 @@ private void swapMoveOp(List<UpdateOp> list, int badMove, int next) {
     }
 
     void swapMoveRemove(List<UpdateOp> list, int movePos, UpdateOp moveOp,
-            int removePos, UpdateOp removeOp) {
+                        int removePos, UpdateOp removeOp) {
         UpdateOp extraRm = null;
         // check if move is nulled out by remove
         boolean revertedMove = false;
@@ -83,7 +83,7 @@ void swapMoveRemove(List<UpdateOp> list, int movePos, UpdateOp moveOp,
             removeOp.positionStart--;
         } else if (moveOp.itemCount < removeOp.positionStart + removeOp.itemCount) {
             // move is removed.
-            removeOp.itemCount --;
+            removeOp.itemCount--;
             moveOp.cmd = REMOVE;
             moveOp.itemCount = 1;
             if (removeOp.itemCount == 0) {
@@ -157,7 +157,7 @@ void swapMoveRemove(List<UpdateOp> list, int movePos, UpdateOp moveOp,
     }
 
     private void swapMoveAdd(List<UpdateOp> list, int move, UpdateOp moveOp, int add,
-            UpdateOp addOp) {
+                             UpdateOp addOp) {
         int offset = 0;
         // going in reverse, first revert the effect of add
         if (moveOp.itemCount < addOp.positionStart) {
@@ -178,7 +178,7 @@ private void swapMoveAdd(List<UpdateOp> list, int move, UpdateOp moveOp, int add
     }
 
     void swapMoveUpdate(List<UpdateOp> list, int move, UpdateOp moveOp, int update,
-            UpdateOp updateOp) {
+                        UpdateOp updateOp) {
         UpdateOp extraUp1 = null;
         UpdateOp extraUp2 = null;
         // going in reverse, first revert the effect of add
@@ -228,7 +228,7 @@ private int getLastMoveOutOfOrder(List<UpdateOp> list) {
         return -1;
     }
 
-    static interface Callback {
+    interface Callback {
 
         UpdateOp obtainUpdateOp(int cmd, int startPosition, int itemCount);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/PositionMap.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/PositionMap.java
index b97bd5a65..15a41191d 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/PositionMap.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/PositionMap.java
@@ -456,5 +456,4 @@ static int binarySearch(int[] array, int size, int value) {
             return ~lo;  // value not present
         }
     }
-
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/RecyclerView.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/RecyclerView.java
index f6a17a1d8..4aa003c75 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/RecyclerView.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/RecyclerView.java
@@ -18,6 +18,7 @@
 package org.telegram.android.support.widget;
 
 import android.content.Context;
+import android.content.res.TypedArray;
 import android.database.Observable;
 import android.graphics.Canvas;
 import android.graphics.PointF;
@@ -30,6 +31,8 @@
 import android.support.v4.util.ArrayMap;
 import android.support.v4.view.InputDeviceCompat;
 import android.support.v4.view.MotionEventCompat;
+import android.support.v4.view.NestedScrollingChild;
+import android.support.v4.view.NestedScrollingChildHelper;
 import android.support.v4.view.ScrollingView;
 import android.support.v4.view.VelocityTrackerCompat;
 import android.support.v4.view.ViewCompat;
@@ -39,9 +42,6 @@
 import android.support.v4.view.accessibility.AccessibilityRecordCompat;
 import android.support.v4.widget.EdgeEffectCompat;
 import android.support.v4.widget.ScrollerCompat;
-import static org.telegram.android.support.widget.AdapterHelper.UpdateOp;
-import static org.telegram.android.support.widget.AdapterHelper.Callback;
-
 import android.util.AttributeSet;
 import android.util.Log;
 import android.util.SparseArray;
@@ -58,12 +58,15 @@
 import android.view.accessibility.AccessibilityManager;
 import android.view.animation.Interpolator;
 
-import org.telegram.android.AndroidUtilities;
-
+import java.lang.reflect.Constructor;
+import java.lang.reflect.InvocationTargetException;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
+import static org.telegram.android.support.widget.AdapterHelper.Callback;
+import static org.telegram.android.support.widget.AdapterHelper.UpdateOp;
+
 /**
  * A flexible view for providing a limited window into a large data set.
  *
@@ -128,8 +131,10 @@
  * <p>
  * When writing a {@link LayoutManager} you almost always want to use layout positions whereas when
  * writing an {@link Adapter}, you probably want to use adapter positions.
+ *
+ * @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_layoutManager
  */
-public class RecyclerView extends ViewGroup implements ScrollingView {
+public class RecyclerView extends ViewGroup implements ScrollingView, NestedScrollingChild {
 
     private static final String TAG = "RecyclerView";
 
@@ -221,6 +226,8 @@
      * >Try increasing your pool size and item cache size.
      */
     private static final String TRACE_CREATE_VIEW_TAG = "RV CreateView";
+    private static final Class<?>[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE =
+            new Class[]{Context.class, AttributeSet.class, int.class, int.class};
 
     private final RecyclerViewDataObserver mObserver = new RecyclerViewDataObserver();
 
@@ -283,6 +290,7 @@ public void run() {
     private boolean mAdapterUpdateDuringMeasure;
     private final boolean mPostUpdatesOnAnimation;
     private final AccessibilityManager mAccessibilityManager;
+    private List<OnChildAttachStateChangeListener> mOnChildAttachStateListeners;
 
     /**
      * Set to true when an adapter data set changed notification is received.
@@ -354,11 +362,17 @@ public void run() {
             new ItemAnimatorRestoreListener();
     private boolean mPostedAnimatorRunner = false;
     private RecyclerViewAccessibilityDelegate mAccessibilityDelegate;
+    private ChildDrawingOrderCallback mChildDrawingOrderCallback;
 
     // simple array to keep min and max child position during a layout calculation
     // preserved not to create a new one in each layout pass
     private final int[] mMinMaxLayoutPositions = new int[2];
 
+    private final NestedScrollingChildHelper mScrollingChildHelper;
+    private final int[] mScrollOffset = new int[2];
+    private final int[] mScrollConsumed = new int[2];
+    private final int[] mNestedOffsets = new int[2];
+
     private Runnable mItemAnimatorRunner = new Runnable() {
         @Override
         public void run() {
@@ -408,6 +422,10 @@ public RecyclerView(Context context, @Nullable AttributeSet attrs, int defStyle)
         mAccessibilityManager = (AccessibilityManager) getContext()
                 .getSystemService(Context.ACCESSIBILITY_SERVICE);
         setAccessibilityDelegateCompat(new RecyclerViewAccessibilityDelegate(this));
+        // Create the layoutManager if specified.
+
+        mScrollingChildHelper = new NestedScrollingChildHelper(this);
+        setNestedScrollingEnabled(true);
     }
 
     /**
@@ -428,6 +446,72 @@ public void setAccessibilityDelegateCompat(
         ViewCompat.setAccessibilityDelegate(this, mAccessibilityDelegate);
     }
 
+    /**
+     * Instantiate and set a LayoutManager, if specified in the attributes.
+     */
+    private void createLayoutManager(Context context, String className, AttributeSet attrs,
+            int defStyleAttr, int defStyleRes) {
+        if (className != null) {
+            className = className.trim();
+            if (className.length() != 0) {  // Can't use isEmpty since it was added in API 9.
+                className = getFullClassName(context, className);
+                try {
+                    ClassLoader classLoader;
+                    if (isInEditMode()) {
+                        // Stupid layoutlib cannot handle simple class loaders.
+                        classLoader = this.getClass().getClassLoader();
+                    } else {
+                        classLoader = context.getClassLoader();
+                    }
+                    Class<? extends LayoutManager> layoutManagerClass =
+                            classLoader.loadClass(className).asSubclass(LayoutManager.class);
+                    Constructor<? extends LayoutManager> constructor;
+                    Object[] constructorArgs = null;
+                    try {
+                        constructor = layoutManagerClass
+                                .getConstructor(LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE);
+                        constructorArgs = new Object[]{context, attrs, defStyleAttr, defStyleRes};
+                    } catch (NoSuchMethodException e) {
+                        try {
+                            constructor = layoutManagerClass.getConstructor();
+                        } catch (NoSuchMethodException e1) {
+                            e1.initCause(e);
+                            throw new IllegalStateException(attrs.getPositionDescription() +
+                                    ": Error creating LayoutManager " + className, e1);
+                        }
+                    }
+                    constructor.setAccessible(true);
+                    setLayoutManager(constructor.newInstance(constructorArgs));
+                } catch (ClassNotFoundException e) {
+                    throw new IllegalStateException(attrs.getPositionDescription()
+                            + ": Unable to find LayoutManager " + className, e);
+                } catch (InvocationTargetException e) {
+                    throw new IllegalStateException(attrs.getPositionDescription()
+                            + ": Could not instantiate the LayoutManager: " + className, e);
+                } catch (InstantiationException e) {
+                    throw new IllegalStateException(attrs.getPositionDescription()
+                            + ": Could not instantiate the LayoutManager: " + className, e);
+                } catch (IllegalAccessException e) {
+                    throw new IllegalStateException(attrs.getPositionDescription()
+                            + ": Cannot access non-public constructor " + className, e);
+                } catch (ClassCastException e) {
+                    throw new IllegalStateException(attrs.getPositionDescription()
+                            + ": Class is not a LayoutManager " + className, e);
+                }
+            }
+        }
+    }
+
+    private String getFullClassName(Context context, String className) {
+        if (className.charAt(0) == '.') {
+            return context.getPackageName() + className;
+        }
+        if (className.contains("")) {
+            return className;
+        }
+        return RecyclerView.class.getPackage().getName() + '.' + className;
+    }
+
     private void initChildrenHelper() {
         mChildHelper = new ChildHelper(new ChildHelper.Callback() {
             @Override
@@ -769,6 +853,46 @@ public int getBaseline() {
         }
     }
 
+    /**
+     * Register a listener that will be notified whenever a child view is attached to or detached
+     * from RecyclerView.
+     *
+     * <p>This listener will be called when a LayoutManager or the RecyclerView decides
+     * that a child view is no longer needed. If an application associates expensive
+     * or heavyweight data with item views, this may be a good place to release
+     * or free those resources.</p>
+     *
+     * @param listener Listener to register
+     */
+    public void addOnChildAttachStateChangeListener(OnChildAttachStateChangeListener listener) {
+        if (mOnChildAttachStateListeners == null) {
+            mOnChildAttachStateListeners = new ArrayList<OnChildAttachStateChangeListener>();
+        }
+        mOnChildAttachStateListeners.add(listener);
+    }
+
+    /**
+     * Removes the provided listener from child attached state listeners list.
+     *
+     * @param listener Listener to unregister
+     */
+    public void removeOnChildAttachStateChangeListener(OnChildAttachStateChangeListener listener) {
+        if (mOnChildAttachStateListeners == null) {
+            return;
+        }
+        mOnChildAttachStateListeners.remove(listener);
+    }
+
+    /**
+     * Removes all listeners that were added via
+     * {@link #addOnChildAttachStateChangeListener(OnChildAttachStateChangeListener)}.
+     */
+    public void clearOnChildAttachStateChangeListeners() {
+        if (mOnChildAttachStateListeners != null) {
+            mOnChildAttachStateListeners.clear();
+        }
+    }
+
     /**
      * Set the {@link LayoutManager} that this RecyclerView will use.
      *
@@ -993,7 +1117,7 @@ private void setScrollState(int state) {
     public void addItemDecoration(ItemDecoration decor, int index) {
         if (mLayout != null) {
             mLayout.assertNotInLayoutOrScroll("Cannot add item decoration during a scroll  or"
-                    + " layout");
+                    + "layout");
         }
         if (mItemDecorations.isEmpty()) {
             setWillNotDraw(false);
@@ -1035,7 +1159,7 @@ public void addItemDecoration(ItemDecoration decor) {
     public void removeItemDecoration(ItemDecoration decor) {
         if (mLayout != null) {
             mLayout.assertNotInLayoutOrScroll("Cannot remove item decoration during a scroll  or"
-                    + " layout");
+                    + "layout");
         }
         mItemDecorations.remove(decor);
         if (mItemDecorations.isEmpty()) {
@@ -1045,6 +1169,26 @@ public void removeItemDecoration(ItemDecoration decor) {
         requestLayout();
     }
 
+    /**
+     * Sets the {@link ChildDrawingOrderCallback} to be used for drawing children.
+     * <p>
+     * See {@link ViewGroup#getChildDrawingOrder(int, int)} for details. Calling this method will
+     * always call {@link ViewGroup#setChildrenDrawingOrderEnabled(boolean)}. The parameter will be
+     * true if childDrawingOrderCallback is not null, false otherwise.
+     * <p>
+     * Note that child drawing order may be overridden by View's elevation.
+     *
+     * @param childDrawingOrderCallback The ChildDrawingOrderCallback to be used by the drawing
+     *                                  system.
+     */
+    public void setChildDrawingOrderCallback(ChildDrawingOrderCallback childDrawingOrderCallback) {
+        if (childDrawingOrderCallback == mChildDrawingOrderCallback) {
+            return;
+        }
+        mChildDrawingOrderCallback = childDrawingOrderCallback;
+        setChildrenDrawingOrderEnabled(mChildDrawingOrderCallback != null);
+    }
+
     /**
      * Set a listener that will be notified of any changes in scroll state or position.
      *
@@ -1153,7 +1297,7 @@ public void scrollBy(int x, int y) {
         final boolean canScrollHorizontal = mLayout.canScrollHorizontally();
         final boolean canScrollVertical = mLayout.canScrollVertically();
         if (canScrollHorizontal || canScrollVertical) {
-            scrollByInternal(canScrollHorizontal ? x : 0, canScrollVertical ? y : 0, false, 0, 0);
+            scrollByInternal(canScrollHorizontal ? x : 0, canScrollVertical ? y : 0, null);
         }
     }
 
@@ -1176,29 +1320,25 @@ private void consumePendingUpdateOperations() {
      *
      * @param x The amount of horizontal scroll request
      * @param y The amount of vertical scroll request
-     * @param fromMotionEvent If request is originated from a MotionEvent, this should be set to
-     *                        true and motionX/motionY should be provided, false otherwise.
-     * @param motionX The x coordinate of the MotionEvent which triggered this scroll. Unused if
-     *                fromMotionEvent is false.
-     * @param motionY The y coordinate of the MotionEvent which triggered this scroll. Unused if
-     *                fromMotionEvent is false.
+     * @param ev The originating MotionEvent, or null if not from a touch event.
      *
      * @return Whether any scroll was consumed in either direction.
      */
-    boolean scrollByInternal(int x, int y, boolean fromMotionEvent, int motionX, int motionY) {
-        int overscrollX = 0, overscrollY = 0;
-        int hresult = 0, vresult = 0;
+    boolean scrollByInternal(int x, int y, MotionEvent ev) {
+        int unconsumedX = 0, unconsumedY = 0;
+        int consumedX = 0, consumedY = 0;
+
         consumePendingUpdateOperations();
         if (mAdapter != null) {
             eatRequestLayout();
             onEnterLayoutOrScroll();
             if (x != 0) {
-                hresult = mLayout.scrollHorizontallyBy(x, mRecycler, mState);
-                overscrollX = x - hresult;
+                consumedX = mLayout.scrollHorizontallyBy(x, mRecycler, mState);
+                unconsumedX = x - consumedX;
             }
             if (y != 0) {
-                vresult = mLayout.scrollVerticallyBy(y, mRecycler, mState);
-                overscrollY = y - vresult;
+                consumedY = mLayout.scrollVerticallyBy(y, mRecycler, mState);
+                unconsumedY = y - consumedY;
             }
             if (supportsChangeAnimations()) {
                 // Fix up shadow views used by changing animations
@@ -1227,19 +1367,27 @@ boolean scrollByInternal(int x, int y, boolean fromMotionEvent, int motionX, int
         if (!mItemDecorations.isEmpty()) {
             invalidate();
         }
-        if (ViewCompat.getOverScrollMode(this) != ViewCompat.OVER_SCROLL_NEVER) {
-            if (fromMotionEvent) {
-                pullGlows(motionX, overscrollX, motionY, overscrollY);
+
+        if (dispatchNestedScroll(consumedX, consumedY, unconsumedX, unconsumedY, mScrollOffset)) {
+            // Update the last touch co-ords, taking any scroll offset into account
+            mLastTouchX -= mScrollOffset[0];
+            mLastTouchY -= mScrollOffset[1];
+            ev.offsetLocation(mScrollOffset[0], mScrollOffset[1]);
+            mNestedOffsets[0] += mScrollOffset[0];
+            mNestedOffsets[1] += mScrollOffset[1];
+        } else if (ViewCompat.getOverScrollMode(this) != ViewCompat.OVER_SCROLL_NEVER) {
+            if (ev != null) {
+                pullGlows(ev.getX(), unconsumedX, ev.getY(), unconsumedY);
             }
             considerReleasingGlowsOnScroll(x, y);
         }
-        if (hresult != 0 || vresult != 0) {
-            dispatchOnScrolled(hresult, vresult);
+        if (consumedX != 0 || consumedY != 0) {
+            dispatchOnScrolled(consumedX, consumedY);
         }
         if (!awakenScrollBars()) {
             invalidate();
         }
-        return hresult != 0 || vresult != 0;
+        return consumedX != 0 || consumedY != 0;
     }
 
     /**
@@ -1432,19 +1580,31 @@ public boolean fling(int velocityX, int velocityY) {
                     "Call setLayoutManager with a non-null argument.");
             return false;
         }
+
         final boolean canScrollHorizontal = mLayout.canScrollHorizontally();
         final boolean canScrollVertical = mLayout.canScrollVertically();
+
         if (!canScrollHorizontal || Math.abs(velocityX) < mMinFlingVelocity) {
             velocityX = 0;
         }
         if (!canScrollVertical || Math.abs(velocityY) < mMinFlingVelocity) {
             velocityY = 0;
         }
-        velocityX = Math.max(-mMaxFlingVelocity, Math.min(velocityX, mMaxFlingVelocity));
-        velocityY = Math.max(-mMaxFlingVelocity, Math.min(velocityY, mMaxFlingVelocity));
-        if (velocityX != 0 || velocityY != 0) {
-            mViewFlinger.fling(velocityX, velocityY);
-            return true;
+        if (velocityX == 0 && velocityY == 0) {
+            // If we don't have any velocity, return false
+            return false;
+        }
+
+        if (!dispatchNestedPreFling(velocityX, velocityY)) {
+            final boolean canScroll = canScrollHorizontal || canScrollVertical;
+            dispatchNestedFling(velocityX, velocityY, canScroll);
+
+            if (canScroll) {
+                velocityX = Math.max(-mMaxFlingVelocity, Math.min(velocityX, mMaxFlingVelocity));
+                velocityY = Math.max(-mMaxFlingVelocity, Math.min(velocityY, mMaxFlingVelocity));
+                mViewFlinger.fling(velocityX, velocityY);
+                return true;
+            }
         }
         return false;
     }
@@ -1468,29 +1628,52 @@ private void stopScrollersInternal() {
         }
     }
 
+    /**
+     * Returns the minimum velocity to start a fling.
+     *
+     * @return The minimum velocity to start a fling
+     */
+    public int getMinFlingVelocity() {
+        return mMinFlingVelocity;
+    }
+
+
+    /**
+     * Returns the maximum fling velocity used by this RecyclerView.
+     *
+     * @return The maximum fling velocity used by this RecyclerView.
+     */
+    public int getMaxFlingVelocity() {
+        return mMaxFlingVelocity;
+    }
+
     /**
      * Apply a pull to relevant overscroll glow effects
      */
-    private void pullGlows(int x, int overscrollX, int y, int overscrollY) {
+    private void pullGlows(float x, float overscrollX, float y, float overscrollY) {
         boolean invalidate = false;
         if (overscrollX < 0) {
             ensureLeftGlow();
-            invalidate = mLeftGlow.onPull(-overscrollX / (float) getWidth(),
-                    1f - y  / (float) getHeight()) || invalidate;
+            if (mLeftGlow.onPull(-overscrollX / getWidth(), 1f - y  / getHeight())) {
+                invalidate = true;
+            }
         } else if (overscrollX > 0) {
             ensureRightGlow();
-            invalidate = mRightGlow.onPull(overscrollX / (float) getWidth(),
-                    y / (float) getHeight()) || invalidate;
+            if (mRightGlow.onPull(overscrollX / getWidth(), y / getHeight())) {
+                invalidate = true;
+            }
         }
 
         if (overscrollY < 0) {
             ensureTopGlow();
-            invalidate = mTopGlow.onPull(-overscrollY / (float) getHeight(),
-                    x / (float) getWidth()) || invalidate;
+            if (mTopGlow.onPull(-overscrollY / getHeight(), x / getWidth())) {
+                invalidate = true;
+            }
         } else if (overscrollY > 0) {
             ensureBottomGlow();
-            invalidate = mBottomGlow.onPull(overscrollY / (float) getHeight(),
-                    1f - x / (float) getWidth()) || invalidate;
+            if (mBottomGlow.onPull(overscrollY / getHeight(), 1f - x / getWidth())) {
+                invalidate = true;
+            }
         }
 
         if (invalidate || overscrollX != 0 || overscrollY != 0) {
@@ -1693,6 +1876,14 @@ protected void onDetachedFromWindow() {
         removeCallbacks(mItemAnimatorRunner);
     }
 
+    /**
+     * Returns true if RecyclerView is attached to window.
+     */
+    // @override
+    public boolean isAttachedToWindow() {
+        return mIsAttached;
+    }
+
     /**
      * Checks if RecyclerView is in the middle of a layout or scroll and throws an
      * {@link IllegalStateException} if it <b>is not</b>.
@@ -1739,6 +1930,7 @@ void assertNotInLayoutOrScroll(String message) {
      * for each incoming MotionEvent until the end of the gesture.</p>
      *
      * @param listener Listener to add
+     * @see SimpleOnItemTouchListener
      */
     public void addOnItemTouchListener(OnItemTouchListener listener) {
         mOnItemTouchListeners.add(listener);
@@ -1832,6 +2024,15 @@ public boolean onInterceptTouchEvent(MotionEvent e) {
                     getParent().requestDisallowInterceptTouchEvent(true);
                     setScrollState(SCROLL_STATE_DRAGGING);
                 }
+
+                int nestedScrollAxis = ViewCompat.SCROLL_AXIS_NONE;
+                if (canScrollHorizontally) {
+                    nestedScrollAxis |= ViewCompat.SCROLL_AXIS_HORIZONTAL;
+                }
+                if (canScrollVertically) {
+                    nestedScrollAxis |= ViewCompat.SCROLL_AXIS_VERTICAL;
+                }
+                startNestedScroll(nestedScrollAxis);
                 break;
 
             case MotionEventCompat.ACTION_POINTER_DOWN:
@@ -1874,6 +2075,7 @@ public boolean onInterceptTouchEvent(MotionEvent e) {
 
             case MotionEvent.ACTION_UP: {
                 mVelocityTracker.clear();
+                stopNestedScroll();
             } break;
 
             case MotionEvent.ACTION_CANCEL: {
@@ -1883,6 +2085,16 @@ public boolean onInterceptTouchEvent(MotionEvent e) {
         return mScrollState == SCROLL_STATE_DRAGGING;
     }
 
+    @Override
+    public void requestDisallowInterceptTouchEvent(boolean disallowIntercept) {
+        final int listenerCount = mOnItemTouchListeners.size();
+        for (int i = 0; i < listenerCount; i++) {
+            final OnItemTouchListener listener = mOnItemTouchListeners.get(i);
+            listener.onRequestDisallowInterceptTouchEvent(disallowIntercept);
+        }
+        super.requestDisallowInterceptTouchEvent(disallowIntercept);
+    }
+
     @Override
     public boolean onTouchEvent(MotionEvent e) {
         if (dispatchOnItemTouch(e)) {
@@ -1898,14 +2110,29 @@ public boolean onTouchEvent(MotionEvent e) {
         }
         mVelocityTracker.addMovement(e);
 
+        final MotionEvent vtev = MotionEvent.obtain(e);
         final int action = MotionEventCompat.getActionMasked(e);
         final int actionIndex = MotionEventCompat.getActionIndex(e);
 
+        if (action == MotionEvent.ACTION_DOWN) {
+            mNestedOffsets[0] = mNestedOffsets[1] = 0;
+        }
+        vtev.offsetLocation(mNestedOffsets[0], mNestedOffsets[1]);
+
         switch (action) {
             case MotionEvent.ACTION_DOWN: {
                 mScrollPointerId = MotionEventCompat.getPointerId(e, 0);
                 mInitialTouchX = mLastTouchX = (int) (e.getX() + 0.5f);
                 mInitialTouchY = mLastTouchY = (int) (e.getY() + 0.5f);
+
+                int nestedScrollAxis = ViewCompat.SCROLL_AXIS_NONE;
+                if (canScrollHorizontally) {
+                    nestedScrollAxis |= ViewCompat.SCROLL_AXIS_HORIZONTAL;
+                }
+                if (canScrollVertically) {
+                    nestedScrollAxis |= ViewCompat.SCROLL_AXIS_VERTICAL;
+                }
+                startNestedScroll(nestedScrollAxis);
             } break;
 
             case MotionEventCompat.ACTION_POINTER_DOWN: {
@@ -1924,32 +2151,52 @@ public boolean onTouchEvent(MotionEvent e) {
 
                 final int x = (int) (MotionEventCompat.getX(e, index) + 0.5f);
                 final int y = (int) (MotionEventCompat.getY(e, index) + 0.5f);
+                int dx = mLastTouchX - x;
+                int dy = mLastTouchY - y;
+
+                if (dispatchNestedPreScroll(dx, dy, mScrollConsumed, mScrollOffset)) {
+                    dx -= mScrollConsumed[0];
+                    dy -= mScrollConsumed[1];
+                    vtev.offsetLocation(mScrollOffset[0], mScrollOffset[1]);
+                    // Updated the nested offsets
+                    mNestedOffsets[0] += mScrollOffset[0];
+                    mNestedOffsets[1] += mScrollOffset[1];
+                }
+
                 if (mScrollState != SCROLL_STATE_DRAGGING) {
-                    final int dx = x - mInitialTouchX;
-                    final int dy = y - mInitialTouchY;
                     boolean startScroll = false;
                     if (canScrollHorizontally && Math.abs(dx) > mTouchSlop) {
-                        mLastTouchX = mInitialTouchX + mTouchSlop * (dx < 0 ? -1 : 1);
+                        if (dx > 0) {
+                            dx -= mTouchSlop;
+                        } else {
+                            dx += mTouchSlop;
+                        }
                         startScroll = true;
                     }
                     if (canScrollVertically && Math.abs(dy) > mTouchSlop) {
-                        mLastTouchY = mInitialTouchY + mTouchSlop * (dy < 0 ? -1 : 1);
+                        if (dy > 0) {
+                            dy -= mTouchSlop;
+                        } else {
+                            dy += mTouchSlop;
+                        }
                         startScroll = true;
                     }
                     if (startScroll) {
                         setScrollState(SCROLL_STATE_DRAGGING);
                     }
                 }
+
                 if (mScrollState == SCROLL_STATE_DRAGGING) {
-                    final int dx = x - mLastTouchX;
-                    final int dy = y - mLastTouchY;
-                    if (scrollByInternal(canScrollHorizontally ? -dx : 0,
-                            canScrollVertically ? -dy : 0, true, x, y)) {
+                    mLastTouchX = x - mScrollOffset[0];
+                    mLastTouchY = y - mScrollOffset[1];
+
+                    if (scrollByInternal(
+                            canScrollHorizontally ? dx : 0,
+                            canScrollVertically ? dy : 0,
+                            vtev)) {
                         getParent().requestDisallowInterceptTouchEvent(true);
                     }
                 }
-                mLastTouchX = x;
-                mLastTouchY = y;
             } break;
 
             case MotionEventCompat.ACTION_POINTER_UP: {
@@ -1965,6 +2212,7 @@ public boolean onTouchEvent(MotionEvent e) {
                 if (!((xvel != 0 || yvel != 0) && fling((int) xvel, (int) yvel))) {
                     setScrollState(SCROLL_STATE_IDLE);
                 }
+
                 mVelocityTracker.clear();
                 releaseGlows();
             } break;
@@ -1974,6 +2222,8 @@ public boolean onTouchEvent(MotionEvent e) {
             } break;
         }
 
+        vtev.recycle();
+
         return true;
     }
 
@@ -1981,6 +2231,7 @@ private void cancelTouch() {
         if (mVelocityTracker != null) {
             mVelocityTracker.clear();
         }
+        stopNestedScroll();
         releaseGlows();
         setScrollState(SCROLL_STATE_IDLE);
     }
@@ -2823,6 +3074,18 @@ protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {
         return mLayout.generateLayoutParams(p);
     }
 
+    /**
+     * Returns true if RecyclerView is currently running some animations.
+     * <p>
+     * If you want to be notified when animations are finished, use
+     * {@link ItemAnimator#isRunning(ItemAnimator.ItemAnimatorFinishedListener)}.
+     *
+     * @return True if there are some item animations currently running or waiting to be started.
+     */
+    public boolean isAnimating() {
+        return mItemAnimator != null && mItemAnimator.isRunning();
+    }
+
     void saveOldPositions() {
         final int childCount = mChildHelper.getUnfilteredChildCount();
         for (int i = 0; i < childCount; i++) {
@@ -3232,6 +3495,11 @@ public View findChildViewUnder(float x, float y) {
         return null;
     }
 
+    @Override
+    public boolean drawChild(Canvas canvas, View child, long drawingTime) {
+        return super.drawChild(canvas, child, drawingTime);
+    }
+
     /**
      * Offset the bounds of all child views by <code>dy</code> pixels.
      * Useful for implementing simple scrolling in {@link LayoutManager LayoutManagers}.
@@ -5153,17 +5421,32 @@ public void notifyItemRangeRemoved(int positionStart, int itemCount) {
     }
 
     private void dispatchChildDetached(View child) {
-        if (mAdapter != null) {
-            mAdapter.onViewDetachedFromWindow(getChildViewHolderInt(child));
-        }
+        final ViewHolder viewHolder = getChildViewHolderInt(child);
         onChildDetachedFromWindow(child);
+        if (mAdapter != null && viewHolder != null) {
+            mAdapter.onViewDetachedFromWindow(viewHolder);
+        }
+        if (mOnChildAttachStateListeners != null) {
+            final int cnt = mOnChildAttachStateListeners.size();
+            for (int i = cnt - 1; i >= 0; i--) {
+                mOnChildAttachStateListeners.get(i).onChildViewDetachedFromWindow(child);
+            }
+        }
     }
 
     private void dispatchChildAttached(View child) {
-        if (mAdapter != null) {
-            mAdapter.onViewAttachedToWindow(getChildViewHolderInt(child));
-        }
+        final ViewHolder viewHolder = getChildViewHolderInt(child);
         onChildAttachedToWindow(child);
+        if (mAdapter != null && viewHolder != null) {
+            mAdapter.onViewAttachedToWindow(viewHolder);
+        }
+        if (mOnChildAttachStateListeners != null) {
+            final int cnt = mOnChildAttachStateListeners.size();
+            for (int i = cnt - 1; i >= 0; i--) {
+                mOnChildAttachStateListeners.get(i).onChildViewAttachedToWindow(child);
+            }
+        }
+
     }
 
     /**
@@ -5173,6 +5456,14 @@ private void dispatchChildAttached(View child) {
      * a <code>RecyclerView</code> can be used to implement a standard vertically scrolling list,
      * a uniform grid, staggered grids, horizontally scrolling collections and more. Several stock
      * layout managers are provided for general use.
+     * <p/>
+     * If the LayoutManager specifies a default constructor or one with the signature
+     * ({@link Context}, {@link AttributeSet}, {@code int}, {@code int}), RecyclerView will
+     * instantiate and set the LayoutManager when being inflated. Most used properties can
+     * be then obtained from {@link #getProperties(Context, AttributeSet, int, int)}. In case
+     * a LayoutManager specifies both constructors, the non-default constructor will take
+     * precedence.
+     *
      */
     public static abstract class LayoutManager {
         ChildHelper mChildHelper;
@@ -7259,6 +7550,20 @@ public boolean performAccessibilityActionForItem(Recycler recycler, State state,
                 int action, Bundle args) {
             return false;
         }
+
+        /**
+         * Some general properties that a LayoutManager may want to use.
+         */
+        public static class Properties {
+            /** @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_android_orientation */
+            public int orientation;
+            /** @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_spanCount */
+            public int spanCount;
+            /** @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_reverseLayout */
+            public boolean reverseLayout;
+            /** @attr ref android.support.v7.recyclerview.R.styleable#RecyclerView_stackFromEnd */
+            public boolean stackFromEnd;
+        }
     }
 
     /**
@@ -7359,8 +7664,10 @@ public void getItemOffsets(Rect outRect, View view, RecyclerView parent, State s
      * manipulation of item views within the RecyclerView. OnItemTouchListeners may intercept
      * a touch interaction already in progress even if the RecyclerView is already handling that
      * gesture stream itself for the purposes of scrolling.</p>
+     *
+     * @see SimpleOnItemTouchListener
      */
-    public interface OnItemTouchListener {
+    public static interface OnItemTouchListener {
         /**
          * Silently observe and/or take over touch events sent to the RecyclerView
          * before they are handled by either the RecyclerView itself or its child views.
@@ -7385,8 +7692,44 @@ public void getItemOffsets(Rect outRect, View view, RecyclerView parent, State s
          *          the RecyclerView's coordinate system.
          */
         public void onTouchEvent(RecyclerView rv, MotionEvent e);
+
+        /**
+         * Called when a child of RecyclerView does not want RecyclerView and its ancestors to
+         * intercept touch events with
+         * {@link ViewGroup#onInterceptTouchEvent(MotionEvent)}.
+         *
+         * @param disallowIntercept True if the child does not want the parent to
+         *            intercept touch events.
+         * @see ViewParent#requestDisallowInterceptTouchEvent(boolean)
+         */
+        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept);
     }
 
+    /**
+     * An implementation of {@link RecyclerView.OnItemTouchListener} that has empty method bodies and
+     * default return values.
+     * <p>
+     * You may prefer to extend this class if you don't need to override all methods. Another
+     * benefit of using this class is future compatibility. As the interface may change, we'll
+     * always provide a default implementation on this class so that your code won't break when
+     * you update to a new version of the support library.
+     */
+    public class SimpleOnItemTouchListener implements RecyclerView.OnItemTouchListener {
+        @Override
+        public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {
+            return false;
+        }
+
+        @Override
+        public void onTouchEvent(RecyclerView rv, MotionEvent e) {
+        }
+
+        @Override
+        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {
+        }
+    }
+
+
     /**
      * An OnScrollListener can be set on a RecyclerView to receive messages
      * when a scrolling event has occurred on that RecyclerView.
@@ -7399,7 +7742,7 @@ public void getItemOffsets(Rect outRect, View view, RecyclerView parent, State s
      * want your components to be able to easily replace the listener use
      * RecyclerView#setOnScrollListener.
      */
-    abstract static public class OnScrollListener {
+    public abstract static class OnScrollListener {
         /**
          * Callback method to be invoked when RecyclerView's scroll state changes.
          *
@@ -7444,6 +7787,27 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy){}
         public void onViewRecycled(ViewHolder holder);
     }
 
+    /**
+     * A Listener interface that can be attached to a RecylcerView to get notified
+     * whenever a ViewHolder is attached to or detached from RecyclerView.
+     */
+    public interface OnChildAttachStateChangeListener {
+
+        /**
+         * Called when a view is attached to the RecyclerView.
+         *
+         * @param view The View which is attached to the RecyclerView
+         */
+        public void onChildViewAttachedToWindow(View view);
+
+        /**
+         * Called when a view is detached from RecyclerView.
+         *
+         * @param view The View which is being detached from the RecyclerView
+         */
+        public void onChildViewDetachedFromWindow(View view);
+    }
+
     /**
      * A ViewHolder describes an item view and metadata about its place within the RecyclerView.
      *
@@ -7862,6 +8226,55 @@ private int getAdapterPositionFor(ViewHolder viewHolder) {
         return mAdapterHelper.applyPendingUpdatesToPosition(viewHolder.mPosition);
     }
 
+    // NestedScrollingChild
+
+    @Override
+    public void setNestedScrollingEnabled(boolean enabled) {
+        mScrollingChildHelper.setNestedScrollingEnabled(enabled);
+    }
+
+    @Override
+    public boolean isNestedScrollingEnabled() {
+        return mScrollingChildHelper.isNestedScrollingEnabled();
+    }
+
+    @Override
+    public boolean startNestedScroll(int axes) {
+        return mScrollingChildHelper.startNestedScroll(axes);
+    }
+
+    @Override
+    public void stopNestedScroll() {
+        mScrollingChildHelper.stopNestedScroll();
+    }
+
+    @Override
+    public boolean hasNestedScrollingParent() {
+        return mScrollingChildHelper.hasNestedScrollingParent();
+    }
+
+    @Override
+    public boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,
+            int dyUnconsumed, int[] offsetInWindow) {
+        return mScrollingChildHelper.dispatchNestedScroll(dxConsumed, dyConsumed,
+                dxUnconsumed, dyUnconsumed, offsetInWindow);
+    }
+
+    @Override
+    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {
+        return mScrollingChildHelper.dispatchNestedPreScroll(dx, dy, consumed, offsetInWindow);
+    }
+
+    @Override
+    public boolean dispatchNestedFling(float velocityX, float velocityY, boolean consumed) {
+        return mScrollingChildHelper.dispatchNestedFling(velocityX, velocityY, consumed);
+    }
+
+    @Override
+    public boolean dispatchNestedPreFling(float velocityX, float velocityY) {
+        return mScrollingChildHelper.dispatchNestedPreFling(velocityX, velocityY);
+    }
+
     /**
      * {@link android.view.ViewGroup.MarginLayoutParams LayoutParams} subclass for children of
      * {@link RecyclerView}. Custom {@link LayoutManager layout managers} are encouraged
@@ -9318,4 +9731,35 @@ public void onChangeFinished(ViewHolder item, boolean oldItem) {}
             this.bottom = bottom;
         }
     }
+
+    @Override
+    protected int getChildDrawingOrder(int childCount, int i) {
+        if (mChildDrawingOrderCallback == null) {
+            return super.getChildDrawingOrder(childCount, i);
+        } else {
+            return mChildDrawingOrderCallback.onGetChildDrawingOrder(childCount, i);
+        }
+    }
+
+    /**
+     * A callback interface that can be used to alter the drawing order of RecyclerView children.
+     * <p>
+     * It works using the {@link ViewGroup#getChildDrawingOrder(int, int)} method, so any case
+     * that applies to that method also applies to this callback. For example, changing the drawing
+     * order of two views will not have any effect if their elevation values are different since
+     * elevation overrides the result of this callback.
+     */
+    public static interface ChildDrawingOrderCallback {
+        /**
+         * Returns the index of the child to draw for this iteration. Override this
+         * if you want to change the drawing order of children. By default, it
+         * returns i.
+         *
+         * @param i The current iteration.
+         * @return The index of the child to draw this iteration.
+         *
+         * @see RecyclerView#setChildDrawingOrderCallback(RecyclerView.ChildDrawingOrderCallback)
+         */
+        public int onGetChildDrawingOrder(int childCount, int i);
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/StaggeredGridLayoutManager.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/StaggeredGridLayoutManager.java
index d28434a60..166311dab 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/StaggeredGridLayoutManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/StaggeredGridLayoutManager.java
@@ -537,7 +537,6 @@ public boolean getReverseLayout() {
     @Override
     public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {
         ensureOrientationHelper();
-
         final AnchorInfo anchorInfo = mAnchorInfo;
         anchorInfo.reset();
 
@@ -577,21 +576,22 @@ public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State
         detachAndScrapAttachedViews(recycler);
         mLaidOutInvalidFullSpan = false;
         updateMeasureSpecs();
+        updateLayoutState(anchorInfo.mPosition, state);
         if (anchorInfo.mLayoutFromEnd) {
             // Layout start.
-            updateLayoutStateToFillStart(anchorInfo.mPosition, state);
+            setLayoutStateDirection(LAYOUT_START);
             fill(recycler, mLayoutState, state);
             // Layout end.
-            updateLayoutStateToFillEnd(anchorInfo.mPosition, state);
-            mLayoutState.mCurrentPosition += mLayoutState.mItemDirection;
+            setLayoutStateDirection(LAYOUT_END);
+            mLayoutState.mCurrentPosition = anchorInfo.mPosition + mLayoutState.mItemDirection;
             fill(recycler, mLayoutState, state);
         } else {
             // Layout end.
-            updateLayoutStateToFillEnd(anchorInfo.mPosition, state);
+            setLayoutStateDirection(LAYOUT_END);
             fill(recycler, mLayoutState, state);
             // Layout start.
-            updateLayoutStateToFillStart(anchorInfo.mPosition, state);
-            mLayoutState.mCurrentPosition += mLayoutState.mItemDirection;
+            setLayoutStateDirection(LAYOUT_START);
+            mLayoutState.mCurrentPosition = anchorInfo.mPosition + mLayoutState.mItemDirection;
             fill(recycler, mLayoutState, state);
         }
 
@@ -1254,40 +1254,37 @@ private void fixStartGap(RecyclerView.Recycler recycler, RecyclerView.State stat
         }
     }
 
-    private void updateLayoutStateToFillStart(int anchorPosition, RecyclerView.State state) {
+    private void updateLayoutState(int anchorPosition, RecyclerView.State state) {
         mLayoutState.mAvailable = 0;
         mLayoutState.mCurrentPosition = anchorPosition;
+        int startExtra = 0;
+        int endExtra = 0;
         if (isSmoothScrolling()) {
             final int targetPos = state.getTargetScrollPosition();
-            if (mShouldReverseLayout == targetPos < anchorPosition) {
-                mLayoutState.mExtra = 0;
-            } else {
-                mLayoutState.mExtra = mPrimaryOrientation.getTotalSpace();
+            if (targetPos != NO_POSITION) {
+                if (mShouldReverseLayout == targetPos < anchorPosition) {
+                    endExtra = mPrimaryOrientation.getTotalSpace();
+                } else {
+                    startExtra = mPrimaryOrientation.getTotalSpace();
+                }
             }
-        } else {
-            mLayoutState.mExtra = 0;
         }
-        mLayoutState.mLayoutDirection = LAYOUT_START;
-        mLayoutState.mItemDirection = mShouldReverseLayout ? ITEM_DIRECTION_TAIL
-                : ITEM_DIRECTION_HEAD;
-    }
 
-    private void updateLayoutStateToFillEnd(int anchorPosition, RecyclerView.State state) {
-        mLayoutState.mAvailable = 0;
-        mLayoutState.mCurrentPosition = anchorPosition;
-        if (isSmoothScrolling()) {
-            final int targetPos = state.getTargetScrollPosition();
-            if (mShouldReverseLayout == targetPos > anchorPosition) {
-                mLayoutState.mExtra = 0;
-            } else {
-                mLayoutState.mExtra = mPrimaryOrientation.getTotalSpace();
-            }
+        // Line of the furthest row.
+        final boolean clipToPadding = getClipToPadding();
+        if (clipToPadding) {
+            mLayoutState.mStartLine = mPrimaryOrientation.getStartAfterPadding() - startExtra;
+            mLayoutState.mEndLine = mPrimaryOrientation.getEndAfterPadding() + endExtra;
         } else {
-            mLayoutState.mExtra = 0;
+            mLayoutState.mEndLine = mPrimaryOrientation.getEnd() + endExtra;
+            mLayoutState.mStartLine = -startExtra;
         }
-        mLayoutState.mLayoutDirection = LAYOUT_END;
-        mLayoutState.mItemDirection = mShouldReverseLayout ? ITEM_DIRECTION_HEAD
-                : ITEM_DIRECTION_TAIL;
+    }
+
+    private void setLayoutStateDirection(int direction) {
+        mLayoutState.mLayoutDirection = direction;
+        mLayoutState.mItemDirection = (mShouldReverseLayout == (direction == LAYOUT_START)) ?
+                ITEM_DIRECTION_TAIL : ITEM_DIRECTION_HEAD;
     }
 
     @Override
@@ -1383,31 +1380,25 @@ private int fill(RecyclerView.Recycler recycler, LayoutState layoutState,
         mRemainingSpans.set(0, mSpanCount, true);
         // The target position we are trying to reach.
         final int targetLine;
-        /*
-        * The line until which we can recycle, as long as we add views.
-        * Keep in mind, it is still the line in layout direction which means; to calculate the
-        * actual recycle line, we should subtract/add the size in orientation.
-        */
-        final int recycleLine;
+
         // Line of the furthest row.
         if (layoutState.mLayoutDirection == LAYOUT_END) {
-            // ignore padding for recycler
-            recycleLine = mPrimaryOrientation.getEndAfterPadding() + mLayoutState.mAvailable;
-            targetLine = recycleLine + mLayoutState.mExtra + mPrimaryOrientation.getEndPadding();
-
+            targetLine = layoutState.mEndLine + layoutState.mAvailable;
         } else { // LAYOUT_START
-            // ignore padding for recycler
-            recycleLine = mPrimaryOrientation.getStartAfterPadding() - mLayoutState.mAvailable;
-            targetLine = recycleLine - mLayoutState.mExtra -
-                    mPrimaryOrientation.getStartAfterPadding();
+            targetLine = layoutState.mStartLine - layoutState.mAvailable;
         }
+
         updateAllRemainingSpans(layoutState.mLayoutDirection, targetLine);
+        if (DEBUG) {
+            Log.d(TAG, "FILLING targetLine: " + targetLine + "," +
+                    "remaining spans:" + mRemainingSpans + ", state: " + layoutState);
+        }
 
         // the default coordinate to add new view.
         final int defaultNewViewLine = mShouldReverseLayout
                 ? mPrimaryOrientation.getEndAfterPadding()
                 : mPrimaryOrientation.getStartAfterPadding();
-
+        boolean added = false;
         while (layoutState.hasMore(state) && !mRemainingSpans.isEmpty()) {
             View view = layoutState.next(recycler);
             LayoutParams lp = ((LayoutParams) view.getLayoutParams());
@@ -1500,18 +1491,21 @@ private int fill(RecyclerView.Recycler recycler, LayoutState layoutState,
             } else {
                 updateRemainingSpans(currentSpan, mLayoutState.mLayoutDirection, targetLine);
             }
-            recycle(recycler, mLayoutState, currentSpan, recycleLine);
+            recycle(recycler, mLayoutState);
+            added = true;
         }
-        if (DEBUG) {
-            Log.d(TAG, "fill, " + getChildCount());
+        if (!added) {
+            recycle(recycler, mLayoutState);
         }
+        final int diff;
         if (mLayoutState.mLayoutDirection == LAYOUT_START) {
             final int minStart = getMinStart(mPrimaryOrientation.getStartAfterPadding());
-            return Math.max(0, mLayoutState.mAvailable + (recycleLine - minStart));
+            diff = mPrimaryOrientation.getStartAfterPadding() - minStart;
         } else {
-            final int max = getMaxEnd(mPrimaryOrientation.getEndAfterPadding());
-            return Math.max(0, mLayoutState.mAvailable + (max - recycleLine));
+            final int maxEnd = getMaxEnd(mPrimaryOrientation.getEndAfterPadding());
+            diff = maxEnd - mPrimaryOrientation.getEndAfterPadding();
         }
+        return diff > 0 ? Math.min(layoutState.mAvailable, diff) : 0;
     }
 
     private LazySpanLookup.FullSpanItem createFullSpanItemFromEnd(int newItemTop) {
@@ -1548,19 +1542,40 @@ private void attachViewToSpans(View view, LayoutParams lp, LayoutState layoutSta
         }
     }
 
-    private void recycle(RecyclerView.Recycler recycler, LayoutState layoutState,
-            Span updatedSpan, int recycleLine) {
-        if (layoutState.mLayoutDirection == LAYOUT_START) {
-            // calculate recycle line
-            int maxStart = getMaxStart(updatedSpan.getStartLine());
-            recycleFromEnd(recycler, Math.max(recycleLine, maxStart) +
-                    (mPrimaryOrientation.getEnd() - mPrimaryOrientation.getStartAfterPadding()));
+    private void recycle(RecyclerView.Recycler recycler, LayoutState layoutState) {
+        if (layoutState.mAvailable == 0) {
+            // easy, recycle line is still valid
+            if (layoutState.mLayoutDirection == LAYOUT_START) {
+                recycleFromEnd(recycler, layoutState.mEndLine);
+            } else {
+                recycleFromStart(recycler, layoutState.mStartLine);
+            }
         } else {
-            // calculate recycle line
-            int minEnd = getMinEnd(updatedSpan.getEndLine());
-            recycleFromStart(recycler, Math.min(recycleLine, minEnd) -
-                    (mPrimaryOrientation.getEnd() - mPrimaryOrientation.getStartAfterPadding()));
+            // scrolling case, recycle line can be shifted by how much space we could cover
+            // by adding new views
+            if (layoutState.mLayoutDirection == LAYOUT_START) {
+                // calculate recycle line
+                int scrolled = layoutState.mStartLine - getMaxStart(layoutState.mStartLine);
+                final int line;
+                if (scrolled < 0) {
+                    line = layoutState.mEndLine;
+                } else {
+                    line = layoutState.mEndLine - Math.min(scrolled, layoutState.mAvailable);
+                }
+                recycleFromEnd(recycler, line);
+            } else {
+                // calculate recycle line
+                int scrolled = getMinEnd(layoutState.mEndLine) - layoutState.mEndLine;
+                final int line;
+                if (scrolled < 0) {
+                    line = layoutState.mStartLine;
+                } else {
+                    line = layoutState.mStartLine + Math.min(scrolled, layoutState.mAvailable);
+                }
+                recycleFromStart(recycler, line);
+            }
         }
+
     }
 
     private void appendViewToAllSpans(View view) {
@@ -1602,12 +1617,12 @@ private void updateRemainingSpans(Span span, int layoutDir, int targetLine) {
         final int deletedSize = span.getDeletedSize();
         if (layoutDir == LAYOUT_START) {
             final int line = span.getStartLine();
-            if (line + deletedSize < targetLine) {
+            if (line + deletedSize <= targetLine) {
                 mRemainingSpans.set(span.mIndex, false);
             }
         } else {
             final int line = span.getEndLine();
-            if (line - deletedSize > targetLine) {
+            if (line - deletedSize >= targetLine) {
                 mRemainingSpans.set(span.mIndex, false);
             }
         }
@@ -1678,18 +1693,24 @@ private int getMinEnd(int def) {
     }
 
     private void recycleFromStart(RecyclerView.Recycler recycler, int line) {
-        if (DEBUG) {
-            Log.d(TAG, "recycling from start for line " + line);
-        }
         while (getChildCount() > 0) {
             View child = getChildAt(0);
-            if (mPrimaryOrientation.getDecoratedEnd(child) < line) {
+            if (mPrimaryOrientation.getDecoratedEnd(child) <= line) {
                 LayoutParams lp = (LayoutParams) child.getLayoutParams();
+                // Don't recycle the last View in a span not to lose span's start/end lines
                 if (lp.mFullSpan) {
+                    for (int j = 0; j < mSpanCount; j++) {
+                        if (mSpans[j].mViews.size() == 1) {
+                            return;
+                        }
+                    }
                     for (int j = 0; j < mSpanCount; j++) {
                         mSpans[j].popStart();
                     }
                 } else {
+                    if (lp.mSpan.mViews.size() == 1) {
+                        return;
+                    }
                     lp.mSpan.popStart();
                 }
                 removeAndRecycleView(child, recycler);
@@ -1704,13 +1725,22 @@ private void recycleFromEnd(RecyclerView.Recycler recycler, int line) {
         int i;
         for (i = childCount - 1; i >= 0; i--) {
             View child = getChildAt(i);
-            if (mPrimaryOrientation.getDecoratedStart(child) > line) {
+            if (mPrimaryOrientation.getDecoratedStart(child) >= line) {
                 LayoutParams lp = (LayoutParams) child.getLayoutParams();
+                // Don't recycle the last View in a span not to lose span's start/end lines
                 if (lp.mFullSpan) {
+                    for (int j = 0; j < mSpanCount; j++) {
+                        if (mSpans[j].mViews.size() == 1) {
+                            return;
+                        }
+                    }
                     for (int j = 0; j < mSpanCount; j++) {
                         mSpans[j].popEnd();
                     }
                 } else {
+                    if (lp.mSpan.mViews.size() == 1) {
+                        return;
+                    }
                     lp.mSpan.popEnd();
                 }
                 removeAndRecycleView(child, recycler);
@@ -1860,21 +1890,19 @@ public void scrollToPositionWithOffset(int position, int offset) {
     int scrollBy(int dt, RecyclerView.Recycler recycler, RecyclerView.State state) {
         ensureOrientationHelper();
         final int referenceChildPosition;
+        final int layoutDir;
         if (dt > 0) { // layout towards end
-            mLayoutState.mLayoutDirection = LAYOUT_END;
-            mLayoutState.mItemDirection = mShouldReverseLayout ? ITEM_DIRECTION_HEAD
-                    : ITEM_DIRECTION_TAIL;
+            layoutDir = LAYOUT_END;
             referenceChildPosition = getLastChildPosition();
         } else {
-            mLayoutState.mLayoutDirection = LAYOUT_START;
-            mLayoutState.mItemDirection = mShouldReverseLayout ? ITEM_DIRECTION_TAIL
-                    : ITEM_DIRECTION_HEAD;
+            layoutDir = LAYOUT_START;
             referenceChildPosition = getFirstChildPosition();
         }
+        updateLayoutState(referenceChildPosition, state);
+        setLayoutStateDirection(layoutDir);
         mLayoutState.mCurrentPosition = referenceChildPosition + mLayoutState.mItemDirection;
         final int absDt = Math.abs(dt);
         mLayoutState.mAvailable = absDt;
-        mLayoutState.mExtra = isSmoothScrolling() ? mPrimaryOrientation.getTotalSpace() : 0;
         int consumed = fill(recycler, mLayoutState, state);
         final int totalScroll;
         if (absDt < consumed) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/support/widget/util/SortedListAdapterCallback.java b/TMessagesProj/src/main/java/org/telegram/android/support/widget/util/SortedListAdapterCallback.java
index 44ddd667e..2457f4932 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/support/widget/util/SortedListAdapterCallback.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/support/widget/util/SortedListAdapterCallback.java
@@ -16,7 +16,7 @@
 
 package org.telegram.android.support.widget.util;
 
-import android.support.v7.util.SortedList;
+import org.telegram.android.support.util.SortedList;
 import org.telegram.android.support.widget.RecyclerView;
 
 /**
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index dd8ae6486..b74e5c271 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -31,13 +31,13 @@
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ContactsController;
-import org.telegram.android.MediaController;
-import org.telegram.android.NotificationsService;
-import org.telegram.android.SendMessagesHelper;
 import org.telegram.android.LocaleController;
+import org.telegram.android.MediaController;
 import org.telegram.android.MessagesController;
 import org.telegram.android.NativeLoader;
+import org.telegram.android.NotificationsService;
 import org.telegram.android.ScreenReceiver;
+import org.telegram.android.SendMessagesHelper;
 import org.telegram.ui.Components.ForegroundDetector;
 
 import java.io.File;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
index 928d5e572..3f1dafe5b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
@@ -363,7 +363,7 @@ public void run() {
                     try {
                         SerializedData data = new SerializedData(configFile);
                         isTestBackend = data.readInt32(false);
-                        int version = data.readInt32(false);
+                        data.readInt32(false);
                         sessionsToDestroy.clear();
                         int count = data.readInt32(false);
                         for (int a = 0; a < count; a++) {
@@ -2700,7 +2700,7 @@ public void run() {
                 return;
             }
 
-            int messageLength = data.readInt32(false);
+            data.readInt32(false);
 
             TLObject message = deserialize(getRequestWithMessageId(messageId), data, true);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
index ba544e8be..0e5753df8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
@@ -28,6 +28,7 @@
     private final static int stateFinished = 3;
 
     private final static int downloadChunkSize = 1024 * 32;
+    private final static int downloadChunkSizeBig = 1024 * 128;
     private final static int maxDownloadRequests = 3;
 
     private int datacenter_id;
@@ -38,6 +39,7 @@
     private FileLoadOperationDelegate delegate;
     private byte[] key;
     private byte[] iv;
+    private int currentDownloadChunkSize;
 
     private int nextDownloadOffset = 0;
     private ArrayList<RequestInfo> requestInfos = new ArrayList<>(maxDownloadRequests);
@@ -171,6 +173,7 @@ public void start() {
         if (state != stateIdle) {
             return;
         }
+        currentDownloadChunkSize = totalBytesCount >= 1024 * 1024 * 30 ? downloadChunkSizeBig : downloadChunkSize;
         state = stateDownloading;
         if (location == null) {
             Utilities.stageQueue.postRunnable(new Runnable() {
@@ -181,7 +184,6 @@ public void run() {
             });
             return;
         }
-        Long mediaId = null;
         String fileNameFinal;
         String fileNameTemp;
         String fileNameIv = null;
@@ -239,7 +241,7 @@ public void run() {
             cacheFileTemp = new File(tempPath, fileNameTemp);
             if (cacheFileTemp.exists()) {
                 downloadedBytes = (int)cacheFileTemp.length();
-                nextDownloadOffset = downloadedBytes = downloadedBytes / 1024 * 1024;
+                nextDownloadOffset = downloadedBytes = downloadedBytes / currentDownloadChunkSize * currentDownloadChunkSize;
             }
             if (fileNameIv != null) {
                 cacheIvTemp = new File(tempPath, fileNameIv);
@@ -404,10 +406,10 @@ private void processRequestResult(RequestInfo requestInfo, TLRPC.TL_error error)
                     }
                 }
 
-                if (currentBytesSize != downloadChunkSize) {
+                if (currentBytesSize != currentDownloadChunkSize) {
                     onFinishLoadingFile();
                 } else {
-                    if (totalBytesCount != downloadedBytes && downloadedBytes % downloadChunkSize == 0 || totalBytesCount > 0 && totalBytesCount > downloadedBytes) {
+                    if (totalBytesCount != downloadedBytes && downloadedBytes % currentDownloadChunkSize == 0 || totalBytesCount > 0 && totalBytesCount > downloadedBytes) {
                         startDownloadRequest();
                     } else {
                         onFinishLoadingFile();
@@ -438,7 +440,7 @@ private void processRequestResult(RequestInfo requestInfo, TLRPC.TL_error error)
                     startDownloadRequest();
                 }
             } else if (error.text.contains("OFFSET_INVALID")) {
-                if (downloadedBytes % downloadChunkSize == 0) {
+                if (downloadedBytes % currentDownloadChunkSize == 0) {
                     try {
                         onFinishLoadingFile();
                     } catch (Exception e) {
@@ -476,12 +478,12 @@ private void startDownloadRequest() {
             if (totalBytesCount > 0 && nextDownloadOffset >= totalBytesCount) {
                 break;
             }
-            boolean isLast = totalBytesCount <= 0 || a == count - 1 || totalBytesCount > 0 && nextDownloadOffset + downloadChunkSize >= totalBytesCount;
+            boolean isLast = totalBytesCount <= 0 || a == count - 1 || totalBytesCount > 0 && nextDownloadOffset + currentDownloadChunkSize >= totalBytesCount;
             TLRPC.TL_upload_getFile req = new TLRPC.TL_upload_getFile();
             req.location = location;
             req.offset = nextDownloadOffset;
-            req.limit = downloadChunkSize;
-            nextDownloadOffset += downloadChunkSize;
+            req.limit = currentDownloadChunkSize;
+            nextDownloadOffset += currentDownloadChunkSize;
 
             final RequestInfo requestInfo = new RequestInfo();
             requestInfos.add(requestInfo);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
index b6bb1a1b2..7cc6454fe 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
@@ -679,6 +679,15 @@ public static File getPathToAttach(TLObject attach, String ext, boolean forceCac
         return closestObject;
     }
 
+    public static String getFileExtension(File file) {
+        String name = file.getName();
+        try {
+            return name.substring(name.lastIndexOf(".") + 1);
+        } catch (Exception e) {
+            return "";
+        }
+    }
+
     public static String getDocumentFileName(TLRPC.Document document) {
         if (document != null) {
             if (document.file_name != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java b/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
index 7043dca59..b99706fe0 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/HandshakeAction.java
@@ -637,7 +637,7 @@ public void tcpConnectionReceivedData(TcpConnection connection, ByteBufferDesc d
                 FileLog.d("tmessages", String.format("===== Duplicate message id %d received, ignoring", messageId));
                 return;
             }
-            int messageLength = data.readInt32(false);
+            data.readInt32(false);
 
             int constructor = data.readInt32(false);
             TLObject object = TLClassStore.Instance().TLdeserialize(data, constructor, false);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index 5de616dc4..954025cc1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -11634,6 +11634,9 @@ public static MessagesFilter TLdeserialize(AbsSerializedData stream, int constru
                 case 0x9eddf188:
                     result = new TL_inputMessagesFilterDocument();
                     break;
+                case 0x5afbf764:
+                    result = new TL_inputMessagesFilterAudioDocuments();
+                    break;
                 case 0x9fc00e65:
                     result = new TL_inputMessagesFilterVideo();
                     break;
@@ -11672,6 +11675,15 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
+    public static class TL_inputMessagesFilterAudioDocuments extends MessagesFilter {
+        public static int constructor = 0x5afbf764;
+
+
+        public void serializeToStream(AbsSerializedData stream) {
+            stream.writeInt32(constructor);
+        }
+    }
+
     public static class TL_inputMessagesFilterVideo extends MessagesFilter {
         public static int constructor = 0x9fc00e65;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java b/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
index 217e63fb1..417d5c4e5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TcpConnection.java
@@ -143,7 +143,7 @@ public void run() {
                         FileLog.e("tmessages", e2);
                     }
 
-                    FileLog.d("tmessages", String.format(TcpConnection.this + " Connecting (%s:%d)", hostAddress, hostPort));
+                    FileLog.d("tmessages", String.format(TcpConnection.this + " Connecting (%s:%d), connection class %d", hostAddress, hostPort, transportRequestClass));
                     firstPacket = true;
                     if (restOfTheData != null) {
                         BuffersStorage.getInstance().reuseFreeBuffer(restOfTheData);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
index 5cf1f2c24..257237e9b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
@@ -15,7 +15,6 @@
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
@@ -23,6 +22,7 @@
 import android.widget.TextView;
 
 import org.telegram.android.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -38,7 +38,6 @@ public boolean canOpenMenu() {
         }
     }
 
-    private FrameLayout titleFrameLayout;
     private ImageView backButtonImageView;
     private TextView titleTextView;
     private TextView subTitleTextView;
@@ -60,116 +59,6 @@ public boolean canOpenMenu() {
 
     public ActionBar(Context context) {
         super(context);
-        titleFrameLayout = new FrameLayout(context);
-        addView(titleFrameLayout);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)titleFrameLayout.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-        titleFrameLayout.setLayoutParams(layoutParams);
-        titleFrameLayout.setPadding(0, 0, AndroidUtilities.dp(4), 0);
-        titleFrameLayout.setEnabled(false);
-    }
-
-    private void positionBackImage(int height) {
-        if (backButtonImageView != null) {
-            LayoutParams layoutParams = (LayoutParams)backButtonImageView.getLayoutParams();
-            layoutParams.width = AndroidUtilities.dp(54);
-            layoutParams.height = height;
-            layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-            backButtonImageView.setLayoutParams(layoutParams);
-        }
-    }
-
-    private void positionTitle(int width, int height) {
-        int offset = AndroidUtilities.dp(2);
-        if (!AndroidUtilities.isTablet() && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
-            offset = AndroidUtilities.dp(1);
-        }
-        int maxTextWidth = 0;
-
-        LayoutParams layoutParams;
-
-        if (titleTextView != null && titleTextView.getVisibility() == VISIBLE) {
-            if (!AndroidUtilities.isTablet() && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
-                titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
-            } else {
-                titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
-            }
-
-            layoutParams = (LayoutParams) titleTextView.getLayoutParams();
-            layoutParams.width = LayoutHelper.WRAP_CONTENT;
-            layoutParams.height = LayoutHelper.WRAP_CONTENT;
-            layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-            titleTextView.setLayoutParams(layoutParams);
-            titleTextView.measure(width, height);
-            maxTextWidth = titleTextView.getMeasuredWidth();
-        }
-        if (subTitleTextView != null && subTitleTextView.getVisibility() == VISIBLE) {
-            if (!AndroidUtilities.isTablet() && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
-                subTitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
-            } else {
-                subTitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-            }
-
-            layoutParams = (LayoutParams) subTitleTextView.getLayoutParams();
-            layoutParams.width = LayoutHelper.WRAP_CONTENT;
-            layoutParams.height = LayoutHelper.WRAP_CONTENT;
-            layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-            subTitleTextView.setLayoutParams(layoutParams);
-            subTitleTextView.measure(width, height);
-            maxTextWidth = Math.max(maxTextWidth, subTitleTextView.getMeasuredWidth());
-        }
-
-        int x;
-        if (backButtonImageView != null && backButtonImageView.getVisibility() == VISIBLE) {
-            x = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 80 : 72);
-        } else {
-            x = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 26 : 18);
-        }
-
-        if (menu != null) {
-            maxTextWidth = Math.min(maxTextWidth, width - menu.getMeasuredWidth() - AndroidUtilities.dp(16) - x);
-        }
-
-        if (titleTextView != null && titleTextView.getVisibility() == VISIBLE) {
-            layoutParams = (LayoutParams) titleTextView.getLayoutParams();
-            layoutParams.width = LayoutHelper.MATCH_PARENT;
-            layoutParams.height = titleTextView.getMeasuredHeight();
-            int y;
-            if (subTitleTextView != null && subTitleTextView.getVisibility() == VISIBLE) {
-                y = (height / 2 - titleTextView.getMeasuredHeight()) / 2 + offset;
-            } else {
-                y = (height - titleTextView.getMeasuredHeight()) / 2 - AndroidUtilities.dp(1);
-            }
-            layoutParams.setMargins(x, y, 0, 0);
-            titleTextView.setLayoutParams(layoutParams);
-        }
-        if (subTitleTextView != null && subTitleTextView.getVisibility() == VISIBLE) {
-            layoutParams = (LayoutParams) subTitleTextView.getLayoutParams();
-            layoutParams.width = LayoutHelper.MATCH_PARENT;
-            layoutParams.height = subTitleTextView.getMeasuredHeight();
-            layoutParams.setMargins(x, height / 2 + (height / 2 - subTitleTextView.getMeasuredHeight()) / 2 - offset, 0, 0);
-            subTitleTextView.setLayoutParams(layoutParams);
-        }
-
-        MarginLayoutParams layoutParams1 = (MarginLayoutParams) titleFrameLayout.getLayoutParams();
-        layoutParams1.width = x + maxTextWidth + (isSearchFieldVisible ? 0 : AndroidUtilities.dp(6));
-        layoutParams1.topMargin = occupyStatusBar ? AndroidUtilities.statusBarHeight : 0;
-        titleFrameLayout.setLayoutParams(layoutParams1);
-    }
-
-    public void positionMenu(int width, int height) {
-        if (menu == null) {
-            return;
-        }
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)menu.getLayoutParams();
-        layoutParams.width = isSearchFieldVisible ? LayoutHelper.MATCH_PARENT : LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = height;
-        layoutParams.leftMargin = isSearchFieldVisible ? AndroidUtilities.dp(AndroidUtilities.isTablet() ? 74 : 66) : 0;
-        layoutParams.topMargin = occupyStatusBar ? AndroidUtilities.statusBarHeight : 0;
-        menu.setLayoutParams(layoutParams);
-        menu.measure(width, height);
     }
 
     private void createBackButtonImage() {
@@ -177,9 +66,10 @@ private void createBackButtonImage() {
             return;
         }
         backButtonImageView = new ImageView(getContext());
-        titleFrameLayout.addView(backButtonImageView);
         backButtonImageView.setScaleType(ImageView.ScaleType.CENTER);
         backButtonImageView.setBackgroundResource(itemsBackgroundResourceId);
+        addView(backButtonImageView, LayoutHelper.createFrame(54, 54, Gravity.LEFT | Gravity.TOP));
+
         backButtonImageView.setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -195,31 +85,19 @@ public void onClick(View v) {
     }
 
     public void setBackButtonDrawable(Drawable drawable) {
-        boolean reposition = false;
         if (backButtonImageView == null) {
             createBackButtonImage();
-        } else {
-            reposition = true;
         }
         backButtonImageView.setVisibility(drawable == null ? GONE : VISIBLE);
         backButtonImageView.setImageDrawable(drawable);
-        if (reposition) {
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
-        }
     }
 
     public void setBackButtonImage(int resource) {
-        boolean reposition = false;
         if (backButtonImageView == null) {
             createBackButtonImage();
-        } else {
-            reposition = true;
         }
         backButtonImageView.setVisibility(resource == 0 ? GONE : VISIBLE);
         backButtonImageView.setImageResource(resource);
-        if (reposition) {
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
-        }
     }
 
     private void createSubtitleTextView() {
@@ -227,13 +105,13 @@ private void createSubtitleTextView() {
             return;
         }
         subTitleTextView = new TextView(getContext());
-        titleFrameLayout.addView(subTitleTextView);
         subTitleTextView.setGravity(Gravity.LEFT);
         subTitleTextView.setTextColor(0xffd7e8f7);
         subTitleTextView.setSingleLine(true);
         subTitleTextView.setLines(1);
         subTitleTextView.setMaxLines(1);
         subTitleTextView.setEllipsize(TextUtils.TruncateAt.END);
+        addView(subTitleTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP));
     }
 
     public void setSubtitle(CharSequence value) {
@@ -243,22 +121,6 @@ public void setSubtitle(CharSequence value) {
         if (subTitleTextView != null) {
             subTitleTextView.setVisibility(value != null && !isSearchFieldVisible ? VISIBLE : INVISIBLE);
             subTitleTextView.setText(value);
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
-        }
-    }
-
-    public void setSubTitleIcon(int resourceId, Drawable drawable, int padding) {
-        if ((resourceId != 0 || drawable != null) && subTitleTextView == null) {
-            createSubtitleTextView();
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
-        }
-        if (subTitleTextView != null) {
-            if (drawable != null) {
-                subTitleTextView.setCompoundDrawablesWithIntrinsicBounds(drawable, null, null, null);
-            } else {
-                subTitleTextView.setCompoundDrawablesWithIntrinsicBounds(resourceId, 0, 0, 0);
-            }
-            subTitleTextView.setCompoundDrawablePadding(padding);
         }
     }
 
@@ -268,39 +130,32 @@ private void createTitleTextView() {
         }
         titleTextView = new TextView(getContext());
         titleTextView.setGravity(Gravity.LEFT);
-        titleTextView.setSingleLine(true);
         titleTextView.setLines(1);
         titleTextView.setMaxLines(1);
+        titleTextView.setSingleLine(true);
         titleTextView.setEllipsize(TextUtils.TruncateAt.END);
-        titleFrameLayout.addView(titleTextView);
         titleTextView.setTextColor(0xffffffff);
         titleTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
+        addView(titleTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP));
     }
 
     public void setTitle(CharSequence value) {
-        boolean created = false;
         if (value != null && titleTextView == null) {
             createTitleTextView();
-            created = true;
         }
         if (titleTextView != null) {
             lastTitle = value;
             titleTextView.setVisibility(value != null && !isSearchFieldVisible ? VISIBLE : INVISIBLE);
             titleTextView.setText(value);
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
-            if (!created) {
-                titleTextView.setText(value);
-            }
         }
     }
 
-    public void setTitleIcon(int resourceId, int padding) {
-        if (resourceId != 0 && titleTextView == null) {
-            createTitleTextView();
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
-        }
-        titleTextView.setCompoundDrawablesWithIntrinsicBounds(resourceId, 0, 0, 0);
-        titleTextView.setCompoundDrawablePadding(padding);
+    public TextView getSubTitleTextView() {
+        return subTitleTextView;
+    }
+
+    public TextView getTitleTextView() {
+        return titleTextView;
     }
 
     public Drawable getSubTitleIcon() {
@@ -322,6 +177,7 @@ public void setTitleColor(int color) {
             titleTextView.setTextColor(color);
         }
     }
+	
     public ActionBarMenu createMenu() {
         if (menu != null) {
             return menu;
@@ -340,17 +196,6 @@ public void setActionBarMenuOnItemClick(ActionBarMenuOnItemClick listener) {
         actionBarMenuOnItemClick = listener;
     }
 
-    public void setCustomView(int resourceId) {
-        LayoutInflater li = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        View view = li.inflate(resourceId, null);
-        addView(view);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.topMargin = occupyStatusBar ? AndroidUtilities.statusBarHeight : 0;
-        view.setLayoutParams(layoutParams);
-    }
-
     public ActionBarMenu createActionMode() {
         if (actionMode != null) {
             return actionMode;
@@ -366,7 +211,7 @@ public ActionBarMenu createActionMode() {
         actionMode.setLayoutParams(layoutParams);
         actionMode.setVisibility(INVISIBLE);
 
-        if (occupyStatusBar) {
+        if (occupyStatusBar && actionModeTop == null) {
             actionModeTop = new View(getContext());
             actionModeTop.setBackgroundColor(0x99000000);
             addView(actionModeTop);
@@ -389,8 +234,14 @@ public void showActionMode() {
         if (occupyStatusBar && actionModeTop != null) {
             actionModeTop.setVisibility(VISIBLE);
         }
-        if (titleFrameLayout != null) {
-            titleFrameLayout.setVisibility(INVISIBLE);
+        if (titleTextView != null) {
+            titleTextView.setVisibility(INVISIBLE);
+        }
+        if (subTitleTextView != null) {
+            subTitleTextView.setVisibility(INVISIBLE);
+        }
+        if (backButtonImageView != null) {
+            backButtonImageView.setVisibility(INVISIBLE);
         }
         if (menu != null) {
             menu.setVisibility(INVISIBLE);
@@ -405,14 +256,33 @@ public void hideActionMode() {
         if (occupyStatusBar && actionModeTop != null) {
             actionModeTop.setVisibility(INVISIBLE);
         }
-        if (titleFrameLayout != null) {
-            titleFrameLayout.setVisibility(VISIBLE);
+        if (titleTextView != null) {
+            titleTextView.setVisibility(VISIBLE);
+        }
+        if (subTitleTextView != null) {
+            subTitleTextView.setVisibility(VISIBLE);
+        }
+        if (backButtonImageView != null) {
+            backButtonImageView.setVisibility(VISIBLE);
         }
         if (menu != null) {
             menu.setVisibility(VISIBLE);
         }
     }
 
+    public void showActionModeTop() {
+        if (occupyStatusBar && actionModeTop == null) {
+            actionModeTop = new View(getContext());
+            actionModeTop.setBackgroundColor(0x99000000);
+            addView(actionModeTop);
+            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) actionModeTop.getLayoutParams();
+            layoutParams.height = AndroidUtilities.statusBarHeight;
+            layoutParams.width = LayoutHelper.MATCH_PARENT;
+            layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
+            actionModeTop.setLayoutParams(layoutParams);
+        }
+    }
+
     public boolean isActionModeShowed() {
         return actionMode != null && actionMode.getVisibility() == VISIBLE;
     }
@@ -447,12 +317,136 @@ public void openSearchField(String text) {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        int actionBarHeight = AndroidUtilities.getCurrentActionBarHeight();
-        positionBackImage(actionBarHeight);
-        positionMenu(MeasureSpec.getSize(widthMeasureSpec), actionBarHeight);
-        positionTitle(MeasureSpec.getSize(widthMeasureSpec), actionBarHeight);
-        actionBarHeight += occupyStatusBar ? AndroidUtilities.statusBarHeight : 0;
-        super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(actionBarHeight + extraHeight, MeasureSpec.EXACTLY));
+        int width = MeasureSpec.getSize(widthMeasureSpec);
+        int height = MeasureSpec.getSize(heightMeasureSpec);
+        int actionBarHeight = getCurrentActionBarHeight();
+        int actionBarHeightSpec = MeasureSpec.makeMeasureSpec(actionBarHeight, MeasureSpec.EXACTLY);
+
+        setMeasuredDimension(width, actionBarHeight + extraHeight + (occupyStatusBar ? AndroidUtilities.statusBarHeight : 0));
+
+        int textLeft;
+        if (backButtonImageView != null && backButtonImageView.getVisibility() != GONE) {
+            backButtonImageView.measure(MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(54), MeasureSpec.EXACTLY), actionBarHeightSpec);
+            textLeft = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 80 : 72);
+        } else {
+            textLeft = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 26 : 18);
+        }
+
+        if (menu != null && menu.getVisibility() != GONE) {
+            int menuWidth;
+            if (isSearchFieldVisible) {
+                menuWidth = MeasureSpec.makeMeasureSpec(width - AndroidUtilities.dp(AndroidUtilities.isTablet() ? 74 : 66), MeasureSpec.EXACTLY);
+            } else {
+                menuWidth = MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST);
+            }
+            menu.measure(menuWidth, actionBarHeightSpec);
+        }
+
+        if (titleTextView != null && titleTextView.getVisibility() != GONE || subTitleTextView != null && subTitleTextView.getVisibility() != GONE) {
+            int availableWidth = width - (menu != null ? menu.getMeasuredWidth() : 0) - AndroidUtilities.dp(16) - textLeft;
+
+            if (titleTextView != null && titleTextView.getVisibility() != GONE) {
+                titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, !AndroidUtilities.isTablet() && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE ? 18 : 20);
+                titleTextView.measure(MeasureSpec.makeMeasureSpec(availableWidth, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(actionBarHeight, MeasureSpec.AT_MOST));
+
+            }
+            if (subTitleTextView != null && subTitleTextView.getVisibility() != GONE) {
+                subTitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, !AndroidUtilities.isTablet() && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE ? 14 : 16);
+                subTitleTextView.measure(MeasureSpec.makeMeasureSpec(availableWidth, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(actionBarHeight, MeasureSpec.AT_MOST));
+            }
+        }
+
+        int childCount = getChildCount();
+        for (int i = 0; i < childCount; i++) {
+            View child = getChildAt(i);
+            if (child.getVisibility() == GONE || child == titleTextView || child == subTitleTextView || child == menu || child == backButtonImageView) {
+                continue;
+            }
+            measureChildWithMargins(child, widthMeasureSpec, 0, MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY), 0);
+        }
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+        int additionalTop = occupyStatusBar ? AndroidUtilities.statusBarHeight : 0;
+
+        int textLeft;
+        if (backButtonImageView != null && backButtonImageView.getVisibility() != GONE) {
+            backButtonImageView.layout(0, additionalTop, backButtonImageView.getMeasuredWidth(), additionalTop + backButtonImageView.getMeasuredHeight());
+            textLeft = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 80 : 72);
+        } else {
+            textLeft = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 26 : 18);
+        }
+
+        if (menu != null && menu.getVisibility() != GONE) {
+            int menuLeft = isSearchFieldVisible ? AndroidUtilities.dp(AndroidUtilities.isTablet() ? 74 : 66) : (right - left) - menu.getMeasuredWidth();
+            menu.layout(menuLeft, additionalTop, menuLeft + menu.getMeasuredWidth(), additionalTop + menu.getMeasuredHeight());
+        }
+
+        int offset = AndroidUtilities.dp(!AndroidUtilities.isTablet() && getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE ? 1 : 2);
+        if (titleTextView != null && titleTextView.getVisibility() != GONE) {
+            int textTop;
+            if (subTitleTextView != null && subTitleTextView.getVisibility() != GONE) {
+                textTop = (getCurrentActionBarHeight() / 2 - titleTextView.getMeasuredHeight()) / 2 + offset;
+            } else {
+                textTop = (getCurrentActionBarHeight() - titleTextView.getMeasuredHeight()) / 2 - AndroidUtilities.dp(1);
+            }
+            titleTextView.layout(textLeft, additionalTop + textTop, textLeft + titleTextView.getMeasuredWidth(), additionalTop + textTop + titleTextView.getMeasuredHeight());
+        }
+        if (subTitleTextView != null && subTitleTextView.getVisibility() != GONE) {
+            int textTop = getCurrentActionBarHeight() / 2 + (getCurrentActionBarHeight() / 2 - subTitleTextView.getMeasuredHeight()) / 2 - offset;
+            subTitleTextView.layout(textLeft, additionalTop + textTop, textLeft + subTitleTextView.getMeasuredWidth(), additionalTop + textTop + subTitleTextView.getMeasuredHeight());
+        }
+
+        int childCount = getChildCount();
+        for (int i = 0; i < childCount; i++) {
+            View child = getChildAt(i);
+            if (child.getVisibility() == GONE || child == titleTextView || child == subTitleTextView || child == menu || child == backButtonImageView) {
+                continue;
+            }
+
+            LayoutParams lp = (LayoutParams) child.getLayoutParams();
+
+            int width = child.getMeasuredWidth();
+            int height = child.getMeasuredHeight();
+            int childLeft;
+            int childTop;
+
+            int gravity = lp.gravity;
+            if (gravity == -1) {
+                gravity = Gravity.TOP | Gravity.LEFT;
+            }
+
+            final int absoluteGravity = gravity & Gravity.HORIZONTAL_GRAVITY_MASK;
+            final int verticalGravity = gravity & Gravity.VERTICAL_GRAVITY_MASK;
+
+            switch (absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK) {
+                case Gravity.CENTER_HORIZONTAL:
+                    childLeft = (right - left - width) / 2 + lp.leftMargin - lp.rightMargin;
+                    break;
+                case Gravity.RIGHT:
+                    childLeft = right - width - lp.rightMargin;
+                    break;
+                case Gravity.LEFT:
+                default:
+                    childLeft = lp.leftMargin;
+            }
+
+            switch (verticalGravity) {
+                case Gravity.TOP:
+                    childTop = lp.topMargin;
+                    break;
+                case Gravity.CENTER_VERTICAL:
+                    childTop = (bottom - top - height) / 2 + lp.topMargin - lp.bottomMargin;
+                    break;
+                case Gravity.BOTTOM:
+                    childTop = (bottom - top) - height - lp.bottomMargin;
+                    break;
+                default:
+                    childTop = lp.topMargin;
+            }
+            child.layout(childLeft, childTop, childLeft + width, childTop + height);
+        }
     }
 
     public void onMenuButtonPressed() {
@@ -482,10 +476,13 @@ public void setTitleOverlayText(String text) {
         if (titleTextView != null) {
             titleTextView.setVisibility(textToSet != null && !isSearchFieldVisible ? VISIBLE : INVISIBLE);
             titleTextView.setText(textToSet);
-            positionTitle(getMeasuredWidth(), getMeasuredHeight());
         }
     }
 
+    public boolean isSearchFieldVisible() {
+        return isSearchFieldVisible;
+    }
+
     public void setExtraHeight(int value, boolean layout) {
         extraHeight = value;
         if (layout) {
@@ -513,7 +510,7 @@ public void setItemsBackground(int resourceId) {
         if (backButtonImageView != null) {
             backButtonImageView.setBackgroundResource(itemsBackgroundResourceId);
         }
-        setBackgroundColor(AndroidUtilities.getIntColor("themeColor")); //Plus
+		setBackgroundColor(AndroidUtilities.getIntColor("themeColor")); //Plus
     }
 
     public void setCastShadows(boolean value) {
@@ -529,4 +526,14 @@ public boolean onTouchEvent(MotionEvent event) {
         super.onTouchEvent(event);
         return true;
     }
+
+    public static int getCurrentActionBarHeight() {
+        if (AndroidUtilities.isTablet()) {
+            return AndroidUtilities.dp(64);
+        } else if (ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
+            return AndroidUtilities.dp(48);
+        } else {
+            return AndroidUtilities.dp(56);
+        }
+    }
 }
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 68b3b28be..f74d7c4d9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -59,7 +59,7 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
             if (child instanceof ActionBar) {
                 return super.drawChild(canvas, child, drawingTime);
             } else {
-                boolean wasActionBar = false;
+                //boolean wasActionBar = false;
                 int actionBarHeight = 0;
                 int childCount = getChildCount();
                 for (int a = 0; a < childCount; a++) {
@@ -339,7 +339,7 @@ private void prepareForMoving(MotionEvent ev) {
         BaseFragment lastFragment = fragmentsStack.get(fragmentsStack.size() - 2);
         View fragmentView = lastFragment.fragmentView;
         if (fragmentView == null) {
-            fragmentView = lastFragment.createView(parentActivity, parentActivity.getLayoutInflater());
+            fragmentView = lastFragment.createView(parentActivity);
         } else {
             ViewGroup parent = (ViewGroup) fragmentView.getParent();
             if (parent != null) {
@@ -625,7 +625,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         fragment.setParentLayout(this);
         View fragmentView = fragment.fragmentView;
         if (fragmentView == null) {
-            fragmentView = fragment.createView(parentActivity, parentActivity.getLayoutInflater());
+            fragmentView = fragment.createView(parentActivity);
         } else {
             ViewGroup parent = (ViewGroup) fragmentView.getParent();
             if (parent != null) {
@@ -829,7 +829,7 @@ public void closeLastFragment(boolean animated) {
             previousFragment.setParentLayout(this);
             View fragmentView = previousFragment.fragmentView;
             if (fragmentView == null) {
-                fragmentView = previousFragment.createView(parentActivity, parentActivity.getLayoutInflater());
+                fragmentView = previousFragment.createView(parentActivity);
             } else {
                 ViewGroup parent = (ViewGroup) fragmentView.getParent();
                 if (parent != null) {
@@ -972,7 +972,7 @@ public void showLastFragment() {
         previousFragment.setParentLayout(this);
         View fragmentView = previousFragment.fragmentView;
         if (fragmentView == null) {
-            fragmentView = previousFragment.createView(parentActivity, parentActivity.getLayoutInflater());
+            fragmentView = previousFragment.createView(parentActivity);
         } else {
             ViewGroup parent = (ViewGroup) fragmentView.getParent();
             if (parent != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
index e1fa67f74..64cb65aaa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
@@ -36,7 +36,7 @@ public View addItemResource(int id, int resourceId) {
         View view = li.inflate(resourceId, null);
         view.setTag(id);
         addView(view);
-        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams)view.getLayoutParams();
+        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) view.getLayoutParams();
         layoutParams.height = LayoutHelper.MATCH_PARENT;
         view.setBackgroundResource(parentActionBar.itemsBackgroundResourceId);
         view.setLayoutParams(layoutParams);
@@ -78,14 +78,14 @@ public ActionBarMenuItem addItem(int id, int icon, int backgroundResource, Drawa
             menuItem.iconView.setImageResource(icon);
         }
         addView(menuItem);
-        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams)menuItem.getLayoutParams();
+        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) menuItem.getLayoutParams();
         layoutParams.height = LayoutHelper.MATCH_PARENT;
         layoutParams.width = width;
         menuItem.setLayoutParams(layoutParams);
         menuItem.setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View view) {
-                ActionBarMenuItem item = (ActionBarMenuItem)view;
+                ActionBarMenuItem item = (ActionBarMenuItem) view;
                 if (item.hasSubMenu()) {
                     if (parentActionBar.actionBarMenuOnItemClick.canOpenMenu()) {
                         item.toggleSubMenu();
@@ -93,7 +93,7 @@ public void onClick(View view) {
                 } else if (item.isSearchField()) {
                     parentActionBar.onSearchFieldVisibilityChanged(item.toggleSearch());
                 } else {
-                    onItemClick((Integer)view.getTag());
+                    onItemClick((Integer) view.getTag());
                 }
             }
         });
@@ -104,7 +104,7 @@ public void hideAllPopupMenus() {
         for (int a = 0; a < getChildCount(); a++) {
             View view = getChildAt(a);
             if (view instanceof ActionBarMenuItem) {
-                ((ActionBarMenuItem)view).closeSubMenu();
+                ((ActionBarMenuItem) view).closeSubMenu();
             }
         }
     }
@@ -126,10 +126,16 @@ public void onMenuButtonPressed() {
         for (int a = 0; a < getChildCount(); a++) {
             View view = getChildAt(a);
             if (view instanceof ActionBarMenuItem) {
-                ActionBarMenuItem item = (ActionBarMenuItem)view;
-                if (item.hasSubMenu() && item.getVisibility() == VISIBLE) {
+                ActionBarMenuItem item = (ActionBarMenuItem) view;
+                if (item.getVisibility() != VISIBLE) {
+                    continue;
+                }
+                if (item.hasSubMenu()) {
                     item.toggleSubMenu();
                     break;
+                } else if (item.overrideMenuClick) {
+                    onItemClick((Integer) item.getTag());
+                    break;
                 }
             }
         }
@@ -139,7 +145,7 @@ public void closeSearchField() {
         for (int a = 0; a < getChildCount(); a++) {
             View view = getChildAt(a);
             if (view instanceof ActionBarMenuItem) {
-                ActionBarMenuItem item = (ActionBarMenuItem)view;
+                ActionBarMenuItem item = (ActionBarMenuItem) view;
                 if (item.isSearchField()) {
                     parentActionBar.onSearchFieldVisibilityChanged(item.toggleSearch());
                     break;
@@ -152,7 +158,7 @@ public void openSearchField(boolean toggle, String text) {
         for (int a = 0; a < getChildCount(); a++) {
             View view = getChildAt(a);
             if (view instanceof ActionBarMenuItem) {
-                ActionBarMenuItem item = (ActionBarMenuItem)view;
+                ActionBarMenuItem item = (ActionBarMenuItem) view;
                 if (item.isSearchField()) {
                     if (toggle) {
                         parentActionBar.onSearchFieldVisibilityChanged(item.toggleSearch());
@@ -168,7 +174,7 @@ public void openSearchField(boolean toggle, String text) {
     public ActionBarMenuItem getItem(int id) {
         View v = findViewWithTag(id);
         if (v instanceof ActionBarMenuItem) {
-            return (ActionBarMenuItem)v;
+            return (ActionBarMenuItem) v;
         }
         return null;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
index 93f4ef8b8..49da2efe6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
@@ -83,6 +83,8 @@ public void onSearchPressed(EditText editText) {
     private int subMenuOpenSide = 0;
     private ActionBarMenuItemDelegate delegate;
     private boolean allowCloseAnimation = true;
+    protected boolean overrideMenuClick;
+    private boolean processedPopupClick;
 
     public ActionBarMenuItem(Context context, ActionBarMenu menu, int background) {
         super(context);
@@ -130,21 +132,23 @@ public void run() {
                 x -= location[0];
                 y -= location[1];
                 selectedMenuView = null;
-                for (int a = 0; a < popupLayout.getChildCount(); a++) {
-                    View child = popupLayout.getChildAt(a);
+                for (int a = 0; a < popupLayout.getItemsCount(); a++) {
+                    View child = popupLayout.getItemAt(a);
                     child.getHitRect(rect);
                     if ((Integer) child.getTag() < 100) {
                         if (!rect.contains((int) x, (int) y)) {
                             child.setPressed(false);
                             child.setSelected(false);
-                            if (Build.VERSION.SDK_INT >= 21) {
+                            if (Build.VERSION.SDK_INT == 21) {
                                 child.getBackground().setVisible(false, false);
                             }
                         } else {
                             child.setPressed(true);
                             child.setSelected(true);
                             if (Build.VERSION.SDK_INT >= 21) {
+                                if (Build.VERSION.SDK_INT == 21) {
                                 child.getBackground().setVisible(true, false);
+                                }
                                 child.drawableHotspotChanged(x, y - child.getTop());
                             }
                             selectedMenuView = child;
@@ -193,9 +197,6 @@ public TextView addSubItem(int id, String text, int icon) {
             rect = new Rect();
             location = new int[2];
             popupLayout = new ActionBarPopupWindow.ActionBarPopupWindowLayout(getContext());
-            popupLayout.setOrientation(LinearLayout.VERTICAL);
-            popupLayout.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8));
-            //popupLayout.setBackgroundResource(R.drawable.popup_fixed);
             popupLayout.setOnTouchListener(new OnTouchListener() {
                 @Override
                 public boolean onTouch(View v, MotionEvent event) {
@@ -253,6 +254,10 @@ public void onDispatchKeyEvent(KeyEvent keyEvent) {
             @Override
             public void onClick(View view) {
                 if (popupWindow != null && popupWindow.isShowing()) {
+                    if (processedPopupClick) {
+                        return;
+                    }
+                    processedPopupClick = true;
                     popupWindow.dismiss(allowCloseAnimation);
                 }
                 if (parentMenu != null) {
@@ -307,6 +312,7 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
                 }
             });
         }
+        processedPopupClick = false;
         popupWindow.setFocusable(true);
         if (popupLayout.getMeasuredWidth() == 0) {
             updateOrShowPopup(true, true);
@@ -372,6 +378,11 @@ public ActionBarMenuItem setIsSearchField(boolean value) {
         return setIsSearchField(value, true);
     }
 
+    public ActionBarMenuItem setOverrideMenuClick(boolean value) {
+        overrideMenuClick = value;
+        return this;
+    }
+
     public ActionBarMenuItem setIsSearchField(boolean value, boolean needClearButton) {
         if (parentMenu == null) {
             return this;
@@ -394,7 +405,8 @@ public ActionBarMenuItem setIsSearchField(boolean value, boolean needClearButton
             searchField.setSingleLine(true);
             searchField.setBackgroundResource(0);
             searchField.setPadding(0, 0, 0, 0);
-            searchField.setInputType(EditorInfo.TYPE_TEXT_FLAG_NO_SUGGESTIONS);
+            int inputType = searchField.getInputType() | EditorInfo.TYPE_TEXT_FLAG_NO_SUGGESTIONS;
+            searchField.setInputType(inputType);
             if (android.os.Build.VERSION.SDK_INT < 11) {
                 searchField.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {
                     public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
@@ -472,7 +484,7 @@ public void afterTextChanged(Editable s) {
             layoutParams2.width = LayoutHelper.MATCH_PARENT;
             layoutParams2.gravity = Gravity.CENTER_VERTICAL;
             layoutParams2.height = AndroidUtilities.dp(36);
-            layoutParams2.rightMargin = AndroidUtilities.dp(48);
+            layoutParams2.rightMargin = needClearButton ? AndroidUtilities.dp(48) : 0;
             searchField.setLayoutParams(layoutParams2);
 
             if (needClearButton) {
@@ -537,6 +549,10 @@ private void updateOrShowPopup(boolean show, boolean update) {
             }
         }
 
+        if (show) {
+            popupLayout.scrollToTop();
+        }
+
             if (subMenuOpenSide == 0) {
                 if (showFromBottom) {
                 if (show) {
@@ -584,10 +600,6 @@ public void hideSubItem(int id) {
         if (view != null) {
             view.setVisibility(GONE);
         }
-        view = popupLayout.findViewWithTag(100 + id);
-        if (view != null) {
-            view.setVisibility(GONE);
-        }
     }
 
     public void showSubItem(int id) {
@@ -595,9 +607,5 @@ public void showSubItem(int id) {
         if (view != null) {
             view.setVisibility(VISIBLE);
         }
-        view = popupLayout.findViewWithTag(100 + id);
-        if (view != null) {
-            view.setVisibility(VISIBLE);
-        }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
index 7d6816f25..ee42b1eb9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
@@ -19,14 +19,18 @@
 import android.os.Build;
 import android.view.KeyEvent;
 import android.view.View;
+import android.view.ViewGroup;
 import android.view.ViewTreeObserver;
 import android.view.animation.DecelerateInterpolator;
+import android.widget.FrameLayout;
 import android.widget.LinearLayout;
 import android.widget.PopupWindow;
+import android.widget.ScrollView;
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.ui.Components.LayoutHelper;
 
 import java.lang.reflect.Field;
 import java.util.HashMap;
@@ -62,7 +66,7 @@ public void onScrollChanged() {
         void onDispatchKeyEvent(KeyEvent keyEvent);
     }
 
-    public static class ActionBarPopupWindowLayout extends LinearLayout {
+    public static class ActionBarPopupWindowLayout extends FrameLayout {
 
         private OnDispatchKeyEventListener mOnDispatchKeyEventListener;
         protected static Drawable backgroundDrawable;
@@ -73,13 +77,26 @@ public void onScrollChanged() {
         private boolean showedFromBotton;
         private HashMap<View, Integer> positions = new HashMap<>();
 
+        private ScrollView scrollView;
+        private LinearLayout linearLayout;
+
         public ActionBarPopupWindowLayout(Context context) {
             super(context);
-            setWillNotDraw(false);
 
             if (backgroundDrawable == null) {
                 backgroundDrawable = getResources().getDrawable(R.drawable.popup_fixed);
             }
+
+            setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8));
+            setWillNotDraw(false);
+
+            scrollView = new ScrollView(context);
+            scrollView.setVerticalScrollBarEnabled(false);
+            addView(scrollView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
+
+            linearLayout = new LinearLayout(context);
+            linearLayout.setOrientation(LinearLayout.VERTICAL);
+            scrollView.addView(linearLayout, new ScrollView.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
         }
 
         public void setShowedFromBotton(boolean value) {
@@ -106,15 +123,15 @@ public void setBackScaleX(float value) {
         public void setBackScaleY(float value) {
             backScaleY = value;
             if (animationEnabled) {
-                int count = getChildCount();
+                int count = getItemsCount();
                 int visibleCount = 0;
                 for (int a = 0; a < count; a++) {
-                    visibleCount += getChildAt(a).getVisibility() == VISIBLE ? 1 : 0;
+                    visibleCount += getItemAt(a).getVisibility() == VISIBLE ? 1 : 0;
                 }
                 int height = getMeasuredHeight() - AndroidUtilities.dp(16);
                 if (showedFromBotton) {
                     for (int a = lastStartedChild; a >= 0; a--) {
-                        View child = getChildAt(a);
+                        View child = getItemAt(a);
                         if (child.getVisibility() != VISIBLE) {
                             continue;
                         }
@@ -127,7 +144,7 @@ public void setBackScaleY(float value) {
                     }
                 } else {
                     for (int a = lastStartedChild; a < count; a++) {
-                        View child = getChildAt(a);
+                        View child = getItemAt(a);
                         if (child.getVisibility() != VISIBLE) {
                             continue;
                         }
@@ -155,6 +172,11 @@ private void startChildAnimation(View child) {
             }
         }
 
+        @Override
+        public void addView(View child) {
+            linearLayout.addView(child);
+        }
+
         public float getBackScaleX() {
             return backScaleX;
         }
@@ -183,6 +205,18 @@ protected void onDraw(Canvas canvas) {
                 backgroundDrawable.draw(canvas);
             }
         }
+
+        public int getItemsCount() {
+            return linearLayout.getChildCount();
+        }
+
+        public View getItemAt(int index) {
+            return linearLayout.getChildAt(index);
+        }
+
+        public void scrollToTop() {
+            scrollView.scrollTo(0, 0);
+        }
     }
 
     public ActionBarPopupWindow() {
@@ -269,11 +303,11 @@ public void startAnimation() {
             content.setAlpha(1.0f);
             content.setPivotX(content.getMeasuredWidth());
             content.setPivotY(0);
-            int count = content.getChildCount();
+            int count = content.getItemsCount();
             content.positions.clear();
             int visibleCount = 0;
             for (int a = 0; a < count; a++) {
-                View child = content.getChildAt(a);
+                View child = content.getItemAt(a);
                 if (child.getVisibility() != View.VISIBLE) {
                     continue;
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 80111af56..139c0ad67 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -14,7 +14,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
@@ -48,7 +47,7 @@ public BaseFragment(Bundle args) {
         classGuid = ConnectionsManager.getInstance().generateClassGuid();
     }
 
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         return null;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
index 8b0fd39e4..732e4ae3b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
@@ -30,7 +30,6 @@
 import org.telegram.android.AnimationCompat.AnimatorListenerAdapterProxy;
 import org.telegram.android.AnimationCompat.AnimatorSetProxy;
 import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.R;
 
 public class DrawerLayoutContainer extends FrameLayout {
 
@@ -384,7 +383,6 @@ public void requestDisallowInterceptTouchEvent(boolean disallowIntercept) {
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         inLayout = true;
-        final int width = r - l;
         final int childCount = getChildCount();
         for (int i = 0; i < childCount; i++) {
             final View child = getChildAt(i);
@@ -417,8 +415,6 @@ public void requestLayout() {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
-        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
         int widthSize = MeasureSpec.getSize(widthMeasureSpec);
         int heightSize = MeasureSpec.getSize(heightMeasureSpec);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java
index 8c39b844a..8efc34296 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java
@@ -72,7 +72,6 @@ public void run() {
                     updateSearchResults(new ArrayList<Country>());
                     return;
                 }
-                long time = System.currentTimeMillis();
                 ArrayList<Country> resultArray = new ArrayList<>();
 
                 String n = query.substring(0, 1);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
index 7bf933c7f..31a09f759 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Adapters;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.text.TextUtils;
 import android.view.View;
 import android.view.ViewGroup;
@@ -21,6 +22,7 @@
 import org.telegram.android.MessagesController;
 import org.telegram.android.MessagesStorage;
 import org.telegram.android.support.widget.RecyclerView;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ByteBufferDesc;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
@@ -642,6 +644,7 @@ public long getItemId(int i) {
 
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         switch (holder.getItemViewType()) {
             case 0: {
                 ProfileSearchCell cell = (ProfileSearchCell) holder.itemView;
@@ -693,6 +696,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             }
             case 1: {
                 GreySectionCell cell = (GreySectionCell) holder.itemView;
+                cell.setBackgroundColor(themePrefs.getInt("chatsRowColor", 0xfff2f2f2));
+                cell.setTextColor(themePrefs.getInt("chatsNameColor", 0xff8a8a8a));
                 if (!searchResultHashtags.isEmpty()) {
                     cell.setText(LocaleController.getString("Hashtags", R.string.Hashtags).toUpperCase());
                 }  else if (!globalSearch.isEmpty() && position == searchResult.size()) {
@@ -714,6 +719,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             }
             case 4: {
                 HashtagSearchCell cell = (HashtagSearchCell) holder.itemView;
+                cell.setTextColor(themePrefs.getInt("chatsMessageColor", 0xff000000));
                 cell.setText(searchResultHashtags.get(position - 1));
                 cell.setNeedDivider(position != searchResultHashtags.size());
                 break;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index 2d69ecd4c..0f47cf001 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Adapters;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.view.View;
 import android.view.ViewGroup;
@@ -80,11 +81,13 @@ public boolean hasStableIds() {
     @Override
     public View getView(int i, View view, ViewGroup viewGroup) {
         int type = getItemViewType(i);
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         if (type == 0) {
             if (view == null) {
                 view = new DrawerProfileCell(mContext);
             }
             ((DrawerProfileCell) view).setUser(MessagesController.getInstance().getUser(UserConfig.getClientUserId()));
+            ((DrawerProfileCell) view).refreshAvatar(themePrefs.getInt("drawerAvatarSize", 64), themePrefs.getInt("drawerAvatarRadius", 32));
         } else if (type == 1) {
             if (view == null) {
                 view = new EmptyCell(mContext, AndroidUtilities.dp(8));
@@ -99,24 +102,28 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 view = new DrawerActionCell(mContext);
             }
             DrawerActionCell actionCell = (DrawerActionCell) view;
+            actionCell.setTextColor(themePrefs.getInt("drawerOptionColor", 0xff444444));
+            actionCell.setTextSize(themePrefs.getInt("drawerOptionSize", 15));
+            //actionCell.setIconColor(themePrefs.getInt("drawerIconColor", 0xff737373));
+            int color = themePrefs.getInt("drawerIconColor", 0xff737373);
             if (i == 2) {
-                actionCell.setTextAndIcon(LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_newgroup);
+                actionCell.setTextAndIcon(LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_newgroup, color);
             } else if (i == 3) {
-                actionCell.setTextAndIcon(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret);
+                actionCell.setTextAndIcon(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_secret, color);
             } else if (i == 4) {
-                actionCell.setTextAndIcon(LocaleController.getString("NewBroadcastList", R.string.NewBroadcastList), R.drawable.menu_broadcast);
+                actionCell.setTextAndIcon(LocaleController.getString("NewBroadcastList", R.string.NewBroadcastList), R.drawable.menu_broadcast, color);
             } else if (i == contactsRow) {
-                actionCell.setTextAndIcon(LocaleController.getString("Contacts", R.string.Contacts), R.drawable.menu_contacts);
+                actionCell.setTextAndIcon(LocaleController.getString("Contacts", R.string.Contacts), R.drawable.menu_contacts, color);
             }/* else if (i == 7) {
                 actionCell.setTextAndIcon(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite);
             }*/ else if (i == themesRow) {
-                actionCell.setTextAndIcon(LocaleController.getString("Themes", R.string.Themes), R.drawable.menu_themes);
+                actionCell.setTextAndIcon(LocaleController.getString("Themes", R.string.Themes), R.drawable.menu_themes, color);
             } else if (i == themingRow) {
-                actionCell.setTextAndIcon(LocaleController.getString("Theming", R.string.Theming), R.drawable.menu_theming);
+                actionCell.setTextAndIcon(LocaleController.getString("Theming", R.string.Theming), R.drawable.menu_theming, color);
             } else if (i == settingsRow) {
-                actionCell.setTextAndIcon(LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings);
+                actionCell.setTextAndIcon(LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings, color);
             } else if (i == communityRow) {
-                actionCell.setTextAndIcon(LocaleController.getString("Community", R.string.Community), R.drawable.menu_forum);
+                actionCell.setTextAndIcon(LocaleController.getString("Community", R.string.Community), R.drawable.menu_forum, color);
             } /*else if (i == 10) {
                 actionCell.setTextAndIcon(LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help);
             }*/
@@ -126,8 +133,8 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 try {
                     PackageInfo pInfo = ApplicationLoader.applicationContext.getPackageManager().getPackageInfo(ApplicationLoader.applicationContext.getPackageName(), 0);
                     ((TextInfoCell) view).setText(String.format(Locale.US, LocaleController.getString("TelegramForAndroid", R.string.TelegramForAndroid)+" v%s (%d)", pInfo.versionName, pInfo.versionCode));
-                    //((TextInfoCell) view).setTextColor(AndroidUtilities.getIntDef("drawerVersionColor",0xffa3a3a3));
-                    //((TextInfoCell) view).setTextSize(AndroidUtilities.getIntDef("drawerVersionSize",13));
+                    ((TextInfoCell) view).setTextColor(themePrefs.getInt("drawerVersionColor", 0xffa3a3a3));
+                    ((TextInfoCell) view).setTextSize(themePrefs.getInt("drawerVersionSize", 13));
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
index 7953cbe20..d55bb67c2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
@@ -87,7 +87,7 @@ private boolean checkStickerFilesExistAndDownload() {
     }
 
     public void loadStikersForEmoji(CharSequence emoji) {
-        boolean search = emoji != null && emoji.length() != 0 && emoji.length() <= 2;
+        boolean search = emoji != null && emoji.length() > 0 && emoji.length() <= 4;
         if (search) {
             lastSticker = emoji.toString();
             HashMap<String, ArrayList<TLRPC.Document>> allStickers = StickersQuery.getAllStickers();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
index 97e358835..96f622da7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
@@ -17,7 +17,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -70,7 +69,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("BlockedUsers", R.string.BlockedUsers));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
index fba42e121..b7201bfa8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
@@ -48,8 +48,6 @@
 
     private static TextPaint textPaint;
 
-
-
     private URLSpan pressedLink;
 
     private ImageReceiver imageReceiver;
@@ -70,7 +68,6 @@
     public ChatActionCell(Context context) {
         super(context);
         if (textPaint == null) {
-
             textPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
             textPaint.setColor(0xffffffff);
             textPaint.linkColor = 0xffffffff;
@@ -186,8 +183,8 @@ public boolean onTouchEvent(MotionEvent event) {
                     final int line = textLayout.getLineForVertical((int)y);
                     final int off = textLayout.getOffsetForHorizontal(line, x);
                     final float left = textLayout.getLineLeft(line);
-                    if (left <= x && left + textLayout.getLineWidth(line) >= x) {
-                        Spannable buffer = (Spannable)currentMessageObject.messageText;
+                    if (left <= x && left + textLayout.getLineWidth(line) >= x && currentMessageObject.messageText instanceof Spannable) {
+                        Spannable buffer = (Spannable) currentMessageObject.messageText;
                         URLSpan[] link = buffer.getSpans(off, off, URLSpan.class);
 
                         if (link.length != 0) {
@@ -239,7 +236,6 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 int linesCount = textLayout.getLineCount();
                 for (int a = 0; a < linesCount; a++) {
                     float lineWidth;
-                    float lineLeft = 0;
                     try {
                         lineWidth = textLayout.getLineWidth(a);
                         textHeight = (int)Math.max(textHeight, Math.ceil(textLayout.getLineBottom(a)));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
index 87c5a71b5..e8bae160c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
@@ -21,10 +21,11 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ImageLoader;
 import org.telegram.android.MessagesController;
+import org.telegram.android.SendMessagesHelper;
 import org.telegram.messenger.FileLoader;
 import org.telegram.android.MediaController;
 import org.telegram.android.MessageObject;
-import org.telegram.ui.Components.ProgressView;
+import org.telegram.ui.Components.RadialProgress;
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.SeekBar;
 
@@ -36,10 +37,10 @@
     private static Paint circlePaint;
 
     private SeekBar seekBar;
-    private ProgressView progressView;
     private int seekBarX;
     private int seekBarY;
 
+    private RadialProgress radialProgress;
     private int buttonState = 0;
     private int buttonX;
     private int buttonY;
@@ -58,7 +59,7 @@ public ChatAudioCell(Context context) {
 
         seekBar = new SeekBar(context);
         seekBar.delegate = this;
-        progressView = new ProgressView();
+        radialProgress = new RadialProgress(this);
         drawForwardedName = true;
         /*avatarDrawable = new AvatarDrawable();
         //Chat Audio Photo
@@ -83,7 +84,7 @@ protected void onDetachedFromWindow() {
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
-        updateButtonState();
+        updateButtonState(false);
     }
 
     @Override
@@ -136,30 +137,34 @@ private void didPressedButton() {
             }
             if (result) {
                 buttonState = 1;
+                radialProgress.setBackground(getDrawableForCurrentState(), false, false);
                 invalidate();
             }
         } else if (buttonState == 1) {
             boolean result = MediaController.getInstance().pauseAudio(currentMessageObject);
             if (result) {
                 buttonState = 0;
+                radialProgress.setBackground(getDrawableForCurrentState(), false, false);
                 invalidate();
             }
         } else if (buttonState == 2) {
             FileLoader.getInstance().loadFile(currentMessageObject.messageOwner.media.audio, true);
             buttonState = 3;
+            radialProgress.setBackground(getDrawableForCurrentState(), true, false);
             invalidate();
         } else if (buttonState == 3) {
             FileLoader.getInstance().cancelLoadFile(currentMessageObject.messageOwner.media.audio);
             buttonState = 2;
+            radialProgress.setBackground(getDrawableForCurrentState(), false, false);
             invalidate();
         } else if (buttonState == 4) {
             if (currentMessageObject.isOut() && currentMessageObject.isSending()) {
                 if (delegate != null) {
                     delegate.didPressedCancelSendButton(this);
                 }
+            }
         }
     }
-    }
 
     public void updateProgress() {
         if (currentMessageObject == null) {
@@ -178,6 +183,7 @@ public void updateProgress() {
         }
         String timeString = String.format("%02d:%02d", duration / 60, duration % 60);
         if (lastTimeString == null || lastTimeString != null && !lastTimeString.equals(timeString)) {
+            lastTimeString = timeString;
             timeWidth = (int)Math.ceil(timePaint.measureText(timeString));
             timeLayout = new StaticLayout(timeString, timePaint, timeWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
         }
@@ -188,16 +194,23 @@ public void downloadAudioIfNeed() {
         if (buttonState == 2) {
             FileLoader.getInstance().loadFile(currentMessageObject.messageOwner.media.audio, true);
             buttonState = 3;
-            invalidate();
+            radialProgress.setBackground(getDrawableForCurrentState(), false, false);
         }
     }
 
-    public void updateButtonState() {
+    public void updateButtonState(boolean animated) {
         if (currentMessageObject == null) {
             return;
         }
         if (currentMessageObject.isOut() && currentMessageObject.isSending()) {
+            MediaController.getInstance().addLoadingFileObserver(currentMessageObject.messageOwner.attachPath, this);
             buttonState = 4;
+            radialProgress.setBackground(getDrawableForCurrentState(), true, animated);
+            Float progress = ImageLoader.getInstance().getFileProgress(currentMessageObject.messageOwner.attachPath);
+            if (progress == null && SendMessagesHelper.getInstance().isSendingMessage(currentMessageObject.getId())) {
+                progress = 1.0f;
+            }
+            radialProgress.setProgress(progress != null ? progress : 0, false);
         } else {
             File cacheFile = null;
             if (currentMessageObject.messageOwner.attachPath != null && currentMessageObject.messageOwner.attachPath.length() > 0) {
@@ -209,57 +222,59 @@ public void updateButtonState() {
             if (cacheFile == null) {
                 cacheFile = FileLoader.getPathToMessage(currentMessageObject.messageOwner);
             }
-        if (cacheFile.exists()) {
-            MediaController.getInstance().removeLoadingFileObserver(this);
-            boolean playing = MediaController.getInstance().isPlayingAudio(currentMessageObject);
-            if (!playing || playing && MediaController.getInstance().isAudioPaused()) {
-                buttonState = 0;
+            if (cacheFile.exists()) {
+                MediaController.getInstance().removeLoadingFileObserver(this);
+                boolean playing = MediaController.getInstance().isPlayingAudio(currentMessageObject);
+                if (!playing || playing && MediaController.getInstance().isAudioPaused()) {
+                    buttonState = 0;
+                } else {
+                    buttonState = 1;
+                }
+                radialProgress.setProgress(0, animated);
+                radialProgress.setBackground(getDrawableForCurrentState(), false, animated);
             } else {
-                buttonState = 1;
-            }
-            progressView.setProgress(0);
-        } else {
                 String fileName = currentMessageObject.getFileName();
-            MediaController.getInstance().addLoadingFileObserver(fileName, this);
-            if (!FileLoader.getInstance().isLoadingFile(fileName)) {
-                buttonState = 2;
-                progressView.setProgress(0);
-            } else {
-                buttonState = 3;
-                Float progress = ImageLoader.getInstance().getFileProgress(fileName);
-                if (progress != null) {
-                    progressView.setProgress(progress);
+                MediaController.getInstance().addLoadingFileObserver(fileName, this);
+                if (!FileLoader.getInstance().isLoadingFile(fileName)) {
+                    buttonState = 2;
+                    radialProgress.setProgress(0, animated);
+                    radialProgress.setBackground(getDrawableForCurrentState(), false, animated);
                 } else {
-                    progressView.setProgress(0);
+                    buttonState = 3;
+                    Float progress = ImageLoader.getInstance().getFileProgress(fileName);
+                    if (progress != null) {
+                        radialProgress.setProgress(progress, animated);
+                    } else {
+                        radialProgress.setProgress(0, animated);
+                    }
+                    radialProgress.setBackground(getDrawableForCurrentState(), true, animated);
                 }
             }
         }
-        }
         updateProgress();
     }
 
     @Override
     public void onFailedDownload(String fileName) {
-        updateButtonState();
+        updateButtonState(true);
     }
 
     @Override
     public void onSuccessDownload(String fileName) {
-        updateButtonState();
+        updateButtonState(true);
     }
 
     @Override
     public void onProgressDownload(String fileName, float progress) {
-        progressView.setProgress(progress);
+        radialProgress.setProgress(progress, true);
         if (buttonState != 3) {
-            updateButtonState();
+            updateButtonState(false);
         }
-        invalidate();
     }
 
     @Override
     public void onProgressUpload(String fileName, float progress, boolean isEncrypted) {
-
+        radialProgress.setProgress(progress, true);
     }
 
     @Override
@@ -291,7 +306,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             buttonX = layoutWidth - backgroundWidth + AndroidUtilities.dp(13);
             timeX = layoutWidth - backgroundWidth + AndroidUtilities.dp(66);
         } else {
-            if (isChat) {
+            if (isChat || showAvatar) {
                 seekBarX = AndroidUtilities.dp(116);
                 buttonX = AndroidUtilities.dp(74);
                 timeX = AndroidUtilities.dp(127);
@@ -304,34 +319,39 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
 
         seekBar.width = backgroundWidth - AndroidUtilities.dp(70);
         seekBar.height = AndroidUtilities.dp(30);
-        progressView.width = backgroundWidth - AndroidUtilities.dp(94);
-        progressView.height = AndroidUtilities.dp(30);
         seekBarY = AndroidUtilities.dp(11) + namesOffset;
         buttonY = AndroidUtilities.dp(13) + namesOffset;
+        radialProgress.setProgressRect(buttonX, buttonY, buttonX + AndroidUtilities.dp(40), buttonY + AndroidUtilities.dp(40));
 
         updateProgress();
     }
 
     @Override
     public void setMessageObject(MessageObject messageObject) {
-        if (currentMessageObject != messageObject || isUserDataChanged()) {
+        boolean dataChanged = currentMessageObject == messageObject && isUserDataChanged();
+        if (currentMessageObject != messageObject || dataChanged) {
             if (AndroidUtilities.isTablet()) {
-                backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat ? 102 : 50), AndroidUtilities.dp(300));
+                backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat || showAvatar ? 102 : 50), AndroidUtilities.dp(300));
             } else {
-                backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat ? 102 : 50), AndroidUtilities.dp(300));
+                backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat || showAvatar ? 102 : 50), AndroidUtilities.dp(300));
             }
 
             if (messageObject.isOut()) {
                 seekBar.type = 0;
-                progressView.setProgressColors(0xffb4e396, 0xff6ac453);
+                radialProgress.setProgressColor(0xff87bf78);
             } else {
                 seekBar.type = 1;
-                progressView.setProgressColors(0xffd9e2eb, 0xff86c5f8);
+                radialProgress.setProgressColor(0xffa2b5c7);
             }
 
             super.setMessageObject(messageObject);
         }
-        updateButtonState();
+        updateButtonState(dataChanged);
+    }
+
+    private Drawable getDrawableForCurrentState() {
+        return ResourceLoader.audioStatesDrawable[currentMessageObject.isOut() ? buttonState : buttonState + 5][0];
+        //buttonPressed ? 1 :
     }
 
     @Override
@@ -343,27 +363,18 @@ protected void onDraw(Canvas canvas) {
         }
 
         canvas.save();
-        if (buttonState == 0 || buttonState == 1) {
-            canvas.translate(seekBarX, seekBarY);
-            seekBar.draw(canvas);
-        } else {
-            canvas.translate(seekBarX + AndroidUtilities.dp(12), seekBarY);
-            progressView.draw(canvas);
-        }
+        canvas.translate(seekBarX, seekBarY);
+        seekBar.draw(canvas);
         canvas.restore();
 
-        int state = buttonState;
         if (currentMessageObject.isOut()) {
             timePaint.setColor(0xff70b15c);
             circlePaint.setColor(0xff87bf78);
         } else {
-            state += 5;
             timePaint.setColor(0xffa1aab3);
             circlePaint.setColor(0xff4195e5);
         }
-        Drawable buttonDrawable = ResourceLoader.audioStatesDrawable[state][buttonPressed ? 1 : 0];
-        setDrawableBounds(buttonDrawable, buttonX, buttonY);
-        buttonDrawable.draw(canvas);
+        radialProgress.onDraw(canvas);
 
         canvas.save();
         canvas.translate(timeX, AndroidUtilities.dp(42) + namesOffset);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index 356779270..996c5fb3d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -139,6 +139,8 @@
     protected boolean avatarAlignTop = false;
     private int avatarLeft = AndroidUtilities.dp(6);
 
+    boolean showAvatar = false;
+
     public ChatBaseCell(Context context) {
         super(context);
         if (timePaintIn == null) {
@@ -379,7 +381,9 @@ public void setMessageObject(MessageObject messageObject) {
         currentReplyPhoto = null;
 
         currentUser = MessagesController.getInstance().getUser(messageObject.messageOwner.from_id);
-        if (isChat && !messageObject.isOut()) {
+
+        //if (isChat && !messageObject.isOut()) {
+        if ((isChat || showAvatar) && !messageObject.isOut()) {
             isAvatarVisible = true;
             if (currentUser != null) {
                 if (currentUser.photo != null) {
@@ -493,7 +497,7 @@ public void setMessageObject(MessageObject messageObject) {
                 if (messageObject.isOut()) {
                     maxWidth = width - backgroundWidth - AndroidUtilities.dp(60);
                 } else {
-                    maxWidth = width - backgroundWidth - AndroidUtilities.dp(56 + (isChat ? 61 : 0));
+                    maxWidth = width - backgroundWidth - AndroidUtilities.dp(56 + (isChat || showAvatar ? 61 : 0));
                 }
             } else {
                 maxWidth = getMaxNameWidth() - AndroidUtilities.dp(22);
@@ -526,7 +530,7 @@ public void setMessageObject(MessageObject messageObject) {
                         mess = mess.substring(0, 150);
                     }
                     mess = mess.replace("\n", " ");
-                    stringFinalText = Emoji.replaceEmoji(mess, replyTextPaint.getFontMetricsInt(), AndroidUtilities.dp(14));
+                    stringFinalText = Emoji.replaceEmoji(mess, replyTextPaint.getFontMetricsInt(), AndroidUtilities.dp(14), false);
                     stringFinalText = TextUtils.ellipsize(stringFinalText, replyTextPaint, maxWidth - AndroidUtilities.dp(8), TextUtils.TruncateAt.END);
                 }
             }
@@ -657,13 +661,13 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             timeLayout = new StaticLayout(currentTimeString, currentTimePaint, timeWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             if (!media) {
                 if (!currentMessageObject.isOut()) {
-                    timeX = backgroundWidth - AndroidUtilities.dp(9) - timeWidth + (isChat ? AndroidUtilities.dp(leftBound) : 0);
+                    timeX = backgroundWidth - AndroidUtilities.dp(9) - timeWidth + (isChat || showAvatar ? AndroidUtilities.dp(leftBound) : 0);
                 } else {
                     timeX = layoutWidth - timeWidth - AndroidUtilities.dp(38.5f);
                 }
             } else {
                 if (!currentMessageObject.isOut()) {
-                    timeX = backgroundWidth - AndroidUtilities.dp(4) - timeWidth + (isChat ? AndroidUtilities.dp(leftBound) : 0);
+                    timeX = backgroundWidth - AndroidUtilities.dp(4) - timeWidth + (isChat || showAvatar ? AndroidUtilities.dp(leftBound) : 0);
                 } else {
                     timeX = layoutWidth - timeWidth - AndroidUtilities.dp(42.0f);
                 }
@@ -734,7 +738,7 @@ protected void onDraw(Canvas canvas) {
                     currentBackgroundDrawable = ResourceLoader.backgroundMediaDrawableIn;
                 }
             }
-            if (isChat) {
+            if (isChat || showAvatar) {
                 setDrawableBounds(currentBackgroundDrawable, AndroidUtilities.dp(leftBound + (!media ? 0 : 9)), AndroidUtilities.dp(1), backgroundWidth, layoutHeight - AndroidUtilities.dp(2));
             } else {
                 setDrawableBounds(currentBackgroundDrawable, (!media ? 0 : AndroidUtilities.dp(9)), AndroidUtilities.dp(1), backgroundWidth, layoutHeight - AndroidUtilities.dp(2));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java
index d3fe620d7..2aa9d9da4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java
@@ -115,7 +115,6 @@ public boolean onTouchEvent(MotionEvent event) {
         float y = event.getY();
 
         boolean result = false;
-        int side = AndroidUtilities.dp(36);
         if (event.getAction() == MotionEvent.ACTION_DOWN) {
             if (x >= avatarImage.getImageX() && x <= avatarImage.getImageX() + namesWidth + AndroidUtilities.dp(42) && y >= avatarImage.getImageY() && y <= avatarImage.getImageY() + avatarImage.getImageHeight()) {
                 avatarPressed = true;
@@ -202,6 +201,11 @@ public void setMessageObject(MessageObject messageObject) {
                 currentPhoto = null;
                 avatarDrawable.setInfo(uid, null, null, false);
             }
+            if(uid == 0) {
+                SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+                int color = themePrefs.getInt("chatContactNameColor", themePrefs.getInt("themeColor", AndroidUtilities.defColor));
+                avatarDrawable.setColor(color);
+            }
             avatarImage.setImage(currentPhoto, "50_50", avatarDrawable, null, false);
 
             String currentNameString = ContactsController.formatName(messageObject.messageOwner.media.first_name, messageObject.messageOwner.media.last_name);
@@ -258,7 +262,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         if (currentMessageObject.isOut()) {
             x = layoutWidth - backgroundWidth + AndroidUtilities.dp(8);
         } else {
-            if (isChat) {
+            if (isChat || showAvatar) {
                 x = AndroidUtilities.dp(69);
             } else {
                 x = AndroidUtilities.dp(16);
@@ -276,16 +280,31 @@ protected void onDraw(Canvas canvas) {
         }
 
         avatarImage.draw(canvas);
-
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         if (nameLayout != null) {
             canvas.save();
             canvas.translate(avatarImage.getImageX() + avatarImage.getImageWidth() + AndroidUtilities.dp(9), AndroidUtilities.dp(10) + namesOffset);
-            namePaint.setColor(AvatarDrawable.getColorForId(currentMessageObject.messageOwner.media.user_id));
+            //namePaint.setColor(AvatarDrawable.getColorForId(currentMessageObject.messageOwner.media.user_id));
+            namePaint.setColor(AvatarDrawable.getNameColorForId(currentMessageObject.messageOwner.media.user_id));
+            int id = currentMessageObject.messageOwner.media.user_id;
+            int defColor = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
+            int color = themePrefs.getInt("chatContactNameColor", defColor);
+            if(id == 0 || color != defColor){
+                namePaint.setColor(color);
+                //avatarDrawable.setColor(color);
+            }/*else{
+                //if(color == defColor){
+                    namePaint.setColor(AvatarDrawable.getNameColorForId(currentMessageObject.messageOwner.media.user_id));
+                //}else{
+                //    namePaint.setColor(color);
+                //}
+            }*/
+
             nameLayout.draw(canvas);
             canvas.restore();
         }
         if (phoneLayout != null) {
-            SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+
             int color = themePrefs.getInt("chatLTextColor", 0xff000000);
             if (currentMessageObject.isOut()) {
                 color = themePrefs.getInt("chatRTextColor", 0xff000000);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
index 004455bfe..f23675dfd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
@@ -395,7 +395,6 @@ private void didClickedImage() {
 
     private Drawable getDrawableForCurrentState() {
         if (buttonState >= 0 && buttonState < 4) {
-            Drawable currentButtonDrawable = null;
             if (currentMessageObject.type == 9 && gifDrawable == null) {
                 if (buttonState == 1 && !currentMessageObject.isSending()) {
                     return ResourceLoader.buttonStatesDrawablesDoc[2][currentMessageObject.isOut() ? 1 : 0];
@@ -618,13 +617,13 @@ public void setMessageObject(MessageObject messageObject) {
             }//Plus: member name in photos
             else if (messageObject.type == 1) {   //PHOTO
                 TLRPC.User fromUser = MessagesController.getInstance().getUser(messageObject.messageOwner.from_id);
-                String senderName = "";
+                String senderName = String.format("%s %s", fromUser.first_name, fromUser.last_name);
                 if (UserObject.isDeleted(fromUser)) {
                     senderName = "Deleted";
                 } else {
                     if (fromUser.first_name != null && fromUser.first_name.length() > 0) {
                         senderName = fromUser.first_name;
-                    } else {
+                    } else if (fromUser.last_name != null && fromUser.last_name.length() > 0){
                         senderName = fromUser.last_name;
                     }
                 }
@@ -668,7 +667,7 @@ else if (messageObject.type == 1) {   //PHOTO
                 double lon = messageObject.messageOwner.media.geo._long;
 
                 if (messageObject.messageOwner.media.title != null && messageObject.messageOwner.media.title.length() > 0) {
-                    int maxWidth = (AndroidUtilities.isTablet() ? AndroidUtilities.getMinTabletSide() : Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) - AndroidUtilities.dp((isChat && !messageObject.isOut() ? 102 : 40) + 86 + 24);
+                    int maxWidth = (AndroidUtilities.isTablet() ? AndroidUtilities.getMinTabletSide() : Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) - AndroidUtilities.dp(((isChat || showAvatar) && !messageObject.isOut() ? 102 : 40) + 86 + 24);
                     nameLayout = StaticLayoutEx.createStaticLayout(messageObject.messageOwner.media.title, locationTitlePaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth - AndroidUtilities.dp(4), 3);
                     int lineCount = nameLayout.getLineCount();
                     if (messageObject.messageOwner.media.address != null && messageObject.messageOwner.media.address.length() > 0) {
@@ -1023,7 +1022,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
                 x = layoutWidth - backgroundWidth + AndroidUtilities.dp(6);
             }
         } else {
-            if (isChat) {
+            if (isChat || showAvatar) {
                 x = AndroidUtilities.dp(67);
             } else {
                 x = AndroidUtilities.dp(15);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 1a2874fd7..9a846489d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -195,7 +195,7 @@ public boolean onTouchEvent(MotionEvent event) {
                                 pressedLink.onClick(this);
                             } else {
                                 TLRPC.WebPage webPage = currentMessageObject.messageOwner.media.webpage;
-                                if (Build.VERSION.SDK_INT >= 16 && webPage.embed_url != null && webPage.embed_url.length() != 0) {
+                                if (Build.VERSION.SDK_INT >= 19 && webPage.embed_url != null && webPage.embed_url.length() != 0) {
                                     delegate.needOpenWebView(webPage.embed_url, webPage.site_name, webPage.url, webPage.embed_width, webPage.embed_height);
                                 } else {
                                     Uri uri = Uri.parse(webPage.url);
@@ -331,7 +331,7 @@ public void setMessageObject(MessageObject messageObject) {
             int maxWidth;
 
             if (AndroidUtilities.isTablet()) {
-                if (isChat && !messageObject.isOut()) {
+                if ((isChat ||  showAvatar) && !messageObject.isOut()) {
                     maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(122);
                     drawName = true;
                 } else {
@@ -339,7 +339,7 @@ public void setMessageObject(MessageObject messageObject) {
                     drawName = false;
                 }
             } else {
-                if (isChat && !messageObject.isOut()) {
+                if ((isChat || showAvatar) && !messageObject.isOut()) {
                     maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(122);
                     drawName = true;
                 } else {
@@ -538,7 +538,7 @@ public void setMessageObject(MessageObject messageObject) {
 
                 if (webPage.photo != null) {
                     boolean smallImage = webPage.type != null && (webPage.type.equals("app") || webPage.type.equals("profile") || webPage.type.equals("article"));
-                    if (smallImage && descriptionLayout != null && descriptionLayout.getLineCount() == 1) {
+                    if (smallImage && (descriptionLayout == null || descriptionLayout != null && descriptionLayout.getLineCount() == 1)) {
                         smallImage = false;
                         isSmallImage = false;
                     }
@@ -665,7 +665,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             textX = layoutWidth - backgroundWidth + AndroidUtilities.dp(10);
             textY = AndroidUtilities.dp(10) + namesOffset;
         } else {
-            textX = AndroidUtilities.dp(19) + (isChat ? AndroidUtilities.dp(52) : 0);
+            textX = AndroidUtilities.dp(19) + (isChat || showAvatar ? AndroidUtilities.dp(52) : 0);
             textY = AndroidUtilities.dp(10) + namesOffset;
         }
     }
@@ -681,7 +681,7 @@ protected void onDraw(Canvas canvas) {
             textX = layoutWidth - backgroundWidth + AndroidUtilities.dp(10);
             textY = AndroidUtilities.dp(10) + namesOffset;
         } else {
-            textX = AndroidUtilities.dp(19) + (isChat ? AndroidUtilities.dp(52) : 0);
+            textX = AndroidUtilities.dp(19) + (isChat || showAvatar ? AndroidUtilities.dp(52) : 0);
             textY = AndroidUtilities.dp(10) + namesOffset;
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 090211046..19336c64f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -384,15 +384,7 @@ public void buildLayout() {
                         if (message.isOut()) {
                             name = LocaleController.getString("FromYou", R.string.FromYou);
                         } else {
-                            if (UserObject.isDeleted(fromUser)) {
-                                name = "Deleted";
-                            } else {
-                                if (fromUser.first_name != null && fromUser.first_name.length() > 0) {
-                                    name = fromUser.first_name;
-                                } else {
-                                    name = fromUser.last_name;
-                                }
-                            }
+                            name = UserObject.getFirstName(fromUser);
                         }
                         checkMessage = false;
                         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
@@ -408,13 +400,13 @@ public void buildLayout() {
                                 mess = mess.substring(0, 150);
                             }
                             mess = mess.replace("\n", " ");
-                            //messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff808080>%s</c>", name, mess)), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20));
-                            messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c" + hexDarkColor + ">%s:</c> <c" + hexMsgColor + ">%s</c>", name, mess)), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20));
+                            //messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff808080>%s</c>", name, mess), AndroidUtilities.FLAG_TAG_COLOR), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
+                            messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c" + hexDarkColor + ">%s:</c> <c" + hexMsgColor + ">%s</c>", name, mess), AndroidUtilities.FLAG_TAG_COLOR), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
                         } else {
                             if (message.messageOwner.media != null && !message.isMediaEmpty()) {
                                 currentMessagePaint = messagePrintingPaint;
-                                //messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff4d83b3>%s</c>", name, message.messageText)), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20));
-                                messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c" + hexDarkColor + ">%s:</c> <c" + hexMediaColor + ">%s</c>", name, message.messageText)), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20));
+                                //messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff4d83b3>%s</c>", name, message.messageText)), AndroidUtilities.FLAG_TAG_COLOR), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
+                                messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c" + hexDarkColor + ">%s:</c> <c" + hexMediaColor + ">%s</c>", name, message.messageText), AndroidUtilities.FLAG_TAG_COLOR), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
                             } else {
                                 if (message.messageOwner.message != null) {
                                     String mess = message.messageOwner.message;
@@ -422,8 +414,8 @@ public void buildLayout() {
                                         mess = mess.substring(0, 150);
                                     }
                                     mess = mess.replace("\n", " ");
-                                    //messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff808080>%s</c>", name, mess)), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20));
-                                    messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c" + hexDarkColor + ">%s:</c> <c" + hexMsgColor + ">%s</c>", name, mess)), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20));
+                                    //messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff808080>%s</c>", name, mess)), AndroidUtilities.FLAG_TAG_COLOR), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
+                                    messageString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c" + hexDarkColor + ">%s:</c> <c" + hexMsgColor + ">%s</c>", name, mess), AndroidUtilities.FLAG_TAG_COLOR), messagePaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
                                 }
                             }
                         }
@@ -624,7 +616,7 @@ public void buildLayout() {
                 mess = mess.substring(0, 150);
             }
             mess = mess.replace("\n", " ");
-            messageString = Emoji.replaceEmoji(mess, messagePaint.getFontMetricsInt(), AndroidUtilities.dp(17));
+            messageString = Emoji.replaceEmoji(mess, messagePaint.getFontMetricsInt(), AndroidUtilities.dp(17), false);
         }
         messageWidth = Math.max(AndroidUtilities.dp(12), messageWidth);
         CharSequence messageStringFinal = TextUtils.ellipsize(messageString, currentMessagePaint, messageWidth - AndroidUtilities.dp(12), TextUtils.TruncateAt.END);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
index 922ff9cb5..b68d7e240 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
@@ -41,23 +41,30 @@ public DrawerActionCell(Context context) {
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(48), MeasureSpec.EXACTLY));
-        updateTheme();
     }
 
     public void setTextAndIcon(String text, int resId) {
         textView.setText(text);
-        //textView.setCompoundDrawablesWithIntrinsicBounds(resId, 0, 0, 0);
-        textView.setCompoundDrawablesWithIntrinsicBounds(getResources().getDrawable(resId), null, null, null);
+        textView.setCompoundDrawablesWithIntrinsicBounds(resId, 0, 0, 0);
     }
 
-    private void updateTheme(){
-        textView.setTextColor(AndroidUtilities.getIntDef("drawerOptionColor", 0xff444444));
-        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, AndroidUtilities.getIntDef("drawerOptionSize", 15));
+    public void setTextAndIcon(String text, int resId, int color) {
+        textView.setText(text);
+        Drawable d = getResources().getDrawable(resId);
+        d.setColorFilter(color, PorterDuff.Mode.SRC_IN);
+        textView.setCompoundDrawablesWithIntrinsicBounds(d, null, null, null);
+    }
+
+    public void setTextColor(int color) {
+        textView.setTextColor(color);
+    }
+
+    public void setTextSize(int size) {
+        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, size);
+    }
+/*
+    public void setIconColor(int color) {
         Drawable[] drawables = textView.getCompoundDrawables();
-        //if(drawables[0].getConstantState().equals(getResources().getDrawable(R.drawable.menu_themes).getConstantState())){
-        //    return;
-        //}
-        int color = AndroidUtilities.getIntDef("drawerIconColor", 0xff737373);
         if(drawables[0] != null)drawables[0].setColorFilter(color, PorterDuff.Mode.SRC_IN);
-    }
+    }*/
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
index 1df8442f4..216cff137 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
@@ -60,10 +60,10 @@ public DrawerProfileCell(Context context) {
         shadowView.setScaleType(ImageView.ScaleType.FIT_XY);
         shadowView.setImageResource(R.drawable.bottom_shadow);
         addView(shadowView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 70, Gravity.LEFT | Gravity.BOTTOM));
-
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         avatarImageView = new BackupImageView(context);
         avatarImageView.getImageReceiver().setRoundRadius(AndroidUtilities.dp(32));
-        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+
         int aSize = themePrefs.getInt("drawerAvatarSize", 64);
         //addView(avatarImageView, LayoutHelper.createFrame(64, 64, Gravity.LEFT | Gravity.BOTTOM, 16, 0, 0, 67));
         addView(avatarImageView, LayoutHelper.createFrame(aSize, aSize, Gravity.LEFT | Gravity.BOTTOM, 16, 0, 0, 67));
@@ -102,6 +102,13 @@ public void onClick(View v) {
         addView(phoneTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM, 16, 0, 16, 9));
     }
 
+    public void refreshAvatar(int size, int radius){
+        //SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+        removeView(avatarImageView);
+        avatarImageView.getImageReceiver().setRoundRadius(AndroidUtilities.dp(radius));
+        addView(avatarImageView, LayoutHelper.createFrame(size, size, Gravity.LEFT | Gravity.BOTTOM, 16, 0, 0, 67));
+    }
+
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         if (Build.VERSION.SDK_INT >= 21) {
@@ -113,7 +120,11 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 FileLog.e("tmessages", e);
             }
         }
-        updateTheme();
+        if(AndroidUtilities.getBoolMain("hideMobile")){
+            phoneTextView.setVisibility(GONE);
+        }else{
+            phoneTextView.setVisibility(VISIBLE);
+        }
     }
 
     @Override
@@ -164,8 +175,10 @@ public void setUser(TLRPC.User user) {
         AvatarDrawable avatarDrawable = new AvatarDrawable(user);
         avatarDrawable.setColor(0xff5c98cd);
         avatarImageView.setImage(photo, "50_50", avatarDrawable);
+        updateTheme();
     }
 
+
     @Override
     public void updatePhotoAtIndex(int index) {}
 
@@ -232,10 +245,15 @@ private void updateTheme(){
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("drawerNameSize", 15));
         phoneTextView.setTextColor(themePrefs.getInt("drawerPhoneColor", dColor));
         phoneTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("drawerPhoneSize", 13));
+        if(AndroidUtilities.getBoolMain("hideMobile")){
+            phoneTextView.setVisibility(GONE);
+        }else{
+            phoneTextView.setVisibility(VISIBLE);
+        }
         TLRPC.User user = MessagesController.getInstance().getUser(UserConfig.getClientUserId());
         TLRPC.FileLocation photo = null;
         if (user != null && user.photo != null && user.photo.photo_small != null ) {
-            photo = user.photo.photo_small;
+           photo = user.photo.photo_small;
         }
         AvatarDrawable avatarDrawable = new AvatarDrawable(user);
         avatarDrawable.setColor(themePrefs.getInt("drawerAvatarColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
@@ -245,10 +263,6 @@ private void updateTheme(){
 
         avatarImageView.getImageReceiver().setRoundRadius(radius);
         avatarImageView.setImage(photo, "50_50", avatarDrawable);
-        if(AndroidUtilities.getBoolMain("hideMobile")){
-            phoneTextView.setVisibility(GONE);
-        }else{
-            phoneTextView.setVisibility(VISIBLE);
-        }
+
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
index 759667bf3..5122a6c13 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
@@ -46,4 +46,5 @@ public void setText(String text) {
     public void setTextColor(int color) {
         textView.setTextColor(color);
     }
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
index 6655015ef..8ee07afd1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
@@ -39,6 +39,14 @@ public HashtagSearchCell(Context context) {
         setBackgroundResource(R.drawable.list_selector);
     }
 
+    public void setBackgroundColor(int color) {
+        setBackgroundColor(color);
+    }
+
+    public void setDividerColor(int color) {
+        paint.setColor(color);
+    }
+
     @Override
     public boolean onTouchEvent(MotionEvent event) {
         if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
index 7cc059b68..9d677bb44 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
@@ -100,7 +100,7 @@ public void didSetImage(ImageReceiver imageReceiver, boolean set, boolean thumb)
         });
 
         nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xff222222);
+        nameTextView.setTextColor(0xff212121);
         nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         nameTextView.setLines(1);
@@ -318,6 +318,9 @@ public void onSuccessDownload(String name) {
 
     @Override
     public void onProgressDownload(String fileName, float progress) {
+        if (progressView.getVisibility() != VISIBLE) {
+            updateFileExistIcon();
+        }
         progressView.setProgress(progress, true);
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
index 1646b509b..010b51a0c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
@@ -28,7 +28,7 @@ public SharedMediaSectionCell(Context context) {
         textView = new TextView(getContext());
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        textView.setTextColor(0xff222222);
+        textView.setTextColor(0xff212121);
         textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 13, 0, 13, 0));
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
index ce803d315..1f5c47eeb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
@@ -63,14 +63,14 @@ public void setSticker(TLRPC.Document document, boolean showEmoji) {
                 for (TLRPC.DocumentAttribute attribute : document.attributes) {
                     if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
                         if (attribute.alt != null && attribute.alt.length() > 0) {
-                            emojiTextView.setText(Emoji.replaceEmoji(attribute.alt, emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16)));
+                            emojiTextView.setText(Emoji.replaceEmoji(attribute.alt, emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
                             set = true;
                         }
                         break;
                     }
                 }
                 if (!set) {
-                    emojiTextView.setText(Emoji.replaceEmoji(StickersQuery.getEmojiForSticker(sticker.id), emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16)));
+                    emojiTextView.setText(Emoji.replaceEmoji(StickersQuery.getEmojiForSticker(sticker.id), emojiTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(16), false));
                 }
                 emojiTextView.setVisibility(VISIBLE);
             } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
index c7390ce27..d1a21ca6a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
@@ -37,7 +37,7 @@ public TextDetailCell(Context context) {
         textView.setMaxLines(1);
         textView.setSingleLine(true);
         textView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
-        addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, LocaleController.isRTL ? 16 : 71, 10, LocaleController.isRTL ? 16 : 71, 0));
+        addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, LocaleController.isRTL ? 16 : 71, 10, LocaleController.isRTL ? 71 : 16, 0));
 
         valueTextView = new TextView(context);
         valueTextView.setTextColor(0xff8a8a8a);
@@ -46,7 +46,7 @@ public TextDetailCell(Context context) {
         valueTextView.setMaxLines(1);
         valueTextView.setSingleLine(true);
         valueTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
-        addView(valueTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, LocaleController.isRTL ? 16 : 71, 35, LocaleController.isRTL ? 16 : 71, 0));
+        addView(valueTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT, LocaleController.isRTL ? 16 : 71, 35, LocaleController.isRTL ? 71 : 16, 0));
 
         imageView = new ImageView(context);
         imageView.setScaleType(ImageView.ScaleType.CENTER);
@@ -64,13 +64,6 @@ public void setTextAndValue(String text, String value) {
         imageView.setVisibility(INVISIBLE);
     }
 
-    public void setTextAndValueAndIcon(String text, String value, int resId) {
-        textView.setText(text);
-        valueTextView.setText(value);
-        imageView.setVisibility(VISIBLE);
-        imageView.setImageResource(resId);
-    }
-
     public void setTextAndValueAndIcon(String text, String value, Drawable drawable) {
         textView.setText(text);
         valueTextView.setText(value);
@@ -85,4 +78,11 @@ public void setTextColor(int color) {
     public void setValueColor(int color) {
         valueTextView.setTextColor(color);
     }
+
+    public void setTextAndValueAndIcon(String text, String value, int resId) {
+        textView.setText(text);
+        valueTextView.setText(value);
+        imageView.setVisibility(VISIBLE);
+        imageView.setImageResource(resId);
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
index 7bec6ac27..883e4e9dc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
@@ -16,7 +16,6 @@
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.ui.Components.LayoutHelper;
-import org.telegram.ui.LaunchActivity;
 
 public class TextInfoCell extends FrameLayout {
 
@@ -36,10 +35,10 @@ public TextInfoCell(Context context) {
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));
-        if( textView.getContext() instanceof LaunchActivity ){
-            textView.setTextColor(AndroidUtilities.getIntDef("drawerVersionColor", 0xffa3a3a3));
-            textView.setTextSize(AndroidUtilities.getIntDef("drawerVersionSize", 13));
-        }
+        //if( textView.getContext() instanceof LaunchActivity ){
+            //textView.setTextColor(AndroidUtilities.getIntDef("drawerVersionColor", 0xffa3a3a3));
+            //textView.setTextSize(AndroidUtilities.getIntDef("drawerVersionSize", 13));
+        //}
     }
 
     public void setText(String text) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
index 1056b3739..2fe8ccce3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
@@ -18,7 +18,6 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -59,7 +58,7 @@ public boolean onFragmentCreate() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setAllowOverlayTitle(true);
             actionBar.setTitle(LocaleController.getString("EditName", R.string.EditName));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
index 7f455d60e..b40039a7a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
@@ -17,7 +17,6 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -52,7 +51,7 @@
     private final static int done_button = 1;
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setAllowOverlayTitle(true);
             actionBar.setTitle(LocaleController.getString("EditName", R.string.EditName));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
index 746d97ee6..03b02522e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
@@ -27,7 +27,6 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.WindowManager;
 import android.view.animation.AccelerateDecelerateInterpolator;
@@ -105,7 +104,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setTitle(LocaleController.getString("AppName", R.string.AppName));
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
index 45a5e0b8f..eda9c17e7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
@@ -13,7 +13,6 @@
 import android.content.DialogInterface;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.ImageView;
@@ -36,7 +35,7 @@
 public class ChangePhoneHelpActivity extends BaseFragment {
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setAllowOverlayTitle(true);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index 1ece40e7b..f82d0b537 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -22,7 +22,6 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -64,7 +63,7 @@
     private final static int done_button = 1;
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setAllowOverlayTitle(true);
             actionBar.setTitle(LocaleController.getString("Username", R.string.Username));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 8e7f09a32..18d47aa92 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -14,7 +14,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.database.Cursor;
@@ -33,7 +32,6 @@
 import android.util.SparseArray;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -102,6 +100,7 @@
 import org.telegram.ui.Cells.ChatLoadingCell;
 import org.telegram.ui.Cells.ChatMediaCell;
 import org.telegram.ui.Cells.ChatMessageCell;
+import org.telegram.ui.Cells.ChatMusicCell;
 import org.telegram.ui.Cells.ChatUnreadCell;
 import org.telegram.ui.Components.AlertsCreator;
 import org.telegram.ui.Components.AvatarDrawable;
@@ -127,7 +126,7 @@
 import java.util.HashMap;
 import java.util.concurrent.Semaphore;
 
-public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate,
+public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate,
         PhotoViewer.PhotoViewerProvider {
 
     protected TLRPC.Chat currentChat;
@@ -181,6 +180,7 @@
     private ListView mentionListView;
     private AnimatorSetProxy mentionListAnimation;
     private ChatAttachView chatAttachView;
+    private BottomSheet chatAttachViewSheet;
 
     private ImageView deleteIconImageView;
     private View lineView;
@@ -287,6 +287,7 @@
     private final static int bot_help = 30;
     private final static int bot_settings = 31;
 
+
     private final static int attach_photo = 0;//6;
     private final static int attach_gallery = 1;//7;
     private final static int attach_video = 2;//8;
@@ -304,6 +305,7 @@
     private final static int search_up = 41;
     private final static int search_down = 42;
 
+    //private final static int chat_background = 50;
 
     private final static int id_chat_compose_panel = 1000;
 
@@ -336,7 +338,7 @@ public ChatActivity(Bundle args) {
     @Override
     public boolean onFragmentCreate() {
         final int chatId = arguments.getInt("chat_id", 0);
-        chat_id = chatId;
+        chat_id = chatId; //Plus
         final int userId = arguments.getInt("user_id", 0);
         final int encId = arguments.getInt("enc_id", 0);
         startLoadFromMessageId = arguments.getInt("message_id", 0);
@@ -474,6 +476,7 @@ public void run() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.removeAllMessagesFromDialog);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.audioProgressDidChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.audioDidReset);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.audioPlayStateChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.screenshotTook);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.blockedUsersDidLoaded);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileNewChunkAvailable);
@@ -577,6 +580,7 @@ public void onFragmentDestroy() {
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.botInfoDidLoaded);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.botKeyboardDidLoaded);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
+        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.audioPlayStateChanged);
 
         if (AndroidUtilities.isTablet()) {
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.openedChatChanged, dialog_id, true);
@@ -597,11 +601,14 @@ public void onFragmentDestroy() {
             chatAttachView.onDestroy();
         }
         AndroidUtilities.unlockOrientation(getParentActivity());
+        MessageObject messageObject = MediaController.getInstance().getPlayingMessageObject();
+        if (messageObject != null && !messageObject.isMusic()) {
         MediaController.getInstance().stopAudio();
     }
+    }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
 
         for (int a = 0; a < 8; a++) {
             chatMessageCellsCache.add(new ChatMessageCell(context));
@@ -614,6 +621,7 @@ public View createView(Context context, LayoutInflater inflater) {
             lastStatus = null;
             hasOwnBackground = true;
         chatAttachView = null;
+        chatAttachViewSheet = null;
 
             ResourceLoader.loadRecources(context);
 
@@ -701,7 +709,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         Bundle args = new Bundle();
                         args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 1);
-                        MessagesActivity fragment = new MessagesActivity(args);
+                    DialogsActivity fragment = new DialogsActivity(args);
                         fragment.setDelegate(ChatActivity.this);
                         presentFragment(fragment);
                     } else if (id == chat_enc_timer) {
@@ -798,20 +806,19 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         selectedMessagesCanCopyIds.clear();
                         actionBar.hideActionMode();
                         updateVisibleRows();
-                }/* else if (id == chat_menu_attach) {
+                } else if (id == chat_menu_attach) {
                     if (getParentActivity() == null) {
                         return;
                     }
-                    BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+
                     if (chatAttachView == null) {
+                        BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
                         chatAttachView = new ChatAttachView(getParentActivity());
                         chatAttachView.setDelegate(new ChatAttachView.ChatAttachViewDelegate() {
                             @Override
                             public void didPressedButton(int button) {
-                                if (visibleDialog != null) {
-                                    visibleDialog.dismiss();
-                                }
                                 if (button == 7) {
+                                    chatAttachViewSheet.dismiss();
                                     HashMap<Integer, MediaController.PhotoEntry> selectedPhotos = chatAttachView.getSelectedPhotos();
                                     if (!selectedPhotos.isEmpty()) {
                                         ArrayList<String> photos = new ArrayList<>();
@@ -824,31 +831,50 @@ public void didPressedButton(int button) {
                                         showReplyPanel(false, null, null, null, false, true);
                                     }
                                     return;
+                                } else {
+                                    chatAttachViewSheet.dismissWithButtonClick(button);
                                 }
                                 processSelectedAttach(button);
                             }
                         });
-                    }
-                    builder.setCustomView(chatAttachView);
-                    final int coords[] = new int[2];
-                    menuItem.getLocationInWindow(coords);
-                    builder.setRevealAnimation(coords[0] + menuItem.getWidth() / 2, coords[1] + menuItem.getHeight() / 2);
                     builder.setDelegate(new BottomSheet.BottomSheetDelegate() {
-                        @Override
-                        public void onOpenAnimationStart() {
-                            chatAttachView.startAnimations(coords[1] > AndroidUtilities.displaySize.y - AndroidUtilities.dp(100));
+
+                            @Override
+                            public void onRevealAnimationStart(boolean open) {
+                                chatAttachView.onRevealAnimationStart(open);
+                            }
+
+                            @Override
+                            public void onRevealAnimationProgress(boolean open, float radius, int x, int y) {
+                                chatAttachView.onRevealAnimationProgress(open, radius, x, y);
+                            }
+
+                            @Override
+                            public void onRevealAnimationEnd(boolean open) {
+                                chatAttachView.onRevealAnimationEnd(open);
                         }
 
                         @Override
                         public void onOpenAnimationEnd() {
-
+                                chatAttachView.onRevealAnimationEnd(true);
                         }
-                    });
+
+                            @Override
+                            public View getRevealView() {
+                                return menuItem;
+                            }
+                        });
+                        builder.setApplyTopPaddings(false);
+                        builder.setUseRevealAnimation();
+                        builder.setCustomView(chatAttachView);
+                        chatAttachViewSheet = builder.create();
+                    }
+
                     chatAttachView.init(ChatActivity.this);
-                    showDialog(builder.create());
-                }*/ else if (id == attach_gallery || id == attach_video || id == attach_document || id == attach_location || id == attach_photo || id == attach_audio || id == attach_contact || id == attach_sticker) {
+                    showDialog(chatAttachViewSheet);
+                }/* else if (id == attach_gallery || id == attach_video || id == attach_document || id == attach_location || id == attach_photo || id == attach_audio || id == attach_contact) {
                     processSelectedAttach(id);
-                } else if (id == bot_help) {
+                } */else if (id == bot_help) {
                     SendMessagesHelper.getInstance().sendMessage("/help", dialog_id, null, null, false);
                 } else if (id == bot_settings) {
                     SendMessagesHelper.getInstance().sendMessage("/settings", dialog_id, null, null, false);
@@ -866,12 +892,13 @@ public void onOpenAnimationEnd() {
                     MessagesSearchQuery.searchMessagesInChat(null, dialog_id, classGuid, 1);
                 } else if (id == search_down) {
                     MessagesSearchQuery.searchMessagesInChat(null, dialog_id, classGuid, 2);
-                    }
-                    else if (id == add_member) {
-                        openAddMember();
-                    }
-                }
-            });
+                } else if (id == add_member) { //Plus
+                    openAddMember();
+                } /*else if (id == chat_background) { //Plus
+                    presentFragment(new WallpapersActivity());
+                }*/
+            }
+        });
 
         avatarContainer = new FrameLayoutFixed(context);
             avatarContainer.setBackgroundResource(R.drawable.bar_selector);
@@ -958,7 +985,21 @@ public void onClick(View v) {
                 @Override
                 public void onSearchCollapse() {
                     avatarContainer.setVisibility(View.VISIBLE);
+                    if (chatActivityEnterView.hasText()) {
+                        if (headerItem != null) {
+                            headerItem.setVisibility(View.GONE);
+                        }
+                        if (attachItem != null) {
+                            attachItem.setVisibility(View.VISIBLE);
+                        }
+                    } else {
+                        if (headerItem != null) {
                     headerItem.setVisibility(View.VISIBLE);
+                        }
+                        if (attachItem != null) {
+                            attachItem.setVisibility(View.GONE);
+                        }
+                    }
                     searchItem.setVisibility(View.GONE);
                     //chatActivityEnterView.setVisibility(View.VISIBLE);
                     searchUpItem.clearAnimation();
@@ -976,7 +1017,7 @@ public void run() {
                             searchItem.getSearchField().requestFocus();
                             AndroidUtilities.showKeyboard(searchItem.getSearchField());
                         }
-                    }, 200); //TODO find a better way to open keyboard
+                    }, 300); //TODO find a better way to open keyboard
                 }
 
                 @Override
@@ -988,20 +1029,26 @@ public void onSearchPressed(EditText editText) {
             searchItem.getSearchField().setHint(LocaleController.getString("Search", R.string.Search));
             searchItem.setVisibility(View.GONE);
 
-            searchUpItem = menu.addItem(search_up, R.drawable.search_up);
+            //searchUpItem = menu.addItem(search_up, R.drawable.search_up);
+            Drawable searchU = getParentActivity().getResources().getDrawable(R.drawable.search_up);
+            searchUpItem = menu.addItem(search_up, searchU);
             searchUpItem.setVisibility(View.GONE);
-            searchDownItem = menu.addItem(search_down, R.drawable.search_down);
+            //searchDownItem = menu.addItem(search_down, R.drawable.search_down);
+            Drawable searchD = getParentActivity().getResources().getDrawable(R.drawable.search_down);
+            searchDownItem = menu.addItem(search_down, searchD);
             searchDownItem.setVisibility(View.GONE);
         }
 
             //headerItem = menu.addItem(0, R.drawable.ic_ab_other);
+            //Plus
             Drawable dots = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_other);
-            //dots.setColorFilter(AndroidUtilities.getIntDef("chatHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
+            dots.setColorFilter(AndroidUtilities.getIntDef("chatHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
             headerItem = menu.addItem(0, dots);
 
             final boolean isChat = (int) dialog_id < 0 && (int) (dialog_id >> 32) != 1;
             if(isChat)headerItem.addSubItem(add_member, LocaleController.getString("AddMember", R.string.AddMember), 0);
-
+            //headerItem.addSubItem(chat_background, LocaleController.getString("ChatBackground", R.string.ChatBackground), 0);
+            //!Plus
             if (searchItem != null) {
                 headerItem.addSubItem(search, LocaleController.getString("Search", R.string.Search), 0);
             }
@@ -1018,9 +1065,6 @@ public void onSearchPressed(EditText editText) {
                 headerItem.addSubItem(delete_chat, LocaleController.getString("DeleteChatUser", R.string.DeleteChatUser), 0);
             }
             muteItem = headerItem.addSubItem(mute, null, 0);
-
-
-
         if (currentUser != null && currentEncryptedChat == null && (currentUser.flags & TLRPC.USER_FLAG_BOT) != 0) {
             headerItem.addSubItem(bot_settings, LocaleController.getString("BotSettings", R.string.BotSettings), 0);
             headerItem.addSubItem(bot_help, LocaleController.getString("BotHelp", R.string.BotHelp), 0);
@@ -1031,36 +1075,15 @@ public void onSearchPressed(EditText editText) {
             updateSubtitle();
             updateTitleIcons();
 
-            //attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other).setAllowCloseAnimation(false);;
-            attachItem = menu.addItem(chat_menu_attach, dots).setAllowCloseAnimation(false);
-            attachItem.addSubItem(attach_photo, LocaleController.getString("ChatTakePhoto", R.string.ChatTakePhoto), R.drawable.ic_attach_photo);
-            attachItem.addSubItem(attach_gallery, LocaleController.getString("ChatGallery", R.string.ChatGallery), R.drawable.ic_attach_gallery);
-            attachItem.addSubItem(attach_sticker, LocaleController.getString("AttachSticker", R.string.AttachSticker), R.drawable.ic_attach_sticker);
-            //attachItem.addSubItem(attach_music, LocaleController.getString("ChatMusic", R.string.ChatMusic), R.drawable.ic_attach_music);
-            attachItem.addSubItem(attach_audio, LocaleController.getString("ChatMusic", R.string.ChatMusic), R.drawable.ic_attach_music);
-
-            attachItem.addSubItem(attach_video, LocaleController.getString("ChatVideo", R.string.ChatVideo), R.drawable.ic_attach_video);
-            attachItem.addSubItem(attach_document, LocaleController.getString("ChatDocument", R.string.ChatDocument), R.drawable.ic_ab_doc);
-            attachItem.addSubItem(attach_location, LocaleController.getString("ChatLocation", R.string.ChatLocation), R.drawable.ic_attach_location);
-            attachItem.addSubItem(attach_contact, LocaleController.getString("AttachContact", R.string.AttachContact), R.drawable.ic_attach_contact);
-            attachItem.setVisibility(View.GONE);
-
-            Drawable clip = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_attach_white);
+			//attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other).setOverrideMenuClick(true).setAllowCloseAnimation(false);
+			attachItem = menu.addItem(chat_menu_attach, dots).setOverrideMenuClick(true).setAllowCloseAnimation(false);
+			attachItem.setVisibility(View.GONE);
+        
+			//menuItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_attach).setAllowCloseAnimation(false);
+			Drawable clip = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_attach_white);
             clip.setColorFilter(themePrefs.getInt("chatEditTextIconsColor", 0xffadadad), PorterDuff.Mode.MULTIPLY);
             menuItem = menu.addItem(chat_menu_attach, clip).setAllowCloseAnimation(false);
-            //menuItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_attach).setAllowCloseAnimation(false);;
-            menuItem.addSubItem(attach_photo, LocaleController.getString("ChatTakePhoto", R.string.ChatTakePhoto), R.drawable.ic_attach_photo);
-            menuItem.addSubItem(attach_gallery, LocaleController.getString("ChatGallery", R.string.ChatGallery), R.drawable.ic_attach_gallery);
-            menuItem.addSubItem(attach_sticker, LocaleController.getString("AttachSticker", R.string.AttachSticker), R.drawable.ic_attach_sticker);
-            //menuItem.addSubItem(attach_music, LocaleController.getString("ChatMusic", R.string.ChatMusic), R.drawable.ic_attach_music);
-            menuItem.addSubItem(attach_audio, LocaleController.getString("ChatMusic", R.string.ChatMusic), R.drawable.ic_attach_music);
-
-            menuItem.addSubItem(attach_video, LocaleController.getString("ChatVideo", R.string.ChatVideo), R.drawable.ic_attach_video);
-            menuItem.addSubItem(attach_document, LocaleController.getString("ChatDocument", R.string.ChatDocument), R.drawable.ic_ab_doc);
-            menuItem.addSubItem(attach_location, LocaleController.getString("ChatLocation", R.string.ChatLocation), R.drawable.ic_attach_location);
-            menuItem.addSubItem(attach_contact, LocaleController.getString("AttachContact", R.string.AttachContact), R.drawable.ic_attach_contact);
-            menuItem.setShowFromBottom(true);
-            menuItem.setBackgroundDrawable(null);
+			menuItem.setBackgroundDrawable(null);
 
             actionModeViews.clear();
 
@@ -1076,7 +1099,7 @@ public void onSearchPressed(EditText editText) {
             selectedMessagesCountTextView.setEllipsize(TextUtils.TruncateAt.END);
             selectedMessagesCountTextView.setPadding(AndroidUtilities.dp(11), 0, 0, AndroidUtilities.dp(2));
             selectedMessagesCountTextView.setGravity(Gravity.CENTER_VERTICAL);
-        actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f));
+			actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f));
             selectedMessagesCountTextView.setOnTouchListener(new View.OnTouchListener() {
                 @Override
                 public boolean onTouch(View v, MotionEvent event) {
@@ -1122,14 +1145,10 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 }
 
                 int childCount = getChildCount();
-                for (int i = 0; i < childCount; i++) {
-                    View child = getChildAt(i);
-                    if (child == chatActivityEnterView) {
-                        measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);
-                        inputFieldHeight = child.getMeasuredHeight();
-                        break;
-                    }
-                }
+
+                measureChildWithMargins(chatActivityEnterView, widthMeasureSpec, 0, heightMeasureSpec, 0);
+                inputFieldHeight = chatActivityEnterView.getMeasuredHeight();
+
                 for (int i = 0; i < childCount; i++) {
                     View child = getChildAt(i);
                     if (child.getVisibility() == GONE || child == chatActivityEnterView) {
@@ -1222,8 +1241,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
         };
 
         SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
-
-            contentView.setBackgroundImage(ApplicationLoader.getCachedWallpaper());
+        contentView.setBackgroundImage(ApplicationLoader.getCachedWallpaper());
 
         emptyViewContainer = new FrameLayout(context);
             emptyViewContainer.setVisibility(View.INVISIBLE);
@@ -1244,7 +1262,8 @@ public boolean onTouch(View v, MotionEvent event) {
             }
                 emptyView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
                 emptyView.setGravity(Gravity.CENTER);
-                emptyView.setTextColor(0xffffffff);
+                //emptyView.setTextColor(0xffffffff);
+                emptyView.setTextColor(themePrefs.getInt("chatDateColor", 0xffffffff));
                 emptyView.setBackgroundResource(ApplicationLoader.isCustomTheme() ? R.drawable.system_black : R.drawable.system_blue);
                 emptyView.setPadding(AndroidUtilities.dp(7), AndroidUtilities.dp(1), AndroidUtilities.dp(7), AndroidUtilities.dp(1));
             emptyViewContainer.addView(emptyView, new FrameLayout.LayoutParams(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
@@ -1715,6 +1734,9 @@ public void needSendTyping() {
 
                 @Override
                 public void onAttachButtonHidden() {
+                if (actionBar.isSearchFieldVisible()) {
+                    return;
+                }
                     if (attachItem != null) {
                         attachItem.setVisibility(View.VISIBLE);
                     }
@@ -1725,6 +1747,9 @@ public void onAttachButtonHidden() {
 
                 @Override
                 public void onAttachButtonShow() {
+                if (actionBar.isSearchFieldVisible()) {
+                    return;
+                }
                     if (attachItem != null) {
                     attachItem.setVisibility(View.GONE);
                     }
@@ -1735,7 +1760,7 @@ public void onAttachButtonShow() {
 
                 @Override
                 public void onWindowSizeChanged(int size) {
-                    if (size < AndroidUtilities.dp(72) + AndroidUtilities.getCurrentActionBarHeight()) {
+                if (size < AndroidUtilities.dp(72) + ActionBar.getCurrentActionBarHeight()) {
                         allowStickersPanel = false;
                         if (stickersPanel.getVisibility() == View.VISIBLE) {
                             stickersPanel.clearAnimation();
@@ -2216,12 +2241,15 @@ public void startDocumentSelectActivity() {
             });
             presentFragment(fragment);
         } else if (which == attach_audio) {
-            try {
-                Intent intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);
-                startActivityForResult(intent, 32);
-            } catch (Exception e) {
-                FileLog.e("tmessages", e);
-            }
+            AudioSelectActivity fragment = new AudioSelectActivity();
+            fragment.setDelegate(new AudioSelectActivity.AudioSelectActivityDelegate() {
+                @Override
+                public void didSelectAudio(ArrayList<MessageObject> audios) {
+                    SendMessagesHelper.prepareSendingAudioDocuments(audios, dialog_id, replyingMessageObject);
+                    showReplyPanel(false, null, null, null, false, true);
+                }
+            });
+            presentFragment(fragment);
         } else if (which == attach_contact) {
             try {
                 Intent intent = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI);
@@ -2360,7 +2388,7 @@ public void showReplyPanel(boolean show, MessageObject messageObject, ArrayList<
                         mess = mess.substring(0, 150);
                     }
                     mess = mess.replace("\n", " ");
-                    replyObjectTextView.setText(Emoji.replaceEmoji(mess, replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14)));
+                    replyObjectTextView.setText(Emoji.replaceEmoji(mess, replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14), false));
                 }
             } else if (messageObjects != null) {
                 if (messageObjects.isEmpty()) {
@@ -2427,7 +2455,7 @@ public void showReplyPanel(boolean show, MessageObject messageObject, ArrayList<
                             mess = mess.substring(0, 150);
                         }
                         mess = mess.replace("\n", " ");
-                        replyObjectTextView.setText(Emoji.replaceEmoji(mess, replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14)));
+                        replyObjectTextView.setText(Emoji.replaceEmoji(mess, replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14), false));
                     } else {
                         replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMessage", messageObjects.size()));
                     }
@@ -2446,7 +2474,7 @@ public void showReplyPanel(boolean show, MessageObject messageObject, ArrayList<
                         }
                     } else if (type == 12) {
                         replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedContact", messageObjects.size()));
-                    } else if (type == 2) {
+                    } else if (type == 2 || type == 14) {
                         replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedAudio", messageObjects.size()));
                     } else if (type == 13) {
                         replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedSticker", messageObjects.size()));
@@ -3769,7 +3797,6 @@ public void run() {
 
                     if (currentEncryptedChat != null && obj.isOut() && obj.messageOwner.action != null && obj.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction &&
                             obj.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL && getParentActivity() != null) {
-                        TLRPC.TL_decryptedMessageActionSetMessageTTL action = (TLRPC.TL_decryptedMessageActionSetMessageTTL) obj.messageOwner.action.encryptedAction;
                         if (AndroidUtilities.getPeerLayerVersion(currentEncryptedChat.layer) < 17 && currentEncryptedChat.ttl > 0 && currentEncryptedChat.ttl <= 60) {
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -4187,7 +4214,6 @@ public void run() {
             int encId = (Integer) args[0];
             if (currentEncryptedChat != null && currentEncryptedChat.id == encId) {
                 int date = (Integer) args[1];
-                boolean started = false;
                 for (MessageObject obj : messages) {
                     if (!obj.isOut()) {
                         continue;
@@ -4200,7 +4226,7 @@ public void run() {
                 }
                 updateVisibleRows();
             }
-        } else if (id == NotificationCenter.audioDidReset) {
+        } else if (id == NotificationCenter.audioDidReset || id == NotificationCenter.audioPlayStateChanged) {
             Integer mid = (Integer) args[0];
             if (chatListView != null) {
                 int count = chatListView.getChildCount();
@@ -4209,7 +4235,13 @@ public void run() {
                     if (view instanceof ChatAudioCell) {
                         ChatAudioCell cell = (ChatAudioCell) view;
                         if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
-                            cell.updateButtonState();
+                            cell.updateButtonState(false);
+                            break;
+                        }
+                    } else if (view instanceof ChatMusicCell) {
+                        ChatMusicCell cell = (ChatMusicCell) view;
+                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                            cell.updateButtonState(false);
                             break;
                         }
                     }
@@ -4227,6 +4259,16 @@ public void run() {
                             cell.updateProgress();
                             break;
                         }
+                    } else if (view instanceof ChatMusicCell) {
+                        ChatMusicCell cell = (ChatMusicCell) view;
+                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                            MessageObject playing = cell.getMessageObject();
+                            MessageObject player = MediaController.getInstance().getPlayingMessageObject();
+                            playing.audioProgress = player.audioProgress;
+                            playing.audioProgressSec = player.audioProgressSec;
+                            cell.updateProgress();
+                            break;
+                        }
                     }
                 }
             }
@@ -4303,6 +4345,27 @@ public void run() {
         } else if (id == NotificationCenter.audioDidStarted) {
             MessageObject messageObject = (MessageObject) args[0];
             sendSecretMessageRead(messageObject);
+
+            int mid = messageObject.getId();
+            if (chatListView != null) {
+                int count = chatListView.getChildCount();
+                for (int a = 0; a < count; a++) {
+                    View view = chatListView.getChildAt(a);
+                    if (view instanceof ChatAudioCell) {
+                        ChatAudioCell cell = (ChatAudioCell) view;
+                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                            cell.updateButtonState(false);
+                            break;
+                        }
+                    } else if (view instanceof ChatMusicCell) {
+                        ChatMusicCell cell = (ChatMusicCell) view;
+                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                            cell.updateButtonState(false);
+                            break;
+                        }
+                    }
+                }
+            }
         } else if (id == NotificationCenter.updateMessageMedia) {
             MessageObject messageObject = (MessageObject) args[0];
             MessageObject existMessageObject = messagesDict.get(messageObject.getId());
@@ -4652,20 +4715,30 @@ public void run() {
     }
 
     private void updateTheme(){
-        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-        int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
-        actionBar.setBackgroundColor(themePrefs.getInt("chatHeaderColor", def));
-        nameTextView.setTextColor(themePrefs.getInt("chatNameColor", 0xffffffff));
-        nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("chatNameSize", 18));
-        onlineTextView.setTextColor(themePrefs.getInt("chatStatusColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x40)));
-        onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("chatStatusSize", 14));
-        int iColor = themePrefs.getInt("chatHeaderIconsColor", 0xffffffff);
-        Drawable mute = getParentActivity().getResources().getDrawable(R.drawable.mute_blue);
-        mute.setColorFilter(iColor, PorterDuff.Mode.SRC_IN);
-        Drawable dots = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_other);
-        dots.setColorFilter(iColor, PorterDuff.Mode.MULTIPLY);
-        Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
-        back.setColorFilter(iColor, PorterDuff.Mode.MULTIPLY);
+        try{
+            SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+            int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
+            actionBar.setBackgroundColor(themePrefs.getInt("chatHeaderColor", def));
+            nameTextView.setTextColor(themePrefs.getInt("chatNameColor", 0xffffffff));
+            nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("chatNameSize", 18));
+            onlineTextView.setTextColor(themePrefs.getInt("chatStatusColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x40)));
+            onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("chatStatusSize", 14));
+            int iColor = themePrefs.getInt("chatHeaderIconsColor", 0xffffffff);
+            Drawable mute = getParentActivity().getResources().getDrawable(R.drawable.mute_blue);
+            mute.setColorFilter(iColor, PorterDuff.Mode.SRC_IN);
+            Drawable dots = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_other);
+            dots.setColorFilter(iColor, PorterDuff.Mode.MULTIPLY);
+            Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
+            back.setColorFilter(iColor, PorterDuff.Mode.MULTIPLY);
+
+            Drawable searchD = getParentActivity().getResources().getDrawable(R.drawable.search_down);
+            searchD.setColorFilter(iColor, PorterDuff.Mode.SRC_IN);
+            Drawable searchU = getParentActivity().getResources().getDrawable(R.drawable.search_up);
+            searchU.setColorFilter(iColor, PorterDuff.Mode.SRC_IN);
+            if(searchItem != null)searchItem.getSearchField().setTextColor(iColor);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
     }
 
     @Override
@@ -4751,7 +4824,7 @@ public boolean onPreDraw() {
                     if (AndroidUtilities.isTablet()) {
                         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
                         int color = themePrefs.getInt("chatHeaderIconsColor", 0xffffffff);
-                        if (AndroidUtilities.isSmallTablet() && getParentActivity().getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
+                        if (AndroidUtilities.isSmallTablet() && ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
                             //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
                             Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
                             back.setColorFilter(color, PorterDuff.Mode.MULTIPLY);
@@ -4763,7 +4836,7 @@ public boolean onPreDraw() {
                             actionBar.setBackButtonDrawable(back);
                         }
                     }
-                    int padding = (AndroidUtilities.getCurrentActionBarHeight() - AndroidUtilities.dp(48)) / 2;
+                    int padding = (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(48)) / 2;
                     avatarContainer.setPadding(avatarContainer.getPaddingLeft(), padding, avatarContainer.getPaddingRight(), padding);
                     FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) avatarContainer.getLayoutParams();
                     layoutParams.topMargin = (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0);
@@ -4837,7 +4910,13 @@ public void createMenu(View v, boolean single) {
                                 options = new int[]{8, 22, 2, 3, 1};
                         } else if (type == 4) {
                             if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaDocument) {
-                                    items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
+                                    String saveString;
+                                    if (selectedObject.isMusic()) {
+                                        saveString = LocaleController.getString("SaveToMusic", R.string.SaveToMusic);
+                                    } else {
+                                        saveString = LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads);
+                                    }
+                                    items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), saveString, LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
                                     options = new int[]{8, 10, 4, 22, 2, 1};
                             } else {
                                     items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("SaveToGallery", R.string.SaveToGallery), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
@@ -4847,7 +4926,13 @@ public void createMenu(View v, boolean single) {
                                 items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("ApplyTheme", R.string.ApplyTheme), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
                                 options = new int[]{8, 5, 4, 22, 2, 1};
                             } else if (type == 6) {
-                                items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("SaveToGallery", R.string.SaveToGallery), LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
+                                String saveString;
+                                if (selectedObject.isMusic()) {
+                                    saveString = LocaleController.getString("SaveToMusic", R.string.SaveToMusic);
+                                } else {
+                                    saveString = LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads);
+                                }
+                                items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("SaveToGallery", R.string.SaveToGallery), saveString, LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
                                 options = new int[]{8, 7, 10, 6, 22, 2, 1};
                             } else if (type == 7) {
                                 items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("AddToStickers", R.string.AddToStickers), LocaleController.getString("Delete", R.string.Delete)};
@@ -4862,7 +4947,13 @@ public void createMenu(View v, boolean single) {
                                 options = new int[]{22, 2, 3, 1};
                             } else if (type == 4) {
                                 if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaDocument) {
-                                    items = new CharSequence[]{LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
+                                    String saveString;
+                                    if (selectedObject.isMusic()) {
+                                        saveString = LocaleController.getString("SaveToMusic", R.string.SaveToMusic);
+                                    } else {
+                                        saveString = LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads);
+                                    }
+                                    items = new CharSequence[]{saveString, LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
                                     options = new int[]{10, 4, 22, 2, 1};
                                 } else {
                                     items = new CharSequence[]{LocaleController.getString("SaveToGallery", R.string.SaveToGallery), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
@@ -4872,7 +4963,13 @@ public void createMenu(View v, boolean single) {
                                 items = new CharSequence[]{LocaleController.getString("ApplyTheme", R.string.ApplyTheme), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
                                 options = new int[]{5, 4, 22, 2, 1};
                             } else if (type == 6) {
-                                items = new CharSequence[]{LocaleController.getString("SaveToGallery", R.string.SaveToGallery),  LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
+                                String saveString;
+                                if (selectedObject.isMusic()) {
+                                    saveString = LocaleController.getString("SaveToMusic", R.string.SaveToMusic);
+                                } else {
+                                    saveString = LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads);
+                                }
+                                items = new CharSequence[]{LocaleController.getString("SaveToGallery", R.string.SaveToGallery), saveString, LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("Delete", R.string.Delete)};
                                 options = new int[]{7, 10, 6, 22, 2, 1};
                             } else if (type == 7) {
                                 items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("Forward", R.string.Forward),  LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("AddToStickers", R.string.AddToStickers), LocaleController.getString("Delete", R.string.Delete)};
@@ -4888,7 +4985,13 @@ public void createMenu(View v, boolean single) {
                             options = new int[]{3, 1};
                         } else if (type == 4) {
                             if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaDocument) {
-                                items = new CharSequence[]{LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads), LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Delete", R.string.Delete)};
+                                String saveString;
+                                if (selectedObject.isMusic()) {
+                                    saveString = LocaleController.getString("SaveToMusic", R.string.SaveToMusic);
+                                } else {
+                                    saveString = LocaleController.getString("SaveToDownloads", R.string.SaveToDownloads);
+                                }
+                                items = new CharSequence[]{saveString, LocaleController.getString("ShareFile", R.string.ShareFile), LocaleController.getString("Delete", R.string.Delete)};
                                 options = new int[]{10, 4, 1};
                             } else {
                                 items = new CharSequence[]{LocaleController.getString("SaveToGallery", R.string.SaveToGallery), LocaleController.getString("Delete", R.string.Delete)};
@@ -4898,8 +5001,8 @@ public void createMenu(View v, boolean single) {
                             items = new CharSequence[]{LocaleController.getString("ApplyTheme", R.string.ApplyTheme), LocaleController.getString("Delete", R.string.Delete)};
                             options = new int[]{5, 1};
                         } else if (type == 7) {
-                            items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("AddToStickers", R.string.AddToStickers), LocaleController.getString("Delete", R.string.Delete)};
-                            options = new int[]{8, 2, 9, 1};
+                            items = new CharSequence[]{LocaleController.getString("Reply", R.string.Reply), LocaleController.getString("Forward", R.string.Forward), LocaleController.getString("ForwardNoQuote", R.string.ForwardNoQuote), LocaleController.getString("AddToStickers", R.string.AddToStickers), LocaleController.getString("Delete", R.string.Delete)};
+                            options = new int[]{8, 22, 2, 9, 1};
                         }
                     }
                 }
@@ -4985,7 +5088,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
             Bundle args = new Bundle();
             args.putBoolean("onlySelect", true);
             args.putInt("dialogsType", 1);
-            MessagesActivity fragment = new MessagesActivity(args);
+            DialogsActivity fragment = new DialogsActivity(args);
             fragment.setDelegate(this);
             presentFragment(fragment);
         } else if (option == 3) {
@@ -5017,7 +5120,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 MediaController.saveFile(path, getParentActivity(), 1, null);
             } else if (selectedObject.type == 1) {
                 MediaController.saveFile(path, getParentActivity(), 0, null);
-            } else if (selectedObject.type == 8 || selectedObject.type == 9) {
+            } else if (selectedObject.type == 8 || selectedObject.type == 9 || selectedObject.type == 14) {
                 Intent intent = new Intent(Intent.ACTION_SEND);
                 intent.setType(selectedObject.messageOwner.media.document.mime_type);
                 intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new File(path)));
@@ -5089,9 +5192,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     showDialog(builder.create());
                 }
             }
-        }
-        else if (option == 6 || option == 7) {
-            String fileName = selectedObject.getFileName();
+        } else if (option == 6 || option == 7) {
             String path = selectedObject.messageOwner.attachPath;
             if (path != null && path.length() > 0) {
                 File temp = new File(path);
@@ -5102,7 +5203,7 @@ else if (option == 6 || option == 7) {
             if (path == null || path.length() == 0) {
                 path = FileLoader.getPathToMessage(selectedObject.messageOwner).toString();
             }
-            if (selectedObject.type == 8 || selectedObject.type == 9) {
+            if (selectedObject.type == 8 || selectedObject.type == 9 || selectedObject.type == 14) {
                 if (option == 6) {
                     Intent intent = new Intent(Intent.ACTION_SEND);
                     intent.setType(selectedObject.messageOwner.media.document.mime_type);
@@ -5170,13 +5271,13 @@ else if (option == 6 || option == 7) {
             if (path == null || path.length() == 0) {
                 path = FileLoader.getPathToMessage(selectedObject.messageOwner).toString();
             }
-            MediaController.saveFile(path, getParentActivity(), 2, fileName);
+            MediaController.saveFile(path, getParentActivity(), selectedObject.isMusic() ? 3 : 2, fileName);
         }
         selectedObject = null;
     }
 
     @Override
-    public void didSelectDialog(MessagesActivity activity, long did, boolean param) {
+    public void didSelectDialog(DialogsActivity activity, long did, boolean param) {
         if (dialog_id != 0 && (forwaringMessage != null || !selectedMessagesIds.isEmpty())) {
             ArrayList<MessageObject> fmessages = new ArrayList<>();
             if (forwaringMessage != null) {
@@ -5254,7 +5355,7 @@ public boolean onBackPressed() {
 
     public boolean isGoogleMapsInstalled() {
         try {
-            ApplicationInfo info = ApplicationLoader.applicationContext.getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0);
+            ApplicationLoader.applicationContext.getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0);
             return true;
         } catch (PackageManager.NameNotFoundException e) {
             if (getParentActivity() == null) {
@@ -5506,7 +5607,7 @@ public void didPressUrl(String url) {
                         if (url.startsWith("@")) {
                             MessagesController.openByUserName(url.substring(1), ChatActivity.this, 0);
                         } else if (url.startsWith("#")) {
-                            MessagesActivity fragment = new MessagesActivity(null);
+                            DialogsActivity fragment = new DialogsActivity(null);
                             fragment.setSearchString(url);
                             presentFragment(fragment);
                         } else if (url.startsWith("/")) {
@@ -5514,6 +5615,8 @@ public void didPressUrl(String url) {
                         }
                     }
                 });
+            } else if (viewType == 8) {
+                view = new ChatMusicCell(mContext);
                 }
 
                 if (view instanceof ChatBaseCell) {
@@ -5554,7 +5657,7 @@ public void didPressUrl(MessageObject messageObject, String url) {
                             if (url.startsWith("@")) {
                             MessagesController.openByUserName(url.substring(1), ChatActivity.this, 0);
                             } else if (url.startsWith("#")) {
-                                MessagesActivity fragment = new MessagesActivity(null);
+                            DialogsActivity fragment = new DialogsActivity(null);
                                 fragment.setSearchString(url);
                                 presentFragment(fragment);
                         } else if (url.startsWith("/")) {
@@ -5566,7 +5669,7 @@ public void didPressUrl(MessageObject messageObject, String url) {
                     public void needOpenWebView(String url, String title, String originalUrl, int w, int h) {
                         BottomSheet.Builder builder = new BottomSheet.Builder(mContext);
                         builder.setCustomView(new WebFrameLayout(mContext, builder.create(), title, originalUrl, url, w, h));
-                        builder.setOverrideTabletWidth(true);
+                        builder.setUseFullWidth(true);
                         showDialog(builder.create());
                     }
 
@@ -5727,6 +5830,13 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             showDialog(builder.create());
                             }
                         });
+                } else if (view instanceof ChatMusicCell) {
+                    ((ChatMusicCell) view).setMusicDelegate(new ChatMusicCell.ChatMusicCellDelegate() {
+                        @Override
+                        public boolean needPlayMusic(MessageObject messageObject) {
+                            return MediaController.getInstance().setPlaylist(messages, messageObject);
+                        }
+                    });
                     }
                 } else if (view instanceof ChatActionCell) {
                     ((ChatActionCell) view).setDelegate(new ChatActionCell.ChatActionCellDelegate() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
index d8c30f25c..83503d6f4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
@@ -20,11 +20,11 @@
 import android.text.TextPaint;
 
 import org.telegram.android.AndroidUtilities;
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.messenger.ApplicationLoader;
 
 import java.util.Locale;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 2ac30c33c..f1798b9af 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -51,6 +51,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 
 import java.util.Locale;
@@ -119,6 +120,7 @@
     private BaseFragment parentFragment;
     private long dialog_id;
     private boolean ignoreTextChange;
+    private int innerTextChange;
     private MessageObject replyingMessageObject;
     private MessageObject botMessageObject;
     private TLRPC.WebPage messageWebPage;
@@ -194,7 +196,16 @@ public void onClick(View view) {
             }
         });
 
-        messageEditText = new EditText(context);
+        messageEditText = new EditText(context) {
+            @Override
+            public boolean onTouchEvent(MotionEvent event) {
+                if (isPopupShowing() && event.getAction() == MotionEvent.ACTION_DOWN) {
+                    showPopup(AndroidUtilities.usingHardwareInput ? 0 : 2, 0);
+                    openKeyboardInternal();
+                }
+                return super.onTouchEvent(event);
+            }
+        };
         messageEditText.setHint(LocaleController.getString("TypeMessage", R.string.TypeMessage));
         messageEditText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);
         messageEditText.setInputType(messageEditText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES | EditorInfo.TYPE_TEXT_FLAG_MULTI_LINE);
@@ -223,14 +234,6 @@ public boolean onKey(View view, int i, KeyEvent keyEvent) {
                 return false;
             }
         });
-        messageEditText.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (isPopupShowing()) {
-                    showPopup(AndroidUtilities.usingHardwareInput ? 0 : 2, 0);
-                }
-            }
-        });
         messageEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
             @Override
             public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
@@ -247,6 +250,8 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
             }
         });
         messageEditText.addTextChangedListener(new TextWatcher() {
+            boolean processChange = false;
+
             @Override
             public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
 
@@ -254,16 +259,20 @@ public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3)
 
             @Override
             public void onTextChanged(CharSequence charSequence, int start, int before, int count) {
-                String message = getTrimmedString(charSequence.toString());
+                if (innerTextChange == 1) {
+                    return;
+                }
                 checkSendButton(true);
-
+                String message = getTrimmedString(charSequence.toString());
                 if (delegate != null) {
                     if (count > 2 || charSequence == null || charSequence.length() == 0) {
                         messageWebPageSearch = true;
                     }
                     delegate.onTextChanged(charSequence, before > count + 1 || (count - before) > 2);
                 }
-
+                if (innerTextChange != 2 && before != count && (count - before) > 1) {
+                    processChange = true;
+                }
                 if (message.length() != 0 && lastTypingTimeSend < System.currentTimeMillis() - 5000 && !ignoreTextChange) {
                     int currentTime = ConnectionsManager.getInstance().getCurrentTime();
                     TLRPC.User currentUser = null;
@@ -282,19 +291,19 @@ public void onTextChanged(CharSequence charSequence, int start, int before, int
 
             @Override
             public void afterTextChanged(Editable editable) {
+                if (innerTextChange != 0) {
+                    return;
+                }
                 if (sendByEnter && editable.length() > 0 && editable.charAt(editable.length() - 1) == '\n') {
                     sendMessage();
                 }
-                int i = 0;
-                ImageSpan[] arrayOfImageSpan = editable.getSpans(0, editable.length(), ImageSpan.class);
-                int j = arrayOfImageSpan.length;
-                while (true) {
-                    if (i >= j) {
-                        Emoji.replaceEmoji(editable, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20));
-                        return;
+                if (processChange) {
+                    ImageSpan[] spans = editable.getSpans(0, editable.length(), ImageSpan.class);
+                    for (int i = 0; i < spans.length; i++) {
+                        editable.removeSpan(spans[i]);
                     }
-                    editable.removeSpan(arrayOfImageSpan[i]);
-                    i++;
+                    Emoji.replaceEmoji(editable, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false);
+                    processChange = false;
                 }
             }
         });
@@ -623,7 +632,7 @@ private void onWindowSizeChanged() {
             delegate.onWindowSizeChanged(size);
         }
         if (topView != null) {
-            if (size < AndroidUtilities.dp(72) + AndroidUtilities.getCurrentActionBarHeight()) {
+            if (size < AndroidUtilities.dp(72) + ActionBar.getCurrentActionBarHeight()) {
                 if (allowShowTopView) {
                     allowShowTopView = false;
                     if (needShowTopView) {
@@ -806,11 +815,7 @@ public void onAnimationEnd(Object animation) {
                         });
                         runningAnimation2.start();
 
-                        if (messageEditText != null) {
-                            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messageEditText.getLayoutParams();
-                            layoutParams.rightMargin = AndroidUtilities.dp(0);
-                            messageEditText.setLayoutParams(layoutParams);
-                        }
+                        updateFieldRight(0);
 
                         delegate.onAttachButtonHidden();
                     }
@@ -856,9 +861,7 @@ public void onAnimationEnd(Object animation) {
                         attachButton.setVisibility(View.GONE);
                         attachButton.clearAnimation();
                         delegate.onAttachButtonHidden();
-                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messageEditText.getLayoutParams();
-                        layoutParams.rightMargin = AndroidUtilities.dp(0);
-                        messageEditText.setLayoutParams(layoutParams);
+                        updateFieldRight(0);
                     }
                 }
             }
@@ -887,11 +890,7 @@ public void onAnimationEnd(Object animation) {
                     runningAnimation2.setDuration(100);
                     runningAnimation2.start();
 
-                    if (messageEditText != null) {
-                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messageEditText.getLayoutParams();
-                        layoutParams.rightMargin = AndroidUtilities.dp(50);
-                        messageEditText.setLayoutParams(layoutParams);
-                    }
+                    updateFieldRight(1);
 
                     delegate.onAttachButtonShow();
                 }
@@ -936,12 +935,35 @@ public void onAnimationEnd(Object animation) {
                 if (attachButton != null) {
                     delegate.onAttachButtonShow();
                     attachButton.setVisibility(View.VISIBLE);
-                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messageEditText.getLayoutParams();
+                    updateFieldRight(1);
+                }
+            }
+        }
+    }
+
+    private void updateFieldRight(int attachVisible) {
+        if (messageEditText == null) {
+            return;
+        }
+        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messageEditText.getLayoutParams();
+        if (attachVisible == 1) {
+            if (botButton != null && botButton.getVisibility() == VISIBLE) {
+                layoutParams.rightMargin = AndroidUtilities.dp(98);
+            } else {
+                    layoutParams.rightMargin = AndroidUtilities.dp(50);
+            }
+        } else if (attachVisible == 2) {
+            if (layoutParams.rightMargin != AndroidUtilities.dp(2)) {
+                if (botButton != null && botButton.getVisibility() == VISIBLE) {
+                    layoutParams.rightMargin = AndroidUtilities.dp(98);
+                } else {
                     layoutParams.rightMargin = AndroidUtilities.dp(50);
-                    messageEditText.setLayoutParams(layoutParams);
                 }
             }
+        } else {
+            layoutParams.rightMargin = AndroidUtilities.dp(2);
         }
+        messageEditText.setLayoutParams(layoutParams);
     }
 
     private void updateAudioRecordIntefrace() {
@@ -1153,6 +1175,7 @@ private void updateBotButton() {
         } else {
             botButton.setVisibility(GONE);
         }
+        updateFieldRight(2);
         ViewProxy.setPivotX(attachButton, AndroidUtilities.dp(botButton.getVisibility() == GONE ? 48 : 96));
         attachButton.clearAnimation();
     }
@@ -1257,12 +1280,15 @@ public void onEmojiSelected(String symbol) {
                             i = 0;
                         }
                         try {
-                            CharSequence localCharSequence = Emoji.replaceEmoji(symbol/* + "\uFE0F"*/, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20));
+                            innerTextChange = 2;
+                            CharSequence localCharSequence = Emoji.replaceEmoji(symbol/* + "\uFE0F"*/, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false);
                             messageEditText.setText(messageEditText.getText().insert(i, localCharSequence));
                             int j = i + localCharSequence.length();
                             messageEditText.setSelection(j, j);
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
+                        } finally {
+                            innerTextChange = 0;
                         }
                     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index 3cb770d48..dd67321a8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -128,7 +128,6 @@ public EmojiView(boolean needStickers, Context context) {
             stickersWrap = new FrameLayout(context);
             stickersWrap.addView(gridView);
         
-
         TextView textView = new TextView(context);
             textView.setText(LocaleController.getString("NoStickers", R.string.NoStickers));
             textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
@@ -205,6 +204,7 @@ public boolean onTouchEvent(MotionEvent ev) {
             //scrollSlidingTabStrip.setUnderlineColor(0xffe2e5e7);
             scrollSlidingTabStrip.setIndicatorColor(tabColor);
             scrollSlidingTabStrip.setUnderlineColor(lineColor);
+            scrollSlidingTabStrip.setVisibility(INVISIBLE);
             addView(scrollSlidingTabStrip, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 48, Gravity.LEFT | Gravity.TOP));
             ViewProxy.setTranslationX(scrollSlidingTabStrip, AndroidUtilities.displaySize.x);
             updateStickerTabs();
@@ -375,6 +375,7 @@ private void onPageScrolled(int position, int width, int positionOffsetPixels) {
         if (ViewProxy.getTranslationX(pagerSlidingTabStripContainer) != margin) {
             ViewProxy.setTranslationX(pagerSlidingTabStripContainer, margin);
             ViewProxy.setTranslationX(scrollSlidingTabStrip, width + margin);
+            scrollSlidingTabStrip.setVisibility(margin < 0 ? VISIBLE : INVISIBLE);
             if (Build.VERSION.SDK_INT < 11) {
                 if (margin <= -width) {
                     pagerSlidingTabStripContainer.clearAnimation();
@@ -464,7 +465,7 @@ private void saveRecentStickers() {
             stringBuilder.append("=");
             stringBuilder.append(entry.getValue());
         }
-        getContext().getSharedPreferences("emoji", 0).edit().putString("stickers", stringBuilder.toString()).commit();
+        preferences.edit().putString("stickers", stringBuilder.toString()).commit();
     }
 
     private void sortStickers() {
@@ -580,10 +581,12 @@ public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         layoutParams.width = View.MeasureSpec.getSize(widthMeasureSpec);
         if (scrollSlidingTabStrip != null) {
             layoutParams1 = (FrameLayout.LayoutParams) scrollSlidingTabStrip.getLayoutParams();
+            if (layoutParams1 != null) {
             layoutParams1.width = layoutParams.width;
         }
+        }
         if (layoutParams.width != oldWidth) {
-            if (scrollSlidingTabStrip != null) {
+            if (scrollSlidingTabStrip != null && layoutParams1 != null) {
                 onPageScrolled(pager.getCurrentItem(), layoutParams.width, 0);
                 scrollSlidingTabStrip.setLayoutParams(layoutParams1);
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java
index aedc5bcd6..9ac490ad4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java
@@ -113,7 +113,7 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
                     header.setTag(-header.getHeight());
                 } else if (pos == count - 2) {
                     View child = getChildAt(itemNum - firstVisibleItem);
-                    int headerTop = 0;
+                    int headerTop;
                     if (child != null) {
                         headerTop = child.getTop();
                     } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java
index 60c2522eb..74f4168a5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java
@@ -25,6 +25,9 @@
     private float animatedProgressValue = 0;
     private float animatedAlphaValue = 1.0f;
 
+    private int backColor;
+    private int progressColor = 0xff36a2ee;
+
     private static DecelerateInterpolator decelerateInterpolator = null;
     private static Paint progressPaint = null;
 
@@ -37,7 +40,6 @@ public LineProgressView(Context context) {
             progressPaint.setStyle(Paint.Style.STROKE);
             progressPaint.setStrokeCap(Paint.Cap.ROUND);
             progressPaint.setStrokeWidth(AndroidUtilities.dp(2));
-            progressPaint.setColor(0xff36a2ee);
         }
     }
 
@@ -70,7 +72,11 @@ private void updateAnimation() {
     }
 
     public void setProgressColor(int color) {
-        progressPaint.setColor(color);
+        progressColor = color;
+    }
+
+    public void setBackColor(int color) {
+        backColor = color;
     }
 
     public void setProgress(float value, boolean animated) {
@@ -91,6 +97,14 @@ public void setProgress(float value, boolean animated) {
     }
 
     public void onDraw(Canvas canvas) {
+        if (backColor != 0 && animatedProgressValue != 1) {
+            progressPaint.setColor(backColor);
+            progressPaint.setAlpha((int) (255 * animatedAlphaValue));
+            int start = (int) (getWidth() * animatedProgressValue);
+            canvas.drawRect(start, 0, getWidth(), getHeight(), progressPaint);
+        }
+
+        progressPaint.setColor(progressColor);
         progressPaint.setAlpha((int)(255 * animatedAlphaValue));
         canvas.drawRect(0, 0, getWidth() * animatedProgressValue, getHeight(), progressPaint);
         updateAnimation();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberPicker.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberPicker.java
index 25235c162..a95c161fa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberPicker.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/NumberPicker.java
@@ -537,7 +537,6 @@ private void tryComputeMaxWidth() {
             }
             maxTextWidth = (int) (numberOfDigits * maxDigitWidth);
         } else {
-            final int valueCount = mDisplayedValues.length;
             for (String mDisplayedValue : mDisplayedValues) {
                 final float textWidth = mSelectorWheelPaint.measureText(mDisplayedValue);
                 if (textWidth > maxTextWidth) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java
index 5f7beb690..5eff6bcc7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java
@@ -18,7 +18,6 @@
 import android.os.Build;
 import android.support.v4.view.ViewPager;
 import android.support.v4.view.ViewPager.OnPageChangeListener;
-import android.util.DisplayMetrics;
 import android.view.View;
 import android.view.ViewTreeObserver.OnGlobalLayoutListener;
 import android.widget.FrameLayout;
@@ -75,8 +74,6 @@ public PagerSlidingTabStrip(Context context) {
         tabsContainer.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         addView(tabsContainer);
 
-        DisplayMetrics dm = getResources().getDisplayMetrics();
-
         rectPaint = new Paint();
         rectPaint.setAntiAlias(true);
         rectPaint.setStyle(Style.FILL);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index 068542184..54658932e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -41,16 +41,16 @@
 import android.widget.TextView;
 
 import org.telegram.android.AndroidUtilities;
-import org.telegram.android.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.android.AnimationCompat.AnimatorSetProxy;
-import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.android.AnimationCompat.ViewProxy;
 import org.telegram.android.LocaleController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
+import org.telegram.android.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.android.AnimationCompat.AnimatorSetProxy;
+import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.android.AnimationCompat.ViewProxy;
 
 import java.util.ArrayList;
 import java.util.Locale;
@@ -671,7 +671,6 @@ public boolean onLongClick(View v) {
                 @Override
                 public void onClick(View v) {
                     int tag = (Integer) v.getTag();
-                    int key = KeyEvent.KEYCODE_DEL;
                     switch (tag) {
                         case 0:
                             passwordEditText2.appendCharacter("0");
@@ -845,7 +844,6 @@ public void onShow() {
         }
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         int selectedBackground = preferences.getInt("selectedBackground", 1000001);
-        boolean customTheme = false;
         if (selectedBackground == 1000001) {
             //backgroundFrameLayout.setBackgroundColor(0xff517c9e);
             backgroundFrameLayout.setBackgroundColor(AndroidUtilities.getIntDarkerColor("themeColor", 0x15));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
index ced235b6a..d2de9216e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
@@ -11,9 +11,7 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Bitmap;
-import android.graphics.Canvas;
 import android.graphics.Matrix;
-import android.graphics.Paint;
 import android.graphics.SurfaceTexture;
 import android.opengl.GLES20;
 import android.opengl.GLUtils;
@@ -1205,28 +1203,29 @@ public void run() {
         }
 
         private Bitmap createBitmap(Bitmap bitmap, int w, int h, float scale) {
-            Bitmap result = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
-            Canvas canvas = new Canvas(result);
-            Paint paint = new Paint();
-            paint.setFilterBitmap(true);
+            //Bitmap result = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
+            //Canvas canvas = new Canvas(result);
+            //Paint paint = new Paint();
+            //paint.setFilterBitmap(true);
 
             Matrix matrix = new Matrix();
             matrix.setScale(scale, scale);
-            matrix.postTranslate(-bitmap.getWidth() / 2, -bitmap.getHeight() / 2);
+            //matrix.postTranslate(-bitmap.getWidth() / 2, -bitmap.getHeight() / 2);
             matrix.postRotate(orientation);
-            if (orientation == 90 || orientation == 270) {
+            /*if (orientation == 90 || orientation == 270) {
                 matrix.postTranslate(bitmap.getHeight() / 2, bitmap.getWidth() / 2);
             } else {
                 matrix.postTranslate(bitmap.getWidth() / 2, bitmap.getHeight() / 2);
-            }
-            canvas.drawBitmap(bitmap, matrix, paint);
-            try {
-                canvas.setBitmap(null);
-            } catch (Exception e) {
+            }*/
+            //canvas.drawBitmap(bitmap, matrix, paint);
+            //try {
+            //    canvas.setBitmap(null);
+            //} catch (Exception e) {
                 //don't promt, this will crash on 2.x
-            }
+            //}
+            return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
 
-            return result;
+            //return result;
         }
 
         private void loadTexture(Bitmap bitmap) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPickerBottomLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPickerBottomLayout.java
deleted file mode 100644
index 67c72c127..000000000
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoPickerBottomLayout.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 2.0.x.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013-2014.
- */
-
-package org.telegram.ui.Components;
-
-import android.content.Context;
-import android.util.TypedValue;
-import android.view.Gravity;
-import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import org.telegram.android.AndroidUtilities;
-import org.telegram.android.LocaleController;
-import org.telegram.messenger.R;
-
-public class PhotoPickerBottomLayout extends FrameLayout {
-
-    public LinearLayout doneButton;
-    public TextView cancelButton;
-    public TextView doneButtonTextView;
-    public TextView doneButtonBadgeTextView;
-
-    public PhotoPickerBottomLayout(Context context) {
-        super(context);
-        setBackgroundColor(0xff1a1a1a);
-
-        cancelButton = new TextView(context);
-        cancelButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
-        cancelButton.setTextColor(0xffffffff);
-        cancelButton.setGravity(Gravity.CENTER);
-        cancelButton.setBackgroundResource(R.drawable.bar_selector_picker);
-        cancelButton.setPadding(AndroidUtilities.dp(29), 0, AndroidUtilities.dp(29), 0);
-        cancelButton.setText(LocaleController.getString("Cancel", R.string.Cancel).toUpperCase());
-        cancelButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        addView(cancelButton);
-        LayoutParams layoutParams = (LayoutParams) cancelButton.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-        cancelButton.setLayoutParams(layoutParams);
-
-        doneButton = new LinearLayout(context);
-        doneButton.setOrientation(LinearLayout.HORIZONTAL);
-        doneButton.setBackgroundResource(R.drawable.bar_selector_picker);
-        doneButton.setPadding(AndroidUtilities.dp(29), 0, AndroidUtilities.dp(29), 0);
-        addView(doneButton);
-        layoutParams = (LayoutParams) doneButton.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.gravity = Gravity.TOP | Gravity.RIGHT;
-        doneButton.setLayoutParams(layoutParams);
-
-        doneButtonBadgeTextView = new TextView(context);
-        doneButtonBadgeTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        doneButtonBadgeTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
-        doneButtonBadgeTextView.setTextColor(0xffffffff);
-        doneButtonBadgeTextView.setGravity(Gravity.CENTER);
-        doneButtonBadgeTextView.setBackgroundResource(R.drawable.photobadge);
-        doneButtonBadgeTextView.setMinWidth(AndroidUtilities.dp(23));
-        doneButtonBadgeTextView.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), AndroidUtilities.dp(1));
-        doneButton.addView(doneButtonBadgeTextView);
-        LinearLayout.LayoutParams layoutParams1 = (LinearLayout.LayoutParams) doneButtonBadgeTextView.getLayoutParams();
-        layoutParams1.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams1.height = AndroidUtilities.dp(23);
-        layoutParams1.rightMargin = AndroidUtilities.dp(10);
-        layoutParams1.gravity = Gravity.CENTER_VERTICAL;
-        doneButtonBadgeTextView.setLayoutParams(layoutParams1);
-
-        doneButtonTextView = new TextView(context);
-        doneButtonTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
-        doneButtonTextView.setTextColor(0xffffffff);
-        doneButtonTextView.setGravity(Gravity.CENTER);
-        doneButtonTextView.setCompoundDrawablePadding(AndroidUtilities.dp(8));
-        doneButtonTextView.setText(LocaleController.getString("Send", R.string.Send).toUpperCase());
-        doneButtonTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        doneButton.addView(doneButtonTextView);
-        layoutParams1 = (LinearLayout.LayoutParams) doneButtonTextView.getLayoutParams();
-        layoutParams1.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams1.gravity = Gravity.CENTER_VERTICAL;
-        layoutParams1.height = LayoutHelper.WRAP_CONTENT;
-        doneButtonTextView.setLayoutParams(layoutParams1);
-    }
-
-    public void updateSelectedCount(int count, boolean disable) {
-        if (count == 0) {
-            doneButtonBadgeTextView.setVisibility(View.GONE);
-
-            if (disable) {
-                doneButtonTextView.setTextColor(0xff999999);
-                doneButton.setEnabled(false);
-            } else {
-                doneButtonTextView.setTextColor(0xffffffff);
-            }
-        } else {
-            doneButtonTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
-            doneButtonBadgeTextView.setVisibility(View.VISIBLE);
-            doneButtonBadgeTextView.setText(String.format("%d", count));
-
-            if (disable) {
-                doneButtonTextView.setTextColor(0xffffffff);
-                doneButton.setEnabled(true);
-            } else {
-                doneButtonTextView.setTextColor(0xffffffff);
-            }
-        }
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
index fcff6ef23..4f0051ce5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
@@ -62,6 +62,8 @@
     private boolean keyboardVisible;
     private int emojiPadding;
 
+    private boolean innerTextChange;
+
     private PhotoViewerCaptionEnterViewDelegate delegate;
 
     public PhotoViewerCaptionEnterView(Context context, SizeNotifierFrameLayoutPhoto parent) {
@@ -149,6 +151,8 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
             }
         });
         messageEditText.addTextChangedListener(new TextWatcher() {
+            boolean processChange = false;
+
             @Override
             public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
 
@@ -156,23 +160,31 @@ public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3)
 
             @Override
             public void onTextChanged(CharSequence charSequence, int start, int before, int count) {
+                if (innerTextChange) {
+                    return;
+                }
+
                 if (delegate != null) {
                     delegate.onTextChanged(charSequence);
                 }
+
+                if (before != count && (count - before) > 1) {
+                    processChange = true;
+                }
             }
 
             @Override
             public void afterTextChanged(Editable editable) {
-                int i = 0;
-                ImageSpan[] arrayOfImageSpan = editable.getSpans(0, editable.length(), ImageSpan.class);
-                int j = arrayOfImageSpan.length;
-                while (true) {
-                    if (i >= j) {
-                        Emoji.replaceEmoji(editable, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20));
-                        return;
+                if (innerTextChange) {
+                    return;
+                }
+                if (processChange) {
+                    ImageSpan[] spans = editable.getSpans(0, editable.length(), ImageSpan.class);
+                    for (int i = 0; i < spans.length; i++) {
+                        editable.removeSpan(spans[i]);
                     }
-                    editable.removeSpan(arrayOfImageSpan[i]);
-                    i++;
+                    Emoji.replaceEmoji(editable, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false);
+                    processChange = false;
                 }
             }
         });
@@ -299,12 +311,15 @@ public void onEmojiSelected(String symbol) {
                             i = 0;
                         }
                         try {
-                            CharSequence localCharSequence = Emoji.replaceEmoji(symbol, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20));
+                            innerTextChange = true;
+                            CharSequence localCharSequence = Emoji.replaceEmoji(symbol/* + "\uFE0F"*/, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false);
                             messageEditText.setText(messageEditText.getText().insert(i, localCharSequence));
                             int j = i + localCharSequence.length();
                             messageEditText.setSelection(j, j);
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
+                        } finally {
+                            innerTextChange = false;
                         }
                     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
index c6f7bb038..d145ca2f6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
@@ -90,11 +90,6 @@ public PopupAudioView(Context context) {
 
     public void setMessageObject(MessageObject messageObject) {
         if (currentMessageObject != messageObject) {
-            int uid = messageObject.messageOwner.media.audio.user_id;
-            if (uid == 0) {
-                uid = messageObject.messageOwner.from_id;
-            }
-
             seekBar.type = 1;
             progressView.setProgressColors(0xffd9e2eb, 0xff86c5f8);
 
@@ -269,7 +264,7 @@ public void updateProgress() {
             seekBar.setProgress(currentMessageObject.audioProgress);
         }
 
-        int duration = 0;
+        int duration;
         if (!MediaController.getInstance().isPlayingAudio(currentMessageObject)) {
             duration = currentMessageObject.messageOwner.media.audio.duration;
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java
index af86334cd..8826b64a2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java
@@ -35,6 +35,7 @@
     private Drawable currentDrawable;
     private Drawable previousDrawable;
     private boolean hideCurrentDrawable;
+    private int progressColor = 0xffffffff;
 
     private static DecelerateInterpolator decelerateInterpolator = null;
     private static Paint progressPaint = null;
@@ -46,7 +47,6 @@ public RadialProgress(View parentView) {
             progressPaint.setStyle(Paint.Style.STROKE);
             progressPaint.setStrokeCap(Paint.Cap.ROUND);
             progressPaint.setStrokeWidth(AndroidUtilities.dp(2));
-            progressPaint.setColor(0xffffffff);
         }
         parent = parentView;
     }
@@ -86,7 +86,7 @@ private void updateAnimation() {
     }
 
     public void setProgressColor(int color) {
-        progressPaint.setColor(color);
+        progressColor = color;
     }
 
     public void setHideCurrentDrawable(boolean value) {
@@ -154,6 +154,7 @@ public void onDraw(Canvas canvas) {
 
         if (currentWithRound || previousWithRound) {
             int diff = AndroidUtilities.dp(1);
+            progressPaint.setColor(progressColor);
             if (previousWithRound) {
                 progressPaint.setAlpha((int)(255 * animatedAlphaValue));
             } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
index b356c7196..f503341e1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
@@ -161,6 +161,11 @@ public void run() {
         public void onTouchEvent(RecyclerView view, MotionEvent e) {
 
         }
+
+        @Override
+        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {
+
+        }
     }
 
     private AdapterDataObserver observer = new AdapterDataObserver() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java
index bc15136a0..727b3bacb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java
@@ -11,11 +11,9 @@
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
-import android.graphics.drawable.Drawable;
 import android.view.MotionEvent;
 
 import org.telegram.android.AndroidUtilities;
-import org.telegram.messenger.R;
 
 public class SeekBar {
 
@@ -23,14 +21,10 @@
         void onSeekBarDrag(float progress);
     }
 
-    private static Drawable thumbDrawable1;
-    private static Drawable thumbDrawablePressed1;
-    private static Drawable thumbDrawable2;
-    private static Drawable thumbDrawablePressed2;
-    private static Paint innerPaint1 = new Paint();
-    private static Paint outerPaint1 = new Paint();
-    private static Paint innerPaint2 = new Paint();
-    private static Paint outerPaint2 = new Paint();
+    private static Paint innerPaint1;
+    private static Paint outerPaint1;
+    private static Paint innerPaint2;
+    private static Paint outerPaint2;
     private static int thumbWidth;
     private static int thumbHeight;
     public int type;
@@ -42,17 +36,21 @@
     public SeekBarDelegate delegate;
 
     public SeekBar(Context context) {
-        if (thumbDrawable1 == null) {
-            thumbDrawable1 = context.getResources().getDrawable(R.drawable.player1);
-            thumbDrawablePressed1 = context.getResources().getDrawable(R.drawable.player1_pressed);
-            thumbDrawable2 = context.getResources().getDrawable(R.drawable.player2);
-            thumbDrawablePressed2 = context.getResources().getDrawable(R.drawable.player2_pressed);
-            innerPaint1.setColor(0xffb4e396);
-            outerPaint1.setColor(0xff6ac453);
-            innerPaint2.setColor(0xffd9e2eb);
-            outerPaint2.setColor(0xff86c5f8);
-            thumbWidth = thumbDrawable1.getIntrinsicWidth();
-            thumbHeight = thumbDrawable1.getIntrinsicHeight();
+        if (innerPaint1 == null) {
+            innerPaint1 = new Paint(Paint.ANTI_ALIAS_FLAG);
+            innerPaint1.setColor(0xffc3e3ab);
+
+            outerPaint1 = new Paint(Paint.ANTI_ALIAS_FLAG);
+            outerPaint1.setColor(0xff87bf78);
+
+            innerPaint2 = new Paint(Paint.ANTI_ALIAS_FLAG);
+            innerPaint2.setColor(0xffe4eaf0);
+
+            outerPaint2 = new Paint(Paint.ANTI_ALIAS_FLAG);
+            outerPaint2.setColor(0xff4195e5);
+
+            thumbWidth = AndroidUtilities.dp(24);
+            thumbHeight = AndroidUtilities.dp(24);
         }
     }
 
@@ -100,30 +98,18 @@ public boolean isDragging() {
     }
 
     public void draw(Canvas canvas) {
-        Drawable thumb = null;
         Paint inner = null;
         Paint outer = null;
         if (type == 0) {
-            if (!pressed) {
-                thumb = thumbDrawable1;
-            } else {
-                thumb = thumbDrawablePressed1;
-            }
             inner = innerPaint1;
             outer = outerPaint1;
         } else if (type == 1) {
-            if (!pressed) {
-                thumb = thumbDrawable2;
-            } else {
-                thumb = thumbDrawablePressed2;
-            }
             inner = innerPaint2;
             outer = outerPaint2;
         }
         int y = (height - thumbHeight) / 2;
         canvas.drawRect(thumbWidth / 2, height / 2 - AndroidUtilities.dp(1), width - thumbWidth / 2, height / 2 + AndroidUtilities.dp(1), inner);
         canvas.drawRect(thumbWidth / 2, height / 2 - AndroidUtilities.dp(1), thumbWidth / 2 + thumbX, height / 2 + AndroidUtilities.dp(1), outer);
-        thumb.setBounds(thumbX, y, thumbX + thumbWidth, y + thumbHeight);
-        thumb.draw(canvas);
+        canvas.drawCircle(thumbX + thumbWidth / 2, y + thumbHeight / 2, AndroidUtilities.dp(pressed ? 8 : 6), outer);
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
index 4f6121470..16889974b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Switch.java
@@ -32,10 +32,10 @@
 import android.widget.CompoundButton;
 
 import org.telegram.android.AndroidUtilities;
-import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.android.LocaleController;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
+import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
 
 public class Switch extends CompoundButton {
 
@@ -581,8 +581,6 @@ protected void onDraw(Canvas canvas) {
 
         final int switchTop = mSwitchTop;
         final int switchBottom = mSwitchBottom;
-        final int switchInnerTop = switchTop + padding.top;
-        final int switchInnerBottom = switchBottom - padding.bottom;
 
         final Drawable thumbDrawable = mThumbDrawable;
         if (trackDrawable != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java
index 7bfd47999..1aae15996 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java
@@ -45,7 +45,7 @@ public TimerDrawable(Context context) {
     public void setTime(int value) {
         time = value;
 
-        String timeString = null;
+        String timeString;
         if (time >= 1 && time < 60) {
             timeString = "" + value;
             if (timeString.length() < 2) {
@@ -91,7 +91,7 @@ public void setTime(int value) {
     public void draw(Canvas canvas) {
         int width = timerDrawable.getIntrinsicWidth();
         int height = timerDrawable.getIntrinsicHeight();
-        Drawable drawable = null;
+        Drawable drawable;
         if (time == 0) {
             drawable = timerDrawable;
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java
index d644d7d6d..f26e450f8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java
@@ -88,7 +88,7 @@ public void stop() {
 
     @Override
     public void draw(Canvas canvas) {
-        int y = 0;
+        int y;
         if (isChat) {
             y = AndroidUtilities.dp(6);
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java
index d562cc6bb..980237dfc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java
@@ -202,7 +202,6 @@ protected Bitmap doInBackground(Integer... objects) {
                         int h = (int) (bitmap.getHeight() * scale);
                         Rect srcRect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
                         Rect destRect = new Rect((frameWidth - w) / 2, (frameHeight - h) / 2, w, h);
-                        Paint paint = new Paint();
                         canvas.drawBitmap(bitmap, srcRect, destRect, null);
                         bitmap.recycle();
                         bitmap = result;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index a4122ab8b..f57e4f9bc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -17,7 +17,6 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.inputmethod.EditorInfo;
@@ -27,20 +26,20 @@
 import android.widget.ScrollView;
 import android.widget.TextView;
 
-import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.android.AndroidUtilities;
+import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.android.ContactsController;
 import org.telegram.android.LocaleController;
+import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.TLRPC;
 import org.telegram.android.MessagesController;
 import org.telegram.android.NotificationCenter;
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
-import org.telegram.messenger.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.BackupImageView;
+import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.LayoutHelper;
 
 public class ContactAddActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
@@ -79,7 +78,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         if (addContact) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 5a3ba06a5..5fa215915 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -23,7 +23,6 @@
 import android.text.TextWatcher;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -129,7 +128,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
 
             searching = false;
             searchWas = false;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
index 3058d6912..16e710294 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
@@ -11,7 +11,6 @@
 import android.content.Context;
 import android.os.Build;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.AbsListView;
@@ -62,7 +61,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("ChooseCountry", R.string.ChooseCountry));
@@ -185,7 +184,7 @@ public boolean onTouch(View v, MotionEvent event) {
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                Country country = null;
+                Country country;
                 if (searching && searchWas) {
                     country = searchListViewAdapter.getItem(i);
                 } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
index 22c1c2052..40807cdbe 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
@@ -19,7 +19,6 @@
 import android.os.StatFs;
 import android.text.TextUtils;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -129,7 +128,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (!receiverRegistered) {
             receiverRegistered = true;
             IntentFilter filter = new IntentFilter();
@@ -197,7 +196,7 @@ public boolean onTouch(View v, MotionEvent event) {
 
             actionModeViews.add(actionMode.addItem(done, R.drawable.ic_ab_done_gray, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
-            fragmentView = inflater.inflate(R.layout.document_select_layout, null, false);
+        fragmentView = getParentActivity().getLayoutInflater().inflate(R.layout.document_select_layout, null, false);
         listAdapter = new ListAdapter(context);
         emptyView = (TextView) fragmentView.findViewById(R.id.searchEmptyView);
             emptyView.setOnTouchListener(new View.OnTouchListener() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
index 3b571d21b..777286c27 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
@@ -39,21 +39,21 @@
 import android.widget.ListView;
 import android.widget.TextView;
 
-import org.telegram.android.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
+import org.telegram.android.MessagesController;
+import org.telegram.android.NotificationCenter;
 import org.telegram.android.UserObject;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.FileLog;
-import org.telegram.android.MessagesController;
-import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
-import org.telegram.ui.Adapters.ContactsAdapter;
-import org.telegram.ui.Adapters.SearchAdapter;
+import org.telegram.messenger.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Adapters.ContactsAdapter;
+import org.telegram.ui.Adapters.SearchAdapter;
 import org.telegram.ui.Cells.UserCell;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.LetterSectionsListView;
@@ -143,7 +143,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             searching = false;
             searchWas = false;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
index d86dd3c6a..5684bc3fb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
@@ -19,7 +19,6 @@
 import android.text.TextWatcher;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.inputmethod.EditorInfo;
@@ -29,23 +28,23 @@
 import android.widget.ListView;
 
 import org.telegram.android.AndroidUtilities;
+import org.telegram.messenger.ConnectionsManager;
 import org.telegram.android.LocaleController;
-import org.telegram.android.MessagesController;
 import org.telegram.android.MessagesStorage;
-import org.telegram.android.NotificationCenter;
-import org.telegram.messenger.ConnectionsManager;
+import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.FileLog;
+import org.telegram.android.MessagesController;
+import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
-import org.telegram.messenger.TLRPC;
-import org.telegram.ui.ActionBar.ActionBar;
-import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.UserCell;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.AvatarUpdater;
 import org.telegram.ui.Components.BackupImageView;
+import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.FrameLayoutFixed;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -139,7 +138,7 @@ public void onResume() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         if (isBroadcast) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
index 1ea12de42..3677a8ee9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
@@ -14,7 +14,6 @@
 import android.content.Intent;
 import android.os.Build;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -88,7 +87,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("InviteLink", R.string.InviteLink));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
index b0aa4da66..b75c2d366 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
@@ -10,7 +10,6 @@
 
 import android.content.Context;
 import android.os.Bundle;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
@@ -44,7 +43,7 @@ public boolean onFragmentCreate() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("EncryptionKey", R.string.EncryptionKey));
@@ -58,7 +57,7 @@ public void onItemClick(int id) {
             }
         });
 
-        fragmentView = inflater.inflate(R.layout.identicon_layout, null, false);
+        fragmentView = getParentActivity().getLayoutInflater().inflate(R.layout.identicon_layout, null, false);
         ImageView identiconView = (ImageView) fragmentView.findViewById(R.id.identicon_view);
         TextView textView = (TextView) fragmentView.findViewById(R.id.identicon_text);
         TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().getEncryptedChat(chat_id);
@@ -100,7 +99,7 @@ public boolean onPreDraw() {
                 if (fragmentView == null) {
                     return true;
                 }
-                    fragmentView.getViewTreeObserver().removeOnPreDrawListener(this);
+                fragmentView.getViewTreeObserver().removeOnPreDrawListener(this);
                 LinearLayout layout = (LinearLayout)fragmentView;
                 WindowManager manager = (WindowManager) ApplicationLoader.applicationContext.getSystemService(Context.WINDOW_SERVICE);
                 int rotation = manager.getDefaultDisplay().getRotation();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ImageListActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ImageListActivity.java
index 26a26d4cb..8601ca917 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ImageListActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ImageListActivity.java
@@ -2,8 +2,6 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.graphics.PorterDuff;
-import android.graphics.drawable.Drawable;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -48,7 +46,7 @@ public static String getBubbleName(int i){
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater){
+    public View createView(Context context){
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("BubbleStyle", R.string.BubbleStyle));
@@ -61,7 +59,7 @@ public void onItemClick(int id) {
             }
         });
 
-        fragmentView = inflater.inflate(R.layout.imagelistlayout, null, false);
+        fragmentView = getParentActivity().getLayoutInflater().inflate(R.layout.imagelistlayout, null, false);
 
         listAdapter = new CustomListAdapter(context, bubblesNamesArray, imgid);
         list=(ListView) fragmentView.findViewById(R.id.list);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
index e77659fd8..72da9005e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
@@ -15,7 +15,6 @@
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -57,7 +56,7 @@
     public ArrayList<LocaleController.LocaleInfo> searchResult;
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         searching = false;
         searchWas = false;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java
index aaecedd31..6bf55103b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java
@@ -20,7 +20,6 @@
 import android.text.Spannable;
 import android.text.method.LinkMovementMethod;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -102,7 +101,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("PrivacyLastSeen", R.string.PrivacyLastSeen));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java
index 6eee902d9..54ad9ef17 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java
@@ -17,7 +17,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -81,7 +80,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         if (isAlwaysShare) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index e38f965d0..ea696c553 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -24,6 +24,7 @@
 import android.os.Parcelable;
 import android.provider.ContactsContract;
 import android.view.ActionMode;
+import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
 import android.view.View;
@@ -61,6 +62,7 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.DrawerLayoutContainer;
 import org.telegram.ui.Adapters.DrawerLayoutAdapter;
+import org.telegram.ui.Components.DrawerPlayerView;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PasscodeView;
 
@@ -71,7 +73,8 @@
 import java.util.Locale;
 import java.util.Map;
 
-public class LaunchActivity extends Activity implements ActionBarLayout.ActionBarLayoutDelegate, NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate {
+public class LaunchActivity extends Activity implements ActionBarLayout.ActionBarLayoutDelegate, NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate {
+
     private boolean finished;
     private String videoPath;
     private String sendingText;
@@ -261,20 +264,22 @@ public void onClick(View v) {
             drawerLayoutContainer.addView(actionBarLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
         }
 
-        ListView listView = new ListView(this);
-        listView.setAdapter(drawerLayoutAdapter = new DrawerLayoutAdapter(this));
-        drawerLayoutContainer.setDrawerLayout(listView);
-        listView.setBackgroundColor(0xffffffff);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)listView.getLayoutParams();
+        FrameLayout listViewContainer = new FrameLayout(this);
+        listViewContainer.setBackgroundColor(0xffffffff);
+        drawerLayoutContainer.setDrawerLayout(listViewContainer);
+        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listViewContainer.getLayoutParams();
         Point screenSize = AndroidUtilities.getRealScreenSize();
         layoutParams.width = AndroidUtilities.isTablet() ? AndroidUtilities.dp(320) : Math.min(screenSize.x, screenSize.y) - AndroidUtilities.dp(56);
         layoutParams.height = LayoutHelper.MATCH_PARENT;
-        listView.setPadding(0, 0, 0, 0);
+        listViewContainer.setLayoutParams(layoutParams);
+
+        ListView listView = new ListView(this);
+        listView.setAdapter(drawerLayoutAdapter = new DrawerLayoutAdapter(this));
         listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
         listView.setDivider(null);
         listView.setDividerHeight(0);
-        listView.setLayoutParams(layoutParams);
         listView.setVerticalScrollBarEnabled(false);
+        listViewContainer.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -358,6 +363,16 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             }
         });
 
+        DrawerPlayerView drawerPlayerView = new DrawerPlayerView(this, listView);
+        listViewContainer.addView(drawerPlayerView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 51, Gravity.LEFT | Gravity.BOTTOM));
+        drawerPlayerView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                actionBarLayout.presentFragment(new AudioPlayerActivity());
+                drawerLayoutContainer.closeDrawer(false);
+            }
+        });
+
         drawerLayoutContainer.setParentActionBarLayout(actionBarLayout);
         actionBarLayout.setDrawerLayoutContainer(drawerLayoutContainer);
         actionBarLayout.init(mainFragmentsStack);
@@ -388,7 +403,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                 actionBarLayout.addFragmentToStack(new LoginActivity());
                 drawerLayoutContainer.setAllowOpenDrawer(false, false);
             } else {
-                actionBarLayout.addFragmentToStack(new MessagesActivity(null));
+                actionBarLayout.addFragmentToStack(new DialogsActivity(null));
                 drawerLayoutContainer.setAllowOpenDrawer(true, false);
             }
 
@@ -507,6 +522,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
         Integer push_enc_id = 0;
         Integer open_settings = 0;
         boolean showDialogsList = false;
+            boolean showPlayer = false;
 
         photoPathsArray = null;
         videoPath = null;
@@ -800,6 +816,8 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                     } else {
                         showDialogsList = true;
                     }
+                    } else if (intent.getAction().equals("com.tmessages.openplayer")) {
+                        showPlayer = true;
                 }
             }
         }
@@ -839,6 +857,30 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
             }
             pushOpened = false;
             isNew = false;
+            } else if (showPlayer) {
+                if (AndroidUtilities.isTablet()) {
+                    for (int a = 0; a < layersActionBarLayout.fragmentsStack.size(); a++) {
+                        BaseFragment fragment = layersActionBarLayout.fragmentsStack.get(a);
+                        if (fragment instanceof AudioPlayerActivity) {
+                            layersActionBarLayout.removeFragmentFromStack(fragment);
+                            break;
+                        }
+                    }
+                    actionBarLayout.showLastFragment();
+                    rightActionBarLayout.showLastFragment();
+                    drawerLayoutContainer.setAllowOpenDrawer(false, false);
+                } else {
+                    for (int a = 0; a < actionBarLayout.fragmentsStack.size(); a++) {
+                        BaseFragment fragment = actionBarLayout.fragmentsStack.get(a);
+                        if (fragment instanceof AudioPlayerActivity) {
+                            actionBarLayout.removeFragmentFromStack(fragment);
+                            break;
+                        }
+                    }
+                    drawerLayoutContainer.setAllowOpenDrawer(true, false);
+                }
+                actionBarLayout.presentFragment(new AudioPlayerActivity(), false, true, true);
+                pushOpened = true;
         } else if (videoPath != null || photoPathsArray != null || sendingText != null || documentsPathsArray != null || contactsToSend != null || documentsUrisArray != null) {
             if (!AndroidUtilities.isTablet()) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
@@ -847,13 +889,13 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
             args.putBoolean("onlySelect", true);
             args.putString("selectAlertString", LocaleController.getString("SendMessagesTo", R.string.SendMessagesTo));
             args.putString("selectAlertStringGroup", LocaleController.getString("SendMessagesToGroup", R.string.SendMessagesToGroup));
-            MessagesActivity fragment = new MessagesActivity(args);
+                DialogsActivity fragment = new DialogsActivity(args);
             fragment.setDelegate(this);
                 boolean removeLast;
             if (AndroidUtilities.isTablet()) {
-                removeLast = layersActionBarLayout.fragmentsStack.size() > 0 && layersActionBarLayout.fragmentsStack.get(layersActionBarLayout.fragmentsStack.size() - 1) instanceof MessagesActivity;
+                    removeLast = layersActionBarLayout.fragmentsStack.size() > 0 && layersActionBarLayout.fragmentsStack.get(layersActionBarLayout.fragmentsStack.size() - 1) instanceof DialogsActivity;
             } else {
-                removeLast = actionBarLayout.fragmentsStack.size() > 1 && actionBarLayout.fragmentsStack.get(actionBarLayout.fragmentsStack.size() - 1) instanceof MessagesActivity;
+                    removeLast = actionBarLayout.fragmentsStack.size() > 1 && actionBarLayout.fragmentsStack.get(actionBarLayout.fragmentsStack.size() - 1) instanceof DialogsActivity;
             }
             actionBarLayout.presentFragment(fragment, removeLast, true, true);
             pushOpened = true;
@@ -889,7 +931,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                     }
                 } else {
                     if (actionBarLayout.fragmentsStack.isEmpty()) {
-                            actionBarLayout.addFragmentToStack(new MessagesActivity(null));
+                            actionBarLayout.addFragmentToStack(new DialogsActivity(null));
                             drawerLayoutContainer.setAllowOpenDrawer(true, false);
                         }
                     }
@@ -899,7 +941,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                         actionBarLayout.addFragmentToStack(new LoginActivity());
                             drawerLayoutContainer.setAllowOpenDrawer(false, false);
                     } else {
-                            actionBarLayout.addFragmentToStack(new MessagesActivity(null));
+                            actionBarLayout.addFragmentToStack(new DialogsActivity(null));
                             drawerLayoutContainer.setAllowOpenDrawer(true, false);
                     }
                 }
@@ -958,10 +1000,10 @@ public void run() {
                                         args.putBoolean("onlySelect", true);
                                         args.putInt("dialogsType", 2);
                                         args.putString("addToGroupAlertString", LocaleController.formatString("AddToTheGroupTitle", R.string.AddToTheGroupTitle, UserObject.getUserName(user), "%1$s"));
-                                        MessagesActivity fragment = new MessagesActivity(args);
-                                        fragment.setDelegate(new MessagesActivity.MessagesActivityDelegate() {
+                                        DialogsActivity fragment = new DialogsActivity(args);
+                                        fragment.setDelegate(new DialogsActivity.MessagesActivityDelegate() {
                                             @Override
-                                            public void didSelectDialog(MessagesActivity fragment, long did, boolean param) {
+                                            public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                                                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
                                                 MessagesController.getInstance().addUserToChat(-(int) did, user, null, 0, botChat);
                                                 Bundle args = new Bundle();
@@ -1151,7 +1193,7 @@ protected void onNewIntent(Intent intent) {
     }
 
     @Override
-    public void didSelectDialog(MessagesActivity messageFragment, long dialog_id, boolean param) {
+    public void didSelectDialog(DialogsActivity messageFragment, long dialog_id, boolean param) {
         if (dialog_id != 0) {
             int lower_part = (int)dialog_id;
             int high_id = (int)(dialog_id >> 32);
@@ -1429,6 +1471,7 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     @Override
     @SuppressWarnings("unchecked")
     public void didReceivedNotification(int id, Object... args) {
+        //Log.e("didReceivedNotification",id+"");
         if (id == NotificationCenter.appDidLogout) {
             if (drawerLayoutAdapter != null) {
                 drawerLayoutAdapter.notifyDataSetChanged();
@@ -1676,9 +1719,9 @@ public boolean onKeyUp(int keyCode, KeyEvent event) {
     public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, boolean forceWithoutAnimation, ActionBarLayout layout) {
         if (AndroidUtilities.isTablet()) {
             drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity) && layersActionBarLayout.getVisibility() != View.VISIBLE, true);
-            if (fragment instanceof MessagesActivity) {
-                MessagesActivity messagesActivity = (MessagesActivity)fragment;
-                if (messagesActivity.isMainDialogList() && layout != actionBarLayout) {
+            if (fragment instanceof DialogsActivity) {
+                DialogsActivity dialogsActivity = (DialogsActivity)fragment;
+                if (dialogsActivity.isMainDialogList() && layout != actionBarLayout) {
                     actionBarLayout.removeAllFragments();
                     actionBarLayout.presentFragment(fragment, removeLast, forceWithoutAnimation, false);
                     layersActionBarLayout.removeAllFragments();
@@ -1765,9 +1808,9 @@ public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, bo
     public boolean needAddFragmentToStack(BaseFragment fragment, ActionBarLayout layout) {
         if (AndroidUtilities.isTablet()) {
             drawerLayoutContainer.setAllowOpenDrawer(!(fragment instanceof LoginActivity || fragment instanceof CountrySelectActivity) && layersActionBarLayout.getVisibility() != View.VISIBLE, true);
-            if (fragment instanceof MessagesActivity) {
-                MessagesActivity messagesActivity = (MessagesActivity)fragment;
-                if (messagesActivity.isMainDialogList() && layout != actionBarLayout) {
+            if (fragment instanceof DialogsActivity) {
+                DialogsActivity dialogsActivity = (DialogsActivity)fragment;
+                if (dialogsActivity.isMainDialogList() && layout != actionBarLayout) {
                     actionBarLayout.removeAllFragments();
                     actionBarLayout.addFragmentToStack(fragment);
                     layersActionBarLayout.removeAllFragments();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
index 4f944cfe3..36cec820e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
@@ -21,7 +21,6 @@
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -40,6 +39,7 @@
 import com.google.android.gms.maps.CameraUpdateFactory;
 import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.MapView;
+
 import com.google.android.gms.maps.MapsInitializer;
 import com.google.android.gms.maps.model.BitmapDescriptorFactory;
 import com.google.android.gms.maps.model.CircleOptions;
@@ -106,7 +106,7 @@
     private CircleOptions circleOptions;
     private LocationActivityDelegate delegate;
 
-    private int overScrollHeight = AndroidUtilities.displaySize.x - AndroidUtilities.getCurrentActionBarHeight() - AndroidUtilities.dp(66);
+    private int overScrollHeight = AndroidUtilities.displaySize.x - ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(66);
     private int halfHeight;
 
     private final static int share = 1;
@@ -151,7 +151,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         if (AndroidUtilities.isTablet()) {
@@ -500,7 +500,7 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
 
             View shadow = new View(context);
             shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
-            mapViewClip.addView(shadow, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, AndroidUtilities.dp(3), Gravity.LEFT | Gravity.BOTTOM));
+            mapViewClip.addView(shadow, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 3, Gravity.LEFT | Gravity.BOTTOM));
 
             markerImageView = new ImageView(context);
             markerImageView.setImageResource(R.drawable.map_pin);
@@ -695,7 +695,7 @@ private void updateClipView(int firstVisibleItem) {
 
     private void fixLayoutInternal(final boolean resume) {
         if (listView != null) {
-            int height = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + AndroidUtilities.getCurrentActionBarHeight();
+            int height = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
             int viewHeight = fragmentView.getMeasuredHeight();
             if (viewHeight == 0) {
                 return;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index fd5229129..0c75d0923 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -110,7 +110,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setTitle(LocaleController.getString("AppName", R.string.AppName));
 
             actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -396,9 +396,9 @@ public void saveSelfArgs(Bundle outState) {
 
     public void needFinishActivity() {
         clearCurrentState();
-            presentFragment(new MessagesActivity(null), true);
-            NotificationCenter.getInstance().postNotificationName(NotificationCenter.mainUserInfoChanged);
-        }
+        presentFragment(new DialogsActivity(null), true);
+        NotificationCenter.getInstance().postNotificationName(NotificationCenter.mainUserInfoChanged);
+    }
 
     public class PhoneView extends SlideView implements AdapterView.OnItemSelectedListener {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index 8866ae015..de99c24b9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -21,7 +21,6 @@
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
@@ -42,6 +41,7 @@
 import org.telegram.android.AnimationCompat.AnimatorSetProxy;
 import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.android.LocaleController;
+import org.telegram.android.MediaController;
 import org.telegram.android.MessageObject;
 import org.telegram.android.MessagesController;
 import org.telegram.android.NotificationCenter;
@@ -217,7 +217,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setTitle("");
         actionBar.setAllowOverlayTitle(false);
@@ -284,10 +284,10 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     Bundle args = new Bundle();
                     args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 1);
-                    MessagesActivity fragment = new MessagesActivity(args);
-                    fragment.setDelegate(new MessagesActivity.MessagesActivityDelegate() {
+                    DialogsActivity fragment = new DialogsActivity(args);
+                    fragment.setDelegate(new DialogsActivity.MessagesActivityDelegate() {
                         @Override
-                        public void didSelectDialog(MessagesActivity fragment, long did, boolean param) {
+                        public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                             int lower_part = (int) did;
                             if (lower_part != 0) {
                                 Bundle args = new Bundle();
@@ -374,14 +374,7 @@ public void onTextChanged(EditText editText) {
         dropDownContainer.setSubMenuOpenSide(1);
         dropDownContainer.addSubItem(shared_media_item, LocaleController.getString("SharedMediaTitle", R.string.SharedMediaTitle), 0);
         dropDownContainer.addSubItem(files_item, LocaleController.getString("DocumentsTitle", R.string.DocumentsTitle), 0);
-        actionBar.addView(dropDownContainer);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) dropDownContainer.getLayoutParams();
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.rightMargin = AndroidUtilities.dp(40);
-        layoutParams.leftMargin = AndroidUtilities.isTablet() ? AndroidUtilities.dp(64) : AndroidUtilities.dp(56);
-        layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
-        dropDownContainer.setLayoutParams(layoutParams);
+        actionBar.addView(dropDownContainer, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, AndroidUtilities.isTablet() ? 64 : 56, 0, 40, 0));
         dropDownContainer.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -400,13 +393,7 @@ public void onClick(View view) {
         dropDown.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_arrow_drop_down, 0);
         dropDown.setCompoundDrawablePadding(AndroidUtilities.dp(4));
         dropDown.setPadding(0, 0, AndroidUtilities.dp(10), 0);
-        dropDownContainer.addView(dropDown);
-        layoutParams = (FrameLayout.LayoutParams) dropDown.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.WRAP_CONTENT;
-        layoutParams.leftMargin = AndroidUtilities.dp(16);
-        layoutParams.gravity = Gravity.CENTER_VERTICAL;
-        dropDown.setLayoutParams(layoutParams);
+        dropDownContainer.addView(dropDown, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL, 16, 0, 0, 0));
 
         final ActionBarMenu actionMode = actionBar.createActionMode();
         actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
@@ -426,12 +413,7 @@ public boolean onTouch(View v, MotionEvent event) {
                 return true;
             }
         });
-        actionMode.addView(selectedMessagesCountTextView);
-        LinearLayout.LayoutParams layoutParams1 = (LinearLayout.LayoutParams) selectedMessagesCountTextView.getLayoutParams();
-        layoutParams1.weight = 1;
-        layoutParams1.width = 0;
-        layoutParams1.height = LayoutHelper.MATCH_PARENT;
-        selectedMessagesCountTextView.setLayoutParams(layoutParams1);
+        actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f));
 
         if ((int) dialog_id != 0) {
             actionModeViews.add(actionMode.addItem(forward, R.drawable.ic_ab_fwd_forward, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
@@ -450,12 +432,7 @@ public boolean onTouch(View v, MotionEvent event) {
         listView.setDividerHeight(0);
         listView.setDrawSelectorOnTop(true);
         listView.setClipToPadding(false);
-        frameLayout.addView(listView);
-        layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.gravity = Gravity.TOP;
-        listView.setLayoutParams(layoutParams);
+        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
@@ -515,11 +492,7 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int i, long id)
         emptyView.setGravity(Gravity.CENTER);
         emptyView.setVisibility(View.GONE);
         emptyView.setBackgroundColor(0xfff0f0f0);
-        frameLayout.addView(emptyView);
-        layoutParams = (FrameLayout.LayoutParams) emptyView.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        emptyView.setLayoutParams(layoutParams);
+        frameLayout.addView(emptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         emptyView.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -528,42 +501,24 @@ public boolean onTouch(View v, MotionEvent event) {
         });
 
         emptyImageView = new ImageView(context);
-        emptyView.addView(emptyImageView);
-        layoutParams1 = (LinearLayout.LayoutParams) emptyImageView.getLayoutParams();
-        layoutParams1.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams1.height = LayoutHelper.WRAP_CONTENT;
-        emptyImageView.setLayoutParams(layoutParams1);
+        emptyView.addView(emptyImageView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
 
         emptyTextView = new TextView(context);
         emptyTextView.setTextColor(0xff8a8a8a);
         emptyTextView.setGravity(Gravity.CENTER);
         emptyTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 17);
         emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), AndroidUtilities.dp(128));
-        emptyView.addView(emptyTextView);
-        layoutParams1 = (LinearLayout.LayoutParams) emptyTextView.getLayoutParams();
-        layoutParams1.topMargin = AndroidUtilities.dp(24);
-        layoutParams1.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams1.height = LayoutHelper.WRAP_CONTENT;
-        layoutParams1.gravity = Gravity.CENTER;
-        emptyTextView.setLayoutParams(layoutParams1);
+        emptyView.addView(emptyTextView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER, 0, 24, 0, 0));
 
         progressView = new LinearLayout(context);
         progressView.setGravity(Gravity.CENTER);
         progressView.setOrientation(LinearLayout.VERTICAL);
         progressView.setVisibility(View.GONE);
         progressView.setBackgroundColor(0xfff0f0f0);
-        frameLayout.addView(progressView);
-        layoutParams = (FrameLayout.LayoutParams) progressView.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        progressView.setLayoutParams(layoutParams);
+        frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
         ProgressBar progressBar = new ProgressBar(context);
-        progressView.addView(progressBar);
-        layoutParams1 = (LinearLayout.LayoutParams) progressBar.getLayoutParams();
-        layoutParams1.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams1.height = LayoutHelper.WRAP_CONTENT;
-        progressBar.setLayoutParams(layoutParams1);
+        progressView.addView(progressBar, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
 
         switchToCurrentSelectedMode();
 
@@ -639,7 +594,6 @@ public void didReceivedNotification(int id, Object... args) {
         } else if (id == NotificationCenter.didReceivedNewMessages) {
             long uid = (Long) args[0];
             if (uid == dialog_id) {
-                boolean markAsRead = false;
                 ArrayList<MessageObject> arr = (ArrayList<MessageObject>) args[1];
                 boolean enc = ((int) dialog_id) == 0;
                 boolean updated = false;
@@ -804,7 +758,6 @@ private void switchToCurrentSelectedMode() {
             } else if (selectedMode == 1) {
                 listView.setAdapter(documentsAdapter);
                 dropDown.setText(LocaleController.getString("DocumentsTitle", R.string.DocumentsTitle));
-                int lower_id = (int) dialog_id;
                 emptyImageView.setImageResource(R.drawable.tip2);
                 emptyTextView.setText(LocaleController.getString("NoSharedFiles", R.string.NoSharedFiles));
                 searchItem.setVisibility(!sharedMediaData[1].messages.isEmpty() ? View.VISIBLE : View.GONE);
@@ -887,6 +840,11 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
                 if (view instanceof SharedDocumentCell) {
                     SharedDocumentCell cell = (SharedDocumentCell) view;
                     if (cell.isLoaded()) {
+                        if (message.isMusic()) {
+                            if (MediaController.getInstance().setPlaylist(sharedMediaData[1].messages, message)) {
+                                return;
+                            }
+                        }
                         File f = null;
                         String fileName = FileLoader.getAttachFileName(message.messageOwner.media.document);
                         if (message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
deleted file mode 100644
index b34bcb558..000000000
--- a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
+++ /dev/null
@@ -1,988 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 1.3.2.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013.
- */
-
-package org.telegram.ui;
-
-import android.animation.ObjectAnimator;
-import android.animation.StateListAnimator;
-import android.annotation.SuppressLint;
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.SharedPreferences;
-import android.content.res.Configuration;
-import android.graphics.Outline;
-import android.graphics.PorterDuff;
-import android.graphics.drawable.Drawable;
-import android.os.Build;
-import android.os.Bundle;
-import android.util.TypedValue;
-import android.view.Gravity;
-import android.view.LayoutInflater;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.ViewOutlineProvider;
-import android.view.ViewTreeObserver;
-import android.view.animation.AccelerateDecelerateInterpolator;
-import android.widget.EditText;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.ListView;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import org.telegram.android.AndroidUtilities;
-import org.telegram.android.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.android.AnimationCompat.ViewProxy;
-import org.telegram.android.ContactsController;
-import org.telegram.android.LocaleController;
-import org.telegram.android.MessageObject;
-import org.telegram.android.MessagesController;
-import org.telegram.android.MessagesStorage;
-import org.telegram.android.NotificationCenter;
-import org.telegram.android.NotificationsController;
-import org.telegram.android.UserObject;
-import org.telegram.android.support.widget.LinearLayoutManager;
-import org.telegram.android.support.widget.RecyclerView;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.R;
-import org.telegram.messenger.TLRPC;
-import org.telegram.messenger.UserConfig;
-import org.telegram.ui.ActionBar.ActionBar;
-import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.ui.ActionBar.ActionBarMenuItem;
-import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.ui.ActionBar.BottomSheet;
-import org.telegram.ui.ActionBar.MenuDrawable;
-import org.telegram.ui.Adapters.DialogsAdapter;
-import org.telegram.ui.Adapters.DialogsSearchAdapter;
-import org.telegram.ui.Cells.DialogCell;
-import org.telegram.ui.Cells.UserCell;
-import org.telegram.ui.Components.AlertsCreator;
-import org.telegram.ui.Components.EmptyTextProgressView;
-import org.telegram.ui.Components.LayoutHelper;
-import org.telegram.ui.Components.RecyclerListView;
-import org.telegram.ui.Components.ResourceLoader;
-
-import java.util.ArrayList;
-
-public class MessagesActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
-    
-    private RecyclerListView listView;
-    private LinearLayoutManager layoutManager;
-    private DialogsAdapter dialogsAdapter;
-    private DialogsSearchAdapter dialogsSearchAdapter;
-    private EmptyTextProgressView searchEmptyView;
-    private ProgressBar progressView;
-    private LinearLayout emptyView;
-    private ActionBarMenuItem passcodeItem;
-    private ImageView floatingButton;
-
-    private int prevPosition;
-    private int prevTop;
-    private boolean scrollUpdated;
-    private boolean floatingHidden;
-    private final AccelerateDecelerateInterpolator floatingInterpolator = new AccelerateDecelerateInterpolator();
-
-    private String selectAlertString;
-    private String selectAlertStringGroup;
-    private String addToGroupAlertString;
-    private int dialogsType;
-
-    private static boolean dialogsLoaded;
-    private boolean searching;
-    private boolean searchWas;
-    private boolean onlySelect;
-    private long selectedDialog;
-    private String searchString;
-    private long openedDialogId;
-
-    private MessagesActivityDelegate delegate;
-
-    public interface MessagesActivityDelegate {
-        void didSelectDialog(MessagesActivity fragment, long dialog_id, boolean param);
-    }
-
-    public MessagesActivity(Bundle args) {
-        super(args);
-    }
-
-    @Override
-    public boolean onFragmentCreate() {
-        super.onFragmentCreate();
-
-        if (getArguments() != null) {
-            onlySelect = arguments.getBoolean("onlySelect", false);
-            dialogsType = arguments.getInt("dialogsType", 0);
-            selectAlertString = arguments.getString("selectAlertString");
-            selectAlertStringGroup = arguments.getString("selectAlertStringGroup");
-            addToGroupAlertString = arguments.getString("addToGroupAlertString");
-        }
-
-        if (searchString == null) {
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.dialogsNeedReload);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.emojiDidLoaded);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.updateInterfaces);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.encryptedChatUpdated);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.contactsDidLoaded);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.appDidLogout);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.openedChatChanged);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageReceivedByAck);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageReceivedByServer);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageSendError);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.didSetPasscode);
-        }
-
-
-        if (!dialogsLoaded) {
-            MessagesController.getInstance().loadDialogs(0, 0, 100, true);
-            ContactsController.getInstance().checkInviteText();
-            dialogsLoaded = true;
-        }
-        return true;
-    }
-
-    @Override
-    public void onFragmentDestroy() {
-        super.onFragmentDestroy();
-        if (searchString == null) {
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.dialogsNeedReload);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.emojiDidLoaded);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.updateInterfaces);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.encryptedChatUpdated);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.contactsDidLoaded);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.appDidLogout);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.openedChatChanged);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.messageReceivedByAck);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.messageReceivedByServer);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.messageSendError);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.didSetPasscode);
-        }
-        delegate = null;
-    }
-
-    @Override
-    public View createView(final Context context, LayoutInflater inflater) {
-            searching = false;
-            searchWas = false;
-
-            ResourceLoader.loadRecources(context);
-
-            SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-            ActionBarMenu menu = actionBar.createMenu();
-            if (!onlySelect && searchString == null) {
-                Drawable lock = getParentActivity().getResources().getDrawable(R.drawable.lock_close);
-                lock.setColorFilter(themePrefs.getInt("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-                passcodeItem = menu.addItem(1, lock);
-                updatePasscodeButton();
-            }
-            //ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
-            Drawable search = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_search);
-            ActionBarMenuItem item = menu.addItem(0, search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
-                @Override
-                public void onSearchExpand() {
-                    searching = true;
-                if (listView != null) {
-                        if (searchString != null) {
-                        listView.setEmptyView(searchEmptyView);
-                        progressView.setVisibility(View.GONE);
-                        emptyView.setVisibility(View.GONE);
-                    }
-                        if (!onlySelect) {
-                            floatingButton.setVisibility(View.GONE);
-                        }
-                    }
-                    updatePasscodeButton();
-                }
-
-                @Override
-            public boolean canCollapseSearch() {
-                    if (searchString != null) {
-                        finishFragment();
-                        return false;
-                    }
-                return true;
-            }
-
-            @Override
-            public void onSearchCollapse() {
-                    searching = false;
-                    searchWas = false;
-                if (listView != null) {
-                    searchEmptyView.setVisibility(View.GONE);
-                    if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
-                        emptyView.setVisibility(View.GONE);
-                        listView.setEmptyView(progressView);
-                    } else {
-                        progressView.setVisibility(View.GONE);
-                        listView.setEmptyView(emptyView);
-                        }
-                        if (!onlySelect) {
-                            floatingButton.setVisibility(View.VISIBLE);
-                            floatingHidden = true;
-                            ViewProxy.setTranslationY(floatingButton, AndroidUtilities.dp(100));
-                            hideFloatingButton(false);
-                        }
-                    if (listView.getAdapter() != dialogsAdapter) {
-                        listView.setAdapter(dialogsAdapter);
-                            dialogsAdapter.notifyDataSetChanged();
-                        }
-                    }
-                    if (dialogsSearchAdapter != null) {
-                    dialogsSearchAdapter.searchDialogs(null, dialogsType);
-                    }
-                    updatePasscodeButton();
-                }
-
-                @Override
-                public void onTextChanged(EditText editText) {
-                    String text = editText.getText().toString();
-                    if (text.length() != 0) {
-                        searchWas = true;
-                        if (dialogsSearchAdapter != null) {
-                        listView.setAdapter(dialogsSearchAdapter);
-                            dialogsSearchAdapter.notifyDataSetChanged();
-                        }
-                    if (searchEmptyView != null && listView.getEmptyView() != searchEmptyView) {
-                        emptyView.setVisibility(View.GONE);
-                        progressView.setVisibility(View.GONE);
-                        searchEmptyView.showTextView();
-                        listView.setEmptyView(searchEmptyView);
-                        }
-                    }
-                    if (dialogsSearchAdapter != null) {
-                    dialogsSearchAdapter.searchDialogs(text, dialogsType);
-                    }
-                }
-            });
-            item.getSearchField().setHint(LocaleController.getString("Search", R.string.Search));
-            item.getSearchField().setTextColor(themePrefs.getInt("chatsHeaderTitleColor", 0xffffffff));
-            Drawable clear = getParentActivity().getResources().getDrawable(R.drawable.ic_close_white);
-            clear.setColorFilter(AndroidUtilities.getIntDef("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-            item.getClearButton().setImageDrawable(clear);
-            if (onlySelect) {
-                //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-                Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
-                back.setColorFilter(themePrefs.getInt("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-                actionBar.setBackButtonDrawable(back);
-                actionBar.setTitle(LocaleController.getString("SelectChat", R.string.SelectChat));
-            } else {
-                if (searchString != null) {
-                    actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-                } else {
-                actionBar.setBackButtonDrawable(new MenuDrawable());
-                }
-                actionBar.setTitle(LocaleController.getString("AppName", R.string.AppName));
-            }
-            actionBar.setAllowOverlayTitle(true);
-
-            actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
-                @Override
-                public void onItemClick(int id) {
-                    if (id == -1) {
-                        if (onlySelect) {
-                            finishFragment();
-                        } else if (parentLayout != null) {
-                            parentLayout.getDrawerLayoutContainer().openDrawer(false);
-                        }
-                } else if (id == 1) {
-                        UserConfig.appLocked = !UserConfig.appLocked;
-                        UserConfig.saveConfig(false);
-                        updatePasscodeButton();
-                    }
-                }
-            });
-
-
-        FrameLayout frameLayout = new FrameLayout(context);
-        fragmentView = frameLayout;
-        
-        listView = new RecyclerListView(context);
-        listView.setVerticalScrollBarEnabled(true);
-        listView.setItemAnimator(null);
-        listView.setInstantClick(true);
-        listView.setLayoutAnimation(null);
-        layoutManager = new LinearLayoutManager(context) {
-            @Override
-            public boolean supportsPredictiveItemAnimations() {
-                return false;
-            }
-        };
-        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
-        listView.setLayoutManager(layoutManager);
-            if (Build.VERSION.SDK_INT >= 11) {
-            listView.setVerticalScrollbarPosition(LocaleController.isRTL ? ListView.SCROLLBAR_POSITION_LEFT : ListView.SCROLLBAR_POSITION_RIGHT);
-            }
-        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
-        listView.setOnItemClickListener(new RecyclerListView.OnItemClickListener() {
-            @Override
-            public void onItemClick(View view, int position) {
-                if (listView == null || listView.getAdapter() == null) {
-                        return;
-                    }
-                    long dialog_id = 0;
-                    int message_id = 0;
-                RecyclerView.Adapter adapter = listView.getAdapter();
-                    if (adapter == dialogsAdapter) {
-                    TLRPC.TL_dialog dialog = dialogsAdapter.getItem(position);
-                        if (dialog == null) {
-                            return;
-                        }
-                        dialog_id = dialog.id;
-                    } else if (adapter == dialogsSearchAdapter) {
-                    Object obj = dialogsSearchAdapter.getItem(position);
-                        if (obj instanceof TLRPC.User) {
-                            dialog_id = ((TLRPC.User) obj).id;
-                        if (dialogsSearchAdapter.isGlobalSearch(position)) {
-                                ArrayList<TLRPC.User> users = new ArrayList<>();
-                            users.add((TLRPC.User) obj);
-                                MessagesController.getInstance().putUsers(users, false);
-                                MessagesStorage.getInstance().putUsersAndChats(users, null, false, true);
-                            }
-                        } else if (obj instanceof TLRPC.Chat) {
-                            if (((TLRPC.Chat) obj).id > 0) {
-                                dialog_id = -((TLRPC.Chat) obj).id;
-                            } else {
-                                dialog_id = AndroidUtilities.makeBroadcastId(((TLRPC.Chat) obj).id);
-                            }
-                        } else if (obj instanceof TLRPC.EncryptedChat) {
-                        dialog_id = ((long) ((TLRPC.EncryptedChat) obj).id) << 32;
-                        } else if (obj instanceof MessageObject) {
-                        MessageObject messageObject = (MessageObject) obj;
-                            dialog_id = messageObject.getDialogId();
-                            message_id = messageObject.getId();
-                            dialogsSearchAdapter.addHashtagsFromMessage(dialogsSearchAdapter.getLastSearchString());
-                        } else if (obj instanceof String) {
-                            actionBar.openSearchField((String) obj);
-                        }
-                    }
-
-                    if (dialog_id == 0) {
-                        return;
-                    }
-
-                    if (onlySelect) {
-                        didSelectResult(dialog_id, true, false);
-                    } else {
-                        Bundle args = new Bundle();
-                    int lower_part = (int) dialog_id;
-                    int high_id = (int) (dialog_id >> 32);
-                        if (lower_part != 0) {
-                            if (high_id == 1) {
-                                args.putInt("chat_id", lower_part);
-                            } else {
-                                if (lower_part > 0) {
-                                    args.putInt("user_id", lower_part);
-                                } else if (lower_part < 0) {
-                                    args.putInt("chat_id", -lower_part);
-                                }
-                            }
-                        } else {
-                            args.putInt("enc_id", high_id);
-                        }
-                        if (message_id != 0) {
-                            args.putInt("message_id", message_id);
-                        } else {
-                            if (actionBar != null) {
-                                actionBar.closeSearchField();
-                            }
-                        }
-                        if (AndroidUtilities.isTablet()) {
-                        if (openedDialogId == dialog_id && adapter != dialogsSearchAdapter) {
-                                return;
-                            }
-                            if (dialogsAdapter != null) {
-                            dialogsAdapter.setOpenedDialogId(openedDialogId = dialog_id);
-                            updateVisibleRows(MessagesController.UPDATE_MASK_SELECT_DIALOG);
-                        }
-                        }
-                        if (searchString != null) {
-                            NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
-                        presentFragment(new ChatActivity(args));
-                        } else {
-                            presentFragment(new ChatActivity(args));
-                        }
-                    }
-                }
-            });
-        listView.setOnItemLongClickListener(new RecyclerListView.OnItemLongClickListener() {
-            @Override
-            public void onItemClick(View view, int position) {
-                    if (onlySelect || searching && searchWas || getParentActivity() == null) {
-                        if (searchWas && searching) {
-                        RecyclerView.Adapter adapter = listView.getAdapter();
-                            if (adapter == dialogsSearchAdapter) {
-                            Object item = dialogsSearchAdapter.getItem(position);
-                                if (item instanceof String) {
-                                    AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-                                    builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
-                                    builder.setMessage(LocaleController.getString("ClearSearch", R.string.ClearSearch));
-                                    builder.setPositiveButton(LocaleController.getString("ClearButton", R.string.ClearButton).toUpperCase(), new DialogInterface.OnClickListener() {
-                                        @Override
-                                        public void onClick(DialogInterface dialogInterface, int i) {
-                                            dialogsSearchAdapter.clearRecentHashtags();
-                                        }
-                                    });
-                                    builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-                                showDialog(builder.create());
-                                return;
-                                }
-                            }
-                        }
-                    return;
-                    }
-                    TLRPC.TL_dialog dialog;
-                ArrayList<TLRPC.TL_dialog> dialogs = getDialogsArray();
-                if (position < 0 || position >= dialogs.size()) {
-                        return;
-                        }
-                dialog = dialogs.get(position);
-                    selectedDialog = dialog.id;
-
-                /*AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-                    builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
-
-
-                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-                showDialog(builder.create());*/
-
-                BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
-                int lower_id = (int) selectedDialog;
-                int high_id = (int) (selectedDialog >> 32);
-
-                    final boolean isChat = lower_id < 0 && high_id != 1;
-
-                int rightIcon = MessagesController.getInstance().isDialogMuted(selectedDialog) ? R.drawable.mute_fixed : 0;
-
-
-                    builder.setItems(new CharSequence[]{
-
-                            LocaleController.getString("ClearHistory", R.string.ClearHistory),
-                            isChat ? LocaleController.getString("DeleteChat", R.string.DeleteChat) : LocaleController.getString("Delete", R.string.Delete),
-                            rightIcon != 0 ? LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications) : LocaleController.getString("MuteNotifications", R.string.MuteNotifications)}, new DialogInterface.OnClickListener() {
-                        @Override
-                        public void onClick(DialogInterface dialog, final int which) {
-                            if(which == 2){
-                                boolean muted = MessagesController.getInstance().isDialogMuted(selectedDialog);
-                                if (!muted) {
-                                    showDialog(AlertsCreator.createMuteAlert(getParentActivity(), selectedDialog));
-                                } else {
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-                                    SharedPreferences.Editor editor = preferences.edit();
-                                    editor.putInt("notify2_" + selectedDialog, 0);
-                                    MessagesStorage.getInstance().setDialogFlags(selectedDialog, 0);
-                                    editor.commit();
-                                    TLRPC.TL_dialog dialg = MessagesController.getInstance().dialogs_dict.get(selectedDialog);
-                                    if (dialg != null) {
-                                        dialg.notify_settings = new TLRPC.TL_peerNotifySettings();
-                                    }
-                                    NotificationsController.updateServerNotificationsSettings(selectedDialog);
-                                }
-                            }else{
-                                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-                                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
-                                if (which == 0) {
-                                    builder.setMessage(LocaleController.getString("AreYouSureClearHistory", R.string.AreYouSureClearHistory));
-                                } else {
-                                    if (isChat) {
-                                        builder.setMessage(LocaleController.getString("AreYouSureDeleteAndExit", R.string.AreYouSureDeleteAndExit));
-                                    } else {
-                                        builder.setMessage(LocaleController.getString("AreYouSureDeleteThisChat", R.string.AreYouSureDeleteThisChat));
-                                    }
-                                }
-                                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
-                                    @Override
-                                    public void onClick(DialogInterface dialogInterface, int i) {
-                                        if (which != 0) {
-                                            if (isChat) {
-                                            TLRPC.Chat currentChat = MessagesController.getInstance().getChat((int) -selectedDialog);
-                                            if (currentChat != null && currentChat.left || currentChat instanceof TLRPC.TL_chatForbidden) {
-                                            MessagesController.getInstance().deleteDialog(selectedDialog, 0, false);
-                                            } else {
-                                                MessagesController.getInstance().deleteUserFromChat((int) -selectedDialog, MessagesController.getInstance().getUser(UserConfig.getClientUserId()), null);
-                                            }
-                                        } else {
-                                            MessagesController.getInstance().deleteDialog(selectedDialog, 0, false);
-                                            }
-                                            if (AndroidUtilities.isTablet()) {
-                                                NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats, selectedDialog);
-                                            }
-                                    } else {
-                                        MessagesController.getInstance().deleteDialog(selectedDialog, 0, true);
-                                        }
-                                    }
-                                });
-                                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-                            showDialog(builder.create());
-                            }
-                        }
-                    });
-                showDialog(builder.create());
-            }
-        });
-
-        searchEmptyView = new EmptyTextProgressView(context);
-        searchEmptyView.setVisibility(View.GONE);
-        searchEmptyView.setShowAtCenter(true);
-        searchEmptyView.setText(LocaleController.getString("NoResult", R.string.NoResult));
-        frameLayout.addView(searchEmptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
-
-        emptyView = new LinearLayout(context);
-        emptyView.setOrientation(LinearLayout.VERTICAL);
-        emptyView.setVisibility(View.GONE);
-        emptyView.setGravity(Gravity.CENTER);
-        frameLayout.addView(emptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
-        emptyView.setOnTouchListener(new View.OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                return true;
-            }
-        });
-
-        TextView textView = new TextView(context);
-        textView.setText(LocaleController.getString("NoChats", R.string.NoChats));
-        textView.setTextColor(0xff959595);
-        textView.setGravity(Gravity.CENTER);
-        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
-        emptyView.addView(textView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
-
-        textView = new TextView(context);
-        String help = LocaleController.getString("NoChatsHelp", R.string.NoChatsHelp);
-        if (AndroidUtilities.isTablet() && !AndroidUtilities.isSmallTablet()) {
-            help = help.replace("\n", " ");
-        }
-        textView.setText(help);
-        textView.setTextColor(0xff959595);
-        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
-        textView.setGravity(Gravity.CENTER);
-        textView.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(6), AndroidUtilities.dp(8), 0);
-        textView.setLineSpacing(AndroidUtilities.dp(2), 1);
-        emptyView.addView(textView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
-
-        progressView = new ProgressBar(context);
-        progressView.setVisibility(View.GONE);
-        frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
-
-        floatingButton = new ImageView(context);
-        floatingButton.setVisibility(onlySelect ? View.GONE : View.VISIBLE);
-        floatingButton.setScaleType(ImageView.ScaleType.CENTER);
-        floatingButton.setBackgroundResource(R.drawable.floating_states);
-        floatingButton.setImageResource(R.drawable.floating_pencil);
-        if (Build.VERSION.SDK_INT >= 21) {
-            StateListAnimator animator = new StateListAnimator();
-            animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(floatingButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
-            animator.addState(new int[]{}, ObjectAnimator.ofFloat(floatingButton, "translationZ", AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
-            floatingButton.setStateListAnimator(animator);
-            floatingButton.setOutlineProvider(new ViewOutlineProvider() {
-                @SuppressLint("NewApi")
-                @Override
-                public void getOutline(View view, Outline outline) {
-                    outline.setOval(0, 0, AndroidUtilities.dp(56), AndroidUtilities.dp(56));
-                }
-            });
-        }
-        frameLayout.addView(floatingButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 14));
-        floatingButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Bundle args = new Bundle();
-                args.putBoolean("destroyAfterSelect", true);
-                presentFragment(new ContactsActivity(args));
-            }
-        });
-
-        listView.setOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
-                if (newState == RecyclerView.SCROLL_STATE_DRAGGING && searching && searchWas) {
-                        AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
-                    }
-                }
-
-                @Override
-            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
-                int firstVisibleItem = layoutManager.findFirstVisibleItemPosition();
-                int visibleItemCount = Math.abs(layoutManager.findLastVisibleItemPosition() - firstVisibleItem) + 1;
-                int totalItemCount = recyclerView.getAdapter().getItemCount();
-
-                    if (searching && searchWas) {
-                    if (visibleItemCount > 0 && layoutManager.findLastVisibleItemPosition() == totalItemCount - 1 && !dialogsSearchAdapter.isMessagesSearchEndReached()) {
-                            dialogsSearchAdapter.loadMoreSearchMessages();
-                        }
-                        return;
-                    }
-                    if (visibleItemCount > 0) {
-                    if (layoutManager.findLastVisibleItemPosition() == getDialogsArray().size()) {
-                            MessagesController.getInstance().loadDialogs(MessagesController.getInstance().dialogs.size(), MessagesController.getInstance().dialogsServerOnly.size(), 100, true);
-                        }
-                    }
-
-                    if (floatingButton.getVisibility() != View.GONE) {
-                    final View topChild = recyclerView.getChildAt(0);
-                        int firstViewTop = 0;
-                        if (topChild != null) {
-                            firstViewTop = topChild.getTop();
-                        }
-                        boolean goingDown;
-                        boolean changed = true;
-                        if (prevPosition == firstVisibleItem) {
-                            final int topDelta = prevTop - firstViewTop;
-                            goingDown = firstViewTop < prevTop;
-                            changed = Math.abs(topDelta) > 1;
-                        } else {
-                            goingDown = firstVisibleItem > prevPosition;
-                        }
-                        if (changed && scrollUpdated) {
-                            hideFloatingButton(goingDown);
-                        }
-                        prevPosition = firstVisibleItem;
-                        prevTop = firstViewTop;
-                        scrollUpdated = true;
-                    }
-                }
-            });
-
-        if (searchString == null) {
-            dialogsAdapter = new DialogsAdapter(context, dialogsType);
-            if (AndroidUtilities.isTablet() && openedDialogId != 0) {
-                dialogsAdapter.setOpenedDialogId(openedDialogId);
-            }
-            listView.setAdapter(dialogsAdapter);
-        }
-        int type = 0;
-        if (searchString != null) {
-            type = 2;
-        } else if (!onlySelect) {
-            type = 1;
-        }
-        dialogsSearchAdapter = new DialogsSearchAdapter(context, type);
-        dialogsSearchAdapter.setDelegate(new DialogsSearchAdapter.MessagesActivitySearchAdapterDelegate() {
-            @Override
-            public void searchStateChanged(boolean search) {
-                if (searching && searchWas && searchEmptyView != null) {
-                    if (search) {
-                        searchEmptyView.showProgress();
-                    } else {
-                        searchEmptyView.showTextView();
-                    }
-                }
-            }
-        });
-
-        if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
-            searchEmptyView.setVisibility(View.GONE);
-            emptyView.setVisibility(View.GONE);
-            listView.setEmptyView(progressView);
-        } else {
-            searchEmptyView.setVisibility(View.GONE);
-            progressView.setVisibility(View.GONE);
-            listView.setEmptyView(emptyView);
-        }
-            if (searchString != null) {
-                actionBar.openSearchField(searchString);
-            }
-
-        return fragmentView;
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        if (dialogsAdapter != null) {
-            dialogsAdapter.notifyDataSetChanged();
-        }
-        if (dialogsSearchAdapter != null) {
-            dialogsSearchAdapter.notifyDataSetChanged();
-        }
-        updateTheme();
-    }
-
-    private void updateTheme(){
-        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-        int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
-        //UpdateupdateActionBarTitle
-        int value = themePrefs.getInt("chatsHeaderTitle", 0);
-        String title = LocaleController.getString("AppName", R.string.AppName);
-        TLRPC.User user = UserConfig.getCurrentUser();
-        if( value == 1){
-            title = LocaleController.getString("ShortAppName", R.string.ShortAppName);
-        } else if( value == 2){
-            if (user != null && (user.first_name != null || user.last_name != null)) {
-                title = ContactsController.formatName(user.first_name, user.last_name);
-            }
-        } else if(value == 3){
-            if (user != null && user.username != null && user.username.length() != 0) {
-                title = "@" + user.username;
-            }
-        } else if(value == 4){
-            title = "";
-        }
-        actionBar.setTitle(title);
-        actionBar.setTitleColor(themePrefs.getInt("chatsHeaderTitleColor", 0xffffffff));
-
-        actionBar.setBackgroundColor(themePrefs.getInt("chatsHeaderColor", def));
-        Drawable floatingDrawableWhite = fragmentView.getResources().getDrawable(R.drawable.floating_white);
-        floatingDrawableWhite.setColorFilter(themePrefs.getInt("chatsFloatingBGColor", def), PorterDuff.Mode.MULTIPLY);
-        floatingButton.setBackgroundDrawable(floatingDrawableWhite);
-        Drawable pencilDrawableWhite = fragmentView.getResources().getDrawable(R.drawable.floating_pencil);
-        pencilDrawableWhite.setColorFilter(themePrefs.getInt("chatsFloatingPencilColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-        floatingButton.setImageDrawable(pencilDrawableWhite);
-        Drawable search = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_search);
-        search.setColorFilter(themePrefs.getInt("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-        Drawable lock = getParentActivity().getResources().getDrawable(R.drawable.lock_close);
-        lock.setColorFilter(themePrefs.getInt("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-        lock = getParentActivity().getResources().getDrawable(R.drawable.lock_open);
-        lock.setColorFilter(themePrefs.getInt("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-        Drawable clear = getParentActivity().getResources().getDrawable(R.drawable.ic_close_white);
-        clear.setColorFilter(AndroidUtilities.getIntDef("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-
-    }
-
-    @Override
-    public void onConfigurationChanged(Configuration newConfig) {
-        super.onConfigurationChanged(newConfig);
-        if (!onlySelect && floatingButton != null) {
-            floatingButton.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
-                @Override
-                public void onGlobalLayout() {
-                    ViewProxy.setTranslationY(floatingButton, floatingHidden ? AndroidUtilities.dp(100) : 0);
-                    floatingButton.setClickable(!floatingHidden);
-                    if (floatingButton != null) {
-                        if (Build.VERSION.SDK_INT < 16) {
-                            floatingButton.getViewTreeObserver().removeGlobalOnLayoutListener(this);
-                        } else {
-                            floatingButton.getViewTreeObserver().removeOnGlobalLayoutListener(this);
-                        }
-                    }
-                }
-            });
-        }
-    }
-
-    @Override
-    @SuppressWarnings("unchecked")
-    public void didReceivedNotification(int id, Object... args) {
-        if (id == NotificationCenter.dialogsNeedReload) {
-            if (dialogsAdapter != null) {
-                if (dialogsAdapter.isDataSetChanged()) {
-                    dialogsAdapter.notifyDataSetChanged();
-                } else {
-                    updateVisibleRows(MessagesController.UPDATE_MASK_NEW_MESSAGE);
-                }
-            }
-            if (dialogsSearchAdapter != null) {
-                dialogsSearchAdapter.notifyDataSetChanged();
-            }
-            if (listView != null) {
-                try {
-                    if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
-                        searchEmptyView.setVisibility(View.GONE);
-                        emptyView.setVisibility(View.GONE);
-                        listView.setEmptyView(progressView);
-                    } else {
-                        progressView.setVisibility(View.GONE);
-                        if (searching && searchWas) {
-                            emptyView.setVisibility(View.GONE);
-                            listView.setEmptyView(searchEmptyView);
-                        } else {
-                            searchEmptyView.setVisibility(View.GONE);
-                            listView.setEmptyView(emptyView);
-                        }
-                    }
-                } catch (Exception e) {
-                    FileLog.e("tmessages", e); //TODO fix it in other way?
-                }
-            }
-        } else if (id == NotificationCenter.emojiDidLoaded) {
-            if (listView != null) {
-                updateVisibleRows(0);
-            }
-        } else if (id == NotificationCenter.updateInterfaces) {
-            updateVisibleRows((Integer) args[0]);
-        } else if (id == NotificationCenter.appDidLogout) {
-            dialogsLoaded = false;
-        } else if (id == NotificationCenter.encryptedChatUpdated) {
-            updateVisibleRows(0);
-        } else if (id == NotificationCenter.contactsDidLoaded) {
-            updateVisibleRows(0);
-        } else if (id == NotificationCenter.openedChatChanged) {
-            if (dialogsType == 0 && AndroidUtilities.isTablet()) {
-                boolean close = (Boolean) args[1];
-                long dialog_id = (Long) args[0];
-                if (close) {
-                    if (dialog_id == openedDialogId) {
-                        openedDialogId = 0;
-                    }
-                } else {
-                    openedDialogId = dialog_id;
-                }
-                if (dialogsAdapter != null) {
-                    dialogsAdapter.setOpenedDialogId(openedDialogId);
-                }
-                updateVisibleRows(MessagesController.UPDATE_MASK_SELECT_DIALOG);
-            }
-        } else if (id == NotificationCenter.notificationsSettingsUpdated) {
-            updateVisibleRows(0);
-        } else if (id == NotificationCenter.messageReceivedByAck || id == NotificationCenter.messageReceivedByServer || id == NotificationCenter.messageSendError) {
-            updateVisibleRows(MessagesController.UPDATE_MASK_SEND_STATE);
-        } else if (id == NotificationCenter.didSetPasscode) {
-            updatePasscodeButton();
-        }
-    }
-
-    private ArrayList<TLRPC.TL_dialog> getDialogsArray() {
-        if (dialogsType == 0) {
-            return MessagesController.getInstance().dialogs;
-        } else if (dialogsType == 1) {
-            return MessagesController.getInstance().dialogsServerOnly;
-        } else if (dialogsType == 2) {
-            return MessagesController.getInstance().dialogsGroupsOnly;
-        }
-        return null;
-    }
-
-    private void updatePasscodeButton() {
-        if (passcodeItem == null) {
-            return;
-        }
-        if (UserConfig.passcodeHash.length() != 0 && !searching) {
-            passcodeItem.setVisibility(View.VISIBLE);
-            if (UserConfig.appLocked) {
-                //passcodeItem.setIcon(R.drawable.lock_close);
-                Drawable lock = getParentActivity().getResources().getDrawable(R.drawable.lock_close);
-                lock.setColorFilter(AndroidUtilities.getIntDef("chatsHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-                passcodeItem.setIcon(lock);
-            } else {
-                //passcodeItem.setIcon(R.drawable.lock_open);
-                Drawable lock = getParentActivity().getResources().getDrawable(R.drawable.lock_open);
-                passcodeItem.setIcon(lock);
-            }
-        } else {
-            passcodeItem.setVisibility(View.GONE);
-        }
-    }
-
-    private void hideFloatingButton(boolean hide) {
-        if (floatingHidden == hide) {
-            return;
-        }
-        floatingHidden = hide;
-        ObjectAnimatorProxy animator = ObjectAnimatorProxy.ofFloatProxy(floatingButton, "translationY", floatingHidden ? AndroidUtilities.dp(100) : 0).setDuration(300);
-        animator.setInterpolator(floatingInterpolator);
-        floatingButton.setClickable(!hide);
-        animator.start();
-    }
-
-    private void updateVisibleRows(int mask) {
-        if (listView == null) {
-            return;
-        }
-        int count = listView.getChildCount();
-        for (int a = 0; a < count; a++) {
-            View child = listView.getChildAt(a);
-            if (child instanceof DialogCell) {
-                if (listView.getAdapter() != dialogsSearchAdapter) {
-                DialogCell cell = (DialogCell) child;
-                if ((mask & MessagesController.UPDATE_MASK_NEW_MESSAGE) != 0) {
-                    cell.checkCurrentDialogIndex();
-                        if (dialogsType == 0 && AndroidUtilities.isTablet()) {
-                        cell.setDialogSelected(cell.getDialogId() == openedDialogId);
-                    }
-                } else if ((mask & MessagesController.UPDATE_MASK_SELECT_DIALOG) != 0) {
-                        if (dialogsType == 0 && AndroidUtilities.isTablet()) {
-                        cell.setDialogSelected(cell.getDialogId() == openedDialogId);
-                    }
-                } else {
-                    cell.update(mask);
-                }
-                }
-            } else if (child instanceof UserCell) {
-                ((UserCell) child).update(mask);
-            }
-        }
-    }
-
-    public void setDelegate(MessagesActivityDelegate delegate) {
-        this.delegate = delegate;
-    }
-
-    public void setSearchString(String string) {
-        searchString = string;
-    }
-
-    public boolean isMainDialogList() {
-        return delegate == null && searchString == null;
-    }
-
-    private void didSelectResult(final long dialog_id, boolean useAlert, final boolean param) {
-        if (useAlert && (selectAlertString != null && selectAlertStringGroup != null || addToGroupAlertString != null)) {
-            if (getParentActivity() == null) {
-                return;
-            }
-            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
-            int lower_part = (int) dialog_id;
-            int high_id = (int) (dialog_id >> 32);
-            if (lower_part != 0) {
-                if (high_id == 1) {
-                    TLRPC.Chat chat = MessagesController.getInstance().getChat(lower_part);
-                    if (chat == null) {
-                        return;
-                    }
-                    builder.setMessage(LocaleController.formatStringSimple(selectAlertStringGroup, chat.title));
-                } else {
-                    if (lower_part > 0) {
-                        TLRPC.User user = MessagesController.getInstance().getUser(lower_part);
-                        if (user == null) {
-                            return;
-                        }
-                        builder.setMessage(LocaleController.formatStringSimple(selectAlertString, UserObject.getUserName(user)));
-                    } else if (lower_part < 0) {
-                        TLRPC.Chat chat = MessagesController.getInstance().getChat(-lower_part);
-                        if (chat == null) {
-                            return;
-                        }
-                        if (addToGroupAlertString != null) {
-                            builder.setMessage(LocaleController.formatStringSimple(addToGroupAlertString, chat.title));
-                        } else {
-                        builder.setMessage(LocaleController.formatStringSimple(selectAlertStringGroup, chat.title));
-                    }
-                }
-                }
-            } else {
-                TLRPC.EncryptedChat chat = MessagesController.getInstance().getEncryptedChat(high_id);
-                TLRPC.User user = MessagesController.getInstance().getUser(chat.user_id);
-                if (user == null) {
-                    return;
-                }
-                builder.setMessage(LocaleController.formatStringSimple(selectAlertString, UserObject.getUserName(user)));
-            }
-
-            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialogInterface, int i) {
-                    didSelectResult(dialog_id, false, false);
-                }
-            });
-            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-            showDialog(builder.create());
-        } else {
-            if (delegate != null) {
-                delegate.didSelectDialog(MessagesActivity.this, dialog_id, param);
-                delegate = null;
-            } else {
-                finishFragment();
-            }
-        }
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index 49e235adb..9da47e263 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -22,7 +22,6 @@
 import android.os.Build;
 import android.provider.Settings;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -90,7 +89,6 @@
     private int otherSectionRow2;
     private int otherSectionRow;
     private int badgeNumberRow;
-    private int pebbleAlertRow;
     private int androidAutoAlertRow;
     private int repeatRow;
     private int resetSectionRow2;
@@ -145,7 +143,6 @@ public boolean onFragmentCreate() {
         otherSectionRow = rowCount++;
         badgeNumberRow = rowCount++;
         androidAutoAlertRow = -1;
-        pebbleAlertRow = rowCount++;
         repeatRow = rowCount++;
         resetSectionRow2 = rowCount++;
         resetSectionRow = rowCount++;
@@ -163,7 +160,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds));
@@ -325,12 +322,6 @@ public void run() {
                     MessagesController.getInstance().enableJoined = !enabled;
                     editor.putBoolean("EnableContactJoined", !enabled);
                     editor.commit();
-                } else if (i == pebbleAlertRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-                    SharedPreferences.Editor editor = preferences.edit();
-                    enabled = preferences.getBoolean("EnablePebbleNotifications", false);
-                    editor.putBoolean("EnablePebbleNotifications", !enabled);
-                    editor.commit();
                 } else if (i == androidAutoAlertRow) {
                     SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
@@ -452,7 +443,7 @@ public void onClick(DialogInterface dialog, int which) {
                     builder.setTitle(LocaleController.getString("Vibrate", R.string.Vibrate));
                     builder.setItems(new CharSequence[]{
                             LocaleController.getString("VibrationDisabled", R.string.VibrationDisabled),
-                            LocaleController.getString("Default", R.string.Default),
+                            LocaleController.getString("VibrationDefault", R.string.VibrationDefault),
                             LocaleController.getString("Short", R.string.Short),
                             LocaleController.getString("Long", R.string.Long),
                             LocaleController.getString("OnlyIfSilent", R.string.OnlyIfSilent)
@@ -729,8 +720,6 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     checkCell.setTextAndCheck(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), preferences.getBoolean("EnableInAppPriority", false), false);
                 } else if (i == contactJoinedRow) {
                     checkCell.setTextAndCheck(LocaleController.getString("ContactJoined", R.string.ContactJoined), preferences.getBoolean("EnableContactJoined", true), false);
-                } else if (i == pebbleAlertRow) {
-                    checkCell.setTextAndCheck(LocaleController.getString("Pebble", R.string.Pebble), preferences.getBoolean("EnablePebbleNotifications", false), true);
                 } else if (i == androidAutoAlertRow) {
                     checkCell.setTextAndCheck("Android Auto", preferences.getBoolean("EnableAutoNotifications", false), true);
                 } else if (i == notificationsServiceRow) {
@@ -792,7 +781,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                         value = preferences.getInt("vibrate_group", 0);
                     }
                     if (value == 0) {
-                        textCell.setTextAndValue(LocaleController.getString("Vibrate", R.string.Vibrate), LocaleController.getString("Default", R.string.Default), true);
+                        textCell.setTextAndValue(LocaleController.getString("Vibrate", R.string.Vibrate), LocaleController.getString("VibrationDefault", R.string.VibrationDefault), true);
                     } else if (value == 1) {
                         textCell.setTextAndValue(LocaleController.getString("Vibrate", R.string.Vibrate), LocaleController.getString("Short", R.string.Short), true);
                     } else if (value == 2) {
@@ -858,7 +847,7 @@ public int getItemViewType(int i) {
                 return 0;
             } else if (i == messageAlertRow || i == messagePreviewRow || i == groupAlertRow ||
                     i == groupPreviewRow || i == inappSoundRow || i == inappVibrateRow ||
-                    i == inappPreviewRow || i == contactJoinedRow || i == pebbleAlertRow ||
+                    i == inappPreviewRow || i == contactJoinedRow ||
                     i == notificationsServiceRow || i == badgeNumberRow || i == inappPriorityRow ||
                     i == inchatSoundRow || i == androidAutoAlertRow) {
                 return 1;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
index 819e17ac9..2051cd512 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
@@ -30,7 +30,6 @@
 import android.view.ContextMenu;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -111,7 +110,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (type != 3) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
index 217adb484..09703b1b3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
@@ -15,7 +15,6 @@
 import android.os.Build;
 import android.text.TextUtils;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
@@ -42,7 +41,7 @@
 import org.telegram.ui.Cells.PhotoPickerAlbumsCell;
 import org.telegram.ui.Cells.PhotoPickerSearchCell;
 import org.telegram.ui.Components.LayoutHelper;
-import org.telegram.ui.Components.PhotoPickerBottomLayout;
+import org.telegram.ui.Components.PickerBottomLayout;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -72,7 +71,7 @@
     private TextView emptyView;
     private TextView dropDown;
     private ActionBarMenuItem dropDownContainer;
-    private PhotoPickerBottomLayout photoPickerBottomLayout;
+    private PickerBottomLayout pickerBottomLayout;
     private boolean sendPressed = false;
     private boolean singlePhoto = false;
     private int selectedMode;
@@ -114,7 +113,7 @@ public void onFragmentDestroy() {
 
     @SuppressWarnings("unchecked")
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackgroundColor(0xff333333);
         actionBar.setItemsBackground(R.drawable.bar_selector_picker);
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -261,20 +260,20 @@ public boolean onTouch(View v, MotionEvent event) {
         layoutParams.gravity = Gravity.CENTER;
         progressView.setLayoutParams(layoutParams);
 
-        photoPickerBottomLayout = new PhotoPickerBottomLayout(context);
-        frameLayout.addView(photoPickerBottomLayout);
-        layoutParams = (FrameLayout.LayoutParams) photoPickerBottomLayout.getLayoutParams();
+        pickerBottomLayout = new PickerBottomLayout(context);
+        frameLayout.addView(pickerBottomLayout);
+        layoutParams = (FrameLayout.LayoutParams) pickerBottomLayout.getLayoutParams();
         layoutParams.width = LayoutHelper.MATCH_PARENT;
         layoutParams.height = AndroidUtilities.dp(48);
         layoutParams.gravity = Gravity.BOTTOM;
-        photoPickerBottomLayout.setLayoutParams(layoutParams);
-        photoPickerBottomLayout.cancelButton.setOnClickListener(new View.OnClickListener() {
+        pickerBottomLayout.setLayoutParams(layoutParams);
+        pickerBottomLayout.cancelButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 finishFragment();
             }
         });
-        photoPickerBottomLayout.doneButton.setOnClickListener(new View.OnClickListener() {
+        pickerBottomLayout.doneButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 sendSelectedPhotos();
@@ -289,7 +288,7 @@ public void onClick(View view) {
             progressView.setVisibility(View.GONE);
             listView.setEmptyView(emptyView);
         }
-        photoPickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
+        pickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
 
         return fragmentView;
     }
@@ -469,8 +468,8 @@ private void openPhotoPicker(MediaController.AlbumEntry albumEntry, int type) {
         fragment.setDelegate(new PhotoPickerActivity.PhotoPickerActivityDelegate() {
             @Override
             public void selectedPhotosChanged() {
-                if (photoPickerBottomLayout != null) {
-                    photoPickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
+                if (pickerBottomLayout != null) {
+                    pickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
                 }
             }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
index a215bc91e..db5fba6ec 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
@@ -16,15 +16,14 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.util.AttributeSet;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ImageLoader;
-import org.telegram.android.LocaleController;
 import org.telegram.messenger.FileLog;
+import org.telegram.android.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
@@ -400,7 +399,7 @@ public boolean onFragmentCreate() {
                     return false;
                 }
             }
-            int size = 0;
+            int size;
             if (AndroidUtilities.isTablet()) {
                 size = AndroidUtilities.dp(520);
             } else {
@@ -432,7 +431,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackgroundColor(0xff333333);
         actionBar.setItemsBackground(R.drawable.bar_selector_picker);
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index a9f420e8c..4c0f327a4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -61,7 +61,7 @@
 import org.telegram.ui.Cells.PhotoPickerPhotoCell;
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.LayoutHelper;
-import org.telegram.ui.Components.PhotoPickerBottomLayout;
+import org.telegram.ui.Components.PickerBottomLayout;
 
 import java.net.URLEncoder;
 import java.util.ArrayList;
@@ -98,7 +98,7 @@
 
     private GridView listView;
     private ListAdapter listAdapter;
-    private PhotoPickerBottomLayout photoPickerBottomLayout;
+    private PickerBottomLayout pickerBottomLayout;
     private FrameLayout progressView;
     private TextView emptyView;
     private ActionBarMenuItem searchItem;
@@ -150,7 +150,7 @@ public void onFragmentDestroy() {
 
     @SuppressWarnings("unchecked")
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackgroundColor(0xff333333);
         actionBar.setItemsBackground(R.drawable.bar_selector_picker);
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -395,32 +395,32 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
             updateSearchInterface();
         }
 
-        photoPickerBottomLayout = new PhotoPickerBottomLayout(context);
-        frameLayout.addView(photoPickerBottomLayout);
-        layoutParams = (FrameLayout.LayoutParams) photoPickerBottomLayout.getLayoutParams();
+        pickerBottomLayout = new PickerBottomLayout(context);
+        frameLayout.addView(pickerBottomLayout);
+        layoutParams = (FrameLayout.LayoutParams) pickerBottomLayout.getLayoutParams();
         layoutParams.width = LayoutHelper.MATCH_PARENT;
         layoutParams.height = AndroidUtilities.dp(48);
         layoutParams.gravity = Gravity.BOTTOM;
-        photoPickerBottomLayout.setLayoutParams(layoutParams);
-        photoPickerBottomLayout.cancelButton.setOnClickListener(new View.OnClickListener() {
+        pickerBottomLayout.setLayoutParams(layoutParams);
+        pickerBottomLayout.cancelButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 delegate.actionButtonPressed(true);
                 finishFragment();
             }
         });
-        photoPickerBottomLayout.doneButton.setOnClickListener(new View.OnClickListener() {
+        pickerBottomLayout.doneButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 sendSelectedPhotos();
             }
         });
         if (singlePhoto) {
-            photoPickerBottomLayout.setVisibility(View.GONE);
+            pickerBottomLayout.setVisibility(View.GONE);
         }
 
         listView.setEmptyView(emptyView);
-        photoPickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
+        pickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
 
         return fragmentView;
     }
@@ -650,7 +650,7 @@ public void setPhotoChecked(int index) {
                 break;
             }
         }
-        photoPickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
+        pickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
         delegate.selectedPhotosChanged();
     }
 
@@ -935,7 +935,7 @@ private void fixLayoutInternal() {
         listView.setSelection(position);
 
         if (selectedAlbum == null) {
-            emptyView.setPadding(0, 0, 0, (int)((AndroidUtilities.displaySize.y - AndroidUtilities.getCurrentActionBarHeight()) * 0.4f));
+            emptyView.setPadding(0, 0, 0, (int)((AndroidUtilities.displaySize.y - ActionBar.getCurrentActionBarHeight()) * 0.4f));
         }
     }
 
@@ -1033,7 +1033,7 @@ public void onClick(View v) {
                                 }
                                 ((PhotoPickerPhotoCell) v.getParent()).checkBox.setChecked(selectedWebPhotos.containsKey(photoEntry.id), true);
                             }
-                            photoPickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
+                            pickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
                             delegate.selectedPhotosChanged();
                         }
                     });
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 2816c6257..bffc3f51a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -78,7 +78,7 @@
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PhotoCropView;
 import org.telegram.ui.Components.PhotoFilterView;
-import org.telegram.ui.Components.PhotoPickerBottomLayout;
+import org.telegram.ui.Components.PickerBottomLayout;
 import org.telegram.ui.Components.PhotoViewerCaptionEnterView;
 import org.telegram.ui.Components.SizeNotifierFrameLayoutPhoto;
 
@@ -114,8 +114,8 @@
     private ImageView shareButton;
     private BackgroundDrawable backgroundDrawable = new BackgroundDrawable(0xff000000);
     private CheckBox checkImageView;
-    private PhotoPickerBottomLayout pickerView;
-    private PhotoPickerBottomLayout editorDoneLayout;
+    private PickerBottomLayout pickerView;
+    private PickerBottomLayout editorDoneLayout;
     private RadialProgressView radialProgressViews[] = new RadialProgressView[3];
     private GifDrawable gifDrawable;
     private ActionBarMenuItem cropItem;
@@ -522,8 +522,6 @@ public FrameLayoutDrawer(Context context) {
 
         @Override
         protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-            int widthMode = MeasureSpec.getMode(widthMeasureSpec);
-            int heightMode = MeasureSpec.getMode(heightMeasureSpec);
             int widthSize = MeasureSpec.getSize(widthMeasureSpec);
             int heightSize = MeasureSpec.getSize(heightMeasureSpec);
 
@@ -1209,7 +1207,7 @@ public void onClick(View v) {
         dateTextView.setGravity(Gravity.LEFT);
         bottomLayout.addView(dateTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.TOP | Gravity.LEFT, 16, 25, 50, 0));
 
-        pickerView = new PhotoPickerBottomLayout(parentActivity);
+        pickerView = new PickerBottomLayout(parentActivity);
         pickerView.setBackgroundColor(0x7f000000);
         containerView.addView(pickerView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 48, Gravity.BOTTOM | Gravity.LEFT));
         pickerView.cancelButton.setOnClickListener(new View.OnClickListener() {
@@ -1231,7 +1229,7 @@ public void onClick(View view) {
             }
         });
 
-        editorDoneLayout = new PhotoPickerBottomLayout(parentActivity);
+        editorDoneLayout = new PickerBottomLayout(parentActivity);
         editorDoneLayout.setBackgroundColor(0x7f000000);
         editorDoneLayout.updateSelectedCount(0, false);
         editorDoneLayout.setVisibility(View.GONE);
@@ -1310,7 +1308,7 @@ public void onTextChanged(CharSequence text) {
             @Override
             public void onWindowSizeChanged(int size) {
                 int height = AndroidUtilities.dp(36 * Math.min(3, mentionsAdapter.getCount()) + (mentionsAdapter.getCount() > 3 ? 18 : 0));
-                if (size - AndroidUtilities.getCurrentActionBarHeight() * 2 < height) {
+                if (size - ActionBar.getCurrentActionBarHeight() * 2 < height) {
                     allowMentions = false;
                     if (mentionListView != null && mentionListView.getVisibility() == View.VISIBLE) {
                         mentionListView.clearAnimation();
@@ -1613,8 +1611,6 @@ private void switchToEditMode(final int mode) {
                 float newScaleY = (float) getContainerViewHeight(0) / (float) bitmapHeight;
                 float scale = scaleX > scaleY ? scaleY : scaleX;
                 float newScale = newScaleX > newScaleY ? newScaleY : newScaleX;
-                int width = (int) (bitmapWidth * scale);
-                int height = (int) (bitmapHeight * scale);
 
                 animateToScale = newScale / scale;
                 animateToX = 0;
@@ -1767,8 +1763,6 @@ public void onAnimationEnd(Object animation) {
                         float newScaleY = (float) getContainerViewHeight(1) / (float) bitmapHeight;
                         float scale = scaleX > scaleY ? scaleY : scaleX;
                         float newScale = newScaleX > newScaleY ? newScaleY : newScaleX;
-                        int width = (int) (bitmapWidth * scale);
-                        int height = (int) (bitmapHeight * scale);
 
                         animateToScale = newScale / scale;
                         animateToX = 0;
@@ -1887,8 +1881,6 @@ public void onAnimationEnd(Object animation) {
                         float newScaleY = (float) getContainerViewHeight(2) / (float) bitmapHeight;
                         float scale = scaleX > scaleY ? scaleY : scaleX;
                         float newScale = newScaleX > newScaleY ? newScaleY : newScaleX;
-                        int width = (int) (bitmapWidth * scale);
-                        int height = (int) (bitmapHeight * scale);
 
                         animateToScale = newScale / scale;
                         animateToX = 0;
@@ -2557,7 +2549,6 @@ private void setCurrentCaption(final CharSequence caption) {
             captionTextViewNew = captionTextView;
 
             captionItem.setIcon(R.drawable.photo_text2);
-            CharSequence oldText = captionTextView.getText();
             captionTextView.setTag(caption);
             captionTextView.setText(caption);
             ViewProxy.setAlpha(captionTextView, bottomLayout.getVisibility() == View.VISIBLE || pickerView.getVisibility() == View.VISIBLE ? 1.0f : 0.0f);
@@ -3055,7 +3046,6 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
 
         if (animated) {
             animationInProgress = 1;
-            int visibility = animatingImageView.getVisibility();
             animatingImageView.setVisibility(View.VISIBLE);
             containerView.invalidate();
 
@@ -3739,7 +3729,6 @@ private void onDraw(Canvas canvas) {
         }
 
         ImageReceiver sideImage = null;
-        Bitmap bitmap;
         if (currentEditMode == 0) {
             if (scale >= 1.0f && !zoomAnimation && !zooming) {
                 if (currentTranslationX > maxX + AndroidUtilities.dp(5)) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
index f0c481eb0..68b6c659e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
@@ -153,6 +153,12 @@ protected void onAnimationEnd() {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+
+        int resourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
+        if (resourceId > 0) {
+            AndroidUtilities.statusBarHeight = getResources().getDimensionPixelSize(resourceId);
+        }
+
         classGuid = ConnectionsManager.getInstance().generateClassGuid();
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.appDidLogout);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.pushMessagesUpdated);
@@ -823,7 +829,7 @@ public boolean onPreDraw() {
                     if (avatarContainer != null) {
                         avatarContainer.getViewTreeObserver().removeOnPreDrawListener(this);
                     }
-                    int padding = (AndroidUtilities.getCurrentActionBarHeight() - AndroidUtilities.dp(48)) / 2;
+                    int padding = (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(48)) / 2;
                     avatarContainer.setPadding(avatarContainer.getPaddingLeft(), padding, avatarContainer.getPaddingRight(), padding);
                     return true;
                 }
@@ -836,7 +842,7 @@ public boolean onPreDraw() {
                     messageContainer.getViewTreeObserver().removeOnPreDrawListener(this);
                     if (!checkTransitionAnimation() && !startedMoving) {
                         ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) messageContainer.getLayoutParams();
-                        layoutParams.topMargin = AndroidUtilities.getCurrentActionBarHeight();
+                        layoutParams.topMargin = ActionBar.getCurrentActionBarHeight();
                         layoutParams.bottomMargin = AndroidUtilities.dp(48);
                         layoutParams.width = ViewGroup.MarginLayoutParams.MATCH_PARENT;
                         layoutParams.height = ViewGroup.MarginLayoutParams.MATCH_PARENT;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index a02004cbc..4a28cf9ff 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -16,7 +16,6 @@
 import android.content.SharedPreferences;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -98,7 +97,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setAllowOverlayTitle(true);
             actionBar.setTitle(LocaleController.getString("PrivacySettings", R.string.PrivacySettings));
@@ -209,6 +208,7 @@ public void run() {
                         if (view instanceof TextCheckCell) {
                             ((TextCheckCell) view).setChecked(!scr);
                         }
+                        NotificationCenter.getInstance().postNotificationName(NotificationCenter.mainUserInfoChanged);
                     }
                 }
             });
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index cfae2e802..d42c7404d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -28,7 +28,6 @@
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewOutlineProvider;
@@ -90,7 +89,7 @@
 import java.util.HashMap;
 import java.util.concurrent.Semaphore;
 
-public class ProfileActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, MessagesActivity.MessagesActivityDelegate, PhotoViewer.PhotoViewerProvider {
+public class ProfileActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate, PhotoViewer.PhotoViewerProvider {
 
     private ListView listView;
     private ListAdapter listAdapter;
@@ -248,7 +247,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(user_id != 0 ? 5 : chat_id));
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(user_id != 0 ? 5 : chat_id));
             //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -297,7 +296,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         Bundle args = new Bundle();
                         args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 1);
-                        MessagesActivity fragment = new MessagesActivity(args);
+                    DialogsActivity fragment = new DialogsActivity(args);
                         fragment.setDelegate(ProfileActivity.this);
                         presentFragment(fragment);
                     } else if (id == edit_contact) {
@@ -349,10 +348,10 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 2);
                     args.putString("addToGroupAlertString", LocaleController.formatString("AddToTheGroupTitle", R.string.AddToTheGroupTitle, UserObject.getUserName(user), "%1$s"));
-                    MessagesActivity fragment = new MessagesActivity(args);
-                    fragment.setDelegate(new MessagesActivity.MessagesActivityDelegate() {
+                    DialogsActivity fragment = new DialogsActivity(args);
+                    fragment.setDelegate(new DialogsActivity.MessagesActivityDelegate() {
                         @Override
-                        public void didSelectDialog(MessagesActivity fragment, long did, boolean param) {
+                        public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                             NotificationCenter.getInstance().removeObserver(ProfileActivity.this, NotificationCenter.closeChats);
                             NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
                             MessagesController.getInstance().addUserToChat(-(int) did, user, null, 0, null);
@@ -708,7 +707,6 @@ public void onClick(View v) {
                             builder.setItems(items, new DialogInterface.OnClickListener() {
                                 @Override
                                 public void onClick(DialogInterface dialogInterface, int i) {
-                                    int action = 0;
                                     if (i == 0) {
                                         avatarUpdater.openCamera();
                                     } else if (i == 1) {
@@ -815,7 +813,7 @@ private void needLayout() {
         FrameLayout.LayoutParams layoutParams;
         if (listView != null) {
             layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + AndroidUtilities.getCurrentActionBarHeight();
+            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
             listView.setLayoutParams(layoutParams);
         }
 
@@ -825,7 +823,7 @@ private void needLayout() {
 
             int avatarSize = 42 + (int)(18 * diff);
             int avatarX = 17 + (int)(47 * diffm);
-            int avatarY = AndroidUtilities.dp(22) - (int)((AndroidUtilities.dp(22) - (AndroidUtilities.getCurrentActionBarHeight() - AndroidUtilities.dp(42)) / 2) * (1.0f - diff));
+            int avatarY = AndroidUtilities.dp(22) - (int)((AndroidUtilities.dp(22) - (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(42)) / 2) * (1.0f - diff));
             int nameX = 97 + (int)(21 * diffm);
             int nameEndX = 16 + (int)(32 * diffm);
             int nameY = avatarY + AndroidUtilities.dp(29 - 10 * diffm);
@@ -834,7 +832,7 @@ private void needLayout() {
 
             if (writeButton != null) {
                 layoutParams = (FrameLayout.LayoutParams) writeButton.getLayoutParams();
-                layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + AndroidUtilities.getCurrentActionBarHeight() + actionBar.getExtraHeight() - AndroidUtilities.dp(29.5f);
+                layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + actionBar.getExtraHeight() - AndroidUtilities.dp(29.5f);
                 writeButton.setLayoutParams(layoutParams);
                 /*ViewProxy.setAlpha(writeButton, diff);
                 writeButton.setVisibility(diff <= 0.02 ? View.GONE : View.VISIBLE);
@@ -1262,7 +1260,6 @@ private void updateRowsIds() {
                 emptyRowChat2 = rowCount++;
                 rowCount += info.participants.size();
                 membersEndRow = rowCount;
-                int maxCount = chat_id > 0 ? MessagesController.getInstance().maxGroupCount : MessagesController.getInstance().maxBroadcastCount;
                 addMemberRow = rowCount++;
             } else {
                 membersEndRow = -1;
@@ -1330,7 +1327,7 @@ private void updateProfileData() {
                 photoBig = chat.photo.photo_big;
             }
             //Profile avatar
-            int radius = themePrefs.getInt("profileAvatarRadius", 32);
+            int radius = AndroidUtilities.dp(themePrefs.getInt("profileAvatarRadius", 32));
             //int radius = AndroidUtilities.dp(32);
             AvatarDrawable avatarDrawable = new AvatarDrawable(chat, true);
             avatarImage.getImageReceiver().setRoundRadius(radius);
@@ -1406,7 +1403,7 @@ protected void onDialogDismiss() {
     }
 
     @Override
-    public void didSelectDialog(MessagesActivity messageFragment, long dialog_id, boolean param) {
+    public void didSelectDialog(DialogsActivity messageFragment, long dialog_id, boolean param) {
         if (dialog_id != 0) {
             Bundle args = new Bundle();
             args.putBoolean("scrollToTopOnResume", true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index 6a6f0b7da..dc1cd8bfd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -22,7 +22,6 @@
 import android.provider.Settings;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -32,21 +31,21 @@
 import android.widget.TextView;
 
 import org.telegram.android.AndroidUtilities;
-import org.telegram.android.LocaleController;
 import org.telegram.android.MessagesController;
 import org.telegram.android.MessagesStorage;
-import org.telegram.android.NotificationCenter;
 import org.telegram.android.NotificationsController;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
+import org.telegram.android.LocaleController;
+import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
-import org.telegram.ui.ActionBar.ActionBar;
-import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextColorCell;
 import org.telegram.ui.Cells.TextDetailSettingsCell;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.ColorPickerView;
 import org.telegram.ui.Components.LayoutHelper;
@@ -98,7 +97,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
index a205a3b8d..643446ee0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
@@ -18,7 +18,6 @@
 import android.os.Build;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -90,7 +89,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("SessionsTitle", R.string.SessionsTitle));
@@ -112,11 +111,10 @@ public void onItemClick(int id) {
         int bgColor = preferences.getInt("prefBGColor", 0xffffffff);
         int summaryColor = preferences.getInt("prefSummaryColor", 0xff8a8a8a);
         emptyLayout = new LinearLayout(context);
-
         emptyLayout.setOrientation(LinearLayout.VERTICAL);
         emptyLayout.setGravity(Gravity.CENTER);
         emptyLayout.setBackgroundResource(R.drawable.greydivider_bottom);
-        emptyLayout.setLayoutParams(new AbsListView.LayoutParams(AbsListView.LayoutParams.MATCH_PARENT, AndroidUtilities.displaySize.y - AndroidUtilities.getCurrentActionBarHeight()));
+        emptyLayout.setLayoutParams(new AbsListView.LayoutParams(AbsListView.LayoutParams.MATCH_PARENT, AndroidUtilities.displaySize.y - ActionBar.getCurrentActionBarHeight()));
         if(bgColor != 0xffffffff)emptyLayout.setBackgroundColor(bgColor);
         ImageView imageView = new ImageView(context);
         imageView.setImageResource(R.drawable.devices);
@@ -131,7 +129,6 @@ public void onItemClick(int id) {
         layoutParams2.height = LayoutHelper.WRAP_CONTENT;
         imageView.setLayoutParams(layoutParams2);
 
-
         TextView textView = new TextView(context);
         //textView.setTextColor(0xff8a8a8a);
         textView.setTextColor(summaryColor);
@@ -461,7 +458,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (type == 3) {
                 ViewGroup.LayoutParams layoutParams = emptyLayout.getLayoutParams();
                 if (layoutParams != null) {
-                    layoutParams.height = Math.max(AndroidUtilities.dp(220), AndroidUtilities.displaySize.y - AndroidUtilities.getCurrentActionBarHeight() - AndroidUtilities.dp(128) - (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0));
+                    layoutParams.height = Math.max(AndroidUtilities.dp(220), AndroidUtilities.displaySize.y - ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(128) - (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0));
                     emptyLayout.setLayoutParams(layoutParams);
                 }
                 return emptyLayout;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index a6464c4d6..0f9f5c6cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -35,7 +35,6 @@
 import android.util.Base64;
 import android.util.TypedValue;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -128,7 +127,7 @@
     private int wifiDownloadRow;
     private int roamingDownloadRow;
     private int saveToGalleryRow;
-    private int messagesSectionRow;
+    //private int messagesSectionRow;
     private int messagesSectionRow2;
     private int textSizeRow;
     private int stickersRow;
@@ -258,9 +257,7 @@ public void run() {
         saveToGalleryRow = rowCount++;
         keepOriginalFilenameRow = rowCount++;
         keepOriginalFilenameDetailRow = rowCount++;
-                messagesSectionRow = rowCount++;
-
-
+        //messagesSectionRow = rowCount++;
 
         messagesSectionRow2 = rowCount++;
         textSizeRow = rowCount++;
@@ -305,7 +302,7 @@ public boolean needAddActionBar() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
             actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -412,7 +409,7 @@ public void onClick(View v) {
 
             onlineTextView = new TextView(context);
             //onlineTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(5));
-            onlineTextView.setTextColor(AndroidUtilities.getIntDarkerColor("themeColor", -0x40));
+            onlineTextView.setTextColor(preferences.getInt("prefHeaderStatusColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x40)));
             onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
             onlineTextView.setLines(1);
             onlineTextView.setMaxLines(1);
@@ -1043,7 +1040,7 @@ private void needLayout() {
         FrameLayout.LayoutParams layoutParams;
         if (listView != null) {
             layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + AndroidUtilities.getCurrentActionBarHeight();
+            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
             listView.setLayoutParams(layoutParams);
         }
 
@@ -1053,7 +1050,7 @@ private void needLayout() {
 
             int avatarSize = 42 + (int) (18 * diff);
             int avatarX = 17 + (int) (47 * diffm);
-            int avatarY = AndroidUtilities.dp(22) - (int) ((AndroidUtilities.dp(22) - (AndroidUtilities.getCurrentActionBarHeight() - AndroidUtilities.dp(42)) / 2) * (1.0f - diff));
+            int avatarY = AndroidUtilities.dp(22) - (int) ((AndroidUtilities.dp(22) - (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(42)) / 2) * (1.0f - diff));
             int nameX = 97 + (int) (21 * diffm);
             int nameEndX = 16 + (int) (32 * diffm);
             int nameY = avatarY + AndroidUtilities.dp(29 - 13 * diffm);
@@ -1061,7 +1058,7 @@ private void needLayout() {
             float scale = 1.0f - 0.12f * diffm;
 
             layoutParams = (FrameLayout.LayoutParams) writeButton.getLayoutParams();
-            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + AndroidUtilities.getCurrentActionBarHeight() + actionBar.getExtraHeight() - AndroidUtilities.dp(29.5f);
+            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + actionBar.getExtraHeight() - AndroidUtilities.dp(29.5f);
             writeButton.setLayoutParams(layoutParams);
 
             //ViewProxy.setScaleX(writeButton, diff > 0.2f ? 1.0f : diff / 0.2f);
@@ -1110,8 +1107,11 @@ public void onAnimationEnd(Object animation) {
                 });
                 writeButtonAnimation.start();
             }
-
-            avatarImage.setRoundRadius(AndroidUtilities.dp(avatarSize / 2));
+            int aSize = AndroidUtilities.getIntDef("prefAvatarSize", 64);//Plus
+            avatarSize = aSize > 46 ? (aSize - 20) + (int) (18 * diff) : aSize;//Plus
+            //avatarImage.setRoundRadius(AndroidUtilities.dp(avatarSize / 2));
+            int radius = AndroidUtilities.getIntDef("prefAvatarRadius", 32);
+            avatarImage.setRoundRadius(AndroidUtilities.dp(radius));
             layoutParams = (FrameLayout.LayoutParams) avatarImage.getLayoutParams();
             layoutParams.width = AndroidUtilities.dp(avatarSize);
             layoutParams.height = AndroidUtilities.dp(avatarSize);
@@ -1164,15 +1164,16 @@ private void updateUserData() {
         }
         AvatarDrawable avatarDrawable = new AvatarDrawable(user, true);
         //avatarDrawable.setColor(0xff5c98cd);
-        avatarDrawable.setColor(AndroidUtilities.getIntDarkerColor("themeColor",0x10));
-        int radius = AndroidUtilities.dp(AndroidUtilities.getIntDef("drawerAvatarRadius", 32));
+        avatarDrawable.setColor(AndroidUtilities.getIntDef("prefAvatarColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x10)));
+        int radius = AndroidUtilities.dp(AndroidUtilities.getIntDef("prefAvatarRadius", 32));
+        avatarImage.getImageReceiver().setRoundRadius(radius);
         avatarDrawable.setRadius(radius);
         if (avatarImage != null) {
-        avatarImage.setImage(photo, "50_50", avatarDrawable);
+            avatarImage.setImage(photo, "50_50", avatarDrawable);
             avatarImage.getImageReceiver().setVisible(!PhotoViewer.getInstance().isShowingImage(photoBig), false);
 
             nameTextView.setText(UserObject.getUserName(user));
-        onlineTextView.setText(LocaleController.getString("Online", R.string.Online));
+            onlineTextView.setText(LocaleController.getString("Online", R.string.Online));
 
             avatarImage.getImageReceiver().setVisible(!PhotoViewer.getInstance().isShowingImage(photoBig), false);
         }
@@ -1447,7 +1448,7 @@ public int getItemViewType(int i) {
             if (i == emptyRow || i == overscrollRow) {
                 return 0;
             } 
-            if (i == settingsSectionRow || i == supportSectionRow || i == messagesSectionRow || i == mediaDownloadSection || i == contactsSectionRow) {
+            if (i == settingsSectionRow || i == supportSectionRow /*|| i == messagesSectionRow*/ || i == mediaDownloadSection || i == contactsSectionRow) {
                 return 1;
             } else if (i == enableAnimationsRow || i == sendByEnterRow || i == saveToGalleryRow || i == disableMessageClickRow || i == showAndroidEmojiRow || i == useDeviceFontRow || i == keepOriginalFilenameRow ) {
                 return 3;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java
index 5172d67f5..872975417 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java
@@ -117,7 +117,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (fragmentView == null) {
 
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java
index 749ec9907..170808591 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java
@@ -92,6 +92,7 @@
     private int avatarSizeRow;
     private int avatarAlignTopRow;
     private int avatarMarginLeftRow;
+    private int contactNameColorRow;
 
     private int rowCount;
 
@@ -142,6 +143,7 @@ public boolean onFragmentCreate() {
 
         memberColorCheckRow = rowCount++;
         memberColorRow = rowCount++;
+        contactNameColorRow = rowCount++;
         forwardRightNameColorRow = rowCount++;
         forwardLeftNameColorRow = rowCount++;
 
@@ -164,7 +166,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (fragmentView == null) {
 
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
@@ -294,6 +296,20 @@ public void colorChanged(int color) {
 
                         },themePrefs.getInt("chatMemberColor", darkColor), CENTER, 0, true);
                         colorDialog.show();
+                    } else if (i == contactNameColorRow) {
+                        if (getParentActivity() == null) {
+                            return;
+                        }
+                        LayoutInflater li = (LayoutInflater)getParentActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                        li.inflate(R.layout.colordialog, null, false);
+                        ColorSelectorDialog colorDialog = new ColorSelectorDialog(getParentActivity(), new OnColorChangedListener() {
+                            @Override
+                            public void colorChanged(int color) {
+                                commitInt("chatContactNameColor", color);
+                            }
+
+                        },themePrefs.getInt("chatContactNameColor", defColor), CENTER, 0, true);
+                        colorDialog.show();
                     } else if (i == forwardRightNameColorRow) {
                         if (getParentActivity() == null) {
                             return;
@@ -877,6 +893,8 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                         ApplicationLoader.reloadWallpaper();
                     } else if (i == memberColorRow) {
                         resetPref("chatMemberColor");
+                    } else if (i == contactNameColorRow) {
+                        resetPref("chatContactNameColor");
                     } else if (i == rTextColorRow) {
                         resetPref("chatRTextColor");
                     } else if (i == lTextColorRow) {
@@ -1029,7 +1047,7 @@ public boolean isEnabled(int i) {
             return  i == headerColorRow || i == muteColorRow || i == headerIconsColorRow || i == rBubbleColorRow || i == lBubbleColorRow ||  i == bubblesRow ||
                     i == solidBGColorCheckRow || AndroidUtilities.getBoolPref("chatSolidBGColorCheck") && i == solidBGColorRow || i == avatarRadiusRow || i == avatarSizeRow || i == avatarMarginLeftRow || i == avatarAlignTopRow || i == nameColorRow || i == nameSizeRow || i == statusColorRow || i == statusSizeRow ||
                     i == textSizeRow || i == timeSizeRow || i == dateColorRow || i == dateSizeRow || i == dateBubbleColorRow || i == rTextColorRow || i == rLinkColorRow || i == lTextColorRow || i == lLinkColorRow ||
-                    i == rTimeColorRow|| i == lTimeColorRow || i == checksColorRow || i == memberColorCheckRow || AndroidUtilities.getBoolPref("chatMemberColorCheck") && i == memberColorRow || i == forwardRightNameColorRow || i == forwardLeftNameColorRow ||
+                    i == rTimeColorRow|| i == lTimeColorRow || i == checksColorRow || i == memberColorCheckRow || AndroidUtilities.getBoolPref("chatMemberColorCheck") && i == memberColorRow || i == contactNameColorRow || i == forwardRightNameColorRow || i == forwardLeftNameColorRow ||
                     i == editTextSizeRow || i == editTextColorRow || i == editTextIconsColorRow || i == sendColorRow || i == editTextBGColorRow ||
                     i == emojiViewBGColorRow || i == emojiViewTabColorRow;
         }
@@ -1147,6 +1165,8 @@ else if (type == 3){
                     textCell.setTextAndColor(LocaleController.getString("SolidBGColor", R.string.SolidBGColor), themePrefs.getBoolean("chatSolidBGColorCheck", false) ? themePrefs.getInt("chatSolidBGColor", 0xffffffff) : 0x00000000, true);
                 } else if (i == memberColorRow) {
                     textCell.setTextAndColor(LocaleController.getString("MemberColor", R.string.MemberColor), themePrefs.getBoolean("chatMemberColorCheck", false) ? themePrefs.getInt("chatMemberColor", darkColor) : 0x00000000, true);
+                } else if (i == contactNameColorRow) {
+                    textCell.setTextAndColor(LocaleController.getString("SharedContactNameColor", R.string.SharedContactNameColor), themePrefs.getInt("chatContactNameColor", defColor) , true);
                 } else if (i == forwardRightNameColorRow) {
                     textCell.setTag("chatForwardRColor");
                     textCell.setTextAndColor(LocaleController.getString("ForwardRightNameColor", R.string.ForwardRightNameColor), themePrefs.getInt("chatForwardRColor", darkColor), true);
@@ -1218,7 +1238,7 @@ else if ( i == avatarRadiusRow || i == avatarSizeRow || i == avatarMarginLeftRow
 
             else if ( i == headerColorRow  || i == muteColorRow || i == headerIconsColorRow ||
                     i == solidBGColorRow || i == rBubbleColorRow || i == lBubbleColorRow || i == nameColorRow || i == statusColorRow || i == dateColorRow || i == dateBubbleColorRow ||
-                    i == rTextColorRow || i == rLinkColorRow || i == lTextColorRow || i == lLinkColorRow || i == rLinkColorRow || i == rTimeColorRow || i == lTimeColorRow || i == checksColorRow || i == memberColorRow || i == forwardRightNameColorRow || i == forwardLeftNameColorRow ||
+                    i == rTextColorRow || i == rLinkColorRow || i == lTextColorRow || i == lLinkColorRow || i == rLinkColorRow || i == rTimeColorRow || i == lTimeColorRow || i == checksColorRow || i == memberColorRow || i == contactNameColorRow || i == forwardRightNameColorRow || i == forwardLeftNameColorRow ||
                     i == sendColorRow || i == editTextColorRow || i == editTextBGColorRow || i == editTextIconsColorRow ||
                     i == emojiViewBGColorRow || i == emojiViewTabColorRow) {
                 return 3;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java
index 32395a631..64f5769eb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java
@@ -145,7 +145,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (fragmentView == null) {
 
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java
index 108bb9cf6..c7ee8f9db 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java
@@ -97,7 +97,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (fragmentView == null) {
 
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java
index e67298244..9542b5d7a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java
@@ -26,6 +26,8 @@
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
+import org.telegram.android.MediaController;
+import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -71,6 +73,9 @@
 
     public final static int CENTER = 0;
 
+    private boolean player = false;
+    private boolean drawer = false;
+
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
@@ -103,11 +108,16 @@ public boolean onFragmentCreate() {
     @Override
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
-
+        if(player){
+            if(MediaController.getInstance().getPlayingMessageObject() != null)NotificationCenter.getInstance().postNotificationName(NotificationCenter.audioPlayStateChanged, MediaController.getInstance().getPlayingMessageObject().getId());
+        }
+        if(drawer){
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.mainUserInfoChanged);
+        }
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (fragmentView == null) {
 
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
@@ -200,6 +210,7 @@ public void colorChanged(int color) {
                             @Override
                             public void colorChanged(int color) {
                                 commitInt("drawerListColor", color);
+                                player = true;
                             }
 
                         },themePrefs.getInt("drawerListColor", 0xffffffff), CENTER, 0, false);
@@ -214,6 +225,7 @@ public void colorChanged(int color) {
                             @Override
                             public void colorChanged(int color) {
                                 commitInt("drawerIconColor", color);
+                                player = true;
 
                             }
 
@@ -229,6 +241,7 @@ public void colorChanged(int color) {
                             @Override
                             public void colorChanged(int color) {
                                 commitInt("drawerOptionColor", color);
+                                player = true;
                             }
 
                         },themePrefs.getInt("drawerOptionColor", 0xff444444), CENTER, 0, false);
@@ -417,6 +430,7 @@ public void onClick(DialogInterface dialog, int which) {
                         });
                         showDialog(builder.create());
                     }
+                    drawer = true;
                 }
             });
 
@@ -430,6 +444,7 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                         resetInt("drawerHeaderColor");
                     } else if (i == listColorRow) {
                         resetInt("drawerListColor");
+                        player = true;
                     } else if (i == avatarColorRow) {
                         resetInt("drawerAvatarColor");
                     } else if (i == avatarRadiusRow) {
@@ -446,8 +461,10 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                         resetInt("drawerPhoneSize");
                     } else if (i == iconColorRow) {
                         resetInt("drawerIconColor");
+                        player = true;
                     } else if (i == optionColorRow) {
                         resetInt("drawerOptionColor");
+                        player = true;
                     } else if (i == optionSizeRow) {
                         resetInt("drawerOptionSize");
                     } else if (i == versionColorRow) {
@@ -459,6 +476,8 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                             resetPref(view.getTag().toString());
                         }
                     }
+                    drawer = true;
+
                     return true;
                 }
             });
@@ -546,6 +565,9 @@ public boolean onPreDraw() {
         });
         listView.setAdapter(listAdapter);
         //actionBar.setBackgroundColor(AndroidUtilities.getIntColor("themeColor"));
+        if(drawer){
+
+        }
     }
 
     private class ListAdapter extends BaseFragmentAdapter {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java
index cc25b8bbb..d80fa0e73 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java
@@ -99,7 +99,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         if (fragmentView == null) {
 
             actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
index a2e1cc484..c7f4fdd18 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
@@ -23,7 +23,6 @@
 import android.view.ContextMenu;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.MotionEvent;
@@ -146,7 +145,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(false);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index 0cfdc8336..5d27d6a98 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -19,7 +19,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.Surface;
 import android.view.TextureView;
 import android.view.View;
@@ -229,7 +228,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackgroundColor(0xff333333);
         actionBar.setItemsBackground(R.drawable.bar_selector_white);
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -266,7 +265,7 @@ public void onItemClick(int id) {
         ActionBarMenu menu = actionBar.createMenu();
         menu.addItemWithWidth(1, R.drawable.ic_done, AndroidUtilities.dp(56));
 
-        fragmentView = inflater.inflate(R.layout.video_editor_layout, null, false);
+        fragmentView = getParentActivity().getLayoutInflater().inflate(R.layout.video_editor_layout, null, false);
         originalSizeTextView = (TextView) fragmentView.findViewById(R.id.original_size);
         editedSizeTextView = (TextView) fragmentView.findViewById(R.id.edited_size);
         videoContainerView = fragmentView.findViewById(R.id.video_container);
@@ -583,7 +582,7 @@ private void fixVideoSize() {
         if (AndroidUtilities.isTablet()) {
             viewHeight = AndroidUtilities.dp(472);
         } else {
-            viewHeight = AndroidUtilities.displaySize.y - AndroidUtilities.statusBarHeight - AndroidUtilities.getCurrentActionBarHeight();
+            viewHeight = AndroidUtilities.displaySize.y - AndroidUtilities.statusBarHeight - ActionBar.getCurrentActionBarHeight();
         }
 
         int width;
@@ -781,7 +780,6 @@ private boolean processOpenVideo() {
                     }
                     videoDuration = (float)mediaHeaderBox.getDuration() / (float)mediaHeaderBox.getTimescale();
                     trackBitrate = (int)(sampleSizes * 8 / videoDuration);
-
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
@@ -812,13 +810,14 @@ private boolean processOpenVideo() {
             }
             resultWidth = originalWidth = (int)trackHeaderBox.getWidth();
             resultHeight = originalHeight = (int)trackHeaderBox.getHeight();
+
             if (resultWidth > 640 || resultHeight > 640) {
                 float scale = resultWidth > resultHeight ? 640.0f / resultWidth : 640.0f / resultHeight;
                 resultWidth *= scale;
                 resultHeight *= scale;
                 if (bitrate != 0) {
                     bitrate *= Math.max(0.5f, scale);
-                    videoFramesSize = (long) (bitrate / 8 * videoDuration);
+                    videoFramesSize = (long)(bitrate / 8 * videoDuration);
                 }
             }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
index 8718183b3..d7b2f506f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
@@ -23,7 +23,6 @@
 import android.os.Bundle;
 import android.provider.MediaStore;
 import android.view.Gravity;
-import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -34,22 +33,23 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ImageLoader;
 import org.telegram.android.LocaleController;
-import org.telegram.android.MessagesStorage;
-import org.telegram.android.NotificationCenter;
 import org.telegram.android.support.widget.LinearLayoutManager;
 import org.telegram.android.support.widget.RecyclerView;
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.TLObject;
+import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
+import org.telegram.android.MessagesStorage;
+import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
-import org.telegram.messenger.TLObject;
-import org.telegram.messenger.TLRPC;
+
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Cells.WallpaperCell;
+import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RecyclerListView;
 
@@ -103,7 +103,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("ChatBackground", R.string.ChatBackground));
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db
index d2eb28c12..414c179f5 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db and b/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_gallery.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_gallery.png
deleted file mode 100644
index 1c60351cb..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_gallery.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_location.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_location.png
deleted file mode 100644
index 52bf60516..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_location.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_music.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_music.png
deleted file mode 100644
index 5a8f5cf4e..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_music.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_photo.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_photo.png
deleted file mode 100644
index b2b0caaa5..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_photo.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_video.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_video.png
deleted file mode 100644
index 193373521..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_video.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/player1.png b/TMessagesProj/src/main/res/drawable-hdpi/player1.png
deleted file mode 100644
index 6ec1a5d28..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/player1.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/player1_pressed.png b/TMessagesProj/src/main/res/drawable-hdpi/player1_pressed.png
deleted file mode 100644
index f5698eb11..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/player1_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/player2.png b/TMessagesProj/src/main/res/drawable-hdpi/player2.png
deleted file mode 100644
index cb9f570bb..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/player2.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/player2_pressed.png b/TMessagesProj/src/main/res/drawable-hdpi/player2_pressed.png
deleted file mode 100644
index 879278c30..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/player2_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db
index a4a7d8087..9c426f6f3 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db and b/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_gallery.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_gallery.png
deleted file mode 100644
index a53056967..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_gallery.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_location.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_location.png
deleted file mode 100644
index 193306974..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_location.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_music.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_music.png
deleted file mode 100644
index 3440214d1..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_music.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_photo.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_photo.png
deleted file mode 100644
index 9a70e6b58..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_photo.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_video.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_video.png
deleted file mode 100644
index b6ebbb60a..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_video.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/player1.png b/TMessagesProj/src/main/res/drawable-mdpi/player1.png
deleted file mode 100644
index ff66a1aa5..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/player1.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/player1_pressed.png b/TMessagesProj/src/main/res/drawable-mdpi/player1_pressed.png
deleted file mode 100644
index 4bc5b5735..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/player1_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/player2.png b/TMessagesProj/src/main/res/drawable-mdpi/player2.png
deleted file mode 100644
index 9d3caac8d..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/player2.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/player2_pressed.png b/TMessagesProj/src/main/res/drawable-mdpi/player2_pressed.png
deleted file mode 100644
index 946cf59d7..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/player2_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db
index 501adba7a..ab3f3987c 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db and b/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_gallery.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_gallery.png
deleted file mode 100644
index 4227122dc..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_gallery.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_location.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_location.png
deleted file mode 100644
index 3e27c97e7..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_location.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_music.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_music.png
deleted file mode 100644
index 12336bf80..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_music.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_photo.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_photo.png
deleted file mode 100644
index 25f0d3c81..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_photo.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_video.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_video.png
deleted file mode 100644
index 49f6685e0..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_video.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/player1.png b/TMessagesProj/src/main/res/drawable-xhdpi/player1.png
deleted file mode 100644
index 2a11310e6..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/player1.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/player1_pressed.png b/TMessagesProj/src/main/res/drawable-xhdpi/player1_pressed.png
deleted file mode 100644
index e3ebd1b5e..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/player1_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/player2.png b/TMessagesProj/src/main/res/drawable-xhdpi/player2.png
deleted file mode 100644
index 57bc079af..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/player2.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/player2_pressed.png b/TMessagesProj/src/main/res/drawable-xhdpi/player2_pressed.png
deleted file mode 100644
index 03723d55b..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/player2_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db
index b02220d4c..ec307594e 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db and b/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_gallery.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_gallery.png
deleted file mode 100644
index 4f8d40750..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_gallery.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_location.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_location.png
deleted file mode 100644
index b6bd6ca9a..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_location.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_music.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_music.png
deleted file mode 100644
index 7317d7295..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_music.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_photo.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_photo.png
deleted file mode 100644
index ccf61d696..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_photo.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_video.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_video.png
deleted file mode 100644
index 66843485e..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_video.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/player1.png b/TMessagesProj/src/main/res/drawable-xxhdpi/player1.png
deleted file mode 100644
index 6eee90a8e..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/player1.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/player1_pressed.png b/TMessagesProj/src/main/res/drawable-xxhdpi/player1_pressed.png
deleted file mode 100644
index f1af60fcc..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/player1_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/player2.png b/TMessagesProj/src/main/res/drawable-xxhdpi/player2.png
deleted file mode 100644
index 7a099f7cb..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/player2.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/player2_pressed.png b/TMessagesProj/src/main/res/drawable-xxhdpi/player2_pressed.png
deleted file mode 100644
index 8fb075f6f..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/player2_pressed.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db
index 578750c03..a64b9e825 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db and b/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db differ
diff --git a/TMessagesProj/src/main/res/drawable/floating_states.xml b/TMessagesProj/src/main/res/drawable/floating_states.xml
index c2c53d129..55cb84eb4 100644
--- a/TMessagesProj/src/main/res/drawable/floating_states.xml
+++ b/TMessagesProj/src/main/res/drawable/floating_states.xml
@@ -1,13 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ This is the source code of Telegram for Android v. 1.7.x.
-  ~ It is licensed under GNU GPL v. 2 or later.
-  ~ You should have received a copy of the license in this archive (see LICENSE).
-  ~
-  ~ Copyright Nikolai Kudashov, 2013-2014.
-  -->
-
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
     <item android:drawable="@drawable/floating_pressed" android:state_pressed="true" />
     <item android:drawable="@drawable/floating_pressed" android:state_selected="true" />
diff --git a/TMessagesProj/src/main/res/drawable/search_dark_states.xml b/TMessagesProj/src/main/res/drawable/search_dark_states.xml
deleted file mode 100644
index d1d4b4594..000000000
--- a/TMessagesProj/src/main/res/drawable/search_dark_states.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_enabled="true" android:state_focused="true" android:drawable="@drawable/search_light_activated"/>
-    <item android:state_enabled="true" android:state_activated="true" android:drawable="@drawable/search_light_activated"/>
-    <item android:state_enabled="true" android:drawable="@drawable/search_light"/>
-    <item android:drawable="@drawable/search_light"/>
-</selector>
diff --git a/TMessagesProj/src/main/res/drawable/search_light_states.xml b/TMessagesProj/src/main/res/drawable/search_light_states.xml
deleted file mode 100644
index d1d4b4594..000000000
--- a/TMessagesProj/src/main/res/drawable/search_light_states.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_enabled="true" android:state_focused="true" android:drawable="@drawable/search_light_activated"/>
-    <item android:state_enabled="true" android:state_activated="true" android:drawable="@drawable/search_light_activated"/>
-    <item android:state_enabled="true" android:drawable="@drawable/search_light"/>
-    <item android:drawable="@drawable/search_light"/>
-</selector>
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 2f213b974..cdffbf72b 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -15,7 +15,7 @@
     <!--code enter view-->
     <string name="YourCode">رمز التفعيل</string>
     <string name="SentSmsCode">تم إرسال رسالة قصيرة تحتوي على رمز التفعيل الخاص بك</string>
-    <string name="CallText">%1$d:%2$02d سنتصل بك خلال</string>
+    <string name="CallText">سنتصل بك خلال %1$d:%2$02d</string>
     <string name="Calling">جاري الاتصال بك ...</string>
     <string name="Code">رمز التفعيل</string>
     <string name="WrongNumber">الرقم خاطئ؟</string>
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">أنت قمت بإنشاء قائمة رسالة جماعية</string>
     <string name="AddRecipient">إضافة مستلم</string>
     <string name="KickFromBroadcast">إزالة من قائمة الرسالة الجماعية</string>
+    <!--audio view-->
+    <string name="NoAudio">فضلًا قم بإضافة ملفات لمكتبتك الموسيقية على جهازك لتتمكن من مشاهدتها هنا.</string>
+    <string name="AttachMusic">موسيقى</string>
+    <string name="AudioUnknownArtist">الفنان غير معروف</string>
+    <string name="AudioUnknownTitle">العنوان غير معروف</string>
     <!--documents view-->
     <string name="SelectFile">اختر ملف</string>
     <string name="FreeOfTotal">متاح %1$s من %2$s</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">حذف هذه الدردشة</string>
     <string name="SlideToCancel">قم بالسحب للإلغاء</string>
     <string name="SaveToDownloads">حفظ في الجهاز</string>
+    <string name="SaveToMusic">احفظ في الموسيقى</string>
     <string name="ShareFile">مشاركة</string>
     <string name="ApplyLocalizationFile">تطبيق ملف التعريب</string>
     <string name="UnsupportedAttachment">المرفق غير مدعوم</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">إيقاف</string>
   <string name="InChatSound">الأصوات داخل المحادثات</string>
     <string name="SoundDefault">افتراضي</string>
+    <string name="VibrationDefault">تلقائي</string>
     <string name="SmartNotifications">إشعارات ذكية</string>
     <string name="SmartNotificationsDisabled">تعطيل</string>
     <string name="SmartNotificationsInfo">أعلى صوت %1$s خلال %2$s</string>
@@ -827,8 +834,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s الساعة %2$s</string>
     <!--update text-->
-    <string name="updateText">تيليجرام نسخة الأندرويد تم تحديثه. الجديد في نسخة ٣.٠:\n\n- أقسام مخصصة خاصة ومرتبة لكل لحزم الملصقات. يمكنك إضافة حزم الملصقات كهذه https://telegram.me/addstickers/Animals\n- واجهة برمجية خاصة جديدة بالبوت، مجانًا للجميع. إذا كنت مبرمج، اصنع البوت الخاص بك مثل @quiz_bot و @hot_or_bot باستخدام حساب @botfather. للإستزادة، فضلًا اطلع على https://telegram.org/blog/bot-revolution</string>
-  <string name="updateBuild">576</string>
+    <string name="updateText">تم تحديث تيليجرام نسخة الأندرويد.  الجديد في النسخة رقم 3.1:\n\n- بحث عن الرسائل داخل محادثات محددة. \n- إعادة تصميم كاملة لشاشة ارفاق الملفات. إرسال جهات اتصال وملفات صوتية مباشرة من خيار المرفقات. \n- تطوير لتشغيل الوسائط داخل التطبيق (يوتيوب, ڤيميو, ساوندكلاود وغيرها.),.\n\nللاستزادة،  اطلع هنا:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+-->
   <string name="updatePlusText"></string>
   <string name="TelegramForAndroid">بلاس مسنجر للأندرويد</string>
diff --git a/TMessagesProj/src/main/res/values-ca/strings.xml b/TMessagesProj/src/main/res/values-ca/strings.xml
index 226329b21..a2e3667ba 100644
--- a/TMessagesProj/src/main/res/values-ca/strings.xml
+++ b/TMessagesProj/src/main/res/values-ca/strings.xml
@@ -55,12 +55,17 @@
   <string name="UnmuteNotifications">Restaura les notificacions</string>
   <string name="WillUnmuteIn">D\'aquí %1$s</string>
   <string name="MuteDisable">Inhabilita</string>
+  <string name="Hashtags">ETIQUETES</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Llista de difusió nova</string>
   <string name="EnterListName">Introduïu el nom de la llista</string>
   <string name="YouCreatedBroadcastList">Heu creat una llista de difusió</string>
   <string name="AddRecipient">Afegeix un destinatari</string>
   <string name="KickFromBroadcast">Treu de la llista de difusió</string>
+  <!--audio view-->
+  <string name="AttachMusic">Música</string>
+  <string name="AudioUnknownArtist">Artista desconegut</string>
+  <string name="AudioUnknownTitle">Títol desconegut</string>
   <!--documents view-->
   <string name="SelectFile">Trieu un fitxer</string>
   <string name="FreeOfTotal">%1$s disponibles de %2$s</string>
@@ -81,12 +86,21 @@
   <string name="Typing">està escrivint...</string>
   <string name="IsTyping">està escrivint...</string>
   <string name="AreTyping">estan escrivint...</string>
+  <string name="IsRecordingAudio">%1$s està enregistrant àudio...</string>
+  <string name="IsSendingPhoto">%1$s està enviant una foto...</string>
+  <string name="IsSendingVideo">%1$s està enviant un vídeo...</string>
+  <string name="IsSendingFile">%1$s està enviant un fitxer...</string>
+  <string name="RecordingAudio">s\'està enregistrant l\'àudio…</string>
+  <string name="SendingPhoto">s\'està enviant la foto…</string>
+  <string name="SendingVideoStatus">s\'està enviant el vídeo…</string>
+  <string name="SendingFile">s\'està enviant el fitxer…</string>
   <string name="GotAQuestion">Teniu cap dubte\namb el Telegram?</string>
   <string name="ChatTakePhoto">Fes una foto</string>
   <string name="ChatGallery">Galeria</string>
   <string name="ChatLocation">Ubicació</string>
   <string name="ChatVideo">Vídeo</string>
   <string name="ChatDocument">Fitxer</string>
+  <string name="ChatCamera">Càmera</string>
   <string name="NoMessages">Encara no hi ha cap missatge...</string>
   <string name="ForwardedMessage">Missatge reenviat</string>
   <string name="From">De</string>
@@ -108,11 +122,16 @@
   <string name="DeleteThisChat">Elimina aquest xat</string>
   <string name="SlideToCancel">LLISQUEU PER CANCEL·LAR</string>
   <string name="SaveToDownloads">Desa a «Baixades»</string>
+  <string name="SaveToMusic">Desa a música</string>
   <string name="ShareFile">Comparteix</string>
   <string name="ApplyLocalizationFile">Aplica la localització</string>
   <string name="UnsupportedAttachment">El fitxer adjunt no és compatible</string>
   <string name="SetTimer">Estableix l\'autodestrucció</string>
   <string name="ServiceNotifications">Notificacions del servei</string>
+  <string name="GettingLinkInfo">S\'està obtenint la informació de l\'enllaç...</string>
+  <string name="OpenInBrowser">Obre al navegador</string>
+  <string name="CopyUrl">Copia la URL</string>
+  <string name="SendItems">Envia %1$s</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s ha definit l\'autodestrucció en %2$s</string>
   <string name="MessageLifetimeChangedOutgoing">Heu definit l\'autodestrucció en %1$s</string>
@@ -146,8 +165,9 @@
   <string name="NotificationGroupKickYou">%1$s us ha fet fora del grup %2$s</string>
   <string name="NotificationGroupLeftMember">%1$s ha abandonat el grup %2$s</string>
   <string name="NotificationContactJoined">%1$s s\'ha unit al Telegram.</string>
-  <string name="NotificationUnrecognizedDevice">%1$s,\nHem detectat un inici de sessió al vostre compte des d\'un nou dispositiu el %2$s\n\nDispositiu: %3$s\nUbicació: %4$s\n\nSi no en sabeu res potser era algú altre! Podeu anar a «Configuració» - «Privadesa i seguretat» - «Tanca les altres sessions».\n\nGràcies,\nL\'equip del Telegram</string>
+  <string name="NotificationUnrecognizedDevice">%1$s,\nHem detectat un inici de sessió al vostre compte en un dispositiu nou el %2$s\n\nDispositiu: %3$s\nUbicació: %4$s\n\nSi no sou vós, aneu a Configuració - Privadesa i seguretat - Sessions i finalitzeu aquesta sessió.\n\nSi penseu que algú altre ha iniciat sessió en el vostre compte contra la vostra voluntat, podeu activar la Verificació en dos passos a la configuració de Privadesa i seguretat.\n\nAtentament,\nL\'equip del Telegram</string>
   <string name="NotificationContactNewPhoto">%1$s ha actualitzat la foto del perfil</string>
+  <string name="NotificationInvitedToGroupByLink">%1$s s\'ha unit al grup %2$s via enllaç d\'invitació</string>
   <string name="Reply">Respon</string>
   <string name="ReplyToGroup">Respon a %1$s</string>
   <string name="ReplyToUser">Respon a %1$s</string>
@@ -161,7 +181,7 @@
   <string name="Online">en línia</string>
   <string name="LastSeen">vist:</string>
   <string name="LastSeenDate">vist:</string>
-  <string name="InviteFriends">Convida als contactes</string>
+  <string name="InviteFriends">Convida els contactes</string>
   <string name="GlobalSearch">CERCA GLOBAL</string>
   <string name="Lately">vist fa poc</string>
   <string name="WithinAWeek">vist fa uns dies</string>
@@ -173,6 +193,19 @@
   <string name="EnterGroupNamePlaceholder">Introduïu el nom del grup</string>
   <string name="GroupName">Nom del grup</string>
   <string name="MembersCount">%1$d/%2$d membres</string>
+  <string name="JoinToGroup">Voleu unir-vos al grup \'%1$s\'?</string>
+  <string name="JoinToGroupErrorFull">El grup ja està ple.</string>
+  <string name="JoinToGroupErrorNotExist">Sembla que aquest grup no existeix.</string>
+  <string name="LinkCopied">S\'ha copiat l\'enllaç al porta-retalls</string>
+  <string name="InviteToGroupByLink">Convida al grup amb un enllaç</string>
+  <string name="InviteLink">Enllaç d\'invitació</string>
+  <string name="RevokeAlert">Voleu revocar l\'enllaç? Un cop ho feu, ningú podrà unir-se al grup utilitzant-lo.</string>
+  <string name="RevokeAlertNewLink">L\'enllaç d\'invitació anterior no està actiu. S\'ha generat un enllaç nou.</string>
+  <string name="RevokeButton">Revoca</string>
+  <string name="RevokeLink">Enllaç de revocació</string>
+  <string name="CopyLink">Copia l\'enllaç</string>
+  <string name="ShareLink">Comparteix l\'enllaç</string>
+  <string name="LinkInfo">Qualsevol qui tingui Telegram instal·lat serà capaç d\'unir-se al grup tot seguint l\'enllaç.</string>
   <!--group info view-->
   <string name="SharedMedia">Fitxers compartits</string>
   <string name="SETTINGS">Configuració</string>
@@ -214,6 +247,20 @@
   <string name="UsernameAvailable">%1$s està disponible.</string>
   <string name="UsernameEmpty">Cap</string>
   <string name="ErrorOccurred">S\'ha produït un error.</string>
+  <!--stickers view-->
+  <string name="Stickers">Adhesius</string>
+  <string name="StickersInfo">Els artistes són benvinguts i poden afegir els seus paquets d\'adhesius a través del nostre bot @stickers.\n\nEls usuaris poden afegir els adhesius prement-los i triant «Afegeix a Adhesius».</string>
+  <string name="AddStickers">Afegeix adhesius</string>
+  <string name="AddToStickers">Afegeix als adhesius</string>
+  <string name="AddStickersNotFound">No s\'han trobat adhesius</string>
+  <string name="StickersRemoved">S\'han eliminat els adhesius</string>
+  <string name="AddStickersInstalled">S\'han afegit nous adhesius</string>
+  <string name="StickersHide">Amaga</string>
+  <string name="StickersShow">Mostra</string>
+  <string name="StickersShare">Comparteix</string>
+  <string name="StickersCopy">Copia l\'enllaç</string>
+  <string name="StickersRemove">Elimina</string>
+  <string name="NoStickers">Encara no hi ha adhesius</string>
   <!--settings view-->
   <string name="ResetNotificationsText">S\'han reinicialitzat totes les notificacions als valors per defecte</string>
   <string name="TextSize">Mida del text dels missatges</string>
@@ -241,6 +288,7 @@
   <string name="NoSound">Sense so</string>
   <string name="Default">Per defecte</string>
   <string name="Support">Ajuda</string>
+  <string name="OnlyIfSilent">Només en mode Silenci</string>
   <string name="ChatBackground">Fons de pantalla</string>
   <string name="MessagesSettings">Missatges</string>
   <string name="SendByEnter">Envia amb «Retorn»</string>
@@ -249,14 +297,14 @@
   <string name="ContactJoined">En unir-se un contacte al Telegram</string>
   <string name="Pebble">PEBBLE</string>
   <string name="Language">Llengua</string>
-  <string name="AskAQuestionInfo">Tingueu en compte que l\'assistència del Telegram es basa en voluntariat. Intentem respondre al més ràpid possible, però pot ser que triguem una mica.<![CDATA[<br><br>]]>Doneu un cop d\'ull a les <![CDATA[<a href=\"http://telegram.org/faq#general\">PMF del Telegram</a>]]>; hi trobareu respostes a la majoria de preguntes i consells importants per a la <![CDATA[<a href=\"http://telegram.org/faq#troubleshooting\">resolució de problemes</a>]]>.</string>
+  <string name="AskAQuestionInfo">Tingueu present que el suport del Telegram és fet per voluntaris. Intentem respondre tan ràpid com és possible, però podem trigar una mica.<![CDATA[<br><br>]]>Sisplau, feu una ullada a les <![CDATA[<a href=\"https://telegram.org/faq#general\">PMF del Telegram</a>]]>. Tenen resposta a la majoria de preguntes i també consells importants per a la <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">resolució de problemes</a>]]>.</string>
   <string name="AskButton">Pregunta-ho a un voluntari</string>
   <string name="TelegramFaq">PMF del Telegram</string>
   <string name="TelegramFaqUrl">https://telegram.org/faq</string>
   <string name="DeleteLocalization">Voleu eliminar la localització?</string>
   <string name="IncorrectLocalization">El fitxer de localització no és vàlid</string>
   <string name="Enabled">Activat</string>
-  <string name="Disabled">Desactivat</string>
+  <string name="Disabled">Inhabilitat</string>
   <string name="NotificationsService">Servei de notificacions</string>
   <string name="NotificationsServiceDisableInfo">Si Google Play Services us és suficient per rebre notificacions, podeu desactivar el Servei de Notificacions aquí. De totes maneres recomanem deixar-lo activat per mantenir l\'app en segon pla i rebre notificacions a l\'instant.</string>
   <string name="SortBy">Ordena per</string>
@@ -272,8 +320,8 @@
   <string name="BadgeNumber">Número sobre la icona</string>
   <string name="Short">Curta</string>
   <string name="Long">Llarga</string>
-  <string name="SystemDefault">Definit pel sistema</string>
-  <string name="SettingsDefault">Definit per l\'aplicació</string>
+  <string name="SystemDefault">Definida pel sistema</string>
+  <string name="SettingsDefault">Definida per l\'aplicació</string>
   <string name="AutomaticMediaDownload">Baixada automàtica de fitxers</string>
   <string name="WhenUsingMobileData">Amb connexió de dades mòbils</string>
   <string name="WhenConnectedOnWiFi">Amb connexió Wi-Fi</string>
@@ -297,6 +345,28 @@
   <string name="NotificationsOther">Altres</string>
   <string name="NotificationsDisabled">Inhabilitades</string>
   <string name="VibrationDisabled">Inhabilitada</string>
+  <string name="LedDisabled">Inhabilitat</string>
+  <string name="RepeatDisabled">Inactiva</string>
+  <string name="InChatSound">Sons dins del xat</string>
+  <string name="SoundDefault">Per defecte</string>
+  <string name="VibrationDefault">Per defecte</string>
+  <string name="SmartNotifications">Notificacions intel·ligents</string>
+  <string name="SmartNotificationsDisabled">Inhabilitat</string>
+  <string name="SmartNotificationsInfo">So al màxim %1$s durant %2$s</string>
+  <string name="SmartNotificationsSoundAtMost">So al màxim</string>
+  <string name="SmartNotificationsTimes">vegades</string>
+  <string name="SmartNotificationsWithin">durant</string>
+  <string name="SmartNotificationsMinutes">minuts</string>
+  <!--sessions view-->
+  <string name="SessionsTitle">Sessions actives</string>
+  <string name="CurrentSession">Sessió actual</string>
+  <string name="NoOtherSessions">No hi ha cap altra sessió activa</string>
+  <string name="NoOtherSessionsInfo">Podeu entrar al Telegram des d\'un altre telèfon mòbil, tauleta i dispositius de sobretaula, usant el mateix número de telèfon. Totes les dades seran instantàniament sincronitzades.</string>
+  <string name="OtherSessions">Sessions actives</string>
+  <string name="SessionsInfo">Controleu les sessions en altres dispositius.</string>
+  <string name="TerminateSessionInfo">Pressioneu sobre una sessió per finalitzar-la.</string>
+  <string name="TerminateSessionQuestion">Voleu tancar aquesta sessió?</string>
+  <string name="UnofficialApp">aplicació no oficial</string>
   <!--passcode view-->
   <string name="Passcode">Codi d\'accés</string>
   <string name="ChangePasscode">Canvia el codi d\'accés</string>
@@ -305,6 +375,7 @@
   <string name="PasscodePIN">PIN</string>
   <string name="PasscodePassword">Contrasenya</string>
   <string name="EnterCurrentPasscode">Introduïu el codi d\'accés actual</string>
+  <string name="EnterNewFirstPasscode">Introduïu un codi d\'accés</string>
   <string name="EnterNewPasscode">Introduïu un nou codi d\'accés</string>
   <string name="EnterYourPasscode">Introduïu el codi d\'accés</string>
   <string name="ReEnterYourPasscode">Torneu a introduir el nou codi d\'accés</string>
@@ -312,7 +383,7 @@
   <string name="PasscodeDoNotMatch">Els codis d\'accés no coincideixen</string>
   <string name="AutoLock">Autoblocatge</string>
   <string name="AutoLockInfo">Demana el codi d\'accés en absentar-me.</string>
-  <string name="AutoLockInTime">a %1$s</string>
+  <string name="AutoLockInTime">en %1$s</string>
   <string name="AutoLockDisabled">Inhabilitat</string>
   <!--media view-->
   <string name="NoMedia">Compartiu fotos i vídeos a aquest xat i accediu-hi des de qualsevol dispositiu.</string>
@@ -325,15 +396,20 @@
   <string name="Hybrid">Híbrid</string>
   <string name="MetersAway">m lluny</string>
   <string name="KMetersAway">km lluny</string>
-  <string name="SendLocation">Envia la ubicació</string>
-  <string name="ShareLocation">Comparteix la ubicació</string>
+  <string name="SendLocation">Envieu la vostra ubicació actual</string>
+  <string name="SendSelectedLocation">Envia la ubicació seleccionada</string>
+  <string name="ShareLocation">Ubicació</string>
+  <string name="AccurateTo">Precís a %1$s</string>
+  <string name="NearbyPlaces">O TRIEU UN LLOC</string>
   <!--photo gallery view-->
   <string name="ShowAllMedia">Mostra tots els fitxers</string>
   <string name="SaveToGallery">Desa a la galeria</string>
   <string name="Of">%1$d de %2$d</string>
   <string name="Gallery">Galeria</string>
   <string name="AllPhotos">Totes les fotos</string>
+  <string name="AllVideo">Tots els vídeos</string>
   <string name="NoPhotos">No hi ha fotos encara</string>
+  <string name="NoVideo">Encara no hi ha vídeos</string>
   <string name="PleaseDownload">Descarregueu els fitxers primer</string>
   <string name="NoRecentPhotos">Cap foto recent</string>
   <string name="NoRecentGIFs">No hi ha GIF recents</string>
@@ -355,9 +431,69 @@
   <string name="Grain">Gra</string>
   <string name="Sharpen">Nitidesa</string>
   <string name="Blur">Difuminat</string>
+  <string name="BlurOff">Inactiu</string>
+  <string name="BlurLinear">Lineal</string>
+  <string name="BlurRadial">Radial</string>
   <string name="AreYouSureDeletePhoto">Voleu suprimir aquesta foto?</string>
   <string name="AreYouSureDeleteVideo">Voleu suprimir aquest vídeo?</string>
   <string name="DiscardChanges">Voleu descartar els canvis?</string>
+  <string name="ClearSearch">Voleu esborrar l\'historial de cerca?</string>
+  <string name="ClearButton">Esborra</string>
+  <string name="PickerPhotos">Fotos</string>
+  <string name="PickerVideo">Vídeo</string>
+  <string name="AddCaption">Afegiu una llegenda...</string>
+  <string name="PhotoCaption">Llegenda de la foto</string>
+  <string name="VideoCaption">Llegenda del vídeo</string>
+  <!--password view-->
+  <string name="TwoStepVerification">Verificació en dos passos</string>
+  <string name="SetAdditionalPassword">Configura una contrasenya addicional</string>
+  <string name="SetAdditionalPasswordInfo">Podeu configurar una contrasenya que se us demanarà quan inicieu sessió en un nou dispositiu a més del codi que rebreu per SMS.</string>
+  <string name="YourPassword">Contrasenya</string>
+  <string name="PleaseEnterCurrentPassword">Introduïu la contrasenya</string>
+  <string name="PleaseEnterFirstPassword">Introduïu una contrasenya</string>
+  <string name="PleaseEnterPassword">Introduïu la nova contrasenya</string>
+  <string name="PleaseReEnterPassword">Introduïu la contrasenya de nou</string>
+  <string name="RecoveryEmail">Correu de recuperació</string>
+  <string name="YourEmail">El vostre correu</string>
+  <string name="YourEmailInfo">Afegiu un correu vàlid. És l\'única manera de recuperar una contrasenya perduda.</string>
+  <string name="YourEmailSkip">Omet</string>
+  <string name="YourEmailSkipWarning">Avís</string>
+  <string name="YourEmailSkipWarningText">No, de debò.\n\nSi oblideu la contrasenya, perdreu l\'accés al vostre compte de Telegram. No hi haurà cap manera de restaurar-lo.</string>
+  <string name="YourEmailAlmostThere">Ja gaire acabem!</string>
+  <string name="YourEmailAlmostThereText">Comproveu la bústia de correu electrònic (no oblideu la carpeta brossa) per acabar de configurar la verificació en dos passos.</string>
+  <string name="YourPasswordSuccess">Correcte!</string>
+  <string name="YourPasswordSuccessText">S\'ha activat la contrasenya per la verificació en dos passos.</string>
+  <string name="ChangePassword">Canvia la contrasenya</string>
+  <string name="TurnPasswordOff">Desactiva la contrasenya</string>
+  <string name="SetRecoveryEmail">Configura un correu de recuperació</string>
+  <string name="ChangeRecoveryEmail">Canvia el correu de recuperació</string>
+  <string name="TurnPasswordOffQuestion">Segur que voleu desactivar la contrasenya?</string>
+  <string name="PasswordHint">Pista de la contrasenya</string>
+  <string name="PasswordHintText">Creeu una pista per a la contrasenya</string>
+  <string name="PasswordDoNotMatch">Les contrasenyes no concorden</string>
+  <string name="AbortPassword">Interromp la configuració de la verificació en dos passos</string>
+  <string name="EmailPasswordConfirmText">Seguiu aquests passos per configurar la verificació en dos passos:\n\n1. Reviseu la bústia de correu electrònic (no oblideu la carpeta de correu brossa)\n%1$s\n\n2. Feu clic a l\'enllaç de validació.</string>
+  <string name="PasswordAsHintError">La pista ha de ser diferent de la contrasenya</string>
+  <string name="PasswordEmailInvalid">Correu electrònic no vàlid</string>
+  <string name="RestorePasswordNoEmailTitle">Ho sentim</string>
+  <string name="RestorePasswordNoEmailText">Atès que no heu proporcionat una adreça electrònica de recuperació en establir la contrasenya, les opcions disponibles són recordar la contrasenya o restablir el compte.</string>
+  <string name="RestoreEmailSent">Us hem enviat un codi de recuperació a l\'adreça de correu electrònic proporcionada:\n\n%1$s</string>
+  <string name="RestoreEmailSentInfo">Reviseu la bústia de correu electrònic i introduïu el codi de 6 dígits que us hem enviat.</string>
+  <string name="RestoreEmailTrouble">Teniu dificultats per accedir al vostre correu electrònic %1$s?</string>
+  <string name="RestoreEmailTroubleText">Si no podeu recuperar l\'accés al vostre correu electrònic, les opcions disponibles són recordar la contrasenya o restablir el compte.</string>
+  <string name="ResetMyAccount">RESTABLEIX EL MEU COMPTE</string>
+  <string name="ResetMyAccountText">Si procediu amb el restabliment del vostre compte, perdreu tots els xats i missatges, i també tots els fitxers que heu compartit.</string>
+  <string name="ResetMyAccountWarning">Avís</string>
+  <string name="ResetMyAccountWarningText">Aquesta acció no es pot desfer.\n\nSi restabliu el compte, tots els vostres missatges i xats se suprimiran.</string>
+  <string name="ResetMyAccountWarningReset">Restableix</string>
+  <string name="LoginPassword">Contrasenya</string>
+  <string name="LoginPasswordText">Heu habilitat la Verificació en dos passos, per tant el vostre compte està protegit amb una contrasenya addicional.</string>
+  <string name="ForgotPassword">Heu oblidat la contrasenya?</string>
+  <string name="PasswordRecovery">Recuperació de la contrasenya</string>
+  <string name="PasswordCode">Codi</string>
+  <string name="PasswordReset">Contrasenya desactivada</string>
+  <string name="EnabledPasswordText">Heu habilitat la Verificació en dos passos.\nEs requerirà la contrasenya que heu establert aquí per iniciar sessió a Telegram.</string>
+  <string name="PendingEmailText">La vostra adreça electrònica de recuperació %1$s encara no és activa i està pendent de confirmació.</string>
   <!--privacy settings-->
   <string name="PrivacySettings">Privadesa i seguretat</string>
   <string name="PrivacyTitle">Privadesa</string>
@@ -396,12 +532,23 @@
   <string name="EditedVideo">Vídeo editat</string>
   <string name="SendingVideo">S\'està enviant el vídeo...</string>
   <string name="CompressVideo">Comprimeix el vídeo</string>
+  <!--bot-->
+  <string name="Bot">bot</string>
+  <string name="BotShare">Comparteix</string>
+  <string name="BotInvite">Afegeix-lo a un grup</string>
+  <string name="BotSettings">Configuració</string>
+  <string name="BotHelp">Ajuda</string>
+  <string name="BotStatusRead">té accés als missatges</string>
+  <string name="BotStatusCantRead">no té accés als missatges</string>
+  <string name="BotInfoTitle">Què pot fer aquest bot?</string>
+  <string name="BotStart">INICIA</string>
   <!--button titles-->
   <string name="Next">Endavant</string>
   <string name="Back">Enrere</string>
   <string name="Done">Fet</string>
   <string name="Open">Obre</string>
   <string name="Cancel">Cancel·la</string>
+  <string name="Close">Tanca</string>
   <string name="Add">Afegeix</string>
   <string name="Edit">Edita</string>
   <string name="Send">Envia</string>
@@ -417,6 +564,8 @@
   <string name="OK">D\'acord</string>
   <string name="Crop">RETALLA</string>
   <!--messages-->
+  <string name="ActionInviteYou">Us heu unit al grup via enllaç d\'invitació</string>
+  <string name="ActionInviteUser">un1 s\'ha unit al grup via l\'enllaç d\'invitació</string>
   <string name="ActionKickUser">un1 ha fet fora un2</string>
   <string name="ActionLeftUser">un1 ha abandonat el grup</string>
   <string name="ActionAddUser">un1 ha afegit un2</string>
@@ -434,7 +583,8 @@
   <string name="ActionKickUserYou">un1 us ha fet fora</string>
   <string name="ActionAddUserYou">un1 us ha afegit</string>
   <string name="ActionAddUserSelf">un1 ha tornat al grup</string>
-  <string name="UnsuppotedMedia">Aquest missatge no és compatible amb la vostra versió del Telegram. Actualitzeu l\'app per veure\'l: http://telegram.org/update</string>
+  <string name="ActionAddUserSelfYou">Heu tornat al grup</string>
+  <string name="UnsuppotedMedia">Aquest missatge no és compatible amb la vostra versió del Telegram. Actualitzeu l\'aplicació per veure\'l: https://telegram.org/update</string>
   <string name="AttachPhoto">Foto</string>
   <string name="AttachVideo">Vídeo</string>
   <string name="AttachLocation">Ubicació</string>
@@ -449,16 +599,20 @@
   <string name="InvalidPhoneNumber">Número de telèfon no vàlid</string>
   <string name="CodeExpired">El codi ha vençut. Torneu a iniciar la sessió.</string>
   <string name="FloodWait">Heu excedit el nombre d\'intents. Torneu-ho a provar més tard.</string>
+  <string name="FloodWaitTime">Massa intents, torneu-ho a provar-ho d\'aquí %1$s</string>
   <string name="InvalidCode">Codi no vàlid</string>
   <string name="InvalidFirstName">Nom no vàlid</string>
   <string name="InvalidLastName">Cognoms no vàlids</string>
   <string name="Loading">S\'està carregant...</string>
   <string name="NoPlayerInstalled">No teniu cap reproductor de vídeo. Instal·leu-ne un per continuar</string>
-  <string name="NoMailInstalled">Envieu un missatge a sms@telegram.org i expliqueu-nos el problema.</string>
+  <string name="NoMailInstalled">Envieu un correu a sms@stel.com i expliqueu-nos quin és el problema.</string>
   <string name="NoHandleAppInstalled">No teniu cap aplicació que permeti obrir fitxers de tipus MIME «%1$s». Instal·leu-ne una per continuar</string>
   <string name="InviteUser">Aquest usuari encara no té el Telegram. Voleu enviar-li una invitació?</string>
   <string name="AreYouSure">N\'esteu segur?</string>
-  <string name="AddToTheGroup">Voleu afegir %1$s al grup?\n\nNúmero d\'últims missatges a reenviar:</string>
+  <string name="AddToTheGroupTitle">Voleu afegir %1$s al grup %2$s?</string>
+  <string name="AddToTheGroupForwardCount">Nombre d\'últims missatges a reenviar:</string>
+  <string name="AddToTheGroup">Voleu afegir %1$s al grup?</string>
+  <string name="UserAlreadyInGroup">Aquest usuari ja és en aquest grup</string>
   <string name="ForwardMessagesTo">Voleu reenviar els missatges a %1$s?</string>
   <string name="SendMessagesTo">Voleu enviar els missatges a %1$s?</string>
   <string name="AreYouSureLogout">Esteu segur que voleu sortir?\n\nPodeu utilitzar igualment el Telegram en tots els vostres dispositius alhora.\n\nRecordeu que en tancar la sessió s\'eliminen els Xats Secrets.</string>
@@ -476,6 +630,8 @@
   <string name="SendMessagesToGroup">Voleu enviar els missatges a %1$s?</string>
   <string name="ForwardMessagesToGroup">Voleu reenviar els missatges a %1$s?</string>
   <string name="FeatureUnavailable">Aquesta característica no es troba disponible al teu país.</string>
+  <string name="NoUsernameFound">No hi ha cap compte de Telegram amb aquest nom d\'usuari.</string>
+  <string name="BotCantJoinGroups">Aquest bot no pot unir-se a grups.</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Ràpid</string>
@@ -513,10 +669,10 @@
   <string name="AndMoreTyping_other">i %1$d persones més estan escrivint</string>
   <string name="NewMessages_zero">no hi ha missatges nous</string>
   <string name="NewMessages_one">%1$d missatge nou</string>
-  <string name="NewMessages_two">%1$d missatge nou</string>
-  <string name="NewMessages_few">%1$d missatge nou</string>
-  <string name="NewMessages_many">%1$d missatge nou</string>
-  <string name="NewMessages_other">%1$d missatge nou</string>
+  <string name="NewMessages_two">%1$d missatges nous</string>
+  <string name="NewMessages_few">%1$d missatges nous</string>
+  <string name="NewMessages_many">%1$d missatges nous</string>
+  <string name="NewMessages_other">%1$d missatges nous</string>
   <string name="messages_zero">no hi ha missatges</string>
   <string name="messages_one">%1$d missatge</string>
   <string name="messages_two">%1$d missatges</string>
@@ -583,11 +739,90 @@
   <string name="Users_few">%1$d usuaris</string>
   <string name="Users_many">%1$d usuaris</string>
   <string name="Users_other">%1$d usuaris</string>
+  <string name="Times_zero">%1$d vegades</string>
+  <string name="Times_one">%1$d vegada</string>
+  <string name="Times_two">%1$d vegades</string>
+  <string name="Times_few">%1$d vegades</string>
+  <string name="Times_many">%1$d vegades</string>
+  <string name="Times_other">%1$d vegades</string>
+  <string name="Meters_zero">%1$d metres</string>
+  <string name="Meters_one">%1$d metre</string>
+  <string name="Meters_two">%1$d metres</string>
+  <string name="Meters_few">%1$d metres</string>
+  <string name="Meters_many">%1$d metres</string>
+  <string name="Meters_other">%1$d metres</string>
+  <string name="Stickers_zero">%1$d adhesius</string>
+  <string name="Stickers_one">%1$d adhesiu</string>
+  <string name="Stickers_two">%1$d adhesius</string>
+  <string name="Stickers_few">%1$d adhesius</string>
+  <string name="Stickers_many">%1$d adhesius</string>
+  <string name="Stickers_other">%1$d adhesius</string>
+  <string name="Photos_zero">%1$d fotos</string>
+  <string name="Photos_one">%1$d foto</string>
+  <string name="Photos_two">%1$d fotos</string>
+  <string name="Photos_few">%1$d fotos</string>
+  <string name="Photos_many">%1$d fotos</string>
+  <string name="Photos_other">%1$d fotos</string>
+  <!--forwarded messages-->
+  <string name="ForwardedMessage_zero">%1$d missatges a reenviar</string>
+  <string name="ForwardedMessage_one">Missatge a reenviar</string>
+  <string name="ForwardedMessage_two">%1$d missatges a reenviar</string>
+  <string name="ForwardedMessage_few">%1$d missatges a reenviar</string>
+  <string name="ForwardedMessage_many">%1$d missatges a reenviar</string>
+  <string name="ForwardedMessage_other">%1$d missatges a reenviar</string>
+  <string name="ForwardedFile_zero">%1$d fitxers a reenviar</string>
+  <string name="ForwardedFile_one">Fitxer a reenviar</string>
+  <string name="ForwardedFile_two">%1$d fitxers a reenviar</string>
+  <string name="ForwardedFile_few">%1$d fitxers a reenviar</string>
+  <string name="ForwardedFile_many">%1$d fitxers a reenviar</string>
+  <string name="ForwardedFile_other">%1$d fitxers a reenviar</string>
+  <string name="ForwardedPhoto_zero">%1$d fotos a reenviar</string>
+  <string name="ForwardedPhoto_one">Foto a reenviar</string>
+  <string name="ForwardedPhoto_two">%1$d fotos a reenviar</string>
+  <string name="ForwardedPhoto_few">%1$d fotos a reenviar</string>
+  <string name="ForwardedPhoto_many">%1$d fotos a reenviar</string>
+  <string name="ForwardedPhoto_other">%1$d fotos a reenviar</string>
+  <string name="ForwardedVideo_zero">%1$d vídeos a reenviar</string>
+  <string name="ForwardedVideo_one">Vídeo a reenviar</string>
+  <string name="ForwardedVideo_two">%1$d vídeos a reenviar</string>
+  <string name="ForwardedVideo_few">%1$d vídeos a reenviar</string>
+  <string name="ForwardedVideo_many">%1$d vídeos a reenviar</string>
+  <string name="ForwardedVideo_other">%1$d vídeos a reenviar</string>
+  <string name="ForwardedAudio_zero">%1$d àudios a reenviar</string>
+  <string name="ForwardedAudio_one">Àudio a reenviar</string>
+  <string name="ForwardedAudio_two">%1$d àudios a reenviar</string>
+  <string name="ForwardedAudio_few">%1$d àudios a reenviar</string>
+  <string name="ForwardedAudio_many">%1$d àudios a reenviar</string>
+  <string name="ForwardedAudio_other">%1$d àudios a reenviar</string>
+  <string name="ForwardedLocation_zero">%1$d ubicacions a reenviar</string>
+  <string name="ForwardedLocation_one">Ubicació a reenviar</string>
+  <string name="ForwardedLocation_two">%1$d ubicacions a reenviar</string>
+  <string name="ForwardedLocation_few">%1$d ubicacions a reenviar</string>
+  <string name="ForwardedLocation_many">%1$d ubicacions a reenviar</string>
+  <string name="ForwardedLocation_other">%1$d ubicacions a reenviar</string>
+  <string name="ForwardedContact_zero">%1$d contactes a reenviar</string>
+  <string name="ForwardedContact_one">Contacte a reenviar</string>
+  <string name="ForwardedContact_two">%1$d contactes a reenviar</string>
+  <string name="ForwardedContact_few">%1$d contactes a reenviar</string>
+  <string name="ForwardedContact_many">%1$d contactes a reenviar</string>
+  <string name="ForwardedContact_other">%1$d contactes a reenviar</string>
+  <string name="ForwardedSticker_zero">%1$d adhesius a reenviar</string>
+  <string name="ForwardedSticker_one">Adhesiu a reenviar</string>
+  <string name="ForwardedSticker_two">%1$d adhesius a reenviar</string>
+  <string name="ForwardedSticker_few">%1$d adhesius a reenviar</string>
+  <string name="ForwardedSticker_many">%1$d adhesius a reenviar</string>
+  <string name="ForwardedSticker_other">%1$d adhesius a reenviar</string>
+  <string name="AndOther_zero">i %1$d altres</string>
+  <string name="AndOther_one">i %1$d altre</string>
+  <string name="AndOther_two">i %1$d altres</string>
+  <string name="AndOther_few">i %1$d altres</string>
+  <string name="AndOther_many">i %1$d altres</string>
+  <string name="AndOther_other">i %1$d altres</string>
   <!--date formatters-->
   <string name="formatterMonthYear">MMMM \'del\' yyyy</string>
   <string name="formatterMonth">dd MMM</string>
-  <string name="formatterYear">dd.MM.yy</string>
-  <string name="formatterYearMax">dd.MM.yyyy</string>
+  <string name="formatterYear">dd-MM-yy</string>
+  <string name="formatterYearMax">dd-MM-yyyy</string>
   <string name="chatDate">d MMMM</string>
   <string name="chatFullDate">d MMMM \'del\' yyyy</string>
   <string name="formatterWeek">EEE</string>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 88c1198c0..8ebca5508 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">Du hast eine Broadcast Liste erstellt</string>
     <string name="AddRecipient">Empfänger hinzufügen</string>
     <string name="KickFromBroadcast">Aus Broadcast Liste entfernen</string>
+    <!--audio view-->
+    <string name="NoAudio">Bitte füge Musikdateien einfach deiner Android Musikbibliothek hinzu, um sie hier zu sehen.</string>
+    <string name="AttachMusic">Musik</string>
+    <string name="AudioUnknownArtist">Unbekannter Künstler</string>
+    <string name="AudioUnknownTitle">Unbekannter Titel</string>
     <!--documents view-->
     <string name="SelectFile">Datei auswählen</string>
     <string name="FreeOfTotal">Freier Speicher: %1$s von %2$s</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">Diesen Chat löschen</string>
     <string name="SlideToCancel">WISCHEN UM ABZUBRECHEN</string>
     <string name="SaveToDownloads">In Downloads speichern</string>
+    <string name="SaveToMusic">Musik speichern</string>
     <string name="ShareFile">Teilen</string>
     <string name="ApplyLocalizationFile">Sprachdatei benutzen</string>
     <string name="UnsupportedAttachment">Nicht unterstützte Datei</string>
@@ -208,7 +214,7 @@
     <string name="SharedMedia">Geteilte Medien</string>
     <string name="SETTINGS">Einstellungen</string>
     <string name="AddMember">Mitglied hinzufügen</string>
-    <string name="DeleteAndExit">Gruppe löschen und verlassen</string>
+    <string name="DeleteAndExit">Löschen und Gruppe verlassen</string>
     <string name="Notifications">Mitteilungen</string>
     <string name="KickFromGroup">Aus der Gruppe entfernen</string>
     <!--contact info view-->
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">Aus</string>
     <string name="InChatSound">In-Chat-Töne</string>
     <string name="SoundDefault">Standard</string>
+    <string name="VibrationDefault">Standard</string>
     <string name="SmartNotifications">Intelligente Benachrichtigungen</string>
     <string name="SmartNotificationsDisabled">Deaktiviert</string>
     <string name="SmartNotificationsInfo">Höchstens %1$s innerhalb von %2$s</string>
@@ -827,8 +834,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s um %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger für Android wurde aktualisiert. Neu in Version 3.0:\n\n- Neue Tabs im Sticker Panel für alle deine eigenen Sticker-Pakete. Füge neue Sticker wie beispielsweise https://telegram.me/addstickers/Animals hinzu.\n- Neue Bot API, für alle kostenlos verfügbar. Kannst du programmieren? Erstelle deine eigenen Bots für Spiele, Dienste oder Integrationen. Mehr dazu unter https://telegram.org/blog/bot-revolution\n- Überprüfe, lade herunter und installiere die Themes for Plus Messenger App. Neue Themen jeden Tag:\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">Plus Messenger für Android wurde aktualisiert. Neu in Version 3.1:\n\n- Direkte Suche in Chats.\n- In Chats versteckt sich ein komplett neues Menü hinter der Büroklammer. Nun kann man dort auch Musik und Kontakte versenden.\n- In-App Medienwiedergabe für YouTube, Vimeo, SoundCloud, etc. optimiert und neuer Player für Audiodateien.\n\nMehr dazu unter:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+--><!--
   <string name="updatePlusText">
 \n\nNew in 3.0.1.3:\n\n- Option in den Einstellungen Systemschrift verwenden\n- Option Suchen im Chat/Gruppe\n- Hinzugefügt: MOD Farbe Kopfzeile , Titelfarbe  Kopfzeile und Symbolefarbe in Farbeinstellungen ändern / Themen bearbeiten\n- MOD Gruppen Symbol Farbe in der Chatübersicht ändern\n- MOD  Symbolgröße in Navigationsmenü ändern \n- Fehlerbehebung</string>-->
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 1e45fea93..36da5c70c 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">Creaste una lista de difusión</string>
     <string name="AddRecipient">Añadir destinatario</string>
     <string name="KickFromBroadcast">Quitar de la lista de difusión</string>
+    <!--audio view-->
+    <string name="NoAudio">Por favor, añade archivos a la carpeta de música en tu dispositivo para verlos aquí.</string>
+    <string name="AttachMusic">Música</string>
+    <string name="AudioUnknownArtist">Artista desconocido</string>
+    <string name="AudioUnknownTitle">Título desconocido</string>
     <!--documents view-->
     <string name="SelectFile">Elegir archivo</string>
     <string name="FreeOfTotal">%1$s de %2$s libres</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">Eliminar este chat</string>
     <string name="SlideToCancel">DESLIZA PARA CANCELAR</string>
     <string name="SaveToDownloads">Guardar en descargas</string>
+    <string name="SaveToMusic">Guardar en música</string>
     <string name="ShareFile">Compartir</string>
     <string name="ApplyLocalizationFile">Aplicar traducción</string>
     <string name="UnsupportedAttachment">Adjunto no soportado</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">Apagado</string>
     <string name="InChatSound">Sonidos en el chat</string>
     <string name="SoundDefault">Por defecto</string>
+    <string name="VibrationDefault">Por defecto</string>
     <string name="SmartNotifications">Notificaciones inteligentes</string>
     <string name="SmartNotificationsDisabled">Desactivadas</string>
     <string name="SmartNotificationsInfo">Sonar como máximo %1$s en %2$s</string>
@@ -827,10 +834,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s a las %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger para Android fue actualizada. Novedades en la versión 3.0:\n\n- Pestañas dedicadas para cada uno de tus packs de stickers personalizados en el panel de stickers. Añade stickers personalizados como: https://telegram.me/addstickers/Animals\n- Nueva API para bots, gratis para todos. Si eres un ingeniero, crea tus propios bots para juegos, servicios o integraciones. Conoce más en: https://telegram.org/blog/bot-revolution\n - Ojea, descarga y aplica temas para Plus Messenger. Nuevos temas cada día:\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">Plus Messenger para Android fue actualizada. Novedades en la versión 3.1:\n\n- Busca mensajes dentro de un chat en específico.\n- Menú para adjuntar completamente rediseñado. Envía contactos y archivos de audio directamente desde el menú para adjuntar.\n- Reproducción de multimedia dentro de la aplicación mejorada (YouTube, Vimeo, SoundCloud etc.), nuevo reproductor para archivos de audio largos.\n\nMás sobre esta actualización:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+ Spanish-->
-    <string name="updatePlusText">\n\nNovedades en 3.0.1.5:\n\n- Arregladas opciones para compartir música y sticker\n- Añadida opción para compartir tlf de un contacto\n - Añadida opción para añadir miembro directamente desde las opciones de grupo\n- Añadida opción para silenciar o activar notificaciones desde pantalla principal\n- Solución de errores</string>
+    <string name="updatePlusText">\n\nNovedades en 3.1.1.3:\n\n- Nuevo MOD para ajustar color de estado en pantalla Ajustes\n- Solución de errores</string>
     <string name="TelegramForAndroid">Plus Messenger para Android</string>
     <string name="Theming">Tematización</string>
     <string name="colorHexInvalid">¡Color hexadecimal inválido!</string>
@@ -957,4 +964,5 @@
     <string name="UseDeviceFont">Usa fuente del teléfono</string>
     <string name="AppWillRestart">Plus Messenger se reiniciará</string>
     <string name="GroupIconColor">Color de icono de grupo</string>
+    <string name="SharedContactNameColor">Color de nombre de contacto compartido</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-fr/strings.xml b/TMessagesProj/src/main/res/values-fr/strings.xml
index 310043e79..19f7879a3 100644
--- a/TMessagesProj/src/main/res/values-fr/strings.xml
+++ b/TMessagesProj/src/main/res/values-fr/strings.xml
@@ -62,6 +62,11 @@
   <string name="YouCreatedBroadcastList">Vous avez créé un liste de diffusion</string>
   <string name="AddRecipient">Ajouter un destinataire</string>
   <string name="KickFromBroadcast">Supprimer de la liste de diffusion</string>
+  <!--audio view-->
+  <string name="NoAudio">Merci d\'ajouter des fichiers à votre bibliothèque musicale sur votre appareil pour les voir ici.</string>
+  <string name="AttachMusic">Musique</string>
+  <string name="AudioUnknownArtist">Artiste inconnu</string>
+  <string name="AudioUnknownTitle">Titre inconnu</string>
   <!--documents view-->
   <string name="SelectFile">Sélectionnez un fichier</string>
   <string name="FreeOfTotal">%1$s sur %2$s disponible</string>
@@ -96,6 +101,7 @@
   <string name="ChatLocation">Localisation</string>
   <string name="ChatVideo">Vidéo</string>
   <string name="ChatDocument">Fichier</string>
+  <string name="ChatCamera">Appareil photo</string>
   <string name="NoMessages">Aucun message pour l\'instant…</string>
   <string name="ForwardedMessage">Message transféré</string>
   <string name="From">De</string>
@@ -118,6 +124,7 @@
   <string name="SlideToCancel">GLISSER POUR ANNULER
 </string>
   <string name="SaveToDownloads">Enregistrer dans les téléchargements</string>
+  <string name="SaveToMusic">Enregistrer dans musique</string>
   <string name="ShareFile">Partager</string>
   <string name="ApplyLocalizationFile">Appliquer le fichier de localisation</string>
   <string name="UnsupportedAttachment">Type de pièce-jointe inconnu</string>
@@ -126,6 +133,7 @@
   <string name="GettingLinkInfo">Obtention d\'informations sur le lien…</string>
   <string name="OpenInBrowser">Ouvrir dans un navigateur</string>
   <string name="CopyUrl">Copier l\'URL</string>
+  <string name="SendItems">Envoyer %1$s</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s a défini l\'auto-destruction des messages à %2$s</string>
   <string name="MessageLifetimeChangedOutgoing">Vous avez défini l\'auto-destruction des messages à %1$s</string>
@@ -525,6 +533,16 @@
   <string name="EditedVideo">Vidéo éditée</string>
   <string name="SendingVideo">Envoi de la vidéo...</string>
   <string name="CompressVideo">Compresser la vidéo</string>
+  <!--bot-->
+  <string name="Bot">bot</string>
+  <string name="BotShare">Partager</string>
+  <string name="BotInvite">Ajouter au groupe</string>
+  <string name="BotSettings">Paramètres</string>
+  <string name="BotHelp">Aide</string>
+  <string name="BotStatusRead">a accès aux messages</string>
+  <string name="BotStatusCantRead">n\'a pas accès aux messages</string>
+  <string name="BotInfoTitle">Que peux faire ce bot ?</string>
+  <string name="BotStart">DEMARRER</string>
   <!--button titles-->
   <string name="Next">Suivant</string>
   <string name="Back">Précédent</string>
@@ -567,7 +585,7 @@
   <string name="ActionAddUserYou">un1 vous a ajouté</string>
   <string name="ActionAddUserSelf">un1 est revenu dans le groupe</string>
   <string name="ActionAddUserSelfYou">Vous êtes revenu au groupe</string>
-  <string name="UnsuppotedMedia">Ce message n\'est pas supporté dans votre version de Telegram. Veuillez mettre à jour l\'appli pour le voir: http://telegram.org/update</string>
+  <string name="UnsuppotedMedia">Ce message n\'est pas supporté sur votre version de Telegram. Mettez à jour l\'application pour le voir: https://telegram.org/update</string>
   <string name="AttachPhoto">Photo</string>
   <string name="AttachVideo">Vidéo</string>
   <string name="AttachLocation">Localisation</string>
@@ -592,7 +610,10 @@
   <string name="NoHandleAppInstalled">Vous ne disposez d\'aucune application compatible avec le type de fichier \'%1$s\'. Veuillez en installer une pour continuer</string>
   <string name="InviteUser">Cet utilisateur ne dispose pas de Telegram, envoyer une invitation ?</string>
   <string name="AreYouSure">Êtes-vous sûr ?</string>
-  <string name="AddToTheGroup">Ajouter %1$s au groupe?\n\nNombre des derniers messages à transmettre :</string>
+  <string name="AddToTheGroupTitle">Ajouter %1$s au groupe %2$s?</string>
+  <string name="AddToTheGroupForwardCount">Nombre des derniers messages à transmettre :</string>
+  <string name="AddToTheGroup">Ajouter %1$s au groupe ?</string>
+  <string name="UserAlreadyInGroup">L\'utilisateur est déjà dans le groupe.</string>
   <string name="ForwardMessagesTo">Transférer le message à %1$s ?</string>
   <string name="SendMessagesTo">Envoyer des messages à %1$s ?</string>
   <string name="AreYouSureLogout">Êtes-vous sûr de vouloir vous déconnecter?\n\nNotez que vous pouvez utiliser Telegram simultanément sur tous vos appareils.\n\nPour rappel, une déconnexion détruit toutes vos Conversations Secrètes.</string>
@@ -610,6 +631,8 @@
   <string name="SendMessagesToGroup">Envoyer des messages à %1$s ?</string>
   <string name="ForwardMessagesToGroup">Transférer les messages à %1$s ?</string>
   <string name="FeatureUnavailable">Désolé, cette option n\'est actuellement pas disponible dans votre pays.</string>
+  <string name="NoUsernameFound">Il n\'y a pas de compte Telegram associé à cet utilisateur.</string>
+  <string name="BotCantJoinGroups">Ce bot ne peut pas rejoindre des groupes.</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Rapide</string>
@@ -735,6 +758,12 @@
   <string name="Stickers_few">%1$d stickers</string>
   <string name="Stickers_many">%1$d stickers</string>
   <string name="Stickers_other">%1$d stickers</string>
+  <string name="Photos_zero">%1$d photos</string>
+  <string name="Photos_one">%1$d photo</string>
+  <string name="Photos_two">%1$d photos</string>
+  <string name="Photos_few">%1$d photos</string>
+  <string name="Photos_many">%1$d photos</string>
+  <string name="Photos_other">%1$d photos</string>
   <!--forwarded messages-->
   <string name="ForwardedMessage_zero">%1$d messages transférés</string>
   <string name="ForwardedMessage_one">Message transféré</string>
@@ -803,7 +832,7 @@
   <string name="formatDateAtTime">%1$s à %2$s</string>
   <!--update text--><!--
   <string name="updateText">Plus Messenger pour Android vient d\'être mis à jour. Nouveautés de la version 2.9: \n\n- Installez et partagez des paquets de stickers personnalisés comme celui-ci: this one: https://play.google.com/store/apps/details?id=es.rafalense.themes\n- Si vous êtes un artiste, créez vos paquets de stickers, en utilisant notre robot @stickers. \n\n- Utilisez Telegram avec Android Auto.</string>-->
-  <string name="updateBuild">547</string>
+  <string name="updateBuild">583</string>
     <!--Telegram+ French-->
     <string name="TelegramForAndroid">Plus Messenger pour Android</string>
     <string name="Theming">Thème</string>
diff --git a/TMessagesProj/src/main/res/values-gl/strings.xml b/TMessagesProj/src/main/res/values-gl/strings.xml
index 3f7445ad7..c124aca69 100644
--- a/TMessagesProj/src/main/res/values-gl/strings.xml
+++ b/TMessagesProj/src/main/res/values-gl/strings.xml
@@ -22,7 +22,7 @@ e introduce o teu número.</string>
   <string name="YourName">O teu nome</string>
   <string name="RegisterText">Pon o teu nome e apelidos</string>
   <!--<string name="RegisterText">Set up your name and picture</string>-->
-  <string name="FirstName">Nome (requerido)</string>
+  <string name="FirstName">Nome (requirido)</string>
   <string name="LastName">Apelidos (opcional)</string>
   <string name="CancelRegistration">Cancelar o rexistro</string>
   <!--chats view-->
@@ -40,7 +40,7 @@ e introduce o teu número.</string>
   <string name="AwaitingEncryption">Agardando a que %s se conecte...</string>
   <string name="EncryptionRejected">Chat secreto cancelado</string>
   <string name="EncryptionProcessing">Intercambiando as claves de cifrado...</string>
-  <string name="EncryptedChatStartedOutgoing">%s uníuse á teu chat secreto.</string>
+  <string name="EncryptedChatStartedOutgoing">%s uniuse ao teu chat secreto.</string>
   <string name="EncryptedChatStartedIncoming">Unícheste ao chat secreto.</string>
   <string name="ClearHistory">Borrar o historial</string>
   <string name="DeleteChat">Eliminar e saír</string>
@@ -56,14 +56,16 @@ e introduce o teu número.</string>
   <string name="UnmuteNotifications">Non silenciar</string>
   <string name="WillUnmuteIn">En %1$s</string>
   <string name="MuteDisable">Desactivar</string>
+  <string name="Hashtags">HASHTAGS</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Nova difusión</string>
   <string name="EnterListName">Introduce o nome da lista</string>
   <string name="YouCreatedBroadcastList">Creaches unha lista de difusión</string>
   <string name="AddRecipient">Engadir destinatario</string>
   <string name="KickFromBroadcast">Eliminar da lista de difusión</string>
+  <!--audio view-->
   <!--documents view-->
-  <string name="SelectFile">Seleccionar un arquivo</string>
+  <string name="SelectFile">Seleccionar un ficheiro</string>
   <string name="FreeOfTotal">%1$s libres de %2$s</string>
   <string name="UnknownError">Erro descoñecido</string>
   <string name="AccessError">Erro ao acceder</string>
@@ -82,12 +84,21 @@ e introduce o teu número.</string>
   <string name="Typing">escribindo...</string>
   <string name="IsTyping">está a escribir...</string>
   <string name="AreTyping">están a escribir...</string>
+  <string name="IsRecordingAudio">%1$s está a gravar audio...</string>
+  <string name="IsSendingPhoto">%1$s está a enviar unha foto</string>
+  <string name="IsSendingVideo">%1$s está a enviar video</string>
+  <string name="IsSendingFile">%1$s está a enviar un ficheiro...</string>
+  <string name="RecordingAudio">gravando audio...</string>
+  <string name="SendingPhoto">enviando foto...</string>
+  <string name="SendingVideoStatus">enviando vídeo...</string>
+  <string name="SendingFile">enviando ficheiro</string>
   <string name="GotAQuestion">Tes algunha pregunta\nsobre Telegram?</string>
   <string name="ChatTakePhoto">Tira unha foto</string>
   <string name="ChatGallery">Galería</string>
   <string name="ChatLocation">Localización</string>
   <string name="ChatVideo">Vídeo</string>
   <string name="ChatDocument">Ficheiro</string>
+  <string name="ChatCamera">Cámara</string>
   <string name="NoMessages">Aínda non hai mensaxes...</string>
   <string name="ForwardedMessage">Mensaxe reenviada</string>
   <string name="From">De</string>
@@ -114,6 +125,10 @@ e introduce o teu número.</string>
   <string name="UnsupportedAttachment">Adxunto non soportado</string>
   <string name="SetTimer">Establecer a autodestrución</string>
   <string name="ServiceNotifications">Notificacións de servizos</string>
+  <string name="GettingLinkInfo">Obtendo información da ligazón...</string>
+  <string name="OpenInBrowser">Abrir no navegador</string>
+  <string name="CopyUrl">Copiar URL</string>
+  <string name="SendItems">Enviar %1$s</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s puxo o temporizador para a autodestrución en %2$s</string>
   <string name="MessageLifetimeChangedOutgoing">Puxeches o temporizador para a autodestrución en %1$s</string>
@@ -147,17 +162,9 @@ e introduce o teu número.</string>
   <string name="NotificationGroupKickYou">%1$s eliminoute do grupo %2$s</string>
   <string name="NotificationGroupLeftMember">%1$s abandonou o grupo %2$s</string>
   <string name="NotificationContactJoined">%1$s uniuse ao Telegram!</string>
-  <string name="NotificationUnrecognizedDevice">%1$s,
-Detectamos un acceso á túa conta desde un dispositivo novo o %2$s
-
-Dispositivo: %3$s
-Localización: %4$s
-
-Se non foches ti, podes ir a Axustes - Privacidade e seguridade - Cancelar todos os outros accesos.
-
-Grazas,
-O equipo de Telegram</string>
+  <string name="NotificationUnrecognizedDevice">%1$s,\nDetectamos un acceso á túa conta desde un dispositivo novo o %2$s\n\nDispositivo: %3$s\nLocalización: %4$s\n\nSe non fuches ti, vai a Axustes - Privacidade e Seguridade - Pechar todas as outras conexións.\n\nSe cres que alguén iniciou sesión coa túa conta, podes activar a verificación de dous pasos nos axustes de Privacidade e Seguridade.\n\nGrazas,\nO equipo de Telegram</string>
   <string name="NotificationContactNewPhoto">%1$s actualizou a foto de perfil</string>
+  <string name="NotificationInvitedToGroupByLink">%1$s uniuse ao grupo %2$s por medio da ligazón de invitación</string>
   <string name="Reply">Responder</string>
   <string name="ReplyToGroup">Responder a %1$s</string>
   <string name="ReplyToUser">Responder a %1$s</string>
@@ -172,17 +179,30 @@ O equipo de Telegram</string>
   <string name="LastSeen">últ. vez</string>
   <string name="LastSeenDate">últ. vez</string>
   <string name="InviteFriends">Invitar amigos</string>
-  <string name="GlobalSearch">BÚSQUEDA GLOBAL</string>
-  <string name="Lately">últ. conexión recentemente</string>
+  <string name="GlobalSearch">BUSCA GLOBAL</string>
+  <string name="Lately">últ. vez recentemente</string>
   <string name="WithinAWeek">últ. vez hai uns días</string>
   <string name="WithinAMonth">últ. vez hai unhas semanas</string>
-  <string name="ALongTimeAgo">conexión hai moito tempo</string>
+  <string name="ALongTimeAgo">últ. vez hai moito tempo</string>
   <string name="NewMessageTitle">Nova mensaxe</string>
   <!--group create view-->
   <string name="SendMessageTo">Enviar mensaxe a...</string>
   <string name="EnterGroupNamePlaceholder">Pon o nome do grupo</string>
   <string name="GroupName">Nome do grupo</string>
   <string name="MembersCount">%1$d/%2$d membros</string>
+  <string name="JoinToGroup">Queres unirte ao grupo \'%1$s\'?</string>
+  <string name="JoinToGroupErrorFull">Sentímolo, este grupo alcanzou o límite de usuarios.</string>
+  <string name="JoinToGroupErrorNotExist">Sentímolo, o grupo non existe.</string>
+  <string name="LinkCopied">Ligazón copiada ao portapapeis</string>
+  <string name="InviteToGroupByLink">Invitar ao grupo mediante unha ligazón</string>
+  <string name="InviteLink">Ligazón de invitación</string>
+  <string name="RevokeAlert">Estás seguro de anular esta ligazón? unha vez anulada ninguén mais poderá unirse ao grupo usándoa.</string>
+  <string name="RevokeAlertNewLink">A ligazón de invitación anterior agora está inactiva. Unha nova ligazón foi xerada.</string>
+  <string name="RevokeButton">Anular</string>
+  <string name="RevokeLink">Anular a ligazón</string>
+  <string name="CopyLink">Copiar a ligazón</string>
+  <string name="ShareLink">Compartir a ligazón</string>
+  <string name="LinkInfo">Calquera que teña instalado Telegram poderá unirse ao teu grupo premendo esta ligazón.</string>
   <!--group info view-->
   <string name="SharedMedia">Multimedia compartida</string>
   <string name="SETTINGS">Axustes</string>
@@ -212,18 +232,32 @@ O equipo de Telegram</string>
   <string name="Info">Información</string>
   <string name="Phone">Teléfono</string>
   <!--usernames-->
-  <string name="Username">Alcume</string>
-  <string name="UsernamePlaceholder">O teu alcume</string>
-  <string name="UsernameInUse">Síntoo, este alcume xa está en uso.</string>
-  <string name="UsernameInvalid">Síntoo, este alcume é inválido.</string>
-  <string name="UsernameInvalidShort">Un alcume debe ter polo menos 5 caracteres.</string>
-  <string name="UsernameInvalidLong">O alcume non debe exceder os 32 caracteres.</string>
-  <string name="UsernameInvalidStartNumber">Sentímolo, un alcume non pode comezar cun número.</string>
-  <string name="UsernameHelp">Podes escoller un alcume para o <![CDATA[<b>]]>Plus Messenger<![CDATA[</b>]]>. Se o fas, a xente poderá atoparte por este nome e contactar contigo sen coñecer o teu número de teléfono.<![CDATA[<br><br>]]>Podes usar os caracteres <![CDATA[<b>]]>a–z<![CDATA[</b>]]>, <![CDATA[<b>]]>0–9<![CDATA[</b>]]> e guións baixos. A lonxitude mínima son <![CDATA[<b>]]>5<![CDATA[</b>]]> caracteres.</string>
-  <string name="UsernameChecking">Comprobando alcume...</string>
-  <string name="UsernameAvailable">%1$s está disponible.</string>
+  <string name="Username">Alias</string>
+  <string name="UsernamePlaceholder">O teu alias</string>
+  <string name="UsernameInUse">Sentímolo, este alias xa está en uso.</string>
+  <string name="UsernameInvalid">Sentímolo, este alias é inválido.</string>
+  <string name="UsernameInvalidShort">Un alias debe ter polo menos 5 caracteres.</string>
+  <string name="UsernameInvalidLong">O alias non debe exceder os 32 caracteres.</string>
+  <string name="UsernameInvalidStartNumber">Sentímolo, un alias non pode comezar cun número.</string>
+  <string name="UsernameHelp">Podes escoller un alias para o <![CDATA[<b>]]>Telegram<![CDATA[</b>]]>. Se o fas, a xente poderá atoparte por este nome e contactar contigo sen coñecer o teu número de teléfono.<![CDATA[<br><br>]]>Podes usar os caracteres <![CDATA[<b>]]>a–z<![CDATA[</b>]]>, <![CDATA[<b>]]>0–9<![CDATA[</b>]]> e guións baixos. A lonxitude mínima son <![CDATA[<b>]]>5<![CDATA[</b>]]> caracteres.</string>
+  <string name="UsernameChecking">Comprobando alias...</string>
+  <string name="UsernameAvailable">%1$s está dispoñible.</string>
   <string name="UsernameEmpty">Ningún</string>
   <string name="ErrorOccurred">Produciuse un erro.</string>
+  <!--stickers view-->
+  <string name="Stickers">Stickers</string>
+  <string name="StickersInfo">Os artistas poden engadir os seus propios paquetes de stickers usando o bot @stickers. Os usuarios poden engadir stickers premendo e elixindo \"Engadir stickers\".</string>
+  <string name="AddStickers">Engadir Stickers</string>
+  <string name="AddToStickers">Engadir aos Stickers</string>
+  <string name="AddStickersNotFound">Stickers non encontrados</string>
+  <string name="StickersRemoved">Stickers eliminados</string>
+  <string name="AddStickersInstalled">Engadidos novos stickers</string>
+  <string name="StickersHide">Ocultar</string>
+  <string name="StickersShow">Mostrar</string>
+  <string name="StickersShare">Compartir</string>
+  <string name="StickersCopy">Copiar ligazón</string>
+  <string name="StickersRemove">Quitar</string>
+  <string name="NoStickers">Sen stickers aínda</string>
   <!--settings view-->
   <string name="ResetNotificationsText">Restaurar os axustes de notificacións ás predefinicións</string>
   <string name="TextSize">Tamaño do texto</string>
@@ -232,7 +266,7 @@ O equipo de Telegram</string>
   <string name="Unblock">Desbloquear</string>
   <string name="UnblockText">Mantén premido sobre o usuario para desbloquealo.</string>
   <string name="NoBlocked">Non hai usuarios bloqueados</string>
-  <string name="MessageNotifications">Notificacións das nensaxes</string>
+  <string name="MessageNotifications">Notificacións das mensaxes</string>
   <string name="Alert">Aviso</string>
   <string name="MessagePreview">Vista previa da mensaxe</string>
   <string name="GroupNotifications">Notificacións os grupos</string>
@@ -251,15 +285,16 @@ O equipo de Telegram</string>
   <string name="NoSound">Sen son</string>
   <string name="Default">Predefinicións</string>
   <string name="Support">Asistencia</string>
+  <string name="OnlyIfSilent">Só se está silenciado</string>
   <string name="ChatBackground">Fondo de chat</string>
   <string name="MessagesSettings">Mensaxes</string>
   <string name="SendByEnter">Enviar con INTRO</string>
-  <string name="TerminateAllSessions">Pechas todas as outras conexións</string>
+  <string name="TerminateAllSessions">Pechar todas as outras conexións</string>
   <string name="Events">Actividades</string>
   <string name="ContactJoined">Un contacto uniuse a Telegram</string>
   <string name="Pebble">PEBBLE</string>
   <string name="Language">Idioma</string>
-  <string name="AskAQuestionInfo">Por favor, ten en conta que a asistencia técnica do Telegram proporciónana persoas voluntarias. Tentamos responder o antes posíbel, pero pode demorar un tempo. <![CDATA[<br><br>]]>Bótalle un ollo ás <![CDATA[<a href=\"http://telegram.org/faq#general\">Preguntas Frecuentes do Telegram</a>]]>: aparecen respostas ás dúbidas máis habituais e importantes consellos para a <![CDATA[<a href=\"http://telegram.org/faq#troubleshooting\">resolución de problemas</a>]]>.</string>
+  <string name="AskAQuestionInfo">Por favor, ten en conta que a asistencia técnica do Telegram lévana a cabo persoas voluntarias. Tentamos responder o antes posíbel, pero pode levar un tempo. <![CDATA[<br><br>]]>Por favor, bótalle un ollo ás <![CDATA[<a href=\"https://telegram.org/faq#general\">Preguntas Frecuentes de Telegram</a>]]>: aparecen respostas ás dúbidas máis habituais e importantes consellos para a <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">resolución de problemas</a>]]>.</string>
   <string name="AskButton">Pregunta a un voluntario</string>
   <string name="TelegramFaq">Preguntas frecuentes</string>
   <string name="TelegramFaqUrl">https://telegram.org/faq</string>
@@ -307,14 +342,36 @@ O equipo de Telegram</string>
   <string name="NotificationsOther">Outro</string>
   <string name="NotificationsDisabled">Desactivadas</string>
   <string name="VibrationDisabled">Desactivadas</string>
+  <string name="LedDisabled">Desactivado</string>
+  <string name="RepeatDisabled">Apagado</string>
+  <string name="InChatSound">Sons no chat</string>
+  <string name="SoundDefault">Predeterminado</string>
+  <string name="SmartNotifications">Notificacións intelixentes</string>
+  <string name="SmartNotificationsDisabled">Desactivado</string>
+  <string name="SmartNotificationsInfo">Soar como máximo %1$s en %2$s</string>
+  <string name="SmartNotificationsSoundAtMost">Soar como máximo</string>
+  <string name="SmartNotificationsTimes">veces</string>
+  <string name="SmartNotificationsWithin">en</string>
+  <string name="SmartNotificationsMinutes">minutos</string>
+  <!--sessions view-->
+  <string name="SessionsTitle">Conexións activas</string>
+  <string name="CurrentSession">Conexión actual</string>
+  <string name="NoOtherSessions">Non hai outras conexións activas</string>
+  <string name="NoOtherSessionsInfo">Pode iniciar sesión en Telegram desde outro móbil, tableta ou PC usando o mesmo número de teléfono. Todas as súas conversas estarán sincronizadas ao instante.</string>
+  <string name="OtherSessions">Conexións activas</string>
+  <string name="SessionsInfo">Controla as túas conexións noutros dispositivos.</string>
+  <string name="TerminateSessionInfo">Preme nunha conexións para pechala.</string>
+  <string name="TerminateSessionQuestion">Pechar esta conexión?</string>
+  <string name="UnofficialApp">aplicativo non oficial</string>
   <!--passcode view-->
-  <string name="Passcode">Código</string>
+  <string name="Passcode">Codigo de acceso</string>
   <string name="ChangePasscode">Cambiar código</string>
-  <string name="ChangePasscodeInfo">Cando configuras un código, aparece un cadeado na pantalla de chats. Touca sobre el para bloquear e desbloquear a aplicación.\n\nNota: se esqueces o código, terás que eliminar e reinstalar a aplicación. Perderás todos os chats secretos.</string>
-  <string name="ChangePasscodeAlert">Agora verás un cadeado na pantalla de chats. Púlsao para bloquear o teu Telegram co teu novo código.</string>
+  <string name="ChangePasscodeInfo">Cando configuras un código, aparece un cadeado na pantalla de chats. Preme nel para bloquear e desbloquear a aplicación.\n\nNota: se esqueces o código, terás que eliminar e reinstalar a aplicación. Perderás todos os chats secretos.</string>
+  <string name="ChangePasscodeAlert">Agora verás un cadeado na pantalla de chats. Prémeo para bloquear o teu Telegram co teu novo código.</string>
   <string name="PasscodePIN">PIN</string>
   <string name="PasscodePassword">Contrasinal</string>
   <string name="EnterCurrentPasscode">Pon o teu código de acceso</string>
+  <string name="EnterNewFirstPasscode">Introduce un código de acceso</string>
   <string name="EnterNewPasscode">Pon o teu novo código de acceso</string>
   <string name="EnterYourPasscode">Introduce o código</string>
   <string name="ReEnterYourPasscode">Pon, outra vez, o teu novo código</string>
@@ -335,15 +392,20 @@ O equipo de Telegram</string>
   <string name="Hybrid">Híbrido</string>
   <string name="MetersAway">m de distancia</string>
   <string name="KMetersAway">km de distancia</string>
-  <string name="SendLocation">Enviar a localización</string>
-  <string name="ShareLocation">Compartir a localización</string>
+  <string name="SendLocation">Enviar a túa localización</string>
+  <string name="SendSelectedLocation">Enviar a localización seleccionada</string>
+  <string name="ShareLocation">Localización</string>
+  <string name="AccurateTo">Exacto a %1$s</string>
+  <string name="NearbyPlaces">OU ESCOLLE UN LUGAR</string>
   <!--photo gallery view-->
   <string name="ShowAllMedia">Mostrar todas as fotos</string>
   <string name="SaveToGallery">Gardar na galería</string>
   <string name="Of">%1$d de %2$d</string>
   <string name="Gallery">Galería</string>
   <string name="AllPhotos">Todas as fotos</string>
+  <string name="AllVideo">Todos os vídeos</string>
   <string name="NoPhotos">Non hai fotos</string>
+  <string name="NoVideo">Non hai vídeos</string>
   <string name="PleaseDownload">Descargar primeiro o multimedia</string>
   <string name="NoRecentPhotos">Non hai fotos recentes</string>
   <string name="NoRecentGIFs">Non hai GIF recentes</string>
@@ -362,12 +424,72 @@ O equipo de Telegram</string>
   <string name="Saturation">Saturación</string>
   <string name="Vignette">Viñeta</string>
   <string name="Shadows">Sombras</string>
-  <string name="Grain">Grano</string>
+  <string name="Grain">Gran</string>
   <string name="Sharpen">Nitidez</string>
   <string name="Blur">Desenfoque</string>
+  <string name="BlurOff">Apagado</string>
+  <string name="BlurLinear">Lineal</string>
+  <string name="BlurRadial">Radial</string>
   <string name="AreYouSureDeletePhoto">Queres eliminar esta foto?</string>
   <string name="AreYouSureDeleteVideo">Queres eliminar este vídeo?</string>
   <string name="DiscardChanges">Descartar cambios?</string>
+  <string name="ClearSearch">Queres borrar o historial de busca?</string>
+  <string name="ClearButton">Borrar</string>
+  <string name="PickerPhotos">Fotos</string>
+  <string name="PickerVideo">Vídeos</string>
+  <string name="AddCaption">Engadir comentario</string>
+  <string name="PhotoCaption">Comentario de foto</string>
+  <string name="VideoCaption">Comentario de vídeo</string>
+  <!--password view-->
+  <string name="TwoStepVerification">Verificación de dous pasos</string>
+  <string name="SetAdditionalPassword">Activar contrasinal adicional</string>
+  <string name="SetAdditionalPasswordInfo">Podes activar un contrasinal que serache requirido, ademais do código que che enviamos por SMS, cando inicias sesión nun novo dispositivo.</string>
+  <string name="YourPassword">O teu contrasinal</string>
+  <string name="PleaseEnterCurrentPassword">Introduce o teu contrasinal</string>
+  <string name="PleaseEnterFirstPassword">Introduce un contrasinal</string>
+  <string name="PleaseEnterPassword">Introduce o novo contrasinal</string>
+  <string name="PleaseReEnterPassword">Introduce outra vez o novo contrasinal</string>
+  <string name="RecoveryEmail">E-mail de recuperación</string>
+  <string name="YourEmail">O teu e-mail</string>
+  <string name="YourEmailInfo">Engade un enderezo de correo-e válido. É o único xeito de recuperar un contrasinal esquecido.</string>
+  <string name="YourEmailSkip">Omitir</string>
+  <string name="YourEmailSkipWarning">Atención</string>
+  <string name="YourEmailSkipWarningText">En serio.\n\nSe esqueces o contrasinal perderás o acceso a túa conta de Telegram. Non hai xeito de recuperala.</string>
+  <string name="YourEmailAlmostThere">Case está!</string>
+  <string name="YourEmailAlmostThereText">Revisa o teu correo-e (non esquezas o cartafol de correo lixo) para completar a activación da verificación de dous pasos.</string>
+  <string name="YourPasswordSuccess">Conseguíchelo!</string>
+  <string name="YourPasswordSuccessText">O teu contrasinal para a verificación de dous pasos está activo agora.</string>
+  <string name="ChangePassword">Cambiar contrasinal</string>
+  <string name="TurnPasswordOff">Desactivar contrasinal</string>
+  <string name="SetRecoveryEmail">Establecer correo-e de recuperación</string>
+  <string name="ChangeRecoveryEmail">Cambiar correo-e de recuperación</string>
+  <string name="TurnPasswordOffQuestion">Estás seguro de querer desactivar o teu contrasinal?</string>
+  <string name="PasswordHint">Pista para o contrasinal</string>
+  <string name="PasswordHintText">Crea unha pista para recuperar o contrasinal</string>
+  <string name="PasswordDoNotMatch">Os contrasinais non coinciden</string>
+  <string name="AbortPassword">Cancelar o establecemento da verificación de dous pasos</string>
+  <string name="EmailPasswordConfirmText">Segue estes pasos para completar a verificación de dous pasos:\n\n1. Revisa o teu correo-e (non esquezas o cartafol do correo lixo)\n%1$s\n\n2. Preme na ligazón de validación.</string>
+  <string name="PasswordAsHintError">A pista ten que ser diferente do contrasinal</string>
+  <string name="PasswordEmailInvalid">Correo-e inválido</string>
+  <string name="RestorePasswordNoEmailTitle">Sentímolo</string>
+  <string name="RestorePasswordNoEmailText">Ao non fornecer un correo-e de recuperación cando estableciches o contrasinal, as opcións que tes son lembrar o teu contrasinal ou reiniciar a túa conta.</string>
+  <string name="RestoreEmailSent">Enviamos un código de recuperación á conta de correo-e que nos forneceches:\n\n%1$s</string>
+  <string name="RestoreEmailSentInfo">Revisa o teu correo-e e introduce o código de 6 díxitos que che enviamos.</string>
+  <string name="RestoreEmailTrouble">Tes problemas para acceder a túa conta de correo-e %1$s</string>
+  <string name="RestoreEmailTroubleText">Se non podes restablecer o acceso a túa conta de correo-e, as opcións que tes son lembrar o teu contrasinal ou reiniciar a túa conta.</string>
+  <string name="ResetMyAccount">REINICIAR A MIÑA CONTA</string>
+  <string name="ResetMyAccountText">Perderás todas as túas conversas e mensaxes, e tamén as fotos, vídeos e calquera outro ficheiro compartido se reinicias a túa conta.</string>
+  <string name="ResetMyAccountWarning">Atención</string>
+  <string name="ResetMyAccountWarningText">Esta acción non se pode desfacer.\n\nSe reinicias a túa conta, todas as túas mensaxes e conversas serán eliminadas.</string>
+  <string name="ResetMyAccountWarningReset">Reiniciar</string>
+  <string name="LoginPassword">Contrasinal</string>
+  <string name="LoginPasswordText">Activaches a verificación de dous pasos, polo tanto a túa conta está protexida cun contrasinal adicional.</string>
+  <string name="ForgotPassword">Esqueciches o contrasinal?</string>
+  <string name="PasswordRecovery">Recuperación do contrasinal</string>
+  <string name="PasswordCode">Código</string>
+  <string name="PasswordReset">Contrasinal desactivado</string>
+  <string name="EnabledPasswordText">Activaches a verificación de dous pasos.\nPrecisarás o contrasinal que introduciches aquí para iniciar sesión na túa conta de Telegram.</string>
+  <string name="PendingEmailText">O teu enderezo de correo-e de recuperación %1$s aínda non foi activado, está pendente de confirmación.</string>
   <!--privacy settings-->
   <string name="PrivacySettings">Privacidade e seguridade</string>
   <string name="PrivacyTitle">Privacidade</string>
@@ -388,7 +510,7 @@ O equipo de Telegram</string>
   <string name="LastSeenHelp">Elixe quen pode ver a túa última conexión.</string>
   <string name="LastSeenTitle">Quen pode ver a última conexión?</string>
   <string name="AddExceptions">Engadir excepcións</string>
-  <string name="CustomHelp">Importante: Non verása última conexión das persoas coas que non compartes a túa. No seu lugar verás unha aproximación (recentemente, hai uns días, hai unhas semanas).</string>
+  <string name="CustomHelp">Importante: Non verás a última conexión das persoas coas que non compartes a túa. No seu lugar verás unha aproximación (recentemente, hai uns días, hai unhas semanas).</string>
   <string name="AlwaysShareWith">Compartir con</string>
   <string name="NeverShareWith">Non compartir con</string>
   <string name="CustomShareSettingsHelp">Estes axustes anularán os valores de arriba.</string>
@@ -406,12 +528,23 @@ O equipo de Telegram</string>
   <string name="EditedVideo">Vídeo editado</string>
   <string name="SendingVideo">Enviando o vídeo...</string>
   <string name="CompressVideo">Comprimir vídeo</string>
+  <!--bot-->
+  <string name="Bot">bot</string>
+  <string name="BotShare">Compartir</string>
+  <string name="BotInvite">Engadir a un grupo</string>
+  <string name="BotSettings">Axustes</string>
+  <string name="BotHelp">Axuda</string>
+  <string name="BotStatusRead">ten acceso ás mensaxes</string>
+  <string name="BotStatusCantRead">non ten acceso ás mensaxes</string>
+  <string name="BotInfoTitle">Que pode facer este bot?</string>
+  <string name="BotStart">INICIAR</string>
   <!--button titles-->
   <string name="Next">Seguinte</string>
   <string name="Back">Atrás</string>
   <string name="Done">Feito</string>
   <string name="Open">Abrir</string>
   <string name="Cancel">Cancelar</string>
+  <string name="Close">Pechar</string>
   <string name="Add">Engadir</string>
   <string name="Edit">Editar</string>
   <string name="Send">Enviar</string>
@@ -425,8 +558,10 @@ O equipo de Telegram</string>
   <string name="DeletePhoto">Eliminar a foto</string>
   <string name="Set">Definir</string>
   <string name="OK">Aceptar</string>
-  <string name="Crop">CORTAR</string>
+  <string name="Crop">RECORTAR</string>
   <!--messages-->
+  <string name="ActionInviteYou">Unícheste ao grupo por medio da ligazón de invitación</string>
+  <string name="ActionInviteUser">un1 uniuse ao grupo por medio da ligazón de invitación</string>
   <string name="ActionKickUser">un1 eliminou a un2</string>
   <string name="ActionLeftUser">un1 abandonou o grupo</string>
   <string name="ActionAddUser">un1 engadiu a un2</string>
@@ -444,9 +579,8 @@ O equipo de Telegram</string>
   <string name="ActionKickUserYou">un1 eliminoute</string>
   <string name="ActionAddUserYou">un1 engadiute</string>
   <string name="ActionAddUserSelf">un1 volveu ao grupo</string>
-  <string name="UnsuppotedMedia">Esta mensaxe non é compatíbel coa versión do Telegram que utilizas. 
-Actualiza a aplicación para poderes vela:
-http://telegram.org/update</string>
+  <string name="ActionAddUserSelfYou">Volviches ao grupo</string>
+  <string name="UnsuppotedMedia">Esta mensaxe non é compatíbel coa versión de Telegram que utilizas. Actualiza o aplicativo para poderes vela: https://telegram.org/update</string>
   <string name="AttachPhoto">Foto</string>
   <string name="AttachVideo">Vídeo</string>
   <string name="AttachLocation">Localización</string>
@@ -461,24 +595,24 @@ http://telegram.org/update</string>
   <string name="InvalidPhoneNumber">O número de teléfono non é válido.</string>
   <string name="CodeExpired">Caducou o código, conéctate de novo</string>
   <string name="FloodWait">Demasiados intentos, proba máis tarde</string>
+  <string name="FloodWaitTime">Demasiados intentos, téntao de novo en %1$s</string>
   <string name="InvalidCode">Código non válido</string>
   <string name="InvalidFirstName">Nome non válido</string>
   <string name="InvalidLastName">Apelidos non válidos</string>
   <string name="Loading">Cargando...</string>
   <string name="NoPlayerInstalled">Non tes reprodutor de vídeo, instala un para continuares</string>
-  <string name="NoMailInstalled">Por favor, envía un correo electrónico a sms@telegram.org e explica o teu problema.</string>
+  <string name="NoMailInstalled">Por favor, envía un correo electrónico a sms@stel.com e cóntanos o teu problema.</string>
   <string name="NoHandleAppInstalled">Non tes aplicacións instaladas que poidan manexar o tipo de ficheiro «%1$s», intala unha para continuar</string>
   <string name="InviteUser">Este usuario aínda non ten Telegram, queres convidalo?</string>
   <string name="AreYouSure">Estás seguro?</string>
-  <string name="AddToTheGroup">Queres engadir a %1$s ao grupo?\n\nNúmero das últimas mensaxes a reenviar:
-
-
-
-</string>
+  <string name="AddToTheGroupTitle">Queres engadir a %1$s ao grupo %2$s?</string>
+  <string name="AddToTheGroupForwardCount">Número das últimas mensaxes a reenviar:</string>
+  <string name="AddToTheGroup">Engadir a %1$s ao grupo?</string>
+  <string name="UserAlreadyInGroup">Este usuario xa é membro deste grupo.</string>
   <string name="ForwardMessagesTo">Queres reenviar mensaxes a %1$s?</string>
   <string name="SendMessagesTo">Desexas enviar as mensaxes a %1$s?</string>
   <string name="AreYouSureLogout">Estás seguro de saír da sesión?\n\nTen en conta que podes usar o Telegram en todos os dispositivos á vez.\n\nLembra, ao saír da sesión eliminas as conversas secretas.</string>
-  <string name="AreYouSureSessions">Estás seguro de cancelar todos os outros accesos?</string>
+  <string name="AreYouSureSessions">Estás seguro de pechar todos as outras conexións?</string>
   <string name="AreYouSureDeleteAndExit">Estás seguro de eliminar e abandonar o grupo?</string>
   <string name="AreYouSureDeleteThisChat">Estás seguro de eliminar esta conversa?</string>
   <string name="AreYouSureShareMyContactInfo">Estás seguro de compartir a túa información de contacto?</string>
@@ -492,6 +626,8 @@ http://telegram.org/update</string>
   <string name="SendMessagesToGroup">Desexas enviar as mensaxes a %1$s?</string>
   <string name="ForwardMessagesToGroup">Desexas reenviar as mensaxes a %1$s?</string>
   <string name="FeatureUnavailable">Sentímolo, esta funcionalidade non está dispoñíbel no teu país.</string>
+  <string name="NoUsernameFound">Non hai unha conta en Telegram con este alcume.</string>
+  <string name="BotCantJoinGroups">Este bot non pode unirse a grupos.</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Rápido</string>
@@ -545,7 +681,7 @@ http://telegram.org/update</string>
   <string name="items_few">%1$d ítems</string>
   <string name="items_many">%1$d ítems</string>
   <string name="items_other">%1$d ítems</string>
-  <string name="FromChats_zero">dende ningún chat</string>
+  <string name="FromChats_zero">desde ningún chat</string>
   <string name="FromChats_one">desde %1$d chat</string>
   <string name="FromChats_two">desde %1$d chats</string>
   <string name="FromChats_few">desde %1$d chats</string>
@@ -599,6 +735,85 @@ http://telegram.org/update</string>
   <string name="Users_few">%1$d usuarios</string>
   <string name="Users_many">%1$d usuarios</string>
   <string name="Users_other">%1$d usuarios</string>
+  <string name="Times_zero">%1$d veces</string>
+  <string name="Times_one">%1$d veces</string>
+  <string name="Times_two">%1$d veces</string>
+  <string name="Times_few">%1$d veces</string>
+  <string name="Times_many">%1$d veces</string>
+  <string name="Times_other">%1$d veces</string>
+  <string name="Meters_zero">%1$d metros</string>
+  <string name="Meters_one">%1$d metro</string>
+  <string name="Meters_two">%1$d metros</string>
+  <string name="Meters_few">%1$d metros</string>
+  <string name="Meters_many">%1$d metros</string>
+  <string name="Meters_other">%1$d metros</string>
+  <string name="Stickers_zero">%1$d stickers</string>
+  <string name="Stickers_one">%1$d sticker</string>
+  <string name="Stickers_two">%1$d stickers</string>
+  <string name="Stickers_few">%1$d stickers</string>
+  <string name="Stickers_many">%1$d stickers</string>
+  <string name="Stickers_other">%1$d stickers</string>
+  <string name="Photos_zero">%1$d fotos</string>
+  <string name="Photos_one">%1$d foto</string>
+  <string name="Photos_two">%1$d fotos</string>
+  <string name="Photos_few">%1$d fotos</string>
+  <string name="Photos_many">%1$d fotos</string>
+  <string name="Photos_other">%1$d fotos</string>
+  <!--forwarded messages-->
+  <string name="ForwardedMessage_zero">%1$d mensaxes reenviadas</string>
+  <string name="ForwardedMessage_one">Mensaxe adxunta</string>
+  <string name="ForwardedMessage_two">%1$d mensaxes adxuntas</string>
+  <string name="ForwardedMessage_few">%1$d mensaxes adxuntas</string>
+  <string name="ForwardedMessage_many">%1$d mensaxes adxuntas</string>
+  <string name="ForwardedMessage_other">%1$d mensaxes adxuntas</string>
+  <string name="ForwardedFile_zero">%1$d ficheiros adxuntos</string>
+  <string name="ForwardedFile_one">Ficheiro adxunto</string>
+  <string name="ForwardedFile_two">%1$d ficheiros adxuntos</string>
+  <string name="ForwardedFile_few">%1$d ficheiros adxuntos</string>
+  <string name="ForwardedFile_many">%1$d ficheiros adxuntos</string>
+  <string name="ForwardedFile_other">%1$d ficheiros adxuntos</string>
+  <string name="ForwardedPhoto_zero">%1$d fotos adxuntas</string>
+  <string name="ForwardedPhoto_one">Foto adxunta</string>
+  <string name="ForwardedPhoto_two">%1$d fotos adxuntas</string>
+  <string name="ForwardedPhoto_few">%1$d fotos adxuntas</string>
+  <string name="ForwardedPhoto_many">%1$d fotos adxuntas</string>
+  <string name="ForwardedPhoto_other">%1$d fotos adxuntas</string>
+  <string name="ForwardedVideo_zero">%1$d fotos adxuntas</string>
+  <string name="ForwardedVideo_one">Vídeo adxunto</string>
+  <string name="ForwardedVideo_two">%1$d vídeos adxuntos</string>
+  <string name="ForwardedVideo_few">%1$d vídeos adxuntos</string>
+  <string name="ForwardedVideo_many">%1$d vídeos adxuntos</string>
+  <string name="ForwardedVideo_other">%1$d vídeos adxuntos</string>
+  <string name="ForwardedAudio_zero">%1$d audios adxuntos</string>
+  <string name="ForwardedAudio_one">Audio adxunto</string>
+  <string name="ForwardedAudio_two">%1$d audios adxuntos</string>
+  <string name="ForwardedAudio_few">%1$d audios adxuntos</string>
+  <string name="ForwardedAudio_many">%1$d audios adxuntos</string>
+  <string name="ForwardedAudio_other">%1$d audios adxuntos</string>
+  <string name="ForwardedLocation_zero">%1$d localizacións adxuntas</string>
+  <string name="ForwardedLocation_one">Localización adxunta</string>
+  <string name="ForwardedLocation_two">%1$d localizacións adxuntas</string>
+  <string name="ForwardedLocation_few">%1$d localizacións adxuntas</string>
+  <string name="ForwardedLocation_many">%1$d localizacións adxuntas</string>
+  <string name="ForwardedLocation_other">%1$d localizacións adxuntas</string>
+  <string name="ForwardedContact_zero">%1$d localizacións adxuntas</string>
+  <string name="ForwardedContact_one">Contacto adxunto</string>
+  <string name="ForwardedContact_two">%1$d contactos adxuntos</string>
+  <string name="ForwardedContact_few">%1$d contactos adxuntos</string>
+  <string name="ForwardedContact_many">%1$d contactos adxuntos</string>
+  <string name="ForwardedContact_other">%1$d contactos adxuntos</string>
+  <string name="ForwardedSticker_zero">%1$d stickers adxuntos</string>
+  <string name="ForwardedSticker_one">Sticker adxunto</string>
+  <string name="ForwardedSticker_two">%1$d stickers adxuntos</string>
+  <string name="ForwardedSticker_few">%1$d stickers adxuntos</string>
+  <string name="ForwardedSticker_many">%1$d stickers adxuntos</string>
+  <string name="ForwardedSticker_other">%1$d stickers adxuntos</string>
+  <string name="AndOther_zero">e %1$d outros</string>
+  <string name="AndOther_one">e %1$d outro</string>
+  <string name="AndOther_two">e outros %1$d</string>
+  <string name="AndOther_few">e outros %1$d</string>
+  <string name="AndOther_many">e outros %1$d</string>
+  <string name="AndOther_other">e outros %1$d</string>
   <!--date formatters-->
   <string name="formatterMonthYear">MMMM de yyyy</string>
   <string name="formatterMonth">dd \'de\' MMM</string>
@@ -609,7 +824,7 @@ http://telegram.org/update</string>
   <string name="formatterWeek">EEE</string>
   <string name="formatterDay24H">HH:mm</string>
   <string name="formatterDay12H">h:mm a</string>
-  <string name="formatDateAtTime">%1$s en %2$s</string>
+  <string name="formatDateAtTime">%1$s ás %2$s</string>
   <!--Telegram+ Galician-->
     <string name="TelegramForAndroid">Plus Messenger para Android</string>
     <string name="Theming">Tematización</string>
diff --git a/TMessagesProj/src/main/res/values-hi/strings.xml b/TMessagesProj/src/main/res/values-hi/strings.xml
index 5ff3738a8..3d7bacaeb 100644
--- a/TMessagesProj/src/main/res/values-hi/strings.xml
+++ b/TMessagesProj/src/main/res/values-hi/strings.xml
@@ -515,7 +515,7 @@
   <string name="formatDateAtTime">%1$s पर %2$s</string>
   <!--update text-->
   <string name="updateText">Plus Messenger for Android has been updated. New in Version 3.0:\n\n\n\n- Dedicated tabs for each one of your custom sticker sets in the sticker panel. Add custom stickers like https://telegram.me/addstickers/Animals\n- New bot API, free for everyone. If you\'re an engineer, create your own bots for games, services or integrations. Learn more at https://telegram.org/blog/bot-revolution\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-  <string name="updateBuild">576</string>
+  <string name="updateBuild">583</string>
   <!--Telegram+-->
   <string name="updatePlusText"></string>
   <string name="TelegramForAndroid">Android  के लिए प्लस मैसेंजर</string>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 163798d0f..34340b36d 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">Hai creato una lista broadcast</string>
     <string name="AddRecipient">Aggiungi destinatario</string>
     <string name="KickFromBroadcast">Rimuovi dalla lista broadcast</string>
+    <!--audio view-->
+    <string name="NoAudio">Aggiungi file nella libreria musicale del tuo dispositivo per vederli qui.</string>
+    <string name="AttachMusic">Musica</string>
+    <string name="AudioUnknownArtist">Artista sconosciuto</string>
+    <string name="AudioUnknownTitle">Titolo sconosciuto</string>
     <!--documents view-->
     <string name="SelectFile">Seleziona file</string>
     <string name="FreeOfTotal">Liberi %1$s di %2$s</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">Elimina questa chat</string>
     <string name="SlideToCancel">ANNULLA</string>
     <string name="SaveToDownloads">Salva nei download</string>
+    <string name="SaveToMusic">Salva nella musica</string>
     <string name="ShareFile">Condividi</string>
     <string name="ApplyLocalizationFile">Applica traduzione</string>
     <string name="UnsupportedAttachment">Allegato non supportato</string>
@@ -158,7 +164,7 @@
     <string name="NotificationEditedGroupName">%1$s ha modificato il nome del gruppo %2$s</string>
     <string name="NotificationEditedGroupPhoto">%1$s ha modificato la foto del gruppo %2$s</string>
     <string name="NotificationGroupAddMember">%1$s ha invitato %3$s nel gruppo %2$s</string>
-    <string name="NotificationGroupAddSelf">%1$s è rientrato nel gruppo %2$s</string>
+  <string name="NotificationGroupAddSelf">%1$s è tornato nel gruppo %2$s</string>
     <string name="NotificationGroupKickMember">%1$s ha rimosso %3$s dal gruppo %2$s</string>
     <string name="NotificationGroupKickYou">%1$s ti ha rimosso dal gruppo %2$s</string>
     <string name="NotificationGroupLeftMember">%1$s ha lasciato il gruppo %2$s</string>
@@ -284,7 +290,7 @@
     <string name="BlockedUsers">Utenti bloccati</string>
     <string name="LogOut">Disconnetti</string>
     <string name="NoSound">Nessun suono</string>
-    <string name="Default">Predefinita</string>
+    <string name="Default">Predefinite</string>
     <string name="Support">Supporto</string>
     <string name="OnlyIfSilent">Solo se silenzioso</string>
     <string name="ChatBackground">Sfondo chat</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">No</string>
     <string name="InChatSound">Suoni in-chat</string>
     <string name="SoundDefault">Predefinito</string>
+    <string name="VibrationDefault">Predefinita</string>
     <string name="SmartNotifications">Notifiche intelligenti</string>
     <string name="SmartNotificationsDisabled">Disabilitate</string>
     <string name="SmartNotificationsInfo">Suona al massimo %1$s in %2$s</string>
@@ -452,12 +459,12 @@
     <string name="PleaseReEnterPassword">Reinserisci la tua password</string>
     <string name="RecoveryEmail">E-mail di recupero</string>
     <string name="YourEmail">La tua e-mail</string>
-    <string name="YourEmailInfo">Per favore inserisci un\'e-mail valida. È l\'unico modo di recuperare una password dimenticata.</string>
+    <string name="YourEmailInfo">Inserisci un\'e-mail valida. È l\'unico modo di recuperare una password dimenticata.</string>
     <string name="YourEmailSkip">Salta</string>
     <string name="YourEmailSkipWarning">Attenzione</string>
     <string name="YourEmailSkipWarningText">No, seriamente.\n\nSe dimentichi la tua password, perderai l\'accesso al tuo account Telegram. Non ci sarà modo di ripristinarlo.</string>
     <string name="YourEmailAlmostThere">Ci siamo quasi!</string>
-    <string name="YourEmailAlmostThereText">Per favore controlla la tua e-mail (anche lo spam) per completare la configurazione della verifica in due passaggi.</string>
+    <string name="YourEmailAlmostThereText">Controlla la tua e-mail (anche lo spam) per completare la configurazione della verifica in due passaggi.</string>
     <string name="YourPasswordSuccess">Fatto!</string>
     <string name="YourPasswordSuccessText">La password per la verifica in due passaggi è ora attiva.</string>
     <string name="ChangePassword">Cambia password</string>
@@ -466,16 +473,16 @@
     <string name="ChangeRecoveryEmail">Cambia e-mail di recupero</string>
     <string name="TurnPasswordOffQuestion">Sei sicuro di voler disabilitare la tua password?</string>
     <string name="PasswordHint">Suggerimento password</string>
-    <string name="PasswordHintText">Per favore crea un suggerimento per la tua password</string>
+    <string name="PasswordHintText">Crea un suggerimento per la tua password</string>
     <string name="PasswordDoNotMatch">Le password non corrispondono</string>
     <string name="AbortPassword">Annulla configurazione della verifica in due passaggi</string>
-    <string name="EmailPasswordConfirmText">Per favore segui questi step per completare la configurazione della verifica in due passaggi:\n\n1. Controlla la tua e-mail (anche lo spam)\n%1$s\n\n2. Clicca sul link di conferma.</string>
+    <string name="EmailPasswordConfirmText">Segui questi step per completare la configurazione della verifica in due passaggi:\n\n1. Controlla la tua e-mail (anche lo spam)\n%1$s\n\n2. Clicca sul link di conferma.</string>
     <string name="PasswordAsHintError">Il suggerimento deve essere diverso dalla password</string>
     <string name="PasswordEmailInvalid">E-mail non valida</string>
     <string name="RestorePasswordNoEmailTitle">Scusa</string>
     <string name="RestorePasswordNoEmailText">Siccome non hai fornito un\'email di recupero quando hai impostato la  tua password, non ti resta che ricordarti la password o ripristinare il tuo account.</string>
     <string name="RestoreEmailSent">Abbiamo inviato un codice di ripristino alla e-mail che ci hai fornito:\n\n%1$s</string>
-    <string name="RestoreEmailSentInfo">Per favore controlla la tua e-mail e inserisci il codice a 6 cifre che ti abbiamo inviato.</string>
+    <string name="RestoreEmailSentInfo">Controlla la tua e-mail e inserisci il codice a 6 cifre che ti abbiamo inviato.</string>
     <string name="RestoreEmailTrouble">Hai problemi ad accedere alla tua e-mail %1$s?</string>
     <string name="RestoreEmailTroubleText">Se non puoi ripristinare l\'accesso alla tua e-mail, non ti resta che ricordarti la password o ripristinare il tuo account.</string>
     <string name="ResetMyAccount">RIPRISTINA IL MIO ACCOUNT</string>
@@ -579,8 +586,8 @@
     <string name="ActionYouCreateGroup">Hai creato il gruppo</string>
     <string name="ActionKickUserYou">un1 ti ha rimosso</string>
     <string name="ActionAddUserYou">un1 ti ha aggiunto</string>
-    <string name="ActionAddUserSelf">un1 è rientrato nel gruppo</string>
-    <string name="ActionAddUserSelfYou">Sei rientrato nel gruppo</string>
+  <string name="ActionAddUserSelf">un1 è tornato nel gruppo</string>
+  <string name="ActionAddUserSelfYou">Sei tornato nel gruppo</string>
     <string name="UnsuppotedMedia">Questo messaggio non è supportato sulla tua versione di Telegram. Aggiorna l\'applicazione per visualizzarlo: https://telegram.org/update</string>
     <string name="AttachPhoto">Foto</string>
     <string name="AttachVideo">Video</string>
@@ -641,7 +648,7 @@
     <string name="Page2Message"><![CDATA[<b>Plus Messenger</b>]]> consegna i messaggi più<![CDATA[<br/>]]>velocemente di qualsiasi altra app.</string>
     <string name="Page3Message"><![CDATA[<b>Plus Messenger</b>]]> sarà sempre gratuito.<![CDATA[<br/>]]>Nessuna pubblicità. Nessun abbonamento.</string>
     <string name="Page4Message"><![CDATA[<b>Plus Messenger</b>]]> protegge i tuoi messaggi<![CDATA[<br/>]]>dagli attacchi degli hacker.</string>
-    <string name="Page5Message"><![CDATA[<b>Plus Messenger</b>]]> non ha limiti sulle dimensioni<![CDATA[<br/>]]>dei tuoi file multimediali e delle chat.</string>
+    <string name="Page5Message"><![CDATA[<b>Plus Messenger</b>]]> non ha limiti di dimensione<![CDATA[<br/>]]>per le tue chat e i file multimediali.</string>
     <string name="Page6Message"><![CDATA[<b>Plus Messenger</b>]]> ti consente di accedere<![CDATA[<br/>]]>ai messaggi da più dispositivi.</string>
     <string name="Page7Message"><![CDATA[<b>Plus Messenger</b>]]> cifra in maniera sicura i messaggi<![CDATA[<br/>]]>e può far sì che si autodistruggano.</string>
     <string name="StartMessaging">Inizia a inviare messaggi</string>
@@ -682,12 +689,12 @@
     <string name="items_few">%1$d oggetti</string>
     <string name="items_many">%1$d oggetti</string>
     <string name="items_other">%1$d oggetti</string>
-    <string name="FromChats_zero">in nessuna chat</string>
-    <string name="FromChats_one">in %1$d chat</string>
-    <string name="FromChats_two">in %1$d chat</string>
-    <string name="FromChats_few">in %1$d chat</string>
-    <string name="FromChats_many">in %1$d chat</string>
-    <string name="FromChats_other">in %1$d chat</string>
+    <string name="FromChats_zero">da nessuna chat</string>
+    <string name="FromChats_one">da %1$d chat</string>
+    <string name="FromChats_two">da %1$d chat</string>
+    <string name="FromChats_few">da %1$d chat</string>
+    <string name="FromChats_many">da %1$d chat</string>
+    <string name="FromChats_other">da %1$d chat</string>
     <string name="Seconds_zero">%1$d secondi</string>
     <string name="Seconds_one">%1$d secondo</string>
     <string name="Seconds_two">%1$d secondi</string>
@@ -827,8 +834,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s alle %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger per Android è stato aggiornato. Nuovo nella versione 3.0:\n\n- Pagine dedicate per ognuno dei tuoi pacchetti sticker nel pannello sticker. Aggiunti sticker personalizzati come https://telegram.me/addstickers/Animals\n- Nuova API per i bot, gratis per tutti. Se sei un ingegnere, crea i tuoi bot per giochi, servizi o integrazioni. Scopri di più su https://telegram.org/blog/bot-revolution\n- Scegli, scarica ed applica temi per Plus Messenger. Nuovi temi ogni giorno\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">Plus Messenger per Android si è aggiornato. Nuovo nella versione 3.1:\n\n- Cerca messaggi all\'interno di una specifica chat.\n- Menu degli allegati completamente ridisegnato. Invia contatti e audio direttamente dal menu degli allegati.\n- Riproduzione in-app migliorata (YouTube, Vimeo, SoundCloud etc.), nuovo player per i file audio.\n\nMaggiori informazioni su questo aggiornamento:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+--><!--
   <string name="updatePlusText">\n\nNovità nella v3.0.1.5:\n\n- Opzione nelle Impostazioni per utilizzare il font di sistema\n- Opzione per la ricerca all\'interno di chat/gruppi\n- Aggiunta MOD per cambiare il colore dell\'intestazione, del titolo dell\'intestazione ed il colore delle icone dell\'intestazione (Impostazioni/Schermata dei temi)\n- MOD per cambiare il colore dell\'icona di gruppo nella schermata principale\n- MOD per cambiare la dimensione dell\'avatar nel menù di navigazione\n- Bug fixes</string>-->
     <string name="TelegramForAndroid">Plus Messenger per Android</string>
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index 3f1ccf013..1d288d64a 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">단체 메시지 리스트를 만들었습니다</string>
     <string name="AddRecipient">받는 사람 추가</string>
     <string name="KickFromBroadcast">리스트에서 제외</string>
+    <!--audio view-->
+    <string name="NoAudio">음악 라이브러리에 파일을 추가하셔야지만 볼 수 있습니다.</string>
+    <string name="AttachMusic">음악</string>
+    <string name="AudioUnknownArtist">알수 없는 아티스트</string>
+    <string name="AudioUnknownTitle">알 수 없는 제목</string>
     <!--documents view-->
     <string name="SelectFile">파일 선택</string>
     <string name="FreeOfTotal">%2$s 중 %1$s 남음</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">이 채팅방 삭제</string>
     <string name="SlideToCancel">밀어서 취소</string>
     <string name="SaveToDownloads">다운로드 폴더에 저장</string>
+    <string name="SaveToMusic">음악으로 저장</string>
     <string name="ShareFile">공유</string>
     <string name="ApplyLocalizationFile">언어 파일 적용</string>
     <string name="UnsupportedAttachment">지원하지 않는 형식입니다</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">끔</string>
     <string name="InChatSound">채팅중 소리 설정</string>
     <string name="SoundDefault">기본값</string>
+    <string name="VibrationDefault">기본값</string>
     <string name="SmartNotifications">스마트 알림</string>
     <string name="SmartNotificationsDisabled">비활성화됨</string>
     <string name="SmartNotificationsInfo">최대 %1$s번, %2$s번 이내 알림</string>
@@ -827,6 +834,6 @@
     <string name="formatterDay12H">a h:mm</string>
     <string name="formatDateAtTime">%1$s %2$s</string>
     <!--update text-->
-    <string name="updateText">텔레그램 안드로이드 버전이 업데이트 되었습니다. 새로운 버전은 3.0 입니다:\n\n- 스티커 패널에 커스텀 스티커별 탭 지원. https://telegram.me/addstickers/Animals 와 같은 커스텀 스티커 추가 기능\n- 신규 봇 API를 무료로 공개합니다. 개발자라면 누구나 게임, 서비스나 통합 봇등 개발이 가능합니다. https://telegram.org/blog/bot-revolution 에서 자세한 사항을 알아보세요.</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">텔레그램 안드로이드 버전이 업데이트 되었습니다. 새로운 버전은 3.1 입니다:\n\n- 특정 대화창에서 검색. \n- 첨부 메뉴 개선. 해당 메뉴에서 바로 연락처, 오디오를 전송 가능. \n- 인앱 미디어 재생 기능 향상 (YouTube, Vimeo, SoundCloud etc). 대용량 오디오 파일 별도 플레이어 기능. \n\nhttps://telegram.org/blog/search-and-media에서 자세한 사항을 알아보세요.</string>
+    <string name="updateBuild">583</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 0d317b5a0..8c3bd6973 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">Je hebt een verzendlijst gemaakt</string>
     <string name="AddRecipient">Ontvanger toevoegen</string>
     <string name="KickFromBroadcast">Verwijder van verzendlijst</string>
+    <!--audio view-->
+    <string name="NoAudio">Voeg bestanden toe aan de muziekbibliotheek op je apparaat om ze hier te zien.</string>
+    <string name="AttachMusic">Muziek</string>
+    <string name="AudioUnknownArtist">Onbekende artiest</string>
+    <string name="AudioUnknownTitle">Onbekende titel</string>
     <!--documents view-->
     <string name="SelectFile">Kies een bestand</string>
     <string name="FreeOfTotal">Vrij: %1$s van %2$s</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">Chat verwijderen</string>
     <string name="SlideToCancel">SLEEP OM TE ANNULEREN</string>
     <string name="SaveToDownloads">Opslaan in Downloads</string>
+    <string name="SaveToMusic">Opslaan in muziek</string>
     <string name="ShareFile">Delen</string>
     <string name="ApplyLocalizationFile">Vertaling toepassen</string>
     <string name="UnsupportedAttachment">Bestandstype niet ondersteund</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">Uit</string>
     <string name="InChatSound">Chatgeluiden</string>
     <string name="SoundDefault">Standaard</string>
+    <string name="VibrationDefault">Standaard</string>
     <string name="SmartNotifications">Slimme meldingen</string>
     <string name="SmartNotificationsDisabled">Uitgeschakeld</string>
     <string name="SmartNotificationsInfo">Geluid maximaal %1$s per %2$s</string>
@@ -827,8 +834,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s om %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger voor Android is geüpdatet. Nieuw in versie 3.0:\n\n- Tabbladen voor al je eigen stickerbundels in het stickerpaneel. Voeg stickerbundels zoals: https://telegram.me/addstickers/Animals toe.\n- Nieuwe bot-API, gratis voor iedereen. Handig met programmeren? Maak dan je eigen bots voor spelletjes, diensten of integraties. Meer weten? kijk op: https://telegram.org/blog/bot-revolution</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">Plus Messenger voor Android is bijgewerkt. Nieuw in versie 3.1:\n\n- Zoek naar berichten in een specifieke chat.\n- Volledig opnieuw ontworpen bijlagemenu. Verstuur contacten en audiobestanden rechtstreeks vanuit het bijlagemenu.\n- Afspelen van media in de app verbeterd (YouTube, Vimeo, SoundCloud, etc.), nieuwe speler voor grote audiobestanden.\n\nMeer weten? Kijk op:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+-->
   <string name="updatePlusText"></string>
     <string name="TelegramForAndroid">Plus Messenger voor Android</string>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 7b9c66ffb..e5be1c228 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">Você criou uma lista de transmissão</string>
     <string name="AddRecipient">Adicionar destinatário</string>
     <string name="KickFromBroadcast">Remover da lista de transmissão</string>
+    <!--audio view-->
+    <string name="NoAudio">Por favor, adicione arquivos à biblioteca de música de seu dispositivo para vê-los aqui.</string>
+    <string name="AttachMusic">Música</string>
+    <string name="AudioUnknownArtist">Artista desconhecido</string>
+    <string name="AudioUnknownTitle">Título desconhecido</string>
     <!--documents view-->
     <string name="SelectFile">Selecione um Arquivo</string>
     <string name="FreeOfTotal">Disponível %1$s de %2$s</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">Apagar este chat</string>
     <string name="SlideToCancel">DESLIZE PARA CANCELAR</string>
     <string name="SaveToDownloads">Salvar em downloads</string>
+    <string name="SaveToMusic">Salvar em músicas</string>
     <string name="ShareFile">Compartilhar</string>
     <string name="ApplyLocalizationFile">Aplicar arquivo de localização</string>
     <string name="UnsupportedAttachment">Anexo não suportado</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">Desativado</string>
     <string name="InChatSound">Sons no Chat</string>
     <string name="SoundDefault">Padrão</string>
+    <string name="VibrationDefault">Padrão</string>
     <string name="SmartNotifications">Notificações Inteligentes</string>
     <string name="SmartNotificationsDisabled">Desativado</string>
     <string name="SmartNotificationsInfo">Tocar no máximo %1$s a cada %2$s</string>
@@ -827,11 +834,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s às %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger para Android acaba de ser atualizado. Novo na versão 3.0:\n\n- Abas dedicadas para cada um dos pacotes customizados de stickers no painel de stickers. Adicione stickers customizados como https://telegram.me/addstickers/Animals\n- Nova API de bots, gratuita para todos. Se você for um engenheiro, crie seus próprios bots como @quiz_bot ou @hot_or_bot usando o @botfather. Leia mais em https://telegram.org/blog/bot-revolution\n- Confira, baixe e aplique temas para o app Plus Messenger. Novos temas todos os dias:\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-    <string name="updateBuild">576</string>
-    <!--Telegram+--><!--
-  <string name="updatePlusText">
-\n\nNovo em 3.0.1.3:\n\n- Opção em Configurações para usar fonte do dispositivo\n- Opção para pesquisar dentro da conversa/group\n- Adicionado MOD para mudar cor do cabeçalho, cor do título do cabeçalho e ícones do cabeçalho cor em Tela de Configurações/Personalizações\n- MOD para mudar a cor do ícone de grupo na tela principal\n- MOD para mudar o tamanho do avatar no menu de navegação\n- Correções de erros</string>-->
+    <string name="updateText">Plus Messenger para Android foi atualizado. Novo na versão 3.1:\n\n- Busca por mensagens dentro de um chat específico.\n-Menu de anexo totalmente redesenhado. Envie contatos e arquivos de áudio diretamente do menu de anexo.\n- Reprodução melhorada de mídia dentro do aplicativo (YouTube, Vimeo, SoundCloud, etc.), novo player para grandes arquivos de áudio.\n\nMais sobre a atualização:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
+    <!--Telegram+-->
+  <string name="updatePlusText">\n\nNovidades na versão 3.1.1.3:\n\n- Novo MOD para mudar a cor, tamanho e arredondamento do avatar nas configurações\n- Novo MOD para mudar a cor do nome de contatos compartilhados na tela de conversas\n- Correção de bugs</string>
     <string name="TelegramForAndroid">Plus Messenger para Android</string>
     <string name="Theming">Personalização</string>
     <string name="colorHexInvalid">Código de cor hexadecimal inválido!</string>
@@ -958,4 +964,5 @@
   <string name="UseDeviceFont">Usar Fonte do Dispositivo</string>
   <string name="AppWillRestart">O Plus Messenger irá reiniciar</string>
   <string name="GroupIconColor">Cor do Ícone de Grupo</string>
+  <string name="SharedContactNameColor">Cor do Nome do Contato Compartilhado</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index bfcd22545..b91f4e553 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -65,6 +65,11 @@
     <string name="YouCreatedBroadcastList">Você criou uma lista de transmissão</string>
     <string name="AddRecipient">Adicionar destinatário</string>
     <string name="KickFromBroadcast">Remover da lista de transmissão</string>
+    <!--audio view-->
+    <string name="NoAudio">Por favor, adicione arquivos à biblioteca de música de seu dispositivo para vê-los aqui.</string>
+    <string name="AttachMusic">Música</string>
+    <string name="AudioUnknownArtist">Artista desconhecido</string>
+    <string name="AudioUnknownTitle">Título desconhecido</string>
     <!--documents view-->
     <string name="SelectFile">Selecione um Arquivo</string>
     <string name="FreeOfTotal">Disponível %1$s de %2$s</string>
@@ -121,6 +126,7 @@
     <string name="DeleteThisChat">Apagar este chat</string>
     <string name="SlideToCancel">DESLIZE PARA CANCELAR</string>
     <string name="SaveToDownloads">Salvar em downloads</string>
+    <string name="SaveToMusic">Salvar em músicas</string>
     <string name="ShareFile">Compartilhar</string>
     <string name="ApplyLocalizationFile">Aplicar arquivo de localização</string>
     <string name="UnsupportedAttachment">Anexo não suportado</string>
@@ -347,6 +353,7 @@
     <string name="RepeatDisabled">Desativado</string>
     <string name="InChatSound">Sons no Chat</string>
     <string name="SoundDefault">Padrão</string>
+    <string name="VibrationDefault">Padrão</string>
     <string name="SmartNotifications">Notificações Inteligentes</string>
     <string name="SmartNotificationsDisabled">Desativado</string>
     <string name="SmartNotificationsInfo">Tocar no máximo %1$s a cada %2$s</string>
@@ -827,8 +834,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s às %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger para Android acaba de ser atualizado. Novo na versão 3.0:\n\n- Abas dedicadas para cada um dos pacotes customizados de stickers no painel de stickers. Adicione stickers customizados como https://telegram.me/addstickers/Animals\n- Nova API de bots, gratuita para todos. Se você for um engenheiro, crie seus próprios bots como @quiz_bot ou @hot_or_bot usando o @botfather. Leia mais em https://telegram.org/blog/bot-revolution</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">Plus Messenger para Android foi atualizado. Novo na versão 3.1:\n\n- Busca por mensagens dentro de um chat específico.\n-Menu de anexo totalmente redesenhado. Envie contatos e arquivos de áudio diretamente do menu de anexo.\n- Reprodução melhorada de mídia dentro do aplicativo (YouTube, Vimeo, SoundCloud, etc.), novo player para grandes arquivos de áudio.\n\nMais sobre a atualização:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+ Portuguese(Portugal)-->
   <string name="TelegramForAndroid">Plus Messenger para Android</string>
   <string name="Theming">Temas</string>
diff --git a/TMessagesProj/src/main/res/values-ru/strings.xml b/TMessagesProj/src/main/res/values-ru/strings.xml
index 0e4dfd3db..13f907a81 100644
--- a/TMessagesProj/src/main/res/values-ru/strings.xml
+++ b/TMessagesProj/src/main/res/values-ru/strings.xml
@@ -55,12 +55,18 @@
   <string name="UnmuteNotifications">Включить уведомления</string>
   <string name="WillUnmuteIn">Через %1$s</string>
   <string name="MuteDisable">Отключить</string>
+  <string name="Hashtags">ХЕШТЕГИ</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Новый список рассылки</string>
   <string name="EnterListName">Введите имя списка</string>
   <string name="YouCreatedBroadcastList">Вы создали список рассылки</string>
   <string name="AddRecipient">Добавить получателя</string>
   <string name="KickFromBroadcast">Исключить из списка рассылки</string>
+  <!--audio view-->
+  <string name="NoAudio">Добавьте файлы в музыкальную библиотеку этого устройства, чтобы увидеть их здесь.</string>
+  <string name="AttachMusic">Музыка</string>
+  <string name="AudioUnknownArtist">Неизвестный исполнитель</string>
+  <string name="AudioUnknownTitle">Неизвестный трек</string>
   <!--documents view-->
   <string name="SelectFile">Выберите файл</string>
   <string name="FreeOfTotal">Свободно %1$s из %2$s</string>
@@ -81,12 +87,21 @@
   <string name="Typing">набирает…</string>
   <string name="IsTyping">набирает…</string>
   <string name="AreTyping">набирают…</string>
+  <string name="IsRecordingAudio">%1$s записывает аудио...</string>
+  <string name="IsSendingPhoto">%1$s отправляет фото...</string>
+  <string name="IsSendingVideo">%1$s отправляет видео...</string>
+  <string name="IsSendingFile">%1$s отправляет файл...</string>
+  <string name="RecordingAudio">запись аудио...</string>
+  <string name="SendingPhoto">отправка фото...</string>
+  <string name="SendingVideoStatus">отправка видео...</string>
+  <string name="SendingFile">отправка файла...</string>
   <string name="GotAQuestion">Есть вопрос\nо Telegram?</string>
   <string name="ChatTakePhoto">Сделать снимок</string>
   <string name="ChatGallery">Галерея</string>
   <string name="ChatLocation">Место</string>
   <string name="ChatVideo">Видео</string>
   <string name="ChatDocument">Файл</string>
+  <string name="ChatCamera">Камера</string>
   <string name="NoMessages">Здесь пока ничего нет…</string>
   <string name="ForwardedMessage">Пересланное сообщение</string>
   <string name="From">От пользователя</string>
@@ -108,11 +123,16 @@
   <string name="DeleteThisChat">Удалить этот чат</string>
   <string name="SlideToCancel">ПРОВЕДИТЕ ДЛЯ ОТМЕНЫ</string>
   <string name="SaveToDownloads">Сохранить в загрузки</string>
+  <string name="SaveToMusic">Сохранить в музыку</string>
   <string name="ShareFile">Поделиться</string>
   <string name="ApplyLocalizationFile">Применить файл локализации</string>
   <string name="UnsupportedAttachment">Неподдерживаемое вложение</string>
   <string name="SetTimer">Установить таймер самоуничтожения</string>
   <string name="ServiceNotifications">Служебные уведомления</string>
+  <string name="GettingLinkInfo">Получение информации о соединении...</string>
+  <string name="OpenInBrowser">Открыть в браузере</string>
+  <string name="CopyUrl">Копировать URL</string>
+  <string name="SendItems">Отправить %1$s</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s поставил(а) таймер самоуничтожения на %2$s</string>
   <string name="MessageLifetimeChangedOutgoing">Вы поставили таймер самоуничтожения на %1$s</string>
@@ -146,8 +166,9 @@
   <string name="NotificationGroupKickYou">%1$s исключил(а) вас из группы %2$s</string>
   <string name="NotificationGroupLeftMember">%1$s покинул(а) группу %2$s</string>
   <string name="NotificationContactJoined">%1$s присоединился(-лась) к Telegram!</string>
-  <string name="NotificationUnrecognizedDevice">%1$s, мы обнаружили вход под вашим аккаунтом на новом устройстве.\n\nДата: %2$s\nУстройство: %3$s\nМестоположение: %4$s\n\nЕсли это были не вы, можете перейти в Настройки — Приватность и безопасность — Завершить все другие сеансы.\n\nИскренне ваша, команда Telegram.</string>
+  <string name="NotificationUnrecognizedDevice">%1$s, мы обнаружили вход в ваш аккаунт с нового устройства %2$s\n\nУстройство: %3$s\nМестоположение: %4$s\n\nЕсли это были не вы, можете перейти в Настройки - Приватность и безопасность - Сеансы и завершить этот сеанс.\n\nЕсли вы считаете, что кто-то вошёл в ваш аккаунт без вашего ведома, можете включить двухэтапную аутентификацию в разделе Приватность и безопасность.\n\nИскренне ваша, команда Telegram.</string>
   <string name="NotificationContactNewPhoto">%1$s обновил(а) фото профиля</string>
+  <string name="NotificationInvitedToGroupByLink">%1$s вступил(а) в группу %2$s по приглашению</string>
   <string name="Reply">Ответить</string>
   <string name="ReplyToGroup">Ответить группе %1$s</string>
   <string name="ReplyToUser">Ответить пользователю %1$s</string>
@@ -173,6 +194,19 @@
   <string name="EnterGroupNamePlaceholder">Введите имя группы</string>
   <string name="GroupName">Имя группы</string>
   <string name="MembersCount">%1$d/%2$d участников</string>
+  <string name="JoinToGroup">Хотите вступить в группу \'%1$s\'?</string>
+  <string name="JoinToGroupErrorFull">К сожалению, эта группа уже заполнена.</string>
+  <string name="JoinToGroupErrorNotExist">К сожалению, такой группы не существует.</string>
+  <string name="LinkCopied">Ссылка скопирована в буфер обмена.</string>
+  <string name="InviteToGroupByLink">Пригласить в группу по ссылке</string>
+  <string name="InviteLink">Приглашение</string>
+  <string name="RevokeAlert">Уверены, что хотите отозвать эту ссылку? После того, как вы это сделаете, никто не сможет вступить в группу с её помощью.</string>
+  <string name="RevokeAlertNewLink">Прежняя ссылка не активна. Сгенерирована новая.</string>
+  <string name="RevokeButton">Отозвать</string>
+  <string name="RevokeLink">Отозвать ссылку</string>
+  <string name="CopyLink">Копировать ссылку</string>
+  <string name="ShareLink">Поделиться ссылкой</string>
+  <string name="LinkInfo">Любой пользователь Telegram сможет вступить в вашу группу, перейдя по этой ссылке.</string>
   <!--group info view-->
   <string name="SharedMedia">Общие медиа</string>
   <string name="SETTINGS">Настройки</string>
@@ -214,6 +248,20 @@
   <string name="UsernameAvailable">Имя пользователя %1$s доступно.</string>
   <string name="UsernameEmpty">Не задано</string>
   <string name="ErrorOccurred">Произошла ошибка.</string>
+  <!--stickers view-->
+  <string name="Stickers">Стикеры</string>
+  <string name="StickersInfo">Приглашаем художников добавлять свои собственные наборы стикеров с помощью нашего бота @stickers.\n\nПользователи могут добавлять себе стикеры, нажимая на них и выбирая «Добавить в стикеры».</string>
+  <string name="AddStickers">Добавить стикеры</string>
+  <string name="AddToStickers">Добавить в стикеры</string>
+  <string name="AddStickersNotFound">Стикеры не найдены</string>
+  <string name="StickersRemoved">Стикеры удалены</string>
+  <string name="AddStickersInstalled">Добавлены новые стикеры</string>
+  <string name="StickersHide">Скрыть</string>
+  <string name="StickersShow">Показать</string>
+  <string name="StickersShare">Поделиться</string>
+  <string name="StickersCopy">Копировать ссылку</string>
+  <string name="StickersRemove">Удалить</string>
+  <string name="NoStickers">Стикеров пока нет</string>
   <!--settings view-->
   <string name="ResetNotificationsText">Сброс всех настроек уведомлений на стандартные</string>
   <string name="TextSize">Размер текста сообщений</string>
@@ -241,6 +289,7 @@
   <string name="NoSound">Без звука</string>
   <string name="Default">По умолчанию</string>
   <string name="Support">Поддержка</string>
+  <string name="OnlyIfSilent">Только в беззвучном</string>
   <string name="ChatBackground">Фон чата</string>
   <string name="MessagesSettings">Сообщения</string>
   <string name="SendByEnter">Отправка по Enter</string>
@@ -297,14 +346,37 @@
   <string name="NotificationsOther">Другое</string>
   <string name="NotificationsDisabled">Отключены</string>
   <string name="VibrationDisabled">Отключён</string>
+  <string name="LedDisabled">Отключён</string>
+  <string name="RepeatDisabled">Отключён</string>
+  <string name="InChatSound">Звук в чате</string>
+  <string name="SoundDefault">По умолчанию</string>
+  <string name="VibrationDefault">По умолчанию</string>
+  <string name="SmartNotifications">Умные уведомления</string>
+  <string name="SmartNotificationsDisabled">Отключены</string>
+  <string name="SmartNotificationsInfo">Звучать не более %1$s в течение %2$s</string>
+  <string name="SmartNotificationsSoundAtMost">Звучать не более</string>
+  <string name="SmartNotificationsTimes">раз(а)</string>
+  <string name="SmartNotificationsWithin">в течение</string>
+  <string name="SmartNotificationsMinutes">минут(ы)</string>
+  <!--sessions view-->
+  <string name="SessionsTitle">Активные сеансы</string>
+  <string name="CurrentSession">Текущий сеанс</string>
+  <string name="NoOtherSessions">Нет других активных сеансов</string>
+  <string name="NoOtherSessionsInfo">Вы можете войти в Telegram с другого смартфона, планшета или компьютера, используя единый номер. Все ваши данные будут мгновенно синхронизированы.</string>
+  <string name="OtherSessions">Активные сеансы</string>
+  <string name="SessionsInfo">Контролируйте ваши сеансы на других устройствах.</string>
+  <string name="TerminateSessionInfo">Нажмите на сеанс для завершения.</string>
+  <string name="TerminateSessionQuestion">Завершить этот сеанс?</string>
+  <string name="UnofficialApp">неофициальное приложение</string>
   <!--passcode view-->
   <string name="Passcode">Код доступа</string>
-  <string name="ChangePasscode">Изменить код доступа</string>
+  <string name="ChangePasscode">Сменить код доступа</string>
   <string name="ChangePasscodeInfo">После установки дополнительного кода блокировки на странице чатов появится значок замка. Нажимайте на него для блокировки и разблокировки приложения Telegram.\n\nВнимание: если вы забудете код доступа, вам нужно будет удалить и переустановить это приложение. Все секретные чаты будут утрачены.</string>
   <string name="ChangePasscodeAlert">Теперь вы будете видеть значок замка на странице чатов. Нажмите на него, чтобы заблокировать приложение Telegram с помощью вашего нового кода доступа.</string>
   <string name="PasscodePIN">ПИН-код</string>
   <string name="PasscodePassword">Пароль</string>
   <string name="EnterCurrentPasscode">Введите ваш текущий код доступа</string>
+  <string name="EnterNewFirstPasscode">Введите код доступа</string>
   <string name="EnterNewPasscode">Введите ваш новый код доступа</string>
   <string name="EnterYourPasscode">Введите ваш код доступа</string>
   <string name="ReEnterYourPasscode">Повторите ваш новый код доступа</string>
@@ -325,15 +397,20 @@
   <string name="Hybrid">Гибрид</string>
   <string name="MetersAway">м отсюда</string>
   <string name="KMetersAway">км отсюда</string>
-  <string name="SendLocation">Отправить место</string>
-  <string name="ShareLocation">Поделиться местом</string>
+  <string name="SendLocation">Отправить текущее место</string>
+  <string name="SendSelectedLocation">Отправить выбранное место</string>
+  <string name="ShareLocation">Место</string>
+  <string name="AccurateTo">С точностью до %1$s</string>
+  <string name="NearbyPlaces">ИЛИ ВЫБЕРИТЕ МЕСТО</string>
   <!--photo gallery view-->
   <string name="ShowAllMedia">Показать все медиа</string>
   <string name="SaveToGallery">Сохранить в галерею</string>
   <string name="Of">%1$d из %2$d</string>
   <string name="Gallery">Галерея</string>
   <string name="AllPhotos">Все фото</string>
+  <string name="AllVideo">Все видео</string>
   <string name="NoPhotos">Фото пока нет</string>
+  <string name="NoVideo">Видео пока нет</string>
   <string name="PleaseDownload">Сначала загрузите медиа</string>
   <string name="NoRecentPhotos">Нет недавних фото</string>
   <string name="NoRecentGIFs">Нет недавних GIF</string>
@@ -346,18 +423,78 @@
   <string name="EditImage">Редактировать изображение</string>
   <string name="Enhance">Автоулучшение</string>
   <string name="Highlights">Блики</string>
-  <string name="Contrast">Контраст</string>
+  <string name="Contrast">Контрастность</string>
   <string name="Exposure">Экспозиция</string>
-  <string name="Warmth">Тепло</string>
+  <string name="Warmth">Теплота</string>
   <string name="Saturation">Насыщенность</string>
-  <string name="Vignette">Виньетирование</string>
+  <string name="Vignette">Виньетка</string>
   <string name="Shadows">Тени</string>
   <string name="Grain">Зернистость</string>
   <string name="Sharpen">Резкость</string>
   <string name="Blur">Размытие</string>
+  <string name="BlurOff">Отключено</string>
+  <string name="BlurLinear">Линейное</string>
+  <string name="BlurRadial">Радиальное</string>
   <string name="AreYouSureDeletePhoto">Уверены, что хотите удалить это фото?</string>
   <string name="AreYouSureDeleteVideo">Уверены, что хотите удалить это видео?</string>
   <string name="DiscardChanges">Отменить изменения?</string>
+  <string name="ClearSearch">Очистить историю поиска?</string>
+  <string name="ClearButton">Очистить</string>
+  <string name="PickerPhotos">Фото</string>
+  <string name="PickerVideo">Видео</string>
+  <string name="AddCaption">Добавить подпись...</string>
+  <string name="PhotoCaption">Подпись к фото</string>
+  <string name="VideoCaption">Подпись к видео</string>
+  <!--password view-->
+  <string name="TwoStepVerification">Двухэтапная аутентификация</string>
+  <string name="SetAdditionalPassword">Установить дополнительный пароль</string>
+  <string name="SetAdditionalPasswordInfo">Вы можете установить пароль, который будет запрашиваться при входе с нового устройства в дополнение к коду, получаемому вами в SMS.</string>
+  <string name="YourPassword">Пароль</string>
+  <string name="PleaseEnterCurrentPassword">Введите ваш пароль</string>
+  <string name="PleaseEnterFirstPassword">Введите ваш пароль</string>
+  <string name="PleaseEnterPassword">Введите ваш новый пароль</string>
+  <string name="PleaseReEnterPassword">Повторите ваш пароль</string>
+  <string name="RecoveryEmail">Электронная почта</string>
+  <string name="YourEmail">Введите ваш адрес электронной почты</string>
+  <string name="YourEmailInfo">Пожалуйста, добавьте ваш настоящий адрес электронной почты. Это единственный способ восстановления забытого пароля.</string>
+  <string name="YourEmailSkip">Пропустить</string>
+  <string name="YourEmailSkipWarning">Внимание</string>
+  <string name="YourEmailSkipWarningText">Нет, серьёзно.\n\nЕсли вы забудете ваш пароль, вы потеряете доступ к вашему аккаунту Telegram. Не будет никакого способа его восстановить.</string>
+  <string name="YourEmailAlmostThere">Почти готово!</string>
+  <string name="YourEmailAlmostThereText">Пожалуйста, проверьте вашу электронную почту (не забудьте о папке со спамом) для завершения настройки двухэтапной аутентификации.</string>
+  <string name="YourPasswordSuccess">Готово!</string>
+  <string name="YourPasswordSuccessText">Ваш пароль для двухэтапной аутентификации активен.</string>
+  <string name="ChangePassword">Сменить пароль</string>
+  <string name="TurnPasswordOff">Отключить пароль</string>
+  <string name="SetRecoveryEmail">Указать адрес электронной почты</string>
+  <string name="ChangeRecoveryEmail">Сменить адрес электронной почты</string>
+  <string name="TurnPasswordOffQuestion">Уверены, что хотите отключить пароль?</string>
+  <string name="PasswordHint">Подсказка</string>
+  <string name="PasswordHintText">Введите подсказку для вашего пароля</string>
+  <string name="PasswordDoNotMatch">Пароли не совпадают</string>
+  <string name="AbortPassword">Отменить настройку двухэтапной аутентификации</string>
+  <string name="EmailPasswordConfirmText">Пожалуйста, выполните эти шаги для завершения настройки двухэтапной аутентификации:\n\n1. Проверьте вашу электронную почту (не забудьте о папке со спамом)\n%1$s\n\n2. Перейдите по ссылке для подтверждения.</string>
+  <string name="PasswordAsHintError">Подсказка должна отличаться от вашего пароля</string>
+  <string name="PasswordEmailInvalid">Неверный адрес электронной почты</string>
+  <string name="RestorePasswordNoEmailTitle">Извините</string>
+  <string name="RestorePasswordNoEmailText">Так как вы не указали адрес электронной почты для восстановления пароля, то оставшиеся варианты — вспомнить пароль или сбросить аккаунт.</string>
+  <string name="RestoreEmailSent">Мы отправили код восстановления на указанный вами адрес электронной почты:\n\n%1$s</string>
+  <string name="RestoreEmailSentInfo">Пожалуйста, проверьте вашу электронную почту и введите 6-значный код, который мы вам отправили.</string>
+  <string name="RestoreEmailTrouble">Проблемы с доступом к вашей электронной почте %1$s?</string>
+  <string name="RestoreEmailTroubleText">Если вы не можете восстановить доступ к вашей электронной почте, то оставшиеся варианты — вспомнить пароль или сбросить аккаунт.</string>
+  <string name="ResetMyAccount">СБРОСИТЬ МОЙ АККАУНТ</string>
+  <string name="ResetMyAccountText">Вы потеряете все ваши чаты и сообщения, а также любые медиа и файлы, которыми вы делились, если выполните сброс своего аккаунта.</string>
+  <string name="ResetMyAccountWarning">Внимание</string>
+  <string name="ResetMyAccountWarningText">Это действие не может быть отменено.\n\nЕсли вы сбросите свой аккаунт, все ваши сообщения и чаты будут удалены.</string>
+  <string name="ResetMyAccountWarningReset">Сброс</string>
+  <string name="LoginPassword">Пароль</string>
+  <string name="LoginPasswordText">Включена двухэтапная аутентификация, ваш аккаунт защищён дополнительным паролем.</string>
+  <string name="ForgotPassword">Забыли пароль?</string>
+  <string name="PasswordRecovery">Восстановление пароля</string>
+  <string name="PasswordCode">Код</string>
+  <string name="PasswordReset">Пароль отключён</string>
+  <string name="EnabledPasswordText">Включена двухэтапная аутентификация.\nДля входа в свой аккаунт Telegram вам нужно будет вводить установленный здесь пароль.</string>
+  <string name="PendingEmailText">Ваш адрес электронной почты для восстановления %1$s ещё не активирован и ожидает подтверждения.</string>
   <!--privacy settings-->
   <string name="PrivacySettings">Приватность и безопасность</string>
   <string name="PrivacyTitle">Приватность</string>
@@ -396,12 +533,23 @@
   <string name="EditedVideo">Отредактированное видео</string>
   <string name="SendingVideo">Отправка видео...</string>
   <string name="CompressVideo">Сжать видео</string>
+  <!--bot-->
+  <string name="Bot">бот</string>
+  <string name="BotShare">Поделиться</string>
+  <string name="BotInvite">Добавить в группу</string>
+  <string name="BotSettings">Настройки</string>
+  <string name="BotHelp">Помощь</string>
+  <string name="BotStatusRead">имеет доступ к сообщениям</string>
+  <string name="BotStatusCantRead">не имеет доступа к сообщениям</string>
+  <string name="BotInfoTitle">Что этот бот может делать?</string>
+  <string name="BotStart">СТАРТ</string>
   <!--button titles-->
   <string name="Next">Далее</string>
   <string name="Back">Назад</string>
   <string name="Done">Готово</string>
   <string name="Open">Открыть</string>
   <string name="Cancel">Отменить</string>
+  <string name="Close">Закрыть</string>
   <string name="Add">Добавить</string>
   <string name="Edit">Редактировать</string>
   <string name="Send">Отправить</string>
@@ -415,8 +563,10 @@
   <string name="DeletePhoto">Удалить фото</string>
   <string name="Set">Установить</string>
   <string name="OK">OK</string>
-  <string name="Crop">КАДРИРОВАНИЕ</string>
+  <string name="Crop">КАДРИРОВАТЬ</string>
   <!--messages-->
+  <string name="ActionInviteYou">Вы вступили в группу по приглашению</string>
+  <string name="ActionInviteUser">un1 вступил(а) в группу по приглашению</string>
   <string name="ActionKickUser">un1 исключил(а) пользователя un2</string>
   <string name="ActionLeftUser">un1 покинул(а) группу</string>
   <string name="ActionAddUser">un1 добавил(а) пользователя un2</string>
@@ -434,7 +584,8 @@
   <string name="ActionKickUserYou">un1 исключил(а) вас</string>
   <string name="ActionAddUserYou">un1 добавил(а) вас</string>
   <string name="ActionAddUserSelf">un1 вернулся(-лась) в группу</string>
-  <string name="UnsuppotedMedia">Это сообщение не поддерживается в вашей версии Telegram. Обновите приложение для просмотра: http://telegram.org/update</string>
+  <string name="ActionAddUserSelfYou">Вы вернулись в группу</string>
+  <string name="UnsuppotedMedia">Это сообщение не поддерживается вашей версией Telegram. Для просмотра обновите приложение: https://telegram.org/update</string>
   <string name="AttachPhoto">Фото</string>
   <string name="AttachVideo">Видео</string>
   <string name="AttachLocation">Место</string>
@@ -449,18 +600,22 @@
   <string name="InvalidPhoneNumber">Неверный номер телефона</string>
   <string name="CodeExpired">Срок действия кода истёк, пожалуйста, войдите снова</string>
   <string name="FloodWait">Слишком много попыток, пожалуйста, попробуйте снова позже</string>
+  <string name="FloodWaitTime">Слишком много попыток, попробуйте снова через %1$s</string>
   <string name="InvalidCode">Неверный код</string>
   <string name="InvalidFirstName">Неверное имя</string>
   <string name="InvalidLastName">Неверная фамилия</string>
   <string name="Loading">Загрузка...</string>
   <string name="NoPlayerInstalled">У вас нет видеоплеера, пожалуйста, установите его для продолжения</string>
-  <string name="NoMailInstalled">Пожалуйста, отправьте письмо на sms@telegram.org и сообщите нам о вашей проблеме.</string>
+  <string name="NoMailInstalled">Пожалуйста, отправьте нам письмо с описанием вашей проблемы на sms@stel.com.</string>
   <string name="NoHandleAppInstalled">У вас нет приложений, которые могут обрабатывать файлы типа «%1$s», пожалуйста, установите одно для продолжения.</string>
   <string name="InviteUser">У этого пользователя пока нет Telegram, отправить приглашение?</string>
   <string name="AreYouSure">Уверены?</string>
-  <string name="AddToTheGroup">Добавить %1$s в группу?\n\nКоличество последних сообщений для пересылки:</string>
-  <string name="ForwardMessagesTo">Переслать сообщения пользователю %1$s?</string>
-  <string name="SendMessagesTo">Отправить сообщения %1$s?</string>
+  <string name="AddToTheGroupTitle">Добавить %1$s в группу %2$s?</string>
+  <string name="AddToTheGroupForwardCount">Количество последних сообщений для пересылки:</string>
+  <string name="AddToTheGroup">Добавить пользователя %1$s в группу?</string>
+  <string name="UserAlreadyInGroup">Этот пользователь уже в этой группе.</string>
+  <string name="ForwardMessagesTo">Переслать сообщение(-я) пользователю %1$s?</string>
+  <string name="SendMessagesTo">Отправить сообщение(-я) пользователю %1$s?</string>
   <string name="AreYouSureLogout">Уверены, что хотите выйти?\n\nОбратите внимание на то, что вы можете с лёгкостью пользоваться Telegram на всех ваших устройствах одновременно.\n\nПомните, выход уничтожает все ваши секретные чаты.</string>
   <string name="AreYouSureSessions">Уверены, что хотите завершить все другие сеансы?</string>
   <string name="AreYouSureDeleteAndExit">Уверены, что хотите удалить и покинуть эту группу?</string>
@@ -473,9 +628,11 @@
   <string name="AreYouSureRegistration">Уверены, что хотите прервать регистрацию?</string>
   <string name="AreYouSureClearHistory">Уверены, что хотите очистить историю?</string>
   <string name="AreYouSureDeleteMessages">Уверены, что хотите удалить %1$s?</string>
-  <string name="SendMessagesToGroup">Отправить сообщения %1$s?</string>
-  <string name="ForwardMessagesToGroup">Переслать сообщения %1$s?</string>
+  <string name="SendMessagesToGroup">Отправить сообщение(-я) группе %1$s?</string>
+  <string name="ForwardMessagesToGroup">Переслать сообщение(-я) %1$s?</string>
   <string name="FeatureUnavailable">Извините, эта возможность пока не доступна в вашей стране.</string>
+  <string name="NoUsernameFound">Нет аккаунта Telegram с таким именем.</string>
+  <string name="BotCantJoinGroups">Этот бот не может вступать в группы.</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Быстрый</string>
@@ -542,9 +699,9 @@
   <string name="Seconds_many">%1$d секунд</string>
   <string name="Seconds_other">%1$d секунд</string>
   <string name="Minutes_zero">%1$d минут</string>
-  <string name="Minutes_one">%1$d минута</string>
-  <string name="Minutes_two">%1$d минуты</string>
-  <string name="Minutes_few">%1$d минуты</string>
+  <string name="Minutes_one">%1$d минуты</string>
+  <string name="Minutes_two">%1$d минут</string>
+  <string name="Minutes_few">%1$d минут</string>
   <string name="Minutes_many">%1$d минут</string>
   <string name="Minutes_other">%1$d минут</string>
   <string name="Hours_zero">%1$d часов</string>
@@ -583,6 +740,85 @@
   <string name="Users_few">%1$d пользователя</string>
   <string name="Users_many">%1$d пользователей</string>
   <string name="Users_other">%1$d пользователей</string>
+  <string name="Times_zero">%1$d раз</string>
+  <string name="Times_one">%1$d раза</string>
+  <string name="Times_two">%1$d раз</string>
+  <string name="Times_few">%1$d раз</string>
+  <string name="Times_many">%1$d раз</string>
+  <string name="Times_other">%1$d раз</string>
+  <string name="Meters_zero">%1$d метров</string>
+  <string name="Meters_one">%1$d метра</string>
+  <string name="Meters_two">%1$d метров</string>
+  <string name="Meters_few">%1$d метров</string>
+  <string name="Meters_many">%1$d метров</string>
+  <string name="Meters_other">%1$d метров</string>
+  <string name="Stickers_zero">%1$d стикеров</string>
+  <string name="Stickers_one">%1$d стикер</string>
+  <string name="Stickers_two">%1$d стикера</string>
+  <string name="Stickers_few">%1$d стикера</string>
+  <string name="Stickers_many">%1$d стикеров</string>
+  <string name="Stickers_other">%1$d стикеров</string>
+  <string name="Photos_zero">%1$d фото</string>
+  <string name="Photos_one">%1$d фото</string>
+  <string name="Photos_two">%1$d фото</string>
+  <string name="Photos_few">%1$d фото</string>
+  <string name="Photos_many">%1$d фото</string>
+  <string name="Photos_other">%1$d фото</string>
+  <!--forwarded messages-->
+  <string name="ForwardedMessage_zero">%1$d пересланных сообщений</string>
+  <string name="ForwardedMessage_one">Пересланное сообщение</string>
+  <string name="ForwardedMessage_two">%1$d пересланных сообщения</string>
+  <string name="ForwardedMessage_few">%1$d пересланных сообщения</string>
+  <string name="ForwardedMessage_many">%1$d пересланных сообщений</string>
+  <string name="ForwardedMessage_other">%1$d пересланных сообщений</string>
+  <string name="ForwardedFile_zero">%1$d пересланных файлов</string>
+  <string name="ForwardedFile_one">Пересланный файл</string>
+  <string name="ForwardedFile_two">%1$d пересланных файла</string>
+  <string name="ForwardedFile_few">%1$d пересланных файла</string>
+  <string name="ForwardedFile_many">%1$d пересланных файлов</string>
+  <string name="ForwardedFile_other">%1$d пересланных файлов</string>
+  <string name="ForwardedPhoto_zero">%1$d пересланных фото</string>
+  <string name="ForwardedPhoto_one">Пересланное фото</string>
+  <string name="ForwardedPhoto_two">%1$d пересланных фото</string>
+  <string name="ForwardedPhoto_few">%1$d пересланных фото</string>
+  <string name="ForwardedPhoto_many">%1$d пересланных фото</string>
+  <string name="ForwardedPhoto_other">%1$d пересланных фото</string>
+  <string name="ForwardedVideo_zero">%1$d пересланных видео</string>
+  <string name="ForwardedVideo_one">Пересланное видео</string>
+  <string name="ForwardedVideo_two">%1$d пересланных видео</string>
+  <string name="ForwardedVideo_few">%1$d пересланных видео</string>
+  <string name="ForwardedVideo_many">%1$d пересланных видео</string>
+  <string name="ForwardedVideo_other">%1$d пересланных видео</string>
+  <string name="ForwardedAudio_zero">%1$d пересланных аудио</string>
+  <string name="ForwardedAudio_one">Пересланное аудио</string>
+  <string name="ForwardedAudio_two">%1$d пересланных аудио</string>
+  <string name="ForwardedAudio_few">%1$d пересланных аудио</string>
+  <string name="ForwardedAudio_many">%1$d пересланных аудио</string>
+  <string name="ForwardedAudio_other">%1$d пересланных аудио</string>
+  <string name="ForwardedLocation_zero">%1$d пересланных мест</string>
+  <string name="ForwardedLocation_one">Пересланное место</string>
+  <string name="ForwardedLocation_two">%1$d пересланных места</string>
+  <string name="ForwardedLocation_few">%1$d пересланных места</string>
+  <string name="ForwardedLocation_many">%1$d пересланных мест</string>
+  <string name="ForwardedLocation_other">%1$d пересланных мест</string>
+  <string name="ForwardedContact_zero">%1$d пересланных контактов</string>
+  <string name="ForwardedContact_one">Пересланный контакт</string>
+  <string name="ForwardedContact_two">%1$d пересланных контакта</string>
+  <string name="ForwardedContact_few">%1$d пересланных контакта</string>
+  <string name="ForwardedContact_many">%1$d пересланных контактов</string>
+  <string name="ForwardedContact_other">%1$d пересланных контактов</string>
+  <string name="ForwardedSticker_zero">%1$d пересланных стикеров</string>
+  <string name="ForwardedSticker_one">Пересланный стикер</string>
+  <string name="ForwardedSticker_two">%1$d пересланных стикера</string>
+  <string name="ForwardedSticker_few">%1$d пересланных стикера</string>
+  <string name="ForwardedSticker_many">%1$d пересланных стикеров</string>
+  <string name="ForwardedSticker_other">%1$d пересланных стикеров</string>
+  <string name="AndOther_zero">и %1$d других</string>
+  <string name="AndOther_one">и %1$d другое</string>
+  <string name="AndOther_two">и %1$d других</string>
+  <string name="AndOther_few">и %1$d других</string>
+  <string name="AndOther_many">и %1$d других</string>
+  <string name="AndOther_other">и %1$d других</string>
   <!--date formatters-->
   <string name="formatterMonthYear">MMMM yyyy</string>
   <string name="formatterMonth">MMM dd</string>
@@ -594,6 +830,9 @@
   <string name="formatterDay24H">HH:mm</string>
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s в %2$s</string>
+  <!--update text-->
+  <string name="updateText">Plus Messenger для Android обновлён. Новое в версии 3.1:\n\n- Поиск сообщений внутри конкретного чата.\n- Полностью переработано меню вложений. Отправка контактов и аудиофайлов прямо из меню вложений.\n- Улучшено воспроизведение медиа в приложении (YouTube, Vimeo, SoundCloud и др.), новый плеер для больших аудиофайлов.\n\nБольше об этом обновлении:\nhttps://telegram.org/blog/search-and-media</string>
+  <string name="updateBuild">583</string>
     <!--Telegram+ Russian-->
   <string name="TelegramForAndroid">Plus Messenger для Android</string>
   <string name="Theming">Кастомизация</string>
diff --git a/TMessagesProj/src/main/res/values-tr/strings.xml b/TMessagesProj/src/main/res/values-tr/strings.xml
index bcd894bc3..7b4767d56 100644
--- a/TMessagesProj/src/main/res/values-tr/strings.xml
+++ b/TMessagesProj/src/main/res/values-tr/strings.xml
@@ -395,7 +395,7 @@
   <string name="formatterDay24H">SS:dd</string>
   <!--update text-->
   <string name="updateText">Plus Messenger için temalar indirin ve uygulayın. Hergün yeni temalar ekleniyor:\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-  <string name="updateBuild">576</string>
+  <string name="updateBuild">583</string>
   <!--Telegram+--><!--
   <string name="updatePlusText">
 \n\n3.0.1.3\'daki yenilikler:\n\n- Ayarlara telefon yazı tipini kullanma opsiyonu eklendi\n- Sohbet/Grup içinde arama opsiyonu eklendi\n- Ayarlar/Tema ekranında başlık rengi, başlık yazı rengi ve başlık ikonları değiştirme modu eklendi\n- Ana ekranda grup ikon rengini değiştirme modu eklendi\n- Sol menüdeki avatar büyüklüğünü değiştirme modu eklendi\n- Hata düzeltmeleri</string>-->
diff --git a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
index fff0573a6..ae14b6228 100644
--- a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
@@ -322,6 +322,7 @@
   <string name="RepeatDisabled">关闭</string>
   <string name="InChatSound">聊天音效</string>
   <string name="SoundDefault">默认</string>
+  <string name="VibrationDefault">默认</string>
   <string name="SmartNotifications">智能通知</string>
   <string name="SmartNotificationsDisabled">禁用智能通知</string>
   <string name="SmartNotificationsInfo">在 %2$s 分钟内，至少通知 %1$s 次</string>
@@ -504,12 +505,23 @@
 <string name="EditedVideo">编辑过的视频</string>
 <string name="SendingVideo">正在发送视频...</string>
 <string name="CompressVideo">压缩视频</string>
+  <!--bot-->
+  <string name="Bot">接口</string>
+  <string name="BotShare">分享</string>
+  <string name="BotInvite">加入群组</string>
+  <string name="BotSettings">设置</string>
+  <string name="BotHelp">帮助</string>
+  <string name="BotStatusRead">具有读取消息权限</string>
+  <string name="BotStatusCantRead">没有读取消息权限</string>
+  <string name="BotInfoTitle">本接口的作用</string>
+  <string name="BotStart">开始</string>
     <!--button titles-->
-<string name="Next">下一个</string>
+  <string name="Next">下一步</string>
 <string name="Back">返回</string>
 <string name="Done">完成</string>
 <string name="Open">打开</string>
 <string name="Cancel">取消</string>
+  <string name="Close">关闭</string>
 <string name="Add">添加</string>
 <string name="Edit">编辑</string>
 <string name="Send">发送</string>
@@ -518,11 +530,12 @@
 <string name="Delete">删除</string>
 <string name="Forward">转发</string>
 <string name="Retry">重试</string>
-<string name="FromCamera">来自相机</string>
-<string name="FromGalley">来自相册</string>
-<string name="DeletePhoto">删除照片</string>
+  <string name="FromCamera">拍照</string>
+  <string name="FromGalley">从相册中选择</string>
+  <string name="DeletePhoto">删除图片</string>
 <string name="Set">设置</string>
-<string name="OK">OK</string>
+  <string name="OK">确定</string>
+  <string name="Crop">剪切</string>
     <!--messages-->
   <string name="ActionInviteYou">您通过邀请链接方式加入了这个群组</string>
   <string name="ActionInviteUser">un1 通过邀请链接方式加入了这个群组</string>
@@ -547,7 +560,7 @@
   <string name="UnsuppotedMedia">当前版本不支持查看此条消息。请前往更新版本: http://telegram.org/update</string>
   <string name="AttachPhoto">图片</string>
 <string name="AttachVideo">视频</string>
-<string name="AttachLocation">地理位置</string>
+  <string name="AttachLocation">位置</string>
 <string name="AttachContact">联系人</string>
 <string name="AttachDocument">文件</string>
   <string name="AttachSticker">图贴</string>
@@ -556,36 +569,42 @@
   <string name="ActionTakeScreenshootYou">您截了一张图！</string>
   <string name="ActionTakeScreenshoot">un1 截了一张图！</string>
     <!--Alert messages-->
-<string name="InvalidPhoneNumber">无效电话号码</string>
-<string name="CodeExpired">密码过期，请重新输入</string>
-<string name="FloodWait">请求过多，请稍候重试</string>
-<string name="InvalidCode">密码无效</string>
-<string name="InvalidFirstName">无效的名</string>
-<string name="InvalidLastName">无效的姓</string>
-<string name="Loading">加载中...</string>
-<string name="NoPlayerInstalled">缺少视频播放器，请安装视频播放器后继续</string>
-<string name="NoMailInstalled">请发送邮件到 sms@telegram.org 并告诉我们你的问题。</string>
-<string name="NoHandleAppInstalled">没有可以打开文件\'%1$s\'的应用，请安装之后继续</string>
-<string name="InviteUser">该用户还未加入 Telegram，发送一封邀请？</string>
-<string name="AreYouSure">你确定吗？</string>
-<string name="AddToTheGroup">添加 %1$s 到群吗？\n\n最近的消息转发数:</string>
-<string name="ForwardMessagesTo">转发给 %1$s 吗？</string>
-<string name="SendMessagesTo">发送信息给 %1$s 吗？</string>
-<string name="AreYouSureLogout">你确定登出吗？\n\n注意：你可以立即在所有设备上无缝使用 Telegram。\n\n登出后所有私密会话都将被删除。</string>
-<string name="AreYouSureSessions">你确定终止其他所有会话吗？</string>
-<string name="AreYouSureDeleteAndExit">你确定删除并离开群吗？</string>
-<string name="AreYouSureDeleteThisChat">你确定删除这个会话吗？</string>
-<string name="AreYouSureShareMyContactInfo">你确定共享你的联系人信息吗？</string>
-<string name="AreYouSureBlockContact">你确定屏蔽该联系人吗？</string>
-<string name="AreYouSureUnblockContact">对该联系人解除屏蔽吗？</string>
-<string name="AreYouSureDeleteContact">你确定删除这个联系人吗？</string>
-<string name="AreYouSureSecretChat">你确定开始私密会话吗？</string>
-<string name="AreYouSureRegistration">你确定要取消登录吗？</string>
-<string name="AreYouSureClearHistory">你确定要清除历史吗？</string>
-<string name="AreYouSureDeleteMessages">你确定要删除 %1$s ？</string>
-<string name="SendMessagesToGroup">发送消息给 %1$s 吗？</string>
-<string name="ForwardMessagesToGroup">转发消息给 %1$s ？</string>
-<string name="FeatureUnavailable">抱歉，该功能在你所在国家尚未启用。</string>
+  <string name="InvalidPhoneNumber">无效的手机号码</string>
+  <string name="CodeExpired">验证码已过期，请重新登录</string>
+  <string name="FloodWait">尝试次数过多，请稍后再试</string>
+  <string name="FloodWaitTime">尝试次数过多，请于 %1$s 后再试</string>
+  <string name="InvalidCode">无效的验证码</string>
+  <string name="InvalidFirstName">无效的名字</string>
+  <string name="InvalidLastName">无效的姓氏</string>
+  <string name="Loading">载入中……</string>
+  <string name="NoPlayerInstalled">没有可用的视频播放器，请先安装</string>
+  <string name="NoMailInstalled">请发送电子邮件到 sms@telegram.org 告诉我们您遇到的问题。</string>
+  <string name="NoHandleAppInstalled">您没有安装可执行 \'%1$s\' 类型文件的软件，请先安装以继续。</string>
+  <string name="InviteUser">该用户还未加入Telegram，是否发送邀请？</string>
+  <string name="AreYouSure">您确定吗？</string>
+  <string name="AddToTheGroupTitle">将 %1$s 加入到 %2$s 群组？</string>
+  <string name="AddToTheGroupForwardCount">最近要转发的消息数：</string>
+  <string name="AddToTheGroup">将 %1$s 添加到群组？</string>
+  <string name="UserAlreadyInGroup">此用户已是本群组成员</string>
+  <string name="ForwardMessagesTo">转发信息给%1$s？</string>
+  <string name="SendMessagesTo">要把消息发送给 %1$s 吗？</string>
+  <string name="AreYouSureLogout">确认退出登录？</string>
+  <string name="AreYouSureSessions">您确定要注销所有其它设备上的会话吗？</string>
+  <string name="AreYouSureDeleteAndExit">您确定要删除并退出这个群组吗？</string>
+  <string name="AreYouSureDeleteThisChat">您确定要删除这个对话吗？</string>
+  <string name="AreYouSureShareMyContactInfo">您确定要共享您的联系信息吗？</string>
+  <string name="AreYouSureBlockContact">您确定要屏蔽该联系人吗？</string>
+  <string name="AreYouSureUnblockContact">您确定要取消对该联系人的屏蔽吗？</string>
+  <string name="AreYouSureDeleteContact">您确定要删除该联系人吗？</string>
+  <string name="AreYouSureSecretChat">您确定要开始加密对话吗？</string>
+  <string name="AreYouSureRegistration">确认取消注册？</string>
+  <string name="AreYouSureClearHistory">确认清除聊天记录？</string>
+  <string name="AreYouSureDeleteMessages">确认删除 %1$s ？</string>
+  <string name="SendMessagesToGroup">要发送消息给 %1$s 吗？</string>
+  <string name="ForwardMessagesToGroup">要转发消息给 %1$s 吗？</string>
+  <string name="FeatureUnavailable">对不起，本功能在您的国家暂不可用。</string>
+  <string name="NoUsernameFound">没有使用这个昵称的 Telegram 账号。</string>
+  <string name="BotCantJoinGroups">此接口账号无法加入群组。</string>
     <!--Intro view-->
 <string name="Page1Title">Plus Messenger</string>
 <string name="Page2Title">快速</string>
@@ -711,6 +730,12 @@
   <string name="Stickers_few">%1$d 张图贴</string>
   <string name="Stickers_many">%1$d 张图贴</string>
   <string name="Stickers_other">%1$d 张图贴</string>
+  <string name="Photos_zero">没有照片</string>
+  <string name="Photos_one">一张照片</string>
+  <string name="Photos_two">两张照片</string>
+  <string name="Photos_few">%1$d 张照片</string>
+  <string name="Photos_many">%1$d 张照片</string>
+  <string name="Photos_other">%1$d 张照片</string>
   <!--forwarded messages-->
   <string name="ForwardedMessage_zero">无转发消息</string>
   <string name="ForwardedMessage_one">一条转发的消息</string>
@@ -778,8 +803,8 @@
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s 的 %2$s</string>
   <!--update text-->
-  <string name="updateText">为 Plus Messenger 查找、下载并应用主题。每天都有新主题，当有新的主题发布时能够立即获得通知。分享您的主题给全世界所有的 Plus Messenger 用户。\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-  <string name="updateBuild">576</string>
+  <string name="updateText">Android 版的 Plus Messenger 已更新。最新版本 3.1 的新增功能有：\n\n- 在特定聊天中搜索消息内容。\n- 全新设计的附件选择菜单。从附件选择菜单中直接发送联系人资料或语音文件。\n- 改进的程序内媒体播放功能 （YouTube, Vimoe, Soundcloud 等）, 新播放器适用于大型语音文件。\n\n更多更新请查看：\nhttps://telegram.org/blog/search-and-media</string>
+  <string name="updateBuild">583</string>
   <!--Telegram+--><!--
   <string name="updatePlusText">\n\n在 3.0.1.3 版的新功能：\n\n- 添加设置使用手机字体选项\n- 添加聊天/群组聊天内搜索聊天记录选项\n- 在设置/主题调整界面里添加标头颜色、标题颜色和标头图标颜色的设置\n- 添加主界面群组图标颜色的设置\n- 添加导航栏中头像大小的设置\n- 错误修复</string>-->
   <string name="TelegramForAndroid">Plus Messenger for Android</string>
diff --git a/TMessagesProj/src/main/res/values-zh-rTW/strings.xml b/TMessagesProj/src/main/res/values-zh-rTW/strings.xml
index b356963dc..0accde7b2 100644
--- a/TMessagesProj/src/main/res/values-zh-rTW/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rTW/strings.xml
@@ -734,6 +734,12 @@
   <string name="Stickers_few">%1$d 張貼圖</string>
   <string name="Stickers_many">%1$d 張貼圖</string>
   <string name="Stickers_other">%1$d 張貼圖</string>
+  <string name="Photos_zero">%1$d 張照片</string>
+  <string name="Photos_one">%1$d 張照片</string>
+  <string name="Photos_two">%1$d 張照片</string>
+  <string name="Photos_few">%1$d 張照片</string>
+  <string name="Photos_many">%1$d 張照片</string>
+  <string name="Photos_other">%1$d 張照片</string>
     <!--forwarded messages-->
   <string name="ForwardedMessage_zero">%1$d 則轉寄的訊息</string>
     <string name="ForwardedMessage_one">轉寄的訊息</string>
@@ -801,8 +807,8 @@
     <string name="formatterDay12H">a h:mm</string>
     <string name="formatDateAtTime">%1$s 於時間 %2$s</string>
   <!--update text-->
-  <string name="updateText">檢查，下載並套用給 Plus Messenger 使用的主題。每天都有新的主題。當新的主題發布時，收到通知。與世界各地的所有 Plus Messenger 用戶分享您的主題：\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-  <string name="updateBuild">576</string>
+  <string name="updateText">Android 版的 Plus Messenger 已經更新。在版本 3.1 的新功能：\n\n- 在特定的聊天室裡搜尋訊息。\n- 完全重新設計的附件選單。從附件選單直接傳送「聯絡人」資訊和「音訊檔」。\n- 改進的程式內媒體播放( YouTube、Vimoe、SoundCloud 等 )，新的播放器適用於大型音訊檔。\n\n更多關於這次的更新：\nhttps://telegram.org/blog/search-and-media</string>
+  <string name="updateBuild">583</string>
   <!--Telegram+--><!--
   <string name="updatePlusText">
 \n\n在 3.0.1.3 版的新功能：\n\n- 在「設定」中使用手機字型的選項\n- 在聊天室/群組聊天室內部搜尋的選項\n- 加入模組以變更在「設定」與「自製佈景主題」中的標頭顏色、標頭標題顏色和標頭圖示顏色\n- 模組用於變更在主畫面中群組圖示的顏色\n- 模組用於在導航選單變更大頭照大小\n- 錯誤修正</string>-->
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 083e825b2..62c52db17 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1,5 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 
+
+
 <resources>
     <string name="AppName">Plus Messenger</string>
     <string name="ShortAppName">Plus</string>
@@ -64,6 +66,11 @@
     <string name="YouCreatedBroadcastList">You created a broadcast list</string>
     <string name="AddRecipient">Add recipient</string>
     <string name="KickFromBroadcast">Remove from broadcast list</string>
+    <!--audio view-->
+    <string name="NoAudio">Please add files to the music library on your device to see them here.</string>
+    <string name="AttachMusic">Music</string>
+    <string name="AudioUnknownArtist">Unknown artist</string>
+    <string name="AudioUnknownTitle">Unknown title</string>
     <!--documents view-->
     <string name="SelectFile">Select File</string>
     <string name="FreeOfTotal">Free %1$s of %2$s</string>
@@ -120,6 +127,7 @@
     <string name="DeleteThisChat">Delete this chat</string>
     <string name="SlideToCancel">SLIDE TO CANCEL</string>
     <string name="SaveToDownloads">Save to downloads</string>
+    <string name="SaveToMusic">Save to music</string>
     <string name="ShareFile">Share</string>
     <string name="ApplyLocalizationFile">Apply localization file</string>
     <string name="UnsupportedAttachment">Unsupported attachment</string>
@@ -346,6 +354,7 @@
     <string name="RepeatDisabled">Off</string>
     <string name="InChatSound">In-Chat Sounds</string>
     <string name="SoundDefault">Default</string>
+    <string name="VibrationDefault">Default</string>
     <string name="SmartNotifications">Smart Notifications</string>
     <string name="SmartNotificationsDisabled">Disabled</string>
     <string name="SmartNotificationsInfo">Sound at most %1$s within %2$s</string>
@@ -826,10 +835,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s at %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger for Android has been updated. New in version 3.0:\n\n- Dedicated tabs for each one of your custom sticker sets in the sticker panel. Add custom stickers like https://telegram.me/addstickers/Animals\n- New bot API, free for everyone. If you\'re an engineer, create your own bots for games, services or integrations. Learn more at https://telegram.org/blog/bot-revolution\n- Check, download and apply themes for Plus Messenger. New themes every day:\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>
-    <string name="updateBuild">576</string>
+    <string name="updateText">Plus Messenger for Android has been updated. New in version 3.1:\n\n- Search for messages inside a specific chat.\n- Fully redesigned attachment menu. Send contacts and audio files straight from the attachment menu.\n- Improved in-app media playback (YouTube, Vimeo, SoundCloud etc.), new player for large audio files.\n\nMore about this update:\nhttps://telegram.org/blog/search-and-media</string>
+    <string name="updateBuild">583</string>
     <!--Telegram+-->
-    <string name="updatePlusText">\n\nNew in 3.0.1.5:\n\n- Fixed options to share music and stickers\n- Added option to share contact number\n- Added option to add member directly from group options\n- Added option to mute or activate notifications from main screen\n- Bug fixes</string>
+    <string name="updatePlusText">\n\nNew in 3.1.1.3:\n\n- New MOD to change status color in Settings screen\n- Bug fixes</string>
     <string name="TelegramForAndroid">Plus Messenger for Android</string>
     <string name="Theming">Theming</string>
     <string name="colorHexInvalid">Invalid color hex code!</string>
@@ -956,4 +965,5 @@
     <string name="UseDeviceFont">Use device font</string>
     <string name="AppWillRestart">Plus Messenger will restart</string>
     <string name="GroupIconColor">Group icon color</string>
+    <string name="SharedContactNameColor">Shared contact name color</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/styles.xml b/TMessagesProj/src/main/res/values/styles.xml
index d79640450..ecce24d7d 100644
--- a/TMessagesProj/src/main/res/values/styles.xml
+++ b/TMessagesProj/src/main/res/values/styles.xml
@@ -73,8 +73,8 @@
     <!--ALERT DIALOG-->
 
     <style name="DialogNoAnimation">
-        <item name="android:windowEnterAnimation">@null</item>
-        <item name="android:windowExitAnimation">@null</item>
+        <item name="android:windowEnterAnimation">@anim/no_animation</item>
+        <item name="android:windowExitAnimation">@anim/no_animation</item>
     </style>
 
 
