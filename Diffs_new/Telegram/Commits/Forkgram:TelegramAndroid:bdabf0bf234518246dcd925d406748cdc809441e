diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index 0ceaa741e..76033e9fd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -49,6 +49,8 @@
     private int sectionRow1;
 
     private int squareAvatarsRow;
+    private int inappCameraRow;
+
     private int pinOrderRow;
 
     @Override
@@ -59,6 +61,7 @@ public boolean onFragmentCreate() {
         
         sectionRow1 = rowCount++;
         squareAvatarsRow = rowCount++;
+        inappCameraRow = rowCount++;
         pinOrderRow = rowCount++;
 
         return true;
@@ -110,6 +113,11 @@ public boolean supportsPredictiveItemAnimations() {
                 if (view instanceof TextCheckCell) {
                     ((TextCheckCell) view).setChecked(!squareAvatars);
                 }
+            } else if (position == inappCameraRow) {
+                SharedConfig.toggleInappCamera();
+                if (view instanceof TextCheckCell) {
+                    ((TextCheckCell) view).setChecked(SharedConfig.inappCamera);
+                }
             } else if (position == pinOrderRow) {
                 presentFragment(new PinsOrderActivity());
             }
@@ -153,7 +161,13 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     TextCheckCell textCell = (TextCheckCell) holder.itemView;
                     SharedPreferences preferences = MessagesController.getGlobalMainSettings();
                     if (position == squareAvatarsRow) {
-                        textCell.setTextAndCheck("Square Avatars", preferences.getBoolean("squareAvatars", true), true);
+                        String t = LocaleController.getString("SquareAvatars", R.string.SquareAvatars);
+                        String info = LocaleController.getString("SquareAvatarsInfo", R.string.SquareAvatarsInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("squareAvatars", true), false, false);
+                    } else if (position == inappCameraRow) {
+                        String t = LocaleController.getString("InAppCamera", R.string.InAppCamera);
+                        String info = LocaleController.getString("InAppCameraInfo", R.string.InAppCameraInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("inappCamera", true), false, false);
                     }
                     break;
                 }
@@ -171,6 +185,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         public boolean isEnabled(RecyclerView.ViewHolder holder) {
             int position = holder.getAdapterPosition();
             boolean fork = position == squareAvatarsRow
+                        || position == inappCameraRow;
                         || position == pinOrderRow;
             return fork;
         }
@@ -213,7 +228,9 @@ public int getItemViewType(int position) {
                 return 1;
             } else if (0 == 1) {
                 return 2;
-            } else if (position == squareAvatarsRow || position == pinOrderRow) {
+            } else if (position == squareAvatarsRow 
+                || position == inappCameraRow 
+                || position == pinOrderRow) {
                 return 3;
             } else if (position == sectionRow1) {
                 return 4;
