diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 278334b6f..b8bf62c48 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -63,7 +63,6 @@
     <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS"/>
     <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ"/>
     <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE"/>
-
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" tools:node="replace" />
 
     <application
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
index 6cdc9a234..f3a739477 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
@@ -1,14 +1,20 @@
 package org.cloudveil.messenger.service;
 
 import android.app.Activity;
+import android.app.Notification;
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
 import android.app.Service;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.os.Build;
 import android.os.Handler;
 import android.os.IBinder;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.v4.app.NotificationCompat;
+import android.support.v4.content.ContextCompat;
 
 import com.google.gson.Gson;
 
@@ -60,7 +66,7 @@ public static void startDataChecking(int accountNum, @NonNull Context context) {
         Intent intent = new Intent(ACTION_CHECK_CHANNELS);
         intent.putExtra(EXTRA_ACCOUNT_NUMBER, accountNum);
         intent.setClass(context, ChannelCheckingService.class);
-        context.startService(intent);
+        ContextCompat.startForegroundService(context, intent);
     }
 
     public static void startDataChecking(int accountNum, long dialogId, @NonNull Context context) {
@@ -68,7 +74,7 @@ public static void startDataChecking(int accountNum, long dialogId, @NonNull Con
         intent.setClass(context, ChannelCheckingService.class);
         intent.putExtra(EXTRA_ADDITION_DIALOG_ID, dialogId);
         intent.putExtra(EXTRA_ACCOUNT_NUMBER, accountNum);
-        context.startService(intent);
+        ContextCompat.startForegroundService(context, intent);
     }
 
     @Override
@@ -84,9 +90,29 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
             handler.postDelayed(checkDataRunnable, DEBOUNCE_TIME_MS);
         }
+
         return super.onStartCommand(intent, flags, startId);
     }
 
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            String CHANNEL_ID = "CVM channel 1";
+            NotificationChannel channel = new NotificationChannel(CHANNEL_ID,
+                    "CVM channel",
+                    NotificationManager.IMPORTANCE_NONE);
+
+            ((NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE)).createNotificationChannel(channel);
+
+            Notification notification = new NotificationCompat.Builder(this, CHANNEL_ID)
+                    .setContentTitle("")
+                    .setContentText("").build();
+
+            startForeground(1, notification);
+        }
+    }
+
     Runnable checkDataRunnable = new Runnable() {
         @Override
         public void run() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index f9ca593ac..526c52b90 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -33,12 +33,14 @@
 import android.text.style.CharacterStyle;
 import android.text.style.ClickableSpan;
 import android.text.style.URLSpan;
+import android.util.Log;
 import android.util.StateSet;
 import android.view.MotionEvent;
 import android.view.SoundEffectConstants;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewStructure;
+import android.widget.Toast;
 
 import org.cloudveil.messenger.GlobalSecuritySettings;
 import org.telegram.PhoneFormat.PhoneFormat;
@@ -92,20 +94,35 @@
 
     public interface ChatMessageCellDelegate {
         void didPressedUserAvatar(ChatMessageCell cell, TLRPC.User user);
+
         void didPressedViaBot(ChatMessageCell cell, String username);
+
         void didPressedChannelAvatar(ChatMessageCell cell, TLRPC.Chat chat, int postId);
+
         void didPressedCancelSendButton(ChatMessageCell cell);
+
         void didLongPressed(ChatMessageCell cell);
+
         void didPressedReplyMessage(ChatMessageCell cell, int id);
+
         void didPressedUrl(MessageObject messageObject, CharacterStyle url, boolean longPress);
+
         void needOpenWebView(String url, String title, String description, String originalUrl, int w, int h);
+
         void didPressedImage(ChatMessageCell cell);
+
         void didPressedShare(ChatMessageCell cell);
+
         void didPressedOther(ChatMessageCell cell);
+
         void didPressedBotButton(ChatMessageCell cell, TLRPC.KeyboardButton button);
+
         void didPressedInstantButton(ChatMessageCell cell, int type);
+
         boolean isChatAdminCell(int uid);
+
         boolean needPlayMessage(MessageObject messageObject);
+
         boolean canPerformActions();
     }
 
@@ -202,7 +219,7 @@
     private boolean instantButtonPressed;
     private Drawable instantViewSelectorDrawable;
     private RectF instantButtonRect = new RectF();
-    private int pressedState[] = new int[] {android.R.attr.state_enabled, android.R.attr.state_pressed};
+    private int pressedState[] = new int[]{android.R.attr.state_enabled, android.R.attr.state_pressed};
 
     private RoundVideoPlayingDrawable roundVideoPlayingDrawable;
 
@@ -970,8 +987,10 @@ private boolean checkPhotoImageMotionEvent(MotionEvent event) {
         int x = (int) event.getX();
         int y = (int) event.getY();
 
+        int action = event.getAction();
+
         boolean result = false;
-        if (event.getAction() == MotionEvent.ACTION_DOWN) {
+        if (action == MotionEvent.ACTION_DOWN) {
             boolean area2 = false;
             int side = AndroidUtilities.dp(48);
             if (miniButtonState >= 0) {
@@ -1019,7 +1038,7 @@ private boolean checkPhotoImageMotionEvent(MotionEvent event) {
                 }
             }
         } else {
-            if (event.getAction() == MotionEvent.ACTION_UP) {
+            if (action == MotionEvent.ACTION_UP) {
                 if (buttonPressed == 1) {
                     buttonPressed = 0;
                     playSoundEffect(SoundEffectConstants.CLICK);
@@ -1177,8 +1196,8 @@ public boolean onTouchEvent(MotionEvent event) {
         }
 
         //hacky hack
-        if(MediaController.getInstance().isAudioTrackPlaying()) {
-            if(event.getAction() == MotionEvent.ACTION_CANCEL) {
+        if (MediaController.getInstance().isAudioTrackPlaying()) {
+            if (event.getAction() == MotionEvent.ACTION_CANCEL) {
                 event.setAction(MotionEvent.ACTION_UP);
             }
         }
@@ -1262,7 +1281,7 @@ public boolean onTouchEvent(MotionEvent event) {
                         } else {
                             replyEnd = replyStartX + backgroundDrawableRight;
                         }
-                        if (x >= replyStartX && x <= replyEnd && y >= replyStartY && y <= replyStartY + AndroidUtilities.dp(35)){
+                        if (x >= replyStartX && x <= replyEnd && y >= replyStartY && y <= replyStartY + AndroidUtilities.dp(35)) {
                             replyPressed = true;
                             result = true;
                         }
@@ -1347,7 +1366,7 @@ public boolean onTouchEvent(MotionEvent event) {
                         } else {
                             replyEnd = replyStartX + backgroundDrawableRight;
                         }
-                        if (!(x >= replyStartX && x <= replyEnd && y >= replyStartY && y <= replyStartY + AndroidUtilities.dp(35))){
+                        if (!(x >= replyStartX && x <= replyEnd && y >= replyStartY && y <= replyStartY + AndroidUtilities.dp(35))) {
                             replyPressed = false;
                         }
                     }
@@ -1673,7 +1692,7 @@ private boolean isUserDataChanged() {
         TLRPC.FileLocation newPhoto = null;
 
         if (isAvatarVisible) {
-            if (currentUser != null && currentUser.photo != null){
+            if (currentUser != null && currentUser.photo != null) {
                 newPhoto = currentUser.photo.photo_small;
             } else if (currentChat != null && currentChat.photo != null) {
                 newPhoto = currentChat.photo.photo_small;
@@ -2031,7 +2050,7 @@ private void calcBackgroundWidth(int maxWidth, int timeMore, int maxChildWidth)
             totalHeight += AndroidUtilities.dp(14);
             hasNewLineForTime = true;
             backgroundWidth = Math.max(maxChildWidth, currentMessageObject.lastLineWidth) + AndroidUtilities.dp(31);
-            backgroundWidth = Math.max(backgroundWidth, (currentMessageObject.isOutOwner() ? timeWidth + AndroidUtilities.dp(17) : timeWidth)+ AndroidUtilities.dp(31));
+            backgroundWidth = Math.max(backgroundWidth, (currentMessageObject.isOutOwner() ? timeWidth + AndroidUtilities.dp(17) : timeWidth) + AndroidUtilities.dp(31));
         } else {
             int diff = maxChildWidth - currentMessageObject.lastLineWidth;
             if (diff >= 0 && diff <= timeMore) {
@@ -3300,21 +3319,21 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             DataQuery.getInstance(currentAccount).loadStickerSetAndSendToServer(messageObject.getInputStickerSet());
                         }
                     } else {
-                    if (messageObject.attachPathExists) {
-                        photoImage.setImage(null, messageObject.messageOwner.attachPath,
-                                String.format(Locale.US, "%d_%d", photoWidth, photoHeight),
-                                null,
-                                currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null,
-                                "b1",
-                                messageObject.messageOwner.media.document.size, "webp", 1);
-                    } else if (messageObject.messageOwner.media.document.id != 0) {
-                        photoImage.setImage(messageObject.messageOwner.media.document, null,
-                                String.format(Locale.US, "%d_%d", photoWidth, photoHeight),
-                                null,
-                                currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null,
-                                "b1",
-                                messageObject.messageOwner.media.document.size, "webp", 1);
-                    }
+                        if (messageObject.attachPathExists) {
+                            photoImage.setImage(null, messageObject.messageOwner.attachPath,
+                                    String.format(Locale.US, "%d_%d", photoWidth, photoHeight),
+                                    null,
+                                    currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null,
+                                    "b1",
+                                    messageObject.messageOwner.media.document.size, "webp", 1);
+                        } else if (messageObject.messageOwner.media.document.id != 0) {
+                            photoImage.setImage(messageObject.messageOwner.media.document, null,
+                                    String.format(Locale.US, "%d_%d", photoWidth, photoHeight),
+                                    null,
+                                    currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null,
+                                    "b1",
+                                    messageObject.messageOwner.media.document.size, "webp", 1);
+                        }
                     }
                     //CloudVeil end
                 } else {
@@ -4861,7 +4880,7 @@ private void drawContent(Canvas canvas) {
                 setDrawableBounds(phone, x + AndroidUtilities.dp(205), otherY = AndroidUtilities.dp(22));
                 phone.draw(canvas);
             } else if (currentMessageObject.type == 12) {
-                Theme.chat_contactNamePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ?  Theme.key_chat_outContactNameText : Theme.key_chat_inContactNameText));
+                Theme.chat_contactNamePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outContactNameText : Theme.key_chat_inContactNameText));
                 Theme.chat_contactPhonePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outContactPhoneText : Theme.key_chat_inContactPhoneText));
                 if (titleLayout != null) {
                     canvas.save();
@@ -5362,7 +5381,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
                 if (!FileLoader.getInstance(currentAccount).isLoadingFile(fileName)) {
                     if (!cancelLoading &&
                             (documentAttachType == 0 && DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject) ||
-                                    documentAttachType == DOCUMENT_ATTACH_TYPE_GIF  && MessageObject.isNewGifDocument(documentAttach) && DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject))) {
+                                    documentAttachType == DOCUMENT_ATTACH_TYPE_GIF && MessageObject.isNewGifDocument(documentAttach) && DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject))) {
                         progressVisible = true;
                         buttonState = 1;
                     } else {
@@ -5775,7 +5794,7 @@ private void measureTime(MessageObject messageObject) {
             edited = (messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_EDITED) != 0 || messageObject.isEditing();
         } else {
             edited = false;
-            for (int a = 0, size = currentMessagesGroup.messages.size(); a < size; a++){
+            for (int a = 0, size = currentMessagesGroup.messages.size(); a < size; a++) {
                 MessageObject object = currentMessagesGroup.messages.get(a);
                 if ((object.messageOwner.flags & TLRPC.MESSAGE_FLAG_EDITED) != 0 || object.isEditing()) {
                     edited = true;
@@ -5942,6 +5961,11 @@ private void setMessageObjectInternal(MessageObject messageObject) {
                 currentPhoto = null;
                 avatarDrawable.setInfo(messageObject.messageOwner.from_id, null, null, false);
             }
+            //CloudVeil start
+            if(GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+                currentPhoto = null;
+            }
+            //CloudVeil end
             avatarImage.setImage(currentPhoto, "50_50", avatarDrawable, null, 0);
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
index 462a9be3b..99a067294 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
@@ -16,6 +16,7 @@
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 
+import org.cloudveil.messenger.GlobalSecuritySettings;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -201,6 +202,12 @@ public void update(int mask) {
             }
         }
 
+        //CloudVeil start
+        if(GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+            photo = null;
+        }
+        //CloudVeil end
+
         if (mask != 0) {
             boolean continueUpdate = false;
             if ((mask & MessagesController.UPDATE_MASK_AVATAR) != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 74b7e8a3a..2ffc5ab8c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -441,12 +441,6 @@
 
         @Override
         public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
-            //CloudVeil start
-            if (GlobalSecuritySettings.getLockDisableOthersPhoto()) {
-                return null;
-            }
-            //CloudVeil end
-
             int count = chatListView.getChildCount();
 
             for (int a = 0; a < count; a++) {
@@ -12387,6 +12381,7 @@ public void didPressedImage(ChatMessageCell cell) {
                             if (message.isVideo()) {
                                 sendSecretMessageRead(message);
                             }
+
                             PhotoViewer.getInstance().setParentActivity(getParentActivity());
                             if (PhotoViewer.getInstance().openPhoto(message, message.type != 0 ? dialog_id : 0, message.type != 0 ? mergeDialogId : 0, photoViewerProvider)) {
                                 PhotoViewer.getInstance().setParentChatActivity(ChatActivity.this);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 59af6cbd7..23db68dde 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -6827,6 +6827,7 @@ public boolean openPhoto(final MessageObject messageObject, final TLRPC.FileLoca
             wm.addView(windowView, windowLayoutParams);
         } catch (Exception e) {
             FileLog.e(e);
+            Toast.makeText(ApplicationLoader.applicationContext, "openPhoto 33", Toast.LENGTH_SHORT).show();
             return false;
         }
 
@@ -7034,6 +7035,8 @@ public void run() {
             containerView.setAlpha(1.0f);
             onPhotoShow(messageObject, fileLocation, messages, documents, photos, index, object);
         }
+
+
         return true;
     }
 
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/logo_middle.png b/TMessagesProj/src/main/res/drawable-hdpi/logo_middle.png
new file mode 100644
index 000000000..880dc2bfc
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/logo_middle.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/logo_middle.png b/TMessagesProj/src/main/res/drawable-mdpi/logo_middle.png
new file mode 100644
index 000000000..00d3c9f0b
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/logo_middle.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/logo_middle.png b/TMessagesProj/src/main/res/drawable-xhdpi/logo_middle.png
new file mode 100644
index 000000000..4ef872b9a
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/logo_middle.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/logo_middle.png b/TMessagesProj/src/main/res/drawable-xxhdpi/logo_middle.png
new file mode 100644
index 000000000..ebdd3b8ad
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/logo_middle.png differ
