diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 28a7a78dd..d6db9a60a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -1540,7 +1540,7 @@ private void updateSelectedCount() {
 
 
     //TODO-aragats new
-    private void onPhotoShowNew(final Post post, int index, final PlaceProviderObject object) {
+    private void onPhotoShow(final Post post, final ArrayList<Object> photos, int index, final PlaceProviderObject object) {
         classGuid = ConnectionsManager.getInstance().generateClassGuid();
         //TODO-aragat new
         currentPost = null;
@@ -1565,7 +1565,7 @@ private void onPhotoShowNew(final Post post, int index, final PlaceProviderObjec
         menuItem.setVisibility(View.VISIBLE);
         bottomLayout.setVisibility(View.VISIBLE);
 //        shareButton.setVisibility(View.GONE);
-        shareButton.setVisibility(View.VISIBLE);
+        shareButton.setVisibility(post != null ? View.VISIBLE : View.GONE);
         menuItem.hideSubItem(gallery_menu_showall);
         ViewProxy.setTranslationY(actionBar, 0);
         ViewProxy.setTranslationY(pickerView, 0);
@@ -1605,73 +1605,7 @@ private void onPhotoShowNew(final Post post, int index, final PlaceProviderObjec
             imagesPostArr.add(post);
             menuItem.hideSubItem(gallery_menu_showall);
             setImageIndex(0, true);
-        }
-
-    }
-
-
-    //TODO PhotoPicker
-    private void onPhotoShow(final ArrayList<Object> photos, int index, final PlaceProviderObject object) {
-        classGuid = ConnectionsManager.getInstance().generateClassGuid();
-        //TODO-aragat new
-        currentPost = null;
-        //
-        currentPathObject = null;
-        currentIndex = -1;
-        currentFileNames[0] = null;
-        currentFileNames[1] = null;
-        currentFileNames[2] = null;
-        totalImagesCount = 0;
-        currentEditMode = 0;
-        needSearchImageInArr = false;
-        needCaptionLayout = false;
-        canShowBottom = true;
-        //TODO-aragats new
-        imagesPostArr.clear();
-        //
-        imagesArrLocationsSizes.clear();
-        imagesArrLocals.clear();
-        containerView.setPadding(0, 0, 0, 0);
-        currentThumb = object != null ? object.thumb : null;
-        menuItem.setVisibility(View.VISIBLE);
-        bottomLayout.setVisibility(View.VISIBLE);
-        shareButton.setVisibility(View.GONE);
-        menuItem.hideSubItem(gallery_menu_showall);
-        ViewProxy.setTranslationY(actionBar, 0);
-        ViewProxy.setTranslationY(pickerView, 0);
-        ViewProxy.setAlpha(checkImageView, 1.0f);
-        ViewProxy.setAlpha(pickerView, 1.0f);
-        checkImageView.clearAnimation();
-        pickerView.clearAnimation();
-        editorDoneLayout.clearAnimation();
-        checkImageView.setVisibility(View.GONE);
-        pickerView.setVisibility(View.GONE);
-        cropItem.setVisibility(View.GONE);
-        tuneItem.setVisibility(View.GONE);
-        captionItem.setVisibility(View.GONE);
-        captionDoneItem.setVisibility(View.GONE);
-        captionEditText.clearAnimation();
-        captionEditText.setVisibility(View.GONE);
-        editorDoneLayout.setVisibility(View.GONE);
-        captionTextView.setTag(null);
-        captionTextView.clearAnimation();
-        captionTextView.setVisibility(View.INVISIBLE);
-        if (photoCropView != null) {
-            photoCropView.clearAnimation();
-            photoCropView.setVisibility(View.GONE);
-        }
-        if (photoFilterView != null) {
-            photoFilterView.clearAnimation();
-            photoFilterView.setVisibility(View.GONE);
-        }
-
-        for (int a = 0; a < 3; a++) {
-            if (radialProgressViews[a] != null) {
-                radialProgressViews[a].setBackgroundState(-1, false);
-            }
-        }
-
-        if (photos != null) {
+        } else if (photos != null) {
             if (sendPhotoType == 0) {
                 checkImageView.setVisibility(View.VISIBLE);
             }
@@ -1684,25 +1618,11 @@ private void onPhotoShow(final ArrayList<Object> photos, int index, final PlaceP
             canShowBottom = false;
             Object obj = imagesArrLocals.get(index);
             cropItem.setVisibility(obj instanceof MediaController.PhotoEntry || obj instanceof MediaController.SearchImage && ((MediaController.SearchImage) obj).type == 0 ? View.VISIBLE : View.GONE);
-//            if (parentChatActivity != null && parentChatActivity.currentEncryptedChat == null) {
-//                mentionsAdapter.setChatInfo(parentChatActivity.info);
-//                mentionsAdapter.setNeedUsernames(parentChatActivity.currentChat != null);
-//                captionItem.setVisibility(cropItem.getVisibility());
-//                captionEditText.setVisibility(cropItem.getVisibility());
-//                needCaptionLayout = captionItem.getVisibility() == View.VISIBLE;
-//                if (needCaptionLayout) {
-//                    RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) captionEditText.getLayoutParams();
-//                    layoutParams.bottomMargin = -AndroidUtilities.dp(400);
-//                    captionEditText.setLayoutParams(layoutParams);
-//                    captionEditText.onCreate();
-//                }
-//            }
             if (Build.VERSION.SDK_INT >= 16) {
                 tuneItem.setVisibility(cropItem.getVisibility());
             }
             updateSelectedCount();
         }
-
     }
 
 
@@ -2098,7 +2018,7 @@ public void openPhoto(final ArrayList<Object> photos, final int index, final Pho
         toggleActionBar(true, false);
         backgroundDrawable.setAlpha(255);
         ViewProxy.setAlpha(containerView, 1.0f);
-        onPhotoShow(photos, index, object);
+        onPhotoShow(null, photos, index, object);
     }
 
 
@@ -2169,7 +2089,7 @@ public void openPhotoNew(final Post post, final int index, final PhotoViewerProv
         if (object != null) {
             disableShowCheck = true;
             animationInProgress = 1;
-            onPhotoShowNew(post, index, object);
+            onPhotoShow(post, null, index, object);
 
             final Rect drawRegion = object.imageReceiver.getDrawRegion();
             int orientation = object.imageReceiver.getOrientation();
@@ -2304,7 +2224,7 @@ public void run() {
         } else {
             backgroundDrawable.setAlpha(255);
             ViewProxy.setAlpha(containerView, 1.0f);
-            onPhotoShowNew(post, index, object);
+            onPhotoShow(post, null, index, object);
         }
     }
 
