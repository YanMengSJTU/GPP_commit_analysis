diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 8f48c8a99..49153b8fe 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -123,7 +123,7 @@ public void addPost(final Post post) {
         RestManager.getInstance().uploadImage(new FileUploadRequest(post.getImage().getUrl(), post.getImage().getType()), new Callback<List<Image>>() {
             @Override
             public void onResponse(Response<List<Image>> response, Retrofit retrofit) {
-                post.setImages(response.body());
+                post.setImages(response.body()); // TODO chek whether images are not empty
                 savePost(post);
             }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index 657754c34..b092f0c94 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -11,6 +11,7 @@
 import org.telegram.utils.StringUtils;
 
 import ru.aragats.wgo.ApplicationLoader;
+import ru.aragats.wgo.rest.dto.Coordinates;
 
 import java.io.IOException;
 import java.util.List;
@@ -126,6 +127,31 @@ public String getAddress(Context context, double longitude, double latitude, Str
         return address;
     }
 
+    public String getAddress(Context context, List<Double> coordinates, String defaultVal) {
+        Geocoder geocoder;
+        List<Address> addresses;
+        String address;
+//        geocoder = new Geocoder(context, Locale.getDefault()); //TODO de ?? should be english ? or ?? in real time. Save in ENG, but display in locale in real-time
+        geocoder = new Geocoder(context, Locale.ENGLISH); //TODO de ?? should be english ? or ?? in real time. Save in ENG, but display in locale in real-time
+        try {
+            addresses = geocoder.getFromLocation(coordinates.get(1), coordinates.get(0), 1); // Here 1 represent max location result to returned, by documents it recommended 1 to 5
+            address = addresses.get(0).getAddressLine(0); // If any additional address line present than only, check with max available address lines by getMaxAddressLineIndex()
+            if (StringUtils.isEmpty(address)) {
+                address = defaultVal;
+            }
+//            String city = addresses.get(0).getLocality();
+//            String state = addresses.get(0).getAdminArea();
+//            String country = addresses.get(0).getCountryName();
+//            String postalCode = addresses.get(0).getPostalCode();
+//            String knownName = addresses.get(0).getFeatureName(); // Only if available else return NULL
+        } catch (IOException e) {
+//            e.printStackTrace();
+            //TODO logger
+            address = defaultVal;
+        }
+        return address;
+    }
+
     public String getAddress(Geocoder geocoder, double longitude, double latitude) {
         List<Address> addresses;
         try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
index 340652221..c4795c602 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
@@ -41,6 +41,8 @@
 import org.telegram.ui.Components.URLSpanNoUnderline;
 import org.telegram.utils.StringUtils;
 
+import java.util.Locale;
+
 import ru.aragats.wgo.R;
 
 public class PostCell extends BaseCell {
@@ -267,7 +269,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int marginHeight = AndroidUtilities.dp(82);
         if (StringUtils.isEmpty(post.getText())) {
             textHeight = 0;
-            marginHeight = AndroidUtilities.dp(72);
+            marginHeight = AndroidUtilities.dp(72); //0 was
         }
         setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + marginHeight + textHeight + (useSeparator ? 1 : 0));
 
@@ -394,10 +396,12 @@ public void buildLayout() {
 
             lastPrintString = null;
 
+            //TODO could be NPE postCoordinates !!!
             String address = "";
             address = post.getVenue() != null ? post.getVenue().getAddress() :
-                    post.getPostCoordinates().getCoordinates().get(0) + ", "
-                            + post.getPostCoordinates().getCoordinates().get(0);
+                    String.format(Locale.US, "(%f,%f)",
+                            post.getPostCoordinates().getCoordinates().get(1),
+                            post.getPostCoordinates().getCoordinates().get(0));
 
 
             checkMessage = false;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index a6201d9af..d71a689d6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -54,6 +54,7 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
 
+import ru.aragats.wgo.rest.dto.Coordinates;
 import ru.aragats.wgo.rest.dto.Post;
 import ru.aragats.wgo.rest.dto.Venue;
 
@@ -68,6 +69,7 @@
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.MapPlaceholderDrawable;
+import org.telegram.utils.CollectionUtils;
 import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
@@ -209,6 +211,10 @@ public void onItemClick(int id) {
                 }
             } else {
                 actionBar.setTitle(LocaleController.getString("ChatLocation", R.string.ChatLocation));
+                if (venue != null && venue.getCoordinates() != null && !CollectionUtils.isEmpty(venue.getCoordinates().getCoordinates(), 2)) {
+                    List<Double> coordinates = venue.getCoordinates().getCoordinates();
+                    actionBar.setSubtitle(String.format(Locale.US, "(%f,%f)", coordinates.get(1), coordinates.get(0)));
+                }
             }
             menu.addItem(share, R.drawable.share);
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index f258d2f12..7f3fe07f3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -240,9 +240,11 @@ public void onItemClick(final int id) {
                     }
                     finishFragment();
                 } else if (id == done_button) {
-                    Toast.makeText(((Context) getParentActivity()), "DONE BUTTON is CLICKED", Toast.LENGTH_SHORT).show();
+                    Toast.makeText(getParentActivity(), "DONE BUTTON is CLICKED", Toast.LENGTH_SHORT).show();
                     Post post = null;
-                    if (!CollectionUtils.isEmpty(posts) && posts.get(0) != null && (venue != null || userCoordinates != null)) {
+                    if (!CollectionUtils.isEmpty(posts) && posts.get(0) != null
+                            && venue != null && venue.getCoordinates() != null
+                            && userCoordinates != null) {
                         post = posts.get(0);
                         post.setVenue(venue);
 
@@ -264,12 +266,18 @@ public void onItemClick(final int id) {
 
                     //TODO many check text, venue, coordinates and so on.
                     if (post != null && post.getPostCoordinates() != null) {
-                        final Post finalPost = post;
                         progressDialog.show();
+                        if (StringUtils.isEmpty(post.getVenue().getName())) {
+                            List<Double> coordinates = post.getVenue().getCoordinates().getCoordinates();
+                            String defaultAddress = String.format(Locale.US, "(%f,%f)", coordinates.get(1), coordinates.get(0)); // TODO the same value shoudld be int venue.getAddress();
+                            String address = LocationManagerHelper.getInstance().getAddress(getParentActivity(),
+                                    coordinates, defaultAddress);
+                            post.getVenue().setAddress(address);
+                        }
 //                        AndroidUtilities.runOnUIThread(new Runnable() {
 //                            @Override
 //                            public void run() {
-                        PostsController.getInstance().addPost(finalPost);
+                        PostsController.getInstance().addPost(post);
 //                                progressDialog.dismiss();
 //                                if (postCreateActivityEnterView != null) {
 //                                    postCreateActivityEnterView.hideEmojiPopup();
@@ -758,13 +766,20 @@ private void updateSubtitle() {
         }
 //        CharSequence addressString = "printing";
         CharSequence addressString = LocaleController.getString("Address", R.string.Address);
-        if (venue != null && !StringUtils.isEmpty(venue.getAddress())) {
-            addressString = venue.getAddress();
+        if (venue != null) {
+            if (!StringUtils.isEmpty(venue.getAddress())) {
+                addressString = venue.getAddress();
+            } else if (venue.getCoordinates() != null && !CollectionUtils.isEmpty(venue.getCoordinates().getCoordinates(), 2)) {
+                List<Double> coordinates = venue.getCoordinates().getCoordinates();
+                addressString = String.format(Locale.US, "(%f,%f)", coordinates.get(1), coordinates.get(0));
+            }
         } else if (userCoordinates != null) {
-            addressString = LocationManagerHelper.getInstance().getAddress(getParentActivity(),
-                    userCoordinates.getCoordinates().get(0),
-                    userCoordinates.getCoordinates().get(1),
-                    userCoordinates.getCoordinates().get(0) + ", " + userCoordinates.getCoordinates().get(1));
+//            addressString = LocationManagerHelper.getInstance().getAddress(getParentActivity(),
+//                    userCoordinates.getCoordinates().get(0),
+//                    userCoordinates.getCoordinates().get(1),
+//                    userCoordinates.getCoordinates().get(0) + ", " + userCoordinates.getCoordinates().get(1));
+            addressString = String.format(Locale.US, "(%f,%f)",
+                    userCoordinates.getCoordinates().get(1), userCoordinates.getCoordinates().get(0));
         }
 //        addressString = TextUtils.replace(addressString, new String[]{"..."}, new String[]{""});
         addressTextView.setText(addressString);
@@ -1423,11 +1438,12 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
                 }
                 venue.setName(location.title);
                 venue.setAddress(location.address);
-                if (StringUtils.isEmpty(venue.getAddress())) {
-                    String address = LocationManagerHelper.getInstance().getAddress(getParentActivity(),
-                            location.geo._long, location.geo.lat, location.geo._long + ", " + location.geo.lat);
-                    venue.setAddress(address);
-                }
+//                if (StringUtils.isEmpty(venue.getAddress())) {
+////                    String address = LocationManagerHelper.getInstance().getAddress(getParentActivity(),
+////                            location.geo._long, location.geo.lat, location.geo._long + ", " + location.geo.lat);
+//                    String address = String.format(Locale.US, "(%f,%f)", location.geo.lat, location.geo._long);
+//                    venue.setAddress(address);
+//                }
                 PostCreateActivity.this.venue = venue;
 
 //                location.iconUrl;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index cec5dc117..402d374a7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -577,7 +577,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                 //TODO fix it.
                 if (visibleItemCount > 0) {
                     if (layoutManager.findLastVisibleItemPosition() == PostsController.getInstance().posts.size() - 1) {
-                        String offset = PostsController.getInstance().posts.get(PostsController.getInstance().posts.size() - 1).getId();
+                        String offset = PostsController.getInstance().posts.get(PostsController.getInstance().posts.size() - 1).getId(); // TODO When empty list. java.lang.ArrayIndexOutOfBoundsException: length=12; index=-1
                         PostsController.getInstance().loadPosts(offset, Constants.POST_COUNT, false, true);
                     }
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/utils/CollectionUtils.java b/TMessagesProj/src/main/java/org/telegram/utils/CollectionUtils.java
index c47e030e5..195a87858 100644
--- a/TMessagesProj/src/main/java/org/telegram/utils/CollectionUtils.java
+++ b/TMessagesProj/src/main/java/org/telegram/utils/CollectionUtils.java
@@ -12,6 +12,12 @@ public static boolean isEmpty(List list) {
             return true;
         }
         return false;
+    }
 
+    public static boolean isEmpty(List list, int size) {
+        if (list == null || list.size() != size) {
+            return true;
+        }
+        return false;
     }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
index 7b4e54850..34005fd4c 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
@@ -9,6 +9,7 @@
  */
 public class RestClient {
     private static final String BASE_URL = "http://192.168.0.101:8080/";
+//    private static final String BASE_URL = "http://aragatss-macbook-pro.local:8080/";
     private RestService restService;
 
 
