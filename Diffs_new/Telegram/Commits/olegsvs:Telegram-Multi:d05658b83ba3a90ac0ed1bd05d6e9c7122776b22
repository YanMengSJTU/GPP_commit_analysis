diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index e0030b9ad..d0fa03dd9 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -21,6 +21,7 @@ dependencies {
     compile 'com.googlecode.mp4parser:isoparser:1.0.6'
     compile 'com.stripe:stripe-android:2.0.2'
     compile 'commons-io:commons-io:2.4'
+    compile 'com.android.support:design:25.3.0'
 }
 
 android {
@@ -47,6 +48,7 @@ android {
 
     dexOptions {
         jumboMode = true
+        javaMaxHeapSize "2g"
     }
 
     compileOptions {
diff --git a/TMessagesProj/config/release/AndroidManifest.xml b/TMessagesProj/config/release/AndroidManifest.xml
index f5546c19e..897527ae4 100644
--- a/TMessagesProj/config/release/AndroidManifest.xml
+++ b/TMessagesProj/config/release/AndroidManifest.xml
@@ -43,7 +43,7 @@
             </intent-filter>
         </receiver>
         <service
-            android:name="org.telegram.messenger..GcmPushListenerService"
+            android:name="org.telegram.messenger.GcmPushListenerService"
             android:exported="false" >
             <intent-filter>
                 <action android:name="com.google.android.c2dm.intent.RECEIVE" />
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
index f3d49e41d..6d6a3d12c 100755
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
@@ -8,7 +8,7 @@
 
 package org.telegram.SQLite;
 
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ApplicationLoader;
 
@@ -23,7 +23,7 @@ public int getSQLiteHandle() {
 	}
 
 	public SQLiteDatabase(String fileName) throws SQLiteException {
-		sqliteHandle = opendb(fileName, ApplicationLoader.getFilesDirFixed().getPath()+ Change_user_helper.getUserTag());
+		sqliteHandle = opendb(fileName, ApplicationLoader.getFilesDirFixed().getPath()+ ChangeUserHelper.getUserTag());
 		isOpen = true;
 	}
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 3bc80c3b5..00361619f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -51,7 +51,7 @@
     public static volatile long mainInterfacePausedStageQueueTime;
 
     private static void convertConfig() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("dataconfig"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("dataconfig"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         if (preferences.contains("currentDatacenterId")) {
             SerializedData buffer = new SerializedData(32 * 1024);
             buffer.writeInt32(2);
@@ -79,7 +79,7 @@ private static void convertConfig() {
             }
 
             try {
-                File file = new File(getFilesDirFixed()+Change_user_helper.getUserTag(), "tgnet.dat");
+                File file = new File(getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "tgnet.dat");
                 RandomAccessFile fileOutputStream = new RandomAccessFile(file, "rws");
                 byte[] bytes = buffer.toByteArray();
                 fileOutputStream.writeInt(Integer.reverseBytes(bytes.length));
@@ -94,7 +94,7 @@ private static void convertConfig() {
     }
 
     public static File getFilesDirFixed() {
-        new File(String.valueOf(applicationContext.getFilesDir())+Change_user_helper.getUserTag()).mkdir();
+        new File(String.valueOf(applicationContext.getFilesDir())+ ChangeUserHelper.getUserTag()).mkdir();
         for (int a = 0; a < 10; a++) {
             File path = ApplicationLoader.applicationContext.getFilesDir();
             if (path != null) {
@@ -119,8 +119,8 @@ public static void postInitApplication() {
 
         applicationInited = true;
         SharedPreferences userID = ApplicationLoader.applicationContext.getSharedPreferences("userID", Context.MODE_PRIVATE);
-        Change_user_helper.setUserTag(userID.getString("userID","_user_0"));
-        Log.i("userTAG", "postInitApplication: " + Change_user_helper.getUserTag());
+        ChangeUserHelper.setUserTag(userID.getString("userID","_user_0"));
+        Log.i("userTAG", "postInitApplication: " + ChangeUserHelper.getUserTag());
         convertConfig();
 
         try {
@@ -151,7 +151,7 @@ public static void postInitApplication() {
         String langCode;
         String appVersion;
         String systemVersion;
-        String configPath = getFilesDirFixed().toString()+Change_user_helper.getUserTag();
+        String configPath = getFilesDirFixed().toString()+ ChangeUserHelper.getUserTag();
 
         try {
             langCode = LocaleController.getLocaleStringIso639();
@@ -178,7 +178,7 @@ public static void postInitApplication() {
             systemVersion = "SDK Unknown";
         }
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean enablePushConnection = preferences.getBoolean("pushConnection", true);
 
         MessagesController.getInstance();
@@ -232,7 +232,7 @@ public void run() {
     }*/
 
     public static void startPushService() {
-        SharedPreferences preferences = applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), MODE_PRIVATE);
+        SharedPreferences preferences = applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), MODE_PRIVATE);
 
         if (preferences.getBoolean("pushService", true)) {
             applicationContext.startService(new Intent(applicationContext, NotificationsService.class));
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Change_user_helper.java b/TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java
similarity index 91%
rename from TMessagesProj/src/main/java/org/telegram/messenger/Change_user_helper.java
rename to TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java
index 25908519d..148972e04 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Change_user_helper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java
@@ -6,7 +6,7 @@
  * Created by oleg.svs on 21.05.2017.
  */
 
-public class Change_user_helper {
+public class ChangeUserHelper {
     private static String userTag = "_user_0";
 
     static public void setUserTag(String tag) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ClearCacheService.java b/TMessagesProj/src/main/java/org/telegram/messenger/ClearCacheService.java
index 18e7270b9..0ea661f13 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ClearCacheService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ClearCacheService.java
@@ -29,7 +29,7 @@ public ClearCacheService() {
     protected void onHandleIntent(Intent intent) {
         ApplicationLoader.postInitApplication();
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         final int keepMedia = preferences.getInt("keep_media", 2);
         if (keepMedia == 2) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
index 9f85b2f2d..5aa064093 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ContactsController.java
@@ -118,7 +118,7 @@ public static ContactsController getInstance() {
     }
 
     public ContactsController() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (preferences.getBoolean("needGetStatuses", false)) {
             reloadContactsStatuses();
         }
@@ -179,7 +179,7 @@ public void run() {
     }
 
     public void checkInviteText() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         inviteText = preferences.getString("invitetext", null);
         int time = preferences.getInt("invitetexttime", 0);
         if (!updatingInviteText && (inviteText == null || time + 86400 < (int) (System.currentTimeMillis() / 1000))) {
@@ -195,7 +195,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                                 @Override
                                 public void run() {
                                     updatingInviteText = false;
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     editor.putString("invitetext", res.message);
                                     editor.putInt("invitetexttime", (int) (System.currentTimeMillis() / 1000));
@@ -1196,7 +1196,7 @@ public void run() {
 
     private void reloadContactsStatusesMaybe() {
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             long lastReloadStatusTime = preferences.getLong("lastReloadStatusTime", 0);
             if (lastReloadStatusTime < System.currentTimeMillis() - 1000 * 60 * 60 * 24) {
                 reloadContactsStatuses();
@@ -1208,7 +1208,7 @@ private void reloadContactsStatusesMaybe() {
 
     private void saveContactsLoadTime() {
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             preferences.edit().putLong("lastReloadStatusTime", System.currentTimeMillis()).commit();
         } catch (Exception e) {
             FileLog.e(e);
@@ -1823,7 +1823,7 @@ public void run() {
     public void reloadContactsStatuses() {
         saveContactsLoadTime();
         MessagesController.getInstance().clearFullUsers();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         final SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("needGetStatuses", true).commit();
         TLRPC.TL_contacts_getStatuses req = new TLRPC.TL_contacts_getStatuses();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
index 0b537d3ac..3e284942a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
@@ -97,7 +97,7 @@ public void start() {
         Utilities.stageQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
-                preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 for (int a = 0; a < maxRequestsCount; a++) {
                     startUploadRequest();
                 }
@@ -119,7 +119,7 @@ public void cancel() {
 
     private void cleanup() {
         if (preferences == null) {
-            preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         }
         preferences.edit().remove(fileKey + "_time").
                 remove(fileKey + "_size").
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
index 9f6782055..6e6f70454 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
@@ -255,7 +255,7 @@ public int compare(LocaleController.LocaleInfo o, LocaleController.LocaleInfo o2
         boolean override = false;
 
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             String lang = preferences.getString("language", null);
             if (lang != null) {
                 currentInfo = languagesDict.get(lang);
@@ -382,7 +382,7 @@ public boolean applyLanguageFile(File file) {
                     return false;
                 }
 
-                File finalFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), languageCode + ".xml");
+                File finalFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), languageCode + ".xml");
                 if (!AndroidUtilities.copyFile(file, finalFile)) {
                     return false;
                 }
@@ -423,7 +423,7 @@ public int compare(LocaleController.LocaleInfo o, LocaleController.LocaleInfo o2
     }
 
     private void saveOtherLanguages() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         String locales = "";
         for (LocaleInfo localeInfo : otherLanguages) {
@@ -457,7 +457,7 @@ public boolean deleteLanguage(LocaleInfo localeInfo) {
     }
 
     private void loadOtherLanguages() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("langconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         String locales = preferences.getString("locales", null);
         if (locales == null || locales.length() == 0) {
             return;
@@ -547,7 +547,7 @@ public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean fromF
                     if (override) {
                         languageOverride = localeInfo.shortName;
 
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         editor.putString("language", localeInfo.shortName);
                         editor.commit();
@@ -556,7 +556,7 @@ public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean fromF
             } else {
                 newLocale = systemDefaultLocale;
                 languageOverride = null;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.remove("language");
                 editor.commit();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
index 07783a0ae..d0a1ef0c9 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
@@ -617,7 +617,7 @@ public MediaController() {
         playerQueue = new DispatchQueue("playerQueue");
         fileDecodingQueue = new DispatchQueue("fileDecodingQueue");
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         mobileDataDownloadMask = preferences.getInt("mobileDataDownloadMask", AUTODOWNLOAD_MASK_PHOTO | AUTODOWNLOAD_MASK_AUDIO | AUTODOWNLOAD_MASK_MUSIC | AUTODOWNLOAD_MASK_GIF);
         wifiDownloadMask = preferences.getInt("wifiDownloadMask", AUTODOWNLOAD_MASK_PHOTO | AUTODOWNLOAD_MASK_AUDIO | AUTODOWNLOAD_MASK_MUSIC | AUTODOWNLOAD_MASK_GIF);
         roamingDownloadMask = preferences.getInt("roamingDownloadMask", 0);
@@ -2486,7 +2486,7 @@ public int getRepeatMode() {
 
     public void toggleShuffleMusic() {
         shuffleMusic = !shuffleMusic;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("shuffleMusic", shuffleMusic);
         editor.commit();
@@ -2510,7 +2510,7 @@ public void toggleRepeatMode() {
         if (repeatMode > 2) {
             repeatMode = 0;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("repeatMode", repeatMode);
         editor.commit();
@@ -3078,7 +3078,7 @@ public static String copyFileToCache(Uri uri, String ext) {
 
     public void toggleSaveToGallery() {
         saveToGallery = !saveToGallery;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("save_gallery", saveToGallery);
         editor.commit();
@@ -3087,7 +3087,7 @@ public void toggleSaveToGallery() {
 
     public void toggleAutoplayGifs() {
         autoplayGifs = !autoplayGifs;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("autoplay_gif", autoplayGifs);
         editor.commit();
@@ -3095,7 +3095,7 @@ public void toggleAutoplayGifs() {
 
     public void toogleRaiseToSpeak() {
         raiseToSpeak = !raiseToSpeak;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("raise_to_speak", raiseToSpeak);
         editor.commit();
@@ -3103,7 +3103,7 @@ public void toogleRaiseToSpeak() {
 
     public void toggleCustomTabs() {
         customTabs = !customTabs;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("custom_tabs", customTabs);
         editor.commit();
@@ -3111,7 +3111,7 @@ public void toggleCustomTabs() {
 
     public void toggleDirectShare() {
         directShare = !directShare;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putBoolean("direct_share", directShare);
         editor.commit();
@@ -3660,7 +3660,7 @@ private boolean convertVideo(final MessageObject messageObject) {
             }
         }
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("videoconvert"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("videoconvert"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         File inputFile = new File(videoPath);
         if (messageObject.getId() != 0) {
             boolean isPreviousOk = preferences.getBoolean("isPreviousOk", true);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index f27f14eae..a14684c92 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -38,7 +38,6 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ChatActivity;
 import org.telegram.ui.Components.AlertsCreator;
-import org.telegram.ui.LoginActivity;
 import org.telegram.ui.ProfileActivity;
 
 import java.util.ArrayList;
@@ -271,10 +270,10 @@ public MessagesController() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.messageReceivedByServer);
         addSupportUser();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         enableJoined = preferences.getBoolean("EnableContactJoined", true);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         secretWebpagePreview = preferences.getInt("secretWebpage2", 2);
         maxGroupCount = preferences.getInt("maxGroupCount", 200);
         maxMegagroupCount = preferences.getInt("maxMegagroupCount", 1000);
@@ -344,7 +343,7 @@ public void run() {
                 callPacketTimeout = config.call_packet_timeout_ms;
                 maxPinnedDialogsCount = config.pinned_dialogs_count_max;
 
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putInt("maxGroupCount", maxGroupCount);
                 //editor.putInt("maxBroadcastCount", maxBroadcastCount);
@@ -1289,7 +1288,7 @@ public void hideReportSpam(final long dialogId, TLRPC.User currentUser, TLRPC.Ch
         if (currentUser == null && currentChat == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("spam3_" + dialogId, 1);
         editor.commit();
@@ -1313,7 +1312,7 @@ public void reportSpam(final long dialogId, TLRPC.User currentUser, TLRPC.Chat c
         if (currentUser == null && currentChat == null && currentEncryptedChat == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("spam3_" + dialogId, 1);
         editor.commit();
@@ -1361,7 +1360,7 @@ public void loadPeerSettings(TLRPC.User currentUser, TLRPC.Chat currentChat) {
             return;
         }
         loadingPeerSettings.put(dialogId, true);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (preferences.getInt("spam3_" + dialogId, 0) == 1) {
             return;
         }
@@ -1380,7 +1379,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         @Override
                         public void run() {
                             loadingPeerSettings.remove(dialogId);
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.remove("spam_" + dialogId);
                             editor.putInt("spam3_" + dialogId, 1);
@@ -1406,7 +1405,7 @@ public void run() {
                         loadingPeerSettings.remove(dialogId);
                         if (response != null) {
                             TLRPC.TL_peerSettings res = (TLRPC.TL_peerSettings) response;
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             if (!res.report_spam) {
                                 editor.putInt("spam3_" + dialogId, 1);
@@ -3395,7 +3394,7 @@ public void run() {
     }
 
     private void applyDialogNotificationsSettings(long dialog_id, TLRPC.PeerNotifySettings notify_settings) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         int currentValue = preferences.getInt("notify2_" + dialog_id, 0);
         int currentValue2 = preferences.getInt("notifyuntil_" + dialog_id, 0);
         SharedPreferences.Editor editor = preferences.edit();
@@ -3450,7 +3449,7 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialog
             TLRPC.TL_dialog dialog = dialogs.get(a);
             if (dialog.peer != null && dialog.notify_settings instanceof TLRPC.TL_peerNotifySettings) {
                 if (editor == null) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     editor = preferences.edit();
                 }
                 int dialog_id;
@@ -4598,11 +4597,11 @@ public void run(TLObject response, TLRPC.TL_error error) {
     }
 
     public void performLogout(boolean byUser) {
-        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
         editor.clear().commit();
-        editor = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        editor = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
         editor.putLong("lastGifLoadTime", 0).putLong("lastStickersLoadTime", 0).commit();
-        editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
         editor.remove("gifhint").commit();
 
         if (byUser) {
@@ -7295,7 +7294,7 @@ public void run() {
                             TLRPC.TL_updateNotifySettings updateNotifySettings = (TLRPC.TL_updateNotifySettings) update;
                             if (update.notify_settings instanceof TLRPC.TL_peerNotifySettings && updateNotifySettings.peer instanceof TLRPC.TL_notifyPeer) {
                                 if (editor == null) {
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                     editor = preferences.edit();
                                 }
                                 long dialog_id;
@@ -7364,10 +7363,10 @@ public void run() {
                         } else if (update instanceof TLRPC.TL_updateNewStickerSet) {
                             StickersQuery.addNewStickerSet(update.stickerset);
                         } else if (update instanceof TLRPC.TL_updateSavedGifs) {
-                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
                             editor2.putLong("lastGifLoadTime", 0).commit();
                         } else if (update instanceof TLRPC.TL_updateRecentStickers) {
-                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor2 = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
                             editor2.putLong("lastStickersLoadTime", 0).commit();
                         } else if (update instanceof TLRPC.TL_updateDraftMessage) {
                             hasDraftUpdates = true;
@@ -7664,7 +7663,7 @@ private boolean isNotifySettingsMuted(TLRPC.PeerNotifySettings settings) {
     }
 
     public boolean isDialogMuted(long dialog_id) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         int mute_type = preferences.getInt("notify2_" + dialog_id, 0);
         if (mute_type == 2) {
             return true;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
index 9e1b72d44..3a95318fc 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
@@ -85,7 +85,7 @@ public DispatchQueue getStorageQueue() {
     }
 
     public void openDatabase(boolean first) {
-        cacheFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "cache4.db");
+        cacheFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "cache4.db");
 
         boolean createTable = false;
         //cacheFile.delete();
@@ -606,7 +606,7 @@ private void fixNotificationSettings() {
             public void run() {
                 try {
                     HashMap<Long, Long> ids = new HashMap<>();
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                     Map<String, ?> values = preferences.getAll();
                     for (Map.Entry<String, ?> entry : values.entrySet()) {
                         String key = entry.getKey();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java b/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java
index b59149467..2fc84d9f3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java
@@ -88,7 +88,7 @@ public void onCreate() {
         super.onCreate();
         ApplicationLoader.postInitApplication();
 
-        lastSelectedDialog = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getInt("auto_lastSelectedDialog", 0);
+        lastSelectedDialog = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getInt("auto_lastSelectedDialog", 0);
 
         mediaSession = new MediaSession(this, "MusicService");
         setSessionToken(mediaSession.getSessionToken());
@@ -396,7 +396,7 @@ public void onPlayFromMediaId(String mediaId, Bundle extras) {
                     return;
                 }
                 lastSelectedDialog = did;
-                ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("auto_lastSelectedDialog", did).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("auto_lastSelectedDialog", did).commit();
                 MediaController.getInstance().setPlaylist(arrayList, arrayList.get(id), false);
                 mediaSession.setQueue(arrayList1);
                 if (did > 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationDismissReceiver.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationDismissReceiver.java
index c258624b7..d26191473 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationDismissReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationDismissReceiver.java
@@ -17,7 +17,7 @@
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         preferences.edit().putInt("dismissDate", intent.getIntExtra("messageDate", 0)).commit();
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
index 2f55033ec..d704c7d6f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
@@ -98,7 +98,7 @@ public static NotificationsController getInstance() {
 
     public NotificationsController() {
         notificationManager = NotificationManagerCompat.from(ApplicationLoader.applicationContext);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         inChatSoundEnabled = preferences.getBoolean("EnableInChatSound", true);
 
         try {
@@ -163,7 +163,7 @@ public void run() {
                     FileLog.e(e);
                 }
                 setBadge(0);
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.clear();
                 editor.commit();
@@ -222,7 +222,7 @@ public void run() {
                     if (!ApplicationLoader.mainInterfacePaused) {
                         return;
                     }
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
 
                     boolean notifyDisabled = false;
                     int needVibrate = 0;
@@ -374,7 +374,7 @@ public void removeDeletedMessagesFromNotifications(final SparseArray<ArrayList<I
             @Override
             public void run() {
                 int old_unread_count = total_unread_count;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 for (int a = 0; a < deletedMessages.size(); a++) {
                     int key = deletedMessages.keyAt(a);
                     long dialog_id = -key;
@@ -543,7 +543,7 @@ public void run() {
 
                 int oldCount = popupArray.size();
                 HashMap<Long, Boolean> settingsCache = new HashMap<>();
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 boolean allowPinned = preferences.getBoolean("PinnedMessages", true);
                 int popup = 0;
 
@@ -641,7 +641,7 @@ public void processDialogsUpdateRead(final HashMap<Long, Integer> dialogsToUpdat
             @Override
             public void run() {
                 int old_unread_count = total_unread_count;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 for (HashMap.Entry<Long, Integer> entry : dialogsToUpdate.entrySet()) {
                     long dialog_id = entry.getKey();
 
@@ -739,7 +739,7 @@ public void run() {
                 pushMessagesDict.clear();
                 total_unread_count = 0;
                 personal_count = 0;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 HashMap<Long, Boolean> settingsCache = new HashMap<>();
 
                 if (messages != null) {
@@ -883,7 +883,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
             msg = LocaleController.getString("YouHaveNewMessage", R.string.YouHaveNewMessage);
         } else {
             if (chat_id == 0 && from_id != 0) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 if (preferences.getBoolean("EnablePreviewAll", true)) {
                     if (messageObject.messageOwner instanceof TLRPC.TL_messageService) {
                         if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionUserJoined) {
@@ -961,7 +961,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
                     msg = LocaleController.formatString("NotificationMessageNoText", R.string.NotificationMessageNoText, name);
                 }
             } else if (chat_id != 0) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 if (preferences.getBoolean("EnablePreviewGroup", true)) {
                     if (messageObject.messageOwner instanceof TLRPC.TL_messageService) {
                         if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser) {
@@ -1337,7 +1337,7 @@ private String getStringForMessage(MessageObject messageObject, boolean shortMes
     private void scheduleNotificationRepeat() {
         try {
             PendingIntent pintent = PendingIntent.getService(ApplicationLoader.applicationContext, 0, new Intent(ApplicationLoader.applicationContext, NotificationRepeat.class), 0);
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             int minutes = preferences.getInt("repeat_messages", 60);
             if (minutes > 0 && personal_count > 0) {
                 alarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime() + minutes * 60 * 1000, pintent);
@@ -1435,7 +1435,7 @@ private void playInChatSound() {
         }
 
         try {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
             int notifyOverride = getNotifyOverride(preferences, opened_dialog_id);
             if (notifyOverride == 2) {
                 return;
@@ -1519,7 +1519,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             ConnectionsManager.getInstance().resumeNetworkMaybe();
 
             MessageObject lastMessageObject = pushMessages.get(0);
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
             int dismissDate = preferences.getInt("dismissDate", 0);
             if (lastMessageObject.messageOwner.date <= dismissDate) {
                 dismissNotification();
@@ -2144,7 +2144,7 @@ public static void updateServerNotificationsSettings(long dialog_id) {
         if ((int) dialog_id == 0) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         TLRPC.TL_account_updateNotifySettings req = new TLRPC.TL_account_updateNotifySettings();
         req.settings = new TLRPC.TL_inputPeerNotifySettings();
         req.settings.sound = "default";
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsService.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsService.java
index 16afb8d73..52fc06197 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsService.java
@@ -34,7 +34,7 @@ public IBinder onBind(Intent intent) {
     public void onDestroy() {
         FileLog.e("service destroyed");
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), MODE_PRIVATE);
         if (preferences.getBoolean("pushService", true)) {
             Intent intent = new Intent("org.telegram.multi.start");
             sendBroadcast(intent);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 94fd3512d..d6348c8f9 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -843,7 +843,7 @@ public void sendMessage(ArrayList<MessageObject> messages, final long peer) {
                     final TLRPC.TL_messages_forwardMessages req = new TLRPC.TL_messages_forwardMessages();
                     req.to_peer = inputPeer;
                     if (req.to_peer instanceof TLRPC.TL_inputPeerChannel) {
-                        req.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                        req.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                     }
                     if (msgObj.messageOwner.to_id instanceof TLRPC.TL_peerChannel) {
                         TLRPC.Chat chat = MessagesController.getInstance().getChat(msgObj.messageOwner.to_id.channel_id);
@@ -1147,7 +1147,7 @@ public void run() {
                                         if (game == null) {
                                             return;
                                         }
-                                        parentFragment.showOpenGameAlert(game, messageObject, res.url, !verified && ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("askgame_" + uid, true), uid);
+                                        parentFragment.showOpenGameAlert(game, messageObject, res.url, !verified && ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("askgame_" + uid, true), uid);
                                     } else {
                                         parentFragment.showOpenUrlAlert(res.url, false);
                                     }
@@ -1208,7 +1208,7 @@ public void sendGame(TLRPC.InputPeer peer, TLRPC.TL_inputMediaGame game, long ra
         TLRPC.TL_messages_sendMedia request = new TLRPC.TL_messages_sendMedia();
         request.peer = peer;
         if (request.peer instanceof TLRPC.TL_inputPeerChannel) {
-            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer.channel_id, false);
+            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer.channel_id, false);
         }
         request.random_id = random_id != 0 ? random_id : getNextRandomId();
         request.media = game;
@@ -1670,7 +1670,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                         reqSend.message = message;
                         reqSend.clear_draft = retryMessageObject == null;
                         if (newMsg.to_id instanceof TLRPC.TL_peerChannel) {
-                            reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                            reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                         }
                         reqSend.peer = sendToPeer;
                         reqSend.random_id = newMsg.random_id;
@@ -1875,7 +1875,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                         TLRPC.TL_messages_sendMedia request = new TLRPC.TL_messages_sendMedia();
                         request.peer = sendToPeer;
                         if (newMsg.to_id instanceof TLRPC.TL_peerChannel) {
-                            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                            request.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                         }
                         request.random_id = newMsg.random_id;
                         request.media = inputMedia;
@@ -2142,7 +2142,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                     reqSend.from_peer = new TLRPC.TL_inputPeerEmpty();
                 }
                 if (retryMessageObject.messageOwner.to_id instanceof TLRPC.TL_peerChannel) {
-                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                 }
                 reqSend.random_id.add(newMsg.random_id);
                 if (retryMessageObject.getId() >= 0) {
@@ -2160,7 +2160,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                     reqSend.reply_to_msg_id = reply_to_msg.getId();
                 }
                 if (newMsg.to_id instanceof TLRPC.TL_peerChannel) {
-                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
+                    reqSend.silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + peer, false);
                 }
                 reqSend.query_id = Utilities.parseLong(params.get("query_id"));
                 reqSend.id = params.get("id");
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/StatsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/StatsController.java
index 2c3d367f4..9d8e6ba78 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/StatsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/StatsController.java
@@ -58,7 +58,7 @@ public static StatsController getInstance() {
     }
 
     private StatsController() {
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("stats"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("stats"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         boolean save = false;
         editor = sharedPreferences.edit();
         for (int a = 0; a < 3; a++) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TgChooserTargetService.java b/TMessagesProj/src/main/java/org/telegram/messenger/TgChooserTargetService.java
index dac8b919c..c596dcb29 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TgChooserTargetService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TgChooserTargetService.java
@@ -50,7 +50,7 @@
         if (!UserConfig.isClientActivated()) {
             return targets;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (!preferences.getBoolean("direct_share", true)) {
             return targets;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index 149a4ce53..738d8a227 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -71,7 +71,7 @@ public static void saveConfig(boolean withFile) {
     public static void saveConfig(boolean withFile, File oldFile) {
         synchronized (sync) {
             try {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putBoolean("registeredForPush", registeredForPush);
                 editor.putString("pushString2", pushString);
@@ -162,7 +162,7 @@ public static void setCurrentUser(TLRPC.User user) {
 
     public static void loadConfig() {
         synchronized (sync) {
-            final File configFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "user.dat");
+            final File configFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "user.dat");
             if (configFile.exists()) {
                 try {
                     SerializedData data = new SerializedData(configFile);
@@ -197,7 +197,7 @@ public void run() {
                         int constructor = data.readInt32(false);
                         currentUser = TLRPC.User.TLdeserialize(data, constructor, false);
 
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                         registeredForPush = preferences.getBoolean("registeredForPush", false);
                         pushString = preferences.getString("pushString2", "");
                         lastSendMessageId = preferences.getInt("lastSendMessageId", -210000);
@@ -222,7 +222,7 @@ public void run() {
                     FileLog.e(e);
                 }
             } else {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 registeredForPush = preferences.getBoolean("registeredForPush", false);
                 pushString = preferences.getString("pushString2", "");
                 lastSendMessageId = preferences.getInt("lastSendMessageId", -210000);
@@ -287,7 +287,7 @@ public void run() {
                 if (!notificationsConverted) {
                     try {
                         ArrayList<Long> customDialogs = new ArrayList<>();
-                        preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                        preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                         Map<String, ?> all = preferences.getAll();
                         String defaultSound = LocaleController.getString("SoundDefault", R.string.SoundDefault);
                         int defaultVibrate = 0;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/camera/CameraSession.java b/TMessagesProj/src/main/java/org/telegram/messenger/camera/CameraSession.java
index 904622634..7dbebfba1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/camera/CameraSession.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/camera/CameraSession.java
@@ -21,7 +21,7 @@
 import android.view.WindowManager;
 
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 
 import java.util.ArrayList;
@@ -62,7 +62,7 @@ public CameraSession(CameraInfo info, Size preview, Size picture, int format) {
         pictureFormat = format;
         cameraInfo = info;
 
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("camera"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("camera"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         currentFlashMode = sharedPreferences.getString(cameraInfo.frontCamera != 0 ? "flashMode_front" : "flashMode", Camera.Parameters.FLASH_MODE_OFF);
 
         orientationEventListener = new OrientationEventListener(ApplicationLoader.applicationContext) {
@@ -114,14 +114,14 @@ public void checkFlashMode(String mode) {
         }
         currentFlashMode = mode;
         configurePhotoCamera();
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("camera"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("camera"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         sharedPreferences.edit().putString(cameraInfo.frontCamera != 0 ? "flashMode_front" : "flashMode", mode).commit();
     }
 
     public void setCurrentFlashMode(String mode) {
         currentFlashMode = mode;
         configurePhotoCamera();
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("camera"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("camera"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         sharedPreferences.edit().putString(cameraInfo.frontCamera != 0 ? "flashMode_front" : "flashMode", mode).commit();
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/query/DraftQuery.java b/TMessagesProj/src/main/java/org/telegram/messenger/query/DraftQuery.java
index a43695813..1fe3958f5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/query/DraftQuery.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/query/DraftQuery.java
@@ -15,7 +15,7 @@
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.MessagesController;
@@ -44,7 +44,7 @@
     private static boolean loadingDrafts;
 
     static {
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("drafts"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("drafts"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         Map<String, ?> values = preferences.getAll();
         for (Map.Entry<String, ?> entry : values.entrySet()) {
             try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 89c48d5d1..776e594d6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -34,7 +34,7 @@
 import android.widget.LinearLayout;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -652,7 +652,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         if (parentActivity.getCurrentFocus() != null) {
             AndroidUtilities.hideKeyboard(parentActivity.getCurrentFocus());
         }
-        boolean needAnimation = !forceWithoutAnimation && parentActivity.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("view_animations", true);
+        boolean needAnimation = !forceWithoutAnimation && parentActivity.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("view_animations", true);
 
         final BaseFragment currentFragment = !fragmentsStack.isEmpty() ? fragmentsStack.get(fragmentsStack.size() - 1) : null;
 
@@ -861,7 +861,7 @@ public void closeLastFragment(boolean animated) {
             AndroidUtilities.hideKeyboard(parentActivity.getCurrentFocus());
         }
         setInnerTranslationX(0);
-        boolean needAnimation = animated && parentActivity.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("view_animations", true);
+        boolean needAnimation = animated && parentActivity.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("view_animations", true);
         final BaseFragment currentFragment = fragmentsStack.get(fragmentsStack.size() - 1);
         BaseFragment previousFragment = null;
         if (fragmentsStack.size() > 1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index f1c6bfe70..363979d5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -40,7 +40,7 @@
 import org.json.JSONObject;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -1383,7 +1383,7 @@ public static ThemeInfo createWithString(String string) {
         themes.add(themeInfo);
         themesDict.put("Blue", themeInfo);
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         String themesString = preferences.getString("themes2", null);
         if (!TextUtils.isEmpty(themesString)) {
             try {
@@ -1420,7 +1420,7 @@ public static ThemeInfo createWithString(String string) {
 
         ThemeInfo applyingTheme = null;
         try {
-            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             String theme = preferences.getString("theme", null);
             if (theme != null) {
                 applyingTheme = themesDict.get(theme);
@@ -1756,7 +1756,7 @@ public static ThemeInfo applyThemeFile(File file, String themeName, boolean temp
             if (themeName.equals("Default") || themeName.equals("Dark") || themeName.equals("Blue")) {
                 return null;
             }
-            File finalFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), themeName);
+            File finalFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), themeName);
             if (!AndroidUtilities.copyFile(file, finalFile)) {
                 return null;
             }
@@ -1804,7 +1804,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
         try {
             if (themeInfo.pathToFile != null || themeInfo.assetName != null) {
                 if (save) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putString("theme", themeInfo.name);
                     if (removeWallpaperOverride) {
@@ -1819,7 +1819,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
                 }
             } else {
                 if (save) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.remove("theme");
                     if (removeWallpaperOverride) {
@@ -1843,7 +1843,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
     }
 
     private static void saveOtherThemes() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         JSONArray array = new JSONArray();
         for (int a = 0; a < otherThemes.size(); a++) {
@@ -1896,7 +1896,7 @@ public static void saveCurrentTheme(String name, boolean finalSave) {
         for (HashMap.Entry<String, Integer> entry : currentColors.entrySet()) {
             result.append(entry.getKey()).append("=").append(entry.getValue()).append("\n");
         }
-        File file = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), name);
+        File file = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), name);
         FileOutputStream stream = null;
         try {
             stream = new FileOutputStream(file);
@@ -1925,7 +1925,7 @@ public static void saveCurrentTheme(String name, boolean finalSave) {
                 sortThemes();
             }
             currentTheme = newTheme;
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.putString("theme", currentTheme.name);
             editor.commit();
@@ -1943,7 +1943,7 @@ public static void saveCurrentTheme(String name, boolean finalSave) {
     }
 
     public static File getAssetFile(String assetName) {
-        File file = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), assetName);
+        File file = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), assetName);
         if (!file.exists()) {
             InputStream in = null;
             try {
@@ -2670,7 +2670,7 @@ public static void setColor(String key, int color, boolean useDefault) {
 
     public static void setThemeWallpaper(String themeName, Bitmap bitmap, File path) {
         currentColors.remove(key_chat_wallpaper);
-        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().remove("overrideThemeWallpaper").commit();
+        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().remove("overrideThemeWallpaper").commit();
         if (bitmap != null) {
             themedWallpaper = new BitmapDrawable(bitmap);
             saveCurrentTheme(themeName, false);
@@ -2779,7 +2779,7 @@ public static void loadWallpaper() {
             @Override
             public void run() {
                 synchronized (wallpaperSync) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     boolean overrideTheme = preferences.getBoolean("overrideThemeWallpaper", false);
                     if (!overrideTheme) {
                         Integer backgroundColor = currentColors.get(key_chat_wallpaper);
@@ -2819,7 +2819,7 @@ public void run() {
                     if (wallpaper == null) {
                         int selectedColor = 0;
                         try {
-                            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             int selectedBackground = preferences.getInt("selectedBackground", 1000001);
                             selectedColor = preferences.getInt("selectedColor", 0);
                             if (selectedColor == 0) {
@@ -2827,7 +2827,7 @@ public void run() {
                                     wallpaper = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.background_hd);
                                     isCustomTheme = false;
                                 } else {
-                                    File toFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "wallpaper.jpg");
+                                    File toFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "wallpaper.jpg");
                                     if (toFile.exists()) {
                                         wallpaper = Drawable.createFromPath(toFile.getAbsolutePath());
                                         isCustomTheme = true;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
index b52c9006f..8508d7658 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
@@ -22,7 +22,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.MessagesController;
@@ -220,7 +220,7 @@ private void processFoundUser(TLRPC.User user) {
         if (user != null && user.bot && user.bot_inline_placeholder != null) {
             foundContextBot = user;
             if (foundContextBot.bot_inline_geo) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 boolean allowGeo = preferences.getBoolean("inlinegeo_" + foundContextBot.id, false);
                 if (!allowGeo && parentFragment != null && parentFragment.getParentActivity() != null) {
                     final TLRPC.User foundContextBotFinal = foundContextBot;
@@ -233,7 +233,7 @@ private void processFoundUser(TLRPC.User user) {
                         public void onClick(DialogInterface dialogInterface, int i) {
                             buttonClicked[0] = true;
                             if (foundContextBotFinal != null) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 preferences.edit().putBoolean("inlinegeo_" + foundContextBotFinal.id, true).commit();
                                 checkLocationPermissionsOrStart();
                             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java
new file mode 100644
index 000000000..30e15a4a6
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java
@@ -0,0 +1,90 @@
+package org.telegram.ui.Adapters;
+
+import android.app.Activity;
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import org.telegram.messenger.R;
+import org.telegram.ui.Components.UserItems;
+
+import java.util.ArrayList;
+
+/**
+ * Created by oleg.svs on 22.05.2017.
+ */
+
+public class UserItemsAdapter extends BaseAdapter {
+
+    ArrayList<Object> itemList;
+
+    public Activity context;
+    public LayoutInflater inflater;
+
+    public UserItemsAdapter(Activity context, ArrayList<Object> itemList) {
+        super();
+
+        this.context = context;
+        this.itemList = itemList;
+
+        this.inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+    }
+
+    @Override
+    public int getCount() {
+        // TODO Auto-generated method stub
+        return itemList.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        // TODO Auto-generated method stub
+        return itemList.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        // TODO Auto-generated method stub
+        return 0;
+    }
+
+    public static class ViewHolder
+    {
+        ImageView imgViewPhoto;
+        TextView txtViewName;
+        TextView txtViewPhone;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        // TODO Auto-generated method stub
+
+        ViewHolder holder;
+        if(convertView==null)
+        {
+            holder = new ViewHolder();
+            convertView = inflater.inflate(R.layout.user_list_item, null);
+
+            holder.imgViewPhoto = (ImageView) convertView.findViewById(R.id.userPhoto);
+            holder.txtViewName = (TextView) convertView.findViewById(R.id.userName);
+            holder.txtViewPhone = (TextView) convertView.findViewById(R.id.userPhone);
+
+            convertView.setTag(holder);
+        }
+        else
+            holder=(ViewHolder)convertView.getTag();
+
+        UserItems userItems = (UserItems) itemList.get(position);
+
+        holder.imgViewPhoto.setImageResource(userItems.getPhoto());
+        holder.txtViewName.setText(userItems.getName());
+        holder.txtViewPhone.setText(userItems.getPhone());
+
+        return convertView;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
index 178bdb522..8dda9548c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
@@ -72,7 +72,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
@@ -659,7 +659,7 @@ private void updateInterfaceForCurrentPage(boolean back) {
         adapter.notifyDataSetChanged();
 
         if (pagesStack.size() == 1 || back) {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("articles"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("articles"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             String key = "article" + currentPage.id;
             int position = preferences.getInt(key, -1);
             int offset;
@@ -1754,7 +1754,7 @@ public void run() {
                                     pagesStack.set(0, webPage);
                                     if (pagesStack.size() == 1) {
                                         currentPage = webPage;
-                                        ApplicationLoader.applicationContext.getSharedPreferences("articles"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().remove("article" + currentPage.id).commit();
+                                        ApplicationLoader.applicationContext.getSharedPreferences("articles"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().remove("article" + currentPage.id).commit();
                                         updateInterfaceForCurrentPage(false);
                                     }
                                 }
@@ -2120,7 +2120,7 @@ private void saveCurrentPagePosition() {
             } else {
                 offset = 0;
             }
-            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("articles"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("articles"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
             String key = "article" + currentPage.id;
             editor.putInt(key, position).putInt(key + "o", offset).putBoolean(key + "r", AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y).commit();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
index e510d0d48..d7371d5e4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
@@ -25,7 +25,7 @@
 import org.telegram.SQLite.SQLitePreparedStatement;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ClearCacheService;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
@@ -93,7 +93,7 @@ public boolean onFragmentCreate() {
         databaseRow = rowCount++;
         databaseInfoRow = rowCount++;
 
-        File file = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "cache4.db");
+        File file = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "cache4.db");
         databaseSize = file.length();
 
         Utilities.globalQueue.postRunnable(new Runnable() {
@@ -320,7 +320,7 @@ public void onItemClick(View view, int position) {
                     builder.setItems(new CharSequence[]{LocaleController.formatPluralString("Weeks", 1), LocaleController.formatPluralString("Months", 1), LocaleController.getString("KeepMediaForever", R.string.KeepMediaForever)}, new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, final int which) {
-                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
                             editor.putInt("keep_media", which).commit();
                             if (listAdapter != null) {
                                 listAdapter.notifyDataSetChanged();
@@ -433,7 +433,7 @@ public void run() {
                                                     FileLog.e(e);
                                                 }
                                                 if (listAdapter != null) {
-                                                    File file = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "cache4.db");
+                                                    File file = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "cache4.db");
                                                     databaseSize = file.length();
                                                     listAdapter.notifyDataSetChanged();
                                                 }
@@ -581,7 +581,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             textCell.setTextAndValue(LocaleController.getString("ClearMediaCache", R.string.ClearMediaCache), totalSize == 0 ? LocaleController.getString("CacheEmpty", R.string.CacheEmpty) : AndroidUtilities.formatFileSize(totalSize), false);
                         }
                     } else if (position == keepMediaRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         int keepMedia = preferences.getInt("keep_media", 2);
                         String value;
                         if (keepMedia == 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
index 15fedf00d..665afcb59 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
@@ -25,7 +25,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.tgnet.TLRPC;
@@ -132,7 +132,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
index 135c629e7..bb80cfa7a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
@@ -24,7 +24,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.tgnet.ConnectionsManager;
@@ -152,7 +152,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
index 83be57691..5ab7d2bfe 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
@@ -47,7 +47,7 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
@@ -716,7 +716,7 @@ public void onNextPressed() {
                         permissionsItems.add(Manifest.permission.RECEIVE_SMS);
                     }
                     if (!permissionsItems.isEmpty()) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         if (preferences.getBoolean("firstlogin", true) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.READ_PHONE_STATE) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.RECEIVE_SMS)) {
                             preferences.edit().putBoolean("firstlogin", false).commit();
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
index 379ab60a1..4c755e189 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
@@ -7,68 +7,81 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.Snackbar;
 import android.util.Log;
 import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
+import android.widget.AdapterView;
+import android.widget.ListView;
 import android.widget.Toast;
 
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.ui.Adapters.UserItemsAdapter;
+import org.telegram.ui.Components.UserItems;
 
-public class ChangeUserActivity extends Activity {
+import java.util.ArrayList;
+
+public class ChangeUserActivity extends Activity implements AdapterView.OnItemClickListener {
+
+    ListView lvUserList;
+    UserItemsAdapter adapter;
+    private ArrayList<Object> itemList;
+    private UserItems userItems;
+    private static int usersCount = 1;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_change_user);
 
-        TextView userCurrent = (TextView)findViewById(R.id.tvUserCurrent);
-//        TextView tvPnone = (TextView)findViewById(R.id.tvPhone);
-        Button btUser1 = (Button)findViewById(R.id.setUser1);
-        Button btUser2 = (Button)findViewById(R.id.setUser2);
-        TLRPC.User user = UserConfig.getCurrentUser();
-        String userName;
-        String userPhone;
-        if (user != null && user.phone != null && user.phone.length() != 0) {
-            userPhone = PhoneFormat.getInstance().format("+" + user.phone);
-        } else {
-            userPhone = LocaleController.getString("NumberUnknown", R.string.NumberUnknown);
-        }
-        if (user != null && user.username != null && user.username.length() != 0) {
-            userName =  user.first_name + "@" + user.username;
+        prepareArrayLits();
+        lvUserList = (ListView) findViewById(R.id.users_listview);
+        adapter = new UserItemsAdapter(this, itemList);
+        lvUserList.setAdapter(adapter);
 
-        } else {
-            userName = user.first_name;
-        }
-//        tvName.setText(userName);
-//        tvPnone.setText(userPhone);
+        lvUserList.setOnItemClickListener(this);
 
-        btUser1.setText(getUserTag("_user_0"));
-        btUser2.setText(getUserTag("_user_1"));
-        userCurrent.setText("Current user " + userName.toString() + " " + userPhone.toString());
-        Toast.makeText(this,"Current user " + userName.toString() + " " + userPhone.toString(),Toast.LENGTH_LONG).show();
+        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+        fab.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                addUser();
+            }
+        });
+//        TextView userCurrent = (TextView)findViewById(R.id.tvUserCurrent);
+//        TextView tvPnone = (TextView)findViewById(R.id.tvPhone);
+//        Button btUser1 = (Button)findViewById(R.id.setUser1);
+//        Button btUser2 = (Button)findViewById(R.id.setUser2);
     }
 
-    public void setUser1(View v) {
-        Change_user_helper.setUserTag("_user_0");
+    public void addUser() {
+        ChangeUserHelper.setUserTag("_user_" + String.valueOf(getUsersCount()));
         SharedPreferences sharedPref = getSharedPreferences("userID", Context.MODE_PRIVATE);
-        sharedPref.edit().putString("userID", Change_user_helper.getUserTag()).commit();
+        sharedPref.edit().putString("userID", ChangeUserHelper.getUserTag()).commit();
+        sharedPref.edit().putInt("usersCount", getUsersCount() + 1).commit();
         sharedPref.edit().apply();
-        Log.i("userTAG", "setUser2: tag changed to " + Change_user_helper.getUserTag());
+        Log.i("userTAG", "addUser: tag changed to " + ChangeUserHelper.getUserTag());
         restart();
     }
 
-    public void setUser2(View v) {
-        Change_user_helper.setUserTag("_user_1");
+    public int getUsersCount() {
+        SharedPreferences userPhone = getSharedPreferences("userID", Context.MODE_PRIVATE);
+        return userPhone.getInt("usersCount",1);
+    }
+
+    public void setUser(int position) {
+        ChangeUserHelper.setUserTag("_user_" + position);
         SharedPreferences sharedPref = getSharedPreferences("userID", Context.MODE_PRIVATE);
-        sharedPref.edit().putString("userID", Change_user_helper.getUserTag()).commit();
+        sharedPref.edit().putString("userID", ChangeUserHelper.getUserTag()).commit();
         sharedPref.edit().apply();
-        Log.i("userTAG", "setUser2: tag changed to " + Change_user_helper.getUserTag());
+        Log.i("userTAG", "setUser: tag changed to " + ChangeUserHelper.getUserTag());
         restart();
     }
 
@@ -77,13 +90,63 @@ public void restart() {
         PendingIntent intent = PendingIntent.getActivity(getApplicationContext(), 0, launchIntent , 0);
         AlarmManager manager = (AlarmManager) this.getSystemService(Context.ALARM_SERVICE);
         manager.set(AlarmManager.RTC, System.currentTimeMillis() + 500, intent);
-        Log.i("userTAG", "restarting... " + Change_user_helper.getUserTag());
+        Log.i("userTAG", "restarting... " + ChangeUserHelper.getUserTag());
         System.exit(2);
     }
 
     public String getUserTag(String tag) {
         SharedPreferences userPhone = getSharedPreferences("users" + tag.toString(), Context.MODE_PRIVATE);
         return userPhone.getString("phone_user1","не задан");
-//        Log.i("userTAG", "postInitApplication: " + Change_user_helper.getUserTag());
+    }
+
+    @Override
+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+        UserItems userItems = (UserItems) adapter.getItem(position);
+        Toast.makeText(this, "Name => "+userItems.getName()+" \n Phone => "+userItems.getPhone(), Toast.LENGTH_SHORT).show();
+        setUser(position);
+    }
+
+    public void prepareArrayLits()
+    {
+        TLRPC.User user = UserConfig.getCurrentUser();
+        String userName;
+        String userPhone;
+        String userLastName;
+        if (user != null && user.phone != null && user.phone.length() != 0) {
+            userPhone = PhoneFormat.getInstance().format("+" + user.phone);
+        } else {
+            userPhone = LocaleController.getString("NumberUnknown", R.string.NumberUnknown);
+        }
+        if (user != null && user.username != null && user.username.length() != 0) {
+            userName =  user.first_name + "@" + user.username;
+            userLastName = user.last_name;
+
+        } else {
+            userName = user.first_name;
+            userLastName = user.last_name;
+        }
+//        tvName.setText(userName);
+//        tvPnone.setText(userPhone);
+//        btUser1.setText(getUserTag("_user_0"));
+//        btUser2.setText(getUserTag("_user_1"));
+//        userCurrent.setText("Current user " + userName.toString() + " " + userLastName.toString() + " " + userPhone.toString());
+//        Toast.makeText(this,"Current user " + userName.toString() + " " + userPhone.toString(),Toast.LENGTH_LONG).show();
+
+
+        itemList = new ArrayList<Object>();
+        int usersCount = getUsersCount();
+        for (int i = 0; i < usersCount ; i++) {
+            AddObjectToList(R.drawable.book_user, "User" , getUserTag("_user_" + i));
+        }
+    }
+
+    // Add one item into the Array List
+    public void AddObjectToList(int image, String title, String desc)
+    {
+        userItems = new UserItems();
+        userItems.setPhone(desc);
+        userItems.setPhoto(image);
+        userItems.setName(title);
+        itemList.add(userItems);
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index 30aedf39e..6b1cb93ed 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -35,7 +35,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
@@ -237,7 +237,7 @@ public void afterTextChanged(Editable editable) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index cc5490eb3..ec021a027 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -69,7 +69,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
@@ -718,7 +718,7 @@ public void run() {
         MessagesController.getInstance().setLastCreatedDialogId(dialog_id, true);
 
         if (startLoadFromMessageId == 0) {
-            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             int messageId = sharedPreferences.getInt("diditem" + dialog_id, 0);
             if (messageId != 0) {
                 loadingFromOldPosition = true;
@@ -1872,7 +1872,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showDialog(builder.create());
                     } else {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         preferences.edit().putInt("pin_" + dialog_id, info.pinned_msg_id).commit();
                         updatePinnedMessageView(true);
                     }
@@ -2237,7 +2237,7 @@ public void needChangePanelVisibility(boolean show) {
                         }
                         if (allowStickersPanel && (!mentionsAdapter.isBotContext() || (allowContextBotPanel || allowContextBotPanelSecond))) {
                             if (currentEncryptedChat != null && mentionsAdapter.isBotContext()) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 if (!preferences.getBoolean("secretbot", false)) {
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -3297,7 +3297,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
     }
 
     private void showGifHint() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (preferences.getBoolean("gifhint", false)) {
             return;
         }
@@ -3822,7 +3822,7 @@ public void run() {
                                 @Override
                                 public void onClick(DialogInterface dialog, int which) {
                                     MessagesController.getInstance().secretWebpagePreview = 1;
-                                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                                     foundUrls = null;
                                     searchLinks(charSequence, force);
                                 }
@@ -3832,7 +3832,7 @@ public void onClick(DialogInterface dialog, int which) {
                             showDialog(builder.create());
 
                             MessagesController.getInstance().secretWebpagePreview = 0;
-                            ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                            ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                         }
                     });
                     return;
@@ -4132,7 +4132,7 @@ public void showReplyPanel(boolean show, MessageObject messageObjectToReply, Arr
                 return;
             }
             if (replyingMessageObject != null && replyingMessageObject.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 preferences.edit().putInt("answered_" + dialog_id, replyingMessageObject.getId()).commit();
             }
             if (foundWebPage != null) {
@@ -4316,7 +4316,7 @@ private void toggleMute(boolean instant) {
         if (!muted) {
             if (instant) {
                 long flags;
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putInt("notify2_" + dialog_id, 2);
                 flags = 1;
@@ -4333,7 +4333,7 @@ private void toggleMute(boolean instant) {
                 showDialog(AlertsCreator.createMuteAlert(getParentActivity(), dialog_id));
             }
         } else {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.putInt("notify2_" + dialog_id, 0);
             MessagesStorage.getInstance().setDialogFlags(dialog_id, 0);
@@ -6794,7 +6794,7 @@ public void run() {
                     botButtons = new MessageObject(message, null, false);
                     if (chatActivityEnterView != null) {
                         if (botButtons.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             if (preferences.getInt("answered_" + dialog_id, 0) != botButtons.getId() && (replyingMessageObject == null || chatActivityEnterView.getFieldText() == null)) {
                                 botReplyButtons = botButtons;
                                 chatActivityEnterView.setButtons(botButtons);
@@ -7210,7 +7210,7 @@ private void updatePinnedMessageView(boolean animated) {
                 pinnedMessageObject = messagesDict[0].get(info.pinned_msg_id);
             }
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (info == null || info.pinned_msg_id == 0 || info.pinned_msg_id == preferences.getInt("pin_" + dialog_id, 0) || actionBar != null && actionBar.isActionModeShowed()) {
             hidePinnedMessageView(animated);
         } else {
@@ -7296,7 +7296,7 @@ private void updateSpamView() {
         if (reportSpamView == null) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean show;
         if (currentEncryptedChat != null) {
             show = !(currentEncryptedChat.admin_id == UserConfig.getClientUserId() || ContactsController.getInstance().isLoadingContacts()) && ContactsController.getInstance().contactsDict.get(currentUser.id) == null;
@@ -7572,7 +7572,7 @@ public void onPause() {
 
         MessagesController.getInstance().cancelTyping(0, dialog_id);
 
-        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+        SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
         int messageId = 0;
         int offset = 0;
         if (chatLayoutManager != null) {
@@ -8998,7 +8998,7 @@ public void showOpenGameAlert(final TLRPC.TL_game game, final MessageObject mess
                 @Override
                 public void onClick(DialogInterface dialogInterface, int i) {
                     showOpenGameAlert(game, messageObject, urlStr, false, uid);
-                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("askgame_" + uid, false).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("askgame_" + uid, false).commit();
                 }
             });
             builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java
index 867849108..183ba9440 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AlertsCreator.java
@@ -19,7 +19,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
@@ -254,7 +254,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             untilTime = Integer.MAX_VALUE;
                         }
 
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         long flags;
                         if (i == 3) {
@@ -432,7 +432,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
     public static Dialog createColorSelectDialog(Activity parentActivity, final long dialog_id, final boolean globalGroup, final boolean globalAll, final Runnable onSelect) {
         int currentColor;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (globalGroup) {
             currentColor = preferences.getInt("GroupLed", 0xff0000ff);
         } else if (globalAll) {
@@ -485,7 +485,7 @@ public void onClick(View v) {
         builder.setPositiveButton(LocaleController.getString("Set", R.string.Set), new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialogInterface, int which) {
-                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 if (globalAll) {
                     editor.putInt("MessagesLed", selectedColor[0]);
@@ -503,7 +503,7 @@ public void onClick(DialogInterface dialogInterface, int which) {
         builder.setNeutralButton(LocaleController.getString("LedDisabled", R.string.LedDisabled), new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialog, int which) {
-                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 if (globalAll) {
                     editor.putInt("MessagesLed", 0);
@@ -522,7 +522,7 @@ public void onClick(DialogInterface dialog, int which) {
             builder.setNegativeButton(LocaleController.getString("Default", R.string.Default), new DialogInterface.OnClickListener() {
                 @Override
                 public void onClick(DialogInterface dialog, int which) {
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.remove("color_" + dialog_id);
                     editor.commit();
@@ -546,7 +546,7 @@ public static Dialog createVibrationSelectDialog(Activity parentActivity, final
     }
 
     public static Dialog createVibrationSelectDialog(Activity parentActivity, final BaseFragment parentFragment, final long dialog_id, final String prefKeyPrefix, final Runnable onSelect) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         final int selected[] = new int[1];
         String descriptions[];
         if (dialog_id != 0) {
@@ -595,7 +595,7 @@ public static Dialog createVibrationSelectDialog(Activity parentActivity, final
                 public void onClick(View v) {
                     selected[0] = (Integer) v.getTag();
 
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (dialog_id != 0) {
                         if (selected[0] == 0) {
@@ -638,7 +638,7 @@ public void onClick(View v) {
     }
 
     public static Dialog createPrioritySelectDialog(Activity parentActivity, final BaseFragment parentFragment, final long dialog_id, final boolean globalGroup, final boolean globalAll, final Runnable onSelect) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         final int selected[] = new int[1];
         String descriptions[];
         if (dialog_id != 0) {
@@ -682,7 +682,7 @@ public static Dialog createPrioritySelectDialog(Activity parentActivity, final B
                 public void onClick(View v) {
                     selected[0] = (Integer) v.getTag();
 
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (dialog_id != 0) {
                         if (selected[0] == 0) {
@@ -712,7 +712,7 @@ public void onClick(View v) {
     }
 
     public static Dialog createPopupSelectDialog(Activity parentActivity, final BaseFragment parentFragment, final boolean globalGroup, final boolean globalAll, final Runnable onSelect) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         final int selected[] = new int[1];
         if (globalAll) {
             selected[0] = preferences.getInt("popupAll", 0);
@@ -741,7 +741,7 @@ public static Dialog createPopupSelectDialog(Activity parentActivity, final Base
                 public void onClick(View v) {
                     selected[0] = (Integer) v.getTag();
 
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putInt(globalGroup ? "popupGroup" : "popupAll", selected[0]);
                     editor.commit();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 923f34a30..b496a689c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -56,7 +56,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
@@ -485,7 +485,7 @@ public ChatActivityEnterView(Activity context, SizeNotifierFrameLayout parent, C
         parentFragment = fragment;
         sizeNotifierLayout = parent;
         sizeNotifierLayout.setDelegate(this);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         sendByEnter = preferences.getBoolean("send_by_enter", false);
 
         textFieldContainer = new LinearLayout(context);
@@ -594,7 +594,7 @@ public boolean onKey(View view, int i, KeyEvent keyEvent) {
                 if (i == KeyEvent.KEYCODE_BACK && !keyboardVisible && isPopupShowing()) {
                     if (keyEvent.getAction() == 1) {
                         if (currentPopupContentType == 1 && botButtonsMessageObject != null) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             preferences.edit().putInt("hidekeyboard_" + dialog_id, botButtonsMessageObject.getId()).commit();
                         }
                         showPopup(0, 0);
@@ -715,11 +715,11 @@ public void onClick(View v) {
                     if (botReplyMarkup != null) {
                         if (!isPopupShowing() || currentPopupContentType != 1) {
                             showPopup(1, 1);
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             preferences.edit().remove("hidekeyboard_" + dialog_id).commit();
                         } else {
                             if (currentPopupContentType == 1 && botButtonsMessageObject != null) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 preferences.edit().putInt("hidekeyboard_" + dialog_id, botButtonsMessageObject.getId()).commit();
                             }
                             openKeyboardInternal();
@@ -749,7 +749,7 @@ public void onClick(View v) {
                 public void onClick(View v) {
                     silent = !silent;
                     notifyButton.setImageResource(silent ? R.drawable.notify_members_off : R.drawable.notify_members_on);
-                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("silent_" + dialog_id, silent).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("silent_" + dialog_id, silent).commit();
                     NotificationsController.updateServerNotificationsSettings(dialog_id);
                     try {
                         if (visibleToast != null) {
@@ -1047,7 +1047,7 @@ public void onClick(View view) {
         doneButtonProgress.setVisibility(View.INVISIBLE);
         doneButtonContainer.addView(doneButtonProgress, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         keyboardHeight = sharedPreferences.getInt("kbd_height", AndroidUtilities.dp(200));
         keyboardHeightLand = sharedPreferences.getInt("kbd_height_land3", AndroidUtilities.dp(200));
 
@@ -1438,7 +1438,7 @@ public void setDialogId(long id) {
         dialog_id = id;
         if ((int) dialog_id < 0) {
             TLRPC.Chat currentChat = MessagesController.getInstance().getChat(-(int) dialog_id);
-            silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + dialog_id, false);
+            silent = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getBoolean("silent_" + dialog_id, false);
             canWriteToChannel = ChatObject.isChannel(currentChat) && (currentChat.creator || currentChat.editor) && !currentChat.megagroup;
             if (notifyButton != null) {
                 notifyButton.setVisibility(canWriteToChannel ? VISIBLE : GONE);
@@ -2271,7 +2271,7 @@ public void didPressedButton(TLRPC.KeyboardButton button) {
                         setButtons(botMessageObject, false);
                     } else if (botButtonsMessageObject.messageOwner.reply_markup.single_use) {
                         openKeyboardInternal();
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         preferences.edit().putInt("answered_" + dialog_id, botButtonsMessageObject.getId()).commit();
                     }
                     if (delegate != null) {
@@ -2287,7 +2287,7 @@ public void didPressedButton(TLRPC.KeyboardButton button) {
         botKeyboardView.setPanelHeight(AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? keyboardHeightLand : keyboardHeight);
         botKeyboardView.setButtons(botReplyMarkup != null ? botReplyMarkup : null);
         if (botReplyMarkup != null) {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             boolean keyboardHidden = preferences.getInt("hidekeyboard_" + dialog_id, 0) == messageObject.getId();
             if (botButtonsMessageObject != replyingMessageObject && botReplyMarkup.single_use) {
                 if (preferences.getInt("answered_" + dialog_id, 0) == messageObject.getId()) {
@@ -2575,10 +2575,10 @@ private void showPopup(int show, int contentType) {
             currentPopupContentType = contentType;
 
             if (keyboardHeight <= 0) {
-                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE).getInt("kbd_height", AndroidUtilities.dp(200));
+                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE).getInt("kbd_height", AndroidUtilities.dp(200));
             }
             if (keyboardHeightLand <= 0) {
-                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE).getInt("kbd_height_land3", AndroidUtilities.dp(200));
+                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE).getInt("kbd_height_land3", AndroidUtilities.dp(200));
             }
             int currentHeight = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? keyboardHeightLand : keyboardHeight;
             if (contentType == 1) {
@@ -2630,7 +2630,7 @@ private void showPopup(int show, int contentType) {
     private void setEmojiButtonImage() {
         int currentPage;
         if (emojiView == null) {
-            currentPage = getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getInt("selected_page", 0);
+            currentPage = getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getInt("selected_page", 0);
         } else {
             currentPage = emojiView.getCurrentPage();
         }
@@ -2646,7 +2646,7 @@ private void setEmojiButtonImage() {
     public void hidePopup(boolean byBackButton) {
         if (isPopupShowing()) {
             if (currentPopupContentType == 1 && byBackButton && botButtonsMessageObject != null) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                 preferences.edit().putInt("hidekeyboard_" + dialog_id, botButtonsMessageObject.getId()).commit();
             }
             showPopup(0, 0);
@@ -2719,10 +2719,10 @@ public void onSizeChanged(int height, boolean isWidthGreater) {
         if (height > AndroidUtilities.dp(50) && keyboardVisible && !AndroidUtilities.isInMultiwindow) {
             if (isWidthGreater) {
                 keyboardHeightLand = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
             } else {
                 keyboardHeight = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), 0).edit().putInt("kbd_height", keyboardHeight).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), 0).edit().putInt("kbd_height", keyboardHeight).commit();
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
index 50e39f9dc..6c286fb02 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
@@ -49,7 +49,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
@@ -519,7 +519,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     if (layoutManager.findLastVisibleItemPosition() > 1) {
                         hideHint();
                         hintShowed = false;
-                        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("bothint", true).commit();
+                        ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putBoolean("bothint", true).commit();
                     }
                 }
                 updateLayout();
@@ -1514,7 +1514,7 @@ private void showHint() {
         if (SearchQuery.inlineBots.isEmpty()) {
             return;
         }
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (preferences.getBoolean("bothint", false)) {
             return;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index cbdaedcb0..89f406f83 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -43,7 +43,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.EmojiData;
 import org.telegram.messenger.LocaleController;
@@ -1106,7 +1106,7 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
                 return false;
             }
         });
-        currentPage = getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getInt("selected_page", 0);
+        currentPage = getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getInt("selected_page", 0);
         loadRecents();
     }
 
@@ -1161,12 +1161,12 @@ private void saveNewPage() {
         }
         if (currentPage != newPage) {
             currentPage = newPage;
-            getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("selected_page", newPage).commit();
+            getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("selected_page", newPage).commit();
         }
     }
 
     public void clearRecentEmoji() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         preferences.edit().putBoolean("filled_default", true).commit();
         emojiUseHistory.clear();
         recentEmoji.clear();
@@ -1242,7 +1242,7 @@ public void run() {
     }
 
     private void saveRecentEmoji() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         StringBuilder stringBuilder = new StringBuilder();
         for (HashMap.Entry<String, Integer> entry : emojiUseHistory.entrySet()) {
             if (stringBuilder.length() != 0) {
@@ -1256,7 +1256,7 @@ private void saveRecentEmoji() {
     }
 
     private void saveEmojiColors() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         StringBuilder stringBuilder = new StringBuilder();
         for (HashMap.Entry<String, String> entry : emojiColor.entrySet()) {
             if (stringBuilder.length() != 0) {
@@ -1444,7 +1444,7 @@ public void addRecentGif(TLRPC.Document document) {
     }
 
     public void loadRecents() {
-        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
 
         String str;
         try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
index 9b28bb054..ca90cbe5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Paint/Views/ColorPicker.java
@@ -19,7 +19,7 @@
 import android.widget.ImageView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.Paint.Swatch;
@@ -98,7 +98,7 @@ public void onClick(View v) {
             }
         });
 
-        location = context.getSharedPreferences("paint"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).getFloat("last_color_location", 1.0f);
+        location = context.getSharedPreferences("paint"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).getFloat("last_color_location", 1.0f);
         setLocation(location);
     }
 
@@ -212,7 +212,7 @@ public boolean onTouchEvent(MotionEvent event) {
             if (interacting && delegate != null) {
                 delegate.onFinishedColorPicking();
 
-                getContext().getSharedPreferences("paint"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putFloat("last_color_location", location).commit();
+                getContext().getSharedPreferences("paint"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putFloat("last_color_location", location).commit();
             }
             interacting = false;
             wasChangingWeight = changingWeight;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index f48bf616b..c35eed2a7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -47,7 +47,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
@@ -971,7 +971,7 @@ public void onShow() {
         }
         setAlpha(1.0f);
         setTranslationY(0);
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         int selectedBackground = preferences.getInt("selectedBackground", 1000001);
         if (selectedBackground == 1000001) {
             backgroundFrameLayout.setBackgroundColor(0xff517c9e);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
index adf0d515f..b9945aa7e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
@@ -31,7 +31,7 @@
 import android.widget.LinearLayout;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
@@ -512,10 +512,10 @@ public void onStickerSetRemove(TLRPC.StickerSetCovered stickerSet) {
             emojiView.setVisibility(VISIBLE);
 
             if (keyboardHeight <= 0) {
-                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), 0).getInt("kbd_height", AndroidUtilities.dp(200));
+                keyboardHeight = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), 0).getInt("kbd_height", AndroidUtilities.dp(200));
             }
             if (keyboardHeightLand <= 0) {
-                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), 0).getInt("kbd_height_land3", AndroidUtilities.dp(200));
+                keyboardHeightLand = ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), 0).getInt("kbd_height_land3", AndroidUtilities.dp(200));
             }
             int currentHeight = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? keyboardHeightLand : keyboardHeight;
 
@@ -599,10 +599,10 @@ public void onSizeChanged(int height, boolean isWidthGreater) {
         if (height > AndroidUtilities.dp(50) && keyboardVisible && !AndroidUtilities.isInMultiwindow && !forceFloatingEmoji) {
             if (isWidthGreater) {
                 keyboardHeightLand = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), 0).edit().putInt("kbd_height_land3", keyboardHeightLand).commit();
             } else {
                 keyboardHeight = height;
-                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ Change_user_helper.getUserTag(), 0).edit().putInt("kbd_height", keyboardHeight).commit();
+                ApplicationLoader.applicationContext.getSharedPreferences("emoji"+ ChangeUserHelper.getUserTag(), 0).edit().putInt("kbd_height", keyboardHeight).commit();
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java
index 527208060..5fda69cc5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PipVideoView.java
@@ -27,7 +27,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.exoplayer2.ui.AspectRatioFrameLayout;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -143,7 +143,7 @@ public boolean onTouchEvent(MotionEvent event) {
 
         windowManager = (WindowManager) ApplicationLoader.applicationContext.getSystemService(Context.WINDOW_SERVICE);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
 
         int sidex = preferences.getInt("sidex", 1);
         int sidey = preferences.getInt("sidey", 0);
@@ -294,7 +294,7 @@ public void onAnimationEnd(Animator animation) {
     }
 
     public static Rect getPipRect(float aspectRatio) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("pipconfig"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         int sidex = preferences.getInt("sidex", 1);
         int sidey = preferences.getInt("sidey", 0);
         float px = preferences.getFloat("px", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java
index 55fb3b2be..8c60f2cec 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemeEditorView.java
@@ -52,7 +52,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
@@ -990,7 +990,7 @@ public void onDismiss(DialogInterface dialog) {
         windowView.setBackgroundResource(R.drawable.theme_picker);
         windowManager = (WindowManager) activity.getSystemService(Context.WINDOW_SERVICE);
 
-        preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
 
         int sidex = preferences.getInt("sidex", 1);
         int sidey = preferences.getInt("sidey", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java
new file mode 100644
index 000000000..56b708505
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java
@@ -0,0 +1,35 @@
+package org.telegram.ui.Components;
+
+/**
+ * Created by oleg.svs on 22.05.2017.
+ */
+
+public class UserItems {
+    String userName;
+    String userPhone;
+    int userPhoto;
+
+    public String getName() {
+        return userName;
+    }
+
+    public void setName(String userName) {
+        this.userName = userName;
+    }
+
+    public String getPhone() {
+        return userPhone;
+    }
+
+    public void setPhone(String userPhone) {
+        this.userPhone = userPhone;
+    }
+
+    public int getPhoto() {
+        return userPhoto;
+    }
+
+    public void setPhoto(int image) {
+        this.userPhoto = userPhoto;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
index e79701d0e..a3daf0250 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/WebPlayerView.java
@@ -49,7 +49,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.Bitmaps;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageReceiver;
@@ -629,7 +629,7 @@ protected String doInBackground(Void... voids) {
                         }
                         String functionCode = null;
                         String functionName = null;
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("youtubecode"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("youtubecode"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         if (playerId != null) {
                             functionCode = preferences.getString(playerId, null);
                             functionName = preferences.getString(playerId + "n", null);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index 23c5d0b12..d2427bef0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -29,7 +29,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.ApplicationLoader;
@@ -103,7 +103,7 @@ public void onItemClick(int id) {
                         user.last_name = lastNameField.getText().toString();
                         ContactsController.getInstance().addContact(user);
                         finishFragment();
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         preferences.edit().putInt("spam3_" + user_id, 1).commit();
                         NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, MessagesController.UPDATE_MASK_NAME);
                         NotificationCenter.getInstance().postNotificationName(NotificationCenter.peerSettingsDidLoaded, (long) user_id);
@@ -252,7 +252,7 @@ public void didReceivedNotification(int id, Object... args) {
     public void onResume() {
         super.onResume();
         updateAvatarLayout();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index e34e53982..33771b97b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -35,7 +35,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.SecretChatHelper;
@@ -319,7 +319,7 @@ public void onItemClick(View view, int position) {
                                 if (!MessagesController.isFeatureEnabled("broadcast_create", ContactsActivity.this)) {
                                     return;
                                 }
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 if (!BuildVars.DEBUG_VERSION && preferences.getBoolean("channel_intro", false)) {
                                     Bundle args = new Bundle();
                                     args.putInt("step", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java
index 2a6871427..d2c6e914b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DataSettingsActivity.java
@@ -21,7 +21,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
@@ -213,7 +213,7 @@ public void onClick(View v) {
                                     }
                                 }
                             }
-                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
                             if (position == mobileDownloadRow) {
                                 editor.putInt("mobileDataDownloadMask", newMask);
                                 MediaController.getInstance().mobileDataDownloadMask = newMask;
@@ -236,7 +236,7 @@ public void onClick(View v) {
                 } else if (position == storageUsageRow) {
                     presentFragment(new CacheControlActivity());
                 } else if (position == useLessDataForCallsRow) {
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     Dialog dlg = AlertsCreator.createSingleChoiceDialog(getParentActivity(), DataSettingsActivity.this, new String[]{
                                     LocaleController.getString("UseLessDataNever", R.string.UseLessDataNever),
                                     LocaleController.getString("UseLessDataOnMobile", R.string.UseLessDataOnMobile),
@@ -323,7 +323,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     if (position == storageUsageRow) {
                         textCell.setText(LocaleController.getString("StorageUsage", R.string.StorageUsage), true);
                     } else if (position == useLessDataForCallsRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         String value = null;
                         switch (preferences.getInt("VoipDataSaving", VoIPController.DATA_SAVING_NEVER)) {
                             case VoIPController.DATA_SAVING_NEVER:
@@ -363,7 +363,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     if (position == mobileDownloadRow || position == wifiDownloadRow || position == roamingDownloadRow) {
                         int mask;
                         String value;
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         if (position == mobileDownloadRow) {
                             value = LocaleController.getString("WhenUsingMobileData", R.string.WhenUsingMobileData);
                             mask = MediaController.getInstance().mobileDataDownloadMask;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 60ad2df5e..7b9d3f1ac 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -43,7 +43,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.ImageLoader;
@@ -140,7 +140,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 return;
             }
             if (intent != null && !intent.getBooleanExtra("fromIntro", false)) {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.getUserTag(), MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ ChangeUserHelper.getUserTag(), MODE_PRIVATE);
                 Map<String, ?> state = preferences.getAll();
                 if (state.isEmpty()) {
                     Intent intent2 = new Intent(this, IntroActivity.class);
@@ -356,7 +356,7 @@ public void onItemClick(View view, int position) {
                     if (!MessagesController.isFeatureEnabled("broadcast_create", actionBarLayout.fragmentsStack.get(actionBarLayout.fragmentsStack.size() - 1))) {
                         return;
                     }
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     if (!BuildVars.DEBUG_VERSION && preferences.getBoolean("channel_intro", false)) {
                         Bundle args = new Bundle();
                         args.putInt("step", 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index fa6908106..c9cc59b93 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -48,7 +48,7 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
@@ -263,7 +263,7 @@ public void onRequestPermissionsResultFragment(int requestCode, String[] permiss
     private Bundle loadCurrentState() {
         try {
             Bundle bundle = new Bundle();
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
             Map<String, ?> params = preferences.getAll();
             for (Map.Entry<String, ?> entry : params.entrySet()) {
                 String key = entry.getKey();
@@ -296,7 +296,7 @@ private Bundle loadCurrentState() {
     }
 
     private void clearCurrentState() {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.clear();
         editor.commit();
@@ -515,7 +515,7 @@ public void saveSelfArgs(Bundle outState) {
                     v.saveStateParams(bundle);
                 }
             }
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("logininfo2"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
             editor.clear();
             putBundleToEditor(bundle, editor, null);
@@ -962,7 +962,7 @@ public void onNextPressed() {
                     }
                     boolean ok = true;
                     if (!permissionsItems.isEmpty()) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         if (!allowCancelCall && allowCall) {
                             getParentActivity().requestPermissions(permissionsItems.toArray(new String[permissionsItems.size()]), 6);
                         } else if (preferences.getBoolean("firstlogin", true) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.READ_PHONE_STATE) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.RECEIVE_SMS)) {
@@ -1038,7 +1038,7 @@ public void onNextPressed() {
                 params.putString("ephone", "+" + phone);
             }
             params.putString("phoneFormated", phone);
-            SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+            SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
             users.edit().putString("phone_user1", phone).commit();
             nextPressed = true;
             needShowProgress();
@@ -1095,10 +1095,10 @@ public void fillNumber() {
                                 permissionsShowItems.add(Manifest.permission.RECEIVE_SMS);
                             }
                             if (!permissionsShowItems.isEmpty()) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 if (preferences.getBoolean("firstloginshow", true) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.READ_PHONE_STATE) || getParentActivity().shouldShowRequestPermissionRationale(Manifest.permission.RECEIVE_SMS)) {
                                     preferences.edit().putBoolean("firstloginshow", false).commit();
-                                    SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ Change_user_helper.getUserTag(), Context.MODE_PRIVATE);
+                                    SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                                     users.edit().putInt("users_count", 1).commit();
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
index 297eb56e5..f543e318c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
@@ -42,7 +42,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
@@ -618,7 +618,7 @@ public int compare(String lhs, String rhs) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index bf90db997..6fcbebe31 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -24,7 +24,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationsController;
 import org.telegram.messenger.NotificationCenter;
@@ -210,7 +210,7 @@ public boolean supportsPredictiveItemAnimations() {
             public void onItemClick(View view, final int position) {
                 boolean enabled = false;
                 if (position == messageAlertRow || position == groupAlertRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (position == messageAlertRow) {
                         enabled = preferences.getBoolean("EnableAll", true);
@@ -222,7 +222,7 @@ public void onItemClick(View view, final int position) {
                     editor.commit();
                     updateServerNotificationsSettings(position == groupAlertRow);
                 } else if (position == messagePreviewRow || position == groupPreviewRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     if (position == messagePreviewRow) {
                         enabled = preferences.getBoolean("EnablePreviewAll", true);
@@ -235,7 +235,7 @@ public void onItemClick(View view, final int position) {
                     updateServerNotificationsSettings(position == groupPreviewRow);
                 } else if (position == messageSoundRow || position == groupSoundRow || position == callsRingtoneRow) {
                     try {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         Intent tmpIntent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
                         tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, position == callsRingtoneRow ? RingtoneManager.TYPE_RINGTONE : RingtoneManager.TYPE_NOTIFICATION);
                         tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
@@ -295,7 +295,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                                 public void run() {
                                     MessagesController.getInstance().enableJoined = true;
                                     reseting = false;
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     editor.clear();
                                     editor.commit();
@@ -309,64 +309,64 @@ public void run() {
                         }
                     });
                 } else if (position == inappSoundRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppSounds", true);
                     editor.putBoolean("EnableInAppSounds", !enabled);
                     editor.commit();
                 } else if (position == inappVibrateRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppVibrate", true);
                     editor.putBoolean("EnableInAppVibrate", !enabled);
                     editor.commit();
                 } else if (position == inappPreviewRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppPreview", true);
                     editor.putBoolean("EnableInAppPreview", !enabled);
                     editor.commit();
                 } else if (position == inchatSoundRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInChatSound", true);
                     editor.putBoolean("EnableInChatSound", !enabled);
                     editor.commit();
                     NotificationsController.getInstance().setInChatSoundEnabled(!enabled);
                 } else if (position == inappPriorityRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableInAppPriority", false);
                     editor.putBoolean("EnableInAppPriority", !enabled);
                     editor.commit();
                 } else if (position == contactJoinedRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableContactJoined", true);
                     MessagesController.getInstance().enableJoined = !enabled;
                     editor.putBoolean("EnableContactJoined", !enabled);
                     editor.commit();
                 } else if (position == pinnedMessageRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("PinnedMessages", true);
                     editor.putBoolean("PinnedMessages", !enabled);
                     editor.commit();
                 } else if (position == androidAutoAlertRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("EnableAutoNotifications", false);
                     editor.putBoolean("EnableAutoNotifications", !enabled);
                     editor.commit();
                 } else if (position == badgeNumberRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     SharedPreferences.Editor editor = preferences.edit();
                     enabled = preferences.getBoolean("badgeNumber", true);
                     editor.putBoolean("badgeNumber", !enabled);
                     editor.commit();
                     NotificationsController.getInstance().setBadgeEnabled(!enabled);
                 } else if (position == notificationsServiceConnectionRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     enabled = preferences.getBoolean("pushConnection", true);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("pushConnection", !enabled);
@@ -377,7 +377,7 @@ public void run() {
                         ConnectionsManager.getInstance().setPushConnectionEnabled(false);
                     }
                 } else if (position == notificationsServiceRow) {
-                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     enabled = preferences.getBoolean("pushService", true);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("pushService", !enabled);
@@ -460,7 +460,7 @@ public void onClick(DialogInterface dialog, int which) {
                             } else if (which == 6) {
                                 minutes = 60 * 4;
                             }
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             preferences.edit().putInt("repeat_messages", minutes).commit();
                             adapter.notifyItemChanged(position);
                         }
@@ -526,7 +526,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 }
             }
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
 
             if (requestCode == messageSoundRow) {
@@ -645,7 +645,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 1: {
                     TextCheckCell checkCell = (TextCheckCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     if (position == messageAlertRow) {
                         checkCell.setTextAndCheck(LocaleController.getString("Alert", R.string.Alert), preferences.getBoolean("EnableAll", true), true);
                     } else if (position == groupAlertRow) {
@@ -689,7 +689,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 3: {
                     TextColorCell textColorCell = (TextColorCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     int color;
                     if (position == messageLedRow) {
                         color = preferences.getInt("MessagesLed", 0xff0000ff);
@@ -707,7 +707,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 5:
                     TextSettingsCell textCell = (TextSettingsCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     if (position == messageSoundRow || position == groupSoundRow || position == callsRingtoneRow) {
                         String value = null;
                         if (position == messageSoundRow) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 01cad4f34..822a09315 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -72,7 +72,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildConfig;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.ImageLoader;
@@ -5695,7 +5695,7 @@ public void updateMuteButton() {
     }
 
     private void didChangedCompressionLevel(boolean request) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("compress_video2", selectedCompression);
         editor.commit();
@@ -6007,7 +6007,7 @@ private boolean processOpenVideo(String videoPath) {
 
             videoDuration *= 1000;
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             selectedCompression = preferences.getInt("compress_video2", 1);
             if (originalWidth > 1280 || originalHeight > 1280) {
                 compressionsCount = 5;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
index bfd1b808f..133286dd3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
@@ -22,7 +22,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -133,7 +133,7 @@ public void onItemClick(int id) {
                     }
 
                     if (currentType != 0 && rulesType == 0) {
-                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         boolean showed = preferences.getBoolean("privacyAlertShowed", false);
                         if (!showed) {
                             AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index 2646c001b..c4abed0e3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -17,7 +17,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -226,7 +226,7 @@ public void run() {
                     } else {
                         MessagesController.getInstance().secretWebpagePreview = 1;
                     }
-                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
+                    ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit().putInt("secretWebpage2", MessagesController.getInstance().secretWebpagePreview).commit();
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(MessagesController.getInstance().secretWebpagePreview == 1);
                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index c3007550a..adeb1021e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -52,7 +52,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesStorage;
@@ -681,7 +681,7 @@ public void onItemClick(View view, final int position) {
                             public void onClick(View v) {
                                 int i = (Integer) v.getTag();
                                 if (i == 0) {
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     editor.putInt("notify2_" + did, 0);
                                     MessagesStorage.getInstance().setDialogFlags(did, 0);
@@ -704,7 +704,7 @@ public void onClick(View v) {
                                     } else if (i == 4) {
                                         untilTime = Integer.MAX_VALUE;
                                     }
-                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                     SharedPreferences.Editor editor = preferences.edit();
                                     long flags;
                                     if (i == 4) {
@@ -1667,7 +1667,7 @@ public void onResume() {
     }
 
     public void setPlayProfileAnimation(boolean value) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         if (!AndroidUtilities.isTablet() && preferences.getBoolean("view_animations", true)) {
             playProfileAnimation = value;
         }
@@ -2690,7 +2690,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
                         }
                         textCell.setTextAndValue(LocaleController.getString("MessageLifetime", R.string.MessageLifetime), value);
                     } else if (i == settingsNotificationsRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         boolean enabled;
                         long did;
                         if (dialog_id != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index ee04a898a..c3617b626 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -31,7 +31,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.ApplicationLoader;
@@ -151,7 +151,7 @@ public boolean onFragmentCreate() {
         colorRow = rowCount++;
         ledInfoRow = rowCount++;
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         customEnabled = preferences.getBoolean("custom_" + dialog_id, false);
 
         boolean hasOverride = preferences.contains("notify2_" + dialog_id);
@@ -194,7 +194,7 @@ public View createView(final Context context) {
             public void onItemClick(int id) {
                 if (id == -1) {
                     if (notificationsEnabled && customEnabled) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         preferences.edit().putInt("notify2_" + dialog_id, 0).commit();
                     }
                     finishFragment();
@@ -221,7 +221,7 @@ public boolean supportsPredictiveItemAnimations() {
             @Override
             public void onItemClick(View view, int position) {
                 if (position == customRow && view instanceof TextCheckBoxCell) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     customEnabled = !customEnabled;
                     notificationsEnabled = customEnabled;
                     preferences.edit().putBoolean("custom_" + dialog_id, customEnabled).commit();
@@ -282,7 +282,7 @@ public void onAnimationEnd(Animator animator) {
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_NOTIFICATION);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI, RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION));
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             Uri currentSound = null;
 
                             String defaultPath = null;
@@ -311,7 +311,7 @@ public void onAnimationEnd(Animator animator) {
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_RINGTONE);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI, RingtoneManager.getDefaultUri(RingtoneManager.TYPE_RINGTONE));
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             Uri currentSound = null;
 
                             String defaultPath = null;
@@ -366,7 +366,7 @@ public void run() {
                             return;
                         }
                         final Context context1 = getParentActivity();
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         int notifyMaxCount = preferences.getInt("smart_max_count_" + dialog_id, 2);
                         int notifyDelay = preferences.getInt("smart_delay_" + dialog_id, 3 * 60);
                         if (notifyMaxCount == 0) {
@@ -425,7 +425,7 @@ public void onItemClick(View view, int position) {
                                 }
                                 int notifyMaxCount = position % 10 + 1;
                                 int notifyDelay = position / 10 + 1;
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 preferences.edit().putInt("smart_max_count_" + dialog_id, notifyMaxCount).commit();
                                 preferences.edit().putInt("smart_delay_" + dialog_id, notifyDelay * 60).commit();
                                 if (adapter != null) {
@@ -441,7 +441,7 @@ public void onItemClick(View view, int position) {
                         builder.setNegativeButton(LocaleController.getString("SmartNotificationsDisabled", R.string.SmartNotificationsDisabled), new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
-                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                                 preferences.edit().putInt("smart_max_count_" + dialog_id, 0).commit();
                                 if (adapter != null) {
                                     adapter.notifyItemChanged(smartRow);
@@ -463,7 +463,7 @@ public void run() {
                             }
                         }));
                     } else if (position == popupEnabledRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         preferences.edit().putInt("popup_" + dialog_id, 1).commit();
                         ((RadioCell) view).setChecked(true, true);
                         view = listView.findViewWithTag(2);
@@ -471,7 +471,7 @@ public void run() {
                             ((RadioCell) view).setChecked(false, true);
                         }
                     } else if (position == popupDisabledRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         preferences.edit().putInt("popup_" + dialog_id, 2).commit();
                         ((RadioCell) view).setChecked(true, true);
                         view = listView.findViewWithTag(1);
@@ -514,7 +514,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 }
             }
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
 
             if (requestCode == 12) {
@@ -612,7 +612,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 1: {
                     TextSettingsCell textCell = (TextSettingsCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     if (position == soundRow) {
                         String value = preferences.getString("sound_" + dialog_id, LocaleController.getString("SoundDefault", R.string.SoundDefault));
                         if (value.equals("NoSound")) {
@@ -696,7 +696,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 3: {
                     TextColorCell textCell = (TextColorCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     int color;
                     if (preferences.contains("color_" + dialog_id)) {
                         color = preferences.getInt("color_" + dialog_id, 0xff0000ff);
@@ -718,7 +718,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 4: {
                     RadioCell radioCell = (RadioCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     int popup = preferences.getInt("popup_" + dialog_id, 0);
                     if (popup == 0) {
                         popup = preferences.getInt((int) dialog_id < 0 ? "popupGroup" : "popupAll", 0);
@@ -739,7 +739,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 5: {
                     TextCheckBoxCell cell = (TextCheckBoxCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     cell.setTextAndCheck(LocaleController.getString("NotificationsEnableCustom", R.string.NotificationsEnableCustom), customEnabled && notificationsEnabled, false);
                     break;
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java
index 44cc44f04..c0ffeb390 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ReportOtherActivity.java
@@ -26,7 +26,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
@@ -130,7 +130,7 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
     @Override
     public void onResume() {
         super.onResume();
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
             firstNameField.requestFocus();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index df464ad6b..33704abca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -55,7 +55,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.UserObject;
@@ -395,7 +395,7 @@ public void onItemClick(View view, final int position) {
                     builder.setNegativeButton(LocaleController.getString("Done", R.string.Done), new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.putInt("fons_size", numberPicker.getValue());
                             MessagesController.getInstance().fontSize = numberPicker.getValue();
@@ -407,7 +407,7 @@ public void onClick(DialogInterface dialog, int which) {
                     });
                     showDialog(builder.create());
                 } else if (position == enableAnimationsRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     boolean animations = preferences.getBoolean("view_animations", true);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("view_animations", !animations);
@@ -458,7 +458,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 } else if (position == clearLogsRow) {
                     FileLog.cleanupLogs();
                 } else if (position == sendByEnterRow) {
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     boolean send = preferences.getBoolean("send_by_enter", false);
                     SharedPreferences.Editor editor = preferences.edit();
                     editor.putBoolean("send_by_enter", !send);
@@ -533,7 +533,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     }, new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
                             editor.putInt("sortContactsBy", which);
                             editor.commit();
@@ -600,7 +600,7 @@ public void onClick(View v) {
                             } catch (Exception e) {
                                 FileLog.e(e);
                             }
-                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE).edit();
+                            SharedPreferences.Editor editor = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE).edit();
                             editor.putBoolean("allowBigEmoji", MessagesController.getInstance().allowBigEmoji = maskValues[0]);
                             editor.putBoolean("useSystemEmoji", MessagesController.getInstance().useSystemEmoji = maskValues[1]);
                             editor.commit();
@@ -879,7 +879,7 @@ public int getSelectedCount() {
     }
 
     private void performAskAQuestion() {
-        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         int uid = preferences.getInt("support_id", 0);
         TLRPC.User supportUser = null;
         if (uid != 0) {
@@ -1178,7 +1178,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 case 2: {
                     TextSettingsCell textCell = (TextSettingsCell) holder.itemView;
                     if (position == textSizeRow) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         int size = preferences.getInt("fons_size", AndroidUtilities.isTablet() ? 18 : 16);
                         textCell.setTextAndValue(LocaleController.getString("TextSize", R.string.TextSize), String.format("%d", size), true);
                     } else if (position == languageRow) {
@@ -1187,7 +1187,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         textCell.setTextAndValue(LocaleController.getString("Theme", R.string.Theme), Theme.getCurrentThemeName(), true);
                     } else if (position == contactsSortRow) {
                         String value;
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         int sort = preferences.getInt("sortContactsBy", 0);
                         if (sort == 0) {
                             value = LocaleController.getString("Default", R.string.Default);
@@ -1229,7 +1229,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 case 3: {
                     TextCheckCell textCell = (TextCheckCell) holder.itemView;
-                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                     if (position == enableAnimationsRow) {
                         textCell.setTextAndCheck(LocaleController.getString("EnableAnimations", R.string.EnableAnimations), preferences.getBoolean("view_animations", true), false);
                     } else if (position == sendByEnterRow) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
index aad8ddf70..d2f329aac 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
@@ -22,7 +22,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.R;
@@ -58,7 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
             return;
         }
 
-        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         String message = sharedPreferences.getString(hash + "_m", null);
         if (TextUtils.isEmpty(message)) {
             finish();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
index a23bfe474..a0dbe5394 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
@@ -30,7 +30,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
@@ -167,7 +167,7 @@ public void onClick(View v) {
                             listAdapter.notifyDataSetChanged();
                             alertDialog.dismiss();
 
-                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                             if (preferences.getBoolean("themehint", false)) {
                                 return;
                             }
@@ -260,7 +260,7 @@ public void onClick(DialogInterface dialog, final int which) {
                                             for (HashMap.Entry<String, Integer> entry : Theme.getDefaultColors().entrySet()) {
                                                 result.append(entry.getKey()).append("=").append(entry.getValue()).append("\n");
                                             }
-                                            currentFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "default_theme.attheme");
+                                            currentFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "default_theme.attheme");
                                             FileOutputStream stream = null;
                                             try {
                                                 stream = new FileOutputStream(currentFile);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index c3d9bf6a7..a0c0071d0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -50,7 +50,7 @@
 import com.googlecode.mp4parser.util.Path;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
@@ -1218,7 +1218,7 @@ public void onClick(View view) {
     }
 
     private void didChangedCompressionLevel(boolean request) {
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
         editor.putInt("compress_video2", selectedCompression);
         editor.commit();
@@ -1648,7 +1648,7 @@ private boolean processOpenVideo() {
 
             videoDuration *= 1000;
 
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             selectedCompression = preferences.getInt("compress_video2", 1);
             updateWidthHeightBitrateForCompression();
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
index 2a4f5671e..857e5d911 100755
--- a/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VoIPActivity.java
@@ -56,7 +56,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.ImageReceiver;
@@ -1124,7 +1124,7 @@ public void run() {
                     showRetry();
                 } else if (state == VoIPService.STATE_ESTABLISHED) {
                     if(!wasFirstStateChange){
-                        int count=getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), MODE_PRIVATE).getInt("call_emoji_tooltip_count", 0);
+                        int count=getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), MODE_PRIVATE).getInt("call_emoji_tooltip_count", 0);
                         if(count<3){
                             setEmojiTooltipVisible(true);
                             hintTextView.postDelayed(tooltipHider=new Runnable(){
@@ -1134,7 +1134,7 @@ public void run(){
                                     setEmojiTooltipVisible(false);
                                 }
                             }, 5000);
-                            getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), MODE_PRIVATE).edit().putInt("call_emoji_tooltip_count", count+1).apply();
+                            getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), MODE_PRIVATE).edit().putInt("call_emoji_tooltip_count", count+1).apply();
                         }
                     }
                     setStateTextAnimated("0:00", false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
index 8f4b9f3cc..d8dd7c790 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
@@ -26,7 +26,7 @@
 import android.widget.ImageView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.support.widget.LinearLayoutManager;
 import org.telegram.messenger.support.widget.RecyclerView;
@@ -89,7 +89,7 @@ public boolean onFragmentCreate() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.wallpapersDidLoaded);
 
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
         selectedBackground = preferences.getInt("selectedBackground", 1000001);
         overrideThemeWallpaper = preferences.getBoolean("overrideThemeWallpaper", false);
         selectedColor = preferences.getInt("selectedColor", 0);
@@ -148,7 +148,7 @@ public void onItemClick(int id) {
                         TLRPC.PhotoSize size = FileLoader.getClosestPhotoSizeWithSize(wallPaper.sizes, Math.min(width, height));
                         String fileName = size.location.volume_id + "_" + size.location.local_id + ".jpg";
                         File f = new File(FileLoader.getInstance().getDirectory(FileLoader.MEDIA_DIR_CACHE), fileName);
-                        File toFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "wallpaper.jpg");
+                        File toFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "wallpaper.jpg");
                         try {
                             done = AndroidUtilities.copyFile(f, toFile);
                         } catch (Exception e) {
@@ -158,7 +158,7 @@ public void onItemClick(int id) {
                     } else {
                         if (selectedBackground == -1) {
                             File fromFile = updater.getCurrentWallpaperPath();
-                            File toFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "wallpaper.jpg");
+                            File toFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "wallpaper.jpg");
                             try {
                                 done = AndroidUtilities.copyFile(fromFile, toFile);
                             } catch (Exception e) {
@@ -171,7 +171,7 @@ public void onItemClick(int id) {
                     }
 
                     if (done) {
-                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         editor.putInt("selectedBackground", selectedBackground);
                         editor.putInt("selectedColor", selectedColor);
@@ -335,7 +335,7 @@ private void processSelectedBackground() {
                     if (wallpaperFile != null) {
                         toFile = wallpaperFile;
                     } else {
-                        toFile = new File(ApplicationLoader.getFilesDirFixed()+Change_user_helper.getUserTag(), "wallpaper.jpg");
+                        toFile = new File(ApplicationLoader.getFilesDirFixed()+ ChangeUserHelper.getUserTag(), "wallpaper.jpg");
                     }
                     if (toFile.exists()) {
                         backgroundImage.setImageURI(Uri.fromFile(toFile));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
index 3e4d117d4..12566c3e9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
@@ -29,7 +29,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.Change_user_helper;
+import org.telegram.messenger.ChangeUserHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
@@ -238,7 +238,7 @@ public static boolean supportWebview() {
     public static void openGameInBrowser(String urlStr, MessageObject messageObject, Activity parentActivity, String short_name, String username) {
         try {
             String url = urlStr;
-            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare"+ Change_user_helper.getUserTag(), Activity.MODE_PRIVATE);
+            SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("botshare"+ ChangeUserHelper.getUserTag(), Activity.MODE_PRIVATE);
             String existing = sharedPreferences.getString("" + messageObject.getId(), null);
             StringBuilder hash = new StringBuilder(existing != null ? existing : "");
             StringBuilder addHash = new StringBuilder("tgShareScoreUrl=" + URLEncoder.encode("tgb://share_game_score?hash=", "UTF-8"));
diff --git a/TMessagesProj/src/main/res/drawable/ic_add_black_24dp.xml b/TMessagesProj/src/main/res/drawable/ic_add_black_24dp.xml
new file mode 100644
index 000000000..0258249cc
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/ic_add_black_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
+</vector>
diff --git a/TMessagesProj/src/main/res/layout/activity_change_user.xml b/TMessagesProj/src/main/res/layout/activity_change_user.xml
index af71ce5ee..8b11891cf 100644
--- a/TMessagesProj/src/main/res/layout/activity_change_user.xml
+++ b/TMessagesProj/src/main/res/layout/activity_change_user.xml
@@ -1,38 +1,26 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+xmlns:app="http://schemas.android.com/apk/res-auto"
 android:layout_width="match_parent"
 android:layout_height="match_parent">
-    <Button
-        android:id="@+id/setUser1"
-        android:onClick="setUser1"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentEnd="true"
-        android:layout_alignParentRight="true"
-        android:layout_alignParentTop="true"
-        android:layout_marginEnd="131dp"
-        android:layout_marginRight="131dp"
-        android:layout_marginTop="207dp"
-        android:text="setUser1" />
 
-    <Button
-        android:id="@+id/setUser2"
-        android:onClick="setUser2"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="setUser2"
-        android:layout_below="@+id/setUser1"
-        android:layout_alignLeft="@+id/setUser1"
-        android:layout_alignStart="@+id/setUser1"
-        android:layout_marginTop="18dp" />
-
-    <TextView
-        android:id="@+id/tvUserCurrent"
-        android:theme="@style/HockeyApp.ButtonStyle"
+      <ListView
+        android:id="@+id/users_listview"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="100dp"
-        android:text="TextView"
-        android:layout_alignParentRight="true"
-        android:layout_alignParentEnd="true" />
+        android:layout_height="match_parent"
+        android:layout_centerVertical="true"
+        android:theme="@style/Theme.TMessages"
+        android:layout_centerHorizontal="true" />
+
+      <android.support.design.widget.FloatingActionButton
+          android:id="@+id/fab"
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:layout_gravity="bottom|end"
+          android:layout_margin="@dimen/fab_margin"
+          android:theme="@style/Theme.AppCompat.Light"
+          android:layout_alignParentBottom="true"
+          android:layout_alignParentRight="true"
+          app:srcCompat="@drawable/ic_add_black_24dp" />
+
 </RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/user_list_item.xml b/TMessagesProj/src/main/res/layout/user_list_item.xml
new file mode 100644
index 000000000..e175f3d77
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/user_list_item.xml
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    android:id="@+id/relativeLayout1"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:theme="@style/Theme.TMessages"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:padding="5dip">
+
+    <ImageView
+        android:layout_width="50dip"
+        android:layout_height="50dip"
+        android:id="@+id/userPhoto"
+        android:src="@drawable/book_user"
+        android:layout_alignParentLeft="true"
+        android:theme="@style/Theme.AppCompat.Light"
+        android:layout_centerInParent="true"
+        android:scaleType="center">
+    </ImageView>
+
+    <TextView
+        android:textAppearance="?android:attr/textAppearanceLarge"
+        android:layout_height="wrap_content"
+        android:text="TextView"
+        android:layout_width="wrap_content"
+        android:id="@+id/userName"
+        android:layout_toRightOf="@+id/userPhoto"
+        android:layout_marginLeft="2dip">
+    </TextView>
+
+    <TextView
+        android:layout_height="wrap_content"
+        android:text="TextView"
+        android:layout_width="wrap_content"
+        android:id="@+id/userPhone"
+        android:layout_toRightOf="@+id/userPhoto"
+        android:layout_below="@+id/userName"
+        android:layout_marginLeft="2dip">
+    </TextView>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/dimens.xml b/TMessagesProj/src/main/res/values/dimens.xml
new file mode 100644
index 000000000..59a0b0c4f
--- /dev/null
+++ b/TMessagesProj/src/main/res/values/dimens.xml
@@ -0,0 +1,3 @@
+<resources>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
