diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 580a713c2..d944e74e6 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -83,7 +83,7 @@ android {
     }
 
     defaultConfig {
-        minSdkVersion 14
+        minSdkVersion 15
         targetSdkVersion 23
         versionCode 720
         versionName "3.4.2"
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index 47298f5f5..a4abfc646 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -676,16 +676,16 @@ public static Spannable replaceTags(String str, int flag) {
 
     public static boolean needShowPasscode(boolean reset) {
         boolean wasInBackground;
-        if (Build.VERSION.SDK_INT >= 14) {
-            wasInBackground = ForegroundDetector.getInstance().isWasInBackground(reset);
-            if (reset) {
-                ForegroundDetector.getInstance().resetBackgroundVar();
-            }
-        } else {
-            wasInBackground = UserConfig.lastPauseTime != 0;
-        }
-        return UserConfig.passcodeHash.length() > 0 && wasInBackground &&
-                (UserConfig.appLocked || UserConfig.autoLockIn != 0 && UserConfig.lastPauseTime != 0 && !UserConfig.appLocked && (UserConfig.lastPauseTime + UserConfig.autoLockIn) <= ConnectionsManager.getInstance().getCurrentTime());
+        wasInBackground = ForegroundDetector.getInstance().isWasInBackground(reset);
+        if (reset) {
+            ForegroundDetector.getInstance().resetBackgroundVar();
+        }
+        return UserConfig.passcodeHash.length() > 0 &&
+                wasInBackground &&
+                (UserConfig.appLocked || UserConfig.autoLockIn != 0 &&
+                        UserConfig.lastPauseTime != 0 &&
+                        !UserConfig.appLocked &&
+                        (UserConfig.lastPauseTime + UserConfig.autoLockIn) <= ConnectionsManager.getInstance().getCurrentTime());
     }
 
     public static void shakeView(final View view, final float x, final int num) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 23a3068fb..589fc8c5a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -260,11 +260,9 @@ public void onCreate() {
 
         applicationContext = getApplicationContext();
         NativeLoader.initNativeLibs(ApplicationLoader.applicationContext);
-        ConnectionsManager.native_setJava(Build.VERSION.SDK_INT == 14 || Build.VERSION.SDK_INT == 15);
+        ConnectionsManager.native_setJava(Build.VERSION.SDK_INT == 15);
 
-        if (Build.VERSION.SDK_INT >= 14) {
-            new ForegroundDetector(this);
-        }
+        new ForegroundDetector(this);
 
         applicationHandler = new Handler(applicationContext.getMainLooper());
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Bitmaps.java b/TMessagesProj/src/main/java/org/telegram/messenger/Bitmaps.java
index 4cd686411..4eca8e1cc 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Bitmaps.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Bitmaps.java
@@ -110,7 +110,7 @@
 
     public static Bitmap createBitmap(int width, int height, Bitmap.Config config) {
         Bitmap bitmap;
-        if (Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21) {
+        if (Build.VERSION.SDK_INT < 21) {
             BitmapFactory.Options options = new BitmapFactory.Options();
             options.inDither = true;
             options.inPreferredConfig = config;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java
index 6fe27715a..665916117 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java
@@ -633,7 +633,7 @@ public void run() {
                         BitmapFactory.Options opts = new BitmapFactory.Options();
                         opts.inSampleSize = 1;
 
-                        if (Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21) {
+                        if (Build.VERSION.SDK_INT < 21) {
                             opts.inPurgeable = true;
                         }
 
@@ -784,7 +784,7 @@ public void run() {
                         } else {
                             opts.inPreferredConfig = Bitmap.Config.RGB_565;
                         }
-                        if (Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21) {
+                        if (Build.VERSION.SDK_INT < 21) {
                             opts.inPurgeable = true;
                         }
 
@@ -2055,7 +2055,7 @@ public static Bitmap loadBitmap(String path, Uri uri, float maxWidth, float maxH
         }
         bmOptions.inJustDecodeBounds = false;
         bmOptions.inSampleSize = (int) scaleFactor;
-        bmOptions.inPurgeable = Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21;
+        bmOptions.inPurgeable = Build.VERSION.SDK_INT < 21;
 
         String exifPath = null;
         if (path != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
index be24d05c0..94d69bcd8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
@@ -938,9 +938,6 @@ private void checkDownloadFinished(String fileName, int state) {
     }
 
     public void startMediaObserver() {
-        if (android.os.Build.VERSION.SDK_INT < 14) {
-            return;
-        }
         ApplicationLoader.applicationHandler.removeCallbacks(stopMediaObserverRunnable);
         startObserverToken++;
         try {
@@ -960,9 +957,6 @@ public void startMediaObserver() {
     }
 
     public void stopMediaObserver() {
-        if (android.os.Build.VERSION.SDK_INT < 14) {
-            return;
-        }
         if (stopMediaObserverRunnable == null) {
             stopMediaObserverRunnable = new StopMediaObserverRunnable();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 8f9e5bb6e..30d7e5864 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -2773,34 +2773,32 @@ public void run() {
                                 video.size = (int) temp.length();
                             }
                             boolean infoObtained = false;
-                            if (Build.VERSION.SDK_INT >= 14) {
-                                MediaMetadataRetriever mediaMetadataRetriever = null;
+                            MediaMetadataRetriever mediaMetadataRetriever = null;
+                            try {
+                                mediaMetadataRetriever = new MediaMetadataRetriever();
+                                mediaMetadataRetriever.setDataSource(videoPath);
+                                String width = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_WIDTH);
+                                if (width != null) {
+                                    video.w = Integer.parseInt(width);
+                                }
+                                String height = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_HEIGHT);
+                                if (height != null) {
+                                    video.h = Integer.parseInt(height);
+                                }
+                                String duration = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION);
+                                if (duration != null) {
+                                    video.duration = (int) Math.ceil(Long.parseLong(duration) / 1000.0f);
+                                }
+                                infoObtained = true;
+                            } catch (Exception e) {
+                                FileLog.e("tmessages", e);
+                            } finally {
                                 try {
-                                    mediaMetadataRetriever = new MediaMetadataRetriever();
-                                    mediaMetadataRetriever.setDataSource(videoPath);
-                                    String width = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_WIDTH);
-                                    if (width != null) {
-                                        video.w = Integer.parseInt(width);
-                                    }
-                                    String height = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_HEIGHT);
-                                    if (height != null) {
-                                        video.h = Integer.parseInt(height);
+                                    if (mediaMetadataRetriever != null) {
+                                        mediaMetadataRetriever.release();
                                     }
-                                    String duration = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION);
-                                    if (duration != null) {
-                                        video.duration = (int) Math.ceil(Long.parseLong(duration) / 1000.0f);
-                                    }
-                                    infoObtained = true;
                                 } catch (Exception e) {
                                     FileLog.e("tmessages", e);
-                                } finally {
-                                    try {
-                                        if (mediaMetadataRetriever != null) {
-                                            mediaMetadataRetriever.release();
-                                        }
-                                    } catch (Exception e) {
-                                        FileLog.e("tmessages", e);
-                                    }
                                 }
                             }
                             if (!infoObtained) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
index e596cbeb8..2c8ca8d5e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
@@ -237,51 +237,36 @@ public void showActionMode() {
             return;
         }
         actionModeVisible = true;
-        if (Build.VERSION.SDK_INT >= 14) {
-            Collection<Animator> animators = new ArrayList<>();
-            animators.add(ObjectAnimator.ofFloat(actionMode, "alpha", 0.0f, 1.0f));
-            if (occupyStatusBar && actionModeTop != null) {
-                animators.add(ObjectAnimator.ofFloat(actionModeTop, "alpha", 0.0f, 1.0f));
-            }
-            AnimatorSet animatorSetProxy = new AnimatorSet();
-            animatorSetProxy.playTogether(animators);
-            animatorSetProxy.setDuration(200);
-            animatorSetProxy.addListener(new AnimatorListenerAdapter() {
-                public void onAnimationStart(Object animation) {
-                    actionMode.setVisibility(VISIBLE);
-                    if (occupyStatusBar && actionModeTop != null) {
-                        actionModeTop.setVisibility(VISIBLE);
-                    }
+        Collection<Animator> animators = new ArrayList<>();
+        animators.add(ObjectAnimator.ofFloat(actionMode, "alpha", 0.0f, 1.0f));
+        if (occupyStatusBar && actionModeTop != null) {
+            animators.add(ObjectAnimator.ofFloat(actionModeTop, "alpha", 0.0f, 1.0f));
+        }
+        AnimatorSet animatorSetProxy = new AnimatorSet();
+        animatorSetProxy.playTogether(animators);
+        animatorSetProxy.setDuration(200);
+        animatorSetProxy.addListener(new AnimatorListenerAdapter() {
+            public void onAnimationStart(Object animation) {
+                actionMode.setVisibility(VISIBLE);
+                if (occupyStatusBar && actionModeTop != null) {
+                    actionModeTop.setVisibility(VISIBLE);
                 }
+            }
 
-                public void onAnimationEnd(Object animation) {
-                    if (titleTextView != null) {
-                        titleTextView.setVisibility(INVISIBLE);
-                    }
-                    if (subTitleTextView != null) {
-                        subTitleTextView.setVisibility(INVISIBLE);
-                    }
-                    if (menu != null) {
-                        menu.setVisibility(INVISIBLE);
-                    }
+            public void onAnimationEnd(Object animation) {
+                if (titleTextView != null) {
+                    titleTextView.setVisibility(INVISIBLE);
+                }
+                if (subTitleTextView != null) {
+                    subTitleTextView.setVisibility(INVISIBLE);
+                }
+                if (menu != null) {
+                    menu.setVisibility(INVISIBLE);
                 }
-            });
-            animatorSetProxy.start();
-        } else {
-            actionMode.setVisibility(VISIBLE);
-            if (occupyStatusBar && actionModeTop != null) {
-                actionModeTop.setVisibility(VISIBLE);
-            }
-            if (titleTextView != null) {
-                titleTextView.setVisibility(INVISIBLE);
-            }
-            if (subTitleTextView != null) {
-                subTitleTextView.setVisibility(INVISIBLE);
-            }
-            if (menu != null) {
-                menu.setVisibility(INVISIBLE);
             }
-        }
+        });
+        animatorSetProxy.start();
+
         if (backButtonImageView != null) {
             Drawable drawable = backButtonImageView.getDrawable();
             if (drawable instanceof BackDrawable) {
@@ -296,30 +281,23 @@ public void hideActionMode() {
             return;
         }
         actionModeVisible = false;
-        if (Build.VERSION.SDK_INT >= 14) {
-            Collection<Animator> animators = new ArrayList<>();
-            animators.add(ObjectAnimator.ofFloat(actionMode, "alpha", 0.0f));
-            if (occupyStatusBar && actionModeTop != null) {
-                animators.add(ObjectAnimator.ofFloat(actionModeTop, "alpha", 0.0f));
-            }
-            AnimatorSet animatorSetProxy = new AnimatorSet();
-            animatorSetProxy.playTogether(animators);
-            animatorSetProxy.setDuration(200);
-            animatorSetProxy.addListener(new AnimatorListenerAdapter() {
-                public void onAnimationEnd(Object animation) {
-                    actionMode.setVisibility(INVISIBLE);
-                    if (occupyStatusBar && actionModeTop != null) {
-                        actionModeTop.setVisibility(INVISIBLE);
-                    }
+        Collection<Animator> animators = new ArrayList<>();
+        animators.add(ObjectAnimator.ofFloat(actionMode, "alpha", 0.0f));
+        if (occupyStatusBar && actionModeTop != null) {
+            animators.add(ObjectAnimator.ofFloat(actionModeTop, "alpha", 0.0f));
+        }
+        AnimatorSet animatorSetProxy = new AnimatorSet();
+        animatorSetProxy.playTogether(animators);
+        animatorSetProxy.setDuration(200);
+        animatorSetProxy.addListener(new AnimatorListenerAdapter() {
+            public void onAnimationEnd(Object animation) {
+                actionMode.setVisibility(INVISIBLE);
+                if (occupyStatusBar && actionModeTop != null) {
+                    actionModeTop.setVisibility(INVISIBLE);
                 }
-            });
-            animatorSetProxy.start();
-        } else {
-            actionMode.setVisibility(INVISIBLE);
-            if (occupyStatusBar && actionModeTop != null) {
-                actionModeTop.setVisibility(INVISIBLE);
             }
-        }
+        });
+        animatorSetProxy.start();
         if (titleTextView != null) {
             titleTextView.setVisibility(VISIBLE);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 575e04cd3..603c4c228 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -330,7 +330,7 @@ public static StaticLayout generateStaticLayout(CharSequence text, TextPaint pai
         StaticLayout layout = new StaticLayout(text, paint, smallWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
         for (int a = 0; a < linesCount; a++) {
             Layout.Directions directions = layout.getLineDirections(a);
-            if (layout.getLineLeft(a) != 0 || Build.VERSION.SDK_INT >= 14 && (layout.isRtlCharAt(layout.getLineStart(a)) || layout.isRtlCharAt(layout.getLineEnd(a)))) {
+            if ((layout.isRtlCharAt(layout.getLineStart(a)) || layout.isRtlCharAt(layout.getLineEnd(a)))) {
                 maxWidth = smallWidth;
             }
             int pos = layout.getLineEnd(a);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AnimatedFileDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AnimatedFileDrawable.java
index 098a000a9..9ec709eb9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AnimatedFileDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AnimatedFileDrawable.java
@@ -109,7 +109,7 @@ public void run() {
                         }
                     }
                     if (backgroundBitmap != null) {
-                        /*if (Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21) {
+                        /*if (Build.VERSION.SDK_INT < 21) {
                             Utilities.unpinBitmap(backgroundBitmap);
                         }*/
                         getVideoFrame(nativePtr, backgroundBitmap, metaData);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index 52b221d2e..500ff41f5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -754,22 +754,18 @@ private void processDone(boolean fingerprint) {
         passwordEditText.clearFocus();
         AndroidUtilities.hideKeyboard(passwordEditText);
 
-        if (Build.VERSION.SDK_INT >= 14) {
-            AnimatorSet animatorSet = new AnimatorSet();
-            animatorSet.setDuration(200);
-            animatorSet.playTogether(
-                    ObjectAnimator.ofFloat(this, "translationY", AndroidUtilities.dp(20)),
-                    ObjectAnimator.ofFloat(this, "alpha", AndroidUtilities.dp(0.0f)));
-            animatorSet.addListener(new AnimatorListenerAdapter(){
-                public void onAnimationEnd(Object animation) {
-                    PasscodeView.this.clearAnimation();
-                    setVisibility(View.GONE);
-                }
-            });
-            animatorSet.start();
-        } else {
-            setVisibility(View.GONE);
-        }
+        AnimatorSet animatorSet = new AnimatorSet();
+        animatorSet.setDuration(200);
+        animatorSet.playTogether(
+                ObjectAnimator.ofFloat(this, "translationY", AndroidUtilities.dp(20)),
+                ObjectAnimator.ofFloat(this, "alpha", AndroidUtilities.dp(0.0f)));
+        animatorSet.addListener(new AnimatorListenerAdapter(){
+            public void onAnimationEnd(Object animation) {
+                PasscodeView.this.clearAnimation();
+                setVisibility(View.GONE);
+            }
+        });
+        animatorSet.start();
 
         UserConfig.appLocked = false;
         UserConfig.saveConfig(false);
@@ -974,11 +970,9 @@ public void onShow() {
         if (getVisibility() == View.VISIBLE) {
             return;
         }
-        if (Build.VERSION.SDK_INT >= 14) {
-            this.setAlpha(1.0f);
-            this.setTranslationY(0);
-            this.clearAnimation();
-        }
+        this.setAlpha(1.0f);
+        this.setTranslationY(0);
+        this.clearAnimation();
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         int selectedBackground = preferences.getInt("selectedBackground", 1000001);
         if (selectedBackground == 1000001) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
index 12e22ed75..93781cfe5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
@@ -1326,7 +1326,7 @@ public PhotoFilterView(Context context, Bitmap bitmap, int rotation) {
         orientation = rotation;
 
         textureView = new TextureView(context);
-        if (Build.VERSION.SDK_INT == 14 || Build.VERSION.SDK_INT == 15) {
+        if (Build.VERSION.SDK_INT == 15) {
             //setLayerType(LAYER_TYPE_HARDWARE, null);
             //textureView.setLayerType(LAYER_TYPE_HARDWARE, null);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java
index 8739fb738..dd150066e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java
@@ -79,27 +79,27 @@ public static StaticLayout createStaticLayout(CharSequence source, TextPaint pai
     }
 
     public static StaticLayout createStaticLayout(CharSequence source, int bufstart, int bufend, TextPaint paint, int outerWidth, Layout.Alignment align, float spacingMult, float spacingAdd, boolean includePad, TextUtils.TruncateAt ellipsize, int ellipsisWidth, int maxLines) {
-        /*if (Build.VERSION.SDK_INT >= 14) {
-            init();
-            try {
-                sConstructorArgs[0] = source;
-                sConstructorArgs[1] = bufstart;
-                sConstructorArgs[2] = bufend;
-                sConstructorArgs[3] = paint;
-                sConstructorArgs[4] = outerWidth;
-                sConstructorArgs[5] = align;
-                sConstructorArgs[6] = sTextDirection;
-                sConstructorArgs[7] = spacingMult;
-                sConstructorArgs[8] = spacingAdd;
-                sConstructorArgs[9] = includePad;
-                sConstructorArgs[10] = ellipsize;
-                sConstructorArgs[11] = ellipsisWidth;
-                sConstructorArgs[12] = maxLines;
-                return sConstructor.newInstance(sConstructorArgs);
-            } catch (Exception e) {
-                FileLog.e("tmessages", e);
-            }
-        }*/
+        /*
+        init();
+        try {
+            sConstructorArgs[0] = source;
+            sConstructorArgs[1] = bufstart;
+            sConstructorArgs[2] = bufend;
+            sConstructorArgs[3] = paint;
+            sConstructorArgs[4] = outerWidth;
+            sConstructorArgs[5] = align;
+            sConstructorArgs[6] = sTextDirection;
+            sConstructorArgs[7] = spacingMult;
+            sConstructorArgs[8] = spacingAdd;
+            sConstructorArgs[9] = includePad;
+            sConstructorArgs[10] = ellipsize;
+            sConstructorArgs[11] = ellipsisWidth;
+            sConstructorArgs[12] = maxLines;
+            return sConstructor.newInstance(sConstructorArgs);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
+        */
         try {
             if (maxLines == 1) {
                 CharSequence text = TextUtils.ellipsize(source, paint, ellipsisWidth, TextUtils.TruncateAt.END);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index cf8005f79..996467731 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -360,9 +360,6 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.closeOtherAppActivities);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.didUpdatedConnectionState);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.needShowAlert);
-        if (Build.VERSION.SDK_INT < 14) {
-            NotificationCenter.getInstance().addObserver(this, NotificationCenter.screenStateChanged);
-        }
 
         if (actionBarLayout.fragmentsStack.isEmpty()) {
             if (!UserConfig.isClientActivated()) {
@@ -1359,9 +1356,6 @@ private void onFinish() {
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.closeOtherAppActivities);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.didUpdatedConnectionState);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.needShowAlert);
-        if (Build.VERSION.SDK_INT < 14) {
-            NotificationCenter.getInstance().removeObserver(this, NotificationCenter.screenStateChanged);
-        }
     }
 
     public void presentFragment(BaseFragment fragment) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java
index edcc97be7..7d4a76913 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java
@@ -260,7 +260,7 @@ public void openPhoto(MessageObject messageObject) {
             File file = FileLoader.getPathToAttach(sizeFull);
             Bitmap bitmap = null;
             BitmapFactory.Options options = null;
-            if (Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21) {
+            if (Build.VERSION.SDK_INT < 21) {
                 options = new BitmapFactory.Options();
                 options.inDither = true;
                 options.inPreferredConfig = Bitmap.Config.ARGB_8888;
