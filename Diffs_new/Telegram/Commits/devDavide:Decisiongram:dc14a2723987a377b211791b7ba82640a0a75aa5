diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
index 7a2b50bb3..28fa5240a 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
@@ -27,6 +27,12 @@
     private final PollgramService pollgramService;
     private final LayoutInflater inflater;
 
+    /**
+     *
+     * @param context
+     * @param items
+     * @param groupMemberCount or -1 for do not show this info
+     */
     public DecisionAdapter(Context context,  List<Decision> items, int groupMemberCount) {
         super(context, LAYOUT_RES_ID, items);
         this.groupMemberCount = groupMemberCount;
@@ -34,6 +40,15 @@ public DecisionAdapter(Context context,  List<Decision> items, int groupMemberCo
         inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
     }
 
+    /**
+     * do not show how many users votes out of the total
+     * @param context
+     * @param items
+     */
+    public DecisionAdapter(Context context, List<Decision> items){
+        this(context, items, -1);
+    }
+
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
 
@@ -53,7 +68,11 @@ public View getView(int position, View convertView, ViewGroup parent) {
         String creationDateStr = DateFormat.getDateInstance(DateFormat.SHORT).
                 format(decision.getCreationDate());
         decisionSubtitle1.setText(getContext().getString(R.string.createdByUserOnDay, userAsString, creationDateStr));
-        decisionSubtitle2.setText(getContext().getString(R.string.howManyMemberVote, userThatVoteSoFar, groupMemberCount));
+        if (groupMemberCount == -1)
+            decisionSubtitle2.setVisibility(View.GONE);
+        else
+            decisionSubtitle2.setText(getContext().getString(R.string.howManyMemberVote, userThatVoteSoFar, groupMemberCount));
+
         if (!decision.isOpen())
             rowView.setBackgroundColor(Color.LTGRAY);
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAO.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAO.java
index 92e7145a6..08b792e39 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAO.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAO.java
@@ -35,6 +35,13 @@
      */
     List<Decision> getDecisions(long chatId, @Nullable Boolean open);
 
+    /**
+     * @param chatId
+     * @param  decisionOwnerId decision owner
+     * @return decision for given chat id
+     */
+    List<Decision> getDecisions(long chatId, int decisionOwnerId);
+
     /**
      * Insert or update the passed Option if not found
      * @param o
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
index ae8077f6f..46aa696ee 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
@@ -205,6 +205,18 @@ public Decision getDecision(long decisionId) {
         return helper.findById(decisionId, helper.DECISION_MAPPER);
     }
 
+    @Override
+    public List<Decision> getDecisions(long chatId, int decisionOwnerId) {
+        String selection = PGSqlLiteHelper.T_Decision.GROUP_ID + " = ? " +
+                " and " + PGSqlLiteHelper.T_Decision.DECISION_OWNER + " = ? " +
+                " and " + PGSqlLiteHelper.T_Decision.OPEN + "= ? ";
+        String[] selectionArgs = new String[]{Long.toString(chatId),
+                Integer.toString(decisionOwnerId),PGSqlLiteHelper.toString(true)};
+
+        return helper.query(helper.DECISION_MAPPER, selection, selectionArgs, null, null,
+                PGSqlLiteHelper.T_Decision.CREATION_DATE) ;
+    }
+
     @Override
     public List<Decision> getDecisions(long chatId, @Nullable Boolean open) {
         String selection = PGSqlLiteHelper.T_Decision.GROUP_ID + " = ? ";
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
index a84ff7967..c391cd699 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
@@ -29,7 +29,6 @@
     UsersDecisionVotes getUsersDecisionVotes(long decisionId, int[] members);
 
     /**
-     *
      * @param decisionId
      * @param members
      * @return a data structure representing a decision and the vote of each member
@@ -140,10 +139,23 @@ Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messa
      *
      * @param currentChat
      * @param selectedObject
-     * @return a Bundle for creating a new decision starting from a message
+     * @return a Bundle for creating a new decision starting from a message, see NewDecisionFragment
      */
     Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject selectedObject);
 
+    /**
+     * @param currentChat
+     * @param selectedObject
+     * @return a Bundle for adding a new option to a decision starting from a message, see SelectDecisionFragment
+     */
+    Bundle getBundleForNewOption(TLRPC.Chat currentChat, MessageObject selectedObject);
+
+    /**
+     * @param chatInfo
+     * @return a Bundle ready to pass to DecisionsListFragment
+     */
+    Bundle getBundleForDecisionList(TLRPC.ChatFull chatInfo);
+
     /**
      * @param user
      * @return a string representation of the passed user.
@@ -157,7 +169,6 @@ Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObject messa
     void processMessages(final long dialog_id, List<MessageObject> objects);
 
     /**
-     *
      * @param dialog_id
      * @param dialogMessagesByIds
      * @param excludeMessages
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index 41d4f413b..c3ad63068 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.style.ClickableSpan;
 import android.util.Log;
@@ -14,7 +15,9 @@
 import org.pollgram.decision.data.ParsedMessage;
 import org.pollgram.decision.data.UsersDecisionVotes;
 import org.pollgram.decision.data.Vote;
+import org.pollgram.decision.ui.DecisionsListFragment;
 import org.pollgram.decision.ui.NewDecisionFragment;
+import org.pollgram.decision.ui.SelectDecisionFragment;
 import org.pollgram.decision.ui.VotesManagerFragment;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.ApplicationLoader;
@@ -409,9 +412,44 @@ public Bundle getBundleForVotesManagerFragment(TLRPC.ChatFull info, MessageObjec
         return  bundle;
     }
 
+    @Override
+    public Bundle getBundleForDecisionList(TLRPC.ChatFull chatInfo) {
+
+        List<Integer> ids = new ArrayList<>(chatInfo.participants.participants.size());
+        for (int i = 0; i < chatInfo.participants.participants.size() ; i++){
+            TLRPC.User user = PollgramFactory.getService().getUser(chatInfo.participants.participants.get(i).user_id);
+            if (user != null)
+                ids.add(user.id);
+        }
+        int[] participantsUserIds = new int[ids.size()];
+        for (int i=0;i<ids.size();i++)
+            participantsUserIds[i] = ids.get(i);
+        Bundle args = new Bundle();
+        args.putInt(DecisionsListFragment.PAR_GROUP_CHAT_ID, chatInfo.id);
+        args.putIntArray(DecisionsListFragment.PAR_PARTICIPANT_IDS,participantsUserIds);
+        return args;
+    }
 
     @Override
     public Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject selectedObject) {
+        Bundle args = new Bundle();
+        args.putInt(NewDecisionFragment.PAR_GROUP_CHAT_ID, currentChat.id);
+        args.putString(NewDecisionFragment.PAR_DECISION_LONG_DESCRIPTION,
+                getLongDescription(selectedObject).toString());
+        return args;
+    }
+
+    @Override
+    public Bundle getBundleForNewOption(TLRPC.Chat currentChat, MessageObject selectedObject) {
+        Bundle args = new Bundle();
+        args.putInt(SelectDecisionFragment.PAR_GROUP_CHAT_ID, currentChat.id);
+        args.putString(SelectDecisionFragment.PAR_NEW_OPTION_LONG_DESCRIPTION,
+                getLongDescription(selectedObject).toString());
+        return args;
+    }
+
+    @NonNull
+    private StringBuilder getLongDescription(MessageObject selectedObject) {
         Context context = ApplicationLoader.applicationContext;
 
         TLRPC.User user =  getUser(selectedObject.messageOwner.from_id);
@@ -423,13 +461,10 @@ public Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject sele
         longDescription.append(context.getString(R.string.newDecisionFromMessageHeader, dateAsString ,userAsString));
         longDescription.append('\n');
         longDescription.append(selectedObject.messageText.toString());
-
-        Bundle args = new Bundle();
-        args.putInt(NewDecisionFragment.PAR_GROUP_CHAT_ID, currentChat.id);
-        args.putString(NewDecisionFragment.PAR_DECISION_LONG_DESCRIPTION, longDescription.toString());
-        return args;
+        return longDescription;
     }
 
+
     /**
      * Internal class used for sorting messages
      */
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index bfa9c0d51..fefd2a0ae 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -44,6 +44,10 @@
  * Created by davide on 30/09/15.
  */
 public class DecisionsListFragment extends BaseFragment {
+
+    public static final String PAR_PARTICIPANT_IDS  = "PAR_PARTICIPANT_IDS" ;
+    public static final String PAR_GROUP_CHAT_ID = "PAR_GROUP_CHAT_ID" ;
+
     private static int nextId = 1;
     private static final int ID_TOGGLE_OPEN_CLOSE_DECISIONS = nextId++;
     private static final int ID_PURGE_ALL_DATA = nextId++;
@@ -51,7 +55,7 @@
     private static final int ID_SUICIDE = nextId++;
 
     private Context context;
-    private TLRPC.ChatFull chatInfo;
+    private int groupChatId;
     private TLRPC.Chat currentChat;
 
     private PollgramDAO pollgramDAO;
@@ -64,9 +68,6 @@
     private TextView tvNodecisionPresent;
 
 
-    public DecisionsListFragment(){
-    }
-
     public DecisionsListFragment(Bundle bundle) {
         super(bundle);
     }
@@ -75,6 +76,11 @@ public DecisionsListFragment(Bundle bundle) {
     public boolean onFragmentCreate() {
         pollgramDAO = PollgramFactory.getDAO();
         hideCloseDecision = false;
+
+        this.participantsUserIds = getArguments().getIntArray(PAR_PARTICIPANT_IDS);
+        this.groupChatId = getArguments().getInt(PAR_GROUP_CHAT_ID);
+        this.currentChat = MessagesController.getInstance().getChat(groupChatId);
+
         return true;
     }
 
@@ -92,7 +98,7 @@ public View createView(final Context context) {
         final TextView viewOpenCloseTextView =  headerItem.addSubItem(ID_TOGGLE_OPEN_CLOSE_DECISIONS,
                 context.getString(hideCloseDecision ? R.string.viewCloseDecision : R.string.hideCloseDecision),0 );
 
-        // TODO remove those last items...just for test
+        // Items just for test
 //        headerItem.addSubItem(ID_PURGE_ALL_DATA, "Remove current chat decisions", 0);
 //        headerItem.addSubItem(ID_PUT_STUB_DATA_DATA, "Put stub data for current chat", 0);
         headerItem.addSubItem(ID_SUICIDE , getParentActivity().getString(R.string.doNotPressThisButton), 0);
@@ -109,7 +115,7 @@ public void onItemClick(int id) {
                     else
                         viewOpenCloseTextView.setText(R.string.hideCloseDecision);
                 } else if (id == ID_PURGE_ALL_DATA) {
-                    List<Decision> allDecisions = pollgramDAO.getDecisions(chatInfo.id, null);
+                    List<Decision> allDecisions = pollgramDAO.getDecisions(groupChatId, null);
                     for (Decision d : allDecisions) {
                         pollgramDAO.delete(d);
                     }
@@ -124,8 +130,8 @@ public void onItemClick(int id) {
 
         // inflate xml main layout
         fragmentView = new SizeNotifierFrameLayout(context);
-        LayoutInflater li = LayoutInflater.from(context);
-        View myView = li.inflate(R.layout.decision_list_layout, (ViewGroup) fragmentView);
+        LayoutInflater layoutInflater = LayoutInflater.from(context);
+        View myView = layoutInflater.inflate(R.layout.decision_list_layout, (ViewGroup) fragmentView);
         TextView tvTitle = (TextView) myView.findViewById(R.id.decision_list_tv_title);
         ViewGroup imageContainer = (ViewGroup)myView.findViewById(R.id.decision_icon_container);
         decisionsListView = (ListView) myView.findViewById(R.id.decision_list_list_view);
@@ -145,7 +151,7 @@ public void onItemClick(int id) {
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 Decision decision = (Decision) parent.getAdapter().getItem(position);
                 Bundle bundle = new Bundle();
-                bundle.putLong(VotesManagerFragment.PAR_GROUP_CHAT_ID, chatInfo.id);
+                bundle.putLong(VotesManagerFragment.PAR_GROUP_CHAT_ID, groupChatId);
                 bundle.putLong(VotesManagerFragment.PAR_DECISION_ID, decision.getId());
                 bundle.putIntArray(VotesManagerFragment.PAR_PARTICIPANT_IDS, participantsUserIds);
                 presentFragment(new VotesManagerFragment(bundle));
@@ -154,8 +160,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         });
         updateResult();
 
-        // Addig "plus" floating button
-        /// TODO add to layout or createutil methosd ?
+        // Adding "plus" floating button
         ImageView floatingButton = new ImageView(context);
         floatingButton.setScaleType(ImageView.ScaleType.CENTER);
         floatingButton.setBackgroundResource(R.drawable.floating_states);
@@ -180,7 +185,7 @@ public void getOutline(View view, Outline outline) {
             @Override
             public void onClick(View v) {
                 Bundle args = new Bundle();
-                args.putInt(NewDecisionFragment.PAR_GROUP_CHAT_ID, chatInfo.id);
+                args.putInt(NewDecisionFragment.PAR_GROUP_CHAT_ID, groupChatId);
                 presentFragment(new NewDecisionFragment(args));
             }
         });
@@ -189,7 +194,7 @@ public void onClick(View v) {
 
     private void updateResult() {
         Boolean queryPar = hideCloseDecision ? true : null;
-        List<Decision> allDecisions = pollgramDAO.getDecisions(chatInfo.id, null);
+        List<Decision> allDecisions = pollgramDAO.getDecisions(groupChatId, null);
         List<Decision> filterDecision = new ArrayList<>();
         int openCount = 0 ;
         for (Decision d : allDecisions){
@@ -211,22 +216,6 @@ private void updateResult() {
         }
     }
 
-
-    public void setChatInfo(TLRPC.ChatFull chatInfo) {
-        this.chatInfo = chatInfo;
-        List<Integer> ids = new ArrayList<>(chatInfo.participants.participants.size());
-        for (int i = 0; i < chatInfo.participants.participants.size() ; i++){
-            TLRPC.User user = PollgramFactory.getService().getUser(chatInfo.participants.participants.get(i).user_id);
-            if (user != null)
-                ids.add(user.id);
-        }
-        participantsUserIds = new int[ids.size()];
-        for (int i=0;i<ids.size();i++)
-            participantsUserIds[i] = ids.get(i);
-
-        this.currentChat = MessagesController.getInstance().getChat(chatInfo.id);
-    }
-
     @Override
     public void onResume() {
         super.onResume();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
index 2ca2946d9..dbde88e98 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -129,29 +129,6 @@ public void onItemClick(int id) {
         edLongDescription.setText(decisionLongDescription);
     }
 
-    private void abortDecisionCreation() {
-        if (edTitle.getText().toString().isEmpty() && edLongDescription.getText().toString().isEmpty()){
-            finishFragment();
-            return;
-        }
-        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-        builder.setMessage(getParentActivity().getString(R.string.abortDecisionCreation));
-        builder.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                finishFragment();
-            }
-        });
-        builder.setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                // do nothing
-            }
-        });
-        builder.show();
-    }
-
-
     private void showPage2() {
         currentPage = PAGE_2;
         reset();
@@ -245,6 +222,28 @@ public void onResume() {
 
     }
 
+    private void abortDecisionCreation() {
+        if (edTitle.getText().toString().isEmpty() && edLongDescription.getText().toString().isEmpty()){
+            finishFragment();
+            return;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setMessage(getParentActivity().getString(R.string.abortDecisionCreation));
+        builder.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                finishFragment();
+            }
+        });
+        builder.setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                // do nothing
+            }
+        });
+        builder.show();
+    }
+
     @Override
     public boolean onBackPressed() {
         if (currentPage == PAGE_1) {
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java
new file mode 100644
index 000000000..fb4cc4019
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java
@@ -0,0 +1,90 @@
+package org.pollgram.decision.ui;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import org.pollgram.R;
+import org.pollgram.decision.adapter.DecisionAdapter;
+import org.pollgram.decision.data.Decision;
+import org.pollgram.decision.service.PollgramDAO;
+import org.pollgram.decision.service.PollgramFactory;
+import org.telegram.messenger.UserConfig;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.SizeNotifierFrameLayout;
+
+import java.util.List;
+
+/**
+ * Created by davide on 24/01/16.
+ */
+public class SelectDecisionFragment extends BaseFragment {
+
+    public static final String PAR_GROUP_CHAT_ID = "PAR_GROUP_CHAT_ID";
+    public static final String PAR_NEW_OPTION_LONG_DESCRIPTION = "PAR_NEW_OPTION_LONG_DESCRIPTION";
+
+    private static final String LOG_TAG = "SelectDecision";
+
+    private PollgramDAO dao;
+    private int groupChatId;
+    private String newOptionLongDescription;
+
+    public SelectDecisionFragment(Bundle bundle){
+        super(bundle);
+    }
+
+    @Override
+    public boolean onFragmentCreate() {
+        dao = PollgramFactory.getDAO();
+        groupChatId = getArguments().getInt(PAR_GROUP_CHAT_ID);
+        newOptionLongDescription = getArguments().getString(PAR_NEW_OPTION_LONG_DESCRIPTION);
+        return super.onFragmentCreate();
+    }
+
+    @Override
+    public View createView(Context context) {
+        actionBar.setTitle(context.getString(R.string.selectDecision));
+        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
+            @Override
+            public void onItemClick(int id) {
+                if (id == UIUtils.ACTION_BAR_BACK_ITEM_ID) {
+                    finishFragment();
+                    return;
+                } else
+                    Log.w(LOG_TAG, "unknown on item click id [" + id + "]");
+            }
+        });
+
+        // set up layout
+        fragmentView = new SizeNotifierFrameLayout(context);
+        LayoutInflater layoutInflater = LayoutInflater.from(context);
+        View myView = layoutInflater.inflate(R.layout.select_decision_layout, (ViewGroup) fragmentView);
+        TextView tvNoDecisionForCurrentUser = (TextView)myView.findViewById(R.id.select_decision_tv_no_decisions_present);
+        final ListView lvDecisions = (ListView)myView.findViewById(R.id.select_decision_list_view);
+
+        // put values
+        List<Decision> decisionList = dao.getDecisions(groupChatId, UserConfig.getClientUserId());
+        tvNoDecisionForCurrentUser.setVisibility(decisionList.size() == 0 ? View.VISIBLE : View.GONE);
+
+        DecisionAdapter decisionAdapter = new DecisionAdapter(context, decisionList);
+        lvDecisions.setAdapter(decisionAdapter);
+        lvDecisions.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                Decision decision = (Decision) parent.getAdapter().getItem(position);
+                Bundle bundle = new Bundle();
+                //TODO put this newOptionLongDescription
+            }
+        });
+
+        return fragmentView;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 26206f57f..93e2f4cae 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -56,6 +56,7 @@
 import org.pollgram.decision.service.PollgramFactory;
 import org.pollgram.decision.ui.DecisionsListFragment;
 import org.pollgram.decision.ui.NewDecisionFragment;
+import org.pollgram.decision.ui.SelectDecisionFragment;
 import org.pollgram.decision.ui.VotesManagerFragment;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
@@ -148,7 +149,7 @@
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate,
         PhotoViewer.PhotoViewerProvider {
 
-    private static final int MENU_ITEM_OPTION_CREATE_DECISION = 1001;
+
     protected TLRPC.Chat currentChat;
     protected TLRPC.User currentUser;
     protected TLRPC.EncryptedChat currentEncryptedChat;
@@ -325,7 +326,11 @@
     private final static int share_contact = 17;
     private final static int mute = 18;
     private final static int reply = 19;
+
     // Pollgram IDs start
+    private static final int MENU_ITEM_OPTION_CREATE_DECISION = 1001;
+    private static final int MENU_ITEM_OPTION_CREATE_OPTION = 1002;
+
     private final static int new_decision = 20;
     private final static int show_decision = 21;
     // Pollgram IDs end
@@ -2345,9 +2350,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
     }
 
     private void openDecisionListFragment() {
-        DecisionsListFragment fragment = new DecisionsListFragment();
-        fragment.setChatInfo(info);
-        presentFragment(fragment);
+        Bundle args = PollgramFactory.getService().getBundleForDecisionList(info);
+        presentFragment(new DecisionsListFragment(args));
     }
 
     private boolean isGroupChat() {
@@ -6071,6 +6075,9 @@ private void createMenu(View v, boolean single) {
                         if (isGroupChat() && !PollgramFactory.getMessagesManager().isPollgram(selectedObject)) { // Pollgram custom items
                             items.add(LocaleController.getString("createDecision", R.string.createDecision));
                             options.add(MENU_ITEM_OPTION_CREATE_DECISION);
+
+                            items.add(LocaleController.getString("createOption", R.string.createOption));
+                            options.add(MENU_ITEM_OPTION_CREATE_OPTION);
                         }
 
                         if (allowChatActions) {
@@ -6339,11 +6346,16 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
             MediaController.saveFile(path, getParentActivity(), selectedObject.isMusic() ? 3 : 2, fileName);
 
-        } else if (option == MENU_ITEM_OPTION_CREATE_DECISION){
+        } else if (option == MENU_ITEM_OPTION_CREATE_DECISION) {
             // Pollgram create decision
             Bundle args = PollgramFactory.getService().getBundleForNewDecision(currentChat, selectedObject);
             presentFragment(new NewDecisionFragment(args));
 
+        } else if (option == MENU_ITEM_OPTION_CREATE_OPTION){
+            // Pollgram use it as option
+            Bundle args = PollgramFactory.getService().getBundleForNewOption(currentChat,selectedObject);
+            presentFragment(new SelectDecisionFragment(args));
+
         } else if (option == 11) {
             MediaController.SearchImage searchImage = new MediaController.SearchImage();
             searchImage.type = 2;
diff --git a/TMessagesProj/src/main/res/layout/select_decision_layout.xml b/TMessagesProj/src/main/res/layout/select_decision_layout.xml
new file mode 100644
index 000000000..fc21be9b5
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/select_decision_layout.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/decision_list_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceLarge"
+        android:text="@string/decisionsCreatedByYou"
+        android:id="@+id/select_decision_tv_title"
+        android:paddingLeft="5dp"
+        android:paddingTop="5dp"
+        android:paddingBottom="10dp"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentEnd="true" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="visible"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="@string/thereAreNoDecisionCreatedByYouInThisGroup"
+        android:gravity="left|top"
+        android:paddingTop="10dp"
+        android:paddingLeft="10dp"
+        android:paddingRight="10dp"
+        android:id="@+id/select_decision_tv_no_decisions_present"
+        android:layout_alignRight="@+id/select_decision_tv_title"
+        android:layout_alignEnd="@+id/select_decision_tv_title"
+        android:layout_below="@+id/select_decision_tv_title"
+        />
+
+
+    <ListView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/select_decision_list_view"
+        android:layout_alignRight="@+id/select_decision_tv_title"
+        android:layout_alignEnd="@+id/select_decision_tv_title"
+        android:layout_below="@+id/select_decision_tv_no_decisions_present" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 12027f9af..0502d918d 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1101,6 +1101,15 @@
     <!-- END MessageType descriptions -->
 
 
+    <!-- Pollgram crash messages START -->
+    <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
+    <string name="sendCrashEmail">Invia sengalazione via eMail</string>
+    <string name="contactMe">Contact me</string>
+    <string name="sendInfoEmail">Pollgram contactta lo sviluppatore</string>
+    <string name="doNotPressThisButton">Non premere qui</string>
+    <string name="emailCrashMessageBody">Mi dispiace ma Pollgram si è interrotto a causa di:\n%1$s\nLe infromazione relative al errore sono allegate alla mail.\nGrazie per il supporto supporto.\n</string>
+    <!-- Pollgram crash messages END -->
+
     <string name="howManyMemberVote">%1$d su %2$d hanno votato</string>
     <string name="createdByUserOnDayNewLine">Creata da %1$s \nil %2$s</string>
     <string name="createdByUserOnDay">Creata da %1$s il %2$s</string>
@@ -1169,15 +1178,12 @@
     <string name="createDecision">Crea nuova decisione</string>
     <string name="newDecisionFromMessageHeader">Message from %2$s, %1$s:</string>
     <string name="abortDecisionCreation">Interrompere la creazione della nuova decisione \?</string>
-
-    <!-- Pollgram crash messages START -->
-    <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
-    <string name="sendCrashEmail">Invia sengalazione via eMail</string>
-    <string name="contactMe">Contact me</string>
-    <string name="sendInfoEmail">Pollgram contactta lo sviluppatore</string>
-    <string name="doNotPressThisButton">Non premere qui</string>
-    <string name="emailCrashMessageBody">Mi dispiace ma Pollgram si è interrotto a causa di:\n%1$s\nLe infromazione relative al errore sono allegate alla mail.\nGrazie per il supporto supporto.\n</string>
-    <!-- Pollgram crash messages END -->
+    <string name="createOption">Utilizza come opzione</string>
+    <string name="selectDecision">Seleziona una decisione</string>
+    <string name="decisionsCreatedByYou">Seleziona in quale delle decisioni create da te aggiungere la nuova opzione.</string>
+    <string name="thereAreNoDecisionCreatedByYouInThisGroup">Non sono presenti decisione create da te in questo gruppo.
+        È possibile aggiungere opzioni solo alle proprie decisioni.
+        \n\nSe vuoi aggiungere un opzione ad una decisione creata da qualcun altro, chiedoglielo semplicemente.</string>
 
     <!-- END of Pollgram text -->
 
@@ -1185,5 +1191,4 @@
     <string name="updateText">Telegram per Android si è aggiornato. Nuovo nella versione 3.4.0:\n\nRivoluzione GIF: Invio e download 20 volte più veloci, autoriproduci e salva le tue preferite nel pannello sticker.\n\nPiù info sulle GIF:\nhttps://telegram.org/blog/gif-revolution\n\nBot Inline: Un nuovo modo di aggiungere contenuti in ogni chat. Menziona un bot e la tua domanda nel campo di scrittura e ottieni risultati immediati. Prova a scrivere “@gif dog” nella tua prossima chat. Bot di esempio: @gif, @wiki, @bing, @vid, @bold\n\nPiù info sui Bot Inline:\nhttps://telegram.org/blog/inline-bots</string>
     <string name="updateBuild">704</string>
 
-
 </resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 8ea144ca5..1215a971c 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1096,9 +1096,17 @@
     <string name="MessageType_DELETE_DECISION">Delete decision</string>
     <string name="MessageType_ADD_OPTIONS">Add options</string>
     <string name="MessageType_DELTE_OPTIONS">Delete options</string>
-
     <!-- END MessageType descriptions -->
 
+    <!-- Pollgram crash messages START -->
+    <string name="appCrashedMessage">Oh shit ! The app crashed :-( Please send me the crash info by email, so i can fix the problem as soon a spossible. Thanks you.</string>
+    <string name="sendCrashEmail">Send Crash info by Email</string>
+    <string name="contactMe">Contact me</string>
+    <string name="sendInfoEmail">Pollgram contact developer</string>
+    <string name="doNotPressThisButton">Do not press here</string>
+    <string name="emailCrashMessageBody">I am sorry but Pollgram just crashed because of: \n%1$s\nCrash report is attached to the email.\nThank you for the support.\n</string>
+    <string name="title_activity_crash_manager_activity">Crash Manager</string>
+    <!-- Pollgram crash messages END -->
 
     <string name="howManyMemberVote">%1$d on %2$d have voted yet</string>
     <string name="createdByUserOnDayNewLine">Created by %1$s \non %2$s</string>
@@ -1169,16 +1177,13 @@
     <string name="createDecision">Create Decision</string>
     <string name="abortDecisionCreation">Abort decision creation ?</string>
     <string name="newDecisionFromMessageHeader">Message from %2$s, %1$s:</string>
+    <string name="createOption">Use as Option</string>
+    <string name="selectDecision">Select a decision</string>
+    <string name="decisionsCreatedByYou">Select in which of the decisions created by you, add the new option</string>
+    <string name="thereAreNoDecisionCreatedByYouInThisGroup">There are no decisions created by you in this group.
+        You can add option only to the decisions that you have created.
+        \n\nIf you want to add an option to a decision created by someone else, just ask her/him to do so.</string>
 
-    <!-- Pollgram crash messages START -->
-    <string name="appCrashedMessage">Oh shit ! The app crashed :-( Please send me the crash info by email, so i can fix the problem as soon a spossible. Thanks you.</string>
-    <string name="sendCrashEmail">Send Crash info by Email</string>
-    <string name="contactMe">Contact me</string>
-    <string name="sendInfoEmail">Pollgram contact developer</string>
-    <string name="doNotPressThisButton">Do not press here</string>
-    <string name="emailCrashMessageBody">I am sorry but Pollgram just crashed because of: \n%1$s\nCrash report is attached to the email.\nThank you for the support.\n</string>
-    <string name="title_activity_crash_manager_activity">Crash Manager</string>
-    <!-- Pollgram crash messages END -->
 
     <string name="emailBugDestAddress">davide.pallaoro@gmail.com</string>
     <!-- END of Pollgram text -->
@@ -1190,5 +1195,4 @@
 
     <string name="hello_world">Hello world!</string>
     <string name="action_settings">Settings</string>
-
 </resources>
