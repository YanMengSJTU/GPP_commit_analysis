diff --git a/Telegram/TMessagesProj/build.gradle b/Telegram/TMessagesProj/build.gradle
index b6a42123b..896e24883 100644
--- a/Telegram/TMessagesProj/build.gradle
+++ b/Telegram/TMessagesProj/build.gradle
@@ -45,6 +45,7 @@ dependencies {
     implementation 'net.hockeyapp.android:HockeySDK:5.1.1'
     implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
     implementation 'com.stripe:stripe-android:2.0.2'
+    implementation project(path: ':sfml', configuration: 'default')
 }
 
 android {
@@ -306,7 +307,7 @@ android {
 
     defaultConfig {
         minSdkVersion 21
-        targetSdkVersion 27
+        targetSdkVersion 28
         versionName "5.4.0"
 
 		vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']
@@ -314,13 +315,13 @@ android {
         externalNativeBuild {
             ndkBuild {
                 cFlags ""
-                cppFlags ""
+                cppFlags "-std=c++11"
                 arguments "NDK_APPLICATION_MK:=jni/Application.mk", "APP_PLATFORM:=android-21", "-j8"
                 abiFilters "armeabi-v7a"//, "arm64-v8a", "x86", "x86_64"
             }
             cmake {
                 cFlags ""
-                cppFlags ""
+                cppFlags "-std=c++11"
                 arguments "-DANDROID_STL=c++_static"
                 abiFilters "armeabi-v7a"//, "arm64-v8a", "x86", "x86_64"
             }
diff --git a/Telegram/TMessagesProj/jni/Android.mk b/Telegram/TMessagesProj/jni/Android.mk
index f5d592a8d..bfc9ef07a 100644
--- a/Telegram/TMessagesProj/jni/Android.mk
+++ b/Telegram/TMessagesProj/jni/Android.mk
@@ -566,7 +566,9 @@ LOCAL_SRC_FILES     += \
 ./exoplayer/ffmpeg_jni.cc \
 ./fast-edge.cpp \
 ./genann.c \
-./secureid_ocr.cpp
+./secureid_ocr.cpp \
+./Logger.cpp \
+./Log.cpp
 
 include $(BUILD_SHARED_LIBRARY)
 
diff --git a/Telegram/TMessagesProj/jni/Log.hpp b/Telegram/TMessagesProj/jni/Log.hpp
index 441479606..6c5e84bd6 100644
--- a/Telegram/TMessagesProj/jni/Log.hpp
+++ b/Telegram/TMessagesProj/jni/Log.hpp
@@ -4,8 +4,8 @@
 #ifndef TELEGRAMSTER_LOG_HPP
 #define TELEGRAMSTER_LOG_HPP
 
-#include <sstream>
 #include <android/log.h>
+#include <sstream>
 
 #define TAG "NATIVELOGGER"
 #define LOGI(tag, message) __android_log_print(ANDROID_LOG_INFO, tag, "%s", message)
diff --git a/Telegram/TMessagesProj/jni/gifvideo.cpp b/Telegram/TMessagesProj/jni/gifvideo.cpp
index 23d1a4266..8f1e1d836 100644
--- a/Telegram/TMessagesProj/jni/gifvideo.cpp
+++ b/Telegram/TMessagesProj/jni/gifvideo.cpp
@@ -10,6 +10,7 @@
 #include <libyuv.h>
 #include "tgnet/ConnectionsManager.h"
 #include "c_utils.h"
+#include "Logger.h"
 
 extern "C" {
 #include <libavformat/avformat.h>
@@ -583,14 +584,17 @@ jint Java_org_telegramster_ui_Components_AnimatedFileDrawable_getVideoFrame(JNIE
 jint videoOnJNILoad(JavaVM *vm, JNIEnv *env) {
     jclass_AnimatedFileDrawableStream = (jclass) env->NewGlobalRef(env->FindClass("org/telegramster/messenger/AnimatedFileDrawableStream"));
     if (jclass_AnimatedFileDrawableStream == 0) {
+        logIt("jclass_AnimatedFileDrawableStream");
         return JNI_FALSE;
     }
     jclass_AnimatedFileDrawableStream_read = env->GetMethodID(jclass_AnimatedFileDrawableStream, "read", "(II)I");
     if (jclass_AnimatedFileDrawableStream_read == 0) {
+        logIt("jclass_AnimatedFileDrawableStream_read");
         return JNI_FALSE;
     }
     jclass_AnimatedFileDrawableStream_cancel = env->GetMethodID(jclass_AnimatedFileDrawableStream, "cancel", "()V");
     if (jclass_AnimatedFileDrawableStream_cancel == 0) {
+        logIt("jclass_AnimatedFileDrawableStream_cancel");
         return JNI_FALSE;
     }
 
diff --git a/Telegram/TMessagesProj/jni/jni.c b/Telegram/TMessagesProj/jni/jni.c
index 59f03ec0c..cf76a1c1d 100644
--- a/Telegram/TMessagesProj/jni/jni.c
+++ b/Telegram/TMessagesProj/jni/jni.c
@@ -13,38 +13,38 @@
 #include "image.h"
 #include "libtgvoip/client/android/tg_voip_jni.h"
 //#include "native.h"
-//#include "Logger.h"
+#include "Logger.h"
 
-int registerNativeTgNetFunctions(JavaVM *vm, JNIEnv *env);
-int videoOnJNILoad(JavaVM *vm, JNIEnv *env);
+extern jint registerNativeTgNetFunctions(JavaVM *vm, JNIEnv *env);
+extern jint videoOnJNILoad(JavaVM *vm, JNIEnv *env);
 
 jint JNI_OnLoad(JavaVM *vm, void *reserved) {
     JNIEnv *env = 0;
     srand(time(NULL));
 
     if ((*vm)->GetEnv(vm, (void **) &env, JNI_VERSION_1_6) != JNI_OK) {
-        //logIt("JNI_VERSION_1_6");
+        logIt("JNI_VERSION_1_6");
         return -1;
     }
 
     if (imageOnJNILoad(vm, env) != JNI_TRUE) {
-        //logIt("imageOnJNILoad");
+        logIt("imageOnJNILoad");
         return -1;
     }
 
     if (videoOnJNILoad(vm, env) != JNI_TRUE) {
-        //logIt("videoOnJNILoad");
+        logIt("videoOnJNILoad");
         return -1;
     }
 
     if (registerNativeTgNetFunctions(vm, env) != JNI_TRUE) {
-        //logIt("registerNativeTgNetFunctions");
+        logIt("registerNativeTgNetFunctions");
         return -1;
     }
 
     tgvoipRegisterNatives(env);
 
-    //logIt("JNI_OnLoad");
+    logIt("JNI_OnLoad");
 
     //return JNILoad(vm, reserved);
     return JNI_VERSION_1_6;
diff --git a/Telegram/TMessagesProj/src/main/AndroidManifest.xml b/Telegram/TMessagesProj/src/main/AndroidManifest.xml
index b096aeb39..5c6f97491 100644
--- a/Telegram/TMessagesProj/src/main/AndroidManifest.xml
+++ b/Telegram/TMessagesProj/src/main/AndroidManifest.xml
@@ -169,14 +169,10 @@
             </intent-filter>
         </activity>
         <activity
-            android:name=".SFMLActivity"
+            android:name="org.telegramster.ui.DoodleActivity"
             android:screenOrientation="landscape">
             <meta-data android:name="android.app.lib_name" android:value="${androidAppLibName}" />
             <meta-data android:name="sfml.app.lib_name" android:value="${sfmlAppLibName}" />
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
         </activity>
         <activity
             android:name="org.telegramster.ui.IntroActivity"
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java
new file mode 100644
index 000000000..3cd5bca1a
--- /dev/null
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DoodleActivity.java
@@ -0,0 +1,11 @@
+
+// Author: Pierce Brooks
+
+package org.telegramster.ui;
+
+public class DoodleActivity extends com.piercelbrooks.sfml.SFMLActivity {
+    @Override
+    protected String getNativeClass() {
+        return "org/telegramster/ui/DoodleActivity";
+    }
+}
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/SFMLActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/SFMLActivity.java
deleted file mode 100644
index b873ac691..000000000
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/SFMLActivity.java
+++ /dev/null
@@ -1,192 +0,0 @@
-
-// Author: Pierce Brooks
-
-package org.telegramster.ui;
-
-import android.app.NativeActivity;
-import android.content.Context;
-import android.os.Bundle;
-import android.os.PersistableBundle;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.util.Log;
-
-import org.telegramster.messenger.BuildConfig;
-
-import java.util.HashMap;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.locks.Condition;
-import java.util.concurrent.locks.Lock;
-import java.util.concurrent.locks.ReentrantLock;
-
-public class SFMLActivity extends NativeActivity implements Lock {
-    static {
-        loadLibraries();
-    }
-
-    private static final String TAG = "SFML";
-    private static final String VIBRATOR_SERVICE = Context.VIBRATOR_SERVICE;
-    private static SFMLActivity self = null;
-
-    private HashMap<Object, Boolean> flags;
-    private ReentrantLock lock;
-
-    public SFMLActivity() {
-        super();
-        flags = new HashMap<Object, Boolean>();
-        lock = new ReentrantLock();
-        self = this;
-    }
-
-    public static SFMLActivity getSelf() {
-        return self;
-    }
-
-    @Override
-    public void onBackPressed()
-    {
-        lock();
-        try
-        {
-            flags.put("BACK", true);
-        }
-        catch (Exception exception)
-        {
-            exception.printStackTrace();
-        }
-        finally
-        {
-            unlock();
-        }
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        commonOnCreate(savedInstanceState, null);
-        super.onCreate(savedInstanceState);
-    }
-
-    @Override
-    public void onCreate(@Nullable Bundle savedInstanceState, @Nullable PersistableBundle persistentState) {
-        commonOnCreate(savedInstanceState, persistentState);
-        super.onCreate(savedInstanceState, persistentState);
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-        finish();
-    }
-
-    @Override
-    protected void finalize() throws Throwable {
-        super.finalize();
-    }
-
-    private void commonOnCreate(@Nullable Bundle savedInstanceState, @Nullable PersistableBundle persistentState) {
-        loadLibraries();
-    }
-
-    private static void loadLibrary(String library) {
-        loadLibrary(library, true);
-    }
-
-    private static void loadLibrary(String library, boolean variant) {
-        Log.d(TAG, "loadLibrary "+library);
-        if (variant) {
-            if (BuildConfig.DEBUG) {
-                System.loadLibrary(library+"-d");
-                return;
-            }
-        }
-        System.loadLibrary(library);
-    }
-
-    private static void loadLibraries() {
-        //loadLibrary("c++_shared", false);
-        loadLibrary("openal", false);
-        loadLibrary("sfml-system");
-        loadLibrary("sfml-window");
-        loadLibrary("sfml-audio");
-        loadLibrary("sfml-graphics");
-        loadLibrary("sfml-network");
-        loadLibrary("sfml-activity");
-        loadLibrary("native-lib", false);
-    }
-
-    @Override
-    public String toString() {
-        return TAG;
-    }
-
-
-    @Override
-    public Object getSystemService(@NonNull String name) {
-        return super.getSystemService(name);
-    }
-
-    public boolean checkFlag(Object name)
-    {
-        boolean flag = false;
-        if (!flags.containsKey(name))
-        {
-            return flag;
-        }
-        lock();
-        try
-        {
-            flag = flags.get(name).booleanValue();
-        }
-        catch (Exception exception)
-        {
-            exception.printStackTrace();
-        }
-        finally
-        {
-            unlock();
-        }
-        flags.put(name, false);
-        return flag;
-    }
-
-    @Override
-    public void lock() {
-        lock.lock();
-    }
-
-    @Override
-    public void lockInterruptibly() throws InterruptedException {
-        lock.lockInterruptibly();
-    }
-
-    @Override
-    public boolean tryLock() {
-        return lock.tryLock();
-    }
-
-    @Override
-    public boolean tryLock(long time, TimeUnit unit) throws InterruptedException {
-        return lock.tryLock(time, unit);
-    }
-
-    @Override
-    public void unlock() {
-        lock.unlock();
-    }
-
-    @Override
-    public Condition newCondition() {
-        return lock.newCondition();
-    }
-}
diff --git a/Telegram/sfml/build.gradle b/Telegram/sfml/build.gradle
index 18c1fd87a..ac701926c 100644
--- a/Telegram/sfml/build.gradle
+++ b/Telegram/sfml/build.gradle
@@ -2,6 +2,7 @@ apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion 28
+    buildToolsVersion '28.0.3'
     defaultConfig {
         minSdkVersion 21
         targetSdkVersion 28
