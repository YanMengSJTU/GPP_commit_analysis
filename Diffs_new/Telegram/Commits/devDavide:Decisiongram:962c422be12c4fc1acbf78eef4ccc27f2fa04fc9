diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java
index 64ec3b307..b0ebb4982 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java
@@ -14,6 +14,7 @@
 
 import org.pollgram.R;
 import org.pollgram.decision.data.Option;
+import org.pollgram.decision.data.PollgramException;
 import org.pollgram.decision.data.TextOption;
 
 import java.util.ArrayList;
@@ -27,19 +28,61 @@
 
     private final List<TextOption> options;
     private final LayoutInflater inflater;
+    private final EditMode mode;
+    private final int lastIdx;
+
+    private enum EditMode{
+        /**
+         * It is possible to add  new option ad to delete as well
+         */
+        NEW_DECISION,
+
+        /**
+         * no edit action is allowed, no delete, no add
+         */
+        READ_ONLY,
+
+        /**
+         * it is only possible to add new option, it is not possible to modify or delete the existing
+         */
+        ALLOW_ADD_NEW_OPTION;
+    }
 
     public NewOptionsAdapter(Context context) {
-        super(context, LAYOUT_RES_ID);
-        inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        options = new ArrayList<>();
+        this(context,new ArrayList<TextOption>(), EditMode.NEW_DECISION);
         // put one first empty option
         options.add(new TextOption());
     }
 
-    public List<Option> getOptions() {
+    public NewOptionsAdapter(Context context, List<TextOption> options, boolean editable){
+        this(context,options, editable ? EditMode.ALLOW_ADD_NEW_OPTION : EditMode.READ_ONLY);
+    }
+
+    private NewOptionsAdapter(Context context, List<TextOption> options, EditMode mode){
+        super(context, LAYOUT_RES_ID);
+        this.options = options;
+        this.lastIdx = options.size() -1;
+        this.mode =mode;
+        inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+    }
+
+    /**
+     * @return the list of the selected options
+     * @throws PollgramException if some value is invalid
+     */
+    public List<Option> getOptions() throws PollgramException{
         List<Option> out = new ArrayList<Option>();
-        for (TextOption to : options)
-            out.add(to);
+        for (int i = lastIdx + 1 ; i<options.size() ; i++)
+            out.add(options.get(i));
+        for (int i = 0; i < out.size(); i++) {
+            String title = out.get(i).getTitle();
+            if (title == null || title.trim().isEmpty()) {
+                if (i == out.size() -1)
+                    throw new PollgramException(getContext().getString(R.string.emptyTitleOnLastOption));
+                else
+                    throw new PollgramException(getContext().getString(R.string.emptyTitleOnOption, i + 1));
+            }
+        }
         return out;
     }
 
@@ -65,6 +108,8 @@ public void onClick(View v) {
                     }
                 }
             });
+            if (EditMode.READ_ONLY.equals(mode))
+                buttonAdd.setEnabled(false);
         } else {
             // Create view for item
             rowView = inflater.inflate(LAYOUT_RES_ID, parent, false);
@@ -113,6 +158,26 @@ public void afterTextChanged(Editable s) {
                     o.setLongDescription(s.toString());
                 }
             });
+
+            boolean enable;
+            switch (mode){
+                case NEW_DECISION:
+                    enable = true;
+                    break;
+                case READ_ONLY:
+                     enable = false;
+                    break;
+                case ALLOW_ADD_NEW_OPTION:
+                    enable = position > lastIdx;
+                    break;
+                default:
+                    enable = false;
+
+            }
+            edTitle.setEnabled(enable);
+            edLongDescription.setEnabled(enable);
+            deleteItem.setVisibility(enable ? View.VISIBLE : View.INVISIBLE);
+
         }
 
         return rowView;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/DBBean.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/DBBean.java
index 7dc7211d8..a87797804 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/DBBean.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/DBBean.java
@@ -39,4 +39,20 @@ public boolean equals(Object o) {
     public int hashCode() {
         return (int) (getId() ^ (getId() >>> 32));
     }
+
+
+    /**
+     * compare two string considering null == "" == " "
+     * @param s1
+     * @param s2
+     * @return
+     */
+    protected static boolean equalString(String s1, String s2) {
+        boolean isS1Empty = s1 == null || s1.trim().isEmpty() || s1.equals(""+null);
+        boolean isS2Empty = s2 == null || s2.trim().isEmpty() || s2.equals(""+null);
+        if (isS1Empty && isS2Empty)
+            return true;
+        else
+            return s1.equals(s2);
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java
index 84c69e987..b1fd5a56b 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java
@@ -1,5 +1,7 @@
 package org.pollgram.decision.data;
 
+import org.telegram.messenger.UserConfig;
+
 import java.util.Date;
 
 /**
@@ -49,6 +51,20 @@ public int getUserCreatorId() {
         return userCreatorId;
     }
 
+    /**
+     * @return whether the decision is editable by the current user
+     */
+    public boolean isEditable(){
+        return isEditable(UserConfig.getClientUserId());
+    }
+
+    /**
+     * @param userId
+     * @return whether the decision is editable by userId
+     */
+    public boolean isEditable(int userId){
+        return getUserCreatorId() == userId;
+    }
     public String getTitle() {
         return title;
     }
@@ -89,15 +105,6 @@ public boolean equals(Object o) {
 
     }
 
-    private boolean equalString(String s1, String s2) {
-        boolean isS1Emtpy = s1 == null || s1.trim().isEmpty() || s1.equals(""+null);
-        boolean isS2Emtpy = s2 == null || s2.trim().isEmpty() || s2.equals(""+null);
-        if (isS1Emtpy && isS2Emtpy)
-            return true;
-        else
-            return s1.equals(s2);
-    }
-
     @Override
     public int hashCode() {
         int result = super.hashCode();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/PollgramException.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/PollgramException.java
new file mode 100644
index 000000000..8aa4338a4
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/PollgramException.java
@@ -0,0 +1,15 @@
+package org.pollgram.decision.data;
+
+/**
+ * Created by davide on 07/01/16.
+ */
+public class PollgramException extends  Exception {
+
+    public PollgramException(String detailMessage) {
+        super(detailMessage);
+    }
+
+    public PollgramException(String detailMessage, Throwable throwable) {
+        super(detailMessage, throwable);
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java
index 8bc50814b..99741b0e2 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java
@@ -47,7 +47,7 @@ public boolean equals(Object o) {
 
         if (getTitle() != null ? !getTitle().equals(that.getTitle()) : that.getTitle() != null)
             return false;
-        return !(getLongDescription() != null ? !getLongDescription().equals(that.getLongDescription()) : that.getLongDescription() != null);
+        return equalString(getLongDescription(), that.getLongDescription());
 
     }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
index cb4c84186..90f5c473c 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
@@ -57,6 +57,8 @@ public void putStubData(int chatId, int creatorId) {
             Date creationDate = new Date();
             Decision decision1 = new Decision(chatId, creatorId, "Where do we'd like to go skiing ?",
                     "Lorem ipsum dolor sit amet, vix te deserunt ullamcorper. Ut probatus dignissim sea, vocent discere vivendum ad mea. Eam ut blandit scribentur, ius an salutatus reprimique. Ut eros rationibus nec, ex deserunt invenire quo.\n" +
+                            "Lorem ipsum dolor sit amet, vix te deserunt ullamcorper. Ut probatus dignissim sea, vocent discere vivendum ad mea. Eam ut blandit scribentur, ius an salutatus reprimique. Ut eros rationibus nec, ex deserunt invenire quo.\n" +
+                            "Lorem ipsum dolor sit amet, vix te deserunt ullamcorper. Ut probatus dignissim sea, vocent discere vivendum ad mea. Eam ut blandit scribentur, ius an salutatus reprimique. Ut eros rationibus nec, ex deserunt invenire quo.\n" +
                             "\n" +
                             "Id nulla tacimates mandamus est, duo agam luptatum philosophia ex, wisi vidit reprehendunt quo ea. Ei sed omnis nostrum probatus, quis liber expetendis id sea. Pro id nibh recusabo, has suas volutpat cu. Copiosae detraxit petentium has ne. ", creationDate, true);
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
index cd58807d2..0f8b4bcac 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
@@ -30,7 +30,8 @@
         VOTE(R.string.MessageType_VOTE, (byte) 0xF0, (byte) 0x9F, (byte) 0x93, (byte) 0x9D), // memo
         CLOSE_DECISION(R.string.MessageType_CLOSE_DECISION, (byte) 0xF0, (byte) 0x9F, (byte) 0x9A, (byte) 0xAB), // no entry sign
         REOPEN_DECISION(R.string.MessageType_REOPEN_DECISION, (byte) 0xF0, (byte) 0x9F, (byte) 0x94, (byte) 0x84),    //ANTICLOCKWISE DOWNWARDS AND UPWARDS OPEN CIRCLE ARROWS
-        DELETE_DECISION(R.string.MessageType_DELETE_DECISION, (byte) 0xE2, (byte) 0x9D, (byte) 0x8C);    //CROSS MARK
+        DELETE_DECISION(R.string.MessageType_DELETE_DECISION, (byte) 0xE2, (byte) 0x9D, (byte) 0x8C),    //CROSS MARK
+        ADD_OPTION(R.string.MessageType_ADD_OPTION,(byte)0xE2, (byte)0x9E, (byte)0x95);// heavy plus sign
 
         private final String emoji;
         private final int descrStringRes;
@@ -112,6 +113,14 @@ public String getDescription() {
      */
     String buildNotifyNewDecision(Decision decision, List<Option> options);
 
+    /**
+     * build a message for notifying a that some option were added to a decision
+     * @param decision
+     * @param newOptions the new options added
+     * @return the message ready to be sent
+     */
+    String buildAddOptions(Decision decision, List<Option> newOptions);
+
     /**
      * build a message in order to remind to userAsString, that he must vote for the decision
      * @param userAsString
@@ -157,11 +166,11 @@ public String getDescription() {
     /**
      * Retrun vale for getNewDecision method
      */
-    class NewDecisionData{
+    class DecisionOptionData {
         final @NonNull Decision decision;
         final @NonNull List<Option> optionList;
 
-        public NewDecisionData(@NonNull Decision decision, @NonNull List<Option> optionList) {
+        public DecisionOptionData(@NonNull Decision decision, @NonNull List<Option> optionList) {
             this.decision = decision;
             this.optionList = optionList;
         }
@@ -176,7 +185,18 @@ public NewDecisionData(@NonNull Decision decision, @NonNull List<Option> optionL
      * @param messageDate the message date
      * @return the decision and its options
      */
-    NewDecisionData getNewDecision(String msg, long currentChat, int userId, Date messageDate) throws PollgramParseException;
+    DecisionOptionData getNewDecision(String msg, long currentChat, int userId, Date messageDate) throws PollgramParseException;
+
+    /**
+     * Only if getMessageType(text) == MessageType_ADD_OPTION
+     * Return the new option added for a decision
+     * @param msg the text message to parse
+     * @param currentChat current group chat
+     * @param userId message owner
+     * @return the decision and its options
+     */
+    DecisionOptionData getNewOptionAdded(String msg, long currentChat, int userId) throws PollgramParseException;
+
 
     /**
      * Return value for getCloseDecision
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
index b898922f1..8d562250e 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
@@ -235,6 +235,24 @@ public String buildNotifyNewDecision(Decision decision, List<Option> options) {
         body.append('.');
         body.append(NEW_LINE);
         body.append(getResString(R.string.tmsg_NewDecisionOptionsPrefix));
+        addOptionsToMsg(options, body);
+        return buildMessage(MessageType.NEW_DECISION, body.toString());
+    }
+
+
+    @Override
+    public String buildAddOptions(Decision decision, List<Option> options) {
+        StringBuilder body = new StringBuilder();
+        body.append(getResString(R.string.tmsg_AddOptionPrefix));
+        body.append(NEW_LINE);
+        body.append(format(decision));
+        body.append(' ');
+        body.append(getResString(R.string.tmsg_AddOptionSuffix));
+        addOptionsToMsg(options, body);
+        return buildMessage(MessageType.ADD_OPTION, body.toString());
+    }
+
+    private void addOptionsToMsg(List<Option> options, StringBuilder body) {
         body.append(NEW_LINE);
         for(Option o : options){
             body.append(BULLET_LIST_EMOJI);
@@ -247,7 +265,6 @@ public String buildNotifyNewDecision(Decision decision, List<Option> options) {
             }
             body.append(NEW_LINE);
         }
-        return buildMessage(MessageType.NEW_DECISION, body.toString());
     }
 
     /**
@@ -373,7 +390,7 @@ public long getMessageGroupId(long dialog_id) {
     }
 
     @Override
-    public NewDecisionData getNewDecision(String msg, long currentChat, int userId, Date messageDate) throws PollgramParseException {
+    public DecisionOptionData getNewDecision(String msg, long currentChat, int userId, Date messageDate) throws PollgramParseException {
         Decision decision;
         List<Option> optionList = new ArrayList<>();
         try {
@@ -385,22 +402,52 @@ public NewDecisionData getNewDecision(String msg, long currentChat, int userId,
                 String longDescription = strTok.nextToken();
                 decision = new Decision(currentChat, userId, title, longDescription, messageDate, true);
             }
-            while (strTok.hasMoreTokens()){
+            addOption2List(optionList, strTok);
+        } catch (NoSuchElementException e) {
+            Log.e(LOG_TAG, "Error parsing message [" + msg + "]", e);
+            throw new PollgramParseException("Token not found", e);
+        }
+        Log.d(LOG_TAG, "getNewDecision decision[" + decision + "] optionList[" + optionList + "]");
+        return new DecisionOptionData(decision, optionList);
+    }
+
+
+    @Override
+    public DecisionOptionData getNewOptionAdded(String msg, long currentChat, int userId) throws PollgramParseException {
+        Decision decision;
+        List<Option> optionList = new ArrayList<>();
+        try {
+            StringTokenizer strTok = new EscapeStringTokenizer(msg);
+            { //Create decision
                 strTok.nextToken();//skip this token
-                if (!strTok.hasMoreTokens())
-                    break;
                 String title = strTok.nextToken();
-                strTok.nextToken();//skip this token
-                String longDesc = strTok.nextToken();
-                Option to = new TextOption(title, longDesc, DBBean.ID_NOT_SET);
-                optionList.add(to);
+                decision = pollgramDAO.getDecision(title,currentChat);
+                if (decision == null)
+                    throw new PollgramParseException("Decision not found for title ["+title+"]");
+                if (!decision.isEditable(userId))
+                    throw new PollgramParseException("Decision is not editable by userid ["+userId+"]");
             }
+            addOption2List(optionList, strTok);
         } catch (NoSuchElementException e) {
             Log.e(LOG_TAG, "Error parsing message [" + msg + "]", e);
             throw new PollgramParseException("Token not found", e);
         }
         Log.d(LOG_TAG, "getNewDecision decision[" + decision + "] optionList[" + optionList + "]");
-        return new NewDecisionData(decision, optionList);
+        return new DecisionOptionData(decision, optionList);
+
+    }
+
+    private void addOption2List(List<Option> optionList, StringTokenizer strTok) {
+        while (strTok.hasMoreTokens()){
+            strTok.nextToken();//skip this token
+            if (!strTok.hasMoreTokens())
+                break;
+            String title = strTok.nextToken();
+            strTok.nextToken();//skip this token
+            String longDesc = strTok.nextToken();
+            Option to = new TextOption(title, longDesc, DBBean.ID_NOT_SET);
+            optionList.add(to);
+        }
     }
 
     @Override
@@ -479,6 +526,7 @@ private int getDecisionTitleStartIdx(MessageType type, String message){
             case DELETE_DECISION:
             case NEW_DECISION:
             case REOPEN_DECISION:
+            case ADD_OPTION:
                 return message.indexOf(QUOTE_CHAR);
         }
         return  -1;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
index f4f9e0000..de94facce 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramService.java
@@ -37,6 +37,8 @@
 
     void notifyDelete(Decision decision);
 
+    void notifyNewOptions(Decision decision, List<Option> newOptions);
+
     /**
      * @param message
      * @return whether the messsage is a pollgram transaction message
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index beffb8b38..2f900202a 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -131,9 +131,23 @@ public void notifyDelete(Decision decision) {
     }
     @Override
     public void notifyNewDecision(Decision decision, List<Option> options) {
-        Log.d(LOG_TAG, "notifyNewDecision decision[" + decision + "] decision[" + decision + "] options[" + options + "]");
+        Log.d(LOG_TAG, "notifyNewDecision decision[" + decision + "]  options[" + options + "]");
         decision = pollgramDAO.save(decision);
-        for(Option o : options) {
+        saveNewOptions(decision, options);
+        String message = messageManager.buildNotifyNewDecision(decision, options);
+        sendMessage(decision.getChatId(), message);
+    }
+
+    @Override
+    public void notifyNewOptions(Decision decision, List<Option> newOptions) {
+        Log.d(LOG_TAG, "notifyNewOptions decision[" + decision + "] newoptions[" + newOptions + "]");
+        saveNewOptions(decision, newOptions);
+        String message = messageManager.buildAddOptions(decision,newOptions);
+        sendMessage(decision.getChatId(), message);
+    }
+
+    private void saveNewOptions(Decision decision, List<Option> newOptions) {
+        for(Option o : newOptions) {
             if (o.getDecisionId() == DBBean.ID_NOT_SET) {
                 o.setDecisionId(decision.getId());
             } else if (o.getDecisionId() != decision.getId()) {
@@ -142,8 +156,6 @@ public void notifyNewDecision(Decision decision, List<Option> options) {
             }
             pollgramDAO.save(o);
         }
-        String message = messageManager.buildNotifyNewDecision(decision, options);
-        sendMessage(decision.getChatId(), message);
     }
 
     @Override
@@ -204,7 +216,7 @@ public void processMessage(MessageObject message, boolean showToastOnError) {
         try {
             switch (msgType) {
                 case NEW_DECISION: {
-                    PollgramMessagesManager.NewDecisionData resut = messageManager.getNewDecision(text,
+                    PollgramMessagesManager.DecisionOptionData resut = messageManager.getNewDecision(text,
                             groupChatId, userId, messageDate);
                     if (resut == null){
                         throw new PollgramParseException("Decision not found for NEW_DECISION messsage");
@@ -220,6 +232,18 @@ public void processMessage(MessageObject message, boolean showToastOnError) {
                     }
                     break;
                 }
+                case ADD_OPTION:{
+                    PollgramMessagesManager.DecisionOptionData resut = messageManager.getNewOptionAdded(text,
+                            groupChatId, userId);
+                    if (resut == null){
+                        throw new PollgramParseException("Decision not found for NEW_DECISION messsage");
+                    }
+                    for (Option o : resut.optionList) {
+                        o.setDecisionId(resut.decision.getId());
+                        pollgramDAO.save(o);
+                    }
+                    break;
+                }
                 case REOPEN_DECISION: {
                     Decision decision = messageManager.getReopenDecision(text, groupChatId);
                     decision.setOpen(true);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
index bb96da59d..f1e0994aa 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
@@ -6,16 +6,21 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 import android.widget.EditText;
+import android.widget.TextView;
 
 import org.pollgram.R;
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
+import org.pollgram.decision.service.PollgramService;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
 
+import java.text.DateFormat;
+
 /**
  * Created by davide on 31/12/15.
  */
@@ -25,6 +30,7 @@
     static final String PAR_DECISION_ID = "PAR_DECISION_ID";
     private PollgramDAO pollgramDAO;
     private Decision decision;
+    private PollgramService pollgramService;
 
     public DecisionDetailFragment(Bundle bundle) {
         super(bundle);
@@ -33,9 +39,11 @@ public DecisionDetailFragment(Bundle bundle) {
     @Override
     public boolean onFragmentCreate() {
         pollgramDAO = PollgramFactory.getPollgramDAO();
-
+        pollgramService = PollgramFactory.getPollgramService();
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
         decision = pollgramDAO.getDecision(decisionId);
+
+
         return true;
     }
 
@@ -63,10 +71,30 @@ public void onItemClick(int id) {
         LayoutInflater layoutInflater = LayoutInflater.from(context);
         View myView = layoutInflater.inflate(R.layout.decision_detail_layout, (ViewGroup) fragmentView);
 
-        EditText edTitle = (EditText) myView.findViewById(R.id.new_decision_ed_title);
+        EditText edTitle = (EditText) myView.findViewById(R.id.decision_detail_ed_title);
         edTitle.setText(decision.getTitle());
-        EditText edLongDescription = (EditText) myView.findViewById(R.id.new_decision_ed_long_description);
+        {
+            TextView tvCreationInfo = (TextView) myView.findViewById(R.id.decision_detail_tv_creation_info);
+            String userAsString = pollgramService.asString(pollgramService.getUser(decision.getUserCreatorId()));
+            String creationDateStr = DateFormat.getDateInstance(DateFormat.SHORT).
+                    format(decision.getCreationDate());
+            tvCreationInfo.setText(context.getString(R.string.createdByUserOnDay,userAsString,creationDateStr));
+        }
+        EditText edLongDescription = (EditText) myView.findViewById(R.id.decision_detail_ed_long_description);
         edLongDescription.setText(decision.getLongDescription());
+
+        Button ediOptionButton = (Button)myView.findViewById(R.id.decision_detail_edit_option);
+        ediOptionButton.setEnabled(decision.isEditable());
+        ediOptionButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Bundle bundle = new Bundle();
+                bundle.putLong(EditOptionsFragment.PAR_DECISION_ID,decision.getId());
+                presentFragment(new EditOptionsFragment(bundle));
+            }
+        });
+
+
         return fragmentView;
     }
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
new file mode 100644
index 000000000..3240799a8
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
@@ -0,0 +1,140 @@
+package org.pollgram.decision.ui;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.WindowManager;
+import android.widget.ListView;
+import android.widget.Toast;
+
+import org.pollgram.R;
+import org.pollgram.decision.adapter.NewOptionsAdapter;
+import org.pollgram.decision.data.Decision;
+import org.pollgram.decision.data.Option;
+import org.pollgram.decision.data.PollgramException;
+import org.pollgram.decision.data.TextOption;
+import org.pollgram.decision.service.PollgramDAO;
+import org.pollgram.decision.service.PollgramFactory;
+import org.pollgram.decision.service.PollgramService;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.ActionBarMenu;
+import org.telegram.ui.ActionBar.ActionBarMenuItem;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.SizeNotifierFrameLayout;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by davide on 13/12/15.
+ */
+public class EditOptionsFragment extends BaseFragment {
+
+    public static final String PAR_DECISION_ID = "PAR_DECISION_ID";
+
+    private static final int SAVE_MENU_ITEM_ID = 1;
+
+    private static final String LOG_TAG = "EDIT_DEC_FRAG";
+
+
+    private PollgramDAO pollgramDAO;
+    private PollgramService pollgramService;
+
+    private NewOptionsAdapter newOptionAdapter;
+    private Decision decision;
+    private List<TextOption> options;
+
+    public EditOptionsFragment(Bundle args) {
+        super(args);
+    }
+
+    @Override
+    public boolean onFragmentCreate() {
+        pollgramDAO = PollgramFactory.getPollgramDAO();
+        pollgramService = PollgramFactory.getPollgramService();
+        long decisionId  = getArguments().getLong(PAR_DECISION_ID);
+        decision = pollgramDAO.getDecision(decisionId);
+        List<Option> resultOptions = pollgramDAO.getOptions(decision);
+        options = new ArrayList<TextOption>();
+        for (Option o : resultOptions)
+            options.add((TextOption)o);
+
+        return true;
+    }
+
+
+    @Override
+    public View createView(Context context) {
+        // init
+        newOptionAdapter = new NewOptionsAdapter(context, options, decision.isEditable());
+
+        fragmentView = new SizeNotifierFrameLayout(context);
+        ActionBarMenu menu = actionBar.createMenu();
+        ActionBarMenuItem nextItemMenu = menu.addItem(SAVE_MENU_ITEM_ID, 0);
+        LayoutInflater layoutInflater = LayoutInflater.from(context);
+        getParentActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
+
+        actionBar.setTitle(getParentActivity().getString(R.string.addNewtOptionsTitle));
+        actionBar.setBackButtonImage(R.drawable.ic_arrow_back_white_24dp);
+        nextItemMenu.setBackgroundResource(R.drawable.ic_done_white_36dp);
+        actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
+            @Override
+            public void onItemClick(int id) {
+                switch (id) {
+                    case UIUtils.ACTION_BAR_BACK_ITEM_ID:
+                        finishFragment();
+                        break;
+                    case SAVE_MENU_ITEM_ID:
+                        final List<Option> options;
+                        try {
+                            options = newOptionAdapter.getOptions();
+                        } catch (PollgramException e) {
+                            Log.w(LOG_TAG, "Error in getOption", e);
+                            Toast.makeText(getParentActivity(), e.getMessage(), Toast.LENGTH_LONG).show();
+                            return;
+                        }
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                        builder.setMessage(getParentActivity().getString(R.string.addOptionToDecisionQuestion,
+                                options.size(), decision.getTitle()));
+                        builder.setPositiveButton(R.string.yes,
+                                new DialogInterface.OnClickListener() {
+                                    @Override
+                                    public void onClick(DialogInterface dialog, int which) {
+                                        saveDecision(options);
+                                    }
+                                }).setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                // nothing to do11
+                            }
+                        }).show();
+
+                        break;
+                    default:
+                        Log.w(LOG_TAG, "unknown action bar menu id [" + id + "]");
+                }
+            }
+
+        });
+
+        ViewGroup myView = (ViewGroup) layoutInflater.inflate(R.layout.edit_optios_layout, (ViewGroup) fragmentView);
+        ListView newOptionListView = (ListView) myView.findViewById(R.id.edit_option_list_view);
+        newOptionListView.setAdapter(newOptionAdapter);
+
+        return fragmentView;
+    }
+
+
+    private void saveDecision(List<Option> options) {
+        pollgramService.notifyNewOptions(decision, options);
+        Toast.makeText(getParentActivity(), R.string.decisionSaved, Toast.LENGTH_LONG).show();
+        super.finishFragment();
+        return;
+    }
+
+}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
index 3ec1e4c80..b5432522c 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -17,6 +17,7 @@
 import org.pollgram.decision.adapter.NewOptionsAdapter;
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.data.Option;
+import org.pollgram.decision.data.PollgramException;
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
 import org.pollgram.decision.service.PollgramService;
@@ -120,9 +121,9 @@ public void onItemClick(int id) {
 
         View myView = layoutInflater.inflate(R.layout.new_decision_step1_layout, (ViewGroup) fragmentView);
 
-        edTitle = (EditText) myView.findViewById(R.id.new_decision_ed_title);
+        edTitle = (EditText) myView.findViewById(R.id.decision_detail_ed_title);
         edTitle.setText(decisionTitle);
-        edLongDescription = (EditText) myView.findViewById(R.id.new_decision_ed_long_description);
+        edLongDescription = (EditText) myView.findViewById(R.id.decision_detail_ed_long_description);
         edLongDescription.setText(decisionLongDescription);
     }
 
@@ -141,14 +142,13 @@ public void onItemClick(int id) {
                         showPage1();
                         break;
                     case NEXT_MENU_ITEM_ID:
-                        final List<Option> options = newOptionAdapter.getOptions();
-                        // check if the last option is not empty !!!
-                        for (int i=0;i<options.size();i++){
-                            if (options.get(i).getTitle() == null) {
-                                Toast.makeText(getParentActivity(), getParentActivity().getString(R.string.emptyTitleOnOption, i+1),
-                                        Toast.LENGTH_LONG).show();
-                                return;
-                            }
+                        final List<Option> options;
+                        try {
+                            options = newOptionAdapter.getOptions();
+                        } catch (PollgramException e) {
+                            Log.w(LOG_TAG, "Error in getOption",e);
+                            Toast.makeText(getParentActivity(), e.getMessage(), Toast.LENGTH_LONG).show();
+                            return;
                         }
 
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
@@ -176,7 +176,7 @@ public void onClick(DialogInterface dialog, int which) {
         });
 
         ViewGroup myView = (ViewGroup) layoutInflater.inflate(R.layout.new_decision_step2_layout, (ViewGroup) fragmentView);
-        ListView newOptionListView = (ListView) myView.findViewById(R.id.new_decisions_option_list_view);
+        ListView newOptionListView = (ListView) myView.findViewById(R.id.edit_option_list_view);
         newOptionListView.setAdapter(newOptionAdapter);
     }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
index 27ffb119c..15a4eb6e5 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
@@ -17,7 +17,6 @@
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
 import org.pollgram.decision.service.PollgramService;
-import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -38,6 +37,7 @@
     private static final int ID_CLOSE_DECISION = nextId++;
     private static final int ID_REOPEN_DECISION = nextId++;
     private static final int ID_DELETE_DECISION = nextId++;
+    private static final int ID_EDIT_OPTIONS = nextId++;
 
 
     public static final String PAR_DECISION_ID = "PAR_DECISION_ID";
@@ -52,9 +52,12 @@
     private TextView tvCreationInfo;
     private TextView tvUserVoteCount;
     private TextView tvDecisionStatus;
+
     private TextView menuDeleteDecisionItem;
     private TextView menuReopenDecisionItem;
     private TextView menuCloseDecisionItem;
+    private TextView menuEditOptions;
+
     private ActionBarMenu menu;
     private VotesManagerTabsFragment votesManagerTabsFragment;
 
@@ -93,6 +96,7 @@ public void onClick(View v) {
         menuCloseDecisionItem = headerItem.addSubItem(ID_CLOSE_DECISION, context.getString(R.string.closeDecision), 0);
         menuReopenDecisionItem =  headerItem.addSubItem(ID_REOPEN_DECISION, context.getString(R.string.reopenDecision), 0);
         menuDeleteDecisionItem =headerItem.addSubItem(ID_DELETE_DECISION, context.getString(R.string.deleteDecision), 0);
+        menuEditOptions = headerItem.addSubItem(ID_EDIT_OPTIONS,context.getString(R.string.editOptions),0);
         
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -101,8 +105,7 @@ public void onItemClick(int id) {
                 if (id == UIUtils.ACTION_BAR_BACK_ITEM_ID) {
                     finishFragment();
                     return;
-                }
-                if (id == ID_DELETE_DECISION) {
+                }else if (id == ID_DELETE_DECISION) {
                     AlertDialog.Builder builder = new AlertDialog.Builder(context);
                     builder.setMessage(R.string.deleteDecisionQuestion).setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
                         @Override
@@ -118,8 +121,7 @@ public void onClick(DialogInterface dialog, int which) {
                         }
                     }).show();
                     return;
-                }
-                if (id == ID_CLOSE_DECISION) {
+                } else if (id == ID_CLOSE_DECISION) {
                     int voteCount = pollgramDAO.getUserVoteCount(decision);
                     int membersCount = participantsUserIds.length;
                     if (voteCount == membersCount) {
@@ -152,6 +154,10 @@ public void onClick(DialogInterface dialog, int which) {
                     Toast.makeText(context, context.getString(R.string.decisionReopened), Toast.LENGTH_SHORT).show();
                     votesManagerTabsFragment.updateView();
                     updateView();
+                } else if (id == ID_EDIT_OPTIONS){
+                    Bundle bundle = new Bundle();
+                    bundle.putLong(EditOptionsFragment.PAR_DECISION_ID, decision.getId());
+                    presentFragment(new EditOptionsFragment(bundle));
                 } else {
 
                     Log.e(LOG_TAG, "Unknown action id[" + id + "]");
@@ -200,11 +206,13 @@ private void updateView(){
         menuReopenDecisionItem.setVisibility(View.GONE);
         menuDeleteDecisionItem.setVisibility(View.GONE);
         menuCloseDecisionItem.setVisibility(View.GONE);
-        if (decision.getUserCreatorId() == UserConfig.getCurrentUser().id) {
+        menuEditOptions.setVisibility(View.GONE);
+        if (decision.isEditable()) {
             menu.setVisibility(View.VISIBLE);
-            if (decision.isOpen())
+            if (decision.isOpen()) {
                 menuCloseDecisionItem.setVisibility(View.VISIBLE);
-            else {
+                menuEditOptions.setVisibility(View.VISIBLE);
+            } else {
                 menuReopenDecisionItem.setVisibility(View.VISIBLE);
                 menuDeleteDecisionItem.setVisibility(View.VISIBLE);
             }
@@ -215,7 +223,7 @@ private void updateView(){
         String userStr = pollgramService.asString(pollgramService.getUser(decision.getUserCreatorId()));
         String creationDateStr = DateFormat.getDateInstance(DateFormat.LONG).
                 format(decision.getCreationDate());
-        tvCreationInfo.setText(ctx.getString(R.string.createdByUserOnDayNewLine,userStr, creationDateStr));
+        tvCreationInfo.setText(ctx.getString(R.string.createdByUserOnDayNewLine, userStr, creationDateStr));
 
         String statusDesc = ctx.getString(decision.isOpen() ? R.string.statusOpen : R.string.statusClose);
         tvDecisionStatus.setText(ctx.getString(R.string.decisionStatus, statusDesc));
@@ -223,6 +231,13 @@ private void updateView(){
 
         tvUserVoteCount.setText(ctx.getString(R.string.howManyMemberVote,
                 userThatVoteSoFar, participantsUserIds.length));
+        if (votesManagerTabsFragment != null)
+            votesManagerTabsFragment.updateView();
+    }
 
+    @Override
+    public void onResume() {
+        super.onResume();
+        updateView();
     }
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index 2128f5e26..5ca3b9202 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -256,6 +256,8 @@ public void voteChanges(boolean areThereChangesToSave) {
     }
 
     protected void updateView() {
+        if (usersDecisionVotes == null)
+            return;
         usersDecisionVotes = PollgramFactory.getPollgramService().
                 getUsersDecisionVotes(usersDecisionVotes.getDecision().getId(),
                         usersDecisionVotes.getUsers());
diff --git a/TMessagesProj/src/main/res/layout/decision_detail_layout.xml b/TMessagesProj/src/main/res/layout/decision_detail_layout.xml
index 24177fb7a..e691763b7 100644
--- a/TMessagesProj/src/main/res/layout/decision_detail_layout.xml
+++ b/TMessagesProj/src/main/res/layout/decision_detail_layout.xml
@@ -1,64 +1,98 @@
 <?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content">
 
-    <RelativeLayout
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical"
+    android:padding="10dp">
+
+    <ImageView
+        android:id="@+id/decision_detail_iv_option_image"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@drawable/decision_icon"
+        android:paddingRight="10dp" />
+
+    <TextView
+        android:id="@+id/decision_detail_tv_title"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignLeft="@+id/decision_detail_ed_title"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentTop="true"
+        android:layout_alignStart="@+id/decision_detail_ed_title"
+        android:text="@string/title"
+        android:textAppearance="?android:attr/textAppearanceMedium" />
+
+    <EditText
+        android:id="@+id/decision_detail_ed_title"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@+id/decision_detail_long_description_scroll_view"
+        android:layout_alignRight="@+id/decision_detail_long_description_scroll_view"
+        android:layout_below="@+id/decision_detail_tv_title"
+        android:layout_toEndOf="@+id/decision_detail_iv_option_image"
+        android:layout_toRightOf="@+id/decision_detail_iv_option_image"
+        android:editable="false" />
+
+
+    <TextView
+        android:id="@+id/decision_detail_tv_creation_info"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:padding="10dp">
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/decision_detail_ed_title"
+        android:paddingTop="10dp"
+        android:text="@string/createdByUserOnDay"
+        android:textAppearance="?android:attr/textAppearanceMedium" />
 
-        <ImageView
-            android:id="@+id/option_detail_iv_option_image"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:background="@drawable/decision_icon"
-            android:paddingRight="10dp" />
+    <TextView
+        android:id="@+id/decision_detail_tv_notes"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/decision_detail_tv_creation_info"
+        android:paddingTop="5dp"
+        android:text="@string/notes"
+        android:textAppearance="?android:attr/textAppearanceMedium" />
 
-        <EditText
-            android:id="@+id/new_decision_ed_title"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignEnd="@+id/new_decision_ed_long_description"
-            android:layout_alignRight="@+id/new_decision_ed_long_description"
-            android:layout_below="@+id/new_decision_tv_title"
-            android:layout_toEndOf="@+id/option_detail_iv_option_image"
-            android:layout_toRightOf="@+id/option_detail_iv_option_image"
-            android:editable="false" />
+    <ScrollView
+        android:id="@+id/decision_detail_long_description_scroll_view"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/decision_detail_tv_notes"
+        android:layout_weight="1">
 
-        <TextView
-            android:id="@+id/new_decision_tv_notes"
-            android:layout_width="wrap_content"
+        <LinearLayout
+            android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true"
-            android:layout_below="@+id/new_decision_ed_title"
-            android:paddingTop="10dp"
-            android:text="@string/notes"
-            android:textAppearance="?android:attr/textAppearanceMedium" />
+            android:orientation="vertical">
 
-        <EditText
-            android:id="@+id/new_decision_ed_long_description"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentEnd="true"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentRight="true"
-            android:layout_alignParentStart="true"
-            android:layout_below="@+id/new_decision_tv_notes"
-            android:editable="false" />
+            <EditText
+                android:id="@+id/decision_detail_ed_long_description"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_alignParentTop="true"
+                android:layout_centerHorizontal="true"
+                android:editable="false" />
 
-        <TextView
-            android:id="@+id/new_decision_tv_title"
+        <Button
+            android:id="@+id/decision_detail_edit_option"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_alignLeft="@+id/new_decision_ed_title"
-            android:layout_alignParentEnd="true"
-            android:layout_alignParentRight="true"
-            android:layout_alignParentTop="true"
-            android:layout_alignStart="@+id/new_decision_ed_title"
-            android:text="@string/title"
-            android:textAppearance="?android:attr/textAppearanceMedium" />
+            android:layout_alignParentBottom="true"
+            android:layout_centerHorizontal="true"
+            android:drawableLeft="@drawable/floating_pencil"
+            android:orientation="vertical"
+            android:text="@string/editOptions"
+            android:layout_gravity="center_horizontal" />
+        </LinearLayout>
+    </ScrollView>
+
+
+
 
-    </RelativeLayout>
-</ScrollView>
\ No newline at end of file
+</RelativeLayout>
diff --git a/TMessagesProj/src/main/res/layout/edit_optios_layout.xml b/TMessagesProj/src/main/res/layout/edit_optios_layout.xml
new file mode 100644
index 000000000..e782a3912
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/edit_optios_layout.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ListView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/edit_option_list_view"
+        android:descendantFocusability="beforeDescendants"
+        android:layout_weight="1" />
+</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/item_new_option_list.xml b/TMessagesProj/src/main/res/layout/item_new_option_list.xml
index 07cb5d41c..a2da70361 100644
--- a/TMessagesProj/src/main/res/layout/item_new_option_list.xml
+++ b/TMessagesProj/src/main/res/layout/item_new_option_list.xml
@@ -9,7 +9,7 @@
         android:layout_height="wrap_content"
         android:background="@drawable/option"
         android:paddingRight="10dp"
-        android:id="@+id/option_detail_iv_option_image"
+        android:id="@+id/decision_detail_iv_option_image"
         android:layout_alignBottom="@+id/new_option_ed_long_description" />
 
     <EditText
@@ -19,7 +19,7 @@
         android:hint="@string/insertOptionTitleHint"
         android:singleLine = "true"
         android:layout_alignParentTop="true"
-        android:layout_toRightOf="@+id/option_detail_iv_option_image"
+        android:layout_toRightOf="@+id/decision_detail_iv_option_image"
         android:layout_toLeftOf="@+id/new_option_delete_button"
         android:layout_toStartOf="@+id/new_option_delete_button" />
 
@@ -29,7 +29,7 @@
         android:id="@+id/new_option_ed_long_description"
         android:hint="@string/insertLongDescriptionHint"
         android:layout_below="@+id/new_option_ed_title"
-        android:layout_toRightOf="@+id/option_detail_iv_option_image"
+        android:layout_toRightOf="@+id/decision_detail_iv_option_image"
         android:layout_alignParentRight="true"
         android:layout_alignParentEnd="true" />
 
diff --git a/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml b/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml
index d8b312dcb..93d8c8654 100644
--- a/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml
+++ b/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml
@@ -9,38 +9,38 @@
         android:layout_height="wrap_content"
         android:background="@drawable/decision_icon"
         android:paddingRight="10dp"
-        android:id="@+id/option_detail_iv_option_image" />
+        android:id="@+id/decision_detail_iv_option_image" />
 
     <EditText
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:id="@+id/new_decision_ed_title"
+        android:id="@+id/decision_detail_ed_title"
         android:singleLine = "true"
         android:hint="@string/insertTitleHint"
-        android:layout_alignBottom="@+id/option_detail_iv_option_image"
-        android:layout_alignRight="@+id/new_decision_ed_long_description"
-        android:layout_alignEnd="@+id/new_decision_ed_long_description"
-        android:layout_toEndOf="@+id/option_detail_iv_option_image"
-        android:layout_toRightOf="@+id/option_detail_iv_option_image"
-        android:layout_below="@+id/new_decision_tv_title" />
+        android:layout_alignBottom="@+id/decision_detail_iv_option_image"
+        android:layout_alignRight="@+id/decision_detail_ed_long_description"
+        android:layout_alignEnd="@+id/decision_detail_ed_long_description"
+        android:layout_toEndOf="@+id/decision_detail_iv_option_image"
+        android:layout_toRightOf="@+id/decision_detail_iv_option_image"
+        android:layout_below="@+id/decision_detail_tv_title" />
 
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:textAppearance="?android:attr/textAppearanceMedium"
         android:text="@string/notes"
-        android:id="@+id/new_decision_tv_notes"
+        android:id="@+id/decision_detail_tv_notes"
         android:layout_marginTop="25dp"
-        android:layout_below="@+id/option_detail_iv_option_image"
+        android:layout_below="@+id/decision_detail_iv_option_image"
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true" />
 
     <EditText
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:id="@+id/new_decision_ed_long_description"
+        android:id="@+id/decision_detail_ed_long_description"
         android:hint="@string/insertLongDescriptionHint"
-        android:layout_below="@+id/new_decision_tv_notes"
+        android:layout_below="@+id/decision_detail_tv_notes"
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_alignParentRight="true"
@@ -51,9 +51,9 @@
         android:layout_height="wrap_content"
         android:textAppearance="?android:attr/textAppearanceMedium"
         android:text="@string/title"
-        android:id="@+id/new_decision_tv_title"
-        android:layout_alignLeft="@+id/new_decision_ed_title"
-        android:layout_alignStart="@+id/new_decision_ed_title"
+        android:id="@+id/decision_detail_tv_title"
+        android:layout_alignLeft="@+id/decision_detail_ed_title"
+        android:layout_alignStart="@+id/decision_detail_ed_title"
         android:layout_alignParentRight="true"
         android:layout_alignParentEnd="true"
         android:layout_alignParentTop="true" />
diff --git a/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml b/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml
index ee68a3b89..e782a3912 100644
--- a/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml
+++ b/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml
@@ -6,7 +6,7 @@
     <ListView
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:id="@+id/new_decisions_option_list_view"
+        android:id="@+id/edit_option_list_view"
         android:descendantFocusability="beforeDescendants"
         android:layout_weight="1" />
 </LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/option_detail_fragment.xml b/TMessagesProj/src/main/res/layout/option_detail_fragment.xml
index ad48ee103..56c9ca24d 100644
--- a/TMessagesProj/src/main/res/layout/option_detail_fragment.xml
+++ b/TMessagesProj/src/main/res/layout/option_detail_fragment.xml
@@ -10,7 +10,7 @@
 
 
         <ImageView
-            android:id="@+id/option_detail_iv_option_image"
+            android:id="@+id/decision_detail_iv_option_image"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_alignParentLeft="true"
@@ -24,8 +24,8 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_alignParentTop="true"
-            android:layout_toEndOf="@+id/option_detail_iv_option_image"
-            android:layout_toRightOf="@+id/option_detail_iv_option_image"
+            android:layout_toEndOf="@+id/decision_detail_iv_option_image"
+            android:layout_toRightOf="@+id/decision_detail_iv_option_image"
             android:text="@string/title"
             android:textAppearance="?android:attr/textAppearanceMedium" />
 
@@ -36,7 +36,7 @@
             android:layout_alignParentEnd="true"
             android:layout_alignParentRight="true"
             android:layout_below="@+id/option_detail_title"
-            android:layout_toRightOf="@+id/option_detail_iv_option_image"
+            android:layout_toRightOf="@+id/decision_detail_iv_option_image"
             android:editable="false"/>
 
         <TextView
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index bc4cf191a..9e11139ab 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1074,6 +1074,10 @@
     <!-- between Prefix and Suffix goes the decision title -->
     <string name="tmsg_DeleteDecisionSuffix">è stata rimossa definitivamente.</string>
 
+    <string name="tmsg_AddOptionPrefix">Ho aggiunto alla decisione</string>
+    <!-- between Prefix and Suffix goes the decision title -->
+    <string name="tmsg_AddOptionSuffix">le seguenti opzioni:</string>
+
     <!-- END of POLLGRAM transaction messages -->
 
     <!-- START MessageType descriptions -->
@@ -1083,6 +1087,7 @@
     <string name="MessageType_CLOSE_DECISION">Chiusura decisione</string>
     <string name="MessageType_REOPEN_DECISION">Riapertura decisione</string>
     <string name="MessageType_DELETE_DECISION">Cancellazione decisione</string>
+    <string name="MessageType_ADD_OPTION">Add options</string>
     <!-- END MessageType descriptions -->
 
 
@@ -1127,7 +1132,9 @@
     <string name="pleaseSelectATitleForOption">È necessario selezionafdre un titolo per l\'ultima opzione, prima aggiungerne una nuova.</string>
     <string name="decisionAlreadyExist">Attenzione! Esiste già una decisione con questo titolo per questo!</string>
     <string name="emptyTitleOnOption">Prego selezionare un titolo per l\'opzione %1$d.</string>
+    <string name="emptyTitleOnLastOption">Prego selezionare un titolo per l\'ultima opzione.</string>
     <string name="saveDecisionQuestion">Salvare la decisione %1$s con %2$d \opzioni ?</string>
+    <string name="addOptionToDecisionQuestion">Aggiungere %1$d opzioni alla decisione %2$s ?</string>
     <string name="you">te</string>
     <string name="closeDecisionQuestionPrefixSingle">Attenzione solo %1$d utente su %2$d ha votato.</string>
     <string name="closeDecisionQuestionPrefixMulti">Attenzione solo %1$d utenti su %2$d hanno votato.</string>
@@ -1139,6 +1146,8 @@
     <string name="voteSummary">Riepilogo voti</string>
     <string name="decisionDetailTitle">Dettaglio decisione</string>
     <string name="showDecision">Mostra decisioni</string>
+    <string name="editOptions">Gestione opzioni</string>
+    <string name="addNewtOptionsTitle">Aggiungi nuove opzioni</string>
 
     <!-- END of Pollgram text -->
 </resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index d69ea0ef9..ed1a450a8 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1070,6 +1070,10 @@
     <!-- between Prefix and Suffix goes the decision title -->
     <string name="tmsg_DeleteDecisionSuffix">has been permanently removed.</string>
 
+    <string name="tmsg_AddOptionPrefix">I added to the decision</string>
+    <!-- between Prefix and Suffix goes the decision title -->
+    <string name="tmsg_AddOptionSuffix">the following options:</string>
+
     <!-- END of POLLGRAM transaction messages -->
 
     <!-- START MessageType descriptions -->
@@ -1079,6 +1083,7 @@
     <string name="MessageType_CLOSE_DECISION">Close decision</string>
     <string name="MessageType_REOPEN_DECISION">Reopen decision</string>
     <string name="MessageType_DELETE_DECISION">Delete decision</string>
+    <string name="MessageType_ADD_OPTION">Add options</string>
     <!-- END MessageType descriptions -->
 
 
@@ -1122,8 +1127,10 @@
     <string name="pleaseSelectATitleForOption">Pleace select a value for the title of the last option, before adding a new one</string>
     <string name="decisionAlreadyExist">Already exist a decision with this title on the current group !</string>
     <string name="emptyTitleOnOption">Please select a title for the %1$d option.</string>
-    <string name="saveDecisionQuestion">Save decision %1$s with %2$d options ?</string>
+    <string name="emptyTitleOnLastOption">Please select a title for the last option.</string>
     <string name="you">you</string>
+    <string name="saveDecisionQuestion">Save decision %1$s with options ?</string>
+    <string name="addOptionToDecisionQuestion">Add %1$d  options to decision %2$s ?</string>
     <string name="closeDecisionQuestionPrefixSingle">Only %1$d user out of %2$d voted yet.</string>
     <string name="closeDecisionQuestionPrefixMulti">Only %1$d users out of %2$d voted yet.</string>
     <string name="closeDecisionQuestionSuffix">\nAfter closing the decision it will be no longer possible for other users to vote, unless the decision will be reopened.\nAre you sure to close this decision ?</string>
@@ -1134,6 +1141,8 @@
     <string name="voteSummary">Votes Summary</string>
     <string name="decisionDetailTitle">Decision detail</string>
     <string name="showDecision">Show decisions</string>
+    <string name="editOptions">Manage options</string>
+    <string name="addNewtOptionsTitle">Add new options</string>
 
     <!-- END of Pollgram text -->
 
diff --git a/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java b/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
index 5b7cb664b..f4e96076e 100644
--- a/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
+++ b/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
@@ -11,6 +11,7 @@
 import org.mockito.runners.MockitoJUnitRunner;
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.data.Option;
+import org.pollgram.decision.data.TextOption;
 import org.pollgram.decision.data.Vote;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.tgnet.TLRPC;
@@ -160,7 +161,7 @@ private void testNewDecision(Decision decision) throws PollgramParseException {
     }
 
     private void assertNewDecision(Decision decision, List<Option> options, String message) throws PollgramParseException {
-        PollgramMessagesManager.NewDecisionData result = messageManager.getNewDecision(message, chat.id, user.id, new Date());
+        PollgramMessagesManager.DecisionOptionData result = messageManager.getNewDecision(message, chat.id, user.id, new Date());
         Assert.assertEquals(decision, result.decision);
         Assert.assertEquals(options, result.optionList);
     }
@@ -221,4 +222,25 @@ private void assertDeleteDecision(Decision decision, String message) throws Poll
         Assert.assertEquals(foundDecision, decision);
     }
 
+    @Test
+    public void testAddOptions() throws  PollgramParseException {
+        List<Option> newOptions = new ArrayList<>();
+        newOptions.add(new TextOption("Option1 Title", "Option1 long desc", decision.getId()));
+        newOptions.add(new TextOption("Option2 Title", "", decision.getId()));
+        newOptions.add(new TextOption("Option3 Title", null, decision.getId()));
+        newOptions.add(new TextOption("It's options 4", "option 4 desc it's the best", decision.getId()));
+        newOptions.add(new TextOption("options 5", "option 5 desc it's even better", decision.getId()));
+        String message = messageManager.buildAddOptions(decision, newOptions);
+        PollgramMessagesManager.MessageType type = messageManager.getMessageType(message);
+        Assert.assertEquals(PollgramMessagesManager.MessageType.ADD_OPTION, type);
+        assertAddOptions(message, decision, newOptions);
+        assertAddOptions(messageManager.reformatMessage(message), decision, newOptions);
+    }
+
+    private void assertAddOptions(String message, Decision decision, List<Option> newOptions) throws PollgramParseException {
+        PollgramMessagesManager.DecisionOptionData result = messageManager.getNewOptionAdded(message, chat.id, user.id);
+        Assert.assertEquals(decision,result.decision);
+        Assert.assertEquals(newOptions, result.optionList);
+    }
+
 }
\ No newline at end of file
