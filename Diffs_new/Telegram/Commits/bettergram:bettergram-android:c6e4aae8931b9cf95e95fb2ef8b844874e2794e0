diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
index 5f8daf48a..f7670ab75 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
@@ -258,7 +258,7 @@ public void run() {
         public TLRPC.SendMessageAction action;
     }
 
-    private final Comparator<TLRPC.TL_dialog> dialogComparator = new Comparator<TLRPC.TL_dialog>() {
+    public final Comparator<TLRPC.TL_dialog> dialogComparator = new Comparator<TLRPC.TL_dialog>() {
         @Override
         public int compare(TLRPC.TL_dialog dialog1, TLRPC.TL_dialog dialog2) {
             if (!dialog1.pinned && dialog2.pinned) {
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/RecyclerListView.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/RecyclerListView.java
index bcbcbdf48..6e97d64fc 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/RecyclerListView.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/Components/RecyclerListView.java
@@ -11,7 +11,11 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.res.TypedArray;
-import android.graphics.*;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.TransitionDrawable;
 import android.os.Build;
@@ -20,7 +24,18 @@
 import android.text.TextPaint;
 import android.util.SparseIntArray;
 import android.util.StateSet;
-import android.view.*;
+import android.view.GestureDetector;
+import android.view.HapticFeedbackConstants;
+import android.view.MotionEvent;
+import android.view.SoundEffectConstants;
+import android.view.View;
+import android.view.ViewConfiguration;
+import android.view.ViewGroup;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+
 import io.bettergram.telegram.messenger.AndroidUtilities;
 import io.bettergram.telegram.messenger.FileLog;
 import io.bettergram.telegram.messenger.LocaleController;
@@ -28,16 +43,13 @@
 import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.ui.ActionBar.Theme;
 
-import java.lang.reflect.Field;
-import java.lang.reflect.Method;
-import java.util.ArrayList;
-
 public class RecyclerListView extends RecyclerView {
 
     private OnItemClickListener onItemClickListener;
     private OnItemClickListenerExtended onItemClickListenerExtended;
     private OnItemLongClickListener onItemLongClickListener;
     private OnItemLongClickListenerExtended onItemLongClickListenerExtended;
+    private RecyclerListViewItemClickListener onListItemClickListener;
     private boolean longPressCalled;
     private OnScrollListener onScrollListener;
     private OnInterceptTouchListener onInterceptTouchListener;
@@ -544,6 +556,11 @@ public void onLongPress(MotionEvent event) {
             });
         }
 
+        public void resetLatestChild() {
+            currentChildView = null;
+            currentChildPosition = -1;
+        }
+
         @Override
         public boolean onInterceptTouchEvent(RecyclerView view, MotionEvent event) {
             int action = event.getActionMasked();
@@ -925,7 +942,8 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                 }
             }
         });
-        addOnItemTouchListener(new RecyclerListViewItemClickListener(context));
+        onListItemClickListener = new RecyclerListViewItemClickListener(context);
+        addOnItemTouchListener(onListItemClickListener);
     }
 
     @Override
@@ -1182,6 +1200,10 @@ protected void onAttachedToWindow() {
         }
     }
 
+    public void cleanupTouch() {
+        onListItemClickListener.resetLatestChild();
+    }
+
     @Override
     public void setAdapter(Adapter adapter) {
         final Adapter oldAdapter = getAdapter();
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index c30f08660..17914f5e1 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -123,6 +123,9 @@
 import io.bettergram.telegram.ui.Components.StickersAlert;
 import io.bettergram.telegram.ui.Components.TabsView;
 
+import static io.bettergram.telegram.messenger.support.widget.helper.ItemTouchHelper.ACTION_STATE_DRAG;
+import static io.bettergram.telegram.messenger.support.widget.helper.ItemTouchHelper.ACTION_STATE_IDLE;
+
 public class DialogsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
 
     private RecyclerListView listView;
@@ -1168,60 +1171,66 @@ public void onMove(float dx, float dy) {
 
             private void reallyMoved(int fromPosition, int toPosition) {
                 if (listView.getAdapter() instanceof BetterDialogsAdapter && dialogsAdapter != null) {
-                    if (fromPosition > toPosition) {
-                        final ArrayList<Pair<Long, Integer>> swappedPinnedDialogs = new ArrayList<>();
-                        for (int current_index = toPosition, last_index = fromPosition; current_index <= last_index; current_index++) {
-                            TLRPC.TL_dialog dialog_1 = dialogs_copy.get(current_index);
-                            TLRPC.TL_dialog dialog_2 = dialogs_copy.get(current_index == last_index ? toPosition : current_index + 1);
-                            swappedPinnedDialogs.add(new Pair<>(dialog_1.id, dialog_2.pinnedNum));
-                        }
-                        MessagesController.getInstance(currentAccount).pinDialogInternal(swappedPinnedDialogs);
-                    } else if (fromPosition < toPosition) {
-                        final ArrayList<Pair<Long, Integer>> swappedPinnedDialogs = new ArrayList<>();
-                        for (int current_index = toPosition, last_index = fromPosition; current_index >= last_index; current_index--) {
-                            TLRPC.TL_dialog dialog_1 = dialogs_copy.get(current_index);
-                            TLRPC.TL_dialog dialog_2 = dialogs_copy.get(current_index == last_index ? toPosition : current_index - 1);
-                            swappedPinnedDialogs.add(new Pair<>(dialog_1.id, dialog_2.pinnedNum));
+                    final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount() - 1;
+                    if (pinned_highest_pos >= 1 && fromPosition <= pinned_highest_pos && toPosition <= pinned_highest_pos) {
+                        if (fromPosition > toPosition) {
+                            final ArrayList<Pair<Long, Integer>> swappedPinnedDialogs = new ArrayList<>();
+                            for (int current_index = toPosition, last_index = fromPosition; current_index <= last_index; current_index++) {
+                                TLRPC.TL_dialog dialog_1 = dialogs_copy.get(current_index);
+                                TLRPC.TL_dialog dialog_2 = dialogs_copy.get(current_index == last_index ? toPosition : current_index + 1);
+                                swappedPinnedDialogs.add(new Pair<>(dialog_1.id, dialog_2.pinnedNum));
+                            }
+                            MessagesController.getInstance(currentAccount).pinDialogInternal(swappedPinnedDialogs);
+                        } else if (fromPosition < toPosition) {
+                            final ArrayList<Pair<Long, Integer>> swappedPinnedDialogs = new ArrayList<>();
+                            for (int current_index = toPosition, last_index = fromPosition; current_index >= last_index; current_index--) {
+                                TLRPC.TL_dialog dialog_1 = dialogs_copy.get(current_index);
+                                TLRPC.TL_dialog dialog_2 = dialogs_copy.get(current_index == last_index ? toPosition : current_index - 1);
+                                swappedPinnedDialogs.add(new Pair<>(dialog_1.id, dialog_2.pinnedNum));
+                            }
+                            MessagesController.getInstance(currentAccount).pinDialogInternal(swappedPinnedDialogs);
                         }
-                        MessagesController.getInstance(currentAccount).pinDialogInternal(swappedPinnedDialogs);
+                    } else {
+                        reallyMoved(fromPosition, toPosition - 1);
                     }
                     AndroidUtilities.runOnUIThread(() -> {
+                        listView.cleanupTouch();
                         dialogsAdapter.notifyDataSetChanged();
-                        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
-                    }, 1000);
+                    });
                 }
             }
 
             @Override
             public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {
-                int fromPosition = viewHolder.getAdapterPosition();
-                int toPosition = target.getAdapterPosition();
+                if (listView.getAdapter() instanceof BetterDialogsAdapter && dialogsAdapter != null) {
+                    int fromPosition = viewHolder.getAdapterPosition();
+                    int toPosition = target.getAdapterPosition();
 
 
-                if (dragFrom == -1) {
-                    dragFrom = fromPosition;
-                }
-                dragTo = toPosition;
+                    if (dragFrom == -1) {
+                        dragFrom = fromPosition;
+                    }
+                    dragTo = toPosition;
 
-                final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount() - 1;
-                final TLRPC.TL_dialog dialog = getDialog(fromPosition);
-                if (dialog != null && dialog.pinned && pinned_highest_pos > 1 && fromPosition <= pinned_highest_pos && toPosition <= pinned_highest_pos) {
-                    dialogsAdapter.onItemMove(fromPosition, toPosition);
-                    return true;
+                    final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount() - 1;
+                    final TLRPC.TL_dialog dialog = getDialog(fromPosition);
+                    if (dialog != null && dialog.pinned && pinned_highest_pos >= 1 && dragFrom <= pinned_highest_pos && dragTo <= pinned_highest_pos) {
+                        dialogsAdapter.onItemMove(fromPosition, toPosition);
+                        return true;
+                    }
                 }
-
                 return false;
             }
 
             @Override
             public void onSelectedChanged(RecyclerView.ViewHolder viewHolder, int actionState) {
                 super.onSelectedChanged(viewHolder, actionState);
-                if (actionState == 2) {
+                if (actionState == ACTION_STATE_DRAG) {
                     dialogs_copy = dialogsAdapter.getDialogsArray();
                     final Drawable draggingDrawable = listView.getBackground();
                     previousDrawable = viewHolder.itemView.getBackground();
                     viewHolder.itemView.setBackground(draggingDrawable);
-                } else if (actionState == 0) {
+                } else if (actionState == ACTION_STATE_IDLE) {
                     viewHolder.itemView.setBackground(previousDrawable);
                     final int position = viewHolder.getAdapterPosition();
                     final TLRPC.TL_dialog dialog = getDialog(position);
@@ -1233,6 +1242,9 @@ public void onSelectedChanged(RecyclerView.ViewHolder viewHolder, int actionStat
 
             @Override
             public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
+                if (listView.getAdapter() instanceof BetterDialogsAdapter && dialogsAdapter != null) {
+                    dialogsAdapter.notifyItemChanged(viewHolder.getAdapterPosition());
+                }
             }
 
             //defines the enabled move directions in each state (idle, swiping, dragging).
@@ -1241,11 +1253,11 @@ public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder v
                 final int position = viewHolder.getAdapterPosition();
                 final TLRPC.TL_dialog dialog = getDialog(position);
                 final int dialogs_size = dialogsAdapter.getDialogsArray().size();
-                final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount();
-                if (dialog != null && dialog.pinned && dialogs_size > 1 && !searching && pinned_highest_pos > 1 && position <= pinned_highest_pos) {
-                    return makeFlag(ItemTouchHelper.ACTION_STATE_DRAG, (position == pinned_highest_pos - 1) ? ItemTouchHelper.UP : ItemTouchHelper.DOWN | ItemTouchHelper.UP);
+                final int pinned_highest_pos = MessagesController.getInstance(currentAccount).getPinnedCount() - 1;
+                if (dialog != null && dialog.pinned && dialogs_size >= 1 && !searching && pinned_highest_pos >= 1 && position <= pinned_highest_pos) {
+                    return makeFlag(ACTION_STATE_DRAG, (position == 0) ? ItemTouchHelper.DOWN : (position == pinned_highest_pos) ? ItemTouchHelper.UP : ItemTouchHelper.DOWN | ItemTouchHelper.UP);
                 } else {
-                    return makeFlag(ItemTouchHelper.ACTION_STATE_IDLE, ItemTouchHelper.ACTION_STATE_IDLE);
+                    return makeFlag(ACTION_STATE_IDLE, ACTION_STATE_IDLE);
                 }
             }
 
