diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
index 5c7eac975..94841770d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
@@ -17,7 +17,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
-import android.widget.ImageView;
+import android.widget.FrameLayout;
 import android.widget.ListView;
 import android.widget.TextView;
 import android.widget.SeekBar;
@@ -25,13 +25,13 @@
 import org.telegram.android.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
-import org.telegram.ui.Views.ActionBar.ActionBarLayer;
-import org.telegram.ui.Views.ActionBar.BaseFragment;
-import org.telegram.ui.Views.ColorPickerView;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Cells.TextCheckCell;
+import org.telegram.ui.Cells.TextDetailSettingsCell;
 
 public class SettingsUltraFeaturesActivity extends BaseFragment {
     private ListView listView;
-    private SeekBar seekBar;
 
     private int enableMarkdownRow;
     private int PhotoQualityRow;
@@ -57,10 +57,10 @@ public void onFragmentDestroy() {
     @Override
     public View createView(final LayoutInflater inflater, ViewGroup container) {
         if (fragmentView == null) {
-            actionBarLayer.setDisplayHomeAsUpEnabled(true, R.drawable.ic_ab_back);
-            actionBarLayer.setBackOverlay(R.layout.updating_state_layout);
-            actionBarLayer.setTitle(LocaleController.getString("UltraFeatures", R.string.UltraFeatures));
-            actionBarLayer.setActionBarMenuOnItemClick(new ActionBarLayer.ActionBarMenuOnItemClick() {
+            actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+            actionBar.setAllowOverlayTitle(true);
+            actionBar.setTitle(LocaleController.getString("UltraFeatures", R.string.UltraFeatures));
+            actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
                 @Override
                 public void onItemClick(int id) {
                     if (id == -1) {
@@ -69,27 +69,35 @@ public void onItemClick(int id) {
                 }
             });
 
-            fragmentView = inflater.inflate(R.layout.settings_layout, container, false);
-            final ListAdapter listAdapter = new ListAdapter(getParentActivity());
-            listView = (ListView) fragmentView.findViewById(R.id.listView);
-            listView.setAdapter(listAdapter);
+            fragmentView = new FrameLayout(getParentActivity());
+            FrameLayout frameLayout = (FrameLayout) fragmentView;
+
+            listView = new ListView(getParentActivity());
+            listView.setDivider(null);
+            listView.setDividerHeight(0);
+            listView.setVerticalScrollBarEnabled(false);
+            frameLayout.addView(listView);
+            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
+            layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
+            layoutParams.height = FrameLayout.LayoutParams.MATCH_PARENT;
+            listView.setLayoutParams(layoutParams);
+            listView.setAdapter(new ListAdapter(getParentActivity()));
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
+                    boolean enabled = false;
                     if (i == enableMarkdownRow) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
-                        boolean enabled = preferences.getBoolean("view_markdown", false);
+                        enabled = preferences.getBoolean("view_markdown", false);
                         editor.putBoolean("view_markdown", !enabled);
                         editor.commit();
-                        listView.invalidateViews();
                     } else if (i == showAndroidEmojiRow) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
-                        boolean enabled = preferences.getBoolean("showAndroidEmoji", false);
+                        enabled = preferences.getBoolean("showAndroidEmoji", false);
                         editor.putBoolean("showAndroidEmoji", !enabled);
                         editor.commit();
-                        listView.invalidateViews();
                     } else if (i == PhotoQualityRow) {
                         final View layout = inflater.inflate(R.layout.settings_seekbar_dialog_layout, (ViewGroup) fragmentView.findViewById(R.id.seekBar_Dialog_Layout));
                         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
@@ -135,12 +143,11 @@ public void onStopTrackingTouch(SeekBar seekBar) {
                                 SharedPreferences.Editor editor = preferences.edit();
                                 editor.putInt("PhotoQuality", seekBar.getProgress());
                                 editor.commit();
-//                                if (listView != null) {
-//                                    listView.invalidateViews();
-//                                }
                             }
                         });
-
+                    }
+                    if (view instanceof TextCheckCell) {
+                        ((TextCheckCell) view).setChecked(!enabled);
                     }
                 }
             });
@@ -195,43 +202,25 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             int type = getItemViewType(i);
             if (type == 0) {
                 if (view == null) {
-                    LayoutInflater li = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                    view = li.inflate(R.layout.settings_row_check_layout, viewGroup, false);
+                    view = new TextCheckCell(mContext);
                 }
-                TextView textView = (TextView) view.findViewById(R.id.settings_row_text);
-                View divider = view.findViewById(R.id.settings_row_divider);
-
-                ImageView checkButton = (ImageView) view.findViewById(R.id.settings_row_check_button);
+                TextCheckCell checkCell = (TextCheckCell) view;
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
-                boolean enabled = false;
-
                 if (i == enableMarkdownRow) {
-                    textView.setText(LocaleController.getString("EnableMarkdown", R.string.EnableMarkdown));
-                    divider.setVisibility(View.VISIBLE);
-                    enabled = preferences.getBoolean("view_markdown", false);
+                    checkCell.setTextAndCheck(LocaleController.getString("EnableMarkdown", R.string.EnableMarkdown), preferences.getBoolean("view_markdown", false), true);
                 } else if (i == showAndroidEmojiRow) {
-                    textView.setText(LocaleController.getString("showAndroidEmoji", R.string.showAndroidEmoji));
-                    divider.setVisibility(View.VISIBLE);
-                    enabled = preferences.getBoolean("showAndroidEmoji", false);
-                }
-                if (enabled) {
-                    checkButton.setImageResource(R.drawable.btn_check_on);
-                } else {
-                    checkButton.setImageResource(R.drawable.btn_check_off);
+                    checkCell.setTextAndCheck(LocaleController.getString("showAndroidEmoji", R.string.showAndroidEmoji), preferences.getBoolean("showAndroidEmoji", false), true);
                 }
             } else if (type == 1) {
                 if (view == null) {
-                    LayoutInflater li = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                    view = li.inflate(R.layout.settings_row_ultra_slider_layout, viewGroup, false);
+                    view = new TextDetailSettingsCell(mContext);
                 }
-                TextView textView = (TextView) view.findViewById(R.id.settings_row_text);
-                View divider = view.findViewById(R.id.settings_row_divider);
-                TextView seekBarPercent = (TextView) view.findViewById(R.id.settings_seekBar_percent);
+                TextDetailSettingsCell textCell = (TextDetailSettingsCell) view;
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
                 if (i == PhotoQualityRow) {
-                    textView.setText(LocaleController.getString("PhotoQuality", R.string.PhotoQuality));
-                    seekBarPercent.setText(Integer.toString(preferences.getInt("PhotoQuality", 80)) + "%");
-                    divider.setVisibility(View.VISIBLE);
+                    textCell.setMultilineDetail(true);
+                    String value = Integer.toString(preferences.getInt("PhotoQuality", 80)) + "%";
+                    textCell.setTextAndValue(LocaleController.getString("PhotoQuality", R.string.PhotoQuality), value, true);
                 }
             }
             return view;
@@ -246,7 +235,6 @@ public int getItemViewType(int i) {
             } else {
                 return 9;
             }
-
         }
 
         @Override
