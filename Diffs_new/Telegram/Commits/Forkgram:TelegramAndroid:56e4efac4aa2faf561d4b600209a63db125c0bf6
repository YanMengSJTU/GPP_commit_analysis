diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java b/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
index 26a48d5e0..2d5ab4ebf 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
@@ -27,6 +27,8 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.AnimatedFileDrawable;
 
+import android.content.SharedPreferences;
+
 public class ImageReceiver implements NotificationCenter.NotificationCenterDelegate {
 
     public interface ImageReceiverDelegate {
@@ -1071,7 +1073,11 @@ public boolean isForcePreview() {
     }
 
     public void setRoundRadius(int value) {
-        roundRadius = value;
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        final boolean squareAvatars = preferences.getBoolean("squareAvatars", true);
+        if (!squareAvatars) {
+            roundRadius = value;
+        }
     }
 
     public void setCurrentAccount(int value) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
index e19881898..9f5abc587 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
@@ -24,6 +24,9 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.Theme;
 
+import org.telegram.messenger.MessagesController;
+import android.content.SharedPreferences;
+
 public class AvatarDrawable extends Drawable {
 
     private TextPaint namePaint;
@@ -223,7 +226,14 @@ public void draw(Canvas canvas) {
         Theme.avatar_backgroundPaint.setColor(color);
         canvas.save();
         canvas.translate(bounds.left, bounds.top);
-        canvas.drawCircle(size / 2.0f, size / 2.0f, size / 2.0f, Theme.avatar_backgroundPaint);
+        
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        final boolean squareAvatars = preferences.getBoolean("squareAvatars", true);
+        if (squareAvatars) {
+            canvas.drawRect(0f, 0f, size, size, Theme.avatar_backgroundPaint);
+        } else {
+            canvas.drawCircle(size / 2.0f, size / 2.0f, size / 2.0f, Theme.avatar_backgroundPaint);
+        }
 
         if (savedMessages != 0 && Theme.avatar_savedDrawable != null) {
             int w = Theme.avatar_savedDrawable.getIntrinsicWidth();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 8ede67810..4853951e6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -161,6 +161,7 @@
     private int contactsSortRow;
     private int autoplayGifsRow;
     private int rowCount;
+    private int squareAvatarsRow;
 
     private final static int edit_name = 1;
     private final static int logout = 2;
@@ -279,6 +280,7 @@ public boolean onFragmentCreate() {
         themeRow = rowCount++;
         languageRow = rowCount++;
         enableAnimationsRow = rowCount++;
+        squareAvatarsRow = rowCount++;
         messagesSectionRow = rowCount++;
         messagesSectionRow2 = rowCount++;
         customTabsRow = rowCount++;
@@ -450,6 +452,15 @@ public void onItemClick(View view, final int position) {
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(!animations);
                     }
+                } else if (position == squareAvatarsRow) {
+                    SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+                    boolean squareAvatars = preferences.getBoolean("squareAvatars", true);
+                    SharedPreferences.Editor editor = preferences.edit();
+                    editor.putBoolean("squareAvatars", !squareAvatars);
+                    editor.commit();
+                    if (view instanceof TextCheckCell) {
+                        ((TextCheckCell) view).setChecked(!squareAvatars);
+                    }
                 } else if (position == notificationRow) {
                     presentFragment(new NotificationsSettingsActivity());
                 } else if (position == backgroundRow) {
@@ -1265,6 +1276,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     SharedPreferences preferences = MessagesController.getGlobalMainSettings();
                     if (position == enableAnimationsRow) {
                         textCell.setTextAndCheck(LocaleController.getString("EnableAnimations", R.string.EnableAnimations), preferences.getBoolean("view_animations", true), false);
+                    } else if (position == squareAvatarsRow) {
+                        textCell.setTextAndCheck("Square avatars (restart required)", preferences.getBoolean("squareAvatars", true), false);
                     } else if (position == sendByEnterRow) {
                         textCell.setTextAndCheck(LocaleController.getString("SendByEnter", R.string.SendByEnter), preferences.getBoolean("send_by_enter", false), true);
                     } else if (position == saveToGalleryRow) {
@@ -1333,7 +1346,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         @Override
         public boolean isEnabled(RecyclerView.ViewHolder holder) {
             int position = holder.getAdapterPosition();
-            return position == textSizeRow || position == enableAnimationsRow || position == notificationRow || position == backgroundRow || position == numberRow ||
+            return position == textSizeRow || position == squareAvatarsRow || position == enableAnimationsRow || position == notificationRow || position == backgroundRow || position == numberRow ||
                     position == askQuestionRow || position == sendLogsRow || position == sendByEnterRow || position == autoplayGifsRow || position == privacyRow ||
                     position == clearLogsRow || position == languageRow || position == usernameRow || position == bioRow ||
                     position == switchBackendButtonRow || position == telegramFaqRow || position == contactsSortRow || position == contactsReimportRow || position == saveToGalleryRow ||
@@ -1414,7 +1427,7 @@ public int getItemViewType(int position) {
             }
             if (position == settingsSectionRow || position == supportSectionRow || position == messagesSectionRow || position == contactsSectionRow) {
                 return 1;
-            } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow) {
+            } else if (position == enableAnimationsRow || position == squareAvatarsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow) {
                 return 3;
             } else if (position == notificationRow || position == themeRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == privacyPolicyRow || position == emojiRow || position == dataRow) {
                 return 2;
