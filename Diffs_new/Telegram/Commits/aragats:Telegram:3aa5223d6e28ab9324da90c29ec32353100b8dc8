diff --git a/MyREADME.md b/MyREADME.md
index 1f933fae5..e6f68d04c 100644
--- a/MyREADME.md
+++ b/MyREADME.md
@@ -85,4 +85,10 @@ TODO:
 
 
 TOP libraries for Android
-https://infinum.co/the-capsized-eight/articles/top-5-android-libraries-every-android-developer-should-know-about
\ No newline at end of file
+https://infinum.co/the-capsized-eight/articles/top-5-android-libraries-every-android-developer-should-know-about
+
+
+
+VK URL
+https://api.vk.com/method/photos.search?lat=52.400608&long=13.011822&count=100&radius=5000&v=5.44
+https://api.vk.com/method/newsfeed.search?lat=52.400608&lng=13.011822&count=100
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 49153b8fe..5589d1549 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -15,25 +15,26 @@
 import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.utils.Constants;
 
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.ConcurrentHashMap;
+
 import retrofit.Callback;
 import retrofit.Response;
 import retrofit.Retrofit;
 import ru.aragats.wgo.ApplicationLoader;
-
-import ru.aragats.wgo.rest.dto.FileUploadRequest;
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.PostRequest;
-import ru.aragats.wgo.rest.dto.PostResponse;
-import ru.aragats.wgo.rest.dto.User;
-import ru.aragats.wgo.rest.dto.Venue;
+import ru.aragats.wgo.dto.FileUploadRequest;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.PostRequest;
+import ru.aragats.wgo.dto.PostResponse;
+import ru.aragats.wgo.dto.User;
+import ru.aragats.wgo.dto.Venue;
 import ru.aragats.wgo.rest.manager.RestManager;
 import ru.aragats.wgo.rest.mock.PostServiceMock;
 import ru.aragats.wgo.rest.mock.UserServiceMock;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.concurrent.ConcurrentHashMap;
+import ru.aragats.wgo.converter.vk.VKPhotoResponseToPostListConverter;
+import ru.aragats.wgo.dto.vk.VKPhotoResponse;
 
 //import org.telegram.messenger.TLRPC;
 
@@ -41,6 +42,7 @@
 //TODO Look at MessagesController methods. There are many good examples and best practice.
 public class PostsController implements NotificationCenter.NotificationCenterDelegate {
 
+    private VKPhotoResponseToPostListConverter vkPhotoResponseConverter = new VKPhotoResponseToPostListConverter();
     private Venue lastVenue;
 
     public List<Post> posts = new ArrayList<>();
@@ -154,9 +156,9 @@ public void onFailure(Throwable t) {
     public void addPostMock(Post post) {
 
         //TODO temp test
-//        RestManager.getInstance().uploadTest(new PostRequest(post.getImage().getUrl()), new Callback<ru.aragats.wgo.rest.dto.PostResponse>() {
+//        RestManager.getInstance().uploadTest(new PostRequest(post.getImage().getUrl()), new Callback<ru.aragats.wgo.dto.PostResponse>() {
 //            @Override
-//            public void onResponse(Response<ru.aragats.wgo.rest.dto.PostResponse> response, Retrofit retrofit) {
+//            public void onResponse(Response<ru.aragats.wgo.dto.PostResponse> response, Retrofit retrofit) {
 //                System.out.println(response);
 //            }
 //
@@ -191,7 +193,7 @@ public void deletePost(final String did, int offset, final boolean onlyHistory)
     }
 
 
-    public void loadPosts(final String offset, final int count, final boolean reload, boolean fromCache) {
+    public void loadPosts(final String idOffset, final int offset, final int count, final boolean reload, boolean fromCache) {
         if (loadingPosts) {
             return;
         }
@@ -202,10 +204,11 @@ public void loadPosts(final String offset, final int count, final boolean reload
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
             return;
         }
-        PostRequest postRequest = new PostRequest();
+        final PostRequest postRequest = new PostRequest();
         postRequest.setLatitude(location.getLatitude());
         postRequest.setLongitude(location.getLongitude());
         postRequest.setCount(count);
+        postRequest.setIdOffset(idOffset);
         postRequest.setOffset(offset);
         postRequest.setDistance(Constants.RADIUS);
         RestManager.getInstance().findNearPosts(postRequest, new Callback<PostResponse>() {
@@ -217,7 +220,8 @@ public void onResponse(Response<PostResponse> response, Retrofit retrofit) {
 
             @Override
             public void onFailure(Throwable t) {
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.loadPostsError);
+//                NotificationCenter.getInstance().postNotificationName(NotificationCenter.loadPostsError);
+                loadVKPhotos(postRequest, reload);
             }
         });
 
@@ -225,6 +229,29 @@ public void onFailure(Throwable t) {
     }
 
 
+    private void loadVKPhotos(final PostRequest postRequest, final boolean reload) {
+        RestManager.getInstance().findNearVKPhotos(postRequest, new Callback<VKPhotoResponse>() {
+            @Override
+            public void onResponse(Response<VKPhotoResponse> response, Retrofit retrofit) {
+                //        after getting response.
+                PostResponse postResponse = new PostResponse();
+                postResponse.setPosts(vkPhotoResponseConverter.convert(response.body() != null ?
+                        response.body().getResponse() : null));
+                if (postResponse.getPosts() == null) {
+                    postResponse.setPosts(new ArrayList<Post>());
+                }
+
+                processLoadedPosts(postResponse, reload);
+            }
+
+            @Override
+            public void onFailure(Throwable t) {
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.loadPostsError);
+            }
+        });
+    }
+
+
     public void loadPostsMock(final int offset, final int count, boolean reload, boolean fromCache) {
         if (loadingPosts) {
             return;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsStorage.java b/TMessagesProj/src/main/java/org/telegram/android/PostsStorage.java
index 98b228f2b..bf2b634c6 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsStorage.java
@@ -19,7 +19,7 @@
 import org.telegram.messenger.ByteBufferDesc;
 import org.telegram.messenger.DispatchQueue;
 import org.telegram.messenger.FileLog;
-import ru.aragats.wgo.rest.dto.User;
+import ru.aragats.wgo.dto.User;
 
 import java.io.File;
 import java.util.ArrayList;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index b092f0c94..064ee1979 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -11,7 +11,7 @@
 import org.telegram.utils.StringUtils;
 
 import ru.aragats.wgo.ApplicationLoader;
-import ru.aragats.wgo.rest.dto.Coordinates;
+import ru.aragats.wgo.dto.Coordinates;
 
 import java.io.IOException;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index ea104e1ec..7155d4ad4 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -13,7 +13,7 @@
 import android.util.Base64;
 
 import org.telegram.android.PostsStorage;
-import ru.aragats.wgo.rest.dto.User;
+import ru.aragats.wgo.dto.User;
 import ru.aragats.wgo.rest.mock.UserServiceMock;
 
 import java.io.File;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
index acf87cd0c..b8ecda9ae 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
@@ -17,13 +17,12 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.PostsController;
 import org.telegram.android.support.widget.RecyclerView;
-import ru.aragats.wgo.rest.dto.Post;
+import ru.aragats.wgo.dto.Post;
 import org.telegram.ui.Cells.PostCell;
 import org.telegram.ui.Cells.LoadingCell;
 import org.telegram.ui.LocationActivityAragats;
 import org.telegram.ui.PhotoViewer;
 import org.telegram.ui.PostsActivity;
-import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
 // TODO-aragats
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
index 3b56aedf4..94d40e876 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsSearchAdapter.java
@@ -15,8 +15,8 @@
 import org.telegram.android.LocaleController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.android.support.widget.RecyclerView;
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.PostResponse;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.PostResponse;
 import ru.aragats.wgo.rest.mock.PostServiceMock;
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.HashtagSearchCell;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
index 1b1039bfa..d38ba1dfa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
@@ -22,7 +22,7 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
 import org.telegram.messenger.FileLog;
-import ru.aragats.wgo.rest.dto.User;
+import ru.aragats.wgo.dto.User;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.LayoutHelper;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
index 7256b7118..dc8a9ecc1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
@@ -32,9 +32,9 @@
 import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.messenger.FileLog;
 
-import ru.aragats.wgo.rest.dto.Coordinates;
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
+import ru.aragats.wgo.dto.Coordinates;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
 
 import org.telegram.messenger.object.TextLayoutBlock;
 import org.telegram.ui.Components.AvatarDrawable;
@@ -396,6 +396,7 @@ public void buildLayout() {
             if (lastMessageDate != 0) {
                 timeString = LocaleController.stringForMessageListDate(lastMessageDate);
             } else {
+//                timeString = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(new Date(post.getCreatedDate())), LocaleController.formatterDay.format(new Date(post.getCreatedDate())));
                 timeString = LocaleController.stringForMessageListDate(post.getCreatedDate() / 1000);
             }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
index aa405688e..4a5bed206 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
@@ -21,8 +21,8 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ImageReceiver;
 import org.telegram.android.MediaController;
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.RadialProgress;
 import org.telegram.ui.Components.ResourceLoader;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index ff2e5f501..2f5d4288b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -54,8 +54,8 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
 
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.Venue;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.Venue;
 
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 8dc8e2aba..d320a2fdd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -63,7 +63,7 @@
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.Utilities;
 
-import ru.aragats.wgo.rest.dto.Post;
+import ru.aragats.wgo.dto.Post;
 
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 4348d7c6e..de4395ab4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -20,8 +20,6 @@
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.location.Address;
-import android.location.Geocoder;
 import android.location.Location;
 import android.media.ExifInterface;
 import android.net.Uri;
@@ -54,11 +52,10 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
 
-import ru.aragats.wgo.rest.dto.Coordinates;
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.Venue;
-import ru.aragats.wgo.rest.mock.PostServiceMock;
+import ru.aragats.wgo.dto.Coordinates;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.Venue;
 
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
@@ -78,7 +75,6 @@
 import org.telegram.utils.StringUtils;
 
 import java.io.File;
-import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 402d374a7..e427f2534 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -57,7 +57,7 @@
 
 import org.telegram.messenger.FileLog;
 
-import ru.aragats.wgo.rest.dto.Post;
+import ru.aragats.wgo.dto.Post;
 
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
@@ -219,7 +219,7 @@ public boolean onFragmentCreate() {
         LocationManagerHelper.getInstance().runLocationListener();
 
         if (!postsLoaded) {
-            PostsController.getInstance().loadPosts(null, Constants.POST_COUNT, true, true);
+            PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, true);
             ContactsController.getInstance().checkInviteText();
             postsLoaded = true;
         }
@@ -366,7 +366,7 @@ public void onItemClick(int id) {
             public void onRefresh() {
                 // TODO temp test
 //                new RestTask().execute("param");
-                PostsController.getInstance().loadPosts(null, Constants.POST_COUNT, true, true);
+                PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, true);
 
 //                RestManager.getInstance().uploadTest(new PostRequest(), new Callback<PostResponse>() {
 //                    @Override
@@ -578,7 +578,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                 if (visibleItemCount > 0) {
                     if (layoutManager.findLastVisibleItemPosition() == PostsController.getInstance().posts.size() - 1) {
                         String offset = PostsController.getInstance().posts.get(PostsController.getInstance().posts.size() - 1).getId(); // TODO When empty list. java.lang.ArrayIndexOutOfBoundsException: length=12; index=-1
-                        PostsController.getInstance().loadPosts(offset, Constants.POST_COUNT, false, true);
+                        PostsController.getInstance().loadPosts(offset, PostsController.getInstance().posts.size(), Constants.POST_COUNT, false, true);
                     }
                 }
 
@@ -795,7 +795,7 @@ private void refreshPosts(boolean force) {
             if (swipeRefreshLayout != null) {
                 swipeRefreshLayout.setRefreshing(true);
             }
-            PostsController.getInstance().loadPosts(null, Constants.POST_COUNT, true, true);
+            PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, true);
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
index 0f8001f93..c2c1ba8cc 100644
--- a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
+++ b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
@@ -19,7 +19,7 @@
 
     public static int POST_COUNT = 20;
 
-    public static final int RADIUS = 2000; // meters
+    public static final int RADIUS = 800; // meters 8000 for VK
 
 
     public static final String RESTRICTED_AREA = "restricted_area";
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/AbstractConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/AbstractConverter.java
new file mode 100644
index 000000000..9492e31ef
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/AbstractConverter.java
@@ -0,0 +1,49 @@
+package ru.aragats.wgo.converter;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+/**
+ * Created by aragats on 06/02/16.
+ */
+public abstract class AbstractConverter<S, T> {
+    public AbstractConverter() {
+
+    }
+
+
+    public T convert(S source) {
+        if (source == null) {
+            return null;
+        }
+        return convertIntern(source);
+    }
+
+    public abstract T convertIntern(S source);
+
+    public List<T> convert(List<S> sources) {
+        if (sources == null || sources.isEmpty()) {
+            return new ArrayList<>();
+        }
+        List<T> result = new ArrayList<>();
+        for (S src : sources) {
+            if (src != null) {
+                result.add(convert(src));
+            }
+        }
+        return result;
+
+//        return sources.stream().
+//                filter(source -> source != null).
+//                map(this::convert).
+//                collect(Collectors.toList());
+    }
+
+    public List<T> convert(S[] sources) {
+        if (sources == null || sources.length == 0) {
+            return new ArrayList<>();
+        }
+        return convert(Arrays.asList(sources));
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/BiAbstractConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/BiAbstractConverter.java
new file mode 100644
index 000000000..5e2fb14b1
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/BiAbstractConverter.java
@@ -0,0 +1,35 @@
+package ru.aragats.wgo.converter;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by aragats on 06/02/16.
+ */
+public abstract class BiAbstractConverter<S, T> extends AbstractConverter<S, T> {
+
+
+    public S inverseConvert(T target) {
+        if (target == null) {
+            return null;
+        }
+        return inverseConvertIntern(target);
+    }
+
+    public abstract S inverseConvertIntern(T target);
+
+
+    public List<S> inverseConvert(List<T> targets) {
+        List<S> result = new ArrayList<>();
+        for (T target: targets) {
+            if(target != null) {
+                result.add(inverseConvert(target));
+            }
+        }
+        return result;
+//        return targets.stream().
+//                filter(source -> source != null).
+//                map(this::inverseConvert).
+//                collect(Collectors.toList());
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/PhotoItemToPostConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/PhotoItemToPostConverter.java
new file mode 100644
index 000000000..9588b6f70
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/PhotoItemToPostConverter.java
@@ -0,0 +1,54 @@
+package ru.aragats.wgo.converter.vk;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import ru.aragats.wgo.converter.AbstractConverter;
+import ru.aragats.wgo.dto.Coordinates;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.Venue;
+import ru.aragats.wgo.dto.vk.PhotoItem;
+
+/**
+ * Created by aragats on 06/02/16.
+ */
+public class PhotoItemToPostConverter extends AbstractConverter<PhotoItem, Post> {
+    @Override
+    public Post convertIntern(PhotoItem source) {
+        Post result = new Post();
+        result.setId("" + source.getId());
+        result.setCreatedDate(( (long)source.getDate() * 1000));
+        Coordinates coordinates = new Coordinates();
+        coordinates.setType("Point");
+        coordinates.setCoordinates(Arrays.asList(source.getLong(), source.getLat()));
+        result.setCoordinates(coordinates);
+        result.setText(source.getText());
+        Venue venue = new Venue();
+        venue.setCoordinates(coordinates);
+        venue.setName("");
+        venue.setAddress("");
+        result.setVenue(venue);
+
+        List<Image> images = new ArrayList<>();
+        Image previewImage = new Image();
+        previewImage.setHeight(source.getHeight());
+        previewImage.setWidth(source.getWidth());
+        previewImage.setUrl(source.getPhoto604());
+        images.add(previewImage);
+
+
+        Image image = new Image();
+        image.setHeight(source.getHeight());
+        image.setWidth(source.getWidth());
+        image.setUrl(source.getPhoto1280());
+        images.add(image);
+
+
+        result.setImages(images);
+
+
+        return result;
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/VKPhotoResponseToPostListConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/VKPhotoResponseToPostListConverter.java
new file mode 100644
index 000000000..c099f9c8f
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/VKPhotoResponseToPostListConverter.java
@@ -0,0 +1,30 @@
+package ru.aragats.wgo.converter.vk;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import ru.aragats.wgo.converter.AbstractConverter;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.vk.PhotoItem;
+import ru.aragats.wgo.dto.vk.PhotoResponse;
+
+/**
+ * Created by aragats on 06/02/16.
+ */
+public class VKPhotoResponseToPostListConverter extends AbstractConverter<PhotoResponse, List<Post>> {
+
+    private PhotoItemToPostConverter photoItemToPostConverter = new PhotoItemToPostConverter();
+
+    @Override
+    public List<Post> convertIntern(PhotoResponse source) {
+        List<Post> result = new ArrayList<>();
+        if (source.getCount() == 0) {
+            return result;
+        }
+        for (PhotoItem photoItem : source.getItems()) {
+            result.add(photoItemToPostConverter.convert(photoItem));
+        }
+        return result;
+
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Config.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Config.java
similarity index 75%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Config.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/Config.java
index a86d54d6b..f38eb6c10 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Config.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Config.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 /**
  * Created by aragats on 29/12/14.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Coordinates.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Coordinates.java
similarity index 94%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Coordinates.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/Coordinates.java
index 940861852..17d654067 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Coordinates.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Coordinates.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/FileUploadRequest.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/FileUploadRequest.java
similarity index 95%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/FileUploadRequest.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/FileUploadRequest.java
index 97c2efce6..af4a7ecd6 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/FileUploadRequest.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/FileUploadRequest.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 /**
  * Created by aragats on 12/12/15.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Image.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Image.java
similarity index 97%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Image.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/Image.java
index f9dc9ec1b..44bee6d66 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Image.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Image.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 import android.graphics.Bitmap;
 
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Post.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
similarity index 98%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Post.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
index 1c227d643..ff1784fd4 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Post.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 
 import org.telegram.utils.CollectionUtils;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/PostRequest.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java
similarity index 95%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/PostRequest.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java
index 2d8bdae70..2e6fea773 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/PostRequest.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 /**
  * Created by aragats on 05/12/15.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/PostResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java
similarity index 93%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/PostResponse.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java
index 50d09d2ac..f348c1466 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/PostResponse.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Request.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Request.java
new file mode 100644
index 000000000..89bd15209
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Request.java
@@ -0,0 +1,35 @@
+package ru.aragats.wgo.dto;
+
+/**
+ * Created by aragats on 05/12/15.
+ */
+public class Request {
+
+    private int offset;
+    private String idOffset;
+    private int count;
+
+    public int getOffset() {
+        return offset;
+    }
+
+    public void setOffset(int offset) {
+        this.offset = offset;
+    }
+
+    public String getIdOffset() {
+        return idOffset;
+    }
+
+    public void setIdOffset(String idOffset) {
+        this.idOffset = idOffset;
+    }
+
+    public int getCount() {
+        return count;
+    }
+
+    public void setCount(int count) {
+        this.count = count;
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/User.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/User.java
similarity index 95%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/User.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/User.java
index e06ace753..b18d184a6 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/User.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/User.java
@@ -1,6 +1,6 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
-import ru.aragats.wgo.rest.dto.Image;
+import ru.aragats.wgo.dto.Image;
 
 /**
  * Created by aragats on 09/05/15.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Venue.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java
similarity index 97%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Venue.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java
index 58ee8d8d5..c9defd44a 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Venue.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 /**
  * Created by aragats on 09/05/15.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/VenuePostsRequest.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/VenuePostsRequest.java
similarity index 89%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/VenuePostsRequest.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/VenuePostsRequest.java
index 66253187b..087099bcd 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/VenuePostsRequest.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/VenuePostsRequest.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 /**
  * Created by aragats on 12/12/15.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/VenueResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/VenueResponse.java
similarity index 90%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/VenueResponse.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/VenueResponse.java
index 5750d27f7..8a748203f 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/VenueResponse.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/VenueResponse.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.rest.dto;
+package ru.aragats.wgo.dto;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoItem.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoItem.java
new file mode 100755
index 000000000..07da5241b
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoItem.java
@@ -0,0 +1,346 @@
+
+package ru.aragats.wgo.dto.vk;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class PhotoItem {
+
+    @SerializedName("id")
+    @Expose
+    private Integer id;
+    @SerializedName("album_id")
+    @Expose
+    private Integer albumId;
+    @SerializedName("owner_id")
+    @Expose
+    private Integer ownerId;
+    @SerializedName("photo_75")
+    @Expose
+    private String photo75;
+    @SerializedName("photo_130")
+    @Expose
+    private String photo130;
+    @SerializedName("photo_604")
+    @Expose
+    private String photo604;
+    @SerializedName("photo_807")
+    @Expose
+    private String photo807;
+    @SerializedName("photo_1280")
+    @Expose
+    private String photo1280;
+    @SerializedName("width")
+    @Expose
+    private Integer width;
+    @SerializedName("height")
+    @Expose
+    private Integer height;
+    @SerializedName("text")
+    @Expose
+    private String text;
+    @SerializedName("date")
+    @Expose
+    private Integer date;
+    @SerializedName("lat")
+    @Expose
+    private Double lat;
+    @SerializedName("long")
+    @Expose
+    private Double _long;
+    @SerializedName("post_id")
+    @Expose
+    private Integer postId;
+    @SerializedName("photo_2560")
+    @Expose
+    private String photo2560;
+
+    /**
+     * 
+     * @return
+     *     The id
+     */
+    public Integer getId() {
+        return id;
+    }
+
+    /**
+     * 
+     * @param id
+     *     The id
+     */
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    /**
+     * 
+     * @return
+     *     The albumId
+     */
+    public Integer getAlbumId() {
+        return albumId;
+    }
+
+    /**
+     * 
+     * @param albumId
+     *     The album_id
+     */
+    public void setAlbumId(Integer albumId) {
+        this.albumId = albumId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The ownerId
+     */
+    public Integer getOwnerId() {
+        return ownerId;
+    }
+
+    /**
+     * 
+     * @param ownerId
+     *     The owner_id
+     */
+    public void setOwnerId(Integer ownerId) {
+        this.ownerId = ownerId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo75
+     */
+    public String getPhoto75() {
+        return photo75;
+    }
+
+    /**
+     * 
+     * @param photo75
+     *     The photo_75
+     */
+    public void setPhoto75(String photo75) {
+        this.photo75 = photo75;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo130
+     */
+    public String getPhoto130() {
+        return photo130;
+    }
+
+    /**
+     * 
+     * @param photo130
+     *     The photo_130
+     */
+    public void setPhoto130(String photo130) {
+        this.photo130 = photo130;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo604
+     */
+    public String getPhoto604() {
+        return photo604;
+    }
+
+    /**
+     * 
+     * @param photo604
+     *     The photo_604
+     */
+    public void setPhoto604(String photo604) {
+        this.photo604 = photo604;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo807
+     */
+    public String getPhoto807() {
+        return photo807;
+    }
+
+    /**
+     * 
+     * @param photo807
+     *     The photo_807
+     */
+    public void setPhoto807(String photo807) {
+        this.photo807 = photo807;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo1280
+     */
+    public String getPhoto1280() {
+        return photo1280;
+    }
+
+    /**
+     * 
+     * @param photo1280
+     *     The photo_1280
+     */
+    public void setPhoto1280(String photo1280) {
+        this.photo1280 = photo1280;
+    }
+
+    /**
+     * 
+     * @return
+     *     The width
+     */
+    public Integer getWidth() {
+        return width;
+    }
+
+    /**
+     * 
+     * @param width
+     *     The width
+     */
+    public void setWidth(Integer width) {
+        this.width = width;
+    }
+
+    /**
+     * 
+     * @return
+     *     The height
+     */
+    public Integer getHeight() {
+        return height;
+    }
+
+    /**
+     * 
+     * @param height
+     *     The height
+     */
+    public void setHeight(Integer height) {
+        this.height = height;
+    }
+
+    /**
+     * 
+     * @return
+     *     The text
+     */
+    public String getText() {
+        return text;
+    }
+
+    /**
+     * 
+     * @param text
+     *     The text
+     */
+    public void setText(String text) {
+        this.text = text;
+    }
+
+    /**
+     * 
+     * @return
+     *     The date
+     */
+    public Integer getDate() {
+        return date;
+    }
+
+    /**
+     * 
+     * @param date
+     *     The date
+     */
+    public void setDate(Integer date) {
+        this.date = date;
+    }
+
+    /**
+     * 
+     * @return
+     *     The lat
+     */
+    public Double getLat() {
+        return lat;
+    }
+
+    /**
+     * 
+     * @param lat
+     *     The lat
+     */
+    public void setLat(Double lat) {
+        this.lat = lat;
+    }
+
+    /**
+     * 
+     * @return
+     *     The _long
+     */
+    public Double getLong() {
+        return _long;
+    }
+
+    /**
+     * 
+     * @param _long
+     *     The long
+     */
+    public void setLong(Double _long) {
+        this._long = _long;
+    }
+
+    /**
+     * 
+     * @return
+     *     The postId
+     */
+    public Integer getPostId() {
+        return postId;
+    }
+
+    /**
+     * 
+     * @param postId
+     *     The post_id
+     */
+    public void setPostId(Integer postId) {
+        this.postId = postId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo2560
+     */
+    public String getPhoto2560() {
+        return photo2560;
+    }
+
+    /**
+     * 
+     * @param photo2560
+     *     The photo_2560
+     */
+    public void setPhoto2560(String photo2560) {
+        this.photo2560 = photo2560;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoResponse.java
new file mode 100755
index 000000000..4316d59f7
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoResponse.java
@@ -0,0 +1,54 @@
+
+package ru.aragats.wgo.dto.vk;
+
+import java.util.ArrayList;
+import java.util.List;
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class PhotoResponse {
+
+    @SerializedName("count")
+    @Expose
+    private Integer count;
+    @SerializedName("items")
+    @Expose
+    private List<PhotoItem> items = new ArrayList<PhotoItem>();
+
+    /**
+     * 
+     * @return
+     *     The count
+     */
+    public Integer getCount() {
+        return count;
+    }
+
+    /**
+     * 
+     * @param count
+     *     The count
+     */
+    public void setCount(Integer count) {
+        this.count = count;
+    }
+
+    /**
+     * 
+     * @return
+     *     The items
+     */
+    public List<PhotoItem> getItems() {
+        return items;
+    }
+
+    /**
+     * 
+     * @param items
+     *     The items
+     */
+    public void setItems(List<PhotoItem> items) {
+        this.items = items;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/VKPhotoResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/VKPhotoResponse.java
new file mode 100755
index 000000000..31481529b
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/VKPhotoResponse.java
@@ -0,0 +1,31 @@
+
+package ru.aragats.wgo.dto.vk;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class VKPhotoResponse {
+
+    @SerializedName("response")
+    @Expose
+    private PhotoResponse response;
+
+    /**
+     * 
+     * @return
+     *     The response
+     */
+    public PhotoResponse getResponse() {
+        return response;
+    }
+
+    /**
+     * 
+     * @param response
+     *     The response
+     */
+    public void setResponse(PhotoResponse response) {
+        this.response = response;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java
new file mode 100644
index 000000000..16238c740
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java
@@ -0,0 +1,50 @@
+package ru.aragats.wgo.rest.client;
+
+import retrofit.GsonConverterFactory;
+import retrofit.Retrofit;
+import ru.aragats.wgo.rest.service.VKService;
+
+/**
+ * Created by aragats on 05/12/15.
+ */
+public class VKRestClient {
+    private static final String BASE_URL = "https://api.vk.com/";
+    //    private static final String BASE_URL = "http://aragatss-macbook-pro.local:8080/";
+    private VKService restService;
+
+
+    private static volatile VKRestClient Instance = null;
+
+    public static VKRestClient getInstance() {
+        VKRestClient localInstance = Instance;
+        if (localInstance == null) {
+            synchronized (VKRestClient.class) {
+                localInstance = Instance;
+                if (localInstance == null) {
+                    Instance = localInstance = new VKRestClient();
+                }
+            }
+        }
+        return localInstance;
+    }
+
+
+    private VKRestClient() {
+//        Gson gson = new GsonBuilder()
+//                .setDateFormat("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'SSS'Z'")
+//                .create();
+//        restAdapter.setConverter(new GsonConverter(gson))
+        Retrofit restAdapter = new Retrofit.Builder()
+                .baseUrl(BASE_URL)
+                .addConverterFactory(GsonConverterFactory.create())
+                .build();
+
+        restService = restAdapter.create(VKService.class);
+    }
+
+    public VKService getRestService() {
+        return restService;
+    }
+
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java
index 361816f66..2cad53281 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java
@@ -7,8 +7,8 @@
 import retrofit.GsonConverterFactory;
 import retrofit.Response;
 import retrofit.Retrofit;
-import ru.aragats.wgo.rest.dto.PostResponse;
-import ru.aragats.wgo.rest.dto.Request;
+import ru.aragats.wgo.dto.PostResponse;
+import ru.aragats.wgo.dto.Request;
 import ru.aragats.wgo.rest.service.WGOService;
 
 /**
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Request.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Request.java
deleted file mode 100644
index e9612e173..000000000
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/dto/Request.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package ru.aragats.wgo.rest.dto;
-
-/**
- * Created by aragats on 05/12/15.
- */
-public class Request {
-
-    private String offset;
-    private int count;
-
-    public String getOffset() {
-        return offset;
-    }
-
-    public void setOffset(String offset) {
-        this.offset = offset;
-    }
-
-    public int getCount() {
-        return count;
-    }
-
-    public void setCount(int count) {
-        this.count = count;
-    }
-}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
index 868714a5a..a658494a8 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
@@ -10,12 +10,14 @@
 import retrofit.Call;
 import retrofit.Callback;
 import ru.aragats.wgo.rest.client.RestClient;
-import ru.aragats.wgo.rest.dto.FileUploadRequest;
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.PostRequest;
-import ru.aragats.wgo.rest.dto.PostResponse;
-import ru.aragats.wgo.rest.dto.VenuePostsRequest;
+import ru.aragats.wgo.rest.client.VKRestClient;
+import ru.aragats.wgo.dto.FileUploadRequest;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.PostRequest;
+import ru.aragats.wgo.dto.PostResponse;
+import ru.aragats.wgo.dto.VenuePostsRequest;
+import ru.aragats.wgo.dto.vk.VKPhotoResponse;
 
 /**
  * Created by aragats on 05/12/15.
@@ -23,6 +25,7 @@
 public class RestManager {
     private static volatile RestManager Instance = null;
     private static volatile RestClient restClient;
+    private static volatile VKRestClient vkRestClient;
 
     public static RestManager getInstance() {
         RestManager localInstance = Instance;
@@ -40,6 +43,7 @@ public static RestManager getInstance() {
 
     private RestManager() {
         restClient = RestClient.getInstance();
+        vkRestClient = VKRestClient.getInstance();
     }
 
 
@@ -49,7 +53,7 @@ public void findNearPosts(PostRequest request, Callback<PostResponse> callback)
 
     private Call<PostResponse> findNearPostsCall(PostRequest request) {
         return restClient.getRestService().findNearPosts(request.getLongitude(), request.getLatitude(),
-                request.getDistance(), request.getOffset(), request.getCount());
+                request.getDistance(), request.getIdOffset(), request.getCount());
     }
 
 
@@ -78,7 +82,7 @@ public void findPostsAtVenue(VenuePostsRequest request, Callback<PostResponse> c
     }
 
     private Call<PostResponse> findPostsAtVenueCall(VenuePostsRequest request) {
-        return restClient.getRestService().findPostsAtVenue(request.getVenueId(), request.getOffset(), request.getCount());
+        return restClient.getRestService().findPostsAtVenue(request.getVenueId(), request.getIdOffset(), request.getCount());
     }
 
     // savePost
@@ -134,9 +138,16 @@ public void addTest(PostRequest request, Callback<PostResponse> callback) {
     }
 
 
-
 //    http://192.168.0.100:8080/api/posts/find/near?lng=11.22&lat=23.15&distance=1000&offset=sad&count=20
 //    http://192.168.0.100:8080/api/posts/find/near?lng=13.0116908&lat=52.3898987&distance=1000&count=20.0&offset=sds
 
 
+    public void findNearVKPhotos(PostRequest request, Callback<VKPhotoResponse> callback) {
+        findNearVKPhotos(request).enqueue(callback);
+    }
+
+    private Call<VKPhotoResponse> findNearVKPhotos(PostRequest request) {
+        return vkRestClient.getRestService().findNearPhotos(request.getLongitude(), request.getLatitude(),
+                request.getDistance(), request.getOffset(), request.getCount(), 5.44);
+    }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java
index ca8aedb1c..2df9ce684 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/CoordinatesServiceMock.java
@@ -1,6 +1,6 @@
 package ru.aragats.wgo.rest.mock;
 
-import ru.aragats.wgo.rest.dto.Coordinates;
+import ru.aragats.wgo.dto.Coordinates;
 
 import java.util.ArrayList;
 import java.util.Arrays;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/ImageServiceMock.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/ImageServiceMock.java
index 7dcffdc68..7ec590569 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/ImageServiceMock.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/ImageServiceMock.java
@@ -1,6 +1,6 @@
 package ru.aragats.wgo.rest.mock;
 
-import ru.aragats.wgo.rest.dto.Image;
+import ru.aragats.wgo.dto.Image;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/PostServiceMock.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/PostServiceMock.java
index bacaa172f..f383c8443 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/PostServiceMock.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/PostServiceMock.java
@@ -1,8 +1,8 @@
 package ru.aragats.wgo.rest.mock;
 
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.PostResponse;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.PostResponse;
 import org.telegram.utils.StringUtils;
 
 import java.util.ArrayList;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/UserServiceMock.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/UserServiceMock.java
index 86993d657..86f63c00e 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/UserServiceMock.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/UserServiceMock.java
@@ -1,7 +1,7 @@
 package ru.aragats.wgo.rest.mock;
 
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.User;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.User;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/VenueServiceMock.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/VenueServiceMock.java
index b08db73e6..157f282c7 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/VenueServiceMock.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/mock/VenueServiceMock.java
@@ -1,8 +1,8 @@
 package ru.aragats.wgo.rest.mock;
 
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Venue;
-import ru.aragats.wgo.rest.dto.VenueResponse;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Venue;
+import ru.aragats.wgo.dto.VenueResponse;
 import org.telegram.utils.StringUtils;
 
 import java.util.ArrayList;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java
index 171499207..044848d60 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java
@@ -7,15 +7,12 @@
 import retrofit.Call;
 import retrofit.http.Body;
 import retrofit.http.GET;
-import retrofit.http.Multipart;
 import retrofit.http.POST;
-import retrofit.http.PUT;
-import retrofit.http.Part;
 import retrofit.http.Path;
 import retrofit.http.Query;
-import ru.aragats.wgo.rest.dto.Image;
-import ru.aragats.wgo.rest.dto.Post;
-import ru.aragats.wgo.rest.dto.PostResponse;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.PostResponse;
 
 /**
  * Created by aragats on 05/12/15.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
new file mode 100644
index 000000000..a80b43b96
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
@@ -0,0 +1,20 @@
+package ru.aragats.wgo.rest.service;
+
+import retrofit.Call;
+import retrofit.http.GET;
+import retrofit.http.Query;
+import ru.aragats.wgo.dto.vk.VKPhotoResponse;
+
+/**
+ * Created by aragats on 05/12/15.
+ */
+public interface VKService {
+
+
+    @GET("/method/photos.search")
+    Call<VKPhotoResponse> findNearPhotos(@Query("long") double longitude, @Query("lat") double latitude,
+                                         @Query("radius") int radius, @Query("offset") int offset, @Query("count") int count,
+                                         @Query("v") double version);
+
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java
index 16efff16c..996b12e3f 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java
@@ -1,11 +1,9 @@
 package ru.aragats.wgo.rest.service;
 
 import retrofit.Call;
-import retrofit.Callback;
-import retrofit.http.Body;
 import retrofit.http.GET;
-import ru.aragats.wgo.rest.dto.PostResponse;
-import ru.aragats.wgo.rest.dto.Request;
+import ru.aragats.wgo.dto.PostResponse;
+import ru.aragats.wgo.dto.Request;
 
 /**
  * Created by aragats on 05/12/15.
diff --git a/build.gradle b/build.gradle
index 495c5038e..f38e6a5ae 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1 +1,2 @@
+
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
diff --git a/settings.gradle b/settings.gradle
index 867a4183d..49bcfd9bc 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1 +1,2 @@
 include ':TMessagesProj'
+//include ':vksdk_library', ':TMessagesProj'
\ No newline at end of file
