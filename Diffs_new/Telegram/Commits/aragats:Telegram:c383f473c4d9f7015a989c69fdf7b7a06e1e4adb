diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 1e496c026..1a95fa73c 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -39,6 +39,7 @@
 import ru.aragats.wgo.ApplicationLoader;
 import ru.aragats.wgo.comparator.PostDateComparator;
 import ru.aragats.wgo.comparator.PostDistanceComparator;
+import ru.aragats.wgo.converter.vk.newsfeed.ProfileToPostAssigner;
 import ru.aragats.wgo.converter.vk.newsfeed.VKNewsFeedResponseToPostListConverter;
 import ru.aragats.wgo.converter.vk.photos.VKPhotoResponseToPostListConverter;
 import ru.aragats.wgo.dto.Coordinates;
@@ -74,6 +75,7 @@
 
     private boolean loadingPosts = false;
 
+    private ProfileToPostAssigner profileToPostAssigner = new ProfileToPostAssigner();
 
     public int fontSize = AndroidUtilities.dp(16);
 
@@ -391,6 +393,7 @@ private void loadVKNewsFeed(final PostRequest postRequest, final boolean reload)
         //round lat and longitude
         postRequest.setLatitude(Math.round(postRequest.getLatitude() * 10000000000.0) / 10000000000.0);
         postRequest.setLongitude(Math.round(postRequest.getLongitude() * 10000000000.0) / 10000000000.0);
+        postRequest.setExtended(1);
         final Call<VKNewsFeedResponse> call = RestManager.getInstance().findNearVKNewsFeed(postRequest, new Callback<VKNewsFeedResponse>() {
             @Override
             public void onResponse(Call<VKNewsFeedResponse> call, Response<VKNewsFeedResponse> response) {
@@ -400,6 +403,12 @@ public void onResponse(Call<VKNewsFeedResponse> call, Response<VKNewsFeedRespons
                 List<Post> posts = vkNewsFeedResponseToPostListConverter.convert(vkNewsFeedResponse != null ?
                         vkNewsFeedResponse.getResponse() : null);
 //                posts = filterVKPostsByLikes(posts);
+                if (!CollectionUtils.isEmpty(posts)
+                        && (vkNewsFeedResponse != null ? vkNewsFeedResponse.getResponse() : null) != null
+                        && !CollectionUtils.isEmpty(vkNewsFeedResponse.getResponse().getProfiles())) {
+                    profileToPostAssigner.assign(posts, vkNewsFeedResponse.getResponse().getProfiles());
+
+                }
 
                 PostResponse postResponse = new PostResponse();
                 postResponse.setPosts(posts);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
index 89dd60163..8f4c3148a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
@@ -11,7 +11,9 @@
 import android.Manifest;
 import android.app.Activity;
 import android.content.Context;
+import android.content.Intent;
 import android.content.pm.PackageManager;
+import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
 import android.view.View;
@@ -23,6 +25,7 @@
 
 import ru.aragats.wgo.dto.Post;
 
+import org.telegram.messenger.FileLog;
 import org.telegram.ui.Cells.EmptyCell;
 import org.telegram.ui.Cells.PostCell;
 import org.telegram.ui.Cells.LoadingCell;
@@ -149,6 +152,15 @@ public void didClickedVenue(PostCell cell) {
 
                 @Override
                 public void didPressUrl(String url) {
+                    if (StringUtils.isEmpty(url)) {
+                        return;
+                    }
+                    try {
+                        Intent pickIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
+                        postsActivity.startActivityForResult(pickIntent, 500);
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
 //                    if (url.startsWith("@")) {
 //                        openProfileWithUsername(url.substring(1));
 //                    } else if (url.startsWith("#")) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
index ad5c84a62..9543631d2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
@@ -10,12 +10,14 @@
 
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.Intent;
 import android.database.Cursor;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.drawable.Drawable;
 import android.location.Location;
+import android.net.Uri;
 import android.os.Build;
 import android.provider.MediaStore;
 import android.text.Layout;
@@ -71,9 +73,18 @@
         public abstract boolean canPerformActions();
     }
 
-    private boolean imagePressed;
-    private boolean venuePressed;
-    private boolean textPressed;
+    private enum ClickedArea {
+        IMAGE,
+        AVATAR,
+        TEXT,
+        VENUE
+    }
+
+//    private boolean imagePressed;
+//    private boolean venuePressed;
+//    private boolean textPressed;
+
+    private ClickedArea clickedArea = null;
     //Paint. set fond size for them
     private static TextPaint namePaint;
     private static TextPaint addressPaint;
@@ -308,21 +319,19 @@ public boolean onTouchEvent(MotionEvent event) {
             if (delegate == null || delegate.canPerformActions()) {
 
                 if (x >= photoImage.getImageX() && x <= photoImage.getImageX() + backgroundWidth && y >= photoImage.getImageY() && y <= photoImage.getImageY() + photoImage.getImageHeight()) {
-                    imagePressed = true;
-                    venuePressed = false;
-                    textPressed = false;
+                    clickedArea = ClickedArea.IMAGE;
                     result = true;
                     // click on part upper to image // address, name of the place and venue photo.
-                } else if (x >= 0 && x <= getMeasuredWidth() && y >= 0 && y < photoImage.getImageY()) {
-                    venuePressed = true;
-                    imagePressed = false;
-                    textPressed = false;
+                } else if (x >= avatarImage.getImageX() && x <= avatarImage.getImageX() + avatarSize && y >= avatarImage.getImageY() && y < avatarImage.getImageY() + avatarSize) {
+                    clickedArea = ClickedArea.AVATAR;
+                    result = true;
+                } else if (x >= avatarImage.getImageX() + avatarSize && x <= getMeasuredWidth() && y >= avatarImage.getImageY() && y < photoImage.getImageY()) {
+                    clickedArea = ClickedArea.VENUE;
                     result = true;
                 } else {
                     // press link in text
-                    venuePressed = false;
-                    imagePressed = false;
-                    result = handleTextDownClick(x, y);
+//                    clickedArea = ClickedArea.TEXT;
+                    handleTextDownClick(x, y);
                 }
 //                photoImage.setImageCoords(0, avatarTop + AndroidUtilities.dp(62), photoWidth, photoHeight);
 
@@ -346,15 +355,25 @@ public boolean onTouchEvent(MotionEvent event) {
 
         } else if (event.getAction() == MotionEvent.ACTION_UP) {
             playSoundEffect(SoundEffectConstants.CLICK);
-            if (imagePressed) {
-                imagePressed = false;
-                didClickedImage();
-            } else if (venuePressed) {
-                venuePressed = false;
-                didClickedVenue();
-            } else if (textPressed) {
-                textPressed = false;
-                didClickedText();
+            if (clickedArea != null) {
+                switch (clickedArea) {
+                    case IMAGE:
+                        clickedArea = null;
+                        didClickedImage();
+                        break;
+                    case VENUE:
+                        clickedArea = null;
+                        didClickedVenue();
+                        break;
+                    case AVATAR:
+                        clickedArea = null;
+                        didClickedAvatar();
+                        break;
+                    case TEXT:
+                        clickedArea = null;
+                        didClickedText();
+                        break;
+                }
             }
             invalidate();
         } else if (event.getAction() == MotionEvent.ACTION_CANCEL) {
@@ -1087,6 +1106,15 @@ private void didClickedVenue() {
         }
     }
 
+    private void didClickedAvatar() {
+        if (post.getVenue() != null) {
+            String url = post.getVenue().getUrl();
+            if (delegate != null && !StringUtils.isEmpty(url)) {
+                delegate.didPressUrl(url);
+            }
+        }
+    }
+
     private boolean didClickedText() {
         boolean result = false;
         if (pressedLink != null) {
@@ -1142,7 +1170,7 @@ private boolean handleTextDownClick(float x, float y) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                        textPressed = true;
+                        clickedArea = ClickedArea.TEXT;
                         result = true;
 
                     } else {
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java
index 2e2c3c9af..525033d8f 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java
@@ -54,6 +54,7 @@ public Post convertIntern(NewsFeedItem source) {
         if (source.getLikes() != null) {
             result.setLikes(source.getLikes().getCount());
         }
+        result.setOwnerId(source.getOwnerId());
 
 
         return result;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/ProfileToPostAssigner.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/ProfileToPostAssigner.java
new file mode 100644
index 000000000..670571468
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/ProfileToPostAssigner.java
@@ -0,0 +1,37 @@
+package ru.aragats.wgo.converter.vk.newsfeed;
+
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.Venue;
+import ru.aragats.wgo.dto.vk.newsfeed.Profile;
+
+/**
+ * Created by aragats on 12/06/16.
+ */
+public class ProfileToPostAssigner {
+
+    public void assign(List<Post> posts, List<Profile> profiles) {
+        Map<Integer, Profile> profilesMap = new HashMap<>();
+        for (Profile profile : profiles) {
+            profilesMap.put(profile.getId(), profile);
+        }
+        for (Post post : posts) {
+            Integer ownerId = post.getOwnerId();
+            Profile profile = profilesMap.get(ownerId);
+            Venue venue = post.getVenue();
+            if (profile != null && venue != null) {
+                venue.setName(profile.getFirstName() + " " + profile.getLastName());
+                Image image = new Image();
+                image.setUrl(profile.getPhoto100());
+                venue.setIcon(image);
+                venue.setUrl("https://vk.com/" + profile.getScreenName());
+            }
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
index 34c02b1a1..d5f4c926d 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
@@ -26,6 +26,7 @@ public Post convertIntern(PhotoItem source) {
         }
         Post result = new Post();
         result.setId("" + source.getId());
+        result.setOwnerId(source.getOwnerId());
         result.setCreatedDate(((long) source.getDate() * 1000));
         Coordinates coordinates = new Coordinates();
         coordinates.setType("Point");
@@ -36,6 +37,7 @@ public Post convertIntern(PhotoItem source) {
         venue.setCoordinates(coordinates);
         venue.setName("VK");
         venue.setAddress("");
+        venue.setUrl("https://vk.com/id" + source.getOwnerId());
         result.setVenue(venue);
 
         List<Image> images = new ArrayList<>();
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
index e5d7db183..a73aa68a6 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
@@ -23,6 +23,7 @@
     private transient float distance;
     private transient boolean local;
     private transient int likes;
+    private transient int ownerId;
 
 
     public Post() {
@@ -143,4 +144,12 @@ public int getLikes() {
     public void setLikes(int likes) {
         this.likes = likes;
     }
+
+    public int getOwnerId() {
+        return ownerId;
+    }
+
+    public void setOwnerId(int ownerId) {
+        this.ownerId = ownerId;
+    }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java
index 2e6fea773..add172eb6 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostRequest.java
@@ -8,6 +8,7 @@
     private double longitude;
     private double latitude;
     private int distance;
+    private int extended;
 
     public double getLongitude() {
         return longitude;
@@ -32,6 +33,14 @@ public int getDistance() {
     public void setDistance(int distance) {
         this.distance = distance;
     }
+
+    public int getExtended() {
+        return extended;
+    }
+
+    public void setExtended(int extended) {
+        this.extended = extended;
+    }
 }
 
 
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java
index 4f0bda1d0..74e28e1a9 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Venue.java
@@ -17,6 +17,8 @@
     // distance in meters; Transient.
     private int distance;
 
+    private transient String url;
+
     public String getId() {
         return id;
     }
@@ -72,4 +74,12 @@ public Image getIcon() {
     public void setIcon(Image icon) {
         this.icon = icon;
     }
+
+    public String getUrl() {
+        return url;
+    }
+
+    public void setUrl(String url) {
+        this.url = url;
+    }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java
index ed13d633f..32a0df8c8 100755
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java
@@ -12,6 +12,9 @@
     @SerializedName("items")
     @Expose
     private List<NewsFeedItem> items = new ArrayList<NewsFeedItem>();
+    @SerializedName("profiles")
+    @Expose
+    private List<Profile> profiles = new ArrayList<Profile>();
     @SerializedName("count")
     @Expose
     private int count;
@@ -94,4 +97,12 @@ public void setNextFrom(String nextFrom) {
         this.nextFrom = nextFrom;
     }
 
+
+    public List<Profile> getProfiles() {
+        return profiles;
+    }
+
+    public void setProfiles(List<Profile> profiles) {
+        this.profiles = profiles;
+    }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Profile.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Profile.java
new file mode 100755
index 000000000..17d629c1f
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Profile.java
@@ -0,0 +1,220 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Profile {
+
+    @SerializedName("id")
+    @Expose
+    private Integer id;
+    @SerializedName("first_name")
+    @Expose
+    private String firstName;
+    @SerializedName("last_name")
+    @Expose
+    private String lastName;
+    @SerializedName("sex")
+    @Expose
+    private Integer sex;
+    @SerializedName("screen_name")
+    @Expose
+    private String screenName;
+    @SerializedName("photo_50")
+    @Expose
+    private String photo50;
+    @SerializedName("photo_100")
+    @Expose
+    private String photo100;
+    @SerializedName("online")
+    @Expose
+    private Integer online;
+    @SerializedName("online_app")
+    @Expose
+    private String onlineApp;
+    @SerializedName("online_mobile")
+    @Expose
+    private Integer onlineMobile;
+
+    /**
+     * 
+     * @return
+     *     The id
+     */
+    public Integer getId() {
+        return id;
+    }
+
+    /**
+     * 
+     * @param id
+     *     The id
+     */
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    /**
+     * 
+     * @return
+     *     The firstName
+     */
+    public String getFirstName() {
+        return firstName;
+    }
+
+    /**
+     * 
+     * @param firstName
+     *     The first_name
+     */
+    public void setFirstName(String firstName) {
+        this.firstName = firstName;
+    }
+
+    /**
+     * 
+     * @return
+     *     The lastName
+     */
+    public String getLastName() {
+        return lastName;
+    }
+
+    /**
+     * 
+     * @param lastName
+     *     The last_name
+     */
+    public void setLastName(String lastName) {
+        this.lastName = lastName;
+    }
+
+    /**
+     * 
+     * @return
+     *     The sex
+     */
+    public Integer getSex() {
+        return sex;
+    }
+
+    /**
+     * 
+     * @param sex
+     *     The sex
+     */
+    public void setSex(Integer sex) {
+        this.sex = sex;
+    }
+
+    /**
+     * 
+     * @return
+     *     The screenName
+     */
+    public String getScreenName() {
+        return screenName;
+    }
+
+    /**
+     * 
+     * @param screenName
+     *     The screen_name
+     */
+    public void setScreenName(String screenName) {
+        this.screenName = screenName;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo50
+     */
+    public String getPhoto50() {
+        return photo50;
+    }
+
+    /**
+     * 
+     * @param photo50
+     *     The photo_50
+     */
+    public void setPhoto50(String photo50) {
+        this.photo50 = photo50;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo100
+     */
+    public String getPhoto100() {
+        return photo100;
+    }
+
+    /**
+     * 
+     * @param photo100
+     *     The photo_100
+     */
+    public void setPhoto100(String photo100) {
+        this.photo100 = photo100;
+    }
+
+    /**
+     * 
+     * @return
+     *     The online
+     */
+    public Integer getOnline() {
+        return online;
+    }
+
+    /**
+     * 
+     * @param online
+     *     The online
+     */
+    public void setOnline(Integer online) {
+        this.online = online;
+    }
+
+    /**
+     * 
+     * @return
+     *     The onlineApp
+     */
+    public String getOnlineApp() {
+        return onlineApp;
+    }
+
+    /**
+     * 
+     * @param onlineApp
+     *     The online_app
+     */
+    public void setOnlineApp(String onlineApp) {
+        this.onlineApp = onlineApp;
+    }
+
+    /**
+     * 
+     * @return
+     *     The onlineMobile
+     */
+    public Integer getOnlineMobile() {
+        return onlineMobile;
+    }
+
+    /**
+     * 
+     * @param onlineMobile
+     *     The online_mobile
+     */
+    public void setOnlineMobile(Integer onlineMobile) {
+        this.onlineMobile = onlineMobile;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
index 7afefd8a3..728965718 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
@@ -186,6 +186,6 @@ public void addTest(PostRequest request, Callback<PostResponse> callback) {
     }
 
     private Call<VKNewsFeedResponse> findNearVKPNewsFeed(PostRequest request) {
-        return vkRestClient.getRestService().findNearNewsFeed(" ", request.getLongitude(), request.getLatitude(), request.getIdOffset(), request.getCount(), Constants.VK_API_VERSION);
+        return vkRestClient.getRestService().findNearNewsFeed(" ", request.getLongitude(), request.getLatitude(), request.getIdOffset(), request.getCount(), Constants.VK_API_VERSION, request.getExtended());
     }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
index 75ee4c186..985a2d032 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
@@ -20,6 +20,6 @@
     @GET("/method/newsfeed.search")
     Call<VKNewsFeedResponse> findNearNewsFeed(@Query("q") String query, @Query("longitude") double longitude, @Query("latitude") double latitude,
                                               @Query("start_from") String startFrom, @Query("count") int count,
-                                              @Query("v") double version);
+                                              @Query("v") double version, @Query("extended") int extended);
 
 }
