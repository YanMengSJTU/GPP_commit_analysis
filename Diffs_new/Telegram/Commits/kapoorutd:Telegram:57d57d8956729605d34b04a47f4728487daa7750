diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index ed2e6c085..67c403878 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -34,9 +34,18 @@
 import org.telegram.tgnet.SerializedData;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.ForegroundDetector;
+import org.telegram.ui.listners.BaseUiListener;
 
 import java.io.File;
 import java.io.RandomAccessFile;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ThreadFactory;
 
 public class ApplicationLoader extends Application {
 
@@ -70,6 +79,99 @@ public static void reloadWallpaper() {
         loadWallpaper();
     }
 
+
+
+    /**
+     * Thread to execute tasks in background..
+     */
+    private final ExecutorService backgroundExecutor;
+    private Map<Class<? extends BaseUiListener>, Collection<? extends BaseUiListener>> uiListeners;
+    /**
+     * Handler to execute runnable in UI thread.
+     */
+    private final Handler handler;
+
+
+
+    /**
+     *
+     *     This is craterzone logic to add ui and remove ui listener
+     */
+
+//******************************************************************************************//
+
+
+    public ApplicationLoader(){
+
+        _instance = this;
+        uiListeners = new HashMap<>();
+        handler = new Handler();
+        backgroundExecutor = Executors
+                .newSingleThreadExecutor(new ThreadFactory() {
+                    @Override
+                    public Thread newThread(Runnable runnable) {
+                        Thread thread = new Thread(runnable,
+                                "Background executor service");
+                        thread.setPriority(Thread.MIN_PRIORITY);
+                        thread.setDaemon(true);
+                        return thread;
+                    }
+                });
+
+    }
+
+
+    @SuppressWarnings("unchecked")
+    private <T extends BaseUiListener> Collection<T> getOrCreateUIListeners(
+            Class<T> cls) {
+        Collection<T> collection = (Collection<T>) uiListeners.get(cls);
+        if (collection == null) {
+            collection = new ArrayList<T>();
+            uiListeners.put(cls, collection);
+        }
+        return collection;
+    }
+
+    public <T extends BaseUiListener> Collection<T> getUIListeners(Class<T> cls) {
+        return Collections.unmodifiableCollection(getOrCreateUIListeners(cls));
+    }
+
+    public <T extends BaseUiListener> void addUIListener(Class<T> cls, T listener) {
+        getOrCreateUIListeners(cls).add(listener);
+    }
+
+    public <T extends BaseUiListener> void removeUIListener(Class<T> cls, T listener) {
+        getOrCreateUIListeners(cls).remove(listener);
+    }
+
+    /**
+     * Submits request to be executed in background.
+     *
+     * @param runnable
+     */
+    public void runInBackground(final Runnable runnable) {
+        backgroundExecutor.submit(new Runnable() {
+            @Override
+            public void run() {
+                try {
+                    runnable.run();
+                } catch (Exception e) {
+                    //Log.d(TAG, e.toString());
+                }
+            }
+        });
+    }
+
+
+
+
+
+
+    //*********************************************************************************//
+
+
+
+
     private static void calcBackgroundColor() {
         int result[] = AndroidUtilities.calcDrawableColor(cachedWallpaper);
         serviceMessageColor = result[0];
diff --git a/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java b/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
index 0a63e242a..2afa3cc0a 100644
--- a/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
@@ -87,7 +87,7 @@ protected void onCreate(Bundle savedInstanceState) {
         intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config);
         startService(intent);
         acttionBarSetup();
-        findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+        findViewById(R.id.home).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
diff --git a/TMessagesProj/src/main/java/org/telegram/socialuser/runable/AddUserRequester.java b/TMessagesProj/src/main/java/org/telegram/socialuser/runable/AddUserRequester.java
index 67f4d898c..73a0e852a 100644
--- a/TMessagesProj/src/main/java/org/telegram/socialuser/runable/AddUserRequester.java
+++ b/TMessagesProj/src/main/java/org/telegram/socialuser/runable/AddUserRequester.java
@@ -44,10 +44,10 @@ public void run() {
                 p.edit().putString("visibility",resUser.visibility).commit();
                 p.edit().putString("userHash",resUser.userHash).commit();
 
-          /*      for(OnAddUserListner listner : ApplicationLoader.getInstance().getUIListeners(OnAddUserListner.class)){
+                for(OnAddUserListner listner : ApplicationLoader.getInstance().getUIListeners(OnAddUserListner.class)){
 
                     listner.setUserAddSuccess();
-                }*/
+                }
 
 
             }catch (Exception e){
@@ -57,11 +57,10 @@ public void run() {
         }
         else{
 
-        /*    for(OnAddUserListner listner : ApplicationLoader.getInstance().getUIListeners(OnAddUserListner.class)){
+            for(OnAddUserListner listner : ApplicationLoader.getInstance().getUIListeners(OnAddUserListner.class)){
 
                 listner.setUserAddFailed();
             }
-*/
 
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 05cd1bc47..2b4b31467 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -18,6 +18,7 @@
 import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.graphics.Outline;
@@ -39,6 +40,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.DialogObject;
@@ -53,6 +55,10 @@
 import org.telegram.payment.CheckPremiumUserRequester;
 import org.telegram.payment.UserPaymentInfo;
 import org.telegram.socialuser.BackgroundExecuter;
+import org.telegram.socialuser.Util;
+import org.telegram.socialuser.model.CustomHttpParams;
+import org.telegram.socialuser.runable.AddUserRequester;
+import org.telegram.socialuser.runable.GetUserRequester;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.MessagesController;
@@ -61,6 +67,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.BottomSheet;
+import org.telegram.ui.Adapters.CountryAdapter;
 import org.telegram.ui.Adapters.DialogsAdapter;
 import org.telegram.ui.Adapters.DialogsSearchAdapter;
 import org.telegram.ui.Cells.HintDialogCell;
@@ -77,10 +84,11 @@
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RecyclerListView;
 import org.telegram.ui.ActionBar.Theme;
+import org.telegram.ui.listners.OnSocialLogin;
 
 import java.util.ArrayList;
 
-public class DialogsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
+public class DialogsActivity extends BaseFragment implements OnSocialLogin,NotificationCenter.NotificationCenterDelegate {
     
     private RecyclerListView listView;
     private LinearLayoutManager layoutManager;
@@ -117,6 +125,34 @@
 
     private DialogsActivityDelegate delegate;
 
+
+    @Override
+    public void onSocialLoginSuccess() {
+        getParentActivity().runOnUiThread(
+                new Runnable() {
+                    @Override
+                    public void run() {
+                        presentFragment(new MyProfileActivity());
+
+                    }
+                }
+        );
+
+    }
+
+    @Override
+    public void onSocialLoginError() {
+
+    }
+
+    @Override
+    public void onSocialFailer(String userid) {
+
+    }
+
+
+
+
     public interface DialogsActivityDelegate {
         void didSelectDialog(DialogsActivity fragment, long dialog_id, boolean param);
     }
@@ -207,6 +243,34 @@ public void run() {
             passcodeItem = menu.addItem(1, R.drawable.lock_close);
             updatePasscodeButton();
         }
+
+        if(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getBoolean("Login_Status",true)) {
+            TLRPC.User user = UserConfig.getCurrentUser();
+            SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+            // p.edit().putString("pCode",text).commit();
+            if(p.getString("dobforserver","").equals("")) {
+                ArrayList<CustomHttpParams> paramse = new ArrayList();
+                paramse.add(new CustomHttpParams("uniqueId", Util.getNumber(user.phone)));
+                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse, DialogsActivity.this));
+            } else {
+                TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
+                //String dob =Util.convertDate(p.getString("dob",showDate(year,month,day)));
+                newuser.setDob(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver", "2000-01-01"));
+                newuser.setSex(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("sex", "M"));
+                newuser.setId(user.id + "");
+
+                // p.edit().putString("country",name).commit();
+                CountryAdapter.Country cu = Util.getcountry((ApplicationLoader.
+                        applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("country", "india")));
+                newuser.setcCode(cu.shortname);
+                newuser.setname((user.first_name != null ? user.first_name : "") + " " + (user.last_name != null ? user.last_name : ""));
+                newuser.setPhoto(user.photo);
+                newuser.setPhone(user.phone);
+                newuser.setUsername(user.username);
+                BackgroundExecuter.getInstance().execute(new AddUserRequester(newuser, null));
+            }
+        }
+
         final ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index dce7b5f89..c8100d7c5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -13,6 +13,7 @@
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
+import android.app.DatePickerDialog;
 import android.app.Dialog;
 import android.app.ProgressDialog;
 import android.content.Context;
@@ -41,12 +42,14 @@
 import android.view.animation.AccelerateDecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
 import android.widget.AdapterView;
+import android.widget.DatePicker;
 import android.widget.EditText;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.ScrollView;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
@@ -59,6 +62,11 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.socialuser.BackgroundExecuter;
+import org.telegram.socialuser.Util;
+import org.telegram.socialuser.model.CustomHttpParams;
+import org.telegram.socialuser.runable.AddUserRequester;
+import org.telegram.socialuser.runable.GetUserRequester;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
@@ -68,13 +76,16 @@
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Adapters.CountryAdapter;
 import org.telegram.ui.Components.HintEditText;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.SlideView;
+import org.telegram.ui.listners.OnSocialLogin;
 
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
 import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
@@ -84,7 +95,7 @@
 import java.util.Timer;
 import java.util.TimerTask;
 
-public class LoginActivity extends BaseFragment {
+public class LoginActivity extends BaseFragment  implements OnSocialLogin {
 
     private int currentViewNum = 0;
     private SlideView[] views = new SlideView[8];
@@ -507,6 +518,29 @@ private void fillNextCodeParams(Bundle params, TLRPC.TL_auth_sentCode res) {
         }
     }
 
+    @Override
+    public void onSocialLoginSuccess() {
+        getParentActivity().runOnUiThread(
+                new Runnable() {
+                    @Override
+                    public void run() {
+                        presentFragment(new MyProfileActivity());
+
+                    }
+                }
+        );
+    }
+
+    @Override
+    public void onSocialLoginError() {
+
+    }
+
+    @Override
+    public void onSocialFailer(String userid) {
+
+    }
+
     public class PhoneView extends SlideView implements AdapterView.OnItemSelectedListener {
 
         private EditText codeField;
@@ -951,6 +985,18 @@ public void onNextPressed() {
             }
             params.putString("phoneFormated", phone);
             nextPressed = true;
+
+         /*   //////////////////////
+            TLRPC.TL_auth_signUp requ = new TLRPC.TL_auth_signUp();
+            requ.phone_code = phoneCode;
+            requ.phone_code_hash = phoneHash;
+            requ.phone_number = requestPhone;
+            requ.first_name = firstNameField.getText().toString();
+            requ.last_name = lastNameField.getText().toString();
+
+            ////////////////////////*/
+
+
             needShowProgress();
             ConnectionsManager.getInstance().sendRequest(req, new RequestDelegate() {
                 @Override
@@ -977,6 +1023,11 @@ public void run() {
                                 }
                             }
                             needHideProgress();
+
+
+
+
+
                         }
                     });
                 }
@@ -2220,6 +2271,23 @@ public void run() {
                             needHideProgress();
                             nextPressed = false;
                             if (error == null) {
+                                /*TLRPC.TL_auth_authorization res = (TLRPC.TL_auth_authorization) response;
+                                ConnectionsManager.getInstance().setUserId(res.user.id);
+                                UserConfig.clearConfig();
+                                MessagesController.getInstance().cleanup();
+                                UserConfig.setCurrentUser(res.user);
+                                UserConfig.saveConfig(true);
+                                MessagesStorage.getInstance().cleanup(true);
+                                ArrayList<TLRPC.User> users = new ArrayList<>();
+                                users.add(res.user);
+                                MessagesStorage.getInstance().putUsersAndChats(users, null, true, true);
+                                MessagesController.getInstance().putUser(res.user, false);
+                                ContactsController.getInstance().checkAppAccount();
+                                MessagesController.getInstance().getBlockedUsers(true);
+                                needFinishActivity();
+                                */
+
+                                ///////
                                 TLRPC.TL_auth_authorization res = (TLRPC.TL_auth_authorization) response;
                                 ConnectionsManager.getInstance().setUserId(res.user.id);
                                 UserConfig.clearConfig();
@@ -2233,8 +2301,20 @@ public void run() {
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
+                                ArrayList<CustomHttpParams> paramse =new ArrayList();//todo change
+                                paramse.add(new CustomHttpParams("uniqueId",Util.getNumber(res.user.phone)));
+                                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse,LoginActivity.this));
                                 needFinishActivity();
-                            } else {
+                            }
+
+
+
+
+
+
+
+
+                            else {
                                 if (error.text.startsWith("CODE_INVALID")) {
                                     onPasscodeError(true);
                                 } else if (error.text.startsWith("FLOOD_WAIT")) {
@@ -2298,14 +2378,22 @@ public void restoreStateParams(Bundle bundle) {
 
         private EditText firstNameField;
         private EditText lastNameField;
+        private TextView gender;
+        private TextView dob;
+        int genderselected;
+        int day;
+        int year;
+        int month;
         private String requestPhone;
         private String phoneHash;
         private String phoneCode;
         private Bundle currentParams;
         private boolean nextPressed = false;
+        private Context mContext;
 
         public LoginActivityRegisterView(Context context) {
             super(context);
+            mContext =context;
 
             setOrientation(VERTICAL);
 
@@ -2347,6 +2435,74 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
             lastNameField.setMaxLines(1);
             lastNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_WORDS);
             addView(lastNameField, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, 36, 0, 10, 0, 0));
+            gender = new TextView(context);
+            gender.setHintTextColor(0xff979797);
+            gender.setTextColor(0xff212121);
+            //AndroidUtilities.clearCursorDrawable(gender);
+            gender.setHint(LocaleController.getString("gender", R.string.gender));
+            gender.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);
+            gender.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
+            gender.setMaxLines(1);
+            gender.setInputType(InputType.TYPE_TEXT_FLAG_CAP_WORDS);
+            addView(gender, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, 36, 0, 26, 0, 0));
+            gender.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    showDialogForSelection(new String[]{"Male","Female"});
+                }
+            });
+
+            dob = new TextView(context);
+            dob.setHint(LocaleController.getString("dob", R.string.dob));
+            dob.setHintTextColor(0xff979797);
+            dob.setTextColor(0xff212121);
+            //AndroidUtilities.clearCursorDrawable(lastNameField);
+            dob.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);
+            dob.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
+            dob.setMaxLines(1);
+            dob.setInputType(InputType.TYPE_TEXT_FLAG_CAP_WORDS);
+            dob.setOnClickListener(new OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    final Calendar c = Calendar.getInstance();
+                    year = c.get(Calendar.YEAR);
+                    month = c.get(Calendar.MONTH);
+                    day = c.get(Calendar.DAY_OF_MONTH);
+
+                    DatePickerDialog dpd = new DatePickerDialog(mContext,
+                            new DatePickerDialog.OnDateSetListener() {
+
+                                @Override
+                                public void onDateSet(DatePicker view, int year1,
+                                                      int monthOfYear, int dayOfMonth) {
+                                    year =year1;
+                                    month = monthOfYear;
+                                    day= dayOfMonth;
+                                    if(dateValidater(year1,monthOfYear,dayOfMonth)){
+                                        SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+                                        p.edit().putString("dobforserver",getDatetoserver(year1,monthOfYear+1,dayOfMonth)).commit();
+                                        dob.setText(showDate(year1,monthOfYear,dayOfMonth));
+                                    } else{
+                                        Toast.makeText(mContext,"Please select valid date",Toast.LENGTH_SHORT).show();
+                                        return;
+                                    }
+
+                                }
+                            }, year,month, day);
+                    dpd.show();
+                /*new DatePickerDialog.OnDateSetListener() {
+                    @Override
+                    public void onDateSet(DatePicker arg0, int arg1, int arg2, int arg3) {
+                        // arg1 = year
+                        // arg2 = month
+                        // arg3 = day
+                      //  showDate(arg1, arg2+1, arg3);
+                    }
+                };*/
+                }
+
+            });
+            addView(dob, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, 36, 0, 10, 0, 0));
 
             LinearLayout linearLayout = new LinearLayout(context);
             linearLayout.setGravity(Gravity.BOTTOM | Gravity.CENTER_VERTICAL);
@@ -2378,6 +2534,53 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 }
             });
         }
+        private void showDialogForSelection(final String[] items) {
+            AlertDialog.Builder alt_bld = new AlertDialog.Builder(mContext);
+            alt_bld.setTitle(mContext.getResources().getString(R.string.gender));
+            alt_bld.setSingleChoiceItems(items, 0, new DialogInterface.OnClickListener() {
+                public void onClick(DialogInterface dialog, int item) {
+                    genderselected = item;
+                    SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+                    p.edit().putString("sex",getGender()).commit();
+                    gender.setText(items[genderselected]);
+                    dialog.dismiss();
+
+                }
+            });
+
+            AlertDialog alert = alt_bld.create();
+            alert.show();
+            alert.setCancelable(true);
+        }
+        private String showDate(int year, int month, int day) {
+        /*dob_txt.setText(new StringBuilder().append(day).append("/")
+                .append(month).append("/").append(year));*/
+            return (new StringBuilder().append(year+"").append("-")
+                    .append(Util.getMonth(month)).append("-").append(day+"".length()==1?"0"+day:day+"")).toString();
+        }
+
+        private String getDatetoserver(int year, int month, int day) {
+            return (new StringBuilder().append(year+"").append("-")
+                    .append(month+"".length()==1?"0"+month:month+"").append("-").append(day+"".length()==1?"0"+day:day+"")).toString();
+        }
+        private boolean dateValidater(int yr,int mn,int dt){
+            try {
+                Calendar calendar = Calendar.getInstance();
+                calendar.set(yr, mn, dt);
+                long startDate = calendar.getTimeInMillis();
+                if(startDate > Calendar.getInstance().getTimeInMillis()){
+                    return false;
+                } else {
+                    return true;
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+                return false;
+            }
+        }
+        private String getGender(){
+            return genderselected==0?"M":"F";
+        }
 
         @Override
         public void onBackPressed() {
@@ -2447,6 +2650,25 @@ public void run() {
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
+                                ArrayList<CustomHttpParams> paramse =new ArrayList();
+                                TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
+                                if(!ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver","2000-06-06").equalsIgnoreCase("2000-06-06")) {
+                                    paramse.add(new CustomHttpParams("uniqueId",Util.getNumber(res.user.phone)));
+                                    newuser.setDob(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver", "2000-06-06"));
+                                    newuser.setSex(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("sex", "M"));
+                                    newuser.setId(res.user.id + "");
+                                    //p.edit().putString("country",name).commit();
+                                    CountryAdapter.Country cu = Util.getcountry((ApplicationLoader.
+                                            applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("country", "india")));
+                                    newuser.setcCode(cu.shortname);
+                                    newuser.setname((res.user.first_name != null ? res.user.first_name : "") + " " + (res.user.last_name != null ? res.user.last_name : ""));
+                                    newuser.setPhoto(res.user.photo);
+                                    newuser.setPhone(res.user.phone);
+                                    newuser.setUsername(res.user.username);
+                                    BackgroundExecuter.getInstance().execute(new AddUserRequester(newuser, null));
+                                }
+
+                                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse,LoginActivity.this));
                                 needFinishActivity();
                             } else {
                                 if (error.text.contains("PHONE_NUMBER_INVALID")) {
@@ -2471,6 +2693,7 @@ public void run() {
 
         @Override
         public void saveStateParams(Bundle bundle) {
+
             String first = firstNameField.getText().toString();
             if (first.length() != 0) {
                 bundle.putString("registerview_first", first);
@@ -2482,6 +2705,7 @@ public void saveStateParams(Bundle bundle) {
             if (currentParams != null) {
                 bundle.putBundle("registerview_params", currentParams);
             }
+
         }
 
         @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java
index 1d8fa6831..b6fcc95d3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java
@@ -51,7 +51,6 @@
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.HashMap;
-
 public class MyProfileActivity extends BaseFragment implements OnAddUserListner,PhotoViewer.PhotoViewerProvider,View.OnClickListener,NotificationCenter.NotificationCenterDelegate{
     private BackupImageView avatarImageView;
     private TextView statusTextView,nameTextView;
@@ -81,7 +80,7 @@
     @Override
     public View createView(final Context context) {
 
-     //   hideTabsAnsMenu();
+//        hideTabsAnsMenu();
         mcContext = context;
         currentUser = UserConfig.getCurrentUser();
         //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -142,7 +141,7 @@ public void didSelectCountry(String name) {
             }
         });
 
-    //  phone_txt.setText("+"+currentUser.phone);
+        //  phone_txt.setText("+"+currentUser.phone);
         gender.setOnClickListener(this);
         dob.setOnClickListener(this);
         save_btn.setOnClickListener(this);
@@ -164,7 +163,7 @@ public void didSelectCountry(String name) {
         nameTextView.setOnClickListener(this);
         avatarImageView.setOnClickListener(this);
         phone.setOnClickListener(this);
-             statusTextView.setOnClickListener(new View.OnClickListener() {
+        statusTextView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 if (getParentActivity() == null) {
@@ -184,9 +183,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
         });
 
-       fragmentView.findViewById(R.id.backview).setOnClickListener(this);
+        fragmentView.findViewById(R.id.backview).setOnClickListener(this);
 
-     //   ApplicationLoader.getInstance().addUIListener(OnAddUserListner.class,MyProfileActivity.this);
+        ApplicationLoader.getInstance().addUIListener(OnAddUserListner.class,MyProfileActivity.this);
 
 
 
@@ -208,7 +207,7 @@ public void onClick(View v) {
                 presentFragment(new ChangeUsernameActivity());
                 break;
             case R.id.backview:
-              //  showTabsAndmenu();
+         //       showTabsAndmenu();
                 removeUIListeners();
                 break;
             case R.id.number:
@@ -225,9 +224,9 @@ public void onClick(View v) {
                 break;
             case R.id.age:
                 final Calendar c = Calendar.getInstance();
-               year = c.get(Calendar.YEAR);
-               month = c.get(Calendar.MONTH);
-               day = c.get(Calendar.DAY_OF_MONTH);
+                year = c.get(Calendar.YEAR);
+                month = c.get(Calendar.MONTH);
+                day = c.get(Calendar.DAY_OF_MONTH);
 
                 DatePickerDialog dpd = new DatePickerDialog(mcContext,
                         new DatePickerDialog.OnDateSetListener() {
@@ -241,10 +240,10 @@ public void onDateSet(DatePicker view, int year1,
                                 if(dateValidater(year1,monthOfYear,dayOfMonth)){
                                     ApplicationLoader.applicationContext.
                                             getSharedPreferences("socialuser", Activity.MODE_PRIVATE).edit()
-                                            .putString("dob", Util.getDateforserver(year1,monthOfYear,dayOfMonth)).commit();
+                                            .putString("dob",Util.getDateforserver(year1,monthOfYear,dayOfMonth)).commit();
                                     dob_txt.setText(Util.getDateforserver(year1,monthOfYear,dayOfMonth));
                                 } else{
-                                    Toast.makeText(mcContext, LocaleController.getString("pleaseselectvaliddate", R.string.pleaseselectvaliddate),Toast.LENGTH_SHORT).show();
+                                    Toast.makeText(mcContext,LocaleController.getString("pleaseselectvaliddate", R.string.pleaseselectvaliddate),Toast.LENGTH_SHORT).show();
                                     return;
                                 }
 
@@ -260,9 +259,9 @@ public void onDateSet(DatePicker view, int year1,
                 currentUser = UserConfig.getCurrentUser();
                 SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
                 setContact();
-                currentUser = UserConfig.getCurrentUser();
+                currentUser =UserConfig.getCurrentUser();
 
-               TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
+                TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
                 //String dob =Util.convertDate(p.getString("dob",showDate(year,month,day)));
                 newuser.setDob(Util.convertDate(p.getString("dob","2000-02-02")));
                 newuser.setSex(p.getString("sex",getGender()));
@@ -276,16 +275,16 @@ public void onDateSet(DatePicker view, int year1,
                 newuser.setPhone(currentUser.phone);
                 newuser.setUsername(currentUser.username);
                 BackgroundExecuter.getInstance().execute(new AddUserRequester(newuser,null));
-             //   finishFragment();
+                //   finishFragment();
                 break;
         }
     }
     @Override
     public void onResume() {
         super.onResume();
-     //   hideTabsAnsMenu();
+       // hideTabsAnsMenu();
         currentUser = UserConfig.getCurrentUser();
-       // ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
+     //   ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
         statusTextView.setText(LocaleController.formatUserStatus(currentUser));
         phone_txt.setText("+"+currentUser.phone);
         phone_txt.setText("+"+currentUser.phone);
@@ -313,34 +312,34 @@ private void checkAndUpdateAvatar() {
     @Override
     public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index){
         if (fileLocation == null) {
-        return null;
-    }
+            return null;
+        }
 
-    TLRPC.FileLocation photoBig = null;
-    if (currentUser.id != 0) {
-        TLRPC.User user = MessagesController.getInstance().getUser(currentUser.id);
-        if (user != null && user.photo != null && user.photo.photo_big != null) {
-            photoBig = user.photo.photo_big;
+        TLRPC.FileLocation photoBig = null;
+        if (currentUser.id != 0) {
+            TLRPC.User user = MessagesController.getInstance().getUser(currentUser.id);
+            if (user != null && user.photo != null && user.photo.photo_big != null) {
+                photoBig = user.photo.photo_big;
+            }
         }
-    }
 
-    if (photoBig != null && photoBig.local_id == fileLocation.local_id && photoBig.volume_id == fileLocation.volume_id && photoBig.dc_id == fileLocation.dc_id) {
-        int coords[] = new int[2];
-        avatarImageView.getLocationInWindow(coords);
-        PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
-        object.viewX = coords[0];
-        object.viewY = coords[1] - AndroidUtilities.statusBarHeight;
-        object.parentView = avatarImageView;
-        object.imageReceiver = avatarImageView.getImageReceiver();
-        object.user_id = currentUser.id;
-        object.thumb = object.imageReceiver.getBitmap();
-        object.size = -1;
-        object.radius = avatarImageView.getImageReceiver().getRoundRadius();
-      //  object.scale = ViewProxy.getScaleX(avatarImageView);
-        return object;
+        if (photoBig != null && photoBig.local_id == fileLocation.local_id && photoBig.volume_id == fileLocation.volume_id && photoBig.dc_id == fileLocation.dc_id) {
+            int coords[] = new int[2];
+            avatarImageView.getLocationInWindow(coords);
+            PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
+            object.viewX = coords[0];
+            object.viewY = coords[1] - AndroidUtilities.statusBarHeight;
+            object.parentView = avatarImageView;
+            object.imageReceiver = avatarImageView.getImageReceiver();
+            object.user_id = currentUser.id;
+            object.thumb = object.imageReceiver.getBitmap();
+            object.size = -1;
+            object.radius = avatarImageView.getImageReceiver().getRoundRadius();
+          //  object.scale = ViewProxy.getScaleX(avatarImageView);
+            return object;
+        }
+        return null;
     }
-    return null;
-}
 
 
     @Override
@@ -435,7 +434,7 @@ private String getGender(){
     public CountryAdapter.Country getcountry(String name){
         CountryAdapter k = new CountryAdapter(mcContext);
         HashMap<String, ArrayList<CountryAdapter.Country>> countries = k.getCountries();
-      //  ArrayList<String> sortedCountries = k.getSortedCountries();
+//        ArrayList<String> sortedCountries = k.getSortedCountries();
         String s = name.substring(0,1).toUpperCase();
         ArrayList<CountryAdapter.Country> dd = countries.get(s);
         for(CountryAdapter.Country selectcountry:dd){
@@ -446,12 +445,12 @@ private String getGender(){
         return null;
     }
 
-private String getGender(String g){
-    if(!g.equalsIgnoreCase("")) {
-        return g.equalsIgnoreCase("m")?"Male":"Female";
+    private String getGender(String g){
+        if(!g.equalsIgnoreCase("")) {
+            return g.equalsIgnoreCase("m")?"Male":"Female";
+        }
+        return "Gender";
     }
-    return "Gender";
-}
 
     private boolean dateValidater(int yr,int mn,int dt){
         try {
@@ -520,13 +519,13 @@ void setContact(){
 
     @Override
     public void setUserAddSuccess() {
-      getParentActivity().runOnUiThread(new Runnable() {
+        getParentActivity().runOnUiThread(new Runnable() {
             @Override
             public void run() {
-         Toast.makeText(getParentActivity(),"Profile Saved !!",Toast.LENGTH_LONG).show();
-              removeUIListeners();
+                Toast.makeText(getParentActivity(),"Profile Saved !!",Toast.LENGTH_LONG).show();
+                removeUIListeners();
 
-                      }
+            }
         });
     }
 
@@ -542,16 +541,16 @@ public void run() {
             }
         });
 
-     //   removeUIListeners();
+        //   removeUIListeners();
     }
 
 
 
 
-   public void removeUIListeners(){
-    //   ApplicationLoader.getInstance().removeUIListener(OnAddUserListner.class,MyProfileActivity.this);
-         finishFragment();
+    public void removeUIListeners(){
+        ApplicationLoader.getInstance().removeUIListener(OnAddUserListner.class,MyProfileActivity.this);
+        finishFragment();
 
-   }
+    }
 
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java
index 034915980..06ec3758d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java
@@ -144,7 +144,7 @@ public View createView(Context context) {
      //   hideTabsAnsMenu();
         mContext = context;
         //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-        actionBar.setBackButtonImage(0x00000000);//todo
+        actionBar.setBackButtonImage(R.drawable.ic_ab_back);//todo
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("preferences", R.string.preferences));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 64d0c5ad0..1a4d2b098 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -236,6 +236,7 @@ public void run() {
                 });
             }
         };
+
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.updateInterfaces);
 
         rowCount = 0;
@@ -248,6 +249,12 @@ public void run() {
           preferencerow = rowCount++;
 
         premiumFeature=rowCount++;
+
+        if(UserPaymentInfo.getInstatance().getPaymentStatus() ==UserPaymentInfo.paidUser
+                && (!UserPaymentInfo.getInstatance().getUserId().equalsIgnoreCase("")) ){
+            premiumFeature=rowCount--;
+        }
+
         settingsSectionRow = rowCount++;
         settingsSectionRow2 = rowCount++;
         notificationRow = rowCount++;
diff --git a/TMessagesProj/src/main/res/layout/activity_main.xml b/TMessagesProj/src/main/res/layout/activity_main.xml
index f94c0f11d..3c4b25b30 100644
--- a/TMessagesProj/src/main/res/layout/activity_main.xml
+++ b/TMessagesProj/src/main/res/layout/activity_main.xml
@@ -180,6 +180,7 @@
             android:layout_gravity="bottom"
             android:focusableInTouchMode="true"
             android:gravity="bottom"
+            android:visibility="gone"
             android:orientation="horizontal"
             android:layout_alignParentBottom="true"
             android:id="@+id/bottom_panel"
diff --git a/TMessagesProj/src/main/res/layout/custom_actionbar.xml b/TMessagesProj/src/main/res/layout/custom_actionbar.xml
index 28dd42a8a..945e28dac 100644
--- a/TMessagesProj/src/main/res/layout/custom_actionbar.xml
+++ b/TMessagesProj/src/main/res/layout/custom_actionbar.xml
@@ -3,12 +3,20 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_gravity="center"
-    android:orientation="vertical">
+    android:orientation="horizontal">
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:src="@drawable/ic_ab_back"
+        android:layout_marginLeft="10dp"
+        android:id="@+id/home"
+        android:layout_gravity="center_vertical"
+        android:layout_height="wrap_content" />
 
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginLeft="15dp"
+        android:layout_marginLeft="25dp"
         android:text="Premium Benefits"
         android:textColor="#ffffff"
         android:textSize="20sp" />
diff --git a/TMessagesProj/src/main/res/layout/gridview.xml b/TMessagesProj/src/main/res/layout/gridview.xml
index e7dd96f2d..d671eb227 100644
--- a/TMessagesProj/src/main/res/layout/gridview.xml
+++ b/TMessagesProj/src/main/res/layout/gridview.xml
@@ -71,6 +71,7 @@
             android:layout_gravity="bottom"
             android:focusableInTouchMode="true"
             android:gravity="bottom"
+            android:visibility="gone"
             android:orientation="horizontal"
             android:layout_alignParentBottom="true"
             android:id="@+id/bottom_panel"
diff --git a/TMessagesProj/src/main/res/layout/myprofile_layout.xml b/TMessagesProj/src/main/res/layout/myprofile_layout.xml
index 0de4da33f..fa3f29b17 100644
--- a/TMessagesProj/src/main/res/layout/myprofile_layout.xml
+++ b/TMessagesProj/src/main/res/layout/myprofile_layout.xml
@@ -280,6 +280,7 @@
             android:layout_gravity="bottom"
             android:focusableInTouchMode="true"
             android:gravity="bottom"
+            android:visibility="gone"
             android:orientation="horizontal"
             android:layout_alignParentBottom="true"
             android:id="@+id/bottom_panel"
diff --git a/TMessagesProj/src/main/res/layout/preferences_layout.xml b/TMessagesProj/src/main/res/layout/preferences_layout.xml
index a344be85b..f142ab699 100644
--- a/TMessagesProj/src/main/res/layout/preferences_layout.xml
+++ b/TMessagesProj/src/main/res/layout/preferences_layout.xml
@@ -223,6 +223,7 @@
             android:layout_gravity="bottom"
             android:focusableInTouchMode="true"
             android:gravity="bottom"
+            android:visibility="gone"
             android:orientation="horizontal"
             android:layout_alignParentBottom="true"
             android:id="@+id/bottom_panel"
diff --git a/TMessagesProj/src/main/res/layout/usernw_profile_layout.xml b/TMessagesProj/src/main/res/layout/usernw_profile_layout.xml
index 12d2f964d..0a67f0754 100644
--- a/TMessagesProj/src/main/res/layout/usernw_profile_layout.xml
+++ b/TMessagesProj/src/main/res/layout/usernw_profile_layout.xml
@@ -238,6 +238,7 @@
             android:layout_gravity="bottom"
             android:focusableInTouchMode="true"
             android:gravity="bottom"
+            android:visibility="gone"
             android:orientation="horizontal"
             android:layout_alignParentBottom="true"
             android:id="@+id/bottom_panel"
