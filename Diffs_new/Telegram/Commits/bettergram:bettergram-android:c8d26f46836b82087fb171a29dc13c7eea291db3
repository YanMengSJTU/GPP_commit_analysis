diff --git a/TMessagesProj/src/main/java/io/bettergram/data/CryptoCurrencyInfo.java b/TMessagesProj/src/main/java/io/bettergram/data/CryptoCurrencyInfo.java
index c1629b4c4..f5f2a222c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/data/CryptoCurrencyInfo.java
+++ b/TMessagesProj/src/main/java/io/bettergram/data/CryptoCurrencyInfo.java
@@ -21,4 +21,6 @@
     public CryptoCurrencyInfoDelta delta;
     @JsonField(fieldName = "icon")
     public String icon;
+    @JsonField(fieldName = "favorite")
+    public boolean favorite;
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
index 20401d2ff..556e23aa3 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/CryptoDataService.java
@@ -9,6 +9,7 @@
 import okhttp3.OkHttpClient;
 import okhttp3.Request;
 import okhttp3.Response;
+import org.telegram.messenger.ApplicationLoader;
 
 import java.io.IOException;
 import java.util.*;
@@ -19,6 +20,8 @@
 
     public static final String CRYPTO_PREF = "CRYPTO_PREF";
     public static final String KEY_CRYPTO_CURRENCIES = "KEY_CRYPTO_CURRENCIES";
+    public static final String KEY_CRYPTO_CURRENCIES_FAVORITE = "KEY_CRYPTO_CURRENCIES_FAVORITE";
+    public static final String KEY_CRYPTO_CURRENCIES_SAVED = "KEY_CRYPTO_CURRENCIES_SAVED";
 
     public static final String EXTRA_FETCH_CRYPTO_CURRENCIES = "EXTRA_FETCH_CRYPTO_CURRENCIES";
     public static final String EXTRA_SORT_BY = "EXTRA_SORT_BY";
@@ -37,7 +40,7 @@
     public static final int notify = 60000;
     private Timer mTimer = null;
 
-    private SharedPreferences pref;
+    private static SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(CRYPTO_PREF, Context.MODE_PRIVATE);
 
     public CryptoDataService() {
         super("CryptoDataService");
@@ -98,11 +101,15 @@ protected void onHandleIntent(@Nullable Intent intent) {
 
         @Override
         public void run() {
-            pref = getSharedPreferences(CRYPTO_PREF, Context.MODE_PRIVATE);
+
+            String savedCryptoInfoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
+            if (!isEmpty(savedCryptoInfoJson)) {
+                publishResults(savedCryptoInfoJson, NOTIFICATION, RESULT);
+            }
 
             boolean fetchCryptoCurrencies = intent.getBooleanExtra(KEY_CRYPTO_CURRENCIES, false);
 
-            String savedCryptoJson = pref.getString(KEY_CRYPTO_CURRENCIES, null);
+            String savedCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES, null);
 
             List<CryptoCurrency> currencies = new ArrayList<>();
 
@@ -117,7 +124,7 @@ public void run() {
 
                     if (response.isSuccessful() && response.body() != null) {
                         String fetchedCryptoJson = response.body().string();
-                        pref.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson).apply();
+                        preferences.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson).apply();
                         savedCryptoJson = fetchedCryptoJson;
                     }
                 } catch (IOException e) {
@@ -159,8 +166,27 @@ public void run() {
                     CryptoCurrencyInfoResponse cryptoResponse = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(fetchedCurrencyJson);
                     cryptoResponse.data.favorites = addIcons(cryptoResponse.data.favorites, currencies);
                     cryptoResponse.data.list = addIcons(cryptoResponse.data.list, currencies);
+                    if (!cryptoResponse.data.favorites.isEmpty()) {
+                        for (int i = 0, size = cryptoResponse.data.favorites.size(); i < size; i++) {
+                            cryptoResponse.data.favorites.get(i).favorite = true;
+                        }
+                    }
+                    String savedFaveCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_FAVORITE, null);
+                    if (!isEmpty(savedFaveCryptoJson)) {
+                        CryptoCurrencyInfoData data = CryptoCurrencyInfoData__JsonHelper.parseFromJson(savedFaveCryptoJson);
+                        if (data != null && !data.favorites.isEmpty()) {
+                            for (int i = 0, size = cryptoResponse.data.list.size(); i < size; i++) {
+                                final int index = i;
+                                CryptoCurrencyInfo inf = CollectionUtil.find(data.favorites, (CryptoCurrencyInfo item) -> cryptoResponse.data.list.get(index).code.equals(item.code));
+                                cryptoResponse.data.list.get(index).favorite = inf != null;
+                            }
+                        }
+                    }
+
                     String json = CryptoCurrencyInfoResponse__JsonHelper.serializeToJson(cryptoResponse);
 
+                    preferences.edit().putString(KEY_CRYPTO_CURRENCIES_SAVED, json).apply();
+
                     publishResults(json, NOTIFICATION, RESULT);
                 }
             } catch (IOException e) {
@@ -168,4 +194,35 @@ public void run() {
             }
         }
     }
+
+    public static boolean faveCrypto(boolean fave, CryptoCurrencyInfo crypto) {
+        String json = preferences.getString(KEY_CRYPTO_CURRENCIES_FAVORITE, null);
+
+        CryptoCurrencyInfoData data = null;
+        if (!isEmpty(json)) {
+            try {
+                data = CryptoCurrencyInfoData__JsonHelper.parseFromJson(json);
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+        if (data == null) {
+            data = new CryptoCurrencyInfoData();
+        }
+        if (data.favorites == null) {
+            data.favorites = new ArrayList<>();
+        }
+        if (fave) {
+            data.favorites.add(crypto);
+        } else {
+            data.favorites.remove(crypto);
+        }
+        try {
+            preferences.edit().putString(KEY_CRYPTO_CURRENCIES_FAVORITE, CryptoCurrencyInfoData__JsonHelper.serializeToJson(data)).apply();
+            return true;
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return false;
+    }
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index 388246216..e5abd4c01 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.util.Log;
 import com.rometools.rome.feed.synd.SyndEntry;
 import com.rometools.rome.feed.synd.SyndFeed;
 import com.rometools.rome.io.FeedException;
@@ -25,7 +26,9 @@
 import java.nio.charset.StandardCharsets;
 import java.security.NoSuchAlgorithmException;
 import java.util.ArrayList;
+import java.util.HashSet;
 import java.util.List;
+import java.util.Set;
 
 import static android.text.TextUtils.isEmpty;
 import static io.bettergram.utils.AeSimpleSHA1.SHA1;
@@ -36,7 +39,7 @@
 
     public static final String NEWS_PREF = "NEWS_PREF";
 
-    public static final String KEY_FEED_XML = "KEY_FEED_XML";
+    public static final String KEY_FEED_XML_SET = "KEY_FEED_XML_SET";
 
     public static final String KEY_SAVED_LIST = "KEY_SAVED_LIST";
 
@@ -82,12 +85,16 @@ protected void onHandleIntent(Intent intent) {
                     e.printStackTrace();
                 }
                 String xmlFetched = IOUtils.toString(in, "UTF-8");
-                String xmlSaved = pref.getString(KEY_FEED_XML + urlHash, null);
-
+                Set<String> savedStringSet = pref.getStringSet(KEY_FEED_XML_SET + urlHash, null);
+                String xmlSaveHash = savedStringSet != null ? savedStringSet.toArray(new String[0])[0] : null;
+                String xmlSaved = savedStringSet != null ? savedStringSet.toArray(new String[0])[1] : null;
                 String xmlFinal = null;
                 try {
-                    if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(SHA1(xmlSaved))) {
-                        pref.edit().putString(KEY_FEED_XML + urlHash, xmlFetched).apply();
+                    if (isEmpty(xmlSaved) || !SHA1(xmlFetched).equals(xmlSaveHash)) {
+                        Set<String> stringSet = new HashSet<>();
+                        stringSet.add(SHA1(xmlFetched));
+                        stringSet.add(xmlFetched);
+                        pref.edit().putStringSet(KEY_FEED_XML_SET + urlHash, stringSet).apply();
                         xmlFinal = xmlFetched;
                     } else {
                         xmlFinal = xmlSaved;
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
index 4fd282767..02c32b6c2 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
@@ -1,6 +1,8 @@
 package io.bettergram.service;
 
+import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.util.Log;
 import com.rometools.rome.feed.synd.SyndEntry;
 import com.rometools.rome.feed.synd.SyndFeed;
@@ -21,22 +23,38 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import static android.text.TextUtils.isEmpty;
+
 public class YoutubeDataService extends BaseDataService {
 
     private static final String TAG = YoutubeDataService.class.getName();
 
+    public static final String YOUTUBE_PREF = "YOUTUBE_PREF";
+
+    public static final String KEY_VIDEO_JSON = "KEY_VIDEO_JSON";
+
     public static final String RESULT = "result";
 
     public static final String NOTIFICATION = "io.bettergram.service.YoutubeDataService";
 
     private static List<String> videoIds = new ArrayList<>();
 
+    private SharedPreferences pref;
+
     public YoutubeDataService() {
         super("YoutubeDataService");
     }
 
     @Override
     protected void onHandleIntent(Intent intent) {
+
+        pref = getSharedPreferences(YOUTUBE_PREF, Context.MODE_PRIVATE);
+
+        String jsonRaw = pref.getString(KEY_VIDEO_JSON, null);
+        if (!isEmpty(jsonRaw)) {
+            publishResults(jsonRaw, NOTIFICATION, RESULT);
+        }
+
         String apiKey = getString(R.string.youtube_api_key);
         try {
             VideoData videoData = VideoData__JsonHelper.parseFromJson(VideosApi.getYoutubeRSSFeed());
@@ -61,6 +79,8 @@ protected void onHandleIntent(Intent intent) {
             String jsonResult = jsonObject.toString();
             Log.i(TAG, "json: " + jsonResult);
 
+            pref.edit().putString(KEY_VIDEO_JSON, jsonResult).apply();
+
             publishResults(jsonResult, NOTIFICATION, RESULT);
         } catch (IOException | JSONException | FeedException | ParseException e) {
             e.printStackTrace();
diff --git a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/CryptoAdapter.java b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/CryptoAdapter.java
index ae91b38f8..e4e2bc02f 100644
--- a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/CryptoAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/CryptoAdapter.java
@@ -7,16 +7,20 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.graphics.Color;
+import android.graphics.Typeface;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.v4.content.ContextCompat;
 import android.text.SpannableStringBuilder;
+import android.text.TextUtils;
 import android.text.style.ForegroundColorSpan;
 import android.text.style.RelativeSizeSpan;
+import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
+import android.widget.LinearLayout;
 import android.widget.TextView;
 import com.sackcentury.shinebuttonlib.ShineButton;
 import com.squareup.picasso.Picasso;
@@ -30,11 +34,13 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.support.widget.RecyclerView;
 import org.telegram.ui.ActionBar.Theme;
+import org.telegram.ui.Components.LayoutHelper;
 
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
+import static android.text.TextUtils.isEmpty;
 import static io.bettergram.service.CryptoDataService.EXTRA_LIMIT;
 
 public class CryptoAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
@@ -67,30 +73,54 @@ public void onReceive(Context context, Intent intent) {
         public void run() {
             android.os.Process.setThreadPriority(android.os.Process.THREAD_PRIORITY_BACKGROUND);
             try {
-                CryptoCurrencyInfoResponse cryptoData = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(json);
-                AndroidUtilities.runOnUIThread(() -> setCryptoData(cryptoData));
+                CryptoCurrencyInfoResponse res = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(json);
+                AndroidUtilities.runOnUIThread(() -> setCryptoData(res));
             } catch (IOException e) {
                 e.printStackTrace();
             }
         }
     }
 
-    class MainViewHolder extends RecyclerView.ViewHolder {
+    class MainViewHolder extends RecyclerView.ViewHolder implements ShineButton.OnCheckedChangeListener {
 
         ImageView imageCrypto;
-
         TextView textCryptoName, textCryptoPrice, textDayDelta;
+        String crypto;
+        ShineButton star;
+
+        public void setCrypto(String crypto) {
+            this.crypto = crypto;
+        }
 
         MainViewHolder(@NonNull View itemView) {
             super(itemView);
-            imageCrypto = itemView.findViewById(R.id.imageCrypto);
-            textCryptoName = itemView.findViewById(R.id.textCryptoName);
-            textCryptoPrice = itemView.findViewById(R.id.textCryptoPrice);
-            textDayDelta = itemView.findViewById(R.id.textDayDelta);
+            //imageCrypto = itemView.findViewById(R.id.imageCrypto);
+            imageCrypto = itemView.findViewWithTag("imageCrypto");
+            //textCryptoName = itemView.findViewById(R.id.textCryptoName);
+            textCryptoName = itemView.findViewWithTag("textCryptoName");
+            //textCryptoPrice = itemView.findViewById(R.id.textCryptoPrice);
+            textCryptoPrice = itemView.findViewWithTag("textCryptoPrice");
+            //textDayDelta = itemView.findViewById(R.id.textDayDelta);
+            textDayDelta = itemView.findViewWithTag("textDayDelta");
 
             Activity activity = (Activity) itemView.getContext();
-            ShineButton star = itemView.findViewById(R.id.star);
-            star.init(activity);
+            //ShineButton star = itemView.findViewById(R.id.star);
+            star = itemView.findViewWithTag("star");
+            if (star.activity == null) {
+                star.init(activity);
+            }
+            star.setOnCheckStateChangeListener(this);
+        }
+
+        @Override
+        public void onCheckedChanged(View view, boolean checked) {
+            for (int i = 0, size = data.size(); i < size; i++) {
+                if (data.get(i).code.equals(crypto)) {
+                    data.get(i).favorite = checked;
+                    CryptoDataService.faveCrypto(checked, data.get(i));
+                    break;
+                }
+            }
         }
     }
 
@@ -98,7 +128,7 @@ public void run() {
 
         TextView textCap, textDom, textVol;
 
-        public HeaderViewHolder(View itemView) {
+        HeaderViewHolder(View itemView) {
             super(itemView);
             textCap = itemView.findViewById(R.id.textCap);
             textDom = itemView.findViewById(R.id.textDom);
@@ -117,6 +147,9 @@ public LabelViewHolder(View itemView) {
     private List<CryptoCurrencyInfo> data = new ArrayList<>();
 
     public CryptoAdapter() {
+        for (int i = 0; i < 100; i++) {
+            data.add(new CryptoCurrencyInfo());
+        }
     }
 
     public void setCryptoData(CryptoCurrencyInfoResponse cryptoData) {
@@ -146,7 +179,55 @@ public int getItemViewType(int position) {
             case 1:
                 return new LabelViewHolder(inflater.inflate(R.layout.item_crypto_top, parent, false));
             case 2:
-                return new MainViewHolder(inflater.inflate(R.layout.item_crypto, parent, false));
+                LinearLayout content = new LinearLayout(context);
+                content.setOrientation(LinearLayout.HORIZONTAL);
+                content.setWeightSum(1);
+                LinearLayout.MarginLayoutParams margin = LayoutHelper.createMargin(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT);
+                margin.topMargin = margin.bottomMargin = AndroidUtilities.dp(2);
+                content.setLayoutParams(margin);
+
+                LinearLayout container = new LinearLayout(context);
+                container.setOrientation(LinearLayout.HORIZONTAL);
+                container.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8), AndroidUtilities.dp(8));
+
+                ShineButton star = new ShineButton(context);
+                star.setBtnColor(context.getResources().getColor(android.R.color.darker_gray));
+                star.setBtnFillColor(Color.parseColor("#ffc200"));
+                star.enableFlashing(true);
+                star.setShineSize(AndroidUtilities.dp(14));
+                star.setShapeResource(R.raw.star);
+                star.setTag("star");
+                container.addView(star, LayoutHelper.createLinear(22, 22, Gravity.CENTER, 0, 0, 8, 0));
+
+                ImageView cryptoImage = new ImageView(context);
+                cryptoImage.setTag("imageCrypto");
+                container.addView(cryptoImage, LayoutHelper.createLinear(32, 32, Gravity.CENTER, 16, 0, 4, 0));
+
+                TextView cryptoName = new TextView(context);
+                cryptoName.setTypeface(Typeface.DEFAULT_BOLD);
+                cryptoName.setMaxLines(1);
+                cryptoName.setTextColor(context.getResources().getColor(android.R.color.black));
+                cryptoName.setTextSize(14);
+                cryptoName.setGravity(Gravity.CENTER);
+                cryptoName.setEllipsize(TextUtils.TruncateAt.END);
+                cryptoName.setTag("textCryptoName");
+                container.addView(cryptoName, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER, 8, 0, 0, 0));
+
+                content.addView(container, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.5f));
+
+                TextView cryptoPrice = new TextView(context);
+                cryptoPrice.setGravity(Gravity.CENTER);
+                cryptoPrice.setTextSize(14);
+                cryptoPrice.setTag("textCryptoPrice");
+                content.addView(cryptoPrice, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.25f, Gravity.CENTER));
+
+                TextView cryptoDelta = new TextView(context);
+                cryptoDelta.setTextSize(14);
+                cryptoDelta.setGravity(Gravity.CENTER | Gravity.END);
+                cryptoDelta.setTag("textDayDelta");
+                content.addView(cryptoDelta, LayoutHelper.createLinear(0, LayoutHelper.WRAP_CONTENT, 0.25f, Gravity.CENTER, 0, 0, 8, 0));
+
+                return new MainViewHolder(content);
             default:
                 throw new IllegalStateException("Unrecognizable viewType");
         }
@@ -172,24 +253,32 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int positi
             CryptoCurrencyInfo info = data.get(realPosition);
 
             MainViewHolder main = (MainViewHolder) holder;
+            main.setCrypto(info.code);
             main.textCryptoName.setText(info.name);
             double price = info.price;
-            boolean isGreaterZero = Math.floor(price) > 0;
-            double deltaMinute = -1 * ((1 - info.delta.minute) * 100);
-            main.textCryptoPrice.setTextColor(deltaMinute > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
-            main.textCryptoPrice.setText(String.format(isGreaterZero ? "$%,.2f" : "$%.4f", price));
-            Picasso.get().load(info.icon).into(main.imageCrypto);
-            double deltaDay = -1 * ((1 - info.delta.day) * 100);
-            main.textDayDelta.setTextColor(deltaDay > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
-            main.textDayDelta.setText(String.format(deltaDay > 0 ? "+%s%%" : "%s%%", Number.truncateNumber(deltaDay)));
-
-            main.textDayDelta.setCompoundDrawablesWithIntrinsicBounds(
-                    null,
-                    null,
-                    deltaDay > 0 ? Theme.crypto_priceUpDrawable : Theme.crypto_priceDownDrawable,
-                    null
-            );
-            main.textDayDelta.setCompoundDrawablePadding(2);
+            if (price > 0) {
+                boolean isGreaterZero = Math.floor(price) > 0;
+                double deltaMinute = -1 * ((1 - info.delta.minute) * 100);
+                main.textCryptoPrice.setTextColor(deltaMinute > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
+                main.textCryptoPrice.setText(String.format(isGreaterZero ? "$%,.2f" : "$%.4f", price));
+            }
+            if (!isEmpty(info.icon)) {
+                Picasso.get().load(info.icon).into(main.imageCrypto);
+            }
+            if (info.delta != null) {
+                double deltaDay = -1 * ((1 - info.delta.day) * 100);
+                main.textDayDelta.setTextColor(deltaDay > 0 ? Color.parseColor("#ff69bc35") : Color.RED);
+                main.textDayDelta.setText(String.format(deltaDay > 0 ? "+%s%%" : "%s%%", Number.truncateNumber(deltaDay)));
+
+                main.textDayDelta.setCompoundDrawablesWithIntrinsicBounds(
+                        null,
+                        null,
+                        deltaDay > 0 ? Theme.crypto_priceUpDrawable : Theme.crypto_priceDownDrawable,
+                        null
+                );
+                main.textDayDelta.setCompoundDrawablePadding(2);
+            }
+            main.star.setChecked(info.favorite);
         }
     }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/ResourcesAdapter.java b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/ResourcesAdapter.java
index 3aef39fbf..2f93fa085 100644
--- a/TMessagesProj/src/main/java/io/bettergram/ui/adapters/ResourcesAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/ui/adapters/ResourcesAdapter.java
@@ -2,14 +2,10 @@
 
 
 import android.app.Activity;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
+import android.content.*;
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -24,6 +20,7 @@
 import io.bettergram.service.ResourcesDataService;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.support.widget.RecyclerView;
+import org.telegram.ui.Components.RecyclerListView;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -67,7 +64,10 @@ public void run() {
                     ResourceGroup group = data.resources.groups.get(i);
                     objects.add(group.title);
                     for (int j = 0, size_j = group.items.size(); j < size_j; j++) {
-                        objects.add(group.items.get(j));
+                        ResourceItem item = group.items.get(j);
+                        if (!isEmpty(item.title) && !isEmpty(item.url) && !isEmpty(item.iconUrl)) {
+                            objects.add(item);
+                        }
                     }
                 }
                 AndroidUtilities.runOnUIThread(() -> setResources(objects));
@@ -88,6 +88,7 @@ public void run() {
     }
 
     class ContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+        View layoutContent;
         ImageView imageResource;
         TextView textName, textDesc;
         ResourceItem item;
@@ -98,17 +99,21 @@ public void setItem(ResourceItem item) {
 
         public ContentViewHolder(View itemView) {
             super(itemView);
-            itemView.setOnClickListener(this);
+            layoutContent = itemView.findViewById(R.id.layoutContent);
             imageResource = itemView.findViewById(R.id.imageResource);
             textName = itemView.findViewById(R.id.textName);
             textDesc = itemView.findViewById(R.id.textDesc);
+            layoutContent.setOnClickListener(this);
         }
 
         @Override
         public void onClick(View v) {
-            Log.e("resources", "Point XXX");
             final Context context = v.getContext();
             Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(item.url));
+            if (item.url.contains("tg://")) {
+                ComponentName comp = new ComponentName(context.getPackageName(), "org.telegram.ui.LaunchActivity");
+                intent.setComponent(comp);
+            }
             context.startActivity(intent);
         }
     }
@@ -133,7 +138,7 @@ public int getItemViewType(int position) {
 
     @Override
     public int getItemCount() {
-        return objects.size();
+        return objects.size() + 1;
     }
 
 
@@ -142,6 +147,10 @@ public int getItemCount() {
     public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         LayoutInflater inflater = LayoutInflater.from(parent.getContext());
         switch (viewType) {
+            case -1:
+                View footer = new View(parent.getContext());
+                footer.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(98)));
+                return new RecyclerListView.Holder(footer);
             case 0:
                 return new TitleViewHolder(inflater.inflate(R.layout.item_resource_header, parent, false));
             case 1:
@@ -155,6 +164,8 @@ public int getItemCount() {
     public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         int type = getItemViewType(position);
         switch (type) {
+            case -1:
+                break;
             case 0:
                 TitleViewHolder tvh = (TitleViewHolder) holder;
                 String title = (String) objects.get(position);
@@ -193,4 +204,5 @@ public void registerReceiver(Activity activity) {
     public void unregisterReceiver(Activity activity) {
         activity.unregisterReceiver(receiver);
     }
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java
index 06c4c405a..9d5409d69 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java
@@ -8,6 +8,7 @@
 
 package org.telegram.ui.Components;
 
+import android.view.ViewGroup;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
@@ -19,7 +20,7 @@
 
     public static final int MATCH_PARENT = -1;
     public static final int WRAP_CONTENT = -2;
-    
+
     private static int getSize(float size) {
         return (int) (size < 0 ? size : AndroidUtilities.dp(size));
     }
@@ -139,4 +140,8 @@ private static int getSize(float size) {
     public static LinearLayout.LayoutParams createLinear(int width, int height) {
         return new LinearLayout.LayoutParams(getSize(width), getSize(height));
     }
+
+    public static ViewGroup.MarginLayoutParams createMargin(int width, int height) {
+        return new ViewGroup.MarginLayoutParams(getSize(width), getSize(height));
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
index 39298444d..239ff3104 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
@@ -439,7 +439,7 @@ public void hide(boolean hide) {
 
         AnimatorSet animatorSet = new AnimatorSet();
         animatorSet.playTogether(marginAnimator, tabMarginAnimator);
-        animatorSet.setDuration(200);
+        animatorSet.setDuration(100);
         animatorSet.setInterpolator(interpolator);
         animatorSet.start();
     }
diff --git a/TMessagesProj/src/main/res/layout/item_resource_content.xml b/TMessagesProj/src/main/res/layout/item_resource_content.xml
index 2c5e34548..ce60914c2 100644
--- a/TMessagesProj/src/main/res/layout/item_resource_content.xml
+++ b/TMessagesProj/src/main/res/layout/item_resource_content.xml
@@ -1,57 +1,65 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="wrap_content"
-              android:orientation="horizontal"
-              android:layout_margin="4dp"
-              android:clickable="true"
-              android:focusable="true">
-
-    <ImageView
-            android:id="@+id/imageResource"
-            android:layout_width="32dp"
-            android:layout_height="32dp"
-            android:layout_marginStart="16dp"
-            android:layout_marginEnd="4dp"
-            android:layout_marginTop="4dp"
-            android:layout_marginBottom="4dp"
-            android:layout_gravity="center"
-            tools:ignore="ContentDescription"
-            android:clickable="false"
-            android:focusable="false"/>
+<FrameLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:tools="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
 
     <LinearLayout
+            android:id="@+id/layoutContent"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:layout_marginTop="4dp"
-            android:layout_marginBottom="4dp"
-            android:layout_gravity="center"
-            android:orientation="vertical"
-            android:clickable="false"
-            android:focusable="false">
-
-        <TextView
-                android:id="@+id/textName"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:textSize="18sp"
-                android:textColor="@android:color/black"
-                android:layout_gravity="center|start"
+            android:orientation="horizontal"
+            android:layout_margin="4dp"
+            android:clickable="true"
+            android:focusable="true">
+
+        <ImageView
+                android:id="@+id/imageResource"
+                android:layout_width="32dp"
+                android:layout_height="32dp"
+                android:layout_marginStart="16dp"
+                android:layout_marginEnd="4dp"
+                android:layout_marginTop="4dp"
+                android:layout_marginBottom="4dp"
+                android:layout_gravity="center"
+                tools:ignore="ContentDescription"
                 android:clickable="false"
                 android:focusable="false"/>
 
-        <TextView
-                android:id="@+id/textDesc"
-                android:layout_width="wrap_content"
+        <LinearLayout
+                android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textColor="@android:color/darker_gray"
-                android:ellipsize="end"
-                android:layout_gravity="center|start"
+                android:layout_marginTop="4dp"
+                android:layout_marginBottom="4dp"
+                android:layout_gravity="center"
+                android:orientation="vertical"
                 android:clickable="false"
-                android:focusable="false"/>
+                android:focusable="false">
+
+            <TextView
+                    android:id="@+id/textName"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textSize="18sp"
+                    android:textColor="@android:color/black"
+                    android:layout_gravity="center|start"
+                    android:clickable="false"
+                    android:focusable="false"/>
+
+            <TextView
+                    android:id="@+id/textDesc"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textSize="14sp"
+                    android:textColor="@android:color/darker_gray"
+                    android:ellipsize="end"
+                    android:layout_gravity="center|start"
+                    android:clickable="false"
+                    android:focusable="false"/>
+
+        </LinearLayout>
 
     </LinearLayout>
 
-</LinearLayout>
\ No newline at end of file
+</FrameLayout>
\ No newline at end of file
diff --git a/shinebuttonlib/src/main/java/com/sackcentury/shinebuttonlib/ShineButton.java b/shinebuttonlib/src/main/java/com/sackcentury/shinebuttonlib/ShineButton.java
index d46803ce9..3f452d7ec 100644
--- a/shinebuttonlib/src/main/java/com/sackcentury/shinebuttonlib/ShineButton.java
+++ b/shinebuttonlib/src/main/java/com/sackcentury/shinebuttonlib/ShineButton.java
@@ -38,7 +38,7 @@
     DisplayMetrics metrics = new DisplayMetrics();
 
 
-    Activity activity;
+    public Activity activity;
     ShineView shineView;
     ValueAnimator shakeAnimator;
     ShineView.ShineParams shineParams = new ShineView.ShineParams();
