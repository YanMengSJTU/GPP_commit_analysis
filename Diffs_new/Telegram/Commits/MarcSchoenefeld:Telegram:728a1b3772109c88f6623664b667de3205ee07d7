diff --git a/TMessagesProj/jni/TgNetWrapper.cpp b/TMessagesProj/jni/TgNetWrapper.cpp
index da84f81e0..d56ebd4bf 100644
--- a/TMessagesProj/jni/TgNetWrapper.cpp
+++ b/TMessagesProj/jni/TgNetWrapper.cpp
@@ -72,11 +72,13 @@ bool check_utf8(const char *data, size_t len);
         }
         loadOperation = new FileLoadOperation(dc_id, id, volume_id, access_hash, local_id, (uint8_t *) keyBuff, (uint8_t *) ivBuff, extensionStr, version, size, destStr, tempStr);
         loadOperation->setDelegate([delegate](std::string path) {
+            // in case this ever gets uncommented, please fix this below here  
             jstring pathText = jniEnv->NewStringUTF(path.c_str());
-            if (delegate != nullptr) {
-                jniEnv->CallVoidMethod(delegate, jclass_FileLoadOperationDelegate_onFinished, pathText);
-            }
             if (pathText != nullptr) {
+                
+                if (delegate != nullptr) {
+                    jniEnv->CallVoidMethod(delegate, jclass_FileLoadOperationDelegate_onFinished, pathText);
+                }
                 jniEnv->DeleteLocalRef(pathText);
             }
         }, [delegate](FileLoadFailReason reason) {
@@ -206,6 +208,7 @@ void sendRequest(JNIEnv *env, jclass c, jint instanceNum, jlong object, jobject
                 errorText = jniEnv[instanceNum]->NewStringUTF("UTF-8 ERROR");
             }
         }
+        /* what if NewStringUTF returned null? */
         if (onComplete != nullptr) {
             jniEnv[instanceNum]->CallVoidMethod(onComplete, jclass_RequestDelegateInternal_run, ptr, errorCode, errorText, networkType);
         }
@@ -241,9 +244,9 @@ void bindRequestToGuid(JNIEnv *env, jclass c, jint instanceNum, jint requestToke
 
 void applyDatacenterAddress(JNIEnv *env, jclass c, jint instanceNum, jint datacenterId, jstring ipAddress, jint port) {
     const char *valueStr = env->GetStringUTFChars(ipAddress, 0);
-
+    
     ConnectionsManager::getInstance(instanceNum).applyDatacenterAddress((uint32_t) datacenterId, std::string(valueStr), (uint32_t) port);
-
+    /** check too late **/
     if (valueStr != 0) {
         env->ReleaseStringUTFChars(ipAddress, valueStr);
     }
@@ -256,7 +259,7 @@ void setProxySettings(JNIEnv *env, jclass c, jint instanceNum, jstring address,
     const char *secretStr = env->GetStringUTFChars(secret, 0);
 
     ConnectionsManager::getInstance(instanceNum).setProxySettings(addressStr, (uint16_t) port, usernameStr, passwordStr, secretStr);
-
+    /** check too late **/ 
     if (addressStr != 0) {
         env->ReleaseStringUTFChars(address, addressStr);
     }
@@ -331,7 +334,7 @@ jlong checkProxy(JNIEnv *env, jclass c, jint instanceNum, jstring address, jint
             jniEnv[instanceNum]->CallVoidMethod(requestTimeFunc, jclass_RequestTimeDelegate_run, time);
         }
     }, requestTimeFunc);
-
+    /** too late to check those, probably never executed due to prior np-deref */ 
     if (addressStr != 0) {
         env->ReleaseStringUTFChars(address, addressStr);
     }
