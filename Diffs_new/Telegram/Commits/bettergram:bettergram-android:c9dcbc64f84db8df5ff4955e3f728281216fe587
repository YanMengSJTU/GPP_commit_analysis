diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 440a5fa80..29af54cbf 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -38,9 +38,6 @@ dependencies {
     implementation("com.squareup.picasso:picasso:$rootProject.picassoVersion") {
         exclude group: 'com.android.support', module: 'support-annotations'
     }
-    implementation("com.rometools:rome:$rootProject.romVersion") {
-        exclude group: 'org.apache.commons', module: 'commons-lang3'
-    }
     implementation project(path: ':inline-youtube-view')
     implementation(project(path: ":shinebuttonlib")) {
         exclude group: 'com.android.support', module: 'appcompat-v7'
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
index 643210c5d..60b2b8191 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
@@ -276,7 +276,7 @@ public void onPageSelected(int position) {
                         LayoutHelper.createLinear(32, 32, Gravity.CENTER, 16, 0, 4, 0));
 
                 TextView cryptoName = new TextView(context);
-                cryptoName.setTypeface(Typeface.DEFAULT_BOLD);
+                cryptoName.setTypeface(Typeface.DEFAULT);
                 cryptoName.setMaxLines(1);
                 cryptoName.setTextColor(Theme.getColor(Theme.key_crypto_page_labelColor));
                 cryptoName.setTextSize(14);
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
index 131e7717a..ad569e20a 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/NewsDataService.java
@@ -4,24 +4,17 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 
-import com.rometools.rome.feed.synd.SyndEntry;
-import com.rometools.rome.feed.synd.SyndFeed;
-import com.rometools.rome.io.FeedException;
-import com.rometools.rome.io.SyndFeedInput;
-import com.rometools.rome.io.XmlReader;
-
 import org.json.JSONException;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
+import org.jsoup.parser.Parser;
 import org.jsoup.select.Elements;
 
-import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
 import java.net.URL;
-import java.nio.charset.StandardCharsets;
 import java.security.NoSuchAlgorithmException;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -120,31 +113,31 @@ protected void onHandleIntent(Intent intent) {
                         break;
                     }
 
-                    InputStream stream = new ByteArrayInputStream(xmlFinal.getBytes(StandardCharsets.UTF_8));
-
-                    SyndFeed feed = new SyndFeedInput().build(new XmlReader(stream, "text/xml"));
-
                     List<News> temp = new ArrayList<>();
 
-                    for (int j = 0, size_j = feed.getEntries().size(); j < size_j; j++) {
-                        SyndEntry entry = feed.getEntries().get(j);
-                        News newsItem = new News();
-                        newsItem.title = entry.getTitle();
-
-                        Source newsSource = new Source();
-                        newsSource.name = feed.getTitle();
-                        newsItem.source = newsSource;
-
-                        SyndFeed source = entry.getSource();
-
-                        newsItem.url = entry.getLink();
-                        newsItem.urlToImage = source != null ? source.getImage().getUrl() : null;
-
-                        newsItem.publishedAt = entry.getPublishedDate().toString();
-
-                        temp.add(newsItem);
+                    Document document = Jsoup.parse(xmlFinal, "", Parser.xmlParser());
+                    Elements channelElements = document.getElementsByTag("channel");
+                    if (channelElements != null && channelElements.size() > 0) {
+                        Elements itemElements = channelElements.get(0).getElementsByTag("item");
+                        for (Element itemElement : itemElements) {
+                            News newsItem = new News();
+                            newsItem.title = itemElement
+                                    .getElementsByTag("title")
+                                    .html();
+                            newsItem.url = itemElement
+                                    .getElementsByTag("link")
+                                    .html();
+                            newsItem.source = new Source();
+                            newsItem.source.name = channelElements
+                                    .get(0)
+                                    .getElementsByTag("title")
+                                    .html();
+                            newsItem.publishedAt = itemElement
+                                    .getElementsByTag("pubDate")
+                                    .html();
+                            temp.add(newsItem);
+                        }
                     }
-
                     articles.addAll(temp);
                 }
 
@@ -153,7 +146,7 @@ protected void onHandleIntent(Intent intent) {
                 if (isEmpty(jsonRaw)) {
                     publishResults(NewsList__JsonHelper.serializeToJson(newsList), NOTIFICATION, RESULT);
                 }
-            } catch (IOException | JSONException | FeedException e) {
+            } catch (IOException | JSONException e) {
                 e.printStackTrace();
             }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java
index 4a61200e8..bc11658c4 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/ResourcesDataService.java
@@ -1,17 +1,29 @@
 package io.bettergram.service;
 
+import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.support.annotation.Nullable;
-import io.bettergram.service.api.ResourcesApi;
+
 import org.json.JSONException;
 
 import java.io.IOException;
 
+import io.bettergram.service.api.ResourcesApi;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+
+import static android.text.TextUtils.isEmpty;
+
 public class ResourcesDataService extends BaseDataService {
 
+    public static final String RESOURCES_PREFERENCES = "RESOURCES_PREFERENCES";
+    public static final String KEY_RESOURCES_JSON = "KEY_RESOURCES_JSON";
+
     public static final String RESULT = "result";
     public static final String NOTIFICATION = "io.bettergram.service.ResourcesDataService";
 
+    private SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(RESOURCES_PREFERENCES, Context.MODE_PRIVATE);
+
     public ResourcesDataService() {
         super("ResourcesDataService");
     }
@@ -19,7 +31,15 @@ public ResourcesDataService() {
     @Override
     protected void onHandleIntent(@Nullable Intent intent) {
         try {
-            String json = ResourcesApi.getResourcesQuietly();
+            String json = preferences.getString(KEY_RESOURCES_JSON, null);
+            if (!isEmpty(json)) {
+                publishResults(json, NOTIFICATION, RESULT);
+            }
+
+            json = ResourcesApi.getResourcesQuietly();
+            if (!isEmpty(json)) {
+                preferences.edit().putString(KEY_RESOURCES_JSON, json).apply();
+            }
             publishResults(json, NOTIFICATION, RESULT);
         } catch (IOException | JSONException e) {
             e.printStackTrace();
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
index 02c32b6c2..2f3a8dd79 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/YoutubeDataService.java
@@ -3,27 +3,29 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.util.Log;
-import com.rometools.rome.feed.synd.SyndEntry;
-import com.rometools.rome.feed.synd.SyndFeed;
-import com.rometools.rome.io.FeedException;
-import com.rometools.rome.io.SyndFeedInput;
-import com.rometools.rome.io.XmlReader;
-import io.bettergram.data.VideoData;
-import io.bettergram.data.VideoData__JsonHelper;
-import io.bettergram.messenger.R;
-import io.bettergram.service.api.VideosApi;
-import org.json.JSONArray;
+
 import org.json.JSONException;
-import org.json.JSONObject;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.parser.Parser;
 
 import java.io.IOException;
-import java.net.URL;
-import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.List;
 
+import io.bettergram.data.Video;
+import io.bettergram.data.VideoData;
+import io.bettergram.data.VideoData__JsonHelper;
+import io.bettergram.data.VideoList;
+import io.bettergram.data.VideoList__JsonHelper;
+import io.bettergram.service.api.VideosApi;
+import io.bettergram.utils.Counter;
+import okhttp3.Request;
+import okhttp3.Response;
+
 import static android.text.TextUtils.isEmpty;
+import static io.bettergram.telegram.messenger.ApplicationLoader.okhttp_client;
 
 public class YoutubeDataService extends BaseDataService {
 
@@ -55,34 +57,57 @@ protected void onHandleIntent(Intent intent) {
             publishResults(jsonRaw, NOTIFICATION, RESULT);
         }
 
-        String apiKey = getString(R.string.youtube_api_key);
+        //String apiKey = getString(R.string.youtube_api_key);
         try {
             VideoData videoData = VideoData__JsonHelper.parseFromJson(VideosApi.getYoutubeRSSFeed());
 
-            for (String video : videoData.videos) {
-                SyndFeed feed = new SyndFeedInput().build(new XmlReader(new URL(video)));
-                for (SyndEntry entry : feed.getEntries()) {
-                    videoIds.add(entry.getUri().replace("yt:video:", ""));
+            VideoList videoList = new VideoList();
+            videoList.videos = new ArrayList<>();
+
+            for (String videoUrl : videoData.videos) {
+                Request request = new Request.Builder()
+                        .url(videoUrl)
+                        .build();
+
+                Response response = okhttp_client().newCall(request).execute();
+
+                if (response.body() != null && response.isSuccessful()) {
+                    String result = response.body().string();
+                    Document document = Jsoup.parse(result, "", Parser.xmlParser());
+                    for (Element element : document.getElementsByTag("entry")) {
+
+                        Video video = new Video();
+                        video.id = element
+                                .getElementsByTag("yt:videoId")
+                                .html();
+                        video.title = element
+                                .getElementsByTag("title")
+                                .html();
+                        video.channelTitle = element
+                                .getElementsByTag("author")
+                                .get(0)
+                                .getElementsByTag("name")
+                                .html();
+                        video.viewCount = Counter.format(element
+                                .getElementsByTag("media:group")
+                                .get(0)
+                                .getElementsByTag("media:community")
+                                .get(0)
+                                .getElementsByTag("media:statistics")
+                                .attr("views"));
+                        video.publishedAt = VideosApi.formatDate(element
+                                .getElementsByTag("published")
+                                .html());
+                        videoList.videos.add(video);
+                    }
                 }
             }
 
-            JSONArray jsonArray = new JSONArray();
-
-            for (String videoId : videoIds) {
-                JSONObject jsonObject = new JSONObject(VideosApi.getDataQuietly(videoId, apiKey));
-                jsonArray.put(jsonObject);
-            }
-
-            JSONObject jsonObject = new JSONObject();
-
-            jsonObject.put("videos", jsonArray);
-            String jsonResult = jsonObject.toString();
-            Log.i(TAG, "json: " + jsonResult);
-
+            String jsonResult = VideoList__JsonHelper.serializeToJson(videoList);
             pref.edit().putString(KEY_VIDEO_JSON, jsonResult).apply();
 
             publishResults(jsonResult, NOTIFICATION, RESULT);
-        } catch (IOException | JSONException | FeedException | ParseException e) {
+        } catch (IOException | JSONException e) {
             e.printStackTrace();
         }
     }
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java b/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java
index 512417bc3..61a493c86 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/api/VideosApi.java
@@ -4,8 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
-import io.bettergram.utils.Counter;
-import io.bettergram.utils.io.IOUtils;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -19,6 +18,9 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import io.bettergram.utils.Counter;
+import io.bettergram.utils.io.IOUtils;
+
 public class VideosApi {
 
     @SuppressLint("SimpleDateFormat")
@@ -26,6 +28,8 @@
     //@formatter:off
     @SuppressLint("SimpleDateFormat")
     private static final SimpleDateFormat FROM_FORMAT = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
+    @SuppressLint("SimpleDateFormat")
+    private static final SimpleDateFormat FROM_FORMAT2 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
     //@formatter:on
     @SuppressLint("SimpleDateFormat")
     private static final SimpleDateFormat TO_FORMAT = new SimpleDateFormat("MMM dd, yyyy");
@@ -119,4 +123,14 @@ private static String formatDuration(String time) {
         return DURATION_FORMAT.format(date);
     }
 
+    @SuppressLint("SimpleDateFormat")
+    public static String formatDate(String publishedAt) {
+        try {
+            Date date = FROM_FORMAT2.parse(publishedAt);
+            return TO_FORMAT.format(date);
+        } catch (ParseException e) {
+            e.printStackTrace();
+            return "";
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/io/bettergram/utils/Counter.java b/TMessagesProj/src/main/java/io/bettergram/utils/Counter.java
index 5f89f703c..3304b7751 100644
--- a/TMessagesProj/src/main/java/io/bettergram/utils/Counter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/utils/Counter.java
@@ -6,35 +6,39 @@
 
 public class Counter {
 
-  private static final NavigableMap<Long, String> SUFFIXES = new TreeMap<>();
-
-  static {
-    SUFFIXES.put(1_000L, "k");
-    SUFFIXES.put(1_000_000L, "M");
-    SUFFIXES.put(1_000_000_000L, "G");
-    SUFFIXES.put(1_000_000_000_000L, "T");
-    SUFFIXES.put(1_000_000_000_000_000L, "P");
-    SUFFIXES.put(1_000_000_000_000_000_000L, "E");
-  }
-
-  public static String format(long value) {
-    //Long.MIN_VALUE == -Long.MIN_VALUE so we need an adjustment here
-    if (value == Long.MIN_VALUE) {
-      return format(Long.MIN_VALUE + 1);
-    }
-    if (value < 0) {
-      return "-" + format(-value);
+    private static final NavigableMap<Long, String> SUFFIXES = new TreeMap<>();
+
+    static {
+        SUFFIXES.put(1_000L, "k");
+        SUFFIXES.put(1_000_000L, "M");
+        SUFFIXES.put(1_000_000_000L, "G");
+        SUFFIXES.put(1_000_000_000_000L, "T");
+        SUFFIXES.put(1_000_000_000_000_000L, "P");
+        SUFFIXES.put(1_000_000_000_000_000_000L, "E");
     }
-    if (value < 1000) {
-      return Long.toString(value); //deal with easy case
+
+    public static String format(String value) {
+        return format(Long.valueOf(value));
     }
 
-    Entry<Long, String> e = SUFFIXES.floorEntry(value);
-    Long divideBy = e.getKey();
-    String suffix = e.getValue();
+    public static String format(long value) {
+        //Long.MIN_VALUE == -Long.MIN_VALUE so we need an adjustment here
+        if (value == Long.MIN_VALUE) {
+            return format(Long.MIN_VALUE + 1);
+        }
+        if (value < 0) {
+            return "-" + format(-value);
+        }
+        if (value < 1000) {
+            return Long.toString(value); //deal with easy case
+        }
 
-    long truncated = value / (divideBy / 10); //the number part of the output times 10
-    boolean hasDecimal = truncated < 100 && (truncated / 10d) != (truncated / 10);
-    return hasDecimal ? (truncated / 10d) + suffix : (truncated / 10) + suffix;
-  }
+        Entry<Long, String> e = SUFFIXES.floorEntry(value);
+        Long divideBy = e.getKey();
+        String suffix = e.getValue();
+
+        long truncated = value / (divideBy / 10); //the number part of the output times 10
+        boolean hasDecimal = truncated < 100 && (truncated / 10d) != (truncated / 10);
+        return hasDecimal ? (truncated / 10d) + suffix : (truncated / 10) + suffix;
+    }
 }
