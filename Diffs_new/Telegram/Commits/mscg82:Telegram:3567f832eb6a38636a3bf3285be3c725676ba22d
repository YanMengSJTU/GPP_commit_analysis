diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 6c3831ef2..105028c2d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -37,10 +37,9 @@
 import org.json.JSONObject;
 import org.telegram.objects.MessageObject;
 import org.telegram.objects.PhotoObject;
-import org.telegram.objects.VibrationSpeed;
-import org.telegram.ui.Dialog.VibrationCountDialog;
-import org.telegram.ui.LaunchActivity;
+import org.telegram.objects.VibrationOptions;
 import org.telegram.ui.ApplicationLoader;
+import org.telegram.ui.LaunchActivity;
 
 import java.io.File;
 import java.math.BigInteger;
@@ -4512,14 +4511,14 @@ private void showInAppNotification(MessageObject messageObject) {
                 needVibrate = false;
             }
 
-            VibrationSpeed speed = VibrationSpeed.getDefault();
-            int vibrationCount = VibrationCountDialog.DEFAULT_VIBRATION_COUNT;
+            VibrationOptions.VibrationSpeed speed = VibrationOptions.VibrationSpeed.getDefault();
+            int vibrationCount = VibrationOptions.DEFAULT_VIBRATION_COUNT;
             if(needVibrate) {
                 if (chat_id != 0) {
-                    speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                    speed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
                     vibrationCount = preferences.getInt("VibrationCountGroup", vibrationCount);
                 } else if (user_id != 0) {
-                    speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                    speed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
                     vibrationCount = preferences.getInt("VibrationCount", vibrationCount);
                 }
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/VibrationOptions.java b/TMessagesProj/src/main/java/org/telegram/objects/VibrationOptions.java
new file mode 100644
index 000000000..77691aa27
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/objects/VibrationOptions.java
@@ -0,0 +1,57 @@
+/*
+ * This is the source code of Telegram for Android v. 1.3.2.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013.
+ */
+
+package org.telegram.objects;
+
+import org.telegram.messenger.R;
+
+public class VibrationOptions {
+
+    public static int DEFAULT_VIBRATION_COUNT = 2;
+
+    public static enum VibrationSpeed {
+        DEFAULT("VibrateSpeedDefault", R.string.VibrateSpeedDefault),
+        FAST   ("VibrateSpeedFast",    R.string.VibrateSpeedFast),
+        MEDIUM ("VibrateSpeedMedium",  R.string.VibrateSpeedMedium),
+        SLOW   ("VibrateSpeedSlow",    R.string.VibrateSpeedSlow);
+
+        private int value;
+        private String localeKey;
+        private int resourceId;
+
+        VibrationSpeed(String localeKey, int resourceId) {
+            this.value = this.ordinal();
+            this.localeKey = localeKey;
+            this.resourceId = resourceId;
+        }
+
+        public int getValue() {
+            return value;
+        }
+
+        public String getLocaleKey() {
+            return localeKey;
+        }
+
+        public int getResourceId() {
+            return resourceId;
+        }
+
+        public static VibrationSpeed getDefault() {
+            return DEFAULT;
+        }
+
+        public static VibrationSpeed fromValue(int value) {
+            for (VibrationSpeed val : VibrationSpeed.values()) {
+                if(val.value == value)
+                    return val;
+            }
+            return getDefault();
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/VibrationSpeed.java b/TMessagesProj/src/main/java/org/telegram/objects/VibrationSpeed.java
deleted file mode 100644
index cb9f5f336..000000000
--- a/TMessagesProj/src/main/java/org/telegram/objects/VibrationSpeed.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 1.3.2.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013.
- */
-
-package org.telegram.objects;
-
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.R;
-
-public enum VibrationSpeed {
-    DEFAULT("VibrateSpeedDefault", R.string.VibrateSpeedDefault),
-    FAST   ("VibrateSpeedFast",    R.string.VibrateSpeedFast),
-    MEDIUM ("VibrateSpeedMedium",  R.string.VibrateSpeedMedium),
-    SLOW   ("VibrateSpeedSlow",    R.string.VibrateSpeedSlow);
-
-    private int value;
-    private String localeKey;
-    private int resourceId;
-
-    VibrationSpeed(String localeKey, int resourceId) {
-        this.value = this.ordinal();
-        this.localeKey = localeKey;
-        this.resourceId = resourceId;
-    }
-
-    public int getValue() {
-        return value;
-    }
-
-    public String getLocaleKey() {
-        return localeKey;
-    }
-
-    public int getResourceId() {
-        return resourceId;
-    }
-
-    public static VibrationSpeed getDefault() {
-        return DEFAULT;
-    }
-
-    public static VibrationSpeed fromValue(int value) {
-        for (VibrationSpeed val : values()) {
-            if(val.value == value)
-                return val;
-        }
-        return getDefault();
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationCountDialog.java b/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationCountDialog.java
deleted file mode 100644
index bc7877b7c..000000000
--- a/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationCountDialog.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 1.3.2.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013.
- */
-
-package org.telegram.ui.Dialog;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.R;
-import org.telegram.objects.VibrationSpeed;
-
-import java.io.Serializable;
-
-public class VibrationCountDialog extends DialogFragment {
-
-    public static final int DEFAULT_VIBRATION_COUNT = 2;
-    public static final String KEY_CURRENT_COUNT = "currentCount";
-    public static final String KEY_LISTENER = "mListener";
-
-    public static interface VibrationCountSelectionListener extends Serializable {
-        public void onCountSelected(DialogFragment dialog, int selectedCount);
-    }
-
-    private int count;
-    private VibrationCountSelectionListener mListener;
-
-    public VibrationCountDialog() {
-        count = DEFAULT_VIBRATION_COUNT;
-    }
-
-    @Override
-    public void setArguments(Bundle args) {
-        super.setArguments(args);
-
-        count = args.getInt(KEY_CURRENT_COUNT, DEFAULT_VIBRATION_COUNT);
-        try {
-            mListener = (VibrationCountSelectionListener) args.get(KEY_LISTENER);
-        } catch (ClassCastException e) {}
-    }
-
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-        if(mListener == null) {
-            // Verify that the host activity implements the callback interface
-            try {
-                mListener = (VibrationCountSelectionListener) activity;
-            } catch (ClassCastException e) {
-                // The activity doesn't implement the interface, throw exception
-                throw new ClassCastException(activity.toString() + " must implement VibrationCountSelectionListener");
-            }
-        }
-    }
-
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        String counts[] = new String[10];
-        for(int i = 0, l = counts.length; i < l; i++)
-            counts[i] = String.valueOf(i + 1);
-
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
-            .setTitle(LocaleController.getString("VibrateCountTitle", R.string.VibrateCountTitle))
-            .setSingleChoiceItems(counts, count - 1, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    mListener.onCountSelected(VibrationCountDialog.this, which + 1);
-
-                    VibrationCountDialog.this.dismiss();
-                }
-            });
-
-        return builder.create();
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationSpeedDialog.java b/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationSpeedDialog.java
deleted file mode 100644
index b3a91cbdf..000000000
--- a/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationSpeedDialog.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/*
- * This is the source code of Telegram for Android v. 1.3.2.
- * It is licensed under GNU GPL v. 2 or later.
- * You should have received a copy of the license in this archive (see LICENSE).
- *
- * Copyright Nikolai Kudashov, 2013.
- */
-
-package org.telegram.ui.Dialog;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.R;
-import org.telegram.objects.VibrationSpeed;
-
-import java.io.Serializable;
-
-public class VibrationSpeedDialog extends DialogFragment {
-
-    public static final String KEY_CURRENT_SPEED = "currentSpeed";
-    public static final String KEY_LISTENER = "mListener";
-
-    public static interface VibrationSpeedSelectionListener extends Serializable {
-        public void onSpeedSelected(DialogFragment dialog, VibrationSpeed selectedSpeed);
-    }
-
-    private VibrationSpeedSelectionListener mListener;
-    private VibrationSpeed currentSpeed;
-
-    public VibrationSpeedDialog() {
-        this.currentSpeed = VibrationSpeed.getDefault();
-    }
-
-    @Override
-    public void setArguments(Bundle args) {
-        super.setArguments(args);
-
-        try {
-            this.currentSpeed = (VibrationSpeed) args.get(KEY_CURRENT_SPEED);
-        } catch (ClassCastException e) {}
-
-        try {
-            this.mListener = (VibrationSpeedSelectionListener) args.get(KEY_LISTENER);
-        } catch (ClassCastException e) {}
-    }
-
-    @Override
-    public void onAttach(Activity activity) {
-        super.onAttach(activity);
-        if(mListener == null) {
-            // Verify that the host activity implements the callback interface
-            try {
-                mListener = (VibrationSpeedSelectionListener) activity;
-            } catch (ClassCastException e) {
-                // The activity doesn't implement the interface, throw exception
-                throw new ClassCastException(activity.toString() + " must implement VibrationSpeedSelectionListener");
-            }
-        }
-    }
-
-    @Override
-    public Dialog onCreateDialog(Bundle savedInstanceState) {
-        VibrationSpeed[] vibrationSpeeds = VibrationSpeed.values();
-        String speeds[] = new String[vibrationSpeeds.length];
-        for(int i = 0, l = vibrationSpeeds.length; i < l; i++) {
-            VibrationSpeed speed = vibrationSpeeds[i];
-            speeds[i] = LocaleController.getString(speed.getLocaleKey(), speed.getResourceId());
-        }
-
-        int currentSpeedIndex = currentSpeed.getValue();
-
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
-            .setTitle(LocaleController.getString("VibrateSpeedTitle", R.string.VibrateSpeedTitle))
-            .setSingleChoiceItems(speeds, currentSpeedIndex, new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialog, int which) {
-                    VibrationSpeed speed = VibrationSpeed.fromValue(which);
-
-                    mListener.onSpeedSelected(VibrationSpeedDialog.this, speed);
-
-                    VibrationSpeedDialog.this.dismiss();
-                }
-            });
-
-        return builder.create();
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
index 644dca564..132802abe 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
@@ -9,8 +9,9 @@
 package org.telegram.ui;
 
 import android.app.Activity;
-import android.app.Dialog;
+import android.app.AlertDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.media.Ringtone;
@@ -18,7 +19,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.provider.Settings;
-import android.support.v4.app.DialogFragment;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarActivity;
 import android.view.LayoutInflater;
@@ -32,18 +32,16 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.TLObject;
-import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
+import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
+import org.telegram.messenger.TLObject;
+import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.Utilities;
-import org.telegram.objects.VibrationSpeed;
-import org.telegram.ui.Dialog.VibrationCountDialog;
-import org.telegram.ui.Dialog.VibrationSpeedDialog;
+import org.telegram.objects.VibrationOptions;
 import org.telegram.ui.Views.BaseFragment;
 import org.telegram.ui.Views.OnSwipeTouchListener;
 
@@ -169,57 +167,76 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                     } else if (i == messageVibrationSpeedRow || i == groupVibrationSpeedRow) {
                         final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         final int index = i;
-                        VibrationSpeed speed = VibrationSpeed.getDefault();
+                        VibrationOptions.VibrationSpeed currentSpeed = VibrationOptions.VibrationSpeed.getDefault();
                         if (index == messageVibrationSpeedRow) {
-                            speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                            currentSpeed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
                         } else if (index == groupVibrationSpeedRow) {
-                            speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                            currentSpeed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
                         }
-                        VibrationSpeedDialog vibrationSpeedDialog = new VibrationSpeedDialog();
-                        Bundle args = new Bundle();
-                        args.putSerializable(VibrationSpeedDialog.KEY_CURRENT_SPEED, speed);
-                        args.putSerializable(VibrationSpeedDialog.KEY_LISTENER, new VibrationSpeedDialog.VibrationSpeedSelectionListener() {
-                            @Override
-                            public void onSpeedSelected(DialogFragment dialog, VibrationSpeed selectedSpeed) {
-                                SharedPreferences.Editor editor = preferences.edit();
-                                if (index == messageVibrationSpeedRow) {
-                                    editor.putInt("VibrationSpeed", selectedSpeed.getValue());
-                                } else if (index == groupVibrationSpeedRow) {
-                                    editor.putInt("VibrationSpeedGroup", selectedSpeed.getValue());
+
+                        VibrationOptions.VibrationSpeed[] vibrationSpeeds = VibrationOptions.VibrationSpeed.values();
+                        String speeds[] = new String[vibrationSpeeds.length];
+                        for(int j = 0, vl = vibrationSpeeds.length; j < vl; j++) {
+                            VibrationOptions.VibrationSpeed speedVal = vibrationSpeeds[j];
+                            speeds[j] = LocaleController.getString(speedVal.getLocaleKey(), speedVal.getResourceId());
+                        }
+                        int currentSpeedIndex = currentSpeed.getValue();
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity)
+                            .setTitle(LocaleController.getString("VibrateSpeedTitle", R.string.VibrateSpeedTitle))
+                            .setSingleChoiceItems(speeds, currentSpeedIndex, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    VibrationOptions.VibrationSpeed selectedSpeed = VibrationOptions.VibrationSpeed.fromValue(which);
+
+                                    SharedPreferences.Editor editor = preferences.edit();
+                                    if (index == messageVibrationSpeedRow) {
+                                        editor.putInt("VibrationSpeed", selectedSpeed.getValue());
+                                    } else if (index == groupVibrationSpeedRow) {
+                                        editor.putInt("VibrationSpeedGroup", selectedSpeed.getValue());
+                                    }
+                                    editor.commit();
+                                    listView.invalidateViews();
+
+                                    dialog.dismiss();
                                 }
-                                editor.commit();
-                                listView.invalidateViews();
-                            }
-                        });
-                        vibrationSpeedDialog.setArguments(args);
-                        vibrationSpeedDialog.show(getFragmentManager(), "VibrationSpeedDialog");
+                            })
+                            .setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
                     } else if (i == messageVibrationCountRow || i == groupVibrationCountRow) {
                         final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         final int index = i;
-                        int count = VibrationCountDialog.DEFAULT_VIBRATION_COUNT;
+                        int count = VibrationOptions.DEFAULT_VIBRATION_COUNT;
                         if (index == messageVibrationCountRow) {
                             count = preferences.getInt("VibrationCount", count);
                         } else if (index == groupVibrationCountRow) {
                             count = preferences.getInt("VibrationCountGroup", count);
                         }
-                        VibrationCountDialog vibrationCountDialog = new VibrationCountDialog();
-                        Bundle args = new Bundle();
-                        args.putInt(VibrationCountDialog.KEY_CURRENT_COUNT, count);
-                        args.putSerializable(VibrationCountDialog.KEY_LISTENER, new VibrationCountDialog.VibrationCountSelectionListener() {
-                            @Override
-                            public void onCountSelected(DialogFragment dialog, int selectedCount) {
-                                SharedPreferences.Editor editor = preferences.edit();
-                                if (index == messageVibrationCountRow) {
-                                    editor.putInt("VibrationCount", selectedCount);
-                                } else if (index == groupVibrationCountRow) {
-                                    editor.putInt("VibrationCountGroup", selectedCount);
+
+                        String counts[] = new String[10];
+                        for(int j = 0, vl = counts.length; j < vl; j++)
+                            counts[j] = String.valueOf(j + 1);
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
+                            .setTitle(LocaleController.getString("VibrateCountTitle", R.string.VibrateCountTitle))
+                            .setSingleChoiceItems(counts, count - 1, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    int selectedCount = which + 1;
+
+                                    SharedPreferences.Editor editor = preferences.edit();
+                                    if (index == messageVibrationCountRow) {
+                                        editor.putInt("VibrationCount", selectedCount);
+                                    } else if (index == groupVibrationCountRow) {
+                                        editor.putInt("VibrationCountGroup", selectedCount);
+                                    }
+                                    editor.commit();
+                                    listView.invalidateViews();
+
+                                    dialog.dismiss();
                                 }
-                                editor.commit();
-                                listView.invalidateViews();
-                            }
-                        });
-                        vibrationCountDialog.setArguments(args);
-                        vibrationCountDialog.show(getFragmentManager(), "VibrateCountDialog");
+                            }).setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
                     } else if (i == messageSoundRow || i == groupSoundRow) {
                         try {
                             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
@@ -614,17 +631,17 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     textView.setText(LocaleController.getString("Sound", R.string.Sound));
                     divider.setVisibility(View.INVISIBLE);
                 } else if (i == messageVibrationSpeedRow || i == groupVibrationSpeedRow) {
-                    VibrationSpeed speed = VibrationSpeed.getDefault();
+                    VibrationOptions.VibrationSpeed speed = VibrationOptions.VibrationSpeed.getDefault();
                     if (i == messageVibrationSpeedRow) {
-                        speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                        speed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
                     } else if (i == groupVibrationSpeedRow) {
-                        speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                        speed = VibrationOptions.VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
                     }
                     textViewDetail.setText(LocaleController.getString(speed.getLocaleKey(), speed.getResourceId()));
                     textView.setText(LocaleController.getString("VibrateSpeed", R.string.VibrateSpeed));
                     divider.setVisibility(View.VISIBLE);
                 }  else if (i == messageVibrationCountRow || i == groupVibrationCountRow) {
-                    int count = VibrationCountDialog.DEFAULT_VIBRATION_COUNT;
+                    int count = VibrationOptions.DEFAULT_VIBRATION_COUNT;
                     if (i == messageVibrationCountRow) {
                         count = preferences.getInt("VibrationCount", count);
                     } else if (i == groupVibrationCountRow) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java
index f46b55347..a43807df0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java
@@ -22,7 +22,7 @@
 import org.telegram.ui.LaunchActivity;
 import org.telegram.ui.ApplicationLoader;
 
-public class BaseFragment extends DialogFragment {
+public class BaseFragment extends Fragment {
     public int animationType = 0;
     public boolean isFinish = false;
     public View fragmentView;
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index ae7c21d0e..3d2a19dc5 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -271,8 +271,8 @@
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
     <string name="DeleteLocalization">Eliminare la localizzazione?</string>
     <string name="IncorrectLocalization">File della localizzazione non valido</string>
-    <string name="Enabled">Enabled</string>
-    <string name="Disabled">Disabled</string>
+    <string name="Enabled">Abilitato</string>
+    <string name="Disabled">Disabilitato</string>
 
     <!--media view-->
     <string name="NoMedia">Nessun media condiviso</string>
