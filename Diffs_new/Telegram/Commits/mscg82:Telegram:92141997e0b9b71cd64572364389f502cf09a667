diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 5b8e7c519..d5e762c2f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -37,6 +37,7 @@
 import org.json.JSONObject;
 import org.telegram.objects.MessageObject;
 import org.telegram.objects.PhotoObject;
+import org.telegram.objects.VibrationSpeed;
 import org.telegram.ui.LaunchActivity;
 import org.telegram.ui.ApplicationLoader;
 
@@ -4558,14 +4559,17 @@ private void showInAppNotification(MessageObject messageObject) {
             }
 
             boolean needVibrate = false;
+            VibrationSpeed speed = VibrationSpeed.getDefault();
 
             if (user_id != 0) {
                 userSoundPath = preferences.getString("sound_path_" + user_id, null);
                 needVibrate = globalVibrate;
+                speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
             }
             if (chat_id != 0) {
                 chatSoundPath = preferences.getString("sound_chat_path_" + chat_id, null);
                 needVibrate = groupVibrate;
+                speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
             }
 
             String choosenSoundPath = null;
@@ -4606,8 +4610,23 @@ private void showInAppNotification(MessageObject messageObject) {
                 }
             }
 
+            int notificationDefaults = 0;
+
             if (needVibrate) {
-                mBuilder.setVibrate(new long[]{0, 100, 0, 100});
+                switch (speed) {
+                    case FAST:
+                        mBuilder.setVibrate(new long[]{0, 100, 0, 100});
+                        break;
+                    case MEDIUM:
+                        mBuilder.setVibrate(new long[]{0, 300, 200, 300});
+                        break;
+                    case SLOW:
+                        mBuilder.setVibrate(new long[]{0, 800, 200, 800});
+                        break;
+                    case DEFAULT:
+                    default:
+                        notificationDefaults = notificationDefaults | Notification.DEFAULT_VIBRATE;
+                }
             }
             if (choosenSoundPath != null && !choosenSoundPath.equals("NoSound")) {
                 if (choosenSoundPath.equals(defaultPath)) {
@@ -4625,7 +4644,7 @@ private void showInAppNotification(MessageObject messageObject) {
             notification.ledOnMS = 1000;
             notification.ledOffMS = 1000;
             notification.flags |= Notification.FLAG_SHOW_LIGHTS;
-            notification.defaults = 0;
+            notification.defaults = notificationDefaults;
             try {
                 mNotificationManager.notify(1, notification);
                 if (preferences.getBoolean("EnablePebbleNotifications", false)) {
diff --git a/TMessagesProj/src/main/java/org/telegram/objects/VibrationSpeed.java b/TMessagesProj/src/main/java/org/telegram/objects/VibrationSpeed.java
new file mode 100644
index 000000000..cb9f5f336
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/objects/VibrationSpeed.java
@@ -0,0 +1,53 @@
+/*
+ * This is the source code of Telegram for Android v. 1.3.2.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013.
+ */
+
+package org.telegram.objects;
+
+import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+
+public enum VibrationSpeed {
+    DEFAULT("VibrateSpeedDefault", R.string.VibrateSpeedDefault),
+    FAST   ("VibrateSpeedFast",    R.string.VibrateSpeedFast),
+    MEDIUM ("VibrateSpeedMedium",  R.string.VibrateSpeedMedium),
+    SLOW   ("VibrateSpeedSlow",    R.string.VibrateSpeedSlow);
+
+    private int value;
+    private String localeKey;
+    private int resourceId;
+
+    VibrationSpeed(String localeKey, int resourceId) {
+        this.value = this.ordinal();
+        this.localeKey = localeKey;
+        this.resourceId = resourceId;
+    }
+
+    public int getValue() {
+        return value;
+    }
+
+    public String getLocaleKey() {
+        return localeKey;
+    }
+
+    public int getResourceId() {
+        return resourceId;
+    }
+
+    public static VibrationSpeed getDefault() {
+        return DEFAULT;
+    }
+
+    public static VibrationSpeed fromValue(int value) {
+        for (VibrationSpeed val : values()) {
+            if(val.value == value)
+                return val;
+        }
+        return getDefault();
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationSpeedDialog.java b/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationSpeedDialog.java
new file mode 100644
index 000000000..89d2adfd2
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Dialog/VibrationSpeedDialog.java
@@ -0,0 +1,83 @@
+/*
+ * This is the source code of Telegram for Android v. 1.3.2.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013.
+ */
+
+package org.telegram.ui.Dialog;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+
+import com.google.android.gms.internal.cu;
+
+import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.objects.VibrationSpeed;
+
+public class VibrationSpeedDialog extends DialogFragment {
+
+    public static interface VibrationSpeedSelectionListener {
+        public void onSpeedSelected(DialogFragment dialog, VibrationSpeed selectedSpeed);
+    }
+
+    private VibrationSpeedSelectionListener mListener;
+    private VibrationSpeed currentSpeed;
+
+    public VibrationSpeedDialog(VibrationSpeed currentSpeed) {
+        this(currentSpeed, null);
+    }
+
+    public VibrationSpeedDialog(VibrationSpeed currentSpeed, VibrationSpeedSelectionListener mListener) {
+        this.currentSpeed = currentSpeed;
+        this.mListener = mListener;
+    }
+
+    @Override
+    public void onAttach(Activity activity) {
+        super.onAttach(activity);
+        if(mListener == null) {
+            // Verify that the host activity implements the callback interface
+            try {
+                // Instantiate the NoticeDialogListener so we can send events to the host
+                mListener = (VibrationSpeedSelectionListener) activity;
+            } catch (ClassCastException e) {
+                // The activity doesn't implement the interface, throw exception
+                throw new ClassCastException(activity.toString() + " must implement VibrationSpeedSelectionListener");
+            }
+        }
+    }
+
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        VibrationSpeed[] vibrationSpeeds = VibrationSpeed.values();
+        String speeds[] = new String[vibrationSpeeds.length];
+        for(int i = 0, l = vibrationSpeeds.length; i < l; i++) {
+            VibrationSpeed speed = vibrationSpeeds[i];
+            speeds[i] = LocaleController.getString(speed.getLocaleKey(), speed.getResourceId());
+        }
+
+        int currentSpeedIndex = currentSpeed.getValue();
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
+            .setTitle(LocaleController.getString("VibrateSpeedTitle", R.string.VibrateSpeedTitle))
+            .setSingleChoiceItems(speeds, currentSpeedIndex, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    VibrationSpeed speed = VibrationSpeed.fromValue(which);
+
+                    mListener.onSpeedSelected(VibrationSpeedDialog.this, speed);
+
+                    VibrationSpeedDialog.this.dismiss();
+                }
+            });
+
+        return builder.create();
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
index d60750512..f02f9c2ce 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
@@ -9,6 +9,7 @@
 package org.telegram.ui;
 
 import android.app.Activity;
+import android.app.Dialog;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -17,6 +18,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.provider.Settings;
+import android.support.v4.app.DialogFragment;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarActivity;
 import android.view.LayoutInflater;
@@ -39,10 +41,40 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
 import org.telegram.messenger.Utilities;
+import org.telegram.objects.VibrationSpeed;
+import org.telegram.ui.Dialog.VibrationSpeedDialog;
 import org.telegram.ui.Views.BaseFragment;
 import org.telegram.ui.Views.OnSwipeTouchListener;
 
 public class SettingsNotificationsActivity extends BaseFragment {
+    private static final int TYPE_HEADER           = 0;
+    private static final int TYPE_BOOLEAN_SETTINGS = 1;
+    private static final int TYPE_INNER_SETTINGS   = 2;
+
+    private static int SETTINGS_COUNT = 0;
+    private static final int SETTINGS_MESSAGE_NOTIFICATIONS = SETTINGS_COUNT++; // 0
+    private static final int SETTINGS_MESSAGE_ALERT         = SETTINGS_COUNT++; // 1
+    private static final int SETTINGS_MESSAGE_PREVIEW       = SETTINGS_COUNT++; // 2
+    private static final int SETTINGS_MESSAGE_VIBRATE       = SETTINGS_COUNT++; // 3
+    private static final int SETTINGS_MESSAGE_VIBRATE_SPD   = SETTINGS_COUNT++; // 4
+    private static final int SETTINGS_MESSAGE_SOUND         = SETTINGS_COUNT++; // 5
+    private static final int SETTINGS_GROUP_NOTIFICATIONS   = SETTINGS_COUNT++; // 6
+    private static final int SETTINGS_GROUP_ALERT           = SETTINGS_COUNT++; // 7
+    private static final int SETTINGS_GROUP_PREVIEW         = SETTINGS_COUNT++; // 8
+    private static final int SETTINGS_GROUP_VIBRATE         = SETTINGS_COUNT++; // 9
+    private static final int SETTINGS_GROUP_VIBRATE_SPD     = SETTINGS_COUNT++; // 10
+    private static final int SETTINGS_GROUP_SOUND           = SETTINGS_COUNT++; // 11
+    private static final int SETTINGS_INAPP_NOTIFICATIONS   = SETTINGS_COUNT++; // 12
+    private static final int SETTINGS_INAPP_SOUND           = SETTINGS_COUNT++; // 13
+    private static final int SETTINGS_INAPP_VIBRATE         = SETTINGS_COUNT++; // 14
+    private static final int SETTINGS_INAPP_PREVIEW         = SETTINGS_COUNT++; // 15
+    private static final int SETTINGS_EVENTS                = SETTINGS_COUNT++; // 16
+    private static final int SETTINGS_CONTACT_JOINED        = SETTINGS_COUNT++; // 17
+    private static final int SETTINGS_PEBBLE                = SETTINGS_COUNT++; // 18
+    private static final int SETTINGS_PEBBLE_ALERT          = SETTINGS_COUNT++; // 19
+    private static final int SETTINGS_RESET                 = SETTINGS_COUNT++; // 20
+    private static final int SETTINGS_RESET_ALL             = SETTINGS_COUNT++; // 21
+
     private ListView listView;
     private boolean reseting = false;
 
@@ -62,47 +94,69 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (i == 1 || i == 6) {
+                    if (i == SETTINGS_MESSAGE_ALERT || i == SETTINGS_GROUP_ALERT) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled;
-                        if (i == 1) {
+                        if (i == SETTINGS_MESSAGE_ALERT) {
                             enabled = preferences.getBoolean("EnableAll", true);
                             editor.putBoolean("EnableAll", !enabled);
-                        } else if (i == 6) {
+                        } else if (i == SETTINGS_GROUP_ALERT) {
                             enabled = preferences.getBoolean("EnableGroup", true);
                             editor.putBoolean("EnableGroup", !enabled);
                         }
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 2 || i == 7) {
+                    } else if (i == SETTINGS_MESSAGE_PREVIEW || i == SETTINGS_GROUP_PREVIEW) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
-                        boolean enabledAll = true;
                         boolean enabled;
-                        if (i == 2) {
+                        if (i == SETTINGS_MESSAGE_PREVIEW) {
                             enabled = preferences.getBoolean("EnablePreviewAll", true);
                             editor.putBoolean("EnablePreviewAll", !enabled);
-                        } else if (i == 7) {
+                        } else if (i == SETTINGS_GROUP_PREVIEW) {
                             enabled = preferences.getBoolean("EnablePreviewGroup", true);
                             editor.putBoolean("EnablePreviewGroup", !enabled);
                         }
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 3 || i == 8) {
+                    } else if (i == SETTINGS_MESSAGE_VIBRATE || i == SETTINGS_GROUP_VIBRATE) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled;
-                        if (i == 3) {
+                        if (i == SETTINGS_MESSAGE_VIBRATE) {
                             enabled = preferences.getBoolean("EnableVibrateAll", true);
                             editor.putBoolean("EnableVibrateAll", !enabled);
-                        } else if (i == 8) {
+                        } else if (i == SETTINGS_GROUP_VIBRATE) {
                             enabled = preferences.getBoolean("EnableVibrateGroup", true);
                             editor.putBoolean("EnableVibrateGroup", !enabled);
                         }
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 4 || i == 9) {
+                    } else if (i == SETTINGS_MESSAGE_VIBRATE_SPD || i == SETTINGS_GROUP_VIBRATE_SPD) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        final int index = i;
+                        VibrationSpeed speed = VibrationSpeed.getDefault();
+                        if (index == SETTINGS_MESSAGE_VIBRATE_SPD) {
+                            speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                        } else if (index == SETTINGS_GROUP_VIBRATE_SPD) {
+                            speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                        }
+                        VibrationSpeedDialog vibrationSpeedDialog = new VibrationSpeedDialog(speed, new VibrationSpeedDialog.VibrationSpeedSelectionListener() {
+                            @Override
+                            public void onSpeedSelected(DialogFragment dialog, VibrationSpeed selectedSpeed) {
+                                SharedPreferences.Editor editor = preferences.edit();
+                                if (index == SETTINGS_MESSAGE_VIBRATE_SPD) {
+                                    editor.putInt("VibrationSpeed", selectedSpeed.getValue());
+                                } else if (index == SETTINGS_GROUP_VIBRATE_SPD) {
+                                    editor.putInt("VibrationSpeedGroup", selectedSpeed.getValue());
+                                }
+                                editor.commit();
+                                listView.invalidateViews();
+                            }
+                        });
+                        vibrationSpeedDialog.show(getFragmentManager(), "VibrationSpeedDialog");
+                    } else if (i == SETTINGS_MESSAGE_SOUND || i == SETTINGS_GROUP_SOUND) {
                         if (parentActivity == null) {
                             return;
                         }
@@ -120,7 +174,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                 defaultPath = defaultUri.getPath();
                             }
 
-                            if (i == 4) {
+                            if (i == SETTINGS_MESSAGE_SOUND) {
                                 String path = preferences.getString("GlobalSoundPath", defaultPath);
                                 if (path != null && !path.equals("NoSound")) {
                                     if (path.equals(defaultPath)) {
@@ -129,7 +183,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                         currentSound = Uri.parse(path);
                                     }
                                 }
-                            } else if (i == 9) {
+                            } else if (i == SETTINGS_GROUP_SOUND) {
                                 String path = preferences.getString("GroupSoundPath", defaultPath);
                                 if (path != null && !path.equals("NoSound")) {
                                     if (path.equals(defaultPath)) {
@@ -144,7 +198,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                    } else if (i == 19) {
+                    } else if (i == SETTINGS_RESET_ALL) {
                         if (reseting) {
                             return;
                         }
@@ -176,28 +230,28 @@ public void run() {
                                 });
                             }
                         }, null, true, RPCRequest.RPCRequestClassGeneric);
-                    } else if (i == 11) {
+                    } else if (i == SETTINGS_INAPP_SOUND) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableInAppSounds", true);
                         editor.putBoolean("EnableInAppSounds", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 12) {
+                    } else if (i == SETTINGS_INAPP_VIBRATE) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableInAppVibrate", true);
                         editor.putBoolean("EnableInAppVibrate", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 13) {
+                    } else if (i == SETTINGS_INAPP_PREVIEW) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableInAppPreview", true);
                         editor.putBoolean("EnableInAppPreview", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 15) {
+                    } else if (i == SETTINGS_CONTACT_JOINED) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableContactJoined", true);
@@ -205,7 +259,7 @@ public void run() {
                         editor.putBoolean("EnableContactJoined", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 17) {
+                    } else if (i == SETTINGS_PEBBLE_ALERT) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnablePebbleNotifications", false);
@@ -250,7 +304,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
             SharedPreferences.Editor editor = preferences.edit();
 
-            if (requestCode == 4) {
+            if (requestCode == SETTINGS_MESSAGE_SOUND) {
                 if (name != null && ringtone != null) {
                     editor.putString("GlobalSound", name);
                     editor.putString("GlobalSoundPath", ringtone.toString());
@@ -258,7 +312,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                     editor.putString("GlobalSound", "NoSound");
                     editor.putString("GlobalSoundPath", "NoSound");
                 }
-            } else if (requestCode == 9) {
+            } else if (requestCode == SETTINGS_GROUP_SOUND) {
                 if (name != null && ringtone != null) {
                     editor.putString("GroupSound", name);
                     editor.putString("GroupSoundPath", ringtone.toString());
@@ -341,17 +395,20 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-            boolean enabledAll = preferences.getBoolean("EnableAll", true);
-            if (i == 19 || i == 15) {
+            if (i == SETTINGS_RESET_ALL || i == SETTINGS_CONTACT_JOINED) {
                 return true;
             }
-            return !(i != 1 && !enabledAll && i != 13) && (i > 0 && i < 5 || i > 5 && i < 10 || i > 10 && i < 14) || i == 17;
+
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            boolean enabledAll = preferences.getBoolean("EnableAll", true);
+            return (enabledAll || i == SETTINGS_MESSAGE_ALERT || i == SETTINGS_INAPP_PREVIEW) &&
+                   (i > SETTINGS_MESSAGE_NOTIFICATIONS && i < SETTINGS_GROUP_NOTIFICATIONS || i > SETTINGS_GROUP_NOTIFICATIONS && i < SETTINGS_INAPP_NOTIFICATIONS || i > SETTINGS_INAPP_NOTIFICATIONS && i < SETTINGS_EVENTS) ||
+                   (i == SETTINGS_PEBBLE_ALERT);
         }
 
         @Override
         public int getCount() {
-            return 20;
+            return SETTINGS_COUNT;
         }
 
         @Override
@@ -372,26 +429,26 @@ public boolean hasStableIds() {
         @Override
         public View getView(int i, View view, ViewGroup viewGroup) {
             int type = getItemViewType(i);
-            if (type == 0) {
+            if (type == TYPE_HEADER) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.settings_section_layout, viewGroup, false);
                 }
                 TextView textView = (TextView)view.findViewById(R.id.settings_section_text);
-                if (i == 0) {
+                if (i == SETTINGS_MESSAGE_NOTIFICATIONS) {
                     textView.setText(LocaleController.getString("MessageNotifications", R.string.MessageNotifications));
-                } else if (i == 5) {
+                } else if (i == SETTINGS_GROUP_NOTIFICATIONS) {
                     textView.setText(LocaleController.getString("GroupNotifications", R.string.GroupNotifications));
-                } else if (i == 10) {
+                } else if (i == SETTINGS_INAPP_NOTIFICATIONS) {
                     textView.setText(LocaleController.getString("InAppNotifications", R.string.InAppNotifications));
-                } else if (i == 14) {
+                } else if (i == SETTINGS_EVENTS) {
                     textView.setText(LocaleController.getString("Events", R.string.Events));
-                } else if (i == 16) {
+                } else if (i == SETTINGS_PEBBLE) {
                     textView.setText(LocaleController.getString("Pebble", R.string.Pebble));
-                } else if (i == 18) {
+                } else if (i == SETTINGS_RESET) {
                     textView.setText(LocaleController.getString("Reset", R.string.Reset));
                 }
-            } if (type == 1) {
+            } if (type == TYPE_BOOLEAN_SETTINGS) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.settings_row_check_notify_layout, viewGroup, false);
@@ -404,47 +461,47 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 boolean enabled = false;
                 boolean enabledAll = preferences.getBoolean("EnableAll", true);
 
-                if (i == 1 || i == 6) {
-                    if (i == 1) {
+                if (i == SETTINGS_MESSAGE_ALERT || i == SETTINGS_GROUP_ALERT) {
+                    if (i == SETTINGS_MESSAGE_ALERT) {
                         enabled = enabledAll;
-                    } else if (i == 6) {
+                    } else if (i == SETTINGS_GROUP_ALERT) {
                         enabled = preferences.getBoolean("EnableGroup", true);
                     }
                     textView.setText(LocaleController.getString("Alert", R.string.Alert));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 2 || i == 7) {
-                    if (i == 2) {
+                } else if (i == SETTINGS_MESSAGE_PREVIEW || i == SETTINGS_GROUP_PREVIEW) {
+                    if (i == SETTINGS_MESSAGE_PREVIEW) {
                         enabled = preferences.getBoolean("EnablePreviewAll", true);
-                    } else if (i == 7) {
+                    } else if (i == SETTINGS_GROUP_PREVIEW) {
                         enabled = preferences.getBoolean("EnablePreviewGroup", true);
                     }
                     textView.setText(LocaleController.getString("MessagePreview", R.string.MessagePreview));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 3 || i == 8) {
-                    if (i == 3) {
+                } else if (i == SETTINGS_MESSAGE_VIBRATE || i == SETTINGS_GROUP_VIBRATE) {
+                    if (i == SETTINGS_MESSAGE_VIBRATE) {
                         enabled = preferences.getBoolean("EnableVibrateAll", true);
-                    } else if (i == 8) {
+                    } else if (i == SETTINGS_GROUP_VIBRATE) {
                         enabled = preferences.getBoolean("EnableVibrateGroup", true);
                     }
                     textView.setText(LocaleController.getString("Vibrate", R.string.Vibrate));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 11) {
+                } else if (i == SETTINGS_INAPP_SOUND) {
                     enabled = preferences.getBoolean("EnableInAppSounds", true);
                     textView.setText(LocaleController.getString("InAppSounds", R.string.InAppSounds));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 12) {
+                } else if (i == SETTINGS_INAPP_VIBRATE) {
                     enabled = preferences.getBoolean("EnableInAppVibrate", true);
                     textView.setText(LocaleController.getString("InAppVibrate", R.string.InAppVibrate));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 13) {
+                } else if (i == SETTINGS_INAPP_PREVIEW) {
                     enabled = preferences.getBoolean("EnableInAppPreview", true);
                     textView.setText(LocaleController.getString("InAppPreview", R.string.InAppPreview));
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 15) {
+                } else if (i == SETTINGS_CONTACT_JOINED) {
                     enabled = preferences.getBoolean("EnableContactJoined", true);
                     textView.setText(LocaleController.getString("ContactJoined", R.string.ContactJoined));
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 17) {
+                } else if (i == SETTINGS_PEBBLE_ALERT) {
                     enabled = preferences.getBoolean("EnablePebbleNotifications", false);
                     textView.setText(LocaleController.getString("Alert", R.string.Alert));
                     divider.setVisibility(View.INVISIBLE);
@@ -454,20 +511,20 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 } else {
                     checkButton.setImageResource(R.drawable.btn_check_off);
                 }
-                if (i != 1 && !enabledAll && i != 15) {
+                if (i != SETTINGS_MESSAGE_ALERT && !enabledAll && i != SETTINGS_CONTACT_JOINED) {
                     view.setEnabled(false);
-                    if(android.os.Build.VERSION.SDK_INT >= 11) {
+                    if(android.os.Build.VERSION.SDK_INT >= SETTINGS_INAPP_SOUND) {
                         checkButton.setAlpha(0.3f);
                         textView.setAlpha(0.3f);
                     }
                 } else {
-                    if(android.os.Build.VERSION.SDK_INT >= 11) {
+                    if(android.os.Build.VERSION.SDK_INT >= SETTINGS_INAPP_SOUND) {
                         checkButton.setAlpha(1.0f);
                         textView.setAlpha(1.0f);
                     }
                     view.setEnabled(true);
                 }
-            } else if (type == 2) {
+            } else if (type == TYPE_INNER_SETTINGS) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.settings_row_detail_layout, viewGroup, false);
@@ -477,15 +534,15 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 View divider = view.findViewById(R.id.settings_row_divider);
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                 boolean enabledAll = preferences.getBoolean("EnableAll", true);
-                if (i == 4 || i == 9) {
-                    if (i == 4) {
+                if (i == SETTINGS_MESSAGE_SOUND || i == SETTINGS_GROUP_SOUND) {
+                    if (i == SETTINGS_MESSAGE_SOUND) {
                         String name = preferences.getString("GlobalSound", LocaleController.getString("Default", R.string.Default));
                         if (name.equals("NoSound")) {
                             textViewDetail.setText(LocaleController.getString("NoSound", R.string.NoSound));
                         } else {
                             textViewDetail.setText(name);
                         }
-                    } else if (i == 9) {
+                    } else if (i == SETTINGS_GROUP_SOUND) {
                         String name = preferences.getString("GroupSound", LocaleController.getString("Default", R.string.Default));
                         if (name.equals("NoSound")) {
                             textViewDetail.setText(LocaleController.getString("NoSound", R.string.NoSound));
@@ -495,20 +552,30 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     }
                     textView.setText(LocaleController.getString("Sound", R.string.Sound));
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 19) {
+                } else if (i == SETTINGS_MESSAGE_VIBRATE_SPD || i == SETTINGS_GROUP_VIBRATE_SPD) {
+                    VibrationSpeed speed = VibrationSpeed.getDefault();
+                    if (i == SETTINGS_MESSAGE_VIBRATE_SPD) {
+                        speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeed", 0));
+                    } else if (i == SETTINGS_GROUP_VIBRATE_SPD) {
+                        speed = VibrationSpeed.fromValue(preferences.getInt("VibrationSpeedGroup", 0));
+                    }
+                    textViewDetail.setText(LocaleController.getString(speed.getLocaleKey(), speed.getResourceId()));
+                    textView.setText(LocaleController.getString("VibrateSpeed", R.string.VibrateSpeed));
+                    divider.setVisibility(View.VISIBLE);
+                } else if (i == SETTINGS_RESET_ALL) {
                     textView.setText(LocaleController.getString("ResetAllNotifications", R.string.ResetAllNotifications));
                     textViewDetail.setText(LocaleController.getString("UndoAllCustom", R.string.UndoAllCustom));
                     divider.setVisibility(View.INVISIBLE);
                 }
-                if (i != 19 && !enabledAll) {
+                if (i != SETTINGS_RESET_ALL && !enabledAll) {
                     view.setEnabled(false);
-                    if(android.os.Build.VERSION.SDK_INT >= 11) {
+                    if(android.os.Build.VERSION.SDK_INT >= SETTINGS_INAPP_SOUND) {
                         textView.setAlpha(0.3f);
                         textViewDetail.setAlpha(0.3f);
                         divider.setAlpha(0.3f);
                     }
                 } else {
-                    if(android.os.Build.VERSION.SDK_INT >= 11) {
+                    if(android.os.Build.VERSION.SDK_INT >= SETTINGS_INAPP_SOUND) {
                         textView.setAlpha(1.0f);
                         textViewDetail.setAlpha(1.0f);
                         divider.setAlpha(1.0f);
@@ -522,12 +589,14 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
         @Override
         public int getItemViewType(int i) {
-            if (i == 0 || i == 5 || i == 10 || i == 14 || i == 16 || i == 18) {
-                return 0;
-            } else if (i > 0 && i < 4 || i > 5 && i < 9 || i > 10 && i < 14 || i == 15 || i == 17) {
-                return 1;
+            if (i == SETTINGS_MESSAGE_NOTIFICATIONS || i == SETTINGS_GROUP_NOTIFICATIONS || i == SETTINGS_INAPP_NOTIFICATIONS || i == SETTINGS_EVENTS || i == SETTINGS_PEBBLE || i == SETTINGS_RESET) {
+                return TYPE_HEADER;
+            } else if(i == SETTINGS_MESSAGE_VIBRATE_SPD || i == SETTINGS_GROUP_VIBRATE_SPD) {
+                return TYPE_INNER_SETTINGS;
+            } else if (i > SETTINGS_MESSAGE_NOTIFICATIONS && i < SETTINGS_MESSAGE_SOUND || i > SETTINGS_GROUP_NOTIFICATIONS && i < SETTINGS_GROUP_SOUND || i > SETTINGS_INAPP_NOTIFICATIONS && i < SETTINGS_EVENTS || i == SETTINGS_CONTACT_JOINED || i == SETTINGS_PEBBLE_ALERT) {
+                return TYPE_BOOLEAN_SETTINGS;
             } else {
-                return 2;
+                return TYPE_INNER_SETTINGS;
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java
index 4ab44f30c..f46b55347 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/BaseFragment.java
@@ -10,6 +10,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.ActionBarActivity;
 import android.view.View;
@@ -21,7 +22,7 @@
 import org.telegram.ui.LaunchActivity;
 import org.telegram.ui.ApplicationLoader;
 
-public class BaseFragment extends Fragment {
+public class BaseFragment extends DialogFragment {
     public int animationType = 0;
     public boolean isFinish = false;
     public View fragmentView;
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 2e051f588..405fdf29c 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -232,6 +232,12 @@
     <string name="InAppSounds">Suoni in-app</string>
     <string name="InAppVibrate">Vibrazione in-app</string>
     <string name="Vibrate">Vibrazione</string>
+    <string name="VibrateSpeed">Velocità vibrazione</string>
+    <string name="VibrateSpeedTitle">Seleziona una velocità</string>
+    <string name="VibrateSpeedFast">Veloce</string>
+    <string name="VibrateSpeedMedium">Media</string>
+    <string name="VibrateSpeedSlow">Lenta</string>
+    <string name="VibrateSpeedDefault">Default</string>
     <string name="InAppPreview">Anteprima in-app</string>
     <string name="Reset">RIPRISTINA</string>
     <string name="ResetAllNotifications">Ripristina tutte le notifiche</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 365e4f84d..6871fe9e3 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -232,6 +232,12 @@
     <string name="InAppSounds">In-App Sounds</string>
     <string name="InAppVibrate">In-App Vibrate</string>
     <string name="Vibrate">Vibrate</string>
+    <string name="VibrateSpeed">Vibration speed</string>
+    <string name="VibrateSpeedTitle">Pick a speed</string>
+    <string name="VibrateSpeedFast">Fast</string>
+    <string name="VibrateSpeedMedium">Medium</string>
+    <string name="VibrateSpeedSlow">Slow</string>
+    <string name="VibrateSpeedDefault">Default</string>
     <string name="InAppPreview">In-App Preview</string>
     <string name="Reset">RESET</string>
     <string name="ResetAllNotifications">Reset All Notifications</string>
