diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
index 3a4d9ec65..6d362037e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
@@ -17,6 +17,7 @@
 import android.location.Location;
 import android.os.Build;
 import android.text.TextUtils;
+import android.util.SparseArray;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -68,7 +69,7 @@
     private TLRPC.TL_inlineBotSwitchPM searchResultBotContextSwitch;
     private HashMap<String, TLRPC.BotInlineResult> searchResultBotContextById;
     private MentionsAdapterDelegate delegate;
-    private HashMap<Integer, TLRPC.BotInfo> botInfo;
+    private SparseArray<TLRPC.BotInfo> botInfo;
     private int resultStartPosition;
     private boolean allowNewMentions = true;
     private int resultLength;
@@ -180,7 +181,7 @@ public void setNeedBotContext(boolean value) {
         needBotContext = value;
     }
 
-    public void setBotInfo(HashMap<Integer, TLRPC.BotInfo> info) {
+    public void setBotInfo(SparseArray<TLRPC.BotInfo> info) {
         botInfo = info;
     }
 
@@ -726,14 +727,15 @@ public int compare(TLRPC.User lhs, TLRPC.User rhs) {
             ArrayList<String> newResultHelp = new ArrayList<>();
             ArrayList<TLRPC.User> newResultUsers = new ArrayList<>();
             String command = result.toString().toLowerCase();
-            for (HashMap.Entry<Integer, TLRPC.BotInfo> entry : botInfo.entrySet()) {
-                TLRPC.BotInfo botInfo = entry.getValue();
-                for (int a = 0; a < botInfo.commands.size(); a++) {
-                    TLRPC.TL_botCommand botCommand = botInfo.commands.get(a);
+
+            for (int i = 0, size = botInfo.size(); i < size; i ++) {
+                TLRPC.BotInfo info = botInfo.get(i);
+                for (int a = 0, commandsCount = info.commands.size(); a < commandsCount; a++) {
+                    TLRPC.TL_botCommand botCommand = info.commands.get(a);
                     if (botCommand != null && botCommand.command != null && botCommand.command.startsWith(command)) {
                         newResult.add("/" + botCommand.command);
                         newResultHelp.add(botCommand.description);
-                        newResultUsers.add(MessagesController.getInstance().getUser(botInfo.user_id));
+                        newResultUsers.add(MessagesController.getInstance().getUser(info.user_id));
                     }
                 }
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 0c0a273f6..86882c7d0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -359,8 +359,7 @@
     private String currentPicturePath;
 
     protected TLRPC.ChatFull info = null;
-
-    private HashMap<Integer, TLRPC.BotInfo> botInfo = new HashMap<>();
+    private SparseArray<TLRPC.BotInfo> botInfo = new SparseArray<>();
     private String botUser;
     private long inlineReturn;
     private MessageObject botButtons;
@@ -4859,10 +4858,11 @@ private void updateBotButtons() {
         }
         boolean hasHelp = false;
         boolean hasSettings = false;
-        if (!botInfo.isEmpty()) {
-            for (HashMap.Entry<Integer, TLRPC.BotInfo> entry : botInfo.entrySet()) {
-                TLRPC.BotInfo info = entry.getValue();
-                for (int a = 0; a < info.commands.size(); a++) {
+        int size = botInfo.size();
+        if (size != 0) {
+            for (int i = 0;i < size; i++ ) {
+                TLRPC.BotInfo info = botInfo.get(i);
+                for (int a = 0, commandsCount = info.commands.size(); a < commandsCount; a++) {
                     TLRPC.TL_botCommand command = info.commands.get(a);
                     if (command.command.toLowerCase().equals("help")) {
                         hasHelp = true;
@@ -9489,7 +9489,7 @@ public void didPressUrl(String url) {
         public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             if (position == botInfoRow) {
                 BotHelpCell helpView = (BotHelpCell) holder.itemView;
-                helpView.setText(!botInfo.isEmpty() ? botInfo.get(currentUser.id).description : null);
+                helpView.setText(botInfo.size() != 0 ? botInfo.get(currentUser.id).description : null);
             } else if (position == loadingDownRow || position == loadingUpRow) {
                 ChatLoadingCell loadingCell = (ChatLoadingCell) holder.itemView;
                 loadingCell.setProgressVisible(loadsCount > 1);
