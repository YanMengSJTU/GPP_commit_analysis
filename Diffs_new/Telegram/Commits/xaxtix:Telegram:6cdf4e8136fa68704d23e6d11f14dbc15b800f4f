diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java
index 6e5bed245..068ed4ed4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java
@@ -43,6 +43,7 @@
 import org.telegram.ui.Cells.LoadingCell;
 import org.telegram.ui.Cells.ShadowSectionCell;
 import org.telegram.ui.Cells.UserCell;
+import org.telegram.ui.Components.ArchivedPullForegroundDrawable;
 import org.telegram.ui.Components.CombinedDrawable;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RecyclerListView;
@@ -72,6 +73,7 @@
     private boolean showArchiveHint;
     private boolean isReordering;
     private long lastSortTime;
+    private ArchivedPullForegroundDrawable archivedPullForegroundDrawable;
 
     public DialogsAdapter(Context context, int type, int folder, boolean onlySelect) {
         mContext = context;
@@ -310,7 +312,9 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
         View view;
         switch (viewType) {
             case 0:
-                view = new DialogCell(mContext, true, false);
+                DialogCell dialogCell = new DialogCell(mContext, true, false);
+                dialogCell.setArchivedPullAnimation(archivedPullForegroundDrawable);
+                view = dialogCell;
                 break;
             case 1:
                 view = new LoadingCell(mContext);
@@ -519,4 +523,8 @@ public void notifyItemMoved(int fromPosition, int toPosition) {
         Collections.swap(dialogs, fromIndex, toIndex);
         super.notifyItemMoved(fromPosition, toPosition);
     }
+
+    public void setArchivedPullDrawable(ArchivedPullForegroundDrawable archivedPullForegroundDrawable) {
+        this.archivedPullForegroundDrawable = archivedPullForegroundDrawable;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index d96172f18..823e3e6d7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -240,6 +240,7 @@ public void setDialog(TLRPC.Dialog dialog, int type, int folder) {
         messageId = 0;
         update(0);
         checkOnline();
+        if (currentDialogFolderId != 0 && archivedChatsDrawable != null) archivedChatsDrawable.setView(this);
     }
 
     public void setDialogIndex(int i) {
@@ -308,7 +309,6 @@ protected void onDetachedFromWindow() {
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
-        archivedChatsDrawable = DialogsActivity.archivedPullForegroundDrawable;
         avatarImage.onAttachedToWindow();
         archiveHidden = SharedConfig.archiveHidden;
         archiveBackgroundProgress = archiveHidden ? 0.0f : 1.0f;
@@ -997,7 +997,6 @@ public void buildLayout() {
             }
 
             if (currentDialogFolderId != 0) {
-                if(archivedChatsDrawable != null) archivedChatsDrawable.setView(this);
                 nameString = LocaleController.getString("ArchivedChats", R.string.ArchivedChats);
             } else {
                 if (chat != null) {
@@ -1582,7 +1581,6 @@ public void update(int mask) {
 
             if (currentDialogFolderId != 0) {
                 Theme.dialogs_archiveAvatarDrawable.setCallback(this);
-                if(archivedChatsDrawable != null) archivedChatsDrawable.setView(this);
                 avatarDrawable.setAvatarType(AvatarDrawable.AVATAR_TYPE_ARCHIVED);
                 avatarImage.setImage(null, null, avatarDrawable, null, user, 0);
             } else {
@@ -2270,4 +2268,8 @@ public void setTopClip(int value) {
     public void setBottomClip(int value) {
         bottomClip = value;
     }
+
+    public void setArchivedPullAnimation(ArchivedPullForegroundDrawable archivedPullForegroundDrawable) {
+        this.archivedChatsDrawable = archivedPullForegroundDrawable;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ArchivedPullForegroundDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ArchivedPullForegroundDrawable.java
index 61c39f4e3..270dd60da 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ArchivedPullForegroundDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ArchivedPullForegroundDrawable.java
@@ -113,7 +113,7 @@ public void draw(Canvas canvas) {
         int visibleHeight = (int) (parent.getHeight() * pullProgress);
         int invisibleHeight = parent.getHeight() - visibleHeight;
 
-        float bounceP = bounceIn  ? (0.07f * bounceProgress) - 0.05f : 0.02f * bounceProgress;
+        float bounceP = bounceIn ? (0.07f * bounceProgress) - 0.05f : 0.02f * bounceProgress;
 
         //float bounceP = (0.1f * bounceProgress) - 0.1f;
         updateTextProgress(pullProgress);
@@ -301,9 +301,9 @@ public void onAnimationEnd(Animator animation) {
 
 
         AnimatorSet bounce = new AnimatorSet();
-        bounce.playSequentially(bounceIn,bounceOut);
+        bounce.playSequentially(bounceIn, bounceOut);
         bounce.setStartDelay(200);
-       // bounceIn.setStartDelay(200);
+        // bounceIn.setStartDelay(200);
         outAnimator.playTogether(out, bounce);
         outAnimator.start();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 7d1d6a936..4eead411c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -253,9 +253,8 @@
     private boolean scrollingManually;
     private int totalConsumedAmount;
     private boolean startedScrollAtTop;
-
-    //moved to static variable to prevent glitches when adapter.notifyDataChangesCalled
-    public static ArchivedPullForegroundDrawable archivedPullForegroundDrawable;
+    
+    public ArchivedPullForegroundDrawable archivedPullForegroundDrawable;
 
     private class ContentView extends SizeNotifierFrameLayout {
 
@@ -487,7 +486,8 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
                         getUndoView().showWithAction(0, UndoView.ACTION_ARCHIVE_HIDDEN, null, null);
                     }
                     archivePullViewState = SharedConfig.archiveHidden ? ARCHIVE_ITEM_STATE_HIDDEN : ARCHIVE_ITEM_STATE_PINNED;
-                    archivedPullForegroundDrawable.setWillDraw(archivePullViewState != ARCHIVE_ITEM_STATE_PINNED);
+                    if (archivedPullForegroundDrawable != null)
+                        archivedPullForegroundDrawable.setWillDraw(archivePullViewState != ARCHIVE_ITEM_STATE_PINNED);
                     return;
                 }
 
@@ -656,9 +656,6 @@ public boolean onFragmentCreate() {
             messagesCount = arguments.getInt("messagesCount", 0);
         }
 
-        if (archivedPullForegroundDrawable == null && folderId == 0) {
-            archivedPullForegroundDrawable = new ArchivedPullForegroundDrawable();
-        }
 
         if (dialogsType == 0) {
             askAboutContacts = MessagesController.getGlobalNotificationsSettings().getBoolean("askAboutContacts", true);
@@ -1056,7 +1053,8 @@ public boolean onTouchEvent(MotionEvent e) {
                             SharedConfig.toggleArchiveHidden();
                             getUndoView().showWithAction(0, UndoView.ACTION_ARCHIVE_PINNED, null, null);
                             archivePullViewState = SharedConfig.archiveHidden ? ARCHIVE_ITEM_STATE_HIDDEN : ARCHIVE_ITEM_STATE_PINNED;
-                            archivedPullForegroundDrawable.setWillDraw(archivePullViewState != ARCHIVE_ITEM_STATE_PINNED);
+                            if (archivedPullForegroundDrawable != null)
+                                archivedPullForegroundDrawable.setWillDraw(archivePullViewState != ARCHIVE_ITEM_STATE_PINNED);
                         }
                     }
                 }
@@ -1198,7 +1196,8 @@ public int scrollVerticallyBy(int dy, RecyclerView.Recycler recycler, RecyclerVi
                                 listView.performHapticFeedback(HapticFeedbackConstants.KEYBOARD_TAP, HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING);
                             }
                         }
-                        archivedPullForegroundDrawable.pullProgress = k;
+                        if (archivedPullForegroundDrawable != null)
+                            archivedPullForegroundDrawable.pullProgress = k;
                         dialogCell.invalidate();
                     } else {
                         canShow = false;
@@ -1722,6 +1721,19 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
             }
         });
 
+        archivePullViewState = SharedConfig.archiveHidden ? ARCHIVE_ITEM_STATE_HIDDEN : ARCHIVE_ITEM_STATE_PINNED;
+
+        if (archivedPullForegroundDrawable == null && folderId == 0) {
+            archivedPullForegroundDrawable = new ArchivedPullForegroundDrawable();
+
+            if (hasHiddenArchive()) {
+                archivedPullForegroundDrawable.showHidden();
+            } else {
+                archivedPullForegroundDrawable.doNotShow();
+            }
+            archivedPullForegroundDrawable.setWillDraw(archivePullViewState != ARCHIVE_ITEM_STATE_PINNED);
+        }
+
         if (searchString == null) {
             dialogsAdapter = new DialogsAdapter(context, dialogsType, folderId, onlySelect) {
                 @Override
@@ -1733,6 +1745,7 @@ public void notifyDataSetChanged() {
             if (AndroidUtilities.isTablet() && openedDialogId != 0) {
                 dialogsAdapter.setOpenedDialogId(openedDialogId);
             }
+            dialogsAdapter.setArchivedPullDrawable(archivedPullForegroundDrawable);
             listView.setAdapter(dialogsAdapter);
         }
         int type = 0;
@@ -2003,25 +2016,9 @@ protected boolean canUndo() {
             actionBar.setSearchTextColor(Theme.getColor(Theme.key_actionBarDefaultArchivedSearchPlaceholder), true);
         }
 
-        archivePullViewState = SharedConfig.archiveHidden ? ARCHIVE_ITEM_STATE_HIDDEN : ARCHIVE_ITEM_STATE_PINNED;
-        if (hasHiddenArchive()) {
-            archivedPullForegroundDrawable.showHidden();
-        } else {
-            archivedPullForegroundDrawable.doNotShow();
-        }
-        archivedPullForegroundDrawable.setWillDraw(archivePullViewState != ARCHIVE_ITEM_STATE_PINNED);
-
         return fragmentView;
     }
 
-    @Override
-    public void finishFragment() {
-        super.finishFragment();
-        if (archivedPullForegroundDrawable != null && folderId == 0) {
-            archivedPullForegroundDrawable.destroyView();
-        }
-    }
-
     @Override
     public void onResume() {
         super.onResume();
@@ -2089,6 +2086,7 @@ public void onResume() {
                     .create());
         }
 
+
         if (archivePullViewState == ARCHIVE_ITEM_STATE_HIDDEN && layoutManager.findFirstVisibleItemPosition() == 0) {
             layoutManager.scrollToPositionWithOffset(1, 0);
         }
@@ -3157,7 +3155,7 @@ private void hideFloatingButton(boolean hide) {
         }
         floatingHidden = hide;
         AnimatorSet animatorSet = new AnimatorSet();
-        animatorSet.playTogether(ObjectAnimator.ofFloat(floatingButtonContainer, View.TRANSLATION_Y,  (floatingHidden ? AndroidUtilities.dp(100) : -additionalFloatingTranslation))/*,
+        animatorSet.playTogether(ObjectAnimator.ofFloat(floatingButtonContainer, View.TRANSLATION_Y, (floatingHidden ? AndroidUtilities.dp(100) : -additionalFloatingTranslation))/*,
                 ObjectAnimator.ofFloat(unreadFloatingButtonContainer, View.TRANSLATION_Y, floatingHidden ? AndroidUtilities.dp(74) : 0)*/);
         animatorSet.setDuration(300);
         animatorSet.setInterpolator(floatingInterpolator);
