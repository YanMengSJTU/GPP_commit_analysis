diff --git a/TMessagesProj/jni/image.c b/TMessagesProj/jni/image.c
index 5317a993d..a5d85fff6 100644
--- a/TMessagesProj/jni/image.c
+++ b/TMessagesProj/jni/image.c
@@ -10,6 +10,10 @@
 #include "c_utils.h"
 #include "image.h"
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 jclass jclass_NullPointerException;
 jclass jclass_RuntimeException;
 
@@ -931,4 +935,8 @@ JNIEXPORT void Java_org_telegramster_messenger_Utilities_stackBlurBitmap(JNIEnv*
     free(b);
     free(dv);
     AndroidBitmap_unlockPixels(env, bitmap);
-}
\ No newline at end of file
+}
+
+#ifdef __cplusplus
+}
+#endif
diff --git a/TMessagesProj/jni/image.h b/TMessagesProj/jni/image.h
index ebe736c32..277c20b70 100644
--- a/TMessagesProj/jni/image.h
+++ b/TMessagesProj/jni/image.h
@@ -3,6 +3,15 @@
 
 #include <jni.h>
 
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 jint imageOnJNILoad(JavaVM *vm, JNIEnv *env);
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif
diff --git a/TMessagesProj/jni/jni.cpp b/TMessagesProj/jni/jni.cpp
index 81cfbac52..61567ded2 100644
--- a/TMessagesProj/jni/jni.cpp
+++ b/TMessagesProj/jni/jni.cpp
@@ -24,19 +24,23 @@ jint JNI_OnLoad(JavaVM *vm, void *reserved) {
 	JNIEnv *env = 0;
     srand(time(NULL));
 
-	if ((*vm)->GetEnv(vm, (void **) &env, JNI_VERSION_1_6) != JNI_OK) {
+	if (vm->GetEnv((void **) &env, JNI_VERSION_1_6) != JNI_OK) {
+	    LOGD("JNI", "JNI_VERSION_1_6");
 		return -1;
 	}
 
     if (imageOnJNILoad(vm, env) != JNI_TRUE) {
+        LOGD("JNI", "imageOnJNILoad");
         return -1;
     }
 
     if (videoOnJNILoad(vm, env) != JNI_TRUE) {
+        LOGD("JNI", "videoOnJNILoad");
         return -1;
     }
 
     if (registerNativeTgNetFunctions(vm, env) != JNI_TRUE) {
+        LOGD("JNI", "registerNativeTgNetFunctions");
         return -1;
     }
 
@@ -49,59 +53,59 @@ void JNI_OnUnload(JavaVM *vm, void *reserved) {
 
 }
 
-JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesIgeEncryption(JNIEnv *env, jclass class, jobject buffer, jbyteArray key, jbyteArray iv, jboolean encrypt, jint offset, jint length) {
-    jbyte *what = (*env)->GetDirectBufferAddress(env, buffer) + offset;
-    unsigned char *keyBuff = (unsigned char *)(*env)->GetByteArrayElements(env, key, NULL);
-    unsigned char *ivBuff = (unsigned char *)(*env)->GetByteArrayElements(env, iv, NULL);
+JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesIgeEncryption(JNIEnv *env, jclass clazz, jobject buffer, jbyteArray key, jbyteArray iv, jboolean encrypt, jint offset, jint length) {
+    jbyte *what = ((jbyte *)env->GetDirectBufferAddress( buffer)) + offset;
+    unsigned char *keyBuff = (unsigned char *)env->GetByteArrayElements( key, NULL);
+    unsigned char *ivBuff = (unsigned char *)env->GetByteArrayElements( iv, NULL);
 
     AES_KEY akey;
     if (!encrypt) {
         AES_set_decrypt_key(keyBuff, 32 * 8, &akey);
-        AES_ige_encrypt(what, what, length, &akey, ivBuff, AES_DECRYPT);
+        AES_ige_encrypt((unsigned char *)what, (unsigned char *)what, length, &akey, ivBuff, AES_DECRYPT);
     } else {
         AES_set_encrypt_key(keyBuff, 32 * 8, &akey);
-        AES_ige_encrypt(what, what, length, &akey, ivBuff, AES_ENCRYPT);
+        AES_ige_encrypt((unsigned char *)what, (unsigned char *)what, length, &akey, ivBuff, AES_ENCRYPT);
     }
-    (*env)->ReleaseByteArrayElements(env, key, keyBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, iv, ivBuff, 0);
+    env->ReleaseByteArrayElements( key, (jbyte *)keyBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( iv, (jbyte *)ivBuff, 0);
 }
 
-JNIEXPORT jint Java_org_telegramster_messenger_Utilities_pbkdf2(JNIEnv *env, jclass class, jbyteArray password, jbyteArray salt, jbyteArray dst, jint iterations) {
-    jbyte *passwordBuff = (*env)->GetByteArrayElements(env, password, NULL);
-    size_t passwordLength = (size_t) (*env)->GetArrayLength(env, password);
-    jbyte *saltBuff = (*env)->GetByteArrayElements(env, salt, NULL);
-    size_t saltLength = (size_t) (*env)->GetArrayLength(env, salt);
-    jbyte *dstBuff = (*env)->GetByteArrayElements(env, dst, NULL);
-    size_t dstLength = (size_t) (*env)->GetArrayLength(env, dst);
+JNIEXPORT jint Java_org_telegramster_messenger_Utilities_pbkdf2(JNIEnv *env, jclass clazz, jbyteArray password, jbyteArray salt, jbyteArray dst, jint iterations) {
+    jbyte *passwordBuff = env->GetByteArrayElements( password, NULL);
+    size_t passwordLength = (size_t) env->GetArrayLength( password);
+    jbyte *saltBuff = env->GetByteArrayElements( salt, NULL);
+    size_t saltLength = (size_t) env->GetArrayLength( salt);
+    jbyte *dstBuff = env->GetByteArrayElements( dst, NULL);
+    size_t dstLength = (size_t) env->GetArrayLength( dst);
 
     int result = PKCS5_PBKDF2_HMAC((char *) passwordBuff, passwordLength, (uint8_t *) saltBuff, saltLength, (unsigned int) iterations, EVP_sha512(), dstLength, (uint8_t *) dstBuff);
 
-    (*env)->ReleaseByteArrayElements(env, password, passwordBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, salt, saltBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, dst, dstBuff, 0);
+    env->ReleaseByteArrayElements( password, passwordBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( salt, saltBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( dst, dstBuff, 0);
 
     return result;
 }
 
-JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCtrDecryption(JNIEnv *env, jclass class, jobject buffer, jbyteArray key, jbyteArray iv, jint offset, jint length) {
-    jbyte *what = (*env)->GetDirectBufferAddress(env, buffer) + offset;
-    unsigned char *keyBuff = (unsigned char *)(*env)->GetByteArrayElements(env, key, NULL);
-    unsigned char *ivBuff = (unsigned char *)(*env)->GetByteArrayElements(env, iv, NULL);
+JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCtrDecryption(JNIEnv *env, jclass clazz, jobject buffer, jbyteArray key, jbyteArray iv, jint offset, jint length) {
+    jbyte *what = ((jbyte *)env->GetDirectBufferAddress( buffer)) + offset;
+    unsigned char *keyBuff = (unsigned char *)env->GetByteArrayElements( key, NULL);
+    unsigned char *ivBuff = (unsigned char *)env->GetByteArrayElements( iv, NULL);
 
     AES_KEY akey;
     unsigned int num = 0;
     uint8_t count[16];
     memset(count, 0, 16);
     AES_set_encrypt_key(keyBuff, 32 * 8, &akey);
-    AES_ctr128_encrypt(what, what, length, &akey, ivBuff, count, &num);
-    (*env)->ReleaseByteArrayElements(env, key, keyBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, iv, ivBuff, JNI_ABORT);
+    AES_ctr128_encrypt((unsigned char *)what, (unsigned char *)what, length, &akey, ivBuff, count, &num);
+    env->ReleaseByteArrayElements( key, (jbyte *)keyBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( iv, (jbyte *)ivBuff, JNI_ABORT);
 }
 
-JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCtrDecryptionByteArray(JNIEnv *env, jclass class, jbyteArray buffer, jbyteArray key, jbyteArray iv, jint offset, jint length, jint fileOffset) {
-    unsigned char *bufferBuff = (unsigned char *) (*env)->GetByteArrayElements(env, buffer, NULL);
-    unsigned char *keyBuff = (unsigned char *) (*env)->GetByteArrayElements(env, key, NULL);
-    unsigned char *ivBuff = (unsigned char *) (*env)->GetByteArrayElements(env, iv, NULL);
+JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCtrDecryptionByteArray(JNIEnv *env, jclass clazz, jbyteArray buffer, jbyteArray key, jbyteArray iv, jint offset, jint length, jint fileOffset) {
+    unsigned char *bufferBuff = (unsigned char *) env->GetByteArrayElements( buffer, NULL);
+    unsigned char *keyBuff = (unsigned char *) env->GetByteArrayElements( key, NULL);
+    unsigned char *ivBuff = (unsigned char *) env->GetByteArrayElements( iv, NULL);
 
     AES_KEY akey;
     uint8_t count[16];
@@ -123,15 +127,15 @@ JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCtrDecryptionByteArr
 
     AES_ctr128_encrypt(bufferBuff + offset, bufferBuff + offset, length, &akey, ivBuff, count, &num);
 
-    (*env)->ReleaseByteArrayElements(env, key, keyBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, iv, ivBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, buffer, bufferBuff, 0);
+    env->ReleaseByteArrayElements( key, (jbyte *) keyBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( iv, (jbyte *) ivBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( buffer, (jbyte *) bufferBuff, 0);
 }
 
-JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCbcEncryptionByteArray(JNIEnv *env, jclass class, jbyteArray buffer, jbyteArray key, jbyteArray iv, jint offset, jint length, jint fileOffset, jint encrypt) {
-    unsigned char *bufferBuff = (unsigned char *) (*env)->GetByteArrayElements(env, buffer, NULL);
-    unsigned char *keyBuff = (unsigned char *) (*env)->GetByteArrayElements(env, key, NULL);
-    unsigned char *ivBuff = (unsigned char *) (*env)->GetByteArrayElements(env, iv, NULL);
+JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCbcEncryptionByteArray(JNIEnv *env, jclass clazz, jbyteArray buffer, jbyteArray key, jbyteArray iv, jint offset, jint length, jint fileOffset, jint encrypt) {
+    unsigned char *bufferBuff = (unsigned char *) env->GetByteArrayElements( buffer, NULL);
+    unsigned char *keyBuff = (unsigned char *) env->GetByteArrayElements( key, NULL);
+    unsigned char *ivBuff = (unsigned char *) env->GetByteArrayElements( iv, NULL);
 
     AES_KEY akey;
     if (encrypt) {
@@ -150,15 +154,15 @@ JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCbcEncryptionByteArr
 
     AES_cbc_encrypt(bufferBuff, bufferBuff, length, &akey, ivBuff, encrypt);
 
-    (*env)->ReleaseByteArrayElements(env, buffer, bufferBuff, 0);
-    (*env)->ReleaseByteArrayElements(env, key, keyBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, iv, ivBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( buffer, (jbyte *) bufferBuff, 0);
+    env->ReleaseByteArrayElements( key, (jbyte *) keyBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( iv, (jbyte *) ivBuff, JNI_ABORT);
 }
 
-JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCbcEncryption(JNIEnv *env, jclass class, jobject buffer, jbyteArray key, jbyteArray iv, jint offset, jint length, jint encrypt) {
-    unsigned char *bufferBuff = (*env)->GetDirectBufferAddress(env, buffer) + offset;
-    unsigned char *keyBuff = (unsigned char *) (*env)->GetByteArrayElements(env, key, NULL);
-    unsigned char *ivBuff = (unsigned char *) (*env)->GetByteArrayElements(env, iv, NULL);
+JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCbcEncryption(JNIEnv *env, jclass clazz, jobject buffer, jbyteArray key, jbyteArray iv, jint offset, jint length, jint encrypt) {
+    unsigned char *bufferBuff = ((unsigned char *) env->GetDirectBufferAddress( buffer)) + offset;
+    unsigned char *keyBuff = (unsigned char *) env->GetByteArrayElements( key, NULL);
+    unsigned char *ivBuff = (unsigned char *) env->GetByteArrayElements( iv, NULL);
 
     AES_KEY akey;
     if (encrypt) {
@@ -169,8 +173,8 @@ JNIEXPORT void Java_org_telegramster_messenger_Utilities_aesCbcEncryption(JNIEnv
 
     AES_cbc_encrypt(bufferBuff + offset, bufferBuff + offset, length, &akey, ivBuff, encrypt);
 
-    (*env)->ReleaseByteArrayElements(env, key, keyBuff, JNI_ABORT);
-    (*env)->ReleaseByteArrayElements(env, iv, ivBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( key, (jbyte *) keyBuff, JNI_ABORT);
+    env->ReleaseByteArrayElements( iv, (jbyte *) ivBuff, JNI_ABORT);
 }
 
 int64_t listdir(const char *fileName, int32_t mode, int32_t docType, int64_t time) {
@@ -225,17 +229,17 @@ int64_t listdir(const char *fileName, int32_t mode, int32_t docType, int64_t tim
     return value;
 }
 
-JNIEXPORT jlong Java_org_telegramster_messenger_Utilities_getDirSize(JNIEnv *env, jclass class, jstring path, jint docType) {
-    const char *fileName = (*env)->GetStringUTFChars(env, path, NULL);
+JNIEXPORT jlong Java_org_telegramster_messenger_Utilities_getDirSize(JNIEnv *env, jclass clazz, jstring path, jint docType) {
+    const char *fileName = env->GetStringUTFChars( path, NULL);
     jlong value = listdir(fileName, 0, docType, 0);
-    (*env)->ReleaseStringUTFChars(env, path, fileName);
+    env->ReleaseStringUTFChars( path, fileName);
     return value;
 }
 
-JNIEXPORT void Java_org_telegramster_messenger_Utilities_clearDir(JNIEnv *env, jclass class, jstring path, jint docType, jlong time) {
-    const char *fileName = (*env)->GetStringUTFChars(env, path, NULL);
+JNIEXPORT void Java_org_telegramster_messenger_Utilities_clearDir(JNIEnv *env, jclass clazz, jstring path, jint docType, jlong time) {
+    const char *fileName = env->GetStringUTFChars( path, NULL);
     listdir(fileName, 1, docType, time);
-    (*env)->ReleaseStringUTFChars(env, path, fileName);
+    env->ReleaseStringUTFChars( path, fileName);
 }
 
 #ifdef __cplusplus
