diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
index 204335db6..04d558cf9 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
@@ -31,6 +31,7 @@
     private static final boolean DEFAULT_LOCK_DISABLE_OWN_PHOTO = true;
     private static final boolean DEFAULT_LOCK_DISABLE_OTHERS_BIO = true;
     private static final boolean DEFAULT_LOCK_DISABLE_OTHERS_PHOTO = true;
+    private static final boolean DEFAULT_LOCK_DISABLE_INLINE_VIDEO = true;
 
     public static boolean isDisabledSecretChat() {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
@@ -92,4 +93,13 @@ public static void setLockDisableOthersPhoto(boolean lockDisableOthersPhoto) {
         preferences.edit().putBoolean("disabledOthersPhoto", lockDisableOthersPhoto).apply();
     }
 
+    public static boolean getDisabledVideoInlineRecording() {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        return preferences.getBoolean("inputToggleVoiceVideo", DEFAULT_LOCK_DISABLE_INLINE_VIDEO);
+    }
+
+    public static void setDisabledVideoInlineRecording(boolean lockDisableInlineVideo) {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        preferences.edit().putBoolean("inputToggleVoiceVideo", lockDisableInlineVideo).apply();
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
index 1f38ee159..c5498a282 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
@@ -18,4 +18,5 @@
     public boolean disableBioChange;
     public boolean disableProfilePhoto;
     public boolean disableProfilePhotoChange;
+    public boolean inputToggleVoiceVideo;
 }
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
index 0b13a99a9..e34240e88 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
@@ -160,6 +160,7 @@ private void processResponse(@NonNull SettingsRequest request, @NonNull Settings
         GlobalSecuritySettings.setLockDisableOwnBio(settingsResponse.disableBioChange);
         GlobalSecuritySettings.setLockDisableOwnPhoto(settingsResponse.disableProfilePhotoChange);
         GlobalSecuritySettings.setLockDisableOthersPhoto(settingsResponse.disableProfilePhoto);
+        GlobalSecuritySettings.setDisabledVideoInlineRecording(!settingsResponse.inputToggleVoiceVideo);
 
         NotificationCenter.getInstance().postNotificationName(NotificationCenter.filterDialogsReady);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 4ad9b30e9..da4d281f7 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -9090,7 +9090,8 @@ public boolean isDialogIdAllowed(long currentDialogId) {
 
 
     public ArrayList<TLRPC.TL_dialog> filterDialogs(ArrayList<TLRPC.TL_dialog> dialogs) {
-        ArrayList<TLRPC.TL_dialog> filtered = new ArrayList<>();
+        return dialogs;
+      /*todo remove  ArrayList<TLRPC.TL_dialog> filtered = new ArrayList<>();
         if (dialogs == null) {
             return filtered;
         }
@@ -9100,7 +9101,7 @@ public boolean isDialogIdAllowed(long currentDialogId) {
                 filtered.add(dlg);
             }
         }
-        return filtered;
+        return filtered;*/
     }
 
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
index 681b3ad3f..83eb3d7f2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
@@ -261,9 +261,9 @@ public void run() {
                                     TLRPC.Message message = res.messages.get(a);
                                     //CloudVeil start
                                     long dialog_id = MessageObject.getDialogId(message);
-                                    if(!MessagesController.getInstance().isDialogIdAllowed(dialog_id)) {
-                                        continue;
-                                    }
+                                   //todo remove if(!MessagesController.getInstance().isDialogIdAllowed(dialog_id)) {
+                                   //     continue;
+                                  //  }
                                     //CloudVeil end
                                     searchResultMessages.add(new MessageObject(message, null, false));
 
@@ -523,9 +523,9 @@ public void run() {
                     while (cursor.next()) {
                         long id = cursor.longValue(0);
                         //CloudVeil start
-                        if(!MessagesController.getInstance().isDialogIdAllowed(id)) {
-                            continue;
-                        }
+                       //todo remove if(!MessagesController.getInstance().isDialogIdAllowed(id)) {
+                       //     continue;
+                       // }
                         //CloudVeil end
 
                         DialogSearchResult dialogSearchResult = new DialogSearchResult();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 38adc72a2..4269f5aa3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -1914,6 +1914,13 @@ public void checkRoundVideo() {
         if (!MediaController.getInstance().canInAppCamera()) {
             hasRecordVideo = false;
         }
+
+        //CloudVeil start
+        if(GlobalSecuritySettings.getDisabledVideoInlineRecording()) {
+            hasRecordVideo = false;
+        }
+        //CloudVeil end
+
         if (hasRecordVideo) {
             CameraController.getInstance().initCamera();
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
