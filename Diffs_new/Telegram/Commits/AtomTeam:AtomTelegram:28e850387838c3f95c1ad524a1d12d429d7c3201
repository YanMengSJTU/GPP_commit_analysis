diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java
index bd0c1c018..a809645f7 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java
@@ -8,6 +8,7 @@
 
 package org.atomgram.messenger;
 
+import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Typeface;
 import android.text.Layout;
@@ -106,6 +107,11 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                 textPaint.setColor(message.msg_color);
             else
                 textPaint.setColor(Theme.MSG_TEXT_COLOR);
+
+            ///STARRING
+            if(message.starred == 1) {
+                textPaint.setColor(TLRPC.Message.STARRED_COLOR);
+            }
             textPaint.linkColor = Theme.MSG_LINK_TEXT_COLOR;
         }
         if (gameTextPaint == null) {
@@ -412,7 +418,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
 
         generateCaption();
         if (generateLayout) {
-            TextPaint paint;
+            TextPaint paint = null;
             if (messageOwner.media instanceof TLRPC.TL_messageMediaGame) {
                 paint = gameTextPaint;
             } else {
@@ -426,6 +432,13 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                     textPaint.setColor(Theme.MSG_TEXT_COLOR);
                     paint = textPaint;
                 }
+                ///STARRED
+                if(message.starred == 1) {
+                    paint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+                    paint.setColor(TLRPC.Message.STARRED_COLOR);
+                    paint.setTextSize(AndroidUtilities.dp(MessagesController.getInstance().fontSize));
+                }
+
             }
             int[] emojiOnly = MessagesController.getInstance().allowBigEmoji ? new int[1] : null;
             messageText = Emoji.replaceEmoji(messageText, paint.getFontMetricsInt(), AndroidUtilities.dp(20), false, emojiOnly);
@@ -484,6 +497,12 @@ public void applyNewText() {
                 textPaint.setColor(Theme.MSG_TEXT_COLOR);
                 paint = textPaint;
             }
+            ///STARRING
+            if(messageOwner.starred == 1) {
+                paint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+                paint.setColor(TLRPC.Message.STARRED_COLOR);
+                paint.setTextSize(AndroidUtilities.dp(MessagesController.getInstance().fontSize));
+            }
         }
         messageText = Emoji.replaceEmoji(messageText, paint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
         generateLayout(fromUser);
@@ -679,6 +698,10 @@ public void setType() {
     }
 
     public boolean checkLayout() {
+        return checkLayout(false);
+    }
+
+    public boolean checkLayout(boolean forceLayout) {
         if (type != 0 || messageOwner.to_id == null || messageText == null || messageText.length() == 0) {
             return false;
         }
@@ -688,7 +711,7 @@ public boolean checkLayout() {
                 layoutCreated = false;
             }
         }
-        if (!layoutCreated) {
+        if (!layoutCreated || forceLayout) {
             layoutCreated = true;
             TLRPC.User fromUser = null;
             if (isFromUser()) {
@@ -708,6 +731,12 @@ public boolean checkLayout() {
                     textPaint.setColor(Theme.MSG_TEXT_COLOR);
                     paint = textPaint;
                 }
+                ///STARRING
+                if(messageOwner.starred == 1) {
+                    paint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+                    paint.setColor(TLRPC.Message.STARRED_COLOR);
+                    paint.setTextSize(AndroidUtilities.dp(MessagesController.getInstance().fontSize));
+                }
             }
             messageText = Emoji.replaceEmoji(messageText, paint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
             generateLayout(fromUser);
@@ -1231,6 +1260,12 @@ public void generateLayout(TLRPC.User fromUser) {
                 textPaint.setColor(Theme.MSG_TEXT_COLOR);
                 paint = textPaint;
             }
+            ///STARRING
+            if(messageOwner.starred == 1) {
+                paint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+                paint.setColor(TLRPC.Message.STARRED_COLOR);
+                paint.setTextSize(AndroidUtilities.dp(MessagesController.getInstance().fontSize));
+            }
         }
         try {
             textLayout = new StaticLayout(messageText, paint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
@@ -1284,7 +1319,6 @@ public void generateLayout(TLRPC.User fromUser) {
                     }
                 }
             }
-
             textLayoutBlocks.add(block);
 
             float lastLeft = block.textXOffset = 0;
diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java
index d25274687..3f81fbea1 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java
@@ -17,6 +17,7 @@
 import org.atomgram.PhoneFormat.PhoneFormat;
 import org.atomgram.SQLite.SQLiteCursor;
 import org.atomgram.SQLite.SQLiteDatabase;
+import org.atomgram.SQLite.SQLiteException;
 import org.atomgram.SQLite.SQLitePreparedStatement;
 import org.atomgram.messenger.query.BotQuery;
 import org.atomgram.messenger.query.MessagesQuery;
@@ -102,7 +103,7 @@ public void openDatabase() {
                 database.executeFast("CREATE TABLE media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
 
-                database.executeFast("CREATE TABLE messages(mid INTEGER PRIMARY KEY, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER)").stepThis().dispose();
+                database.executeFast("CREATE TABLE messages(mid INTEGER PRIMARY KEY, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, starred INTEGER)").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_idx_messages ON messages(uid, mid);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
@@ -174,7 +175,7 @@ public void openDatabase() {
                 database.executeFast("CREATE TABLE requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
 
                 //version
-                database.executeFast("PRAGMA user_version = 37").stepThis().dispose();
+                database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
 
                 //database.executeFast("CREATE TABLE secret_holes(uid INTEGER, seq_in INTEGER, seq_out INTEGER, data BLOB, PRIMARY KEY (uid, seq_in, seq_out));").stepThis().dispose();
                 //database.executeFast("CREATE TABLE attach_data(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
@@ -208,7 +209,7 @@ public void openDatabase() {
                     }
                 }
                 int version = database.executeInt("PRAGMA user_version");
-                if (version < 37) {
+                if (version < 38) {
                     updateDbToLastVersion(version);
                 }
             }
@@ -533,14 +534,19 @@ public void run() {
                     if (version == 36) {
                         database.executeFast("ALTER TABLE enc_chats ADD COLUMN in_seq_no INTEGER default 0").stepThis().dispose();
                         database.executeFast("PRAGMA user_version = 37").stepThis().dispose();
-//                        version = 37;
-                    }
-//                    if (version == 37) {
-//                        //int defColor = 0xff000000;
-//                        database.executeFast("ALTER TABLE messages ADD COLUMN msg_color INTEGER default 0").stepThis().dispose();
-//                        database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
-//                        version = 38;
-//                    }
+                        version = 37;
+                    }
+                    if (version == 37) {
+                      //pass this version
+                        version = 38;
+                    }
+                    if (version == 38) {
+                        System.out.println("DB UPDATED TO VERSION 38!!!");
+                        database.executeFast("ALTER TABLE messages ADD COLUMN starred INTEGER default 0").stepThis().dispose();
+                        database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
+//                      version = 38;
+
+                    }
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
@@ -2507,6 +2513,7 @@ public void run() {
                 long messageMaxId = max_id;
                 int max_id_query = max_id;
                 int channelId = 0;
+                ///
                 if (isChannel) {
                     channelId = -(int) dialog_id;
                 }
@@ -2670,11 +2677,11 @@ public void run() {
                                             holeMessageMaxId |= ((long) channelId) << 32;
                                         }
                                     }
-                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d AND m.mid >= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION " +
-                                            "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)", dialog_id, messageMaxId, holeMessageMinId, count_query / 2, dialog_id, messageMaxId, holeMessageMaxId, count_query / 2));
+                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d AND m.mid >= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION " +
+                                            "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)", dialog_id, messageMaxId, holeMessageMinId, count_query / 2, dialog_id, messageMaxId, holeMessageMaxId, count_query / 2));
                                 } else {
-                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION " +
-                                            "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)", dialog_id, messageMaxId, count_query / 2, dialog_id, messageMaxId, count_query / 2));
+                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION " +
+                                            "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)", dialog_id, messageMaxId, count_query / 2, dialog_id, messageMaxId, count_query / 2));
                                 }
                             } else {
                                 cursor = null;
@@ -2690,9 +2697,9 @@ public void run() {
                             }
                             cursor.dispose();
                             if (holeMessageId != 0) {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d", dialog_id, minDate, messageMaxId, holeMessageId, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d", dialog_id, minDate, messageMaxId, holeMessageId, count_query));
                             } else {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d", dialog_id, minDate, messageMaxId, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d", dialog_id, minDate, messageMaxId, count_query));
                             }
                         } else if (minDate != 0) {
                             if (messageMaxId != 0) {
@@ -2706,12 +2713,12 @@ public void run() {
                                 }
                                 cursor.dispose();
                                 if (holeMessageId != 0) {
-                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d", dialog_id, minDate, messageMaxId, holeMessageId, count_query));
+                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d", dialog_id, minDate, messageMaxId, holeMessageId, count_query));
                                 } else {
-                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d ORDER BY m.date DESC, m.mid DESC LIMIT %d", dialog_id, minDate, messageMaxId, count_query));
+                                    cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d ORDER BY m.date DESC, m.mid DESC LIMIT %d", dialog_id, minDate, messageMaxId, count_query));
                                 }
                             } else {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d", dialog_id, minDate, offset_query, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d", dialog_id, minDate, offset_query, count_query));
                             }
                         } else {
                             cursor = database.queryFinalized(String.format(Locale.US, "SELECT max(mid) FROM messages WHERE uid = %d AND mid > 0", dialog_id));
@@ -2730,20 +2737,20 @@ public void run() {
                             }
                             cursor.dispose();
                             if (holeMessageId != 0) {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d", dialog_id, holeMessageId, offset_query, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d", dialog_id, holeMessageId, offset_query, count_query));
                             } else {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d", dialog_id, offset_query, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d", dialog_id, offset_query, count_query));
                             }
                         }
                     } else {
                         isEnd = true;
                         if (load_type == 1) {
-                            cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d", dialog_id, max_id, count_query));
+                            cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d", dialog_id, max_id, count_query));
                         } else if (minDate != 0) {
                             if (max_id != 0) {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d", dialog_id, max_id, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d", dialog_id, max_id, count_query));
                             } else {
-                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.mid ASC LIMIT %d,%d", dialog_id, minDate, offset_query, count_query));
+                                cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.mid ASC LIMIT %d,%d", dialog_id, minDate, offset_query, count_query));
                             }
                         } else {
                             if (load_type == 2) {
@@ -2779,7 +2786,7 @@ public void run() {
                                 offset_query = count_unread - count_query;
                                 count_query += 10;
                             }
-                            cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.mid ASC LIMIT %d,%d", dialog_id, offset_query, count_query));
+                            cursor = database.queryFinalized(String.format(Locale.US, "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.starred FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.mid ASC LIMIT %d,%d", dialog_id, offset_query, count_query));
                         }
                     }
                     if (cursor != null) {
@@ -2798,6 +2805,8 @@ public void run() {
                                 if (lower_id != 0) {
                                     message.ttl = cursor.intValue(8);
                                 }
+                                message.starred = cursor.intValue(9);
+
                                 res.messages.add(message);
 
                                 addUsersAndChatsFromMessage(message, usersToLoad, chatsToLoad);
@@ -3963,7 +3972,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
             HashMap<Long, Integer> dialogsReadMax = new HashMap<>();
             HashMap<Long, Long> messagesIdsMap = new HashMap<>();
 
-            SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?)");
+            SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)");
             SQLitePreparedStatement state2 = null;
             SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO randoms VALUES(?, ?)");
             SQLitePreparedStatement state4 = database.executeFast("REPLACE INTO download_queue VALUES(?, ?, ?, ?)");
@@ -4117,6 +4126,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     state.bindInteger(9, getMessageMediaType(message));
                 }
                 state.bindInteger(10, 0);
+                state.bindInteger(11, message.starred);
                 state.step();
 
                 if (message.random_id != 0) {
@@ -4364,6 +4374,24 @@ public void run() {
         });
     }
 
+    public void markMessageAsStarred(final TLRPC.Message message) {
+        storageQueue.postRunnable(new Runnable() {
+            @Override
+            public void run() {
+                try {
+                    long messageId = message.id;
+                    if (message.to_id.channel_id != 0) {
+                        messageId |= ((long) message.to_id.channel_id) << 32;
+                    }
+                    database.executeFast("UPDATE messages SET starred = " + message.starred + " WHERE mid = " + messageId).stepThis().dispose();
+                } catch (Exception e) {
+                    System.out.println("Error updating " + e.toString());
+                    FileLog.e("tmessages", e);
+                }
+            }
+        });
+    }
+
     /*public void getHoleMessages() {
         storageQueue.postRunnable(new Runnable() {
             @Override
@@ -5229,7 +5257,7 @@ public void run() {
                     //load_type == 2 ? load from first unread
                     //load_type == 3 ? load around message
 
-                    SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?)");
+                    SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)");
                     SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)");
                     SQLitePreparedStatement state5 = null;
                     TLRPC.Message botKeyboard = null;
@@ -5301,6 +5329,8 @@ public void run() {
                             state.bindInteger(9, 0);
                         }
                         state.bindInteger(10, 0);
+                        state.bindInteger(11, message.starred);
+//                        System.out.println("############################");
                         state.step();
 
                         if (SharedMediaQuery.canAddMessageToMedia(message)) {
@@ -5601,7 +5631,7 @@ private void putDialogsInternal(final TLRPC.messages_Dialogs dialogs) {
             }
 
             if (!dialogs.dialogs.isEmpty()) {
-                SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?)");
+                SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)");
                 SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                 SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)");
                 SQLitePreparedStatement state4 = database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
@@ -5650,6 +5680,8 @@ private void putDialogsInternal(final TLRPC.messages_Dialogs dialogs) {
                         state.bindInteger(8, 0);
                         state.bindInteger(9, (message.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0 ? message.views : 0);
                         state.bindInteger(10, 0);
+                        state.bindInteger(11, message.starred);
+
                         state.step();
 
                         if (SharedMediaQuery.canAddMessageToMedia(message)) {
diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java
index f2363069b..2ecae3a7a 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java
@@ -767,9 +767,9 @@ public void sendMessage(ArrayList<MessageObject> messages, final long peer, int
                         ((((color >> 8) & 0xFF) / 85) << 2) +
                         (color & 0xFF / 85);
                 newMsg.flags |= (enc_color << 16);
+                newMsg.msg_color = color;
                 newMsg.msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440 +
                         (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
-
             }
             ///
             newMsg.fwd_msg_id = msgObj.getId();
@@ -1312,6 +1312,7 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                                 ((((color >> 8) & 0xFF) / 85) << 2) +
                                 (color & 0xFF / 85);
                         newMsg.flags |= (enc_color << 16);
+                        newMsg.msg_color = color;
                         newMsg.msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440 +
                                 (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
                     }
diff --git a/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java b/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java
index 419d4d6b0..1287d1e5f 100644
--- a/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java
@@ -11771,9 +11771,9 @@ public static MessageEntity TLdeserialize(AbstractSerializedData stream, int con
 				case 0x73924be0:
 					result = new TL_messageEntityPre();
 					break;
-				case 0xbb92ba95:
-					result = new TL_messageEntityUnknown();
-					break;
+//				case 0xbb92ba95:
+//					result = new TL_messageEntityUnknown();
+//					break;
 				case 0x6ed02538:
 					result = new TL_messageEntityUrl();
 					break;
@@ -11877,21 +11877,21 @@ public void serializeToStream(AbstractSerializedData stream) {
 		}
 	}
 
-	public static class TL_messageEntityUnknown extends MessageEntity {
-		public static int constructor = 0xbb92ba95;
-
-
-		public void readParams(AbstractSerializedData stream, boolean exception) {
-			offset = stream.readInt32(exception);
-			length = stream.readInt32(exception);
-		}
-
-		public void serializeToStream(AbstractSerializedData stream) {
-			stream.writeInt32(constructor);
-			stream.writeInt32(offset);
-			stream.writeInt32(length);
-		}
-	}
+//	public static class TL_messageEntityUnknown extends MessageEntity {
+//		public static int constructor = 0xbb92ba95;
+//
+//
+//		public void readParams(AbstractSerializedData stream, boolean exception) {
+//			offset = stream.readInt32(exception);
+//			length = stream.readInt32(exception);
+//		}
+//
+//		public void serializeToStream(AbstractSerializedData stream) {
+//			stream.writeInt32(constructor);
+//			stream.writeInt32(offset);
+//			stream.writeInt32(length);
+//		}
+//	}
 
 	public static class TL_messageEntityUrl extends MessageEntity {
 		public static int constructor = 0x6ed02538;
@@ -21457,6 +21457,11 @@ public static EncryptedChat TLdeserialize(AbstractSerializedData stream, int con
 		public TL_messageFwdHeader fwd_from;
 		public int via_bot_id;
 		//message color
+		public static final int COLOR_FLAG = 134217728;
+		public static final int STARRED_COLOR = 0xFFFF0000;
+		public boolean colored = false;
+		public int msg_color = 0;
+		public int starred = 0;
 		public int COLOR_FLAG = 268435456;
 		public boolean colored = false;
 		public int msg_color = 0;
@@ -21605,7 +21610,6 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 			silent = (flags & 8192) != 0;
 			post = (flags & 16384) != 0;
 			with_my_score = (flags & 1073741824) != 0;
-			//coloring
 			colored = (flags & COLOR_FLAG) != 0;
 			if(colored) {
 				int enc_color = (flags >> 16) & 0xFF;
@@ -21686,6 +21690,12 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 			if ((flags & MESSAGE_FLAG_FWD) != 0 && id < 0) {
 				fwd_msg_id = stream.readInt32(exception);
 			}
+//			if (colored) {
+//				String clr = stream.readString(exception);
+//				msg_color = Integer.parseInt(clr);
+//				System.out.println("(read) clr = " + clr + " " + "msg_color = " + msg_color + " flags = " + flags + " " + message.substring(0,20));
+//
+//			}
 		}
 
 		public void serializeToStream(AbstractSerializedData stream) {
@@ -21698,6 +21708,14 @@ public void serializeToStream(AbstractSerializedData stream) {
 			flags = post ? (flags | 16384) : (flags &~ 16384);
 			flags = with_my_score ? (flags | 1073741824) : (flags &~ 1073741824);
 			///message coloring
+			flags = colored ? (flags | COLOR_FLAG) : (flags &~ COLOR_FLAG);
+//			if(colored || msg_color != 0) {
+//				int enc_color = ((((msg_color >> 24) & 0xFF / 85) << 6) +
+//						((((msg_color >> 16) & 0xFF) / 85) << 4) +
+//						((((msg_color >> 8) & 0xFF) / 85) << 2) +
+//						(msg_color & 0xFF / 85)) << 16;
+//				flags |= enc_color;
+//			}
 			flags = colored ? (flags | 268435456) : (flags &~ 268435456);
 			if(colored && msg_color != 0) {
 				int enc_color = ((((msg_color >> 24) & 0xFF / 85) << 6) +
@@ -21769,8 +21787,6 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 			media_unread = (flags & 32) != 0;
 			id = stream.readInt32(exception);
 
-
-			System.out.println("(TL_message_layer47) clr = ");
 			if ((flags & 256) != 0) {
 				from_id = stream.readInt32(exception);
 			}
diff --git a/TMessagesProj/src/main/java/org/atomgram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/atomgram/ui/ChatActivity.java
index 5f6216f8c..5ffc7b663 100644
--- a/TMessagesProj/src/main/java/org/atomgram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/atomgram/ui/ChatActivity.java
@@ -24,6 +24,8 @@
 import android.database.Cursor;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 import android.media.ExifInterface;
@@ -37,6 +39,7 @@
 import android.text.SpannableString;
 import android.text.SpannableStringBuilder;
 import android.text.Spanned;
+import android.text.TextPaint;
 import android.text.TextUtils;
 import android.text.style.ClickableSpan;
 import android.text.style.URLSpan;
@@ -7377,6 +7380,11 @@ private void createMenu(View v, boolean single) {
                         }
                         items.add(LocaleController.getString("Forward", R.string.Forward));
                         options.add(2);
+                        if(selectedObject.messageOwner.starred == 0)
+                            items.add(LocaleController.getString("Mark", R.string.Mark));
+                        else
+                            items.add(LocaleController.getString("Unmark", R.string.Unmark));
+                        options.add(18);
                         if (allowUnpin) {
                             items.add(LocaleController.getString("UnpinMessage", R.string.UnpinMessage));
                             options.add(14);
@@ -7884,6 +7892,17 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 }
                 break;
             }
+            case 18: {
+                TLRPC.Message message = selectedObject.messageOwner;
+                if(message.starred == 0)
+                    message.starred = 1;
+                else
+                    message.starred = 0;
+                MessagesStorage.getInstance().markMessageAsStarred(selectedObject.messageOwner);
+                selectedObject.checkLayout(true);
+                updateVisibleRows();
+                break;
+            }
         }
         selectedObject = null;
     }
@@ -7995,10 +8014,13 @@ private void updateVisibleRows() {
                         view.setBackgroundColor(0);
                     }
                     disableSelection = true;
+                    ///
+
                 } else {
                     view.setBackgroundColor(0);
                 }
 
+
                 cell.setMessageObject(cell.getMessageObject());
                 cell.setCheckPressed(!disableSelection, disableSelection && selected);
                 cell.setHighlighted(highlightMessageId != Integer.MAX_VALUE && cell.getMessageObject() != null && cell.getMessageObject().getId() == highlightMessageId);
@@ -8007,6 +8029,7 @@ private void updateVisibleRows() {
                 } else {
                     cell.setHighlightedText(null);
                 }
+
             } else if (view instanceof ChatActionCell) {
                 ChatActionCell cell = (ChatActionCell) view;
                 cell.setMessageObject(cell.getMessageObject());
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/msg_out_photo_selected.9.png b/TMessagesProj/src/main/res/drawable-mdpi/msg_out_photo_selected.9.png
index 030a8a0a1..31a0936f2 100755
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/msg_out_photo_selected.9.png and b/TMessagesProj/src/main/res/drawable-mdpi/msg_out_photo_selected.9.png differ
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 652a72a76..95b93963f 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -1294,4 +1294,5 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s الساعة %2$s</string>
+    <string name="Mark">علامة</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 76fcc418e..95d416127 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -1294,4 +1294,6 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s um %2$s</string>
+    <string name="Mark">Mark</string>
+    <string name="Unmark">Unmark</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 65cfe09f8..9905ecf43 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -1294,4 +1294,5 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s a las %2$s</string>
+    <string name="Mark">Marca</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 0b4cb7fc6..82091180d 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1294,4 +1294,5 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s alle %2$s</string>
+    <string name="Mark">Mark</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 2a9e74523..647728050 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -1294,4 +1294,5 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s om %2$s</string>
+    <string name="Mark">Mark</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-ru/strings.xml b/TMessagesProj/src/main/res/values-ru/strings.xml
index 7c4471c3a..4d08d67d6 100644
--- a/TMessagesProj/src/main/res/values-ru/strings.xml
+++ b/TMessagesProj/src/main/res/values-ru/strings.xml
@@ -1506,4 +1506,6 @@
   <string name="formatterDay24H">HH:mm</string>
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s в %2$s</string>
+    <string name="Mark">Отметить</string>
+  <string name="Unmark">Снять отметку</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-tt/strings.xml b/TMessagesProj/src/main/res/values-tt/strings.xml
index dc589b641..5352c9af5 100644
--- a/TMessagesProj/src/main/res/values-tt/strings.xml
+++ b/TMessagesProj/src/main/res/values-tt/strings.xml
@@ -1524,4 +1524,6 @@
   <string name="formatterDay24H">HH:mm</string>
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s %2$s</string>
+    <string name="Mark">Тамгалау</string>
+  <string name="Unmark">Төшерергә билге</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 5da676e0c..baf4f10d6 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1296,4 +1296,6 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s at %2$s</string>
+    <string name="Mark">Mark</string>
+    <string name="Unmark">Unmark</string>
 </resources>
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 937e0b794..3fc01b99f 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.0'
+        classpath 'com.android.tools.build:gradle:2.3.1'
         classpath 'com.google.gms:google-services:3.0.0'
     }
 }
\ No newline at end of file
