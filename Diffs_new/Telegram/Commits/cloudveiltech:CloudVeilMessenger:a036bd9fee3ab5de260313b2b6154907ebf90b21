diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index e4046e101..08628d852 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -134,7 +134,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 1481
+    defaultConfig.versionCode = 1483
 
     sourceSets.debug {
         manifest.srcFile 'config/debug/AndroidManifest.xml'
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
index 3a3575a9f..7d671fa99 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
@@ -37,6 +37,7 @@ public static boolean isDisabledSecretChat() {
     public static void setDisableSecretChat(boolean isDisabled) {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
         preferences.edit().putBoolean("disabledSecretChat", isDisabled).apply();
+
     }
 
     public static int getMinSecretChatTtl() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 605408291..b1c8ed7c4 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -9901,6 +9901,21 @@ public static void openChatOrProfileWith(TLRPC.User user, TLRPC.Chat chat, BaseF
                 closeLast = true;
             }
         }
+
+        //CloudVeil start
+        if(chat != null) {
+            if(!MessagesController.getInstance(fragment.getCurrentAccount()).isDialogIdAllowed(chat.id)) {
+                ChatActivity.showWarning(fragment, chat, null, null);
+                return;
+            }
+        } else if (user != null) {
+            if (!MessagesController.getInstance(fragment.getCurrentAccount()).isDialogIdAllowed(user.id)) {
+                ChatActivity.showWarning(fragment, user, null, null);
+                return;
+            }
+        }
+
+        //CloudVeil end
         if (reason != null) {
             showCantOpenAlert(fragment, reason);
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 792d8b53a..d990c3ca5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -7065,7 +7065,7 @@ public void didReceivedNotification(int id, int account, final Object... args) {
             if (messagesController.isDialogCheckedOnServer(dialog_id) && isDialogAllowed) {
                 chatAdapter.notifyDataSetChanged();
             } else if (!isDialogAllowed) {
-                showWarning(getParentActivity(), messagesController.getObjectByDialogId(dialog_id));
+                showWarning(this, messagesController.getObjectByDialogId(dialog_id), this::finishFragment, this::finishFragment);
                 return;
             }
             //ClloudVeil end
@@ -9399,45 +9399,42 @@ public void didReceivedNotification(int id, int account, final Object... args) {
     }
 
     //CloudVeil start
-    private void showWarning(Context context, TLObject tlObject) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-        builder.setTitle(context.getString(R.string.warning))
-                .setMessage(context.getString(R.string.cloudveil_message_dialog_forbidden))
-                .setPositiveButton(context.getString(R.string.contact), new DialogInterface.OnClickListener() {
-                    public void onClick(DialogInterface dialog, int which) {
-                        dialog.dismiss();
-                        finishFragment();
-                        sendUnlockEmail(tlObject);
+    public static void showWarning(BaseFragment fragment, TLObject tlObject, Runnable onOkRunnable, Runnable onDismissRunnable) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(fragment.getParentActivity());
+        builder.setTitle(fragment.getParentActivity().getString(R.string.warning))
+                .setMessage(fragment.getParentActivity().getString(R.string.cloudveil_message_dialog_forbidden))
+                .setPositiveButton(fragment.getParentActivity().getString(R.string.contact), (dialog, which) -> {
+                    dialog.dismiss();
+                    if(onOkRunnable != null) {
+                        onOkRunnable.run();
                     }
+
+                    sendUnlockEmail(tlObject, fragment.getCurrentAccount());
                 })
-                .setNegativeButton(context.getString(R.string.cancel), new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int i) {
-                        dialog.dismiss();
-                        finishFragment();
+                .setNegativeButton(fragment.getParentActivity().getString(R.string.cancel), (dialog, i) -> {
+                    dialog.dismiss();
+                    if(onDismissRunnable != null) {
+                        onDismissRunnable.run();
                     }
                 })
-                .setOnDismissListener(new DialogInterface.OnDismissListener() {
-                    @Override
-                    public void onDismiss(DialogInterface dialog) {
-                        finishFragment();
+                .setOnDismissListener(dialog -> {
+                    if(onDismissRunnable != null) {
+                        onDismissRunnable.run();
                     }
                 })
-                .setOnBackButtonListener(new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        finishFragment();
+                .setOnBackButtonListener((dialog, which) -> {
+                    if(onDismissRunnable != null) {
+                        onDismissRunnable.run();
                     }
                 });
-        showDialog(builder.create(), new DialogInterface.OnDismissListener() {
-            @Override
-            public void onDismiss(DialogInterface dialog) {
-                finishFragment();
+        fragment.showDialog(builder.create(), dialog -> {
+            if (onDismissRunnable != null) {
+                onDismissRunnable.run();
             }
         });
     }
 
-    private void sendUnlockEmail(TLObject tlObject) {
+    private static void sendUnlockEmail(TLObject tlObject, int currentAccount) {
         String title = "";
         String userName = "";
         String type = "";
@@ -10324,7 +10321,7 @@ public void onResume() {
 
         //CloudVeil start
         if (!MessagesController.getInstance(currentAccount).isDialogIdAllowed(dialog_id)) {
-            showWarning(getParentActivity(), MessagesController.getInstance(currentAccount).getObjectByDialogId(dialog_id));
+            showWarning(this, MessagesController.getInstance(currentAccount).getObjectByDialogId(dialog_id), this::finishFragment, this::finishFragment);
         }
         //CloudVeil end
 
