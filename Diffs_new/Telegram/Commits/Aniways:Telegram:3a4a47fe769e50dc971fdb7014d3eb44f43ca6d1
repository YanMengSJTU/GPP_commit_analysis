diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index acb0798b7..2b1e375a4 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -92,7 +92,7 @@ android {
         targetSdkVersion 21
         renderscriptTargetApi 21
         renderscriptSupportModeEnabled true
-        versionCode 233
-        versionName "1.5.64"
+        versionCode 234
+        versionName "1.5.65"
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 5f2173016..0ff44ed81 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -17,10 +17,11 @@
 import android.view.MotionEvent;
 import android.view.View;
 
+import com.aniways.AniwaysDynamicImageSpansContainer;
+import com.aniways.AniwaysIconInfoDisplayer;
 import com.aniways.IAniwaysIconInfoSpan;
-import com.aniways.AniwaysLoadingImageSpan;
-import com.aniways.AniwaysLoadingImageSpansContainer;
 import com.aniways.IAniwaysTextContainer;
+import com.aniways.IIconInfoDisplayer;
 import com.aniways.Log;
 import com.aniways.volley.toolbox.IResponseListener;
 
@@ -30,7 +31,7 @@
 
 public class ChatMessageCell extends ChatBaseCell implements IAniwaysTextContainer {
 
-    private static final String TAG = "ChatMessageCell";
+    private final AniwaysIconInfoDisplayer mIconInfoDisplayer;
     private int textX, textY;
     private int totalHeight = 0;
     private ClickableSpan pressedLink;
@@ -40,23 +41,13 @@
     private int firstVisibleBlockNum = 0;
     private int totalVisibleBlocksCount = 0;
     private long clickDownEventTIme = -1;
-    private AniwaysLoadingImageSpansContainer mLoadingImageSpansContainer;
+    private AniwaysDynamicImageSpansContainer mDynamicImageSpansContainer;
 
     public ChatMessageCell(Context context, boolean isChat) {
         super(context, isChat);
         drawForwardedName = true;
-        mLoadingImageSpansContainer = new AniwaysLoadingImageSpansContainer(this, new IResponseListener() {
-            @Override
-            public void onError() {
-
-            }
-
-            @Override
-            public void onSuccess() {
-                currentMessageObject.generateLayout(ChatMessageCell.this);
-                setMessageObject(currentMessageObject, true);
-            }
-        });
+        mDynamicImageSpansContainer = new AniwaysDynamicImageSpansContainer(this);
+        mIconInfoDisplayer = new AniwaysIconInfoDisplayer();
     }
 
     @Override
@@ -226,7 +217,7 @@ private void setMessageObject(MessageObject messageObject, boolean force) {
                 }
             }
         }
-        this.mLoadingImageSpansContainer.onSetText(this.getText(), oldText);
+        this.mDynamicImageSpansContainer.onSetText(this.getText(), oldText);
     }
 
     @Override
@@ -238,7 +229,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
         super.onLayout(changed, left, top, right, bottom);
 
-        this.mLoadingImageSpansContainer.onLayoutCalled();
+        this.mDynamicImageSpansContainer.onLayoutCalled();
 
         if (currentMessageObject.messageOwner.out) {
             textX = layoutWidth - backgroundWidth + Utilities.dp(10);
@@ -369,8 +360,8 @@ public View getView() {
     }
 
     @Override
-    public AniwaysLoadingImageSpansContainer getLoadingImageSpansContainer() {
-        return this.mLoadingImageSpansContainer;
+    public AniwaysDynamicImageSpansContainer getDynamicImageSpansContainer() {
+        return this.mDynamicImageSpansContainer;
     }
 
     @Override
@@ -385,9 +376,26 @@ public void addBackTheTextWatchers() {
         setMessageObject(currentMessageObject, true);
     }
 
+    @Override
+    public void onLoadedImageSuccessfuly() {
+        Log.i("AniwaysChatMessageCell", "Successfully loaded image");
+        currentMessageObject.generateLayout(ChatMessageCell.this);
+        setMessageObject(currentMessageObject, true);
+    }
+
+    @Override
+    public void onErrorLoadingImage() {
+
+    }
+
+    @Override
+    public IIconInfoDisplayer getIconInfoDisplayer() {
+        return mIconInfoDisplayer;
+    }
+
     @Override
     protected void onDetachedFromWindow() {
-        this.mLoadingImageSpansContainer.onDetachFromWindowCalled();
+        this.mDynamicImageSpansContainer.onDetachFromWindowCalled();
 
         super.onDetachedFromWindow();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 58884af97..347818200 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -30,8 +30,9 @@
 import org.telegram.messenger.MessagesController;
 
 import com.aniways.AniwaysLoadingImageSpan;
-import com.aniways.AniwaysLoadingImageSpansContainer;
+import com.aniways.AniwaysDynamicImageSpansContainer;
 import com.aniways.IAniwaysTextContainer;
+import com.aniways.IIconInfoDisplayer;
 import com.aniways.Log;
 import com.aniways.anigram.messenger.R;
 import com.aniways.volley.toolbox.IResponseListener;
@@ -60,6 +61,7 @@
     private static Drawable lockDrawable;
     private static Drawable countDrawable;
     private static Drawable groupDrawable;
+    private final AniwaysIconInfoDisplayer mIconInfoDisplayer;
 
     private TLRPC.TL_dialog currentDialog;
     private ImageReceiver avatarImage;
@@ -69,7 +71,7 @@
     private TLRPC.Chat chat = null;
     private TLRPC.EncryptedChat encryptedChat = null;
     private CharSequence lastPrintString = null;
-    private AniwaysLoadingImageSpansContainer mLoadingImageSpansContainer;
+    private AniwaysDynamicImageSpansContainer mLoadingImageSpansContainer;
 
     private void init() {
         if (namePaint == null) {
@@ -158,18 +160,8 @@ private void init() {
     public DialogCell(Context context) {
         super(context);
         init();
-        mLoadingImageSpansContainer = new AniwaysLoadingImageSpansContainer(this, new IResponseListener() {
-            @Override
-            public void onError() {
-
-            }
-
-            @Override
-            public void onSuccess() {
-                Log.i("AniwaysDialogCell", "Successfully loaded image");
-                setDialog(currentDialog);
-            }
-        });
+        mLoadingImageSpansContainer = new AniwaysDynamicImageSpansContainer(this);
+        mIconInfoDisplayer = new AniwaysIconInfoDisplayer();
     }
 
     public void setDialog(TLRPC.TL_dialog dialog) {
@@ -366,7 +358,7 @@ public View getView() {
     }
 
     @Override
-    public AniwaysLoadingImageSpansContainer getLoadingImageSpansContainer() {
+    public AniwaysDynamicImageSpansContainer getDynamicImageSpansContainer() {
         return this.mLoadingImageSpansContainer;
     }
 
@@ -381,6 +373,22 @@ public void addBackTheTextWatchers() {
         setDialog(currentDialog);
     }
 
+    @Override
+    public void onLoadedImageSuccessfuly() {
+        Log.i("AniwaysDialogCell", "Successfully loaded image");
+        setDialog(currentDialog);
+    }
+
+    @Override
+    public void onErrorLoadingImage() {
+
+    }
+
+    @Override
+    public IIconInfoDisplayer getIconInfoDisplayer() {
+        return mIconInfoDisplayer;
+    }
+
     @Override
     protected void onDetachedFromWindow() {
         this.mLoadingImageSpansContainer.onDetachFromWindowCalled();
@@ -744,7 +752,7 @@ public void build(int width, int height) {
             //}
 
             // TODO: need to put a textcontainer there, make this a text container
-            messageString = Aniways.decodeMessage(messageString, new AniwaysIconInfoDisplayer(), this.mTextContainer, true);
+            messageString = Aniways.decodeMessage(messageString, mIconInfoDisplayer, this.mTextContainer, true);
             CharSequence messageStringFinal = TextUtils.ellipsize(messageString, currentMessagePaint, messageWidth - Utilities.dp(12), TextUtils.TruncateAt.END);
             Spannable oldText = this.getText();
             messageLayout = new StaticLayout(messageStringFinal, currentMessagePaint, messageWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
diff --git a/TMessagesProj/src/main/res/values/aniways.xml b/TMessagesProj/src/main/res/values/aniways.xml
index 65ee96177..a22c002ec 100644
--- a/TMessagesProj/src/main/res/values/aniways.xml
+++ b/TMessagesProj/src/main/res/values/aniways.xml
@@ -38,18 +38,20 @@
     <integer name="aniways_smallIconSize">20</integer>
 
     <!-- The height (in dips) of Aniways icons in the AniwaysEditText control. Default value is 60. -->
-    <integer name="aniways_iconInEditTextSize">60</integer>
+    <integer name="aniways_iconInEditTextSize">40</integer>
 
     <!-- The height (in dips) of Aniways icons in the AniwaysTextView control. Default value is 60. -->
-    <integer name="aniways_iconInTextViewSize">60</integer>
+    <integer name="aniways_iconInTextViewSize">40</integer>
 
     <!-- The size (in dips) of Aniways icons in the icon suggestion popup. Default value is 80. -->
-    <integer name="aniways_iconInSuggestionPopupSize">80</integer>
+    <integer name="aniways_iconInSuggestionPopupSize">60</integer>
+
+    <integer name="aniways_bigIconSize">120</integer>
     
     <!-- Whether to use smaller icons in the 'icons on demand' popup and have 3 rows and 6 columns 
     	 instead of the default 2 rows and 4 columns.
 	 	 Default value is 'false'.  -->
-    <bool name="aniways_useSmallerIconsInIconsOnDemendPopup">false</bool>
+    <bool name="aniways_useSmallerIconsInIconsOnDemendPopup">true</bool>
 
     <!--
        The number of times that the user sees highlighted text (suggested to be replaced with an icon) without clicking on it until the 
