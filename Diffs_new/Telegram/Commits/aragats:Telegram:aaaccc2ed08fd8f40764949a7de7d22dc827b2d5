diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index eb8eb3ace..4b2fa01a8 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -34,6 +34,7 @@
 //TODO Look at MessagesController methods. There are many good examples and best practice.
 public class PostsController implements NotificationCenter.NotificationCenterDelegate {
 
+    private Location currentLocation;
     public Venue currentVenue;
 
     public Post currentPost;
@@ -139,6 +140,7 @@ public void loadPosts(final int offset, final int count, boolean reload, boolean
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
             return;
         }
+        currentLocation = location;
 //        NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
 
         //TODO here async  request
@@ -148,6 +150,10 @@ public void loadPosts(final int offset, final int count, boolean reload, boolean
 
     }
 
+    public Location getCurrentLocation(){
+        return currentLocation;
+    }
+
 
     public void processLoadedPosts(PostResponse postResponse, final int offset, final int count, boolean reload) {
         if (reload) {
@@ -176,6 +182,7 @@ public void loadCurrentVenue(String loc) {
 //            NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
             return;
         }
+
         Venue venue = new Venue();
         Coordinates coordinates = new Coordinates();
         coordinates.setCoordinates(Arrays.asList(location.getLongitude(), location.getLatitude()));
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java
index dfe760d16..b1278de23 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java
@@ -38,9 +38,6 @@ public String getMessage() {
         return this.post.getMessage();
     }
 
-    public String getAuthor() {
-        return this.post.getUser().getFirstName() + " " + post.getUser().getLastName();
-    }
 
     public String getVenueName() {
         return this.post.getVenue().getName();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java
index 469d87753..dda842a7c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java
@@ -25,10 +25,6 @@ public String getId() {
     }
 
 
-    public String getVenuePreviewImageUrl() {
-        return this.venue.getPreviewImage().getUrl();
-    }
-
     public String getAddress() {
         return this.venue.getAddress();
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/service/mock/VenueServiceMock.java b/TMessagesProj/src/main/java/org/telegram/messenger/service/mock/VenueServiceMock.java
index 8f8d69878..d384e52c3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/service/mock/VenueServiceMock.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/service/mock/VenueServiceMock.java
@@ -70,7 +70,6 @@ public static Venue generateVenue(int i) {
         result.setId("" + i);
         Image image = ImageServiceMock.getRandomImage();
         result.setImage(image);
-        result.setPreviewImage(image);
         result.setAddress(PostServiceMock.generateString("ab c de fg rty  ui o ph jk", 60));
         result.setName(PostServiceMock.generateString("ab c de fg rty  ui o ph jk", 60));
         result.setCoordinates(CoordinatesServiceMock.getRandomCoordinates());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
index c8bb8dad7..1f694be1d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostCell.java
@@ -12,6 +12,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.drawable.Drawable;
+import android.location.Location;
 import android.os.Build;
 import android.text.Layout;
 import android.text.Spannable;
@@ -29,10 +30,12 @@
 import org.telegram.android.PostsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.messenger.dto.Coordinates;
 import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.dto.Post;
 import org.telegram.messenger.object.TextLayoutBlock;
 import org.telegram.ui.Components.AvatarDrawable;
+import org.telegram.ui.LocationActivityAragats;
 import org.telegram.utils.StringUtils;
 
 public class PostCell extends BaseCell {
@@ -333,15 +336,33 @@ public void buildLayout() {
 
             currentAddressPaint = messagePrintingPaint;
 
-            String distance = "n km";
-            if (distance.length() > 150) {
-                distance = distance.substring(0, 150);
+//            String distance = "n km";
+//            String distance = LocaleController.formatString("AccurateTo", R.string.AccurateTo, LocaleController.formatPluralString("Meters", (int) gpsLocation.getAccuracy()));
+//            String distance = LocaleController.formatString("AccurateTo", R.string.AccurateTo, LocaleController.formatPluralString("Meters", (int) PostsController.getInstance().getCurrentLocation().getAccuracy()));
+
+            String distanceStr = "";
+            Location userLocation = PostsController.getInstance().getCurrentLocation();
+            if (userLocation != null && post.getCoordinates() != null) {
+                Coordinates coordinates = post.getCoordinates();
+                Location location = new Location("network");
+                location.setLongitude(coordinates.getCoordinates().get(0));
+                location.setLatitude(coordinates.getCoordinates().get(1));
+                float distance = location.distanceTo(userLocation);
+                if (distance < 1000) {
+                    distanceStr = String.format("%d %s", (int) (distance), LocaleController.getString("MetersAway", R.string.MetersAway));
+                } else {
+                    distanceStr = String.format("%.2f %s", distance / 1000.0f, LocaleController.getString("KMetersAway", R.string.KMetersAway));
+                }
+            }
+
+            if (distanceStr.length() > 150) {
+                distanceStr = distanceStr.substring(0, 150);
             }
-            distance = distance.replace("\n", " ");
+            distanceStr = distanceStr.replace("\n", " ");
 
 //                addressString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff4d83b3>%s</c>", address, post.messageText)), addressPaint.getFontMetricsInt(), AndroidUtilities.dp(20));
             // address: distance
-            addressString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff808080>%s</c>", address, distance)), addressPaint.getFontMetricsInt(), AndroidUtilities.dp(20));
+            addressString = Emoji.replaceEmoji(AndroidUtilities.replaceTags(String.format("<c#ff4d83b3>%s:</c> <c#ff808080>%s</c>", address, distanceStr)), addressPaint.getFontMetricsInt(), AndroidUtilities.dp(20));
 
 
 //            if (unreadCount != 0) {
@@ -637,8 +658,7 @@ public void update(int mask) {
         String url = post.getVenuePreviewImageUrl();
         if (!StringUtils.isEmpty(url)) {
             avatarImage.setImage(post.getVenuePreviewImageUrl(), null, avatarDrawable, null, 0);
-        }
-        {
+        } else {
 //        avatarImage.setImageResource(R.drawable.pin);
             avatarImage.setImageBitmap(getResources().getDrawable(R.drawable.pin));
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index 86ae4257f..e6cf58008 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -738,7 +738,8 @@ public void run() {
         }
     }
 
-    //TODO method to get location
+    // cache
+    //TODO-aragats method to get location
     public static Location getLastLocation() {
         LocationManager lm = (LocationManager) ApplicationLoader.applicationContext.getSystemService(Context.LOCATION_SERVICE);
         List<String> providers = lm.getProviders(true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index ad9a42cab..0b094d66d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -264,7 +264,7 @@ public void onFragmentDestroy() {
     }
 
     @Override
-    public View createView(Context context, LayoutInflater inflater) {
+    public View createView(final Context context, LayoutInflater inflater) {
 
         for (int a = 0; a < 4; a++) {
             postMediaCellsCache.add(new PostMediaCell(context));
@@ -297,13 +297,15 @@ public void onItemClick(final int id) {
                 } else if (id == done_button) {
                     Toast.makeText(((Context) getParentActivity()), "DONE BUTTON is CLICKED", Toast.LENGTH_SHORT).show();
                     Post post = posts.get(0);
-                    if (post != null) {
+                    if (post != null && venue != null) {
                         post.setVenue(venue);
+                        post.setCoordinates(venue.getCoordinates());
                         String text = postCreateActivityEnterView.getFieldText();
                         post.setMessage(text);
 
                     }
 
+                    //TODO many check text, venue, coordinates and so on.
                     if(post != null && venue != null) {
                         PostsController.getInstance().addPost(post);
                     }
@@ -1684,7 +1686,7 @@ private void didSelectPhotos(ArrayList<String> photos) {
 //            image = ImageServiceMock.getRandomImage();
             post.setImage(image);
             post.setPreviewImage(image);
-            post.setVenue(VenueServiceMock.getRandomVenue());
+//            post.setVenue(VenueServiceMock.getRandomVenue());
             //TODO-temp
 //            PostCreateActivity.this.post = new PostObject(post);
             //DELETE ALL to store only one
