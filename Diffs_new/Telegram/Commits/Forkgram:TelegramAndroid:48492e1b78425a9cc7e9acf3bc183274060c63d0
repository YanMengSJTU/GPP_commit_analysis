diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 7e5dbf1ad..1cc3a8320 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -261,6 +261,8 @@ public void run() {
         @Override
         public int compare(TLRPC.TL_dialog dialog1, TLRPC.TL_dialog dialog2) {
             boolean reverseOrder = mainPreferences.getBoolean("reverseOrderPins", false);
+            boolean unmutedPrimary = mainPreferences.getBoolean("unmutedOnTop", false);
+
             if (!dialog1.pinned && dialog2.pinned) {
                 return 1;
             } else if (dialog1.pinned && !dialog2.pinned) {
@@ -276,10 +278,37 @@ public int compare(TLRPC.TL_dialog dialog1, TLRPC.TL_dialog dialog2) {
                     return 0;
                 }
             }
+
             TLRPC.DraftMessage draftMessage = DataQuery.getInstance(currentAccount).getDraft(dialog1.id);
             int date1 = draftMessage != null && draftMessage.date >= dialog1.last_message_date ? draftMessage.date : dialog1.last_message_date;
             draftMessage = DataQuery.getInstance(currentAccount).getDraft(dialog2.id);
             int date2 = draftMessage != null && draftMessage.date >= dialog2.last_message_date ? draftMessage.date : dialog2.last_message_date;
+
+            if (unmutedPrimary) {
+                boolean mute1 = isDialogMuted(dialog1.id);
+                boolean mute2 = isDialogMuted(dialog2.id);
+                boolean unread1 = dialog1.unread_count > 0;
+                boolean unread2 = dialog2.unread_count > 0;
+
+                boolean newMention1 = unread1 && !mute1;
+                boolean newMention2 = unread2 && !mute2;
+
+                if (!newMention1 && newMention2) {
+                    return 1;
+                } else if (newMention1 && !newMention2) {
+                    return -1;
+                } else if (newMention1 && newMention2) {
+                    if (date1 < date2) {
+                        return 1;
+                    } else if (date1 > date2) {
+                        return -1;
+                    } else {
+                        return 0;
+                    }
+                }
+            }
+
+
             if (date1 < date2) {
                 return 1;
             } else if (date1 > date2) {
@@ -3545,6 +3574,7 @@ public void loadGlobalNotificationsSettings() {
                 }
             }));
         }
+        sortDialogs(null);
     }
 
     public void forceResetDialogs() {
@@ -4363,6 +4393,7 @@ private void applyDialogNotificationsSettings(long dialog_id, TLRPC.PeerNotifySe
         if (updated) {
             NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.notificationsSettingsUpdated);
         }
+        sortDialogs(null);
     }
 
     private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialogs) {
@@ -4406,6 +4437,7 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.TL_dialog> dialog
         if (editor != null) {
             editor.commit();
         }
+        sortDialogs(null);
     }
 
     public void reloadMentionsCountForChannels(final ArrayList<Integer> arrayList) {
@@ -8723,6 +8755,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                                 }
                             }
                         }
+                        sortDialogs(null);
                     } else if (baseUpdate instanceof TLRPC.TL_updateChannel) {
                         final TLRPC.TL_updateChannel update = (TLRPC.TL_updateChannel) baseUpdate;
                         TLRPC.TL_dialog dialog = dialogs_dict.get(-(long) update.channel_id);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index ee0136074..e271f2d85 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -166,6 +166,7 @@
     private int forkSectionRow;
     private int syncPinsRow;
     private int reverseOrderPinsRow;
+    private int unmutedOnTopRow;
 
     private final static int edit_name = 1;
     private final static int logout = 2;
@@ -289,6 +290,7 @@ public boolean onFragmentCreate() {
         inappCameraRow = rowCount++;
         syncPinsRow = rowCount++;
         reverseOrderPinsRow = rowCount++;
+        unmutedOnTopRow = rowCount++;
         messagesSectionRow = rowCount++;
         messagesSectionRow2 = rowCount++;
         customTabsRow = rowCount++;
@@ -473,6 +475,9 @@ public void onItemClick(View view, final int position) {
                 } else if (position == reverseOrderPinsRow) {
                     toggleGlobalMainSetting("reverseOrderPins", view, false);
                     MessagesController.getInstance(currentAccount).sortDialogs(null);
+                } else if (position == unmutedOnTopRow) {
+                    toggleGlobalMainSetting("unmutedOnTop", view, false);
+                    MessagesController.getInstance(currentAccount).sortDialogs(null);
                 } else if (position == inappCameraRow) {
                     SharedConfig.toggleInappCamera();
                     if (view instanceof TextCheckCell) {
@@ -1293,7 +1298,9 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     } else if (position == syncPinsRow) {
                         textCell.setTextAndCheck("Sync Pinned Dialogs", preferences.getBoolean("syncPins", true), false);
                     } else if (position == reverseOrderPinsRow) {
-                        textCell.setTextAndCheck("Reverse Pinned Dialogs Order", preferences.getBoolean("reverseOrderPins", true), false);
+                        textCell.setTextAndCheck("Reverse Pinned Dialogs Order", preferences.getBoolean("reverseOrderPins", false), false);
+                    } else if (position == unmutedOnTopRow) {
+                        textCell.setTextAndCheck("Unmuted Messages are Primary", preferences.getBoolean("unmutedOnTop", false), false);
                     } else if (position == sendByEnterRow) {
                         textCell.setTextAndCheck(LocaleController.getString("SendByEnter", R.string.SendByEnter), preferences.getBoolean("send_by_enter", false), true);
                     } else if (position == saveToGalleryRow) {
@@ -1367,6 +1374,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
             boolean forkRows = position == squareAvatarsRow 
             || position == inappCameraRow 
             || position == syncPinsRow
+            || position == unmutedOnTopRow
             || position == reverseOrderPinsRow;
             return forkRows || position == textSizeRow || position == enableAnimationsRow || position == notificationRow || position == backgroundRow || position == numberRow ||
                     position == askQuestionRow || position == sendLogsRow || position == sendByEnterRow || position == autoplayGifsRow || position == privacyRow ||
@@ -1454,6 +1462,7 @@ public int getItemViewType(int position) {
                     || position == inappCameraRow 
                     || position == syncPinsRow 
                     || position == reverseOrderPinsRow
+                    || position == unmutedOnTopRow
                     || position == sendByEnterRow 
                     || position == saveToGalleryRow 
                     || position == autoplayGifsRow 
