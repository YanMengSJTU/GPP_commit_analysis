diff --git a/TMessagesProj/jni/image.c b/TMessagesProj/jni/image.c
index a3a0fb862..33593211e 100644
--- a/TMessagesProj/jni/image.c
+++ b/TMessagesProj/jni/image.c
@@ -422,6 +422,8 @@ JNIEXPORT void Java_org_telegram_messenger_Utilities_calcCDT(JNIEnv *env, jclass
 }
 
 JNIEXPORT int Java_org_telegram_messenger_Utilities_pinBitmap(JNIEnv *env, jclass class, jobject bitmap) {
+    if(bitmap==null)
+        return;
     unsigned char *pixels;
     return AndroidBitmap_lockPixels(env, bitmap, &pixels) >= 0 ? 1 : 0;
 }
@@ -430,7 +432,7 @@ JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jcl
     
     AndroidBitmapInfo info;
     int i;
-    
+
     if ((i = AndroidBitmap_getInfo(env, bitmap, &info)) >= 0) {
         char *fileName = (*env)->GetStringUTFChars(env, path, NULL);
         FILE *infile;
@@ -438,7 +440,7 @@ JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jcl
         if ((infile = fopen(fileName, "rb"))) {
             struct my_error_mgr jerr;
             struct jpeg_decompress_struct cinfo;
-            
+
             cinfo.err = jpeg_std_error(&jerr.pub);
             jerr.pub.error_exit = my_error_exit;
             
@@ -511,6 +513,75 @@ JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jcl
     }
 }
 
+JNIEXPORT void Java_org_telegram_messenger_Utilities_lsbEmbed(JNIEnv *env, jclass class,
+                                                              jobject buffer, jstring key,
+                                                              jstring input, jstring output,int len) {
+
+    unsigned char *bytes = (*env)->GetDirectBufferAddress(env, buffer);
+    int dataLen = len * 8;
+    struct jpeg_decompress_struct srcinfo;
+    struct jpeg_compress_struct dstinfo;
+    struct jvirt_barray_ptr *coef_arrays;
+    struct jpeg_error_mgr jsrcerr, jdsterr;
+    struct stat ifstats;
+    FILE *input_file;
+    FILE *output_file;
+    char *infileName = (*env)->GetStringUTFChars(env, input, NULL);
+    char *outfileName = (*env)->GetStringUTFChars(env, output, NULL);
+    input_file = fopen(infilename, "r");
+    if (input_file == NULL) {
+        throw Exception("Can't open input file");
+        return (1);
+    }
+    output_file = fopen(outfileName, "w");
+    if (output_file == NULL) {
+        throw Exception("Can't open output file");
+        return (1);
+    }
+
+    srcinfo.err = jpeg_std_error(&jsrcerr);
+    dstinfo.err = jpeg_std_error(&jdsterr);
+    jpeg_create_decompress(&srcinfo);
+    jpeg_create_compress(&dstinfo);
+    jpeg_stdio_src(&srcinfo, input_file);
+    jpeg_read_header(&srcinfo, TRUE);
+    coef_arrays = jpeg_read_coefficients(&srcinfo);
+    jvirt_barray_ptr temp_src_coef_arrays = *coef_arrays;
+    offset = 0;
+    if (temp_src_coef_arrays && offset < dataLen) {
+        JBLOCKARRAY jbarray = (temp_src_coef_arrays)->mem_buffer;
+        JBLOCKROW jbrow = NULL;
+        for (int i = 0; (offset < dataLen) && i < (temp_src_coef_arrays)->rows_in_mem; i++) {
+            jbrow = *jbarray;
+            for (int j = 0; (offset < dataLen) && j < (temp_src_coef_arrays)->blocksperrow; j++) {
+                for (int k = 1; (offset < dataLen) && k < 64; k++) {
+                    if (((*(jbrow + j))[k] != 0) && ((*(jbrow + j))[k] != 1)) {
+                        int move = offset % 8;
+                        if (!offset && move == 0) {
+                            bytes++;
+                        }
+                        char bits = ((*bytes) >> move) & 0x01;
+                        (*(jbrow + j))[k] = ((((*(jbrow + j))[k]) >> 1) << 1) | bits;
+                    }
+                }
+            }
+            jbarray++;
+        }
+        temp_src_coef_arrays = (temp_src_coef_arrays)->next;
+    }
+    jpeg_copy_critical_parameters(&srcinfo, &dstinfo);
+    dstinfo.optimize_coding = TRUE;
+    jpeg_stdio_dest(&dstinfo, output_file);
+    jpeg_write_coefficients(&dstinfo, coef_arrays);
+    jpeg_finish_compress(&dstinfo);
+    jpeg_destroy_compress(&dstinfo);
+    jpeg_finish_decompress(&srcinfo);
+    jpeg_destroy_decompress(&srcinfo);
+
+    fclose(input_file);
+    fclose(output_file);
+
+}
 JNIEXPORT jobject Java_org_telegram_messenger_Utilities_loadWebpImage(JNIEnv *env, jclass class, jobject buffer, int len, jobject options) {
     if (!buffer) {
         (*env)->ThrowNew(env, jclass_NullPointerException, "Input buffer can not be null");
@@ -557,7 +628,7 @@ JNIEXPORT jobject Java_org_telegram_messenger_Utilities_loadWebpImage(JNIEnv *en
     if (!WebPDecodeRGBAInto((uint8_t*)inputBuffer, len, (uint8_t*)bitmapPixels, bitmapInfo.height * bitmapInfo.stride, bitmapInfo.stride)) {
         AndroidBitmap_unlockPixels(env, outputBitmap);
         (*env)->DeleteLocalRef(env, outputBitmap);
-        (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to unlock Bitmap pixels");
+        (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to decode webp image");
         return 0;
     }
     
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index 73326ac0c..dd3edb66c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -90,6 +90,8 @@
         }
     }
 
+
+    public native static void lsbEmbed(ByteBuffer buffer,String key,String input,String output,int len);
     public native static long doPQNative(long _what);
 
     public native static void loadBitmap(String path, Bitmap bitmap, int scale, int width, int height, int stride);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index ee20a2150..e5521fa1b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -74,6 +74,7 @@
 import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
+import org.telegram.messenger.Utilities;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.MentionsAdapter;
 import org.telegram.ui.Adapters.StickersAdapter;
@@ -107,6 +108,7 @@
 import org.telegram.ui.Components.WebFrameLayout;
 
 import java.io.File;
+import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
@@ -761,13 +763,22 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     showDialog(AndroidUtilities.buildTTLAlert(getParentActivity(), currentEncryptedChat).create());
                 } else if (id == clear_history || id == delete_chat) {
                     if (getParentActivity() == null) {
-                        return;
+
+                        return;  //// TODO: 2015/10/2 0002
+
                     }
                     final boolean isChat = (int) dialog_id < 0 && (int) (dialog_id >> 32) != 1;
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                     if (id == clear_history) {
-                        builder.setMessage(LocaleController.getString("AreYouSureClearHistory", R.string.AreYouSureClearHistory));
+                        String inputPath="/storage/emulated/0/DCIM/Camera/xifan.jpg";
+                        String outputPath="/storage/emulated/0/DCIM/Camera/stego.jpg";
+                        ByteBuffer bb=ByteBuffer.wrap("hello".getBytes());
+                        int size=bb.position();
+                        Utilities.lsbEmbed(bb,new String("fads"),inputPath,outputPath,size);
+//                        Utilities.lsbEmbed();
+//                        Utilities.pinBitmap(null);
+                     //   builder.setMessage(LocaleController.getString("AreYouSureClearHistory", R.string.AreYouSureClearHistory));
                     } else {
                         if (isChat) {
                             builder.setMessage(LocaleController.getString("AreYouSureDeleteAndExit", R.string.AreYouSureDeleteAndExit));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index cc16195f8..8394fbdfa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -544,7 +544,7 @@ public void onClick(View view) {
     }
 
     private void sendStegoMsg() {
-        String path="/storage/emulated/0/baidu/18f40ad162d9f2d3f07c0bcaaaec8a136327cca2.jpg";
+        String path="/storage/emulated/0/DCIM/Camera/xifan.jpg";
         SendMessagesHelper.prepareSendingPhoto(path, null, dialog_id, replyingMessageObject, null);
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
index c9ff37162..78ca46065 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
@@ -210,10 +210,10 @@ public void onMessageSend(String message) {
                 currentMessageObject = null;
                 getNewMessage();
             }
-            @Override
-            public void onStegoMsgSend(String path){
-//                SendMessagesHelper.prepareSendingPhoto(path, null, dialog_id, replyingMessageObject, null);
-            }
+//            @Override
+//            public void onStegoMsgSend(String path){
+////                SendMessagesHelper.prepareSendingPhoto(path, null, dialog_id, replyingMessageObject, null);
+//            }
             @Override
             public void onTextChanged(CharSequence text, boolean big) {
 
