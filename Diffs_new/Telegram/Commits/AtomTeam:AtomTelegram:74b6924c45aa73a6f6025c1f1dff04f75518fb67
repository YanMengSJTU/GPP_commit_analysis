diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java
index 8c5a639cf..a809645f7 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/MessageObject.java
@@ -107,6 +107,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                 textPaint.setColor(message.msg_color);
             else
                 textPaint.setColor(Theme.MSG_TEXT_COLOR);
+
             ///STARRING
             if(message.starred == 1) {
                 textPaint.setColor(TLRPC.Message.STARRED_COLOR);
@@ -437,6 +438,7 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                     paint.setColor(TLRPC.Message.STARRED_COLOR);
                     paint.setTextSize(AndroidUtilities.dp(MessagesController.getInstance().fontSize));
                 }
+
             }
             int[] emojiOnly = MessagesController.getInstance().allowBigEmoji ? new int[1] : null;
             messageText = Emoji.replaceEmoji(messageText, paint.getFontMetricsInt(), AndroidUtilities.dp(20), false, emojiOnly);
@@ -722,7 +724,6 @@ public boolean checkLayout(boolean forceLayout) {
                 //System.out.println("(TextLayoutPaint) msg_color = " + String.format("0x%08X", messageOwner.msg_color) + " " + messageOwner.message);
                 if (messageOwner.colored || messageOwner.msg_color > 0) {
                     paint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
-
                     paint.setColor(messageOwner.msg_color);
                     paint.setTextSize(AndroidUtilities.dp(MessagesController.getInstance().fontSize));
                 }
diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java
index a68d9a870..3f81fbea1 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/MessagesStorage.java
@@ -537,17 +537,15 @@ public void run() {
                         version = 37;
                     }
                     if (version == 37) {
-                        //int defColor = 0xff000000;
-//                        System.out.println("DB UPDATED TO VERSION 37!!!");
-//                        database.executeFast("ALTER TABLE messages ADD COLUMN starred INTEGER default 0").stepThis().dispose();
-//                        database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
+                      //pass this version
                         version = 38;
                     }
                     if (version == 38) {
                         System.out.println("DB UPDATED TO VERSION 38!!!");
                         database.executeFast("ALTER TABLE messages ADD COLUMN starred INTEGER default 0").stepThis().dispose();
                         database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
-//                        version = 38;
+//                      version = 38;
+
                     }
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
diff --git a/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java
index f9cceb9a0..2ecae3a7a 100644
--- a/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/atomgram/messenger/SendMessagesHelper.java
@@ -767,10 +767,9 @@ public void sendMessage(ArrayList<MessageObject> messages, final long peer, int
                         ((((color >> 8) & 0xFF) / 85) << 2) +
                         (color & 0xFF / 85);
                 newMsg.flags |= (enc_color << 16);
-//                newMsg.msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440 +
-//                        (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
                 newMsg.msg_color = color;
-
+                newMsg.msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440 +
+                        (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
             }
             ///
             newMsg.fwd_msg_id = msgObj.getId();
@@ -1313,9 +1312,9 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                                 ((((color >> 8) & 0xFF) / 85) << 2) +
                                 (color & 0xFF / 85);
                         newMsg.flags |= (enc_color << 16);
-//                        newMsg.msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440 +
-//                                (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
                         newMsg.msg_color = color;
+                        newMsg.msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440 +
+                                (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
                     }
                     ///
                 } else if (location != null) {
diff --git a/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java b/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java
index 1002754df..1287d1e5f 100644
--- a/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/atomgram/tgnet/TLRPC.java
@@ -21462,6 +21462,10 @@ public static EncryptedChat TLdeserialize(AbstractSerializedData stream, int con
 		public boolean colored = false;
 		public int msg_color = 0;
 		public int starred = 0;
+		public int COLOR_FLAG = 268435456;
+		public boolean colored = false;
+		public int msg_color = 0;
+		//
 		//
         public int send_state = 0; //custom
         public int fwd_msg_id = 0; //custom
@@ -21606,15 +21610,12 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 			silent = (flags & 8192) != 0;
 			post = (flags & 16384) != 0;
 			with_my_score = (flags & 1073741824) != 0;
-			//coloring
-			//			colored = (flags & COLOR_FLAG) != 0;
-			//			if(colored) {
-			//				int enc_color = (flags >> 16) & 0xFF;
-			//				msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440
-			//						+ (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
-
-							//System.out.println("(read)" + clr);
-			//			}
+			colored = (flags & COLOR_FLAG) != 0;
+			if(colored) {
+				int enc_color = (flags >> 16) & 0xFF;
+				msg_color = (enc_color & 3) * 85 + (enc_color & 12) * 5440
+						+ (enc_color & 48) * 348160 + (enc_color & 192) * 22282240;
+			}
 			///
 			id = stream.readInt32(exception);
 			if ((flags & 256) != 0) {
@@ -21715,6 +21716,14 @@ public void serializeToStream(AbstractSerializedData stream) {
 //						(msg_color & 0xFF / 85)) << 16;
 //				flags |= enc_color;
 //			}
+			flags = colored ? (flags | 268435456) : (flags &~ 268435456);
+			if(colored && msg_color != 0) {
+				int enc_color = ((((msg_color >> 24) & 0xFF / 85) << 6) +
+						((((msg_color >> 16) & 0xFF) / 85) << 4) +
+						((((msg_color >> 8) & 0xFF) / 85) << 2) +
+						(msg_color & 0xFF / 85)) << 16;
+				flags |= enc_color;
+			}
 			///
 			stream.writeInt32(flags);
 			stream.writeInt32(id);
@@ -21778,7 +21787,6 @@ public void readParams(AbstractSerializedData stream, boolean exception) {
 			media_unread = (flags & 32) != 0;
 			id = stream.readInt32(exception);
 
-
 			if ((flags & 256) != 0) {
 				from_id = stream.readInt32(exception);
 			}
