diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 415385bd0..7d3af271c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -302,10 +302,16 @@
     }
 
     private final Comparator<TLRPC.Dialog> dialogComparator = (dialog1, dialog2) -> {
+        boolean unmutedPrimary = mainPreferences.getBoolean("unmutedOnTop", false);
+
         if (dialog1 instanceof TLRPC.TL_dialogFolder && !(dialog2 instanceof TLRPC.TL_dialogFolder)) {
             return -1;
         } else if (!(dialog1 instanceof TLRPC.TL_dialogFolder) && dialog2 instanceof TLRPC.TL_dialogFolder) {
             return 1;
+        } else if (dialog1.folder_id != 0 && dialog2.folder_id == 0) {
+            return 1;
+        } else if (dialog1.folder_id == 0 && dialog2.folder_id != 0) {
+            return -1;
         } else if (!dialog1.pinned && dialog2.pinned) {
             return 1;
         } else if (dialog1.pinned && !dialog2.pinned) {
@@ -323,6 +329,31 @@
         int date1 = draftMessage != null && draftMessage.date >= dialog1.last_message_date ? draftMessage.date : dialog1.last_message_date;
         draftMessage = getMediaDataController().getDraft(dialog2.id);
         int date2 = draftMessage != null && draftMessage.date >= dialog2.last_message_date ? draftMessage.date : dialog2.last_message_date;
+
+        if (unmutedPrimary) {
+            boolean mute1 = isDialogMuted(dialog1.id);
+            boolean mute2 = isDialogMuted(dialog2.id);
+            boolean unread1 = dialog1.unread_count > 0;
+            boolean unread2 = dialog2.unread_count > 0;
+
+            boolean newMention1 = unread1 && !mute1;
+            boolean newMention2 = unread2 && !mute2;
+
+            if (!newMention1 && newMention2) {
+                return 1;
+            } else if (newMention1 && !newMention2) {
+                return -1;
+            } else if (newMention1 && newMention2) {
+                if (date1 < date2) {
+                    return 1;
+                } else if (date1 > date2) {
+                    return -1;
+                } else {
+                    return 0;
+                }
+            }
+        }
+
         if (date1 < date2) {
             return 1;
         } else if (date1 > date2) {
@@ -4645,6 +4676,7 @@ public void loadGlobalNotificationsSettings() {
                     }
                 }));
             }
+            sortDialogs(null);
         }
         if (!getUserConfig().notificationsSignUpSettingsLoaded) {
             loadSignUpNotificationsSettings();
@@ -5655,6 +5687,7 @@ private void applyDialogNotificationsSettings(long dialog_id, TLRPC.PeerNotifySe
         if (updated) {
             getNotificationCenter().postNotificationName(NotificationCenter.notificationsSettingsUpdated);
         }
+        sortDialogs(null);
     }
 
     private void applyDialogsNotificationsSettings(ArrayList<TLRPC.Dialog> dialogs) {
@@ -5698,6 +5731,7 @@ private void applyDialogsNotificationsSettings(ArrayList<TLRPC.Dialog> dialogs)
         if (editor != null) {
             editor.commit();
         }
+        sortDialogs(null);
     }
 
     public void reloadMentionsCountForChannels(final ArrayList<Integer> arrayList) {
@@ -10255,6 +10289,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                                 }
                             }
                         }
+                        sortDialogs(null);
                     } else if (baseUpdate instanceof TLRPC.TL_updateChannel) {
                         final TLRPC.TL_updateChannel update = (TLRPC.TL_updateChannel) baseUpdate;
                         TLRPC.Dialog dialog = dialogs_dict.get(-(long) update.channel_id);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index f8434fbbe..7a8e61abc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -44,6 +44,7 @@
     private int squareAvatarsRow;
     private int inappCameraRow;
     private int photoHasStickerRow;
+    private int unmutedOnTopRow;
 
     private int emptyRow;
 
@@ -57,6 +58,7 @@ public boolean onFragmentCreate() {
         squareAvatarsRow = rowCount++;
         inappCameraRow = rowCount++;
         photoHasStickerRow = rowCount++;
+        unmutedOnTopRow = rowCount++;
 
         return true;
     }
@@ -117,6 +119,9 @@ public boolean supportsPredictiveItemAnimations() {
                 if (view instanceof TextCheckCell) {
                     ((TextCheckCell) view).setChecked(SharedConfig.hasSticker);
                 }
+            } else if (position == unmutedOnTopRow) {
+                toggleGlobalMainSetting("unmutedOnTop", view, false);
+                MessagesController.getInstance(currentAccount).sortDialogs(null);
             }
         });
 
@@ -166,6 +171,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         String t = LocaleController.getString("PhotoHasSticker", R.string.PhotoHasSticker);
                         String info = LocaleController.getString("PhotoHasStickerInfo", R.string.PhotoHasStickerInfo);
                         textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("photoHasSticker", false), true, false);
+                    } else if (position == unmutedOnTopRow) {
+                        String t = LocaleController.getString("UnmutedOnTop", R.string.UnmutedOnTop);
+                        String info = LocaleController.getString("UnmutedOnTopInfo", R.string.UnmutedOnTopInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("unmutedOnTop", false), true, false);
                     }
                     break;
                 }
@@ -226,8 +235,9 @@ public int getItemViewType(int position) {
                 return 1;
             } else if (0 == 1) {
                 return 2;
-            } else if (position == squareAvatarsRow 
-                || position == inappCameraRow 
+            } else if (position == squareAvatarsRow
+                || position == inappCameraRow
+                || position == unmutedOnTopRow
                 || position == photoHasStickerRow) {
                 return 3;
             } else if (position == sectionRow1) {
