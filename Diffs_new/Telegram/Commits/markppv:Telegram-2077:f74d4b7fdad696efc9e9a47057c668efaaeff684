diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index b3144271b..a56c244b5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -32,7 +32,6 @@
 import android.text.Spanned;
 import android.text.TextUtils;
 import android.text.style.ForegroundColorSpan;
-import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -145,7 +144,6 @@
     private TLRPC.FileLocation avatar;
     private TLRPC.FileLocation avatarBig;
 
-    private TLRPC.User user;
     private TLRPC.UserFull userInfo;
 
     private int extraHeight;
@@ -204,12 +202,6 @@ public void willHidePhotoViewer() {
             avatarImage.getImageReceiver().setVisible(true, true);
         }
     };
-    private ActionBarMenuItem searchMenuItem;
-    private ActionBarMenu menu;
-
-    private boolean isFullyVisible;
-    private boolean updateBioWhenFullyVisible;
-    private boolean postCreateViewWhenFullyVisible;
 
     @Override
     public boolean onFragmentCreate() {
@@ -238,32 +230,13 @@ public boolean onFragmentCreate() {
         helpRow = rowCount++;
         versionRow = rowCount++;
 
-        userInfo = MessagesController.getInstance(currentAccount).getUserFull(
-                UserConfig.getInstance(currentAccount).getClientUserId());
+        DataQuery.getInstance(currentAccount).checkFeaturedStickers();
+        userInfo = MessagesController.getInstance(currentAccount).getUserFull(UserConfig.getInstance(currentAccount).getClientUserId());
+        MessagesController.getInstance(currentAccount).loadUserInfo(UserConfig.getInstance(currentAccount).getCurrentUser(), true, classGuid);
 
         return true;
     }
 
-    @Override
-    protected void onBecomeFullyVisible() {
-        super.onBecomeFullyVisible();
-        isFullyVisible = true;
-        if (updateBioWhenFullyVisible) {
-            listAdapter.notifyItemChanged(bioRow);
-            updateBioWhenFullyVisible = false;
-        }
-        if (postCreateViewWhenFullyVisible) {
-            postCreateViewWhenFullyVisible = false;
-            postCreateView();
-        }
-    }
-
-    @Override
-    protected void onBecomeFullyHidden() {
-        super.onBecomeFullyHidden();
-        isFullyVisible = false;
-    }
-
     @Override
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
@@ -299,9 +272,56 @@ public void onItemClick(int id) {
                 }
             }
         });
-        menu = actionBar.createMenu();
-        searchMenuItem = menu.addItem(search_button, R.drawable.ic_ab_search);
+        ActionBarMenu menu = actionBar.createMenu();
+        ActionBarMenuItem searchItem = menu.addItem(search_button, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
+            @Override
+            public void onSearchExpand() {
+                if (otherItem != null) {
+                    otherItem.setVisibility(View.GONE);
+                }
+                searchAdapter.loadFaqWebPage();
+                listView.setAdapter(searchAdapter);
+                listView.setEmptyView(emptyView);
+                avatarContainer.setVisibility(View.GONE);
+                writeButton.setVisibility(View.GONE);
+                nameTextView.setVisibility(View.GONE);
+                onlineTextView.setVisibility(View.GONE);
+                extraHeightView.setVisibility(View.GONE);
+                fragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
+                fragmentView.setTag(Theme.key_windowBackgroundWhite);
+                needLayout();
+            }
+
+            @Override
+            public void onSearchCollapse() {
+                if (otherItem != null) {
+                    otherItem.setVisibility(View.VISIBLE);
+                }
+                listView.setAdapter(listAdapter);
+                listView.setEmptyView(null);
+                emptyView.setVisibility(View.GONE);
+                avatarContainer.setVisibility(View.VISIBLE);
+                writeButton.setVisibility(View.VISIBLE);
+                nameTextView.setVisibility(View.VISIBLE);
+                onlineTextView.setVisibility(View.VISIBLE);
+                extraHeightView.setVisibility(View.VISIBLE);
+                fragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundGray));
+                fragmentView.setTag(Theme.key_windowBackgroundGray);
+                needLayout();
+            }
+
+            @Override
+            public void onTextChanged(EditText editText) {
+                searchAdapter.search(editText.getText().toString().toLowerCase());
+            }
+        });
+        searchItem.setContentDescription(LocaleController.getString("SearchInSettings", R.string.SearchInSettings));
+        searchItem.setSearchFieldHint(LocaleController.getString("SearchInSettings", R.string.SearchInSettings));
+
         otherItem = menu.addItem(0, R.drawable.ic_ab_other);
+        otherItem.setContentDescription(LocaleController.getString("AccDescrMoreOptions", R.string.AccDescrMoreOptions));
+        otherItem.addSubItem(edit_name, R.drawable.msg_edit, LocaleController.getString("EditName", R.string.EditName));
+        otherItem.addSubItem(logout, R.drawable.msg_leave, LocaleController.getString("LogOut", R.string.LogOut));
 
         int scrollTo;
         int scrollToPosition = 0;
@@ -320,6 +340,7 @@ public void onItemClick(int id) {
         }
 
         listAdapter = new ListAdapter(context);
+        searchAdapter = new SearchAdapter(context);
 
         fragmentView = new FrameLayout(context);
         fragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundGray));
@@ -479,6 +500,13 @@ public boolean onItemClick(View view, int position) {
             }
         });
 
+        emptyView = new EmptyTextProgressView(context);
+        emptyView.showTextView();
+        emptyView.setTextSize(18);
+        emptyView.setVisibility(View.GONE);
+        emptyView.setShowAtCenter(true);
+        frameLayout.addView(emptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+
         frameLayout.addView(actionBar);
 
         extraHeightView = new View(context);
@@ -643,79 +671,9 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
             }
         });
 
-        if (isFullyVisible) { // conf changing
-            this.user = null;
-            postCreateView();
-            updateUserData();
-        } else {
-            postCreateViewWhenFullyVisible = true;
-        }
-
         return fragmentView;
     }
 
-    private void postCreateView() {
-        DataQuery.getInstance(currentAccount).checkFeaturedStickers();
-        MessagesController.getInstance(currentAccount).loadUserInfo(UserConfig.getInstance(currentAccount).getCurrentUser(), true, classGuid);
-        searchMenuItem.setIsSearchField(true);
-        searchMenuItem.setSearchFieldHint(LocaleController.getString("SearchInSettings", R.string.SearchInSettings));
-        searchMenuItem.setContentDescription(LocaleController.getString("SearchInSettings", R.string.SearchInSettings));
-        searchMenuItem.setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
-            @Override
-            public void onSearchExpand() {
-                if (otherItem != null) {
-                    otherItem.setVisibility(View.GONE);
-                }
-                searchAdapter.loadFaqWebPage();
-                listView.setAdapter(searchAdapter);
-                listView.setEmptyView(emptyView);
-                avatarContainer.setVisibility(View.GONE);
-                writeButton.setVisibility(View.GONE);
-                nameTextView.setVisibility(View.GONE);
-                onlineTextView.setVisibility(View.GONE);
-                extraHeightView.setVisibility(View.GONE);
-                fragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
-                fragmentView.setTag(Theme.key_windowBackgroundWhite);
-                needLayout();
-            }
-
-            @Override
-            public void onSearchCollapse() {
-                if (otherItem != null) {
-                    otherItem.setVisibility(View.VISIBLE);
-                }
-                listView.setAdapter(listAdapter);
-                listView.setEmptyView(null);
-                emptyView.setVisibility(View.GONE);
-                avatarContainer.setVisibility(View.VISIBLE);
-                writeButton.setVisibility(View.VISIBLE);
-                nameTextView.setVisibility(View.VISIBLE);
-                onlineTextView.setVisibility(View.VISIBLE);
-                extraHeightView.setVisibility(View.VISIBLE);
-                fragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundGray));
-                fragmentView.setTag(Theme.key_windowBackgroundGray);
-                needLayout();
-            }
-
-            @Override
-            public void onTextChanged(EditText editText) {
-                searchAdapter.search(editText.getText().toString().toLowerCase());
-            }
-        });
-        otherItem.setContentDescription(LocaleController.getString("AccDescrMoreOptions", R.string.AccDescrMoreOptions));
-        otherItem.addSubItem(edit_name, R.drawable.msg_edit, LocaleController.getString("EditName", R.string.EditName));
-        otherItem.addSubItem(logout, R.drawable.msg_leave, LocaleController.getString("LogOut", R.string.LogOut));
-
-        Context context = getParentActivity();
-        searchAdapter = new SearchAdapter(context);
-        emptyView = new EmptyTextProgressView(context);
-        emptyView.showTextView();
-        emptyView.setTextSize(18);
-        emptyView.setVisibility(View.GONE);
-        emptyView.setShowAtCenter(true);
-        ((FrameLayout) fragmentView).addView(emptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
-    }
-
     @Override
     public void didUploadPhoto(final TLRPC.InputFile file, final TLRPC.PhotoSize bigSize, final TLRPC.PhotoSize smallSize) {
         AndroidUtilities.runOnUIThread(() -> {
@@ -863,14 +821,9 @@ public void didReceivedNotification(int id, int account, Object... args) {
             }
         } else if (id == NotificationCenter.userInfoDidLoad) {
             Integer uid = (Integer) args[0];
-            if (uid == UserConfig.getInstance(currentAccount).getClientUserId()) {
-                TLRPC.UserFull oldUserInfo = userInfo;
+            if (uid == UserConfig.getInstance(currentAccount).getClientUserId() && listAdapter != null) {
                 userInfo = (TLRPC.UserFull) args[1];
-                if (oldUserInfo == null || !TextUtils.equals(oldUserInfo.about, userInfo.about)) {
-                    if (isFullyVisible) {
-                        listAdapter.notifyItemChanged(bioRow);
-                    } else updateBioWhenFullyVisible = true;
-                }
+                listAdapter.notifyItemChanged(bioRow);
             }
         } else if (id == NotificationCenter.emojiDidLoad) {
             if (listView != null) {
@@ -885,18 +838,11 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
-        onlineTextView.setText(LocaleController.getString("Online", R.string.Online));
         updateUserData();
         fixLayout();
         setParentActivityTitle(LocaleController.getString("Settings", R.string.Settings));
     }
 
-    @Override
-    public void onPause() {
-        super.onPause();
-        this.user = null;
-    }
-
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
@@ -913,12 +859,10 @@ private void needLayout() {
                 listView.setLayoutParams(layoutParams);
                 extraHeightView.setTranslationY(newTop);
             }
-            if (emptyView != null) {
-                layoutParams = (FrameLayout.LayoutParams) emptyView.getLayoutParams();
-                if (layoutParams.topMargin != newTop) {
-                    layoutParams.topMargin = newTop;
-                    emptyView.setLayoutParams(layoutParams);
-                }
+            layoutParams = (FrameLayout.LayoutParams) emptyView.getLayoutParams();
+            if (layoutParams.topMargin != newTop) {
+                layoutParams.topMargin = newTop;
+                emptyView.setLayoutParams(layoutParams);
             }
         }
 
@@ -1019,43 +963,26 @@ public boolean onPreDraw() {
     }
 
     private void updateUserData() {
-        if (nameTextView == null) return;
-
-        TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(
-                UserConfig.getInstance(currentAccount).getClientUserId());
-
-        if (user == null) return;
-
-        String userName = null;
-
-        if (this.user == null) {
-            userName = UserObject.getUserName(user);
-        } else {
-            String oldName = UserObject.getUserName(this.user);
-            String newName = UserObject.getUserName(user);
-            if (!oldName.equals(newName)) userName = newName;
+        TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(UserConfig.getInstance(currentAccount).getClientUserId());
+        if (user == null) {
+            return;
         }
-
-        if (userName != null) {
-            nameTextView.setText(userName);
+        TLRPC.FileLocation photoBig = null;
+        if (user.photo != null) {
+            photoBig = user.photo.photo_big;
         }
+        avatarDrawable = new AvatarDrawable(user, true);
 
-        if (this.user == null || user.photo.photo_id != this.user.photo.photo_id) {
-            TLRPC.FileLocation photoBig = null;
-            if (user.photo != null) {
-                photoBig = user.photo.photo_big;
-            }
+        avatarDrawable.setColor(Theme.getColor(Theme.key_avatar_backgroundInProfileBlue));
+        if (avatarImage != null) {
+            avatarImage.setImage(ImageLocation.getForUser(user, false), "50_50", avatarDrawable, user);
+            avatarImage.getImageReceiver().setVisible(!PhotoViewer.isShowingImage(photoBig), false);
 
-            avatarDrawable = new AvatarDrawable(user, true);
-            avatarDrawable.setColor(Theme.getColor(Theme.key_avatar_backgroundInProfileBlue));
+            nameTextView.setText(UserObject.getUserName(user));
+            onlineTextView.setText(LocaleController.getString("Online", R.string.Online));
 
-            if (avatarImage != null) {
-                avatarImage.setImage(ImageLocation.getForUser(user, false), "50_50", avatarDrawable, user);
-                avatarImage.getImageReceiver().setVisible(!PhotoViewer.isShowingImage(photoBig), false);
-            }
+            avatarImage.getImageReceiver().setVisible(!PhotoViewer.isShowingImage(photoBig), false);
         }
-
-        this.user = user;
     }
 
     private void showHelpAlert() {
