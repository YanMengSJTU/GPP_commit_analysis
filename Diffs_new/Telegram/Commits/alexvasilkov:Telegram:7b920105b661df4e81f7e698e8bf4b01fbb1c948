diff --git a/TMessagesProj/src/main/assets/arctic.attheme b/TMessagesProj/src/main/assets/arctic.attheme
index 9c738a94d..549f09ba5 100644
--- a/TMessagesProj/src/main/assets/arctic.attheme
+++ b/TMessagesProj/src/main/assets/arctic.attheme
@@ -291,3 +291,99 @@ key_changephoneinfo_changeText=-13131798
 chat_outViewsSelected=-1
 chat_outInstant=-1
 chat_outSentClock=-1599545857
+actionBarActionModeDefaultIcon=-9999761
+avatar_backgroundArchived=-5654847
+avatar_backgroundGroupCreateSpanBlue=-1642505
+avatar_nameInMessageCyan=-13132104
+changephoneinfo_image=-4669499
+chat_attachFileBackground=-13328140
+chat_botKeyboardButtonBackground=-1775639
+chat_botKeyboardButtonBackgroundPressed=-3354156
+chat_botKeyboardButtonText=-13220017
+chat_emojiPanelBackground=-986379
+chat_emojiPanelBackspace=-7564905
+chat_emojiPanelEmptyText=-7038047
+chat_emojiPanelIcon=-6445909
+chat_emojiPanelIconSelected=-13920286
+chat_emojiPanelStickerPackSelector=-1907225
+chat_goDownButtonIcon=-7432805
+chat_inAudioDurationText=-6182221
+chat_inAudioPerfomerSelectedText=-13683656
+chat_inAudioPerfomerText=-13683656
+chat_inAudioSeekbar=-1774864
+chat_inAudioSeekbarSelected=-4399384
+chat_inFileBackground=-1314571
+chat_inFileBackgroundSelected=-3413258
+chat_inFileIcon=-6113849
+chat_inFileProgressSelected=-3413258
+chat_inFileSelectedIcon=-7883067
+chat_inLoaderPhoto=-6113080
+chat_inLoaderPhotoIconSelected=-1314571
+chat_inLoaderPhotoSelected=-6113849
+chat_inLocationBackground=-1314571
+chat_inLocationIcon=-6113849
+chat_inMediaIconSelected=-1050370
+chat_inMenu=-4801083
+chat_inReplyMediaMessageText=-6182221
+chat_inTimeText=-6182221
+chat_inViews=-6182221
+chat_messagePanelCursor=-11230757
+chat_messagePanelHint=-5985101
+chat_messagePanelIcons=-7432805
+chat_recordedVoicePlayPausePressed=-2495749
+chat_recordedVoiceProgress=-6107400
+chat_replyPanelClose=-7432805
+chat_searchPanelIcons=-9999761
+chat_searchPanelText=-9999761
+chat_topPanelClose=-7563878
+chat_unreadMessagesStartArrowIcon=-6113849
+chats_date=-6973028
+chats_menuItemIcon=-7827048
+chats_message=-7631473
+chats_message_threeLines=-7434095
+chats_muteIcon=-4341308
+chats_unreadCounterMuted=-3749428
+checkboxSquareBackground=-12345121
+contextProgressInner1=-4202506
+dialogIcon=-9999504
+dialogInputFieldActivated=-13129232
+dialogLinkSelection=862104035
+dialogSearchBackground=-854795
+dialogSearchHint=-6774617
+dialogSearchIcon=-6182737
+dialogTopBackground=-9456923
+dialog_liveLocationProgress=-13262875
+fastScrollInactive=-3551791
+featuredStickers_addButton=-11491093
+featuredStickers_addButtonPressed=-12346402
+groupcreate_hintText=-6182221
+groupcreate_sectionText=-8617336
+inappPlayerPerformer=-13683656
+inappPlayerTitle=-13683656
+key_player_progressCachedBackground=-1445899
+key_sheet_other=-3551789
+key_sheet_scrollUp=-1973016
+location_liveLocationProgress=-13262875
+location_placeLocationBackground=-11753238
+login_progressInner=-1971470
+login_progressOuter=-10313520
+passport_authorizeBackground=-12211217
+passport_authorizeBackgroundSelected=-12542501
+player_actionBarTitle=-13683656
+player_progressBackground=-1445899
+profile_verifiedBackground=-5056776
+profile_verifiedCheck=-11959368
+sharedMedia_startStopLoadIcon=-13196562
+stickers_menu=-4801083
+switchTrack=-5196358
+switchTrackBlue=-8221031
+switchTrackBlueSelector=390089299
+switchTrackBlueSelectorChecked=553797505
+undo_background=-366530760
+undo_cancelColor=-8008961
+windowBackgroundChecked=-11034919
+windowBackgroundUnchecked=-6445135
+windowBackgroundWhiteBlueText2=-12937771
+windowBackgroundWhiteGrayIcon=-8288629
+windowBackgroundWhiteGrayText8=-9605774
+windowBackgroundWhiteInputFieldActivated=-13129232
diff --git a/TMessagesProj/src/main/assets/dark.attheme b/TMessagesProj/src/main/assets/dark.attheme
deleted file mode 100644
index 1806baa21..000000000
--- a/TMessagesProj/src/main/assets/dark.attheme
+++ /dev/null
@@ -1,436 +0,0 @@
-chat_unreadMessagesStartText=-620756993
-chat_inFileBackgroundSelected=-13347218
-windowBackgroundChecked=-11107667
-chat_editDoneIcon=-9456666
-radioBackgroundChecked=-10636048
-dialogTextBlue=-9456666
-chat_inSentClockSelected=-595287880
-windowBackgroundWhiteBlueIcon=-10444584
-avatar_backgroundActionBarGreen=-14605274
-chat_goDownButtonCounterBackground=-10505745
-actionBarActionModeDefault=-14208452
-actionBarActionModeDefaultTop=-1541659092
-dialogCheckboxSquareBackground=-10438416
-chats_menuPhone=1810035455
-chat_outViews=-7161633
-chat_secretTimerBackground=-1239540194
-avatar_actionBarSelectorCyan=-11972268
-chat_outViaBotNameText=-5515009
-chat_botKeyboardButtonText=-1
-profile_actionPressedBackground=-9257741
-key_chat_messagePanelVoiceLock=-1
-chat_secretChatStatusText=-9997953
-switchTrack=-11314335
-chat_inPreviewInstantSelectedText=-11099429
-chat_attachAudioBackground=-1267376
-actionBarDefaultSubmenuBackground=-13749706
-switchTrackBlueThumb=-14473945
-avatar_nameInMessageViolet=-5925398
-emptyListPlaceholder=-11247768
-chat_inAudioSelectedProgress=-14925469
-chats_nameMessage=-8932123
-chat_inMediaIcon=-1
-actionBarDefaultArchived=-13684171
-avatar_subtitleInProfileViolet=-7697782
-chat_messagePanelCancelInlineBot=-10194825
-dialogSearchBackground=-13946829
-chat_outAudioSeekbarFill=-8272902
-chat_botKeyboardButtonBackgroundPressed=-13617349
-player_time=-8550517
-chat_outFileProgressSelected=-1
-chat_outTimeSelectedText=-6764038
-chat_inFileProgressSelected=-5845010
-changephoneinfo_image=-10786960
-chat_inAudioPerfomerText=-8351328
-player_button=-1
-key_sheet_other=754974719
-chat_inContactNameText=-1
-switch2Track=-2135965
-chats_menuPhoneCats=-8287602
-chat_outPreviewLine=-5515009
-dialogScrollGlow=-1708041
-chat_messagePanelHint=-10459539
-windowBackgroundGray=-15197927
-chat_inViaBotNameText=-9456666
-chat_outVoiceSeekbar=-1300913456
-player_actionBarTitle=-1
-dialogGrayLine=-13354948
-chat_outFileIcon=-13143396
-chats_nameMessage_threeLines=-1644826
-chat_inFileProgress=-10653824
-dialogIcon=-8747891
-chat_emojiPanelEmptyText=-11511454
-chat_emojiPanelBackspace=-10458511
-chat_inContactPhoneSelectedText=-8085320
-chat_replyPanelClose=-10194825
-dialogSearchText=-723724
-chat_outAudioTitleText=-1
-chat_emojiPanelBackground=-14999775
-chats_unreadCounter=-11032854
-groupcreate_hintText=-9801610
-chat_inReplyMediaMessageSelectedText=-8085320
-avatar_actionBarSelectorOrange=-11972268
-dialogCheckboxSquareUnchecked=-10064269
-chat_inMediaIconSelected=-1
-chat_inBubble=-14275277
-chat_emojiPanelNewTrending=-9784845
-chat_emojiPanelStickerPackSelector=217775871
-chat_unreadMessagesStartArrowIcon=-10851462
-avatar_backgroundActionBarOrange=-14605274
-windowBackgroundWhiteBlackText=-1
-avatar_backgroundActionBarBlue=-14342102
-dialogTextLink=-9456666
-chat_recordTime=-7694433
-chat_status=-9717256
-windowBackgroundWhiteBlueHeader=-9456666
-files_folderIconBackground=-13947340
-chat_messagePanelVoiceBackground=-11495209
-passport_authorizeBackgroundSelected=-9590295
-switchTrackBlueChecked=-5908226
-sharedMedia_linkPlaceholderText=-11511705
-player_seekBarBackground=1196577362
-profile_status=-9717000
-divider=-12961222
-chat_topPanelLine=-9456666
-chat_inReplyMessageText=-251658241
-windowBackgroundWhiteInputFieldActivated=-10636041
-dialogInputField=-11248027
-chat_attachGalleryBackground=-6192928
-chat_outInstantSelected=-1
-chat_outSentCheck=-7156228
-key_graySectionText=-9075309
-player_placeholder=-14868445
-chat_outFileSelectedIcon=-13925429
-picker_disabledButton=-10524558
-groupcreate_spanBackground=-14143949
-dialogButton=-10964761
-contextProgressInner1=800774134
-chat_inLoaderPhotoIconSelected=-5648402
-actionBarDefaultSubtitle=-8156785
-chat_inContactPhoneText=-8812393
-chat_inlineResultIcon=-9456666
-dialogLineProgress=-9913359
-chats_draft=-1545108
-listSelector=771751936
-chat_outPreviewInstantText=-5515009
-chat_inMenuSelected=-2102800402
-avatar_actionBarSelectorGreen=-11972268
-chat_outLocationIcon=-5647886
-chat_inLoaderSelected=-9456666
-dialogTextRed=-892058
-chat_inBubbleShadow=-16777216
-chat_outAudioProgress=-12359281
-dialogProgressCircle=-10572054
-stickers_menu=-11710381
-avatar_subtitleInProfilePink=-7697782
-player_progress=-9520650
-chat_attachLocationBackground=-9712771
-chat_inReplyLine=-9456666
-chat_inAudioPerfomerSelectedText=-8085320
-dialogBackground=-14868445
-dialogLineProgressBackground=-10590095
-chat_inReplyNameText=-9456666
-chat_outAudioPerfomerSelectedText=-6764038
-actionBarActionModeDefaultIcon=-1
-windowBackgroundWhiteRedText4=-892058
-chat_goDownButtonIcon=-436207617
-windowBackgroundWhiteRedText5=-827032
-chats_onlineCircle=-9982742
-chat_outAudioSelectedProgress=-14187829
-chat_messageTextOut=-1
-chat_inInstant=-9456666
-avatar_backgroundSaved=-10380344
-returnToCallBackground=-10838312
-dialogCheckboxSquareDisabled=-11774373
-player_actionBar=-14407896
-chat_fieldOverlayText=-9456666
-chat_messagePanelSend=-9456666
-switchThumb=-12829636
-passport_authorizeBackground=-10840362
-windowBackgroundWhiteRedText2=-892058
-chats_nameIcon=-285212673
-chat_inSentClock=-595553888
-key_chats_menuTopShadow=789516
-avatar_nameInMessageRed=-1084559
-chat_outLoaderPhoto=-13077852
-chat_botSwitchToInlineText=-9456666
-dialogTextRed2=-892058
-chats_nameMessageArchived=-9011322
-avatar_nameInMessageOrange=-1265812
-chats_pinnedIcon=-10524305
-chat_replyPanelLine=1907997
-avatar_subtitleInProfileOrange=-7697782
-chat_outSentCheckSelected=-7156228
-dialogSearchHint=-8288371
-chat_inVenueInfoSelectedText=-8085320
-dialogTextBlue2=-9456666
-avatar_backgroundGroupCreateSpanBlue=-12751207
-dialogTextBlue3=-9456666
-switchTrackBlueThumbChecked=-11107667
-dialogTextBlue4=-9456666
-windowBackgroundWhiteGreenText=-10101914
-actionBarTabActiveText=-9193729
-chat_emojiPanelIcon=-10458511
-chat_topPanelMessage=-10128003
-chat_emojiPanelTrendingDescription=-10065039
-calls_callReceivedGreenIcon=-11412113
-chats_pinnedOverlay=117440511
-windowBackgroundWhiteInputField=-12696245
-chat_emojiPanelIconSelector=-9784845
-chat_emojiPanelBadgeBackground=-9784845
-chat_inForwardedNameText=-9456666
-chats_sentError=-1808014
-avatar_nameInMessageGreen=-7087736
-chat_outContactNameText=-1
-chat_inSiteNameText=-9456666
-chat_linkSelectBackground=862958566
-dialogLinkSelection=862433518
-chat_attachVideoBackground=-1612182
-windowBackgroundWhiteBlueText=-9456666
-avatar_nameInMessageCyan=-8270884
-chat_mediaLoaderPhotoIconSelected=-1842205
-chat_inLocationBackground=-13419450
-radioBackground=-10524811
-contextProgressOuter1=-10702088
-chat_inFileIcon=-13946055
-avatar_backgroundActionBarPink=-14605274
-dialogTextGray3=-7892583
-dialogTextGray2=-7892583
-dialogTextGray4=-7892583
-chat_searchPanelIcons=-9456666
-windowBackgroundWhiteLinkText=-9456666
-chat_inAudioSeekbarSelected=847558126
-chat_outVenueInfoText=-6965025
-chat_outContactPhoneText=-6965025
-chat_inAudioTitleText=-1
-chat_messageLinkIn=-9456666
-chats_menuBackground=-14868445
-chat_serviceBackground=1831745341
-chats_secretIcon=-9316522
-chat_inFileBackground=-13352887
-chat_inBubbleSelected=-13876652
-chat_mediaMenu=-1
-chat_outViewsSelected=-6764038
-chat_outInstant=-5515009
-chat_emojiPanelShadowLine=251658239
-actionBarDefaultSearchPlaceholder=-9998210
-actionBarActionModeDefaultSelector=2047809827
-chat_outForwardedNameText=-5515009
-dialogRoundCheckBox=-9912583
-chat_emojiPanelTrendingTitle=-2167820
-actionBarTabLine=-10510610
-switchThumbChecked=-13600600
-chats_nameMessageArchived_threeLines=-1644826
-chat_outSiteNameText=-5515009
-windowBackgroundWhite=-14737118
-chat_inVoiceSeekbarSelected=-2057139272
-dialogTextGray=-7892583
-chat_messageLinkOut=-5515009
-picker_badge=-10573587
-dialogRadioBackgroundChecked=-11095312
-chat_attachCameraIcon4=-8292127
-chat_outFileInfoSelectedText=-6764038
-chat_attachCameraIcon5=-10036869
-chat_attachCameraIcon2=-1346191
-chats_tabletSelectedOverlay=268435455
-chat_attachCameraIcon3=-9914638
-chat_outAudioDurationSelectedText=-6567430
-chat_attachCameraIcon1=-25245
-avatar_actionBarSelectorPink=-11972268
-dialogTextHint=-7892583
-chat_topPanelTitle=-9456666
-chat_outContactIcon=-1
-chat_inFileInfoText=-8351328
-avatar_subtitleInProfileBlue=-8223090
-chat_inPreviewLine=-9456666
-profile_creatorIcon=-10245405
-profile_actionBackground=-10114592
-avatar_subtitleInProfileGreen=-7697782
-chats_sentCheck=-10574624
-chats_unreadCounterMuted=-13288124
-chat_outVoiceSeekbarFill=-7023617
-chat_outReplyLine=-4990721
-chat_inAudioSeekbarFill=-9456666
-chat_messagePanelIcons=-10194825
-chat_inReplyMediaMessageText=-8351328
-inappPlayerTitle=-9274750
-chat_emojiPanelIconSelected=-9784845
-progressCircle=-10044682
-chat_inContactBackground=-9456666
-chat_botKeyboardButtonBackground=-14473173
-chats_menuItemIcon=-10327433
-chat_outVenueInfoSelectedText=-6764038
-chat_outBubbleShadow=-16777216
-chat_outVenueNameText=-3019777
-checkboxSquareBackground=-10177813
-files_folderIcon=-10129025
-chats_menuCloudBackgroundCats=-11232035
-chat_topPanelClose=-11576988
-chats_verifiedBackground=-9587479
-chat_inTimeSelectedText=-8085320
-chat_outFileBackgroundSelected=-11367990
-chat_outVoiceSeekbarSelected=-10249517
-windowBackgroundWhiteGrayIcon=-9273721
-avatar_backgroundActionBarViolet=-14605274
-profile_verifiedCheck=-1
-windowBackgroundWhiteBlueButton=-9456666
-listSelectorSDK21=301989887
-key_chat_messagePanelVoiceLockBackground=-13683399
-chat_outFileNameText=-1
-picker_enabledButton=-10375706
-inappPlayerBackground=-14342102
-avatar_nameInMessagePink=-1215324
-windowBackgroundWhiteGrayText=-9603715
-musicPicker_buttonBackground=-11035162
-avatar_actionBarSelectorViolet=-11972268
-avatar_nameInMessageBlue=-9456666
-dialogTextBlack=-328966
-actionBarDefault=-14276309
-profile_actionIcon=-1
-windowBackgroundUnchecked=-14473945
-actionBarDefaultSelector=-196521644
-chats_menuTopShadow=-1558504677
-chat_outAudioPerfomerText=-6965025
-sharedMedia_startStopLoadIcon=-11164432
-chat_serviceBackgroundSelected=1614498132
-chat_inVenueInfoText=-8351328
-chat_replyPanelIcons=-9456666
-fastScrollInactive=-12103850
-chat_outSentClockSelected=-6764038
-switchTrackBlueSelectorChecked=848091135
-musicPicker_checkbox=-11621658
-chat_outFileBackground=-11829594
-chats_name=-657931
-chat_attachSendBackground=-10242065
-switchTrackBlueSelector=431611386
-dialogBadgeBackground=-10371847
-chat_outBubbleSelected=-12487769
-avatar_backgroundInProfileBlue=-11232035
-chat_inFileNameText=-1
-inappPlayerPerformer=-1
-chat_inInstantSelected=-9456666
-chat_outFileInfoText=-6965025
-groupcreate_checkboxCheck=-1
-chat_outContactPhoneSelectedText=-6764038
-chat_unreadMessagesStartBackground=-13814725
-chat_inLoaderPhoto=-14404542
-chat_inFileInfoSelectedText=-8085320
-chat_wallpaper=-15066083
-chat_outMenuSelected=-595150362
-chat_outLoaderPhotoSelected=-13208924
-chat_muteIcon=-10590355
-chat_selectedBackground=591636735
-chat_inAudioDurationText=-8351328
-chat_secretTimeText=-1
-actionBarDefaultSubmenuItem=-657931
-dialogInputFieldActivated=-10111504
-chats_actionMessage=-8932123
-chat_inLoaderPhotoIcon=-10915968
-location_markerX=-10653824
-chat_addContact=-9456666
-avatar_actionBarSelectorBlue=-11972524
-switchTrackChecked=-10446383
-player_placeholderBackground=-13025469
-windowBackgroundWhiteHintText=-10589835
-chat_inLoader=-9456666
-chat_adminSelectedText=-8085320
-groupcreate_spanText=-657931
-chat_outPreviewInstantSelectedText=-5515009
-player_actionBarSelector=-14407896
-key_player_progressCachedBackground=-12433330
-chat_outTimeText=-6965025
-chat_outBubble=-12687992
-avatar_backgroundActionBarCyan=-14605274
-chat_attachFileBackground=-10706196
-chat_attachHideBackground=-14078156
-chats_menuItemText=-986896
-chats_message=-9011322
-chat_outReplyNameText=-5515009
-chat_outReplyMediaMessageText=-6965025
-chat_textSelectBackground=1718596582
-chat_messagePanelVoiceDelete=-9997440
-chat_inAudioProgress=-1
-chats_date=-9011322
-chat_messagePanelText=-1
-actionBarTabSelector=-733392556
-key_sheet_scrollUp=603979775
-player_buttonActive=-9456666
-chat_outLoaderPhotoIcon=-9263664
-chat_outContactBackground=-9194520
-sharedMedia_linkPlaceholder=-14143950
-windowBackgroundWhiteBlueText7=-9654808
-calls_callReceivedRedIcon=-826512
-chat_outLocationBackground=-12160359
-windowBackgroundWhiteBlueText3=-9456666
-windowBackgroundWhiteBlueText2=-9456666
-windowBackgroundWhiteBlueText5=-9456666
-windowBackgroundWhiteBlueText4=-11890739
-chat_replyPanelMessage=-8681069
-chat_inViewsSelected=-6701864
-player_background=-14407896
-inappPlayerClose=-10525075
-chat_outMediaIcon=-1
-player_actionBarSubtitle=-9339518
-chat_attachContactBackground=-10438416
-chat_outAudioCacheSeekbar=-1218212423
-chats_sentClock=-8740661
-chat_inAudioSeekbar=-581869200
-avatar_subtitleInProfileRed=-7697782
-avatar_backgroundActionBarRed=-14605274
-dialogSearchIcon=-8814973
-chat_inPreviewInstantText=-9456666
-chats_archiveBackground=-10642482
-chat_inViews=-8812137
-chat_outLoaderSelected=-9194520
-dialogButtonSelector=352321535
-chats_archivePinBackground=-13749706
-player_actionBarItems=-1
-chat_sentError=-1551526
-player_progressBackground=-13288897
-avatar_actionBarSelectorRed=-11972268
-chat_inAudioDurationSelectedText=-8085320
-windowBackgroundWhiteGrayText2=-9735301
-chat_outAudioSeekbarSelected=-1185179700
-chat_outLoaderPhotoIconSelected=-1
-player_actionBarTop=-14934240
-windowBackgroundWhiteGrayText8=-9076084
-windowBackgroundWhiteGrayText6=-9011320
-windowBackgroundWhiteGrayText3=-9143163
-windowBackgroundWhiteGrayText4=-9340286
-chat_inTimeText=-645885536
-dialogRadioBackground=-10589837
-chat_outReplyMessageText=-251658241
-chat_messagePanelBackground=-14473173
-chat_inLoaderPhotoSelected=-14925725
-chat_inVoiceSeekbarFill=-9456666
-graySection=-14276051
-chat_outAudioSeekbar=-1771860551
-chats_muteIcon=-12104365
-chat_inVoiceSeekbar=-10653824
-chat_outFileProgress=-9263664
-profile_verifiedBackground=-10899214
-chat_outLoader=-9194520
-chats_actionPressedBackground=-9257741
-windowBackgroundWhiteGreenText2=-7742850
-chat_replyPanelName=-9456666
-chat_outMediaIconSelected=-1
-windowBackgroundWhiteValueText=-9456666
-chat_outAudioDurationText=-6965025
-chat_outMenu=-428761662
-chat_goDownButton=-13814725
-chats_secretName=-9316522
-chat_inMenu=-1771931767
-chat_recordVoiceCancel=-7694433
-chat_inFileSelectedIcon=-15056797
-chat_outReplyMediaMessageSelectedText=-5515009
-chat_reportSpam=-2072483
-chat_messageTextIn=-1
-dialogRedIcon=-420322458
-avatar_subtitleInProfileCyan=-7697782
-chats_attachMessage=-9011322
-chat_topPanelBackground=-14539481
-key_changephoneinfo_changeText=-9456666
-chat_outSentClock=-7161633
-dialogBackgroundGray=-15263463
-chat_searchPanelText=-9456666
-chat_inContactIcon=-1
diff --git a/TMessagesProj/src/main/assets/darkblue.attheme b/TMessagesProj/src/main/assets/darkblue.attheme
index 50397595b..ccdc98723 100644
--- a/TMessagesProj/src/main/assets/darkblue.attheme
+++ b/TMessagesProj/src/main/assets/darkblue.attheme
@@ -427,3 +427,32 @@ chat_outSentClock=-8213557
 dialogBackgroundGray=-14932431
 chat_searchPanelText=-8796932
 chat_inContactIcon=-1
+avatar_backgroundSaved=-10043398
+chat_attachSendBackground=-12664838
+chat_emojiPanelNewTrending=-11688214
+chat_inAudioSeekbarFill=-9259544
+chat_messagePanelCursor=-11230757
+chat_messagePanelVoiceBackground=-11037236
+chat_recordedVoiceBackground=-11165981
+chat_recordedVoicePlayPausePressed=-2495749
+chat_recordedVoiceProgress=-6107400
+chats_actionPressedBackground=-11100714
+checkboxSquareBackground=-12345121
+dialogCheckboxSquareBackground=-12345121
+dialogInputFieldActivated=-13129232
+dialogLineProgress=-11371101
+dialogLinkSelection=862104035
+dialogRadioBackgroundChecked=-13129232
+dialogTopBackground=-9456923
+fastScrollActive=-11361317
+featuredStickers_addButton=-11491093
+featuredStickers_addButtonPressed=-12346402
+login_progressInner=-1971470
+login_progressOuter=-10313520
+musicPicker_buttonBackground=-10702870
+musicPicker_checkbox=-14043401
+picker_badge=-14043401
+picker_enabledButton=-15095832
+switch2TrackChecked=-10378281
+undo_cancelColor=-8008961
+windowBackgroundWhiteBlueText2=-12937771
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index 5ab242c2a..1d0dfa081 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -71,9 +71,11 @@
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Calendar;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.HashSet;
 
 public class Theme {
 
@@ -87,6 +89,12 @@
         public int previewOutColor;
         public int sortIndex;
 
+        public int[] accentColorOptions;
+        public int accentBaseColor;
+        public int accentColor;
+        final float[] accentBaseColorHsv = new float[3];
+        final float[] accentColorHsv = new float[3];
+
         public JSONObject getSaveJson() {
             try {
                 JSONObject jsonObject = new JSONObject();
@@ -104,10 +112,8 @@ public String getName() {
                 return LocaleController.getString("Default", R.string.Default);
             } else if ("Blue".equals(name)) {
                 return LocaleController.getString("ThemeBlue", R.string.ThemeBlue);
-            } else if ("Dark".equals(name)) {
-                return LocaleController.getString("ThemeDark", R.string.ThemeDark);
             } else if ("Dark Blue".equals(name)) {
-                return LocaleController.getString("ThemeDarkBlue", R.string.ThemeDarkBlue);
+                return LocaleController.getString("ThemeDark", R.string.ThemeDark);
             } else if ("Graphite".equals(name)) {
                 return LocaleController.getString("ThemeGraphite", R.string.ThemeGraphite);
             } else if ("Arctic Blue".equals(name)) {
@@ -117,7 +123,7 @@ public String getName() {
         }
 
         public boolean isDark() {
-            return "Dark".equals(name) || "Dark Blue".equals(name) || "Graphite".equals(name);
+            return "Dark Blue".equals(name) || "Graphite".equals(name);
         }
 
         public boolean isLight() {
@@ -152,6 +158,18 @@ public static ThemeInfo createWithString(String string) {
             themeInfo.pathToFile = args[1];
             return themeInfo;
         }
+
+        void setAccentColorOptions(int[] options) {
+            accentColorOptions = options;
+            accentBaseColor = options[0];
+            Color.colorToHSV(accentBaseColor, accentBaseColorHsv);
+            setAccentColor(accentBaseColor);
+        }
+
+        void setAccentColor(int color) {
+            accentColor = color;
+            Color.colorToHSV(accentColor, accentColorHsv);
+        }
     }
 
     private static final Object sync = new Object();
@@ -962,6 +980,7 @@ public int getMinimumHeight() {
     public static final String key_chat_messagePanelShadow = "chat_messagePanelShadow";
     public static final String key_chat_messagePanelText = "chat_messagePanelText";
     public static final String key_chat_messagePanelHint = "chat_messagePanelHint";
+    public static final String key_chat_messagePanelCursor = "chat_messagePanelCursor";
     public static final String key_chat_messagePanelIcons = "chat_messagePanelIcons";
     public static final String key_chat_messagePanelSend = "chat_messagePanelSend";
     public static final String key_chat_messagePanelVoiceLock = "key_chat_messagePanelVoiceLock";
@@ -1169,9 +1188,13 @@ public int getMinimumHeight() {
 
     private static HashMap<String, Integer> defaultColors = new HashMap<>();
     private static HashMap<String, String> fallbackKeys = new HashMap<>();
+    private static HashSet<String> themeAccentExclusionKeys = new HashSet<>();
+    private static HashMap<String, Integer> currentColorsNoAccent;
     private static HashMap<String, Integer> currentColors;
     private static HashMap<String, Integer> animatingColors;
 
+    private static float[] hsv = new float[3];
+
     static {
         defaultColors.put(key_dialogBackground, 0xffffffff);
         defaultColors.put(key_dialogBackgroundGray, 0xfff0f0f0);
@@ -1642,6 +1665,7 @@ public int getMinimumHeight() {
         defaultColors.put(key_chat_messagePanelBackground, 0xffffffff);
         defaultColors.put(key_chat_messagePanelText, 0xff000000);
         defaultColors.put(key_chat_messagePanelHint, 0xffa4acb3);
+        defaultColors.put(key_chat_messagePanelCursor, 0xff54a1db);
         defaultColors.put(key_chat_messagePanelShadow, 0xff000000);
         defaultColors.put(key_chat_messagePanelIcons, 0xff8e959b);
         defaultColors.put(key_chat_recordedVoicePlayPause, 0xffffffff);
@@ -1894,9 +1918,15 @@ public int getMinimumHeight() {
         fallbackKeys.put(key_profile_status, key_avatar_subtitleInProfileBlue);
         fallbackKeys.put(key_chats_menuTopBackgroundCats, key_avatar_backgroundActionBarBlue);
 
+        themeAccentExclusionKeys.addAll(Arrays.asList(keys_avatar_background));
+        themeAccentExclusionKeys.addAll(Arrays.asList(keys_avatar_nameInMessage));
+        themeAccentExclusionKeys.add(key_chat_attachFileBackground);
+        themeAccentExclusionKeys.add(key_chat_attachContactBackground);
+
         themes = new ArrayList<>();
         otherThemes = new ArrayList<>();
         themesDict = new HashMap<>();
+        currentColorsNoAccent = new HashMap<>();
         currentColors = new HashMap<>();
 
         ThemeInfo themeInfo = new ThemeInfo();
@@ -1908,16 +1938,6 @@ public int getMinimumHeight() {
         themes.add(currentDayTheme = currentTheme = defaultTheme = themeInfo);
         themesDict.put("Default", defaultTheme);
 
-        themeInfo = new ThemeInfo();
-        themeInfo.name = "Dark";
-        themeInfo.assetName = "dark.attheme";
-        themeInfo.previewBackgroundColor = 0xff5a5d61;
-        themeInfo.previewInColor = 0xff747a84;
-        themeInfo.previewOutColor = 0xff82a8e3;
-        themeInfo.sortIndex = 3;
-        themes.add(themeInfo);
-        themesDict.put("Dark", themeInfo);
-
         themeInfo = new ThemeInfo();
         themeInfo.name = "Blue";
         themeInfo.assetName = "bluebubbles.attheme";
@@ -1935,6 +1955,7 @@ public int getMinimumHeight() {
         themeInfo.previewInColor = 0xff76869c;
         themeInfo.previewOutColor = 0xff82a8e3;
         themeInfo.sortIndex = 2;
+        themeInfo.setAccentColorOptions(new int[] { 0xff3685fa, 0xff46c8ed, 0xff4ab841, 0xffeb7cb1, 0xffee902a, 0xffa281f0, 0xffd34324, 0xffeebd34, 0xff7f8fab });
         themes.add(themeInfo);
         themesDict.put("Dark Blue", currentNightTheme = themeInfo);
 
@@ -1945,7 +1966,7 @@ public int getMinimumHeight() {
             themeInfo.previewBackgroundColor = 0xff7a7e89;
             themeInfo.previewInColor = 0xff989ba3;
             themeInfo.previewOutColor = 0xffa4bff9;
-            themeInfo.sortIndex = 4;
+            themeInfo.sortIndex = 3;
             themes.add(themeInfo);
             themesDict.put("Graphite", themeInfo);
         }
@@ -1956,7 +1977,8 @@ public int getMinimumHeight() {
         themeInfo.previewBackgroundColor = 0xffffffff;
         themeInfo.previewInColor = 0xffebeef4;
         themeInfo.previewOutColor = 0xff7cb2fe;
-        themeInfo.sortIndex = 5;
+        themeInfo.sortIndex = 4;
+        themeInfo.setAccentColorOptions(new int[] { 0xff3490eb, 0xff46c8ed, 0xff4ab841, 0xffeb7cb1, 0xffee902a, 0xffa281f0, 0xffd34324, 0xffeebd34, 0xff7f8fab });
         themes.add(themeInfo);
         themesDict.put("Arctic Blue", themeInfo);
 
@@ -1997,18 +2019,32 @@ public int getMinimumHeight() {
 
         ThemeInfo applyingTheme = null;
         try {
+            final ThemeInfo themeDarkBlue = themesDict.get("Dark Blue");
+            final ThemeInfo themeArcticBlue = themesDict.get("Arctic Blue");
+
             preferences = MessagesController.getGlobalMainSettings();
             String theme = preferences.getString("theme", null);
-            if (theme != null) {
+            if ("Dark".equals(theme)) { // Old theme. Fallback to "Dark Blue" with specific accent.
+                applyingTheme = themeDarkBlue;
+                themeDarkBlue.setAccentColor(0xff7f8fab);
+            } else if (theme != null) {
                 applyingTheme = themesDict.get(theme);
             }
+
             theme = preferences.getString("nighttheme", null);
-            if (theme != null) {
+            if ("Dark".equals(theme)) { // Old theme. Fallback to "Dark Blue" with specific accent.
+                currentNightTheme = themeDarkBlue;
+                themeDarkBlue.setAccentColor(0xff7f8fab);
+            } else if (theme != null) {
                 ThemeInfo t = themesDict.get(theme);
                 if (t !=  null) {
                     currentNightTheme = t;
                 }
             }
+
+            themeDarkBlue.setAccentColor(preferences.getInt("accentForDarkBlue", themeDarkBlue.accentColor));
+            themeArcticBlue.setAccentColor(preferences.getInt("accentForArcticBlue", themeArcticBlue.accentColor));
+
             selectedAutoNightType = preferences.getInt("selectedAutoNightType", AUTO_NIGHT_TYPE_NONE);
             autoNightScheduleByLocation = preferences.getBoolean("autoNightScheduleByLocation", false);
             autoNightBrighnessThreshold = preferences.getFloat("autoNightBrighnessThreshold", 0.25f);
@@ -2495,7 +2531,7 @@ private static void sortThemes() {
 
     public static ThemeInfo applyThemeFile(File file, String themeName, boolean temporary) {
         try {
-            if (themeName.equals("Default") || themeName.equals("Dark") || themeName.equals("Blue") || themeName.equals("Dark Blue") || themeName.equals("Graphite") || themeName.equals("Arctic Blue")) {
+            if (themeName.equals("Default") || themeName.equals("Blue") || themeName.equals("Dark Blue") || themeName.equals("Graphite") || themeName.equals("Arctic Blue")) {
                 return null;
             }
             File finalFile = new File(ApplicationLoader.getFilesDirFixed(), themeName);
@@ -2540,7 +2576,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean nightTheme) {
         applyTheme(themeInfo, true, true, nightTheme);
     }
 
-    public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeWallpaperOverride, final boolean nightTheme) {
+    private static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeWallpaperOverride, final boolean nightTheme) {
         if (themeInfo == null) {
             return;
         }
@@ -2560,10 +2596,11 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
                     editor.commit();
                 }
                 if (themeInfo.assetName != null) {
-                    currentColors = getThemeFileValues(null, themeInfo.assetName);
+                    currentColorsNoAccent = getThemeFileValues(null, themeInfo.assetName);
                 } else {
-                    currentColors = getThemeFileValues(new File(themeInfo.pathToFile), null);
+                    currentColorsNoAccent = getThemeFileValues(new File(themeInfo.pathToFile), null);
                 }
+                applyThemeAccent(currentColorsNoAccent, currentColors, themeInfo);
             } else {
                 if (!nightTheme && save) {
                     SharedPreferences preferences = MessagesController.getGlobalMainSettings();
@@ -2594,6 +2631,16 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
         }
     }
 
+    public static void saveThemeAccent(ThemeInfo themeInfo, int accent) {
+        if ("Dark Blue".equals(themeInfo.name)) {
+            MessagesController.getGlobalMainSettings().edit().putInt("accentForDarkBlue", accent).commit();
+            themeInfo.setAccentColor(accent);
+        } else if ("Arctic Blue".equals(themeInfo.name)) {
+            MessagesController.getGlobalMainSettings().edit().putInt("accentForArcticBlue", accent).commit();
+            themeInfo.setAccentColor(accent);
+        }
+    }
+
     private static void saveOtherThemes() {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("themeconfig", Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = preferences.edit();
@@ -2643,10 +2690,14 @@ public static boolean isCurrentThemeNight() {
         return currentTheme == currentNightTheme;
     }
 
-    public static boolean isCurrentThemeDefault() {
+    private static boolean isCurrentThemeDefault() {
         return currentTheme == defaultTheme;
     }
 
+    public static boolean isThemeDefault(ThemeInfo themeInfo) {
+        return themeInfo == defaultTheme;
+    }
+
     private static long getAutoNightSwitchThemeDelay() {
         long newTime = SystemClock.elapsedRealtime();
         if (Math.abs(lastThemeSwitchTime - newTime) >= LIGHT_SENSOR_THEME_SWITCH_NEAR_THRESHOLD) {
@@ -2987,6 +3038,61 @@ public static File getAssetFile(String assetName) {
         return stringMap;
     }
 
+    private static void applyThemeAccent(HashMap<String, Integer> source, HashMap<String, Integer> destination, ThemeInfo themeInfo) {
+        destination.clear();
+        destination.putAll(source);
+
+        if (themeInfo.accentColor == 0 || themeInfo.accentBaseColor == 0 || themeInfo.accentColor == themeInfo.accentBaseColor) {
+            return;
+        }
+
+        for (String key: source.keySet()) {
+            if (!themeAccentExclusionKeys.contains(key)) {
+                int color = source.get(key);
+                int newColor = changeColorAccent(themeInfo.accentBaseColorHsv, themeInfo.accentColorHsv, color);
+                if (newColor != color) destination.put(key, newColor);
+            }
+        }
+    }
+
+    public static int changeColorAccent(ThemeInfo themeInfo, int accent, int color) {
+        if (accent == 0 || themeInfo.accentBaseColor == 0 || accent == themeInfo.accentBaseColor) {
+            return color;
+        }
+
+        Color.colorToHSV(accent, hsv);
+        return changeColorAccent(themeInfo.accentBaseColorHsv, hsv, color);
+    }
+
+    private static int changeColorAccent(float[] baseHsv, float[] accentHsv, int color) {
+        final float baseH = baseHsv[0];
+        final float baseS = baseHsv[1];
+        final float baseV = baseHsv[2];
+
+        final float accentH = accentHsv[0];
+        final float accentS = accentHsv[1];
+        final float accentV = accentHsv[2];
+
+        Color.colorToHSV(color, hsv);
+        final float colorH = hsv[0];
+        final float colorS = hsv[1];
+        final float colorV = hsv[2];
+
+        // Only changing color's accent if its hue is close to base accent
+        final float diffH = Math.min(Math.abs(colorH - baseH), Math.abs(colorH - baseH - 360f));
+        if (diffH > 30f) return color;
+
+        // Calculating saturation distance between the color and its base. To preserve better
+        // contrast colors closer to base color will receive the most brightness change.
+        float dist = Math.min(1.5f * colorS / baseS, 1f);
+
+        hsv[0] = colorH + accentH - baseH;
+        hsv[1] = colorS * accentS / baseS;
+        hsv[2] = colorV * (1f - dist + dist * accentV / baseV);
+
+        return Color.HSVToColor(Color.alpha(color), hsv);
+    }
+
     public static void createCommonResources(Context context) {
         if (dividerPaint == null) {
             dividerPaint = new Paint();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ThemeDescription.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ThemeDescription.java
index c63b03eda..010bccdb4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ThemeDescription.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ThemeDescription.java
@@ -561,6 +561,8 @@ private void processViewColor(View child, int color) {
                                     if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {
                                         ((EditTextCaption) object).setHintColor(color);
                                         ((EditTextCaption) object).setHintTextColor(color);
+                                    } else if ((changeFlags & FLAG_CURSORCOLOR) != 0) {
+                                        ((EditTextCaption) object).setCursorColor(color);
                                     } else {
                                         ((EditTextCaption) object).setTextColor(color);
                                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ThemeCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ThemeCell.java
index 3ddf4ce9e..f8df3e6a2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ThemeCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ThemeCell.java
@@ -40,6 +40,7 @@
     private ImageView optionsButton;
     private boolean needDivider;
     private Paint paint;
+    private Paint paintStroke;
     private Theme.ThemeInfo currentThemeInfo;
     private boolean isNightTheme;
     private static byte[] bytes = new byte[1024];
@@ -52,6 +53,9 @@ public ThemeCell(Context context, boolean nightTheme) {
         isNightTheme = nightTheme;
 
         paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        paintStroke = new Paint(Paint.ANTI_ALIAS_FLAG);
+        paintStroke.setStyle(Paint.Style.STROKE);
+        paintStroke.setStrokeWidth(AndroidUtilities.dp(2));
 
         textView = new TextView(context);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
@@ -122,16 +126,14 @@ public void setTheme(Theme.ThemeInfo themeInfo, boolean divider) {
         updateCurrentThemeCheck();
 
         boolean finished = false;
-        if (themeInfo.pathToFile != null || themeInfo.assetName != null) {
+        if (Theme.isThemeDefault(themeInfo) || themeInfo.assetName != null) {
+            paint.setColor(Theme.changeColorAccent(themeInfo, themeInfo.accentColor, themeInfo.previewBackgroundColor));
+            finished = true;
+        } else if (themeInfo.pathToFile != null) {
             FileInputStream stream = null;
             try {
                 int currentPosition = 0;
-                File file;
-                if (themeInfo.assetName != null) {
-                    file = Theme.getAssetFile(themeInfo.assetName);
-                } else {
-                    file = new File(themeInfo.pathToFile);
-                }
+                File file = new File(themeInfo.pathToFile);
                 stream = new FileInputStream(file);
                 int idx;
                 int read;
@@ -194,6 +196,7 @@ public void setTheme(Theme.ThemeInfo themeInfo, boolean divider) {
         if (!finished) {
             paint.setColor(Theme.getDefaultColor(Theme.key_actionBarDefault));
         }
+        paintStroke.setColor(themeInfo.accentColor);
     }
 
     public void updateCurrentThemeCheck() {
@@ -219,6 +222,7 @@ protected void onDraw(Canvas canvas) {
             x = getWidth() - x;
         }
         canvas.drawCircle(x, AndroidUtilities.dp(13 + 11), AndroidUtilities.dp(11), paint);
+        canvas.drawCircle(x, AndroidUtilities.dp(13 + 11), AndroidUtilities.dp(10), paintStroke);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 6cc519578..df86afe5b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -14990,6 +14990,7 @@ public void notifyItemRangeRemoved(int positionStart, int itemCount) {
                 new ThemeDescription(chatActivityEnterView, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, Theme.key_chat_messagePanelShadow),
                 new ThemeDescription(chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"audioVideoButtonContainer"}, null, null, null, Theme.key_chat_messagePanelBackground),
                 new ThemeDescription(chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, Theme.key_chat_messagePanelText),
+                new ThemeDescription(chatActivityEnterView, ThemeDescription.FLAG_CURSORCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, Theme.key_chat_messagePanelCursor),
                 new ThemeDescription(chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordSendText"}, null, null, null, Theme.key_chat_fieldOverlayText),
                 new ThemeDescription(chatActivityEnterView, ThemeDescription.FLAG_HINTTEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, Theme.key_chat_messagePanelHint),
                 new ThemeDescription(chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, null, null, null, Theme.key_chat_messagePanelSend),
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 0e389f2fd..fa1828bcc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -963,6 +963,7 @@ protected void onSelectionChanged(int selStart, int selEnd) {
         messageEditText.setTextColor(Theme.getColor(Theme.key_chat_messagePanelText));
         messageEditText.setHintColor(Theme.getColor(Theme.key_chat_messagePanelHint));
         messageEditText.setHintTextColor(Theme.getColor(Theme.key_chat_messagePanelHint));
+        messageEditText.setCursorColor(Theme.getColor(Theme.key_chat_messagePanelCursor));
         frameLayout.addView(messageEditText, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.BOTTOM, 52, 0, isChat ? 50 : 2, 0));
         messageEditText.setOnKeyListener(new OnKeyListener() {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
index 6682e5403..1f8373d22 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemeActivity.java
@@ -9,6 +9,8 @@
 package org.telegram.ui;
 
 import android.Manifest;
+import android.animation.ArgbEvaluator;
+import android.animation.ObjectAnimator;
 import android.app.Activity;
 import android.app.TimePickerDialog;
 import android.content.Context;
@@ -35,6 +37,7 @@
 import android.os.Bundle;
 import android.os.Vibrator;
 
+import androidx.annotation.Keep;
 import androidx.core.content.FileProvider;
 import androidx.recyclerview.widget.DefaultItemAnimator;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -113,7 +116,6 @@
     public final static int THEME_TYPE_ALL = 2;
 
     private ListAdapter listAdapter;
-    private RecyclerListView innerListView;
     private RecyclerListView listView;
     @SuppressWarnings("FieldCanBeLocal")
     private LinearLayoutManager layoutManager;
@@ -121,7 +123,10 @@
     private ArrayList<Theme.ThemeInfo> darkThemes = new ArrayList<>();
     private ArrayList<Theme.ThemeInfo> defaultThemes = new ArrayList<>();
 
+    private boolean animateThemeAccents;
+
     boolean hasCustomThemes;
+    boolean hasThemeAccents;
 
     private int backgroundRow;
     private int textSizeHeaderRow;
@@ -166,6 +171,7 @@
     private int themeStartRow;
     private int themeListRow;
     private int themeEndRow;
+    private int themeAccentListRow;
     private int showThemesRows;
     private int themeInfoRow;
     private int themeHeader2Row;
@@ -470,6 +476,7 @@ private void updateRows() {
         themeEnd2Row = -1;
         themeListRow = -1;
         themeEndRow = -1;
+        themeAccentListRow = -1;
         showThemesRows = -1;
         themeInfoRow = -1;
         preferedHeaderRow = -1;
@@ -507,14 +514,7 @@ private void updateRows() {
                 }
                 hasCustomThemes = true;
             }
-            Collections.sort(defaultThemes, (o1, o2) -> {
-                if (o1.sortIndex > o2.sortIndex) {
-                    return 1;
-                } else if (o1.sortIndex < o2.sortIndex) {
-                    return -1;
-                }
-                return 0;
-            });
+            Collections.sort(defaultThemes, (o1, o2) -> Integer.compare(o1.sortIndex, o2.sortIndex));
 
             textSizeHeaderRow = rowCount++;
             textSizeRow = rowCount++;
@@ -522,6 +522,10 @@ private void updateRows() {
             newThemeInfoRow = rowCount++;
             themeHeaderRow = rowCount++;
             themeListRow = rowCount++;
+            hasThemeAccents = Theme.getCurrentTheme().accentColorOptions != null;
+            if (hasThemeAccents) {
+                themeAccentListRow = rowCount++;
+            }
             if (hasCustomThemes) {
                 showThemesRows = rowCount++;
             }
@@ -554,6 +558,7 @@ private void updateRows() {
                     defaultThemes.add(themeInfo);
                 }
             }
+            Collections.sort(defaultThemes, (o1, o2) -> Integer.compare(o1.sortIndex, o2.sortIndex));
 
             themeHeaderRow = rowCount++;
             themeStartRow = rowCount;
@@ -993,7 +998,8 @@ public void onItemClick(int id) {
     public void onResume() {
         super.onResume();
         if (listAdapter != null) {
-            listAdapter.notifyDataSetChanged();
+            animateThemeAccents = false;
+            updateRows();
         }
     }
 
@@ -1235,18 +1241,28 @@ private String getLocationSunString() {
         return LocaleController.formatString("AutoNightUpdateLocationInfo", R.string.AutoNightUpdateLocationInfo, sunsetTimeStr, sunriseTimeStr);
     }
 
-    private class InnerThemeView extends FrameLayout {
+    private static class InnerThemeView extends FrameLayout {
 
         private RadioButton button;
         private Theme.ThemeInfo themeInfo;
         private RectF rect = new RectF();
         private Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        private Paint paintFrame = new Paint(Paint.ANTI_ALIAS_FLAG);
+
         private TextPaint textPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
         private Drawable inDrawable;
         private Drawable outDrawable;
         private boolean isLast;
         private boolean isFirst;
 
+        private int accentColor;
+        private int oldAccentColor;
+        private boolean accentColorChanged;
+
+        private ObjectAnimator accentAnimator;
+        private float accentState;
+        private final ArgbEvaluator evaluator = new ArgbEvaluator();
+
         public InnerThemeView(Context context) {
             super(context);
             setWillNotDraw(false);
@@ -1255,6 +1271,8 @@ public InnerThemeView(Context context) {
             outDrawable = context.getResources().getDrawable(R.drawable.minibubble_out).mutate();
 
             textPaint.setTextSize(AndroidUtilities.dp(13));
+            paintFrame.setStyle(Paint.Style.STROKE);
+            paintFrame.setStrokeWidth(AndroidUtilities.dp(2));
 
             button = new RadioButton(context) {
                 @Override
@@ -1264,7 +1282,6 @@ public void invalidate() {
                 }
             };
             button.setSize(AndroidUtilities.dp(20));
-            button.setColor(0x66ffffff, 0xffffffff);
             addView(button, LayoutHelper.createFrame(22, 22, Gravity.LEFT | Gravity.TOP, 27, 75, 0, 0));
         }
 
@@ -1280,8 +1297,11 @@ public void setTheme(Theme.ThemeInfo theme, boolean last, boolean first) {
             FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) button.getLayoutParams();
             layoutParams.leftMargin = AndroidUtilities.dp(isFirst ? 22 + 27 : 27);
             button.setLayoutParams(layoutParams);
-            inDrawable.setColorFilter(new PorterDuffColorFilter(theme.previewInColor, PorterDuff.Mode.MULTIPLY));
-            outDrawable.setColorFilter(new PorterDuffColorFilter(theme.previewOutColor, PorterDuff.Mode.MULTIPLY));
+
+            inDrawable.setColorFilter(new PorterDuffColorFilter(themeInfo.previewInColor, PorterDuff.Mode.MULTIPLY));
+            outDrawable.setColorFilter(new PorterDuffColorFilter(themeInfo.previewOutColor, PorterDuff.Mode.MULTIPLY));
+
+            updateAccentColor(themeInfo.accentColor,false);
         }
 
         @Override
@@ -1294,24 +1314,63 @@ public void updateCurrentThemeCheck() {
             button.setChecked(themeInfo == Theme.getCurrentTheme(), true);
         }
 
+        void updateAccentColor(int accent, boolean animate) {
+            oldAccentColor = accentColor;
+            accentColor = accent;
+
+            if (accentAnimator != null) {
+                accentAnimator.cancel();
+            }
+
+            if (animate) {
+                accentAnimator = ObjectAnimator.ofFloat(this, "accentState", 0f, 1f);
+                accentAnimator.setDuration(200);
+                accentAnimator.start();
+            } else {
+                setAccentState(1f);
+            }
+        }
+
+        @Keep
+        public float getAccentState() {
+            return accentColor;
+        }
+
+        @Keep
+        public void setAccentState(float state) {
+            accentState = state;
+            accentColorChanged = true;
+            invalidate();
+        }
+
         @Override
         protected void onDraw(Canvas canvas) {
-            paint.setColor(themeInfo.previewBackgroundColor);
+            if (accentColor != themeInfo.accentColor) {
+                updateAccentColor(themeInfo.accentColor, true);
+            }
+
+            paint.setColor(tint(themeInfo.previewBackgroundColor));
+
+            if (accentColorChanged) {
+                inDrawable.setColorFilter(new PorterDuffColorFilter(tint(themeInfo.previewInColor), PorterDuff.Mode.MULTIPLY));
+                outDrawable.setColorFilter(new PorterDuffColorFilter(tint(themeInfo.previewOutColor), PorterDuff.Mode.MULTIPLY));
+                accentColorChanged = false;
+            }
+
             int x = isFirst ? AndroidUtilities.dp(22) : 0;
-            rect.set(x, AndroidUtilities.dp(11), x + AndroidUtilities.dp(76), AndroidUtilities.dp(11 + 97));
+            float strokeHalf = 0.5f * paintFrame.getStrokeWidth();
+            rect.set(x + strokeHalf, AndroidUtilities.dp(11) + strokeHalf, x + AndroidUtilities.dp(76) - strokeHalf, AndroidUtilities.dp(11 + 97) - strokeHalf);
             canvas.drawRoundRect(rect, AndroidUtilities.dp(6), AndroidUtilities.dp(6), paint);
 
-            if ("Arctic Blue".equals(themeInfo.name)) {
-                int color = 0xffb0b5ba;
-                int r = Color.red(color);
-                int g = Color.green(color);
-                int b = Color.blue(color);
+            button.setColor(0x66ffffff, 0xffffffff);
+
+            if (themeInfo.accentBaseColor != 0) {
+                if (!themeInfo.isDark()) {
+                    button.setColor(0xffb3b3b3, tint(themeInfo.accentBaseColor));
+                }
 
-                button.setColor(0xffb3b3b3, 0xff37a9f0);
-                Theme.chat_instantViewRectPaint.setColor(Color.argb(43, r, g, b));
-                canvas.drawRoundRect(rect, AndroidUtilities.dp(6), AndroidUtilities.dp(6), Theme.chat_instantViewRectPaint);
-            } else {
-                button.setColor(0x66ffffff, 0xffffffff);
+                paintFrame.setColor(tint(themeInfo.accentBaseColor));
+                canvas.drawRoundRect(rect, AndroidUtilities.dp(6), AndroidUtilities.dp(6), paintFrame);
             }
 
             inDrawable.setBounds(x + AndroidUtilities.dp(6), AndroidUtilities.dp(22), x + AndroidUtilities.dp(6 + 43), AndroidUtilities.dp(22 + 14));
@@ -1325,13 +1384,96 @@ protected void onDraw(Canvas canvas) {
             textPaint.setColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));
             canvas.drawText(text, x + (AndroidUtilities.dp(76) - width) / 2, AndroidUtilities.dp(131), textPaint);
         }
+
+        private int tint(int color) {
+            if (accentState == 1f) {
+                return Theme.changeColorAccent(themeInfo, accentColor, color);
+            } else {
+                int oldColor = Theme.changeColorAccent(themeInfo, oldAccentColor, color);
+                int newColor = Theme.changeColorAccent(themeInfo, accentColor, color);
+                return (int) evaluator.evaluate(accentState, oldColor, newColor);
+            }
+        }
     }
 
-    private class InnerListAdapter extends RecyclerListView.SelectionAdapter {
+    private static class InnerAccentView extends View {
+        private final Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        private int currentColor;
+        private float checkedState;
+        private ObjectAnimator checkAnimator;
+
+        public InnerAccentView(Context context) {
+            super(context);
+            paint.setStrokeWidth(AndroidUtilities.dp(3));
+        }
+
+        void setColor(int color) {
+            currentColor = color;
+            paint.setColor(color);
+            invalidate();
+        }
+
+        void updateCheckedState(boolean animate) {
+            boolean checked = Theme.getCurrentTheme().accentColor == currentColor;
+
+            if (checkAnimator != null) {
+                checkAnimator.cancel();
+            }
+
+            if (animate) {
+                checkAnimator = ObjectAnimator.ofFloat(this, "checkedState", checked ? 1f : 0f);
+                checkAnimator.setDuration(200);
+                checkAnimator.start();
+            } else {
+                setCheckedState(checked ? 1f : 0f);
+            }
+        }
+
+        @Keep
+        public void setCheckedState(float state) {
+            checkedState = state;
+            invalidate();
+        }
+
+        @Keep
+        public float getCheckedState() {
+            return checkedState;
+        }
+
+        @Override
+        protected void onAttachedToWindow() {
+            super.onAttachedToWindow();
+            updateCheckedState(false);
+        }
+
+        @Override
+        protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+            super.onMeasure(
+                    MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(62), MeasureSpec.EXACTLY),
+                    MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(62), MeasureSpec.EXACTLY)
+            );
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            float center = 0.5f * getMeasuredWidth();
+            float rad = AndroidUtilities.dp(20);
+
+            paint.setStyle(Paint.Style.STROKE);
+            paint.setAlpha(Math.round(255f * checkedState));
+            canvas.drawCircle(center, center, rad - 0.5f * paint.getStrokeWidth(), paint);
+
+            paint.setStyle(Paint.Style.FILL);
+            paint.setAlpha(255);
+            canvas.drawCircle(center, center, rad - AndroidUtilities.dp(5) * checkedState, paint);
+        }
+    }
+
+    private class ThemesListAdapter extends RecyclerListView.SelectionAdapter {
 
         private Context mContext;
 
-        public InnerListAdapter(Context context) {
+        ThemesListAdapter(Context context) {
             mContext = context;
         }
 
@@ -1352,13 +1494,62 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         }
 
         @Override
-        public int getItemViewType(int position) {
-            return 0;
+        public int getItemCount() {
+            return defaultThemes.size();
+        }
+    }
+
+    private static class ThemeAccentsListAdapter extends RecyclerListView.SelectionAdapter {
+
+        private Context mContext;
+        private Theme.ThemeInfo currentTheme;
+
+        ThemeAccentsListAdapter(Context context) {
+            mContext = context;
+            currentTheme = Theme.getCurrentTheme();
+        }
+
+        @Override
+        public void notifyDataSetChanged() {
+            currentTheme = Theme.getCurrentTheme();
+            super.notifyDataSetChanged();
+        }
+
+        @Override
+        public boolean isEnabled(RecyclerView.ViewHolder holder) {
+            return false;
+        }
+
+        @Override
+        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            return new RecyclerListView.Holder(new InnerAccentView(mContext));
+        }
+
+        @Override
+        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+            InnerAccentView view = (InnerAccentView) holder.itemView;
+            view.setColor(currentTheme.accentColorOptions[position]);
         }
 
         @Override
         public int getItemCount() {
-            return defaultThemes.size();
+            return currentTheme.accentColorOptions == null ? 0 : currentTheme.accentColorOptions.length;
+        }
+
+        int getAccentColor(int pos) {
+            return currentTheme.accentColorOptions == null ? 0 : currentTheme.accentColorOptions[pos];
+        }
+
+        int findCurrentAccent() {
+            int[] options = currentTheme.accentColorOptions;
+            if (options != null) {
+                for (int a = 0, count = options.length; a < count; a++) {
+                    if (options[a] == currentTheme.accentColor) {
+                        return a;
+                    }
+                }
+            }
+            return -1;
         }
     }
 
@@ -1378,7 +1569,7 @@ public int getItemCount() {
         @Override
         public boolean isEnabled(RecyclerView.ViewHolder holder) {
             int type = holder.getItemViewType();
-            return type == 0 || type == 1 || type == 4 || type == 7 || type == 10 || type == 11;
+            return type == 0 || type == 1 || type == 4 || type == 7 || type == 10 || type == 11 || type == 12;
         }
 
         private void showOptionsForTheme(Theme.ThemeInfo themeInfo) {
@@ -1545,8 +1736,7 @@ protected void didSelectChatType(boolean threeLines) {
                     view.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
                     break;
                 case 11:
-                default: {
-                    RecyclerListView horizontalListView = new RecyclerListView(mContext) {
+                    RecyclerListView horizontalListView = new TintRecyclerListView(mContext) {
                         @Override
                         public boolean onInterceptTouchEvent(MotionEvent e) {
                             if (getParent() != null && getParent().getParent() != null) {
@@ -1558,7 +1748,7 @@ public boolean onInterceptTouchEvent(MotionEvent e) {
                         @Override
                         public void onDraw(Canvas canvas) {
                             super.onDraw(canvas);
-                            if (hasCustomThemes) {
+                            if (hasCustomThemes || hasThemeAccents) {
                                 canvas.drawLine(LocaleController.isRTL ? 0 : AndroidUtilities.dp(20), getMeasuredHeight() - 1, getMeasuredWidth() - (LocaleController.isRTL ? AndroidUtilities.dp(20) : 0), getMeasuredHeight() - 1, Theme.dividerPaint);
                             }
                         }
@@ -1582,7 +1772,7 @@ public boolean supportsPredictiveItemAnimations() {
                     horizontalListView.setClipToPadding(false);
                     layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);
                     horizontalListView.setLayoutManager(layoutManager);
-                    horizontalListView.setAdapter(new InnerListAdapter(mContext));
+                    horizontalListView.setAdapter(new ThemesListAdapter(mContext));
                     horizontalListView.setOnItemClickListener((view1, position) -> {
                         InnerThemeView innerThemeView = (InnerThemeView) view1;
                         Theme.ThemeInfo themeInfo = innerThemeView.themeInfo;
@@ -1590,6 +1780,9 @@ public boolean supportsPredictiveItemAnimations() {
                             return;
                         }
                         NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.needSetDayNightTheme, themeInfo, false);
+                        updateRows();
+                        animateThemeAccents = true;
+
                         int left = view1.getLeft();
                         int right = view1.getRight();
                         if (left < 0) {
@@ -1598,9 +1791,9 @@ public boolean supportsPredictiveItemAnimations() {
                             horizontalListView.smoothScrollBy(right - horizontalListView.getMeasuredWidth(), 0);
                         }
 
-                        int count = innerListView.getChildCount();
+                        int count = horizontalListView.getChildCount();
                         for (int a = 0; a < count; a++) {
-                            View child = innerListView.getChildAt(a);
+                            View child = horizontalListView.getChildAt(a);
                             if (child instanceof InnerThemeView) {
                                 ((InnerThemeView) child).updateCurrentThemeCheck();
                             }
@@ -1611,9 +1804,77 @@ public boolean supportsPredictiveItemAnimations() {
                         showOptionsForTheme(innerThemeView.themeInfo);
                         return true;
                     });
-                    view = innerListView = horizontalListView;
+                    view = horizontalListView;
                     view.setLayoutParams(new RecyclerView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(148)));
                     break;
+                case 12:
+                default: {
+                    RecyclerListView accentsListView = new TintRecyclerListView(mContext) {
+                        @Override
+                        public boolean onInterceptTouchEvent(MotionEvent e) {
+                            if (getParent() != null && getParent().getParent() != null) {
+                                getParent().getParent().requestDisallowInterceptTouchEvent(true);
+                            }
+                            return super.onInterceptTouchEvent(e);
+                        }
+
+                        @Override
+                        public void onDraw(Canvas canvas) {
+                            super.onDraw(canvas);
+                            if (hasCustomThemes) {
+                                canvas.drawLine(LocaleController.isRTL ? 0 : AndroidUtilities.dp(20), getMeasuredHeight() - 1, getMeasuredWidth() - (LocaleController.isRTL ? AndroidUtilities.dp(20) : 0), getMeasuredHeight() - 1, Theme.dividerPaint);
+                            }
+                        }
+                    };
+                    accentsListView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
+                    accentsListView.setItemAnimator(null);
+                    accentsListView.setLayoutAnimation(null);
+                    accentsListView.setPadding(AndroidUtilities.dp(11), 0, AndroidUtilities.dp(11), 0);
+                    accentsListView.setClipToPadding(false);
+                    LinearLayoutManager accentsLayoutManager = new LinearLayoutManager(mContext);
+                    accentsLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);
+                    accentsListView.setLayoutManager(accentsLayoutManager);
+                    ThemeAccentsListAdapter accentsAdapter = new ThemeAccentsListAdapter(mContext);
+                    accentsListView.setAdapter(accentsAdapter);
+                    accentsListView.setOnItemClickListener((view1, position) -> {
+                        int newAccent = accentsAdapter.getAccentColor(position);
+                        Theme.ThemeInfo currentTheme = Theme.getCurrentTheme();
+                        if (currentTheme.accentColor != newAccent) {
+                            Theme.saveThemeAccent(currentTheme, newAccent);
+                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.needSetDayNightTheme, currentTheme, false);
+                        }
+
+                        int left = view1.getLeft();
+                        int right = view1.getRight();
+                        int extra = AndroidUtilities.dp(52);
+                        if (left - extra < 0) {
+                            accentsListView.smoothScrollBy(left - extra, 0);
+                        } else if (right + extra > accentsListView.getMeasuredWidth()) {
+                            accentsListView.smoothScrollBy(right + extra - accentsListView.getMeasuredWidth(), 0);
+                        }
+
+                        int count = accentsListView.getChildCount();
+                        for (int a = 0; a < count; a++) {
+                            View child = accentsListView.getChildAt(a);
+                            if (child instanceof InnerAccentView) {
+                                ((InnerAccentView) child).updateCheckedState(true);
+                            }
+                        }
+                    });
+
+                    int pos = accentsAdapter.findCurrentAccent();
+                    if (pos != -1) {
+                        accentsLayoutManager.scrollToPositionWithOffset(pos, listView.getMeasuredWidth() / 2 - AndroidUtilities.dp(42));
+                    }
+
+                    if (animateThemeAccents) {
+                        accentsListView.setAlpha(0f);
+                        accentsListView.animate().alpha(1f).setDuration(200);
+                    }
+
+                    view = accentsListView;
+                    view.setLayoutParams(new RecyclerView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(62)));
+                    break;
                 }
             }
             return new RecyclerListView.Holder(view);
@@ -1786,6 +2047,16 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     }
                     break;
                 }
+                case 12: {
+                    RecyclerListView accentsList = (RecyclerListView) holder.itemView;
+                    ThemeAccentsListAdapter adapter = (ThemeAccentsListAdapter) accentsList.getAdapter();
+                    adapter.notifyDataSetChanged();
+                    int pos = adapter.findCurrentAccent();
+                    if (pos != -1) {
+                        ((LinearLayoutManager) accentsList.getLayoutManager()).scrollToPositionWithOffset(pos, listView.getMeasuredWidth() / 2 - AndroidUtilities.dp(42));
+                    }
+                    break;
+                }
             }
         }
 
@@ -1835,17 +2106,24 @@ public int getItemViewType(int position) {
                 return 10;
             } else if (position == themeListRow) {
                 return 11;
+            } else if (position == themeAccentListRow) {
+                return 12;
             }
             return 0;
         }
     }
 
+    private static abstract class TintRecyclerListView extends RecyclerListView {
+        TintRecyclerListView(Context context) {
+            super(context);
+        }
+    }
+
     @Override
     public ThemeDescription[] getThemeDescriptions() {
         return new ThemeDescription[]{
-                new ThemeDescription(listView, ThemeDescription.FLAG_CELLBACKGROUNDCOLOR, new Class[]{TextSettingsCell.class, TextCheckCell.class, HeaderCell.class, BrightnessControlCell.class, ThemeTypeCell.class, ThemeCell.class, TextSizeCell.class, ChatListCell.class, NotificationsCheckCell.class}, null, null, null, Theme.key_windowBackgroundWhite),
+                new ThemeDescription(listView, ThemeDescription.FLAG_CELLBACKGROUNDCOLOR, new Class[]{TextSettingsCell.class, TextCheckCell.class, HeaderCell.class, BrightnessControlCell.class, ThemeTypeCell.class, ThemeCell.class, TextSizeCell.class, ChatListCell.class, NotificationsCheckCell.class, TintRecyclerListView.class}, null, null, null, Theme.key_windowBackgroundWhite),
                 new ThemeDescription(fragmentView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, Theme.key_windowBackgroundGray),
-                new ThemeDescription(innerListView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, Theme.key_windowBackgroundWhite),
 
                 new ThemeDescription(actionBar, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, Theme.key_actionBarDefault),
                 new ThemeDescription(listView, ThemeDescription.FLAG_LISTGLOWCOLOR, null, null, null, null, Theme.key_actionBarDefault),
diff --git a/TMessagesProj/src/main/res/values-v21/styles.xml b/TMessagesProj/src/main/res/values-v21/styles.xml
index 9786c7c72..f95d0dc4e 100644
--- a/TMessagesProj/src/main/res/values-v21/styles.xml
+++ b/TMessagesProj/src/main/res/values-v21/styles.xml
@@ -36,7 +36,8 @@
         <item name="android:colorPrimaryDark">#33000000</item>
         <item name="android:colorPrimary">#527da3</item>
         <item name="android:alertDialogTheme">@style/Theme.TMessages.Dialog.Alert</item>
-        <item name="android:colorControlActivated">#4991cc</item>
+        <item name="android:colorControlActivated">#808080</item>
+        <item name="android:textColorHighlight">#60808080</item>
         <item name="android:datePickerStyle">@style/Theme.TMessages.DatePicker</item>
         <item name="android:datePickerDialogTheme">@style/Theme.TMessages.Dialog.Alert</item>
         <item name="android:timePickerStyle">@style/Theme.TMessages.TimePicker</item>
@@ -60,7 +61,7 @@
     <style name="Theme.TMessages.Dialog.Alert" parent="android:style/Theme.Material.Light.Dialog.Alert">
         <item name="android:colorAccent">#4991cc</item>
         <item name="android:colorPrimary">#527da3</item>
-        <item name="android:colorControlActivated">#4991cc</item>
+        <item name="android:colorControlActivated">#808080</item>
     </style>
 
     <style name="Theme.TMessages.Transparent" parent="Theme.TMessages">
