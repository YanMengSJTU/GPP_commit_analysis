diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
index 0aa32e84e..db017b1e9 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
@@ -19,6 +19,8 @@
 import android.text.format.DateFormat;
 import android.util.Xml;
 
+import androidx.core.util.Consumer;
+
 import org.telegram.messenger.time.FastDateFormat;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
@@ -805,11 +807,25 @@ private void loadOtherLanguages() {
         return new HashMap<>();
     }
 
-    public void applyLanguage(LocaleInfo localeInfo, boolean override, boolean init, final int currentAccount) {
+    public void applyLanguage(LocaleController.LocaleInfo localeInfo, boolean override,
+                              boolean init, final int currentAccount) {
         applyLanguage(localeInfo, override, init, false, false, currentAccount);
     }
 
-    public void applyLanguage(final LocaleInfo localeInfo, boolean override, boolean init, boolean fromFile, boolean force, final int currentAccount) {
+    public void applyLanguage(LocaleController.LocaleInfo localeInfo, boolean override,
+                              boolean init, final int currentAccount,
+                              Consumer<Boolean> onRemoteResult) {
+        applyLanguage(localeInfo, override, init, false, false, currentAccount, onRemoteResult);
+    }
+
+    public void applyLanguage(final LocaleController.LocaleInfo localeInfo, boolean override, boolean init,
+                              boolean fromFile, boolean force, final int currentAccount) {
+        applyLanguage(localeInfo, override, init, fromFile, force, currentAccount, null);
+    }
+
+    public void applyLanguage(final LocaleController.LocaleInfo localeInfo, boolean override, boolean init,
+                              boolean fromFile, boolean force, final int currentAccount,
+                              Consumer<Boolean> onRemoteResult) {
         if (localeInfo == null) {
             return;
         }
@@ -820,7 +836,7 @@ public void applyLanguage(final LocaleInfo localeInfo, boolean override, boolean
         if (!init) {
             ConnectionsManager.setLangCode(localeInfo.getLangCode());
         }
-        LocaleInfo existingInfo = getLanguageFromDict(localeInfo.getKey());
+        LocaleController.LocaleInfo existingInfo = getLanguageFromDict(localeInfo.getKey());
         if (existingInfo == null) {
             if (localeInfo.isRemote()) {
                 remoteLanguages.add(localeInfo);
@@ -839,9 +855,9 @@ public void applyLanguage(final LocaleInfo localeInfo, boolean override, boolean
                 FileLog.d("reload locale because one of file doesn't exist" + pathToFile + " " + pathToBaseFile);
             }
             if (init) {
-                AndroidUtilities.runOnUIThread(() -> applyRemoteLanguage(localeInfo, null, true, currentAccount));
+                AndroidUtilities.runOnUIThread(() -> applyRemoteLanguage(localeInfo, null, true, currentAccount, onRemoteResult));
             } else {
-                applyRemoteLanguage(localeInfo, null, true, currentAccount);
+                applyRemoteLanguage(localeInfo, null, true, currentAccount, onRemoteResult);
             }
         }
         try {
@@ -886,13 +902,13 @@ public void applyLanguage(final LocaleInfo localeInfo, boolean override, boolean
                 if (currentPluralRules == null) {
                     currentPluralRules = allRules.get(currentLocale.getLanguage());
                     if (currentPluralRules == null) {
-                        currentPluralRules = new PluralRules_None();
+                        currentPluralRules = new LocaleController.PluralRules_None();
                     }
                 }
             }
             changingConfiguration = true;
             Locale.setDefault(currentLocale);
-            android.content.res.Configuration config = new android.content.res.Configuration();
+            Configuration config = new Configuration();
             config.locale = currentLocale;
             ApplicationLoader.applicationContext.getResources().updateConfiguration(config, ApplicationLoader.applicationContext.getResources().getDisplayMetrics());
             changingConfiguration = false;
@@ -904,6 +920,7 @@ public void applyLanguage(final LocaleInfo localeInfo, boolean override, boolean
                 }
                 reloadLastFile = false;
             }
+
         } catch (Exception e) {
             FileLog.e(e);
             changingConfiguration = false;
@@ -1814,7 +1831,27 @@ public void loadRemoteLanguages(final int currentAccount) {
         }, ConnectionsManager.RequestFlagWithoutLogin);
     }
 
-    private void applyRemoteLanguage(LocaleInfo localeInfo, String langCode, boolean force, final int currentAccount) {
+    private void applyRemoteLanguage(LocaleInfo localeInfo, String langCode,
+                                     boolean force, final int currentAccount) {
+        applyRemoteLanguage(localeInfo, langCode, force, currentAccount, null);
+    }
+
+    private void applyRemoteLanguage(LocaleInfo localeInfo, String langCode, boolean force,
+                                     final int currentAccount, Consumer<Boolean> onResult) {
+        applyRemoteLanguageInternal(localeInfo, langCode, force, currentAccount, response ->
+                AndroidUtilities.runOnUIThread(() -> {
+                    if (onResult != null) {
+                        onResult.accept(response != null);
+                    }
+                    if (response != null) {
+                        saveRemoteLocaleStrings(localeInfo, response, currentAccount);
+                    }
+                }));
+    }
+
+    private void applyRemoteLanguageInternal(LocaleInfo localeInfo, String langCode,
+                                             boolean force, final int currentAccount,
+                                             Consumer<TLRPC.TL_langPackDifference> onResult) {
         if (localeInfo == null || localeInfo != null && !localeInfo.isRemote() && !localeInfo.isUnofficial()) {
             return;
         }
@@ -1826,18 +1863,14 @@ private void applyRemoteLanguage(LocaleInfo localeInfo, String langCode, boolean
                     req.lang_code = localeInfo.getBaseLangCode();
                     req.lang_pack = "";
                     ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
-                        if (response != null) {
-                            AndroidUtilities.runOnUIThread(() -> saveRemoteLocaleStrings(localeInfo, (TLRPC.TL_langPackDifference) response, currentAccount));
-                        }
+                        onResult.accept((TLRPC.TL_langPackDifference) response);
                     }, ConnectionsManager.RequestFlagWithoutLogin);
                 }
             } else {
                 TLRPC.TL_langpack_getLangPack req = new TLRPC.TL_langpack_getLangPack();
                 req.lang_code = localeInfo.getBaseLangCode();
                 ConnectionsManager.getInstance(currentAccount).sendRequest(req, (TLObject response, TLRPC.TL_error error) -> {
-                    if (response != null) {
-                        AndroidUtilities.runOnUIThread(() -> saveRemoteLocaleStrings(localeInfo, (TLRPC.TL_langPackDifference) response, currentAccount));
-                    }
+                    onResult.accept((TLRPC.TL_langPackDifference) response);
                 }, ConnectionsManager.RequestFlagWithoutLogin);
             }
         }
@@ -1848,9 +1881,7 @@ private void applyRemoteLanguage(LocaleInfo localeInfo, String langCode, boolean
                 req.lang_code = localeInfo.getLangCode();
                 req.lang_pack = "";
                 ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
-                    if (response != null) {
-                        AndroidUtilities.runOnUIThread(() -> saveRemoteLocaleStrings(localeInfo, (TLRPC.TL_langPackDifference) response, currentAccount));
-                    }
+                    onResult.accept((TLRPC.TL_langPackDifference) response);
                 }, ConnectionsManager.RequestFlagWithoutLogin);
             } else {
                 for (int a = 0; a < UserConfig.MAX_ACCOUNT_COUNT; a++) {
@@ -1859,9 +1890,7 @@ private void applyRemoteLanguage(LocaleInfo localeInfo, String langCode, boolean
                 TLRPC.TL_langpack_getLangPack req = new TLRPC.TL_langpack_getLangPack();
                 req.lang_code = localeInfo.getLangCode();
                 ConnectionsManager.getInstance(currentAccount).sendRequest(req, (TLObject response, TLRPC.TL_error error) -> {
-                    if (response != null) {
-                        AndroidUtilities.runOnUIThread(() -> saveRemoteLocaleStrings(localeInfo, (TLRPC.TL_langPackDifference) response, currentAccount));
-                    }
+                    onResult.accept((TLRPC.TL_langPackDifference) response);
                 }, ConnectionsManager.RequestFlagWithoutLogin);
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
index 8a674de38..30f096ee7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
@@ -26,8 +26,6 @@
 import android.os.Bundle;
 import android.os.Looper;
 import android.os.Parcelable;
-import androidx.viewpager.widget.PagerAdapter;
-import androidx.viewpager.widget.ViewPager;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.TextureView;
@@ -38,6 +36,10 @@
 import android.widget.ImageView;
 import android.widget.ScrollView;
 import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.viewpager.widget.PagerAdapter;
+import androidx.viewpager.widget.ViewPager;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildVars;
@@ -51,6 +53,8 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.ui.ActionBar.AlertDialog;
+import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Components.BottomPagesView;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -81,6 +85,7 @@
     private boolean dragging;
     private int startDragX;
     private boolean destroyed;
+    private boolean goToLoginAfterReloadingInterface;
 
     private LocaleController.LocaleInfo localeInfo;
 
@@ -209,9 +214,7 @@ public void onPageScrollStateChanged(int i) {
         startMessagingButton.setPadding(AndroidUtilities.dp(20), AndroidUtilities.dp(10), AndroidUtilities.dp(20), AndroidUtilities.dp(10));
         frameLayout.addView(startMessagingButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM, 10, 0, 10, 76));
         startMessagingButton.setOnClickListener(view -> {
-            if (startPressed) {
-                return;
-            }
+            if (startPressed) return;
             startPressed = true;
             Intent intent2 = new Intent(IntroActivity.this, LaunchActivity.class);
             intent2.putExtra("fromIntro", true);
@@ -230,21 +233,31 @@ public void onPageScrollStateChanged(int i) {
         frameLayout.addView(bottomPages, LayoutHelper.createFrame(66, 5, Gravity.TOP | Gravity.CENTER_HORIZONTAL, 0, 350, 0, 0));
 
         textView = new TextView(this);
+        textView.setLines(1);
+        textView.setSingleLine(true);
         textView.setTextColor(0xff1393d2);
         textView.setGravity(Gravity.CENTER);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-        frameLayout.addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, 30, Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, 0, 0, 20));
+        textView.setBackground(Theme.createSelectorDrawableRounded(0x0f000000, 12));
+        textView.setPadding(AndroidUtilities.dp(16), 0, AndroidUtilities.dp(16), 0);
+        frameLayout.addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, 38, Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, 0, 0, 16));
         textView.setOnClickListener(v -> {
-            if (startPressed || localeInfo == null) {
-                return;
-            }
-            LocaleController.getInstance().applyLanguage(localeInfo, true, false, currentAccount);
-            startPressed = true;
-            Intent intent2 = new Intent(IntroActivity.this, LaunchActivity.class);
-            intent2.putExtra("fromIntro", true);
-            startActivity(intent2);
-            destroyed = true;
-            finish();
+            if (startPressed || localeInfo == null ||
+                    goToLoginAfterReloadingInterface) return;
+            AlertDialog progressDialog = new AlertDialog(this, 3);
+            progressDialog.setOnCancelListener(dialog ->
+                    goToLoginAfterReloadingInterface = false);
+            progressDialog.show();
+            goToLoginAfterReloadingInterface = true;
+            LocaleController.getInstance().applyLanguage(localeInfo,
+                    true, false, currentAccount, isSuccess -> {
+                        if (isSuccess) startPressed = true; else {
+                            goToLoginAfterReloadingInterface = false;
+                            Toast.makeText(this, LocaleController.getString("ErrorOccurred",
+                                    R.string.ErrorOccurred), Toast.LENGTH_LONG);
+                        }
+                        progressDialog.hide();
+                    });
         });
 
         if (AndroidUtilities.isTablet()) {
@@ -270,6 +283,7 @@ public void onPageScrollStateChanged(int i) {
         checkContinueText();
         justCreated = true;
         NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.suggestedLangpack);
+        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.reloadInterface);
 
         AndroidUtilities.handleProxyIntent(this, getIntent());
     }
@@ -304,6 +318,7 @@ protected void onDestroy() {
         super.onDestroy();
         destroyed = true;
         NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.suggestedLangpack);
+        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.reloadInterface);
         SharedPreferences preferences = MessagesController.getGlobalMainSettings();
         preferences.edit().putLong("intro_crashed_time", 0).commit();
     }
@@ -363,6 +378,15 @@ private void checkContinueText() {
     public void didReceivedNotification(int id, int account, Object... args) {
         if (id == NotificationCenter.suggestedLangpack) {
             checkContinueText();
+        } else if (id == NotificationCenter.reloadInterface) {
+            if (goToLoginAfterReloadingInterface) {
+                goToLoginAfterReloadingInterface = false;
+                Intent intent2 = new Intent(IntroActivity.this, LaunchActivity.class);
+                intent2.putExtra("fromIntro", true);
+                startActivity(intent2);
+                destroyed = true;
+                finish();
+            }
         }
     }
 
@@ -477,7 +501,7 @@ private boolean initGL() {
 
             int[] configsCount = new int[1];
             EGLConfig[] configs = new EGLConfig[1];
-            int[] configSpec = new int[] {
+            int[] configSpec = new int[]{
                     EGL10.EGL_RENDERABLE_TYPE, EGL_OPENGL_ES2_BIT,
                     EGL10.EGL_RED_SIZE, 8,
                     EGL10.EGL_GREEN_SIZE, 8,
@@ -505,7 +529,7 @@ private boolean initGL() {
                 return false;
             }
 
-            int[] attrib_list = { EGL_CONTEXT_CLIENT_VERSION, 2, EGL10.EGL_NONE };
+            int[] attrib_list = {EGL_CONTEXT_CLIENT_VERSION, 2, EGL10.EGL_NONE};
             eglContext = egl10.eglCreateContext(eglDisplay, eglConfig, EGL10.EGL_NO_CONTEXT, attrib_list);
             if (eglContext == null) {
                 if (BuildVars.LOGS_ENABLED) {
