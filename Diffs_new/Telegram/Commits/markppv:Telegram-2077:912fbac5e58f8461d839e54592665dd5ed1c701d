diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index f75ac0a77..152596220 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -15,12 +15,15 @@
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Handler;
 import android.text.TextUtils;
 import android.view.Menu;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.accessibility.AccessibilityManager;
 
+import androidx.core.util.Consumer;
+
 import org.telegram.messenger.AccountInstance;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ContactsController;
@@ -32,6 +35,9 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.ConnectionsManager;
 
+import java.util.ArrayList;
+import java.util.List;
+
 public class BaseFragment {
 
     private boolean isFinished;
@@ -49,6 +55,8 @@
     protected boolean swipeBackEnabled = true;
     protected boolean hasOwnBackground = false;
 
+    private final List<Runnable> fullyVisibleActions = new ArrayList<>();
+
     public BaseFragment() {
         classGuid = ConnectionsManager.generateClassGuid();
     }
@@ -368,12 +376,24 @@ protected void onBecomeFullyVisible() {
                 }
             }
         }
+        for (int i = 0; i < fullyVisibleActions.size(); i++) {
+            fullyVisibleActions.get(i).run();
+        }
+        fullyVisibleActions.clear();
     }
 
     protected void onBecomeFullyHidden() {
         isFullyVisible = false;
     }
 
+    public void doWhenFullyVisible(Runnable action) {
+        if (isFullyVisible) {
+            action.run();
+        } else {
+            fullyVisibleActions.add(action);
+        }
+    }
+
     protected AnimatorSet onCustomTransitionAnimation(boolean isOpen, final Runnable callback) {
         return null;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index bdeb75c4f..a94cb9335 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -35,12 +35,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Vibrator;
-
-import androidx.recyclerview.widget.ItemTouchHelper;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.LinearSmoothScrollerMiddle;
-import androidx.recyclerview.widget.RecyclerView;
-
 import android.text.TextUtils;
 import android.view.Gravity;
 import android.view.HapticFeedbackConstants;
@@ -55,6 +49,11 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 
+import androidx.recyclerview.widget.ItemTouchHelper;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.LinearSmoothScrollerMiddle;
+import androidx.recyclerview.widget.RecyclerView;
+
 import com.airbnb.lottie.LottieDrawable;
 
 import org.telegram.messenger.AccountInstance;
@@ -62,34 +61,41 @@
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ChatObject;
+import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.DataQuery;
 import org.telegram.messenger.DialogObject;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.ImageLocation;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.NotificationsController;
+import org.telegram.messenger.R;
 import org.telegram.messenger.SharedConfig;
+import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.Utilities;
 import org.telegram.messenger.XiaomiUtilities;
-import org.telegram.messenger.FileLog;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.NotificationCenter;
-import org.telegram.messenger.R;
-import org.telegram.messenger.UserConfig;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.ActionBarMenu;
+import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.ActionBarMenuSubItem;
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BackDrawable;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.ActionBar.MenuDrawable;
+import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.ActionBar.ThemeDescription;
 import org.telegram.ui.Adapters.DialogsAdapter;
 import org.telegram.ui.Adapters.DialogsSearchAdapter;
 import org.telegram.ui.Cells.AccountSelectCell;
 import org.telegram.ui.Cells.ArchiveHintInnerCell;
+import org.telegram.ui.Cells.DialogCell;
 import org.telegram.ui.Cells.DialogsEmptyCell;
 import org.telegram.ui.Cells.DividerCell;
 import org.telegram.ui.Cells.DrawerActionCell;
@@ -103,12 +109,6 @@
 import org.telegram.ui.Cells.ProfileSearchCell;
 import org.telegram.ui.Cells.ShadowSectionCell;
 import org.telegram.ui.Cells.UserCell;
-import org.telegram.ui.Cells.DialogCell;
-import org.telegram.ui.ActionBar.ActionBar;
-import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.ui.ActionBar.ActionBarMenuItem;
-import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.ui.ActionBar.MenuDrawable;
 import org.telegram.ui.Components.AlertsCreator;
 import org.telegram.ui.Components.AnimatedArrowDrawable;
 import org.telegram.ui.Components.AvatarDrawable;
@@ -117,8 +117,8 @@
 import org.telegram.ui.Components.CombinedDrawable;
 import org.telegram.ui.Components.CubicBezierInterpolator;
 import org.telegram.ui.Components.DialogsItemAnimator;
-import org.telegram.ui.Components.FragmentContextView;
 import org.telegram.ui.Components.EmptyTextProgressView;
+import org.telegram.ui.Components.FragmentContextView;
 import org.telegram.ui.Components.JoinGroupAlert;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.NumberTextView;
@@ -126,7 +126,6 @@
 import org.telegram.ui.Components.ProxyDrawable;
 import org.telegram.ui.Components.RadialProgressView;
 import org.telegram.ui.Components.RecyclerListView;
-import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
 import org.telegram.ui.Components.StickersAlert;
 import org.telegram.ui.Components.UndoView;
@@ -134,7 +133,7 @@
 import java.util.ArrayList;
 
 public class DialogsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
-    
+
     private RecyclerListView listView;
     private LinearLayoutManager layoutManager;
     private DialogsAdapter dialogsAdapter;
@@ -232,7 +231,7 @@
     private int canMuteCount;
     private int canUnmuteCount;
     private int canClearCacheCount;
-    
+
     private int folderId;
 
     private final static int pin = 100;
@@ -2805,33 +2804,37 @@ public void didReceivedNotification(int id, int account, Object... args) {
                 return;
             }
             //checkUnreadCount(true);
-            if (dialogsAdapter != null) {
-                if (dialogsAdapter.isDataSetChanged() || args.length > 0) {
-                    dialogsAdapter.notifyDataSetChanged();
-                } else {
-                    updateVisibleRows(MessagesController.UPDATE_MASK_NEW_MESSAGE);
-                }
-            }
-            if (listView != null) {
-                try {
-                    if (listView.getAdapter() == dialogsAdapter) {
-                        searchEmptyView.setVisibility(View.GONE);
-                        listView.setEmptyView(folderId == 0 ? progressView : null);
+            Runnable updateDialogs = () -> {
+                if (dialogsAdapter != null) {
+                    if (dialogsAdapter.isDataSetChanged() || args.length > 0) {
+                        dialogsAdapter.notifyDataSetChanged();
                     } else {
-                        if (searching && searchWas) {
-                            listView.setEmptyView(searchEmptyView);
-                        } else {
+                        updateVisibleRows(MessagesController.UPDATE_MASK_NEW_MESSAGE);
+                    }
+                }
+                if (listView != null) {
+                    try {
+                        if (listView.getAdapter() == dialogsAdapter) {
                             searchEmptyView.setVisibility(View.GONE);
-                            listView.setEmptyView(null);
+                            listView.setEmptyView(folderId == 0 ? progressView : null);
+                        } else {
+                            if (searching && searchWas) {
+                                listView.setEmptyView(searchEmptyView);
+                            } else {
+                                searchEmptyView.setVisibility(View.GONE);
+                                listView.setEmptyView(null);
+                            }
+                            progressView.setVisibility(View.GONE);
                         }
-                        progressView.setVisibility(View.GONE);
+                    } catch (Exception e) {
+                        FileLog.e(e);
                     }
-                } catch (Exception e) {
-                    FileLog.e(e);
                 }
-            }
+            };
+            if (folderId == 0) updateDialogs.run();
+            else doWhenFullyVisible(updateDialogs);
         } else if (id == NotificationCenter.emojiDidLoad) {
-            updateVisibleRows(0);
+            doWhenFullyVisible(() -> updateVisibleRows(0));
         } else if (id == NotificationCenter.closeSearchByActiveAction) {
             if (actionBar != null) {
                 actionBar.closeSearchField();
@@ -2840,25 +2843,27 @@ public void didReceivedNotification(int id, int account, Object... args) {
             updateProxyButton(false);
         } else if (id == NotificationCenter.updateInterfaces) {
             Integer mask = (Integer) args[0];
-            updateVisibleRows(mask);
+            doWhenFullyVisible(() -> updateVisibleRows(mask));
             /*if ((mask & MessagesController.UPDATE_MASK_NEW_MESSAGE) != 0 || (mask & MessagesController.UPDATE_MASK_READ_DIALOG_MESSAGE) != 0) {
                 checkUnreadCount(true);
             }*/
         } else if (id == NotificationCenter.appDidLogout) {
             dialogsLoaded[currentAccount] = false;
         } else if (id == NotificationCenter.encryptedChatUpdated) {
-            updateVisibleRows(0);
+            doWhenFullyVisible(() -> updateVisibleRows(0));
         } else if (id == NotificationCenter.contactsDidLoad) {
             if (dialogsListFrozen) {
                 return;
             }
-            if (dialogsType == 0 && getMessagesController().getDialogs(folderId).isEmpty()) {
-                if (dialogsAdapter != null) {
-                    dialogsAdapter.notifyDataSetChanged();
+            doWhenFullyVisible(() -> {
+                if (dialogsType == 0 && getMessagesController().getDialogs(folderId).isEmpty()) {
+                    if (dialogsAdapter != null) {
+                        dialogsAdapter.notifyDataSetChanged();
+                    }
+                } else {
+                    updateVisibleRows(0);
                 }
-            } else {
-                updateVisibleRows(0);
-            }
+            });
         } else if (id == NotificationCenter.openedChatChanged) {
             if (dialogsType == 0 && AndroidUtilities.isTablet()) {
                 boolean close = (Boolean) args[1];
@@ -2878,7 +2883,7 @@ public void didReceivedNotification(int id, int account, Object... args) {
         } else if (id == NotificationCenter.notificationsSettingsUpdated) {
             updateVisibleRows(0);
         } else if (id == NotificationCenter.messageReceivedByAck || id == NotificationCenter.messageReceivedByServer || id == NotificationCenter.messageSendError) {
-            updateVisibleRows(MessagesController.UPDATE_MASK_SEND_STATE);
+            doWhenFullyVisible(() -> updateVisibleRows(MessagesController.UPDATE_MASK_SEND_STATE));
         } else if (id == NotificationCenter.didSetPasscode) {
             updatePasscodeButton();
         } else if (id == NotificationCenter.needReloadRecentDialogsSearch) {
@@ -2892,11 +2897,13 @@ public void didReceivedNotification(int id, int account, Object... args) {
                 dialogsSearchAdapter.notifyDataSetChanged();
             }
         } else if (id == NotificationCenter.didUpdateConnectionState) {
-            int state = AccountInstance.getInstance(account).getConnectionsManager().getConnectionState();
-            if (currentConnectionState != state) {
-                currentConnectionState = state;
-                updateProxyButton(true);
-            }
+            doWhenFullyVisible(() -> {
+                int state = AccountInstance.getInstance(account).getConnectionsManager().getConnectionState();
+                if (currentConnectionState != state) {
+                    currentConnectionState = state;
+                    updateProxyButton(true);
+                }
+            });
         } else if (id == NotificationCenter.dialogsUnreadCounterChanged) {
             /*if (!onlySelect) {
                 int count = (Integer) args[0];
@@ -3017,7 +3024,7 @@ private void hideFloatingButton(boolean hide) {
         }
         floatingHidden = hide;
         AnimatorSet animatorSet = new AnimatorSet();
-        animatorSet.playTogether(ObjectAnimator.ofFloat(floatingButtonContainer, View.TRANSLATION_Y,  (floatingHidden ? AndroidUtilities.dp(100) : -additionalFloatingTranslation))/*,
+        animatorSet.playTogether(ObjectAnimator.ofFloat(floatingButtonContainer, View.TRANSLATION_Y, (floatingHidden ? AndroidUtilities.dp(100) : -additionalFloatingTranslation))/*,
                 ObjectAnimator.ofFloat(unreadFloatingButtonContainer, View.TRANSLATION_Y, floatingHidden ? AndroidUtilities.dp(74) : 0)*/);
         animatorSet.setDuration(300);
         animatorSet.setInterpolator(floatingInterpolator);
