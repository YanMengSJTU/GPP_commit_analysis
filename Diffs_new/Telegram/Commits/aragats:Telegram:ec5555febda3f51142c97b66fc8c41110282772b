diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index ce4f4604a..8ef63c39b 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -18,6 +18,7 @@
 import com.github.davidmoten.rtree.geometry.Geometry;
 
 import org.telegram.android.location.LocationManagerHelper;
+import org.telegram.utils.CollectionUtils;
 import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
@@ -37,7 +38,8 @@
 import ru.aragats.wgo.ApplicationLoader;
 import ru.aragats.wgo.comparator.PostDateComparator;
 import ru.aragats.wgo.comparator.PostDistanceComparator;
-import ru.aragats.wgo.converter.vk.VKPhotoResponseToPostListConverter;
+import ru.aragats.wgo.converter.vk.newsfeed.VKNewsFeedResponseToPostListConverter;
+import ru.aragats.wgo.converter.vk.photos.VKPhotoResponseToPostListConverter;
 import ru.aragats.wgo.dto.Coordinates;
 import ru.aragats.wgo.dto.FileUploadRequest;
 import ru.aragats.wgo.dto.Image;
@@ -47,7 +49,9 @@
 import ru.aragats.wgo.dto.PostResponse;
 import ru.aragats.wgo.dto.User;
 import ru.aragats.wgo.dto.Venue;
-import ru.aragats.wgo.dto.vk.VKPhotoResponse;
+import ru.aragats.wgo.dto.vk.newsfeed.NewsFeedResponse;
+import ru.aragats.wgo.dto.vk.newsfeed.VKNewsFeedResponse;
+import ru.aragats.wgo.dto.vk.photos.VKPhotoResponse;
 import ru.aragats.wgo.rest.manager.RestManager;
 import ru.aragats.wgo.rest.mock.PostServiceMock;
 import ru.aragats.wgo.rest.mock.UserServiceMock;
@@ -59,10 +63,12 @@
 public class PostsController implements NotificationCenter.NotificationCenterDelegate {
 
     private VKPhotoResponseToPostListConverter vkPhotoResponseConverter = new VKPhotoResponseToPostListConverter();
+    private VKNewsFeedResponseToPostListConverter vkNewsFeedResponseToPostListConverter = new VKNewsFeedResponseToPostListConverter();
     private Venue lastVenue;
 
     private List<Post> posts = new ArrayList<>();
     private int nextOffset;
+    private String nextFrom;
     public ConcurrentHashMap<String, Post> postsMap = new ConcurrentHashMap<>(100, 1.0f, 2);
 
     private boolean loadingPosts = false;
@@ -247,7 +253,7 @@ public void deletePost(final String did, int offset, final boolean onlyHistory)
     }
 
 
-    public void loadPosts(final String idOffset, final int offset, final int count, final boolean reload, final boolean offlineMode) {
+    public void loadPosts(final String idOffset, final String nextFromOffset, final int offset, final int count, final boolean reload, final boolean offlineMode) {
         if (loadingPosts || offlineMode && MediaController.getInstance().getRTree() == null) {
             return;
         }
@@ -273,12 +279,16 @@ public void loadPosts(final String idOffset, final int offset, final int count,
         postRequest.setIdOffset(idOffset);
         postRequest.setOffset(offset);
         postRequest.setDistance(Constants.RADIUS);
+        if (!StringUtils.isEmpty(nextFromOffset)) {
+            postRequest.setIdOffset(nextFromOffset);
+        }
         if (offlineMode) {
             nextOffset = 0;
             loadLocalPosts(postRequest, reload);
         } else {
 //            loadPostFromServer(postRequest, reload);
             loadVKPhotos(postRequest, reload);
+//            loadVKNewsFeed(postRequest, reload);
         }
 
 
@@ -364,6 +374,59 @@ public void onFailure(Call<PostResponse> call, Throwable t) {
     }
 
 
+    private void loadVKNewsFeed(final PostRequest postRequest, final boolean reload) {
+        loadingPosts = true;
+//        postRequest.setCount(postRequest.getCount() * 2);
+//        postRequest.setIdOffset();
+        final Call<VKNewsFeedResponse> call = RestManager.getInstance().findNearVKNewsFeed(postRequest, new Callback<VKNewsFeedResponse>() {
+            @Override
+            public void onResponse(Call<VKNewsFeedResponse> call, Response<VKNewsFeedResponse> response) {
+                removeCall(call);
+                //        after getting response.
+                VKNewsFeedResponse vkNewsFeedResponse = response.body();
+                List<Post> posts = vkNewsFeedResponseToPostListConverter.convert(vkNewsFeedResponse != null ?
+                        vkNewsFeedResponse.getResponse() : null);
+//                posts = filterVKPosts(posts);
+
+                PostResponse postResponse = new PostResponse();
+                postResponse.setPosts(posts);
+
+                if (postResponse.getPosts() == null) {
+                    postResponse.setPosts(new ArrayList<Post>());
+                }
+                if (vkNewsFeedResponse != null) {
+                    NewsFeedResponse newsFeedResponse = vkNewsFeedResponse.getResponse();
+                    if (newsFeedResponse != null) {
+                        String nextFrom = newsFeedResponse.getNextFrom();
+                        postResponse.setNextFrom(nextFrom);
+                    }
+                }
+
+                postResponse.setSource("VK");
+                nextFrom = postResponse.getNextFrom();
+                processLoadedPosts(postResponse, reload);
+            }
+
+            @Override
+            public void onFailure(Call<VKNewsFeedResponse> call, Throwable t) {
+//                call.request().url() GEt URL of request.
+                removeCall(call);
+                loadingPosts = false;
+                boolean withError = true;
+                if (t != null && t.getMessage().equals("Canceled")) {
+                    withError = false;
+                }
+                NotificationCenter.getInstance().postNotificationName(NotificationCenter.postRequestFinished, withError);
+            }
+        });
+        addCall(call);
+
+
+        // it works and it forces onFailure java.io.IOException: Canceled
+//        call.cancel(); //
+    }
+
+
     private void loadVKPhotos(final PostRequest postRequest, final boolean reload) {
         loadingPosts = true;
         postRequest.setCount(postRequest.getCount() * 2);
@@ -525,6 +588,18 @@ public int getOffset() {
         return posts.size();
     }
 
+    public String getOffsetId() {
+        String offset = null;
+        if (!CollectionUtils.isEmpty(posts)) {
+            offset = posts.get(posts.size() - 1).getId(); // TODO When empty list. java.lang.ArrayIndexOutOfBoundsException: length=12; index=-1
+        }
+        return offset;
+    }
+
+    public String getNextFrom() {
+        return nextFrom;
+    }
+
     public Post createPost(String dir, String photo, double latitude, double longitude, Date date, boolean local) {
         Post post = new Post();
         post.setLocal(local);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 0ab4d2557..2365a18cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -61,7 +61,6 @@
 
 import org.telegram.messenger.FileLog;
 
-import ru.aragats.wgo.dto.Coordinates;
 import ru.aragats.wgo.dto.Post;
 
 import org.telegram.messenger.TLRPC;
@@ -81,8 +80,6 @@
 import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
-import java.util.Arrays;
-
 //TODO delte it or reuse.
 
 //TODO refresh list https://www.bignerdranch.com/blog/implementing-swipe-to-refresh/
@@ -267,7 +264,7 @@ public boolean onFragmentCreate() {
         LocationManagerHelper.getInstance().runLocationListener();
 
         if (!offlineMode && !postsLoaded) {
-            PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, offlineMode);
+            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode);
             ContactsController.getInstance().checkInviteText();
             postsLoaded = true;
         }
@@ -469,7 +466,7 @@ public void onItemClick(int id) {
             public void onRefresh() {
                 // TODO temp test
 //                new RestTask().execute("param");
-                PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, offlineMode);
+                PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode);
 
 //                RestManager.getInstance().uploadTest(new PostRequest(), new Callback<PostResponse>() {
 //                    @Override
@@ -708,9 +705,11 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                 //TODO fix it. to often run load posts.
                 if (visibleItemCount > 0) {
                     if (layoutManager.findLastVisibleItemPosition() == PostsController.getInstance().getPosts().size() - 1 && !mIsScrollingUp && !PostsController.getInstance().getPosts().isEmpty()) {
-                        String offset = PostsController.getInstance().getPosts().get(PostsController.getInstance().getPosts().size() - 1).getId(); // TODO When empty list. java.lang.ArrayIndexOutOfBoundsException: length=12; index=-1
+                        String offset = PostsController.getInstance().getOffsetId();
+                        int nextOffset = PostsController.getInstance().getOffset();
+                        String nextFrom = PostsController.getInstance().getNextFrom();
 //                        startRefreshingProgressView();
-                        PostsController.getInstance().loadPosts(offset, PostsController.getInstance().getOffset(), Constants.POST_COUNT, false, offlineMode);
+                        PostsController.getInstance().loadPosts(offset, nextFrom, nextOffset, Constants.POST_COUNT, false, offlineMode);
                     }
                 }
 
@@ -890,7 +889,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         } else if (id == NotificationCenter.offlinePostsLoaded) {
 //            layoutManager.scrollToPosition(0);
 //            startRefreshingProgressView();
-            PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, offlineMode); // TODO why offlineMode is false /// aaa becaue different instances !!!
+            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode); // TODO why offlineMode is false /// aaa becaue different instances !!!
         } else if (id == NotificationCenter.switchToOfflineMode) {
             boolean force = false;
             if (!this.offlineMode) {
@@ -923,7 +922,7 @@ private void refreshPosts(boolean force) {
         if (PostsController.getInstance().getPosts().isEmpty() || force) {
 //            startRefreshingProgressView();
             showProgressView();
-            PostsController.getInstance().loadPosts(null, 0, Constants.POST_COUNT, true, offlineMode);
+            PostsController.getInstance().loadPosts(null, null, 0, Constants.POST_COUNT, true, offlineMode);
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
index d279167d2..976a9e982 100644
--- a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
+++ b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
@@ -67,6 +67,8 @@
 
     public static long PROGRESS_DIALOG_TIMEOUT = 500;
 
+    public static double VK_API_VERSION = 5.52;
+
 
     public static String LOCAL_POSTS_FILENAME = "rtree";
 
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java
new file mode 100644
index 000000000..1889f8c8d
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/GeoToVenueConverter.java
@@ -0,0 +1,49 @@
+package ru.aragats.wgo.converter.vk.newsfeed;
+
+import org.telegram.utils.Constants;
+import org.telegram.utils.StringUtils;
+
+import java.util.Arrays;
+
+import ru.aragats.wgo.converter.AbstractConverter;
+import ru.aragats.wgo.converter.BiAbstractConverter;
+import ru.aragats.wgo.dto.Coordinates;
+import ru.aragats.wgo.dto.Venue;
+import ru.aragats.wgo.dto.vk.newsfeed.Geo;
+import ru.aragats.wgo.dto.vk.newsfeed.Place;
+
+/**
+ * Created by aragats on 29/05/16.
+ */
+public class GeoToVenueConverter extends AbstractConverter<Geo, Venue> {
+    @Override
+    public Venue convertIntern(Geo source) {
+        String type = source.getType(); // point
+        if (StringUtils.isEmpty(type) || !type.equalsIgnoreCase(Constants.POINT)) {
+            return null;
+        }
+        Venue target = new Venue();
+        Coordinates coordinates = new Coordinates();
+        target.setCoordinates(coordinates);
+        target.setName("");
+        target.setAddress("");
+        coordinates.setType("Point");
+        String coordinatesStr = source.getCoordinates();
+        if (!StringUtils.isEmpty(coordinatesStr)) {
+            String[] coordinatesStrArr = coordinatesStr.trim().split("\\s+");
+            if (coordinatesStrArr.length == 2) {
+                coordinates.setCoordinates(Arrays.asList(Double.parseDouble(coordinatesStrArr[0]),
+                        Double.parseDouble(coordinatesStrArr[1])));
+            }
+            Place place = source.getPlace();
+            if (place != null && !StringUtils.isEmpty(place.getTitle())) {
+                target.setAddress(place.getTitle());
+            }
+            if (StringUtils.isEmpty(target.getAddress())) {
+                target.setName("VK");
+            }
+
+        }
+        return target;
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java
new file mode 100644
index 000000000..07eb39cf4
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/NewsFeedItemToPostConverter.java
@@ -0,0 +1,59 @@
+package ru.aragats.wgo.converter.vk.newsfeed;
+
+import org.telegram.utils.CollectionUtils;
+import org.telegram.utils.StringUtils;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import ru.aragats.wgo.converter.AbstractConverter;
+import ru.aragats.wgo.dto.Coordinates;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.Venue;
+import ru.aragats.wgo.dto.vk.newsfeed.Attachment;
+import ru.aragats.wgo.dto.vk.newsfeed.Geo;
+import ru.aragats.wgo.dto.vk.newsfeed.NewsFeedItem;
+import ru.aragats.wgo.dto.vk.newsfeed.NewsFeedResponse;
+import ru.aragats.wgo.dto.vk.newsfeed.Photo;
+import ru.aragats.wgo.dto.vk.newsfeed.Place;
+import ru.aragats.wgo.dto.vk.photos.PhotoItem;
+
+/**
+ * Created by aragats on 06/02/16.
+ */
+public class NewsFeedItemToPostConverter extends AbstractConverter<NewsFeedItem, Post> {
+    private GeoToVenueConverter geoToVenueConverter = new GeoToVenueConverter();
+    private PhotoToImagesConverter photoToImagesConverter = new PhotoToImagesConverter();
+
+
+    @Override
+    public Post convertIntern(NewsFeedItem source) {
+        List<Attachment> attachments = source.getAttachments();
+        if (CollectionUtils.isEmpty(attachments)) {
+            return null;
+        }
+
+        List<Image> images = photoToImagesConverter.convert(attachments.get(0).getPhoto());
+        if (CollectionUtils.isEmpty(images)) {
+            return null;
+        }
+        Venue venue = geoToVenueConverter.convert(source.getGeo());
+        if (venue == null || venue.getCoordinates() == null) {
+            return null;
+        }
+        Post result = new Post();
+        result.setId("" + source.getId());
+        result.setCreatedDate(((long) source.getDate() * 1000));
+        result.setCoordinates(venue.getCoordinates());
+        result.setText(source.getText());
+        result.setVenue(venue);
+        result.setImages(images);
+
+
+        return result;
+    }
+
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/PhotoToImagesConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/PhotoToImagesConverter.java
new file mode 100644
index 000000000..ad7230a65
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/PhotoToImagesConverter.java
@@ -0,0 +1,39 @@
+package ru.aragats.wgo.converter.vk.newsfeed;
+
+import org.telegram.utils.StringUtils;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import ru.aragats.wgo.converter.AbstractConverter;
+import ru.aragats.wgo.dto.Image;
+import ru.aragats.wgo.dto.vk.newsfeed.Attachment;
+import ru.aragats.wgo.dto.vk.newsfeed.Photo;
+
+/**
+ * Created by aragats on 29/05/16.
+ */
+public class PhotoToImagesConverter extends AbstractConverter<Photo, List<Image>> {
+    @Override
+    public List<Image> convertIntern(Photo source) {
+        if (StringUtils.isEmpty(source.getPhoto604())
+                || StringUtils.isEmpty(source.getPhoto807())
+                || StringUtils.isEmpty(source.getPhoto1280())) {
+            return null;
+        }
+
+        List<Image> target = new ArrayList<>();
+        Image previewImage = new Image();
+        previewImage.setUrl(source.getPhoto604());
+        previewImage.setWidth(source.getWidth());   // TODO wrong
+        previewImage.setHeight(source.getHeight()); // TODO wrong
+        target.add(previewImage);
+
+        Image image = new Image();
+        image.setUrl(source.getPhoto1280());
+        image.setWidth(source.getWidth());   // TODO wrong
+        image.setHeight(source.getHeight()); // TODO wrong
+        target.add(image);
+        return target;
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/VKNewsFeedResponseToPostListConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/VKNewsFeedResponseToPostListConverter.java
new file mode 100644
index 000000000..1ef8b456d
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/newsfeed/VKNewsFeedResponseToPostListConverter.java
@@ -0,0 +1,30 @@
+package ru.aragats.wgo.converter.vk.newsfeed;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import ru.aragats.wgo.converter.AbstractConverter;
+import ru.aragats.wgo.converter.vk.photos.PhotoItemToPostConverter;
+import ru.aragats.wgo.dto.Post;
+import ru.aragats.wgo.dto.vk.newsfeed.NewsFeedItem;
+import ru.aragats.wgo.dto.vk.newsfeed.NewsFeedResponse;
+import ru.aragats.wgo.dto.vk.photos.PhotoResponse;
+
+/**
+ * Created by aragats on 06/02/16.
+ */
+public class VKNewsFeedResponseToPostListConverter extends AbstractConverter<NewsFeedResponse, List<Post>> {
+
+    private NewsFeedItemToPostConverter newsFeedItemToPostConverter = new NewsFeedItemToPostConverter();
+
+    @Override
+    public List<Post> convertIntern(NewsFeedResponse source) {
+        List<Post> result = new ArrayList<>();
+        if (source.getCount() == 0) {
+            return result;
+        }
+        result.addAll(newsFeedItemToPostConverter.convert(source.getItems()));
+        return result;
+
+    }
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/PhotoItemToPostConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
similarity index 84%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/PhotoItemToPostConverter.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
index 9f5b04f73..34c02b1a1 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/PhotoItemToPostConverter.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/PhotoItemToPostConverter.java
@@ -1,4 +1,4 @@
-package ru.aragats.wgo.converter.vk;
+package ru.aragats.wgo.converter.vk.photos;
 
 import org.telegram.utils.StringUtils;
 
@@ -11,7 +11,7 @@
 import ru.aragats.wgo.dto.Image;
 import ru.aragats.wgo.dto.Post;
 import ru.aragats.wgo.dto.Venue;
-import ru.aragats.wgo.dto.vk.PhotoItem;
+import ru.aragats.wgo.dto.vk.photos.PhotoItem;
 
 /**
  * Created by aragats on 06/02/16.
@@ -40,15 +40,15 @@ public Post convertIntern(PhotoItem source) {
 
         List<Image> images = new ArrayList<>();
         Image previewImage = new Image();
-        previewImage.setHeight(source.getHeight());
-        previewImage.setWidth(source.getWidth());
+        previewImage.setHeight(source.getHeight()); // TODO wrong
+        previewImage.setWidth(source.getWidth()); // TODO wrong
         previewImage.setUrl(source.getPhoto604());
         images.add(previewImage);
 
 
         Image image = new Image();
-        image.setHeight(source.getHeight());
-        image.setWidth(source.getWidth());
+        image.setHeight(source.getHeight()); // TODO wrong
+        image.setWidth(source.getWidth()); // TODO wrong
         image.setUrl(source.getPhoto1280());
         images.add(image);
 
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/VKPhotoResponseToPostListConverter.java b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/VKPhotoResponseToPostListConverter.java
similarity index 81%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/VKPhotoResponseToPostListConverter.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/VKPhotoResponseToPostListConverter.java
index 92e7b75df..0cce2d9c9 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/VKPhotoResponseToPostListConverter.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/converter/vk/photos/VKPhotoResponseToPostListConverter.java
@@ -1,12 +1,12 @@
-package ru.aragats.wgo.converter.vk;
+package ru.aragats.wgo.converter.vk.photos;
 
 import java.util.ArrayList;
 import java.util.List;
 
 import ru.aragats.wgo.converter.AbstractConverter;
 import ru.aragats.wgo.dto.Post;
-import ru.aragats.wgo.dto.vk.PhotoItem;
-import ru.aragats.wgo.dto.vk.PhotoResponse;
+import ru.aragats.wgo.dto.vk.newsfeed.NewsFeedResponse;
+import ru.aragats.wgo.dto.vk.photos.PhotoResponse;
 
 /**
  * Created by aragats on 06/02/16.
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java
index 8fc08bedb..ea371ab02 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/PostResponse.java
@@ -12,6 +12,7 @@
     private String error;
     //TODO make it enum !!
     private String source;
+    private String nextFrom;
 
 
     public List<Post> getPosts() {
@@ -37,4 +38,12 @@ public String getSource() {
     public void setSource(String source) {
         this.source = source;
     }
+
+    public String getNextFrom() {
+        return nextFrom;
+    }
+
+    public void setNextFrom(String nextFrom) {
+        this.nextFrom = nextFrom;
+    }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Attachment.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Attachment.java
new file mode 100755
index 000000000..7447f460d
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Attachment.java
@@ -0,0 +1,52 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Attachment {
+
+    @SerializedName("type")
+    @Expose
+    private String type;
+    @SerializedName("photo")
+    @Expose
+    private Photo photo;
+
+    /**
+     * 
+     * @return
+     *     The type
+     */
+    public String getType() {
+        return type;
+    }
+
+    /**
+     * 
+     * @param type
+     *     The type
+     */
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo
+     */
+    public Photo getPhoto() {
+        return photo;
+    }
+
+    /**
+     * 
+     * @param photo
+     *     The photo
+     */
+    public void setPhoto(Photo photo) {
+        this.photo = photo;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Comments.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Comments.java
new file mode 100755
index 000000000..a5f7ca1c1
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Comments.java
@@ -0,0 +1,53 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+
+public class Comments {
+
+    @SerializedName("count")
+    @Expose
+    private int count;
+    @SerializedName("can_post")
+    @Expose
+    private int canPost;
+
+    /**
+     * 
+     * @return
+     *     The count
+     */
+    public int getCount() {
+        return count;
+    }
+
+    /**
+     * 
+     * @param count
+     *     The count
+     */
+    public void setCount(int count) {
+        this.count = count;
+    }
+
+    /**
+     * 
+     * @return
+     *     The canPost
+     */
+    public int getCanPost() {
+        return canPost;
+    }
+
+    /**
+     * 
+     * @param canPost
+     *     The can_post
+     */
+    public void setCanPost(int canPost) {
+        this.canPost = canPost;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Geo.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Geo.java
new file mode 100755
index 000000000..17d170b2e
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Geo.java
@@ -0,0 +1,73 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Geo {
+
+    @SerializedName("type")
+    @Expose
+    private String type;
+    @SerializedName("coordinates")
+    @Expose
+    private String coordinates;
+    @SerializedName("place")
+    @Expose
+    private Place place;
+
+    /**
+     * 
+     * @return
+     *     The type
+     */
+    public String getType() {
+        return type;
+    }
+
+    /**
+     * 
+     * @param type
+     *     The type
+     */
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    /**
+     * 
+     * @return
+     *     The coordinates
+     */
+    public String getCoordinates() {
+        return coordinates;
+    }
+
+    /**
+     * 
+     * @param coordinates
+     *     The coordinates
+     */
+    public void setCoordinates(String coordinates) {
+        this.coordinates = coordinates;
+    }
+
+    /**
+     * 
+     * @return
+     *     The place
+     */
+    public Place getPlace() {
+        return place;
+    }
+
+    /**
+     * 
+     * @param place
+     *     The place
+     */
+    public void setPlace(Place place) {
+        this.place = place;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Likes.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Likes.java
new file mode 100755
index 000000000..dee43d21c
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Likes.java
@@ -0,0 +1,94 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Likes {
+
+    @SerializedName("count")
+    @Expose
+    private int count;
+    @SerializedName("user_likes")
+    @Expose
+    private int userLikes;
+    @SerializedName("can_like")
+    @Expose
+    private int canLike;
+    @SerializedName("can_publish")
+    @Expose
+    private int canPublish;
+
+    /**
+     * 
+     * @return
+     *     The count
+     */
+    public int getCount() {
+        return count;
+    }
+
+    /**
+     * 
+     * @param count
+     *     The count
+     */
+    public void setCount(int count) {
+        this.count = count;
+    }
+
+    /**
+     * 
+     * @return
+     *     The userLikes
+     */
+    public int getUserLikes() {
+        return userLikes;
+    }
+
+    /**
+     * 
+     * @param userLikes
+     *     The user_likes
+     */
+    public void setUserLikes(int userLikes) {
+        this.userLikes = userLikes;
+    }
+
+    /**
+     * 
+     * @return
+     *     The canLike
+     */
+    public int getCanLike() {
+        return canLike;
+    }
+
+    /**
+     * 
+     * @param canLike
+     *     The can_like
+     */
+    public void setCanLike(int canLike) {
+        this.canLike = canLike;
+    }
+
+    /**
+     * 
+     * @return
+     *     The canPublish
+     */
+    public int getCanPublish() {
+        return canPublish;
+    }
+
+    /**
+     * 
+     * @param canPublish
+     *     The can_publish
+     */
+    public void setCanPublish(int canPublish) {
+        this.canPublish = canPublish;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedItem.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedItem.java
new file mode 100755
index 000000000..5dc12102f
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedItem.java
@@ -0,0 +1,264 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import java.util.ArrayList;
+import java.util.List;
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class NewsFeedItem {
+
+    @SerializedName("id")
+    @Expose
+    private int id;
+    @SerializedName("date")
+    @Expose
+    private int date;
+    @SerializedName("owner_id")
+    @Expose
+    private int ownerId;
+    @SerializedName("from_id")
+    @Expose
+    private int fromId;
+    @SerializedName("post_type")
+    @Expose
+    private String postType;
+    @SerializedName("text")
+    @Expose
+    private String text;
+    @SerializedName("attachments")
+    @Expose
+    private List<Attachment> attachments = new ArrayList<Attachment>();
+    @SerializedName("geo")
+    @Expose
+    private Geo geo;
+    @SerializedName("post_source")
+    @Expose
+    private PostSource postSource;
+    @SerializedName("comments")
+    @Expose
+    private Comments comments;
+    @SerializedName("likes")
+    @Expose
+    private Likes likes;
+    @SerializedName("reposts")
+    @Expose
+    private Reposts reposts;
+
+    /**
+     * 
+     * @return
+     *     The id
+     */
+    public int getId() {
+        return id;
+    }
+
+    /**
+     * 
+     * @param id
+     *     The id
+     */
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    /**
+     * 
+     * @return
+     *     The date
+     */
+    public int getDate() {
+        return date;
+    }
+
+    /**
+     * 
+     * @param date
+     *     The date
+     */
+    public void setDate(int date) {
+        this.date = date;
+    }
+
+    /**
+     * 
+     * @return
+     *     The ownerId
+     */
+    public int getOwnerId() {
+        return ownerId;
+    }
+
+    /**
+     * 
+     * @param ownerId
+     *     The owner_id
+     */
+    public void setOwnerId(int ownerId) {
+        this.ownerId = ownerId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The fromId
+     */
+    public int getFromId() {
+        return fromId;
+    }
+
+    /**
+     * 
+     * @param fromId
+     *     The from_id
+     */
+    public void setFromId(int fromId) {
+        this.fromId = fromId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The postType
+     */
+    public String getPostType() {
+        return postType;
+    }
+
+    /**
+     * 
+     * @param postType
+     *     The post_type
+     */
+    public void setPostType(String postType) {
+        this.postType = postType;
+    }
+
+    /**
+     * 
+     * @return
+     *     The text
+     */
+    public String getText() {
+        return text;
+    }
+
+    /**
+     * 
+     * @param text
+     *     The text
+     */
+    public void setText(String text) {
+        this.text = text;
+    }
+
+    /**
+     * 
+     * @return
+     *     The attachments
+     */
+    public List<Attachment> getAttachments() {
+        return attachments;
+    }
+
+    /**
+     * 
+     * @param attachments
+     *     The attachments
+     */
+    public void setAttachments(List<Attachment> attachments) {
+        this.attachments = attachments;
+    }
+
+    /**
+     * 
+     * @return
+     *     The geo
+     */
+    public Geo getGeo() {
+        return geo;
+    }
+
+    /**
+     * 
+     * @param geo
+     *     The geo
+     */
+    public void setGeo(Geo geo) {
+        this.geo = geo;
+    }
+
+    /**
+     * 
+     * @return
+     *     The postSource
+     */
+    public PostSource getPostSource() {
+        return postSource;
+    }
+
+    /**
+     * 
+     * @param postSource
+     *     The post_source
+     */
+    public void setPostSource(PostSource postSource) {
+        this.postSource = postSource;
+    }
+
+    /**
+     * 
+     * @return
+     *     The comments
+     */
+    public Comments getComments() {
+        return comments;
+    }
+
+    /**
+     * 
+     * @param comments
+     *     The comments
+     */
+    public void setComments(Comments comments) {
+        this.comments = comments;
+    }
+
+    /**
+     * 
+     * @return
+     *     The likes
+     */
+    public Likes getLikes() {
+        return likes;
+    }
+
+    /**
+     * 
+     * @param likes
+     *     The likes
+     */
+    public void setLikes(Likes likes) {
+        this.likes = likes;
+    }
+
+    /**
+     * 
+     * @return
+     *     The reposts
+     */
+    public Reposts getReposts() {
+        return reposts;
+    }
+
+    /**
+     * 
+     * @param reposts
+     *     The reposts
+     */
+    public void setReposts(Reposts reposts) {
+        this.reposts = reposts;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java
new file mode 100755
index 000000000..ed13d633f
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/NewsFeedResponse.java
@@ -0,0 +1,97 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class NewsFeedResponse {
+
+    @SerializedName("items")
+    @Expose
+    private List<NewsFeedItem> items = new ArrayList<NewsFeedItem>();
+    @SerializedName("count")
+    @Expose
+    private int count;
+    @SerializedName("total_count")
+    @Expose
+    private int totalCount;
+    @SerializedName("next_from")
+    @Expose
+    private String nextFrom;
+
+    /**
+     * 
+     * @return
+     *     The items
+     */
+    public List<NewsFeedItem> getItems() {
+        return items;
+    }
+
+    /**
+     * 
+     * @param items
+     *     The items
+     */
+    public void setItems(List<NewsFeedItem> items) {
+        this.items = items;
+    }
+
+    /**
+     * 
+     * @return
+     *     The count
+     */
+    public int getCount() {
+        return count;
+    }
+
+    /**
+     * 
+     * @param count
+     *     The count
+     */
+    public void setCount(int count) {
+        this.count = count;
+    }
+
+    /**
+     * 
+     * @return
+     *     The totalCount
+     */
+    public int getTotalCount() {
+        return totalCount;
+    }
+
+    /**
+     * 
+     * @param totalCount
+     *     The total_count
+     */
+    public void setTotalCount(int totalCount) {
+        this.totalCount = totalCount;
+    }
+
+    /**
+     * 
+     * @return
+     *     The nextFrom
+     */
+    public String getNextFrom() {
+        return nextFrom;
+    }
+
+    /**
+     * 
+     * @param nextFrom
+     *     The next_from
+     */
+    public void setNextFrom(String nextFrom) {
+        this.nextFrom = nextFrom;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Photo.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Photo.java
new file mode 100755
index 000000000..6dfd0d072
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Photo.java
@@ -0,0 +1,304 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Photo {
+
+    @SerializedName("id")
+    @Expose
+    private int id;
+    @SerializedName("album_id")
+    @Expose
+    private int albumId;
+    @SerializedName("owner_id")
+    @Expose
+    private int ownerId;
+    @SerializedName("photo_75")
+    @Expose
+    private String photo75;
+    @SerializedName("photo_130")
+    @Expose
+    private String photo130;
+    @SerializedName("photo_604")
+    @Expose
+    private String photo604;
+    @SerializedName("photo_807")
+    @Expose
+    private String photo807;
+    @SerializedName("photo_1280")
+    @Expose
+    private String photo1280;
+    @SerializedName("width")
+    @Expose
+    private int width;
+    @SerializedName("height")
+    @Expose
+    private int height;
+    @SerializedName("text")
+    @Expose
+    private String text;
+    @SerializedName("date")
+    @Expose
+    private int date;
+    @SerializedName("post_id")
+    @Expose
+    private int postId;
+    @SerializedName("access_key")
+    @Expose
+    private String accessKey;
+
+    /**
+     * 
+     * @return
+     *     The id
+     */
+    public int getId() {
+        return id;
+    }
+
+    /**
+     * 
+     * @param id
+     *     The id
+     */
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    /**
+     * 
+     * @return
+     *     The albumId
+     */
+    public int getAlbumId() {
+        return albumId;
+    }
+
+    /**
+     * 
+     * @param albumId
+     *     The album_id
+     */
+    public void setAlbumId(int albumId) {
+        this.albumId = albumId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The ownerId
+     */
+    public int getOwnerId() {
+        return ownerId;
+    }
+
+    /**
+     * 
+     * @param ownerId
+     *     The owner_id
+     */
+    public void setOwnerId(int ownerId) {
+        this.ownerId = ownerId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo75
+     */
+    public String getPhoto75() {
+        return photo75;
+    }
+
+    /**
+     * 
+     * @param photo75
+     *     The photo_75
+     */
+    public void setPhoto75(String photo75) {
+        this.photo75 = photo75;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo130
+     */
+    public String getPhoto130() {
+        return photo130;
+    }
+
+    /**
+     * 
+     * @param photo130
+     *     The photo_130
+     */
+    public void setPhoto130(String photo130) {
+        this.photo130 = photo130;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo604
+     */
+    public String getPhoto604() {
+        return photo604;
+    }
+
+    /**
+     * 
+     * @param photo604
+     *     The photo_604
+     */
+    public void setPhoto604(String photo604) {
+        this.photo604 = photo604;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo807
+     */
+    public String getPhoto807() {
+        return photo807;
+    }
+
+    /**
+     * 
+     * @param photo807
+     *     The photo_807
+     */
+    public void setPhoto807(String photo807) {
+        this.photo807 = photo807;
+    }
+
+    /**
+     * 
+     * @return
+     *     The photo1280
+     */
+    public String getPhoto1280() {
+        return photo1280;
+    }
+
+    /**
+     * 
+     * @param photo1280
+     *     The photo_1280
+     */
+    public void setPhoto1280(String photo1280) {
+        this.photo1280 = photo1280;
+    }
+
+    /**
+     * 
+     * @return
+     *     The width
+     */
+    public int getWidth() {
+        return width;
+    }
+
+    /**
+     * 
+     * @param width
+     *     The width
+     */
+    public void setWidth(int width) {
+        this.width = width;
+    }
+
+    /**
+     * 
+     * @return
+     *     The height
+     */
+    public int getHeight() {
+        return height;
+    }
+
+    /**
+     * 
+     * @param height
+     *     The height
+     */
+    public void setHeight(int height) {
+        this.height = height;
+    }
+
+    /**
+     * 
+     * @return
+     *     The text
+     */
+    public String getText() {
+        return text;
+    }
+
+    /**
+     * 
+     * @param text
+     *     The text
+     */
+    public void setText(String text) {
+        this.text = text;
+    }
+
+    /**
+     * 
+     * @return
+     *     The date
+     */
+    public int getDate() {
+        return date;
+    }
+
+    /**
+     * 
+     * @param date
+     *     The date
+     */
+    public void setDate(int date) {
+        this.date = date;
+    }
+
+    /**
+     * 
+     * @return
+     *     The postId
+     */
+    public int getPostId() {
+        return postId;
+    }
+
+    /**
+     * 
+     * @param postId
+     *     The post_id
+     */
+    public void setPostId(int postId) {
+        this.postId = postId;
+    }
+
+    /**
+     * 
+     * @return
+     *     The accessKey
+     */
+    public String getAccessKey() {
+        return accessKey;
+    }
+
+    /**
+     * 
+     * @param accessKey
+     *     The access_key
+     */
+    public void setAccessKey(String accessKey) {
+        this.accessKey = accessKey;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Place.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Place.java
new file mode 100755
index 000000000..fe7c327a6
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Place.java
@@ -0,0 +1,178 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Place {
+
+    @SerializedName("id")
+    @Expose
+    private int id;
+    @SerializedName("title")
+    @Expose
+    private String title;
+    @SerializedName("latitude")
+    @Expose
+    private float latitude;
+    @SerializedName("longitude")
+    @Expose
+    private float longitude;
+    @SerializedName("created")
+    @Expose
+    private int created;
+    @SerializedName("icon")
+    @Expose
+    private String icon;
+    @SerializedName("country")
+    @Expose
+    private String country;
+    @SerializedName("city")
+    @Expose
+    private String city;
+
+    /**
+     * 
+     * @return
+     *     The id
+     */
+    public int getId() {
+        return id;
+    }
+
+    /**
+     * 
+     * @param id
+     *     The id
+     */
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    /**
+     * 
+     * @return
+     *     The title
+     */
+    public String getTitle() {
+        return title;
+    }
+
+    /**
+     * 
+     * @param title
+     *     The title
+     */
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    /**
+     * 
+     * @return
+     *     The latitude
+     */
+    public float getLatitude() {
+        return latitude;
+    }
+
+    /**
+     * 
+     * @param latitude
+     *     The latitude
+     */
+    public void setLatitude(float latitude) {
+        this.latitude = latitude;
+    }
+
+    /**
+     * 
+     * @return
+     *     The longitude
+     */
+    public float getLongitude() {
+        return longitude;
+    }
+
+    /**
+     * 
+     * @param longitude
+     *     The longitude
+     */
+    public void setLongitude(float longitude) {
+        this.longitude = longitude;
+    }
+
+    /**
+     * 
+     * @return
+     *     The created
+     */
+    public int getCreated() {
+        return created;
+    }
+
+    /**
+     * 
+     * @param created
+     *     The created
+     */
+    public void setCreated(int created) {
+        this.created = created;
+    }
+
+    /**
+     * 
+     * @return
+     *     The icon
+     */
+    public String getIcon() {
+        return icon;
+    }
+
+    /**
+     * 
+     * @param icon
+     *     The icon
+     */
+    public void setIcon(String icon) {
+        this.icon = icon;
+    }
+
+    /**
+     * 
+     * @return
+     *     The country
+     */
+    public String getCountry() {
+        return country;
+    }
+
+    /**
+     * 
+     * @param country
+     *     The country
+     */
+    public void setCountry(String country) {
+        this.country = country;
+    }
+
+    /**
+     * 
+     * @return
+     *     The city
+     */
+    public String getCity() {
+        return city;
+    }
+
+    /**
+     * 
+     * @param city
+     *     The city
+     */
+    public void setCity(String city) {
+        this.city = city;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/PostSource.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/PostSource.java
new file mode 100755
index 000000000..68d8abb1e
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/PostSource.java
@@ -0,0 +1,73 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class PostSource {
+
+    @SerializedName("type")
+    @Expose
+    private String type;
+    @SerializedName("platform")
+    @Expose
+    private String platform;
+    @SerializedName("url")
+    @Expose
+    private String url;
+
+    /**
+     * 
+     * @return
+     *     The type
+     */
+    public String getType() {
+        return type;
+    }
+
+    /**
+     * 
+     * @param type
+     *     The type
+     */
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    /**
+     * 
+     * @return
+     *     The platform
+     */
+    public String getPlatform() {
+        return platform;
+    }
+
+    /**
+     * 
+     * @param platform
+     *     The platform
+     */
+    public void setPlatform(String platform) {
+        this.platform = platform;
+    }
+
+    /**
+     * 
+     * @return
+     *     The url
+     */
+    public String getUrl() {
+        return url;
+    }
+
+    /**
+     * 
+     * @param url
+     *     The url
+     */
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Reposts.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Reposts.java
new file mode 100755
index 000000000..5e4bdf746
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/Reposts.java
@@ -0,0 +1,52 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Reposts {
+
+    @SerializedName("count")
+    @Expose
+    private int count;
+    @SerializedName("user_reposted")
+    @Expose
+    private int userReposted;
+
+    /**
+     * 
+     * @return
+     *     The count
+     */
+    public int getCount() {
+        return count;
+    }
+
+    /**
+     * 
+     * @param count
+     *     The count
+     */
+    public void setCount(int count) {
+        this.count = count;
+    }
+
+    /**
+     * 
+     * @return
+     *     The userReposted
+     */
+    public int getUserReposted() {
+        return userReposted;
+    }
+
+    /**
+     * 
+     * @param userReposted
+     *     The user_reposted
+     */
+    public void setUserReposted(int userReposted) {
+        this.userReposted = userReposted;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/VKNewsFeedResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/VKNewsFeedResponse.java
new file mode 100755
index 000000000..6eede493f
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/newsfeed/VKNewsFeedResponse.java
@@ -0,0 +1,31 @@
+
+package ru.aragats.wgo.dto.vk.newsfeed;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class VKNewsFeedResponse {
+
+    @SerializedName("response")
+    @Expose
+    private NewsFeedResponse response;
+
+    /**
+     * 
+     * @return
+     *     The response
+     */
+    public NewsFeedResponse getResponse() {
+        return response;
+    }
+
+    /**
+     * 
+     * @param response
+     *     The response
+     */
+    public void setResponse(NewsFeedResponse response) {
+        this.response = response;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoItem.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/PhotoItem.java
similarity index 99%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoItem.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/PhotoItem.java
index 07da5241b..45532dab2 100755
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoItem.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/PhotoItem.java
@@ -1,5 +1,5 @@
 
-package ru.aragats.wgo.dto.vk;
+package ru.aragats.wgo.dto.vk.photos;
 
 import com.google.gson.annotations.Expose;
 import com.google.gson.annotations.SerializedName;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/PhotoResponse.java
similarity index 95%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoResponse.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/PhotoResponse.java
index 4316d59f7..eadf4bc24 100755
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/PhotoResponse.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/PhotoResponse.java
@@ -1,5 +1,5 @@
 
-package ru.aragats.wgo.dto.vk;
+package ru.aragats.wgo.dto.vk.photos;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/VKPhotoResponse.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/VKPhotoResponse.java
similarity index 93%
rename from TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/VKPhotoResponse.java
rename to TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/VKPhotoResponse.java
index 31481529b..de3f879f7 100755
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/VKPhotoResponse.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/vk/photos/VKPhotoResponse.java
@@ -1,5 +1,5 @@
 
-package ru.aragats.wgo.dto.vk;
+package ru.aragats.wgo.dto.vk.photos;
 
 import com.google.gson.annotations.Expose;
 import com.google.gson.annotations.SerializedName;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/CallQueue.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/CallQueue.java
new file mode 100644
index 000000000..fe2afa2db
--- /dev/null
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/CallQueue.java
@@ -0,0 +1,7 @@
+package ru.aragats.wgo.rest;
+
+/**
+ * Created by aragats on 21/04/16.
+ */
+public class CallQueue {
+}
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
index 6383bc2be..f96a86bae 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
@@ -1,5 +1,8 @@
 package ru.aragats.wgo.rest.manager;
 
+import org.telegram.utils.Constants;
+import org.telegram.utils.StringUtils;
+
 import java.io.File;
 import java.util.List;
 
@@ -15,7 +18,8 @@
 import ru.aragats.wgo.dto.PostRequest;
 import ru.aragats.wgo.dto.PostResponse;
 import ru.aragats.wgo.dto.VenuePostsRequest;
-import ru.aragats.wgo.dto.vk.VKPhotoResponse;
+import ru.aragats.wgo.dto.vk.newsfeed.VKNewsFeedResponse;
+import ru.aragats.wgo.dto.vk.photos.VKPhotoResponse;
 import ru.aragats.wgo.rest.client.RestClient;
 import ru.aragats.wgo.rest.client.VKRestClient;
 
@@ -171,6 +175,21 @@ public void addTest(PostRequest request, Callback<PostResponse> callback) {
 
     private Call<VKPhotoResponse> findNearVKPhotos(PostRequest request) {
         return vkRestClient.getRestService().findNearPhotos(request.getLongitude(), request.getLatitude(),
-                request.getDistance(), request.getOffset(), request.getCount(), 5.44);
+                request.getDistance(), request.getOffset(), request.getCount(), Constants.VK_API_VERSION);
+    }
+
+
+    public Call<VKNewsFeedResponse> findNearVKNewsFeed(PostRequest request, Callback<VKNewsFeedResponse> callback) {
+        Call<VKNewsFeedResponse> call = findNearVKPNewsFeed(request);
+        call.enqueue(callback);
+        return call;
+    }
+
+    private Call<VKNewsFeedResponse> findNearVKPNewsFeed(PostRequest request) {
+        if (StringUtils.isEmpty(request.getIdOffset())) {
+            return vkRestClient.getRestService().findNearNewsFeedWithoutStartFrom(" ", request.getLongitude(), request.getLatitude(), request.getCount(), Constants.VK_API_VERSION);
+        } else {
+            return vkRestClient.getRestService().findNearNewsFeed(" ", request.getLongitude(), request.getLatitude(), request.getIdOffset(), request.getCount(), Constants.VK_API_VERSION);
+        }
     }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
index f93e850bd..c1b2c3a10 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
@@ -3,7 +3,8 @@
 import retrofit2.Call;
 import retrofit2.http.GET;
 import retrofit2.http.Query;
-import ru.aragats.wgo.dto.vk.VKPhotoResponse;
+import ru.aragats.wgo.dto.vk.newsfeed.VKNewsFeedResponse;
+import ru.aragats.wgo.dto.vk.photos.VKPhotoResponse;
 
 /**
  * Created by aragats on 05/12/15.
@@ -17,4 +18,16 @@
                                          @Query("v") double version);
 
 
+    @GET("/method/newsfeed.search")
+    Call<VKNewsFeedResponse> findNearNewsFeedWithoutStartFrom(@Query("q") String query,
+                                              @Query("longitude") double longitude, @Query("latitude") double latitude,
+                                              @Query("count") int count,
+                                              @Query("version") double version);
+
+    @GET("/method/newsfeed.search")
+    Call<VKNewsFeedResponse> findNearNewsFeed(@Query("q") String query, @Query("longitude") double longitude, @Query("latitude") double latitude,
+                                              @Query("start_from") String startFrom, @Query("count") int count,
+                                              @Query("version") double version);
+
+
 }
