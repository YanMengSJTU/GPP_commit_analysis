diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivityAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivityAdapter.java
index a8f5b8c52..41452766f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivityAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivityAdapter.java
@@ -121,7 +121,7 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
 
             if (ignoreUsers != null) {
                 if (ignoreUsers.containsKey(user.id)) {
-                    ((ChatOrUserCell)convertView).drawAlpha = 0.5f;
+                    ((ChatOrUserCell)convertView).drawAlpha = 0.25f;
                 } else {
                     ((ChatOrUserCell)convertView).drawAlpha = 1.0f;
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index bd810e4cf..5c548aab1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -197,6 +197,16 @@ public void onTextChanged(EditText editText) {
             searching = false;
             searchWas = false;
 
+            HashMap<Integer, TLRPC.User> mapUserToIgnore = new HashMap<Integer, TLRPC.User>();
+            for (TLRPC.TL_contact contact : ContactsController.getInstance().contacts) {
+                TLRPC.User user = MessagesController.getInstance().getUser(contact.user_id);
+                String name = ContactsController.formatName(user.first_name, user.last_name).toLowerCase();
+                if (name.startsWith("#")) {
+                    mapUserToIgnore.put(user.id, null);
+                }
+            }
+            setIgnoreUsers(mapUserToIgnore);
+
             fragmentView = inflater.inflate(R.layout.contacts_layout, container, false);
 
             emptyTextView = (TextView)fragmentView.findViewById(R.id.searchEmptyView);
