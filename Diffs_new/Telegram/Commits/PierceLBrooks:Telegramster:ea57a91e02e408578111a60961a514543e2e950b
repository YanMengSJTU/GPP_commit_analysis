diff --git a/Telegram/TMessagesProj/build.gradle b/Telegram/TMessagesProj/build.gradle
index 896e24883..f8c168e17 100644
--- a/Telegram/TMessagesProj/build.gradle
+++ b/Telegram/TMessagesProj/build.gradle
@@ -327,7 +327,7 @@ android {
             }
         }
 
-        manifestPlaceholders = [applicationClassName:"ApplicationLoader",androidAppLibName:"sfml-activity-d",sfmlAppLibName:"native-lib"]
+        manifestPlaceholders = [applicationClassName:"ApplicationLoader",androidAppLibName:"sfml-activity",sfmlAppLibName:"sfml_android"]
     }
 }
 
diff --git a/Telegram/TMessagesProj/proguard-rules.pro b/Telegram/TMessagesProj/proguard-rules.pro
index a11817c2c..6c0f66ab7 100644
--- a/Telegram/TMessagesProj/proguard-rules.pro
+++ b/Telegram/TMessagesProj/proguard-rules.pro
@@ -3,6 +3,7 @@
 -keepclassmembernames class * {
     @com.google.android.gms.common.annotation.KeepName *;
 }
+-keep class com.piercelbrooks.** { *; }
 -keep class org.telegramster.** { *; }
 #-keep class com.google.android.exoplayer2.** { *; }
 -keep class com.google.android.exoplayer2.ext.** { *; }
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/messenger/MediaController.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/messenger/MediaController.java
index 6b13c507d..f1690a91f 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/messenger/MediaController.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/messenger/MediaController.java
@@ -2759,7 +2759,7 @@ private void stopRecordingInternal(final int send) {
                         }
                         NotificationCenter.getInstance(recordingCurrentAccount).postNotificationName(NotificationCenter.audioDidSent, send == 2 ? audioToSend : null, send == 2 ? recordingAudioFileToSend.getAbsolutePath() : null);
                     } else {
-                        NotificationCenter.getInstance(recordingCurrentAccount).postNotificationName(NotificationCenter.audioRecordTooShort, false);
+                        NotificationCenter.getInstance(recordingCurrentAccount).postNotificationName(NotificationCenter.audioRecordTooShort, new Integer(1));
                         recordingAudioFileToSend.delete();
                     }
                 });
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java
index ff4f72d6d..b64cc446e 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/ChatActivity.java
@@ -3501,13 +3501,13 @@ public void onMessageSend(CharSequence message) {
             }
 
             @Override
-            public void onSwitchRecordMode(boolean video) {
-                showVoiceHint(false, video);
+            public void onSwitchRecordMode(int mode) {
+                showVoiceHint(false, mode);
             }
 
             @Override
             public void onPreAudioVideoRecord() {
-                showVoiceHint(true, false);
+                showVoiceHint(true, 0);
             }
 
             @Override
@@ -4654,7 +4654,7 @@ public void onAnimationCancel(Animator animation) {
         voiceHintAnimation.start();
     }
 
-    private void showVoiceHint(boolean hide, boolean video) {
+    private void showVoiceHint(boolean hide, int mode) {
         if (getParentActivity() == null || fragmentView == null || hide && voiceHintTextView == null) {
             return;
         }
@@ -4686,7 +4686,17 @@ private void showVoiceHint(boolean hide, boolean video) {
             return;
         }
 
-        voiceHintTextView.setText(video ? LocaleController.getString("HoldToVideo", R.string.HoldToVideo) : LocaleController.getString("HoldToAudio", R.string.HoldToAudio));
+        switch (mode) {
+            case 2:
+                voiceHintTextView.setText(getParentActivity().getResources().getString(R.string.HoldToVideo));
+                break;
+            case 0:
+                voiceHintTextView.setText(getParentActivity().getResources().getString(R.string.HoldToDraw));
+                break;
+            case 1:
+                voiceHintTextView.setText(getParentActivity().getResources().getString(R.string.HoldToAudio));
+                break;
+        }
 
         if (voiceHintHideRunnable != null) {
             if (voiceHintAnimation != null) {
@@ -9575,7 +9585,7 @@ public void didReceivedNotification(int id, int account, final Object... args) {
                 }
             }
         } else if (id == NotificationCenter.audioRecordTooShort) {
-            showVoiceHint(false, (Boolean) args[0]);
+            showVoiceHint(false, (Integer) args[0]);
         } else if (id == NotificationCenter.videoLoadingStateChanged) {
             if (chatListView != null) {
                 String fileName = (String) args[0];
@@ -9780,7 +9790,7 @@ public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
                 String key = isChannel ? "needShowRoundHintChannel" : "needShowRoundHint";
                 if (preferences.getBoolean(key, true)) {
                     if (Utilities.random.nextFloat() < 0.2f) {
-                        showVoiceHint(false, chatActivityEnterView.isInVideoMode());
+                        showVoiceHint(false, chatActivityEnterView.isInVideoMode() ? 0 : 1);
                         preferences.edit().putBoolean(key, false).commit();
                     }
                 }
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java
index 419284697..31a790c58 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/ChatActivityEnterView.java
@@ -16,6 +16,7 @@
 import android.app.Activity;
 import android.content.ClipDescription;
 import android.content.Context;
+import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.graphics.Canvas;
@@ -83,6 +84,7 @@
 import org.telegramster.ui.ActionBar.Theme;
 import org.telegramster.ui.ChatActivity;
 import org.telegramster.ui.DialogsActivity;
+import org.telegramster.ui.DoodleActivity;
 import org.telegramster.ui.GroupStickersActivity;
 import org.telegramster.ui.LaunchActivity;
 import org.telegramster.ui.StickersActivity;
@@ -107,7 +109,7 @@
         void didPressedAttachButton();
         void needStartRecordVideo(int state);
         void needChangeVideoPreviewState(int state, float seekProgress);
-        void onSwitchRecordMode(boolean video);
+        void onSwitchRecordMode(int mode);
         void onPreAudioVideoRecord();
         void needStartRecordAudio(int state);
         void needShowMediaBanHint();
@@ -182,6 +184,7 @@ protected void onDraw(Canvas canvas) {
     private AnimatorSet audioVideoButtonAnimation;
     private ImageView audioSendButton;
     private ImageView videoSendButton;
+    private ImageView drawSendButton;
     private FrameLayout recordPanel;
     private FrameLayout recordedAudioPanel;
     private VideoTimelineView videoTimelineView;
@@ -357,7 +360,7 @@ public void set(View object, Integer value) {
         @Override
         public void run() {
             if (delegate != null) {
-                delegate.needStartRecordVideo(0);
+                delegateNeedStartRecordVideo(delegate, 0);
             }
         }
     };
@@ -377,6 +380,10 @@ public void run() {
             recordSendText.setAlpha(0.0f);
             slideText.setAlpha(1.0f);
             slideText.setTranslationY(0);
+            if (drawSendButton != null && drawSendButton.getTag() != null) {
+                parentActivity.startActivity(new Intent(parentActivity, DoodleActivity.class));
+                return;
+            }
             if (videoSendButton != null && videoSendButton.getTag() != null) {
                 if (Build.VERSION.SDK_INT >= 23) {
                     boolean hasAudio = parentActivity.checkSelfPermission(Manifest.permission.RECORD_AUDIO) == PackageManager.PERMISSION_GRANTED;
@@ -407,7 +414,7 @@ public void run() {
                         return;
                     }
                 }
-                delegate.needStartRecordAudio(1);
+                delegateNeedStartRecordAudio(delegate, 1);
                 startedDraggingX = -1;
                 MediaController.getInstance().startRecording(currentAccount, dialog_id, replyingMessageObject);
                 updateRecordIntefrace();
@@ -578,10 +585,10 @@ public boolean onTouchEvent(MotionEvent event) {
                     if (event.getAction() == MotionEvent.ACTION_UP) {
                         if (lockBackgroundDrawable.getBounds().contains(x, y)) {
                             if (videoSendButton != null && videoSendButton.getTag() != null) {
-                                delegate.needStartRecordVideo(3);
+                                delegateNeedStartRecordVideo(delegate, 3);
                             } else {
                                 MediaController.getInstance().stopRecording(2);
-                                delegate.needStartRecordAudio(0);
+                                delegateNeedStartRecordAudio(delegate, 0);
                             }
                         }
                     }
@@ -1065,7 +1072,7 @@ public void onClick(View v) {
         recordDeleteImageView.setOnClickListener(v -> {
             if (videoToSendMessageObject != null) {
                 CameraController.getInstance().cancelOnInitRunnable(onFinishInitCameraRunnable);
-                delegate.needStartRecordVideo(2);
+                delegateNeedStartRecordVideo(delegate, 2);
             } else {
                 MessageObject playing = MediaController.getInstance().getPlayingMessageObject();
                 if (playing != null && playing == audioToSendMessageObject) {
@@ -1177,9 +1184,9 @@ public void didStopDragging() {
         recordSendText.setOnClickListener(v -> {
             if (hasRecordVideo && videoSendButton.getTag() != null) {
                 CameraController.getInstance().cancelOnInitRunnable(onFinishInitCameraRunnable);
-                delegate.needStartRecordVideo(2);
+                delegateNeedStartRecordVideo(delegate, 2);
             } else {
-                delegate.needStartRecordAudio(0);
+                delegateNeedStartRecordAudio(delegate, 0);
                 MediaController.getInstance().stopRecording(0);
             }
             recordingAudioVideo = false;
@@ -1214,9 +1221,9 @@ public void didStopDragging() {
                     if (!hasRecordVideo || calledRecordRunnable) {
                         startedDraggingX = -1;
                         if (hasRecordVideo && videoSendButton.getTag() != null) {
-                            delegate.needStartRecordVideo(1);
+                            delegateNeedStartRecordVideo(delegate, 1);
                         } else {
-                            delegate.needStartRecordAudio(0);
+                            delegateNeedStartRecordAudio(delegate, 0);
                             MediaController.getInstance().stopRecording(1);
                         }
                         recordingAudioVideo = false;
@@ -1244,16 +1251,16 @@ public void didStopDragging() {
                 }
                 if (recordAudioVideoRunnableStarted) {
                     AndroidUtilities.cancelRunOnUIThread(recordAudioVideoRunnable);
-                    delegate.onSwitchRecordMode(videoSendButton.getTag() == null);
-                    setRecordVideoButtonVisible(videoSendButton.getTag() == null, true);
+                    delegate.onSwitchRecordMode((videoSendButton.getTag() == drawSendButton.getTag()) ? 0 : ((videoSendButton.getTag() != null) ? 1 : 2));
+                    setRecordVideoButtonVisible((videoSendButton.getTag() == null || drawSendButton.getTag() == null), true);
                     performHapticFeedback(HapticFeedbackConstants.KEYBOARD_TAP);
                 } else if (!hasRecordVideo || calledRecordRunnable) {
                     startedDraggingX = -1;
                     if (hasRecordVideo && videoSendButton.getTag() != null) {
                         CameraController.getInstance().cancelOnInitRunnable(onFinishInitCameraRunnable);
-                        delegate.needStartRecordVideo(1);
+                        delegateNeedStartRecordVideo(delegate, 1);
                     } else {
-                        delegate.needStartRecordAudio(0);
+                        delegateNeedStartRecordAudio(delegate, 0);
                         MediaController.getInstance().stopRecording(1);
                     }
                     recordingAudioVideo = false;
@@ -1280,9 +1287,9 @@ public void didStopDragging() {
                 if (x < -distCanMove) {
                     if (hasRecordVideo && videoSendButton.getTag() != null) {
                         CameraController.getInstance().cancelOnInitRunnable(onFinishInitCameraRunnable);
-                        delegate.needStartRecordVideo(2);
+                        delegateNeedStartRecordVideo(delegate, 2);
                     } else {
-                        delegate.needStartRecordAudio(0);
+                        delegateNeedStartRecordAudio(delegate, 0);
                         MediaController.getInstance().stopRecording(0);
                     }
                     recordingAudioVideo = false;
@@ -1339,6 +1346,13 @@ public void didStopDragging() {
             videoSendButton.setImageResource(R.drawable.ic_msg_panel_video);
             videoSendButton.setPadding(0, 0, AndroidUtilities.dp(4), 0);
             audioVideoButtonContainer.addView(videoSendButton, LayoutHelper.createFrame(48, 48));
+
+            drawSendButton = new ImageView(context);
+            drawSendButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
+            drawSendButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelIcons), PorterDuff.Mode.MULTIPLY));
+            drawSendButton.setImageResource(R.drawable.floating_pencil);
+            drawSendButton.setPadding(0, 0, AndroidUtilities.dp(4), 0);
+            audioVideoButtonContainer.addView(drawSendButton, LayoutHelper.createFrame(48, 48));
         }
 
         recordCircle = new RecordCircle(context);
@@ -1466,50 +1480,74 @@ public boolean isSendButtonVisible() {
         return sendButton.getVisibility() == VISIBLE;
     }
 
+    private void resetSendButton(View sendButton, boolean audio) {
+        if (sendButton == null) {
+            return;
+        }
+        if (!audio) {
+            sendButton.setScaleX((sendButton.getTag() != null) ? 1.0f : 0.1f);
+            sendButton.setScaleY((sendButton.getTag() != null) ? 1.0f : 0.1f);
+            sendButton.setAlpha((sendButton.getTag() != null) ? 1.0f : 0.0f);
+        } else {
+            sendButton.setScaleX(((drawSendButton.getTag() == null) && (videoSendButton.getTag() == null)) ? 1.0f : 0.1f);
+            sendButton.setScaleY(((drawSendButton.getTag() == null) && (videoSendButton.getTag() == null)) ? 1.0f : 0.1f);
+            sendButton.setAlpha(((drawSendButton.getTag() == null) && (videoSendButton.getTag() == null)) ? 1.0f : 0.0f);
+        }
+    }
+
+    private void delegateNeedStartRecordAudio(ChatActivityEnterViewDelegate delegate, int state) {
+        if (delegate == null) {
+            return;
+        }
+        if (drawSendButton != null) {
+            if (drawSendButton.getTag() != null) {
+                delegate.needStartRecordAudio(0);
+                return;
+            }
+        }
+        delegate.needStartRecordAudio(state);
+    }
+
+    private void delegateNeedStartRecordVideo(ChatActivityEnterViewDelegate delegate, int state) {
+        if (delegate == null) {
+            return;
+        }
+        if (videoSendButton == null) {
+            delegate.needStartRecordVideo(0);
+            return;
+        }
+        if (videoSendButton.getTag() == null) {
+            delegate.needStartRecordVideo(0);
+            return;
+        }
+        if (drawSendButton != null) {
+            if (drawSendButton.getTag() != null) {
+                delegate.needStartRecordVideo(0);
+                return;
+            }
+        }
+        delegate.needStartRecordVideo(state);
+    }
+
     private void setRecordVideoButtonVisible(boolean visible, boolean animated) {
+        if (videoSendButton == null && drawSendButton == null) {
+            return;
+        }
+        if (drawSendButton == null) {
+            return;
+        }
+        drawSendButton.setTag((visible && drawSendButton.getTag() == null && videoSendButton.getTag() == null) ? 1 : null);
         if (videoSendButton == null) {
             return;
         }
-        videoSendButton.setTag(visible ? 1 : null);
+        videoSendButton.setTag((visible && drawSendButton.getTag() == null && videoSendButton.getTag() == null) ? 1 : null);
         if (audioVideoButtonAnimation != null) {
             audioVideoButtonAnimation.cancel();
             audioVideoButtonAnimation = null;
         }
-        if (animated) {
-            SharedPreferences preferences = MessagesController.getGlobalMainSettings();
-            boolean isChannel = false;
-            if ((int) dialog_id < 0) {
-                TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-(int) dialog_id);
-                isChannel = ChatObject.isChannel(chat) && !chat.megagroup;
-            }
-            preferences.edit().putBoolean(isChannel ? "currentModeVideoChannel" : "currentModeVideo", visible).commit();
-            audioVideoButtonAnimation = new AnimatorSet();
-            audioVideoButtonAnimation.playTogether(
-                    ObjectAnimator.ofFloat(videoSendButton, "scaleX", visible ? 1.0f : 0.1f),
-                    ObjectAnimator.ofFloat(videoSendButton, "scaleY", visible ? 1.0f : 0.1f),
-                    ObjectAnimator.ofFloat(videoSendButton, "alpha", visible ? 1.0f : 0.0f),
-                    ObjectAnimator.ofFloat(audioSendButton, "scaleX", visible ? 0.1f : 1.0f),
-                    ObjectAnimator.ofFloat(audioSendButton, "scaleY", visible ? 0.1f : 1.0f),
-                    ObjectAnimator.ofFloat(audioSendButton, "alpha", visible ? 0.0f : 1.0f));
-            audioVideoButtonAnimation.addListener(new AnimatorListenerAdapter() {
-                @Override
-                public void onAnimationEnd(Animator animation) {
-                    if (animation.equals(audioVideoButtonAnimation)) {
-                        audioVideoButtonAnimation = null;
-                    }
-                }
-            });
-            audioVideoButtonAnimation.setInterpolator(new DecelerateInterpolator());
-            audioVideoButtonAnimation.setDuration(150);
-            audioVideoButtonAnimation.start();
-        } else {
-            videoSendButton.setScaleX(visible ? 1.0f : 0.1f);
-            videoSendButton.setScaleY(visible ? 1.0f : 0.1f);
-            videoSendButton.setAlpha(visible ? 1.0f : 0.0f);
-            audioSendButton.setScaleX(visible ? 0.1f : 1.0f);
-            audioSendButton.setScaleY(visible ? 0.1f : 1.0f);
-            audioSendButton.setAlpha(visible ? 0.0f : 1.0f);
-        }
+        resetSendButton(drawSendButton, false);
+        resetSendButton(videoSendButton, false);
+        resetSendButton(audioSendButton, true);
     }
 
     public boolean isRecordingAudioVideo() {
@@ -1523,9 +1561,9 @@ public boolean isRecordLocked() {
     public void cancelRecordingAudioVideo() {
         if (hasRecordVideo && videoSendButton.getTag() != null) {
             CameraController.getInstance().cancelOnInitRunnable(onFinishInitCameraRunnable);
-            delegate.needStartRecordVideo(2);
+            delegateNeedStartRecordVideo(delegate, 2);
         } else {
-            delegate.needStartRecordAudio(0);
+            delegateNeedStartRecordAudio(delegate, 0);
             MediaController.getInstance().stopRecording(0);
         }
         recordingAudioVideo = false;
@@ -2044,7 +2082,7 @@ public void onAnimationEnd(Animator animation) {
 
     private void sendMessage() {
         if (videoToSendMessageObject != null) {
-            delegate.needStartRecordVideo(4);
+            delegateNeedStartRecordVideo(delegate, 4);
             hideRecordedAudioPanel();
             checkSendButton(true);
             return;
@@ -2505,7 +2543,7 @@ private void updateRecordIntefrace() {
             AndroidUtilities.lockOrientation(parentActivity);
 
             if (delegate != null) {
-                delegate.needStartRecordAudio(0);
+                delegateNeedStartRecordAudio(delegate, 0);
             }
             recordPanel.setVisibility(VISIBLE);
             recordCircle.setVisibility(VISIBLE);
@@ -3622,7 +3660,7 @@ public void didReceivedNotification(int id, int account, Object... args) {
             }
             if (videoSendButton != null && videoSendButton.getTag() != null && t >= 59500) {
                 startedDraggingX = -1;
-                delegate.needStartRecordVideo(3);
+                delegateNeedStartRecordVideo(delegate, 3);
             }
         } else if (id == NotificationCenter.closeChats) {
             if (messageEditText != null && messageEditText.isFocused()) {
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/InstantCameraView.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/InstantCameraView.java
index 6c107cc61..d26fd935d 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/InstantCameraView.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/Components/InstantCameraView.java
@@ -663,7 +663,7 @@ public void send(int state) {
                 cameraThread = null;
             }
             if (cancelled) {
-                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.audioRecordTooShort, true);
+                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.audioRecordTooShort, new Integer(0));
                 startAnimation(false);
             }
         }
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java
index c43a22ce2..963d5dabb 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/DialogsActivity.java
@@ -1356,7 +1356,7 @@ public void onMessageSend(CharSequence message) {
                 }
 
                 @Override
-                public void onSwitchRecordMode(boolean video) {
+                public void onSwitchRecordMode(int mode) {
 
                 }
 
diff --git a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/PopupNotificationActivity.java b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/PopupNotificationActivity.java
index 27ad650ae..4505e21ee 100644
--- a/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/PopupNotificationActivity.java
+++ b/Telegram/TMessagesProj/src/main/java/org/telegramster/ui/PopupNotificationActivity.java
@@ -351,7 +351,7 @@ public void onStickersExpandedChange() {
             }
 
             @Override
-            public void onSwitchRecordMode(boolean video) {
+            public void onSwitchRecordMode(int mode) {
 
             }
 
diff --git a/Telegram/TMessagesProj/src/main/res/values/strings.xml b/Telegram/TMessagesProj/src/main/res/values/strings.xml
index fbece688d..8dc0ba460 100644
--- a/Telegram/TMessagesProj/src/main/res/values/strings.xml
+++ b/Telegram/TMessagesProj/src/main/res/values/strings.xml
@@ -717,9 +717,9 @@
     <string name="DeleteForUser">Delete for %1$s</string>
     <string name="DeleteForAll">Delete for all members</string>
     <string name="TextCopied">Text copied to clipboard</string>
-    <string name="HoldToDraw">Hold to draw. Tap to switch to audio.</string>
-    <string name="HoldToAudio">Hold to record audio. Tap to switch to video.</string>
-    <string name="HoldToVideo">Hold to record video. Tap to switch to draw.</string>
+    <string name="HoldToDraw">Hold to draw. Tap to switch to video.</string>
+    <string name="HoldToAudio">Hold to record audio. Tap to switch to draw.</string>
+    <string name="HoldToVideo">Hold to record video. Tap to switch to audio.</string>
     <string name="DiscardVoiceMessageTitle">Discard Voice Message</string>
     <string name="DiscardVoiceMessageDescription">Are you sure you want to stop recording and discard your voice message?</string>
     <string name="DiscardVideoMessageTitle">Discard Video Message</string>
diff --git a/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java b/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java
index 8db09170e..61b968430 100644
--- a/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java
+++ b/Telegram/sfml/src/main/java/com/piercelbrooks/sfml/SFMLActivity.java
@@ -79,12 +79,12 @@ private static void loadLibrary(String library) {
 
     private static void loadLibrary(String library, boolean variant) {
         Log.d(TAG, "loadLibrary "+library);
-        if (variant) {
+        /*if (variant) {
             if (BuildConfig.DEBUG) {
                 System.loadLibrary(library+"-d");
                 return;
             }
-        }
+        }*/
         System.loadLibrary(library);
     }
 
diff --git a/Trunk/src/CMakeLists.txt b/Trunk/src/CMakeLists.txt
index f178c1b82..10739f973 100644
--- a/Trunk/src/CMakeLists.txt
+++ b/Trunk/src/CMakeLists.txt
@@ -19,7 +19,7 @@ include_directories(${CMAKE_CURRENT_LIST_DIR}/../../SFML-2.4.1/include)
 
 include_directories(${CMAKE_CURRENT_LIST_DIR}/../include)
 
-list(APPEND DEFINES "SFML_JNI_CLASS=\"com/piercelbrooks/sfml/app/MainActivity\"")
+list(APPEND DEFINES "SFML_JNI_CLASS=\"org/telegramster/ui/DoodleActivity\"")
 
 set(PROJECT_FILES
 	${SRC}/main.cpp
diff --git a/Trunk/src/native-lib.cpp b/Trunk/src/native-lib.cpp
index 91d347c12..239c030a7 100644
--- a/Trunk/src/native-lib.cpp
+++ b/Trunk/src/native-lib.cpp
@@ -10,6 +10,11 @@
 extern "C" {
 #endif
 
+#define SFML_ACTIVITY "org/telegramster/ui/DoodleActivity"
+#ifndef SFML_JNI_CLASS
+#define SFML_JNI_CLASS SFML_ACTIVITY
+#endif
+
 std::map<std::string, jobject>* strings = nullptr;
 JavaVM *gJvm = nullptr;
 static jobject gClassLoader;
@@ -115,8 +120,8 @@ int vibrate(sf::Time duration)
     int attachedHere = attach(&jvm, &env);
 
     // Retrieve class information
-    jclass natact = findClassWithEnv(env, "com/ssugamejam/stepdimension/SFMLActivity");
-    jclass context = findClassWithEnv(env, "com/ssugamejam/stepdimension/SFMLActivity");
+    jclass natact = findClassWithEnv(env, SFML_ACTIVITY);
+    jclass context = findClassWithEnv(env, SFML_ACTIVITY);
 
     // Get the value of a constant
     jfieldID fid = env->GetStaticFieldID(context, "VIBRATOR_SERVICE", "Ljava/lang/String;");
