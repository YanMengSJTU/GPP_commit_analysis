diff --git a/README.md b/README.md
index 7b569217a..215c62e2f 100644
--- a/README.md
+++ b/README.md
@@ -1,32 +1,39 @@
-## Telegram messenger for Android
+## Telegram UI Tests
 
-[Telegram](http://telegram.org) is a messaging app with a focus on speed and security. It’s superfast, simple and free.
-This repo contains the official source code for [Telegram App for Android](https://play.google.com/store/apps/details?id=org.telegram.messenger).
+This fork was created to implement some UI-testcases as a proof-of-concept.
+The testcases are based on UIAutomator.
 
-##Creating your Telegram Application
+### External Dependencies
 
-We welcome all developers to use our API and source code to create applications on our platform.
-There are several things we require from **all developers** for the moment.
+The testcases depends on some external tools to communicate with the telegram service for triggering actions and verifying results. 
 
-1. [**Obtain your own api_id**](https://core.telegram.org/api/obtaining_api_id) for your application.
-2. Please **do not** use the name Telegram for your app — or make sure your users understand that it is unofficial.
-3. Kindly **do not** use our standard logo (white paper plane in a blue circle) as your app's logo.
-3. Please study our [**security guidelines**](https://core.telegram.org/mtproto/security_guidelines) and take good care of your users' data and privacy.
-4. Please remember to publish **your** code too in order to comply with the licences.
+#### Telegram CLI
 
-### API, Protocol documentation
+Install the [Telegram CLI](https://github.com/rnhmjoj/tg). 
+On OSX you might need to perform these commands before building (instead of whats listed in the README there): 
 
-Telegram API manuals: http://core.telegram.org/api
+```
+brew update
+brew upgrade
+brew install libconfig readline lua python libevent jansson
+export CFLAGS="-I/usr/local/include -I/usr/local/Cellar/readline/6.3.8/include"
+export CPPFLAGS="-I/usr/local/opt/openssl/include"
+export LDFLAGS="-L/usr/local/opt/openssl/lib -L/usr/local/lib -L/usr/local/Cellar/readline/6.3.8/lib"
+./configure && make
+```
 
-MTproto protocol manuals: http://core.telegram.org/mtproto
+Start up the Telegram CLI at least once and setup your account. You should use the same phone number that you will use in your testcases so that the confirmation code is sent to your CLI client when requested from the Testcase. 
 
-### Usage
+Create a new contact with your own number (This can only be done in the CLI and is necessary for the testcases to work properly, the testcases will send messages to yourself, otherwise you would need a second CLI user).
 
-**Beware of using the dev branch and uploading it to any markets, in many cases it not will work as expected**.
+* In the telegram CLI: `add_contact <phone> <first name> <last name>`
 
-First of all, take a look at **src/main/java/org/telegram/messenger/BuildVars.java** and fill it with correct values.
-Import the root folder into your IDE (tested on Android Studio), then run project.
+#### Telegram UI Test Server
 
-### Localization
+The testcases need to trigger actions from telegram (e.g. sending a message) or read messages (reading the verification code or verifying that a message was sent correctly).
 
-We moved all translations to https://www.transifex.com/projects/p/telegram/. Please use it.
+Clone [the repo](https://github.com/iv-mexx/TelegramUITestRequestServer) and read the instructions to setup the Telegram UI Test Server.
+
+### Caveats
+
+* The application and simulator are not resetted after the testcases. In order to trigger the registration you need to delete the application or reset the simulator manually between test-runs.
\ No newline at end of file
