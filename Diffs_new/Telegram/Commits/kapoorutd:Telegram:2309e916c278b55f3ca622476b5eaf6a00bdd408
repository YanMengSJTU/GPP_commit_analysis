diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index cd30e0698..75eb4fa3e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -85,13 +85,11 @@
 import java.util.HashMap;
 
 
-public class ContactsActivity extends BaseFragment implements KarmaBalanceListener,NotificationCenter.NotificationCenterDelegate {
-
+public class ContactsActivity extends BaseFragment implements KarmaBalanceListener, NotificationCenter.NotificationCenterDelegate {
     private BaseSectionsAdapter listViewAdapter;
     private TextView emptyTextView;
     private LetterSectionsListView listView;
     private SearchAdapter searchListViewAdapter;
-
     private boolean searchWas;
     private boolean searching;
     private boolean onlyUsers;
@@ -116,15 +114,15 @@
     public void onGetKarmaSuccess(int karmaPoints) {
 
 
-        if(bal!=null){
+        if (bal != null) {
 
-            if(Integer.parseInt(bal)!=karmaPoints){
-           getParentActivity().runOnUiThread(new Runnable() {
-               @Override
-               public void run() {
-                   adapter.notifyDataSetChanged();
-               }
-           });
+            if (Integer.parseInt(bal) != karmaPoints) {
+                getParentActivity().runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        adapter.notifyDataSetChanged();
+                    }
+                });
 
             }
         }
@@ -136,8 +134,6 @@ public void onGetKarmaFailure() {
     }
 
 
-
-
     public interface ContactsActivityDelegate {
         void didSelectContact(TLRPC.User user, String param);
     }
@@ -302,11 +298,11 @@ public boolean onTouch(View v, MotionEvent event) {
         layoutParams1.weight = 0.5f;
         frameLayout.setLayoutParams(layoutParams1);
 
-        mView=View.inflate(context,R.layout.layout_contact_activity,null);
-        ((FrameLayout)fragmentView).addView(mView);
+        mView = View.inflate(context, R.layout.layout_contact_activity, null);
+        ((FrameLayout) fragmentView).addView(mView);
         mView.findViewById(R.id.ll_beck).setVisibility(View.GONE);
 
-        listView =  (LetterSectionsListView) fragmentView.findViewById(R.id.contact_list);
+        listView = (LetterSectionsListView) fragmentView.findViewById(R.id.contact_list);
         listView.setEmptyView(emptyTextLayout);
         listView.setVerticalScrollBarEnabled(false);
         listView.setDivider(null);
@@ -320,7 +316,6 @@ public boolean onTouch(View v, MotionEvent event) {
         }
 
 
-
         fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -386,20 +381,17 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                 } catch (Exception e) {
                                     FileLog.e("tmessages", e);
                                 }
-                            }
-
-                            else if(row == 1){
+                            } else if (row == 1) {
                                 try {
 
-                                ApplicationLoader.getInstance().trackEvent("Clicked on people you may know","clicked","want to get friends");
+                                    ApplicationLoader.getInstance().trackEvent("Clicked on people you may know", "clicked", "want to get friends");
 
-                                  SharedPreferences pp  = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-                                    if(pp.getString("social_id","").equals("")) {
+                                    SharedPreferences pp = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+                                    if (pp.getString("social_id", "").equals("")) {
                                         presentFragment(new MyProfileActivity());
-                                    }
-                                    else{
+                                    } else {
                                         Bundle args22 = new Bundle();
-                                        args22.putString("s_friend","sf");
+                                        args22.putString("s_friend", "sf");
                                         presentFragment(new SocialFriendActivity(args22));
                                     }
 
@@ -654,7 +646,6 @@ private void sendAuthorizationToServer(String amount) {
     }
 
 
-
     @Override
     public void onResume() {
         super.onResume();
@@ -663,20 +654,21 @@ public void onResume() {
         if (listViewAdapter != null) {
             listViewAdapter.notifyDataSetChanged();
         }
-        if(destroyAfterSelect){
+        if (destroyAfterSelect) {
             hideTabsAnsMenu();
             mView.findViewById(R.id.ll_beck).setVisibility(View.VISIBLE);
+        } else {
+            showTabsAndmenu();
         }
-        else{showTabsAndmenu();}
 
 
         SharedPreferences sp = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
 
-        String mob  =  sp.getString("mob","9888888");
-        String cc   =   sp.getString("cCode","US");
+        String mob = sp.getString("mob", "9888888");
+        String cc = sp.getString("cCode", "US");
 
 
-        BackgroundExecuter.getInstance().execute(new GetKarmaBalanceRequester(mob,cc,this));
+        BackgroundExecuter.getInstance().execute(new GetKarmaBalanceRequester(mob, cc, this));
         setContactMenuList();
 
     }
@@ -696,13 +688,13 @@ public void didReceivedNotification(int id, Object... args) {
                 listViewAdapter.notifyDataSetChanged();
             }
         } else if (id == NotificationCenter.updateInterfaces) {
-            int mask = (Integer)args[0];
+            int mask = (Integer) args[0];
             if ((mask & MessagesController.UPDATE_MASK_AVATAR) != 0 || (mask & MessagesController.UPDATE_MASK_NAME) != 0 || (mask & MessagesController.UPDATE_MASK_STATUS) != 0) {
                 updateVisibleRows(mask);
             }
         } else if (id == NotificationCenter.encryptedChatCreated) {
             if (createSecretChat && creatingChat) {
-                TLRPC.EncryptedChat encryptedChat = (TLRPC.EncryptedChat)args[0];
+                TLRPC.EncryptedChat encryptedChat = (TLRPC.EncryptedChat) args[0];
                 Bundle args2 = new Bundle();
                 args2.putInt("enc_id", encryptedChat.id);
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
@@ -736,35 +728,35 @@ public void setIgnoreUsers(HashMap<Integer, TLRPC.User> users) {
     }
 
 
-
-    public String getKarmaBal(){
+    public String getKarmaBal() {
         SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-        bal =p.getString("karmaBal","0");
+        bal = p.getString("karmaBal", "0");
         return bal;
     }
 
-    private void setContactMenuList(){
-        draweritems=new ArrayList<MenuItems>();
-        draweritems.add(new MenuItems(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_bar_contact_plus, true, "",0));
-        draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat),R.drawable.menu_sectretchat,true, "",0));
-        draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel),R.drawable.menu_broadcast,true, "",0));
-        draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink),R.drawable.menu_wink,true, "",0));
-        draweritems.add(new MenuItems("  Call",R.drawable.ic_call,true,"",5));
-        if(UserPaymentInfo.getInstatance().getPaymentStatus() !=UserPaymentInfo.paidUser
-                && (!UserPaymentInfo.getInstatance().getUserId().equalsIgnoreCase("")) ){
-            draweritems.add(new MenuItems(LocaleController.getString("Hide Ads", R.string.hide_ads),R.drawable.hide_ad,true, "$2",4));
- }
-        draweritems.add(new MenuItems(LocaleController.getString("get", R.string.more_karma),R.drawable.ic_premium,true, getKarmaBal(),4));
-   //     draweritems.add(new MenuItems(LocaleController.getString("get", R.string.Call),R.drawable.ic_call,true, getKarmaBal(),5));
+    private void setContactMenuList() {
+        draweritems = new ArrayList<MenuItems>();
+        draweritems.add(new MenuItems(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_bar_contact_plus, true, "", 0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_sectretchat, true, "", 0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel), R.drawable.menu_broadcast, true, "", 0));
+        draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink), R.drawable.menu_wink, true, "", 0));
+        draweritems.add(new MenuItems("  Call", R.drawable.ic_call, true, "", 5));
+        if (UserPaymentInfo.getInstatance().getPaymentStatus() != UserPaymentInfo.paidUser
+                && (!UserPaymentInfo.getInstatance().getUserId().equalsIgnoreCase(""))) {
+            draweritems.add(new MenuItems(LocaleController.getString("Hide Ads", R.string.hide_ads), R.drawable.hide_ad, true, "$2", 4));
+        }
+        draweritems.add(new MenuItems(LocaleController.getString("get", R.string.more_karma), R.drawable.ic_premium, true, getKarmaBal(), 4));
+        //     draweritems.add(new MenuItems(LocaleController.getString("get", R.string.Call),R.drawable.ic_call,true, getKarmaBal(),5));
         adapter = new SlidingMenuAdapter(getParentActivity(),
                 draweritems);
-        ViewParent view=  parentLayout.getParent();
-        ListView drawerList=((ListView)((View) view.getParent()).findViewById(R.id.contact_slidermenu));
-        drawerList.setAdapter(adapter);drawerList.setOnItemClickListener(new ContactMenuClickListener());
+        ViewParent view = parentLayout.getParent();
+        ListView drawerList = ((ListView) ((View) view.getParent()).findViewById(R.id.contact_slidermenu));
+        drawerList.setAdapter(adapter);
+        drawerList.setOnItemClickListener(new ContactMenuClickListener());
         ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.GONE);
         ((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.GONE);
         ((ImageView) ((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.transparent);
-        ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText("");
+        ((TextView) ((View) view.getParent()).findViewById(R.id.row_title)).setText("");
     }
 
     private class ContactMenuClickListener implements
@@ -772,13 +764,13 @@ private void setContactMenuList(){
         @Override
         public void onItemClick(AdapterView<?> parent, View view, int position,
                                 long id) {
-            switch(position){
+            switch (position) {
                 case 0:
                     parentLayout.closeDrawer();
                     try {
                         Intent intent = new Intent(Intent.ACTION_SEND);
                         intent.setType("text/plain");
-                        intent.putExtra(Intent.EXTRA_TEXT,  LocaleController.getString("InviteText", R.string.InviteTextsocial));
+                        intent.putExtra(Intent.EXTRA_TEXT, LocaleController.getString("InviteText", R.string.InviteTextsocial));
                         getParentActivity().startActivity(intent);
                     } catch (Exception e) {
                         FileLog.e("tmessages", e);
@@ -811,15 +803,14 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     break;
                 case 3:
                     SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("preferences", Activity.MODE_PRIVATE);
-                    if(p.getString("minage","0").equals("0")){
+                    if (p.getString("minage", "0").equals("0")) {
                         presentFragment(new PreferencesActivity());
-                        ApplicationLoader.getInstance().trackEvent("Clicked on my preferences","clicked","want to get friends");
- }
-                    else {
+                        ApplicationLoader.getInstance().trackEvent("Clicked on my preferences", "clicked", "want to get friends");
+                    } else {
                         Bundle args2 = new Bundle();
                         args2.putString("s_friend", "wink");
                         presentFragment(new SocialFriendActivity(args2));
-                        ApplicationLoader.getInstance().trackEvent("Clicked on social friends","clicked","want social friends");
+                        ApplicationLoader.getInstance().trackEvent("Clicked on social friends", "clicked", "want social friends");
                     }
                     break;
                 case 4:
@@ -832,19 +823,19 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     break;
                 case 6:
                     parentLayout.closeDrawer();
-                    ApplicationLoader.getInstance().trackEvent("Clicked on Get Karma","clicked","want to get credit");
-                    SharedPreferences pp  = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-                    if(pp.getString("social_id","").equals("")) {
+                    ApplicationLoader.getInstance().trackEvent("Clicked on Get Karma", "clicked", "want to get credit");
+                    SharedPreferences pp = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+                    if (pp.getString("social_id", "").equals("")) {
                         presentFragment(new MyProfileActivity());
-                    }
-                    else {
+                    } else {
                         PaymentManager.createIntent(getParentActivity(), false);
                     }
                     break;
             }
         }
     }
-    public void openDialog(){
+
+    public void openDialog() {
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
 
@@ -860,10 +851,10 @@ public void onClick(View v) {
                 dialog.dismiss();
             }
         });
-        Button button = (Button)view.findViewById(R.id.btn_yes);
+        Button button = (Button) view.findViewById(R.id.btn_yes);
         button.setSelected(true);
-        TextView textView = (TextView)view.findViewById(R.id.txt_dia) ;
-        textView.setText(LocaleController.getString("hide_ads",R.string.remove_ads_content));
+        TextView textView = (TextView) view.findViewById(R.id.txt_dia);
+        textView.setText(LocaleController.getString("hide_ads", R.string.remove_ads_content));
         button.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -890,9 +881,9 @@ private PayPalPayment getThingToBuy(String paymentIntent, String paymentValue) {
                 paymentIntent);
     }
 
-    public void logInToSinch(){
+    public void logInToSinch() {
         SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-        String userName =   p.getString("social_id","1231313");
+        String userName = p.getString("social_id", "1231313");
 
         if (userName.isEmpty()) {
             Toast.makeText(getParentActivity(), "Please enter a name", Toast.LENGTH_LONG).show();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index c4a91f05e..5b11c4ab1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -120,18 +120,10 @@
     private ProgressBar progressView;
     private LinearLayout emptyView;
     private ActionBarMenuItem passcodeItem;
- //   private ImageView floatingButton;
-
     private AlertDialog permissionDialog;
-/*
-    private int prevPosition;
-    private int prevTop;
-    private boolean scrollUpdated;
-    private boolean floatingHidden;*/
     private final AccelerateDecelerateInterpolator floatingInterpolator = new AccelerateDecelerateInterpolator();
 
     private boolean checkPermission = true;
-
     private String selectAlertString;
     private String selectAlertStringGroup;
     private String addToGroupAlertString;
@@ -161,23 +153,18 @@ public void run() {
                     }
                 }
         );
-
-
     }
 
     @Override
     public void onSocialLoginError() {
-
     }
 
     @Override
     public void onSocialFailer(String userid) {
-
     }
 
     @Override
     public void onGetKarmaSuccess(int karmaPoints) {
-
         if (Integer.parseInt(bal) != karmaPoints) {
             getParentActivity().runOnUiThread(new Runnable() {
                 @Override
@@ -185,17 +172,12 @@ public void run() {
                     adapter.notifyDataSetChanged();
                 }
             });
-
         }
-
     }
-
     @Override
     public void onGetKarmaFailure() {
-
     }
 
-
     public interface DialogsActivityDelegate {
         void didSelectDialog(DialogsActivity fragment, long dialog_id, boolean param);
     }
@@ -203,11 +185,9 @@ public void onGetKarmaFailure() {
     public DialogsActivity(Bundle args) {
         super(args);
     }
-
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
-
         if (getArguments() != null) {
             onlySelect = arguments.getBoolean("onlySelect", false);
             dialogsType = arguments.getInt("dialogsType", 0);
@@ -215,7 +195,6 @@ public boolean onFragmentCreate() {
             selectAlertStringGroup = arguments.getString("selectAlertStringGroup");
             addToGroupAlertString = arguments.getString("addToGroupAlertString");
         }
-
         if (searchString == null) {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.dialogsNeedReload);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.emojiDidLoaded);
@@ -233,8 +212,6 @@ public boolean onFragmentCreate() {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.didLoadedReplyMessages);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.reloadHints);
         }
-
-
         if (!dialogsLoaded) {
             MessagesController.getInstance().loadDialogs(0, 100, true);
             ContactsController.getInstance().checkInviteText();
@@ -270,23 +247,18 @@ public void onFragmentDestroy() {
     public View createView(final Context context) {
         searching = false;
         searchWas = false;
-
         AndroidUtilities.runOnUIThread(new Runnable() {
             @Override
             public void run() {
                 Theme.loadRecources(context);
             }
         });
-
         BackgroundExecuter.getInstance().execute(new CheckPremiumUserRequester(UserPaymentInfo.getInstatance().getUserId()));
-
-
         ActionBarMenu menu = actionBar.createMenu();
         if (!onlySelect && searchString == null) {
             passcodeItem = menu.addItem(1, R.drawable.lock_close);
             updatePasscodeButton();
         }
-
         if (ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getBoolean("Login_Status", true)) {
             TLRPC.User user = UserConfig.getCurrentUser();
             SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
@@ -299,7 +271,6 @@ public void run() {
                 newuser.setDob(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver", "2000-01-01"));
                 newuser.setSex(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("sex", "M"));
                 newuser.setId(user.id + "");
-
                 CountryAdapter.Country cu = Util.getcountry((ApplicationLoader.
                         applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("country", "india")));
                 newuser.setcCode(cu.shortname);
@@ -312,7 +283,6 @@ public void run() {
         }
 
         BackgroundExecuter.getInstance().execute(new CheckPremiumUserRequester(UserPaymentInfo.getInstatance().getUserId()));
-
         final ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
@@ -325,7 +295,6 @@ public void onSearchExpand() {
                         emptyView.setVisibility(View.GONE);
                     }
                     if (!onlySelect) {
-                        //   floatingButton.setVisibility(View.GONE);
                     }
                 }
                 updatePasscodeButton();
@@ -345,7 +314,6 @@ public void onSearchCollapse() {
                 searching = false;
                 searchWas = false;
                 actionBar.setBackButtonImage(0);
-
                 if (listView != null) {
                     searchEmptyView.setVisibility(View.GONE);
                     if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
@@ -368,7 +336,6 @@ public void onSearchCollapse() {
                 updatePasscodeButton();
             }
 
-
             @Override
             public void onTextChanged(EditText editText) {
                 String text = editText.getText().toString();
@@ -395,8 +362,6 @@ public void onTextChanged(EditText editText) {
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
             actionBar.setTitle(LocaleController.getString("SelectChat", R.string.SelectChat));
             parentLayout.addFragmentToStack(new DialogsActivity(null));
-
-
         } else {
             if (searchString != null) {
                 actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -431,7 +396,6 @@ public void onItemClick(int id) {
 
         FrameLayout frameLayout = new FrameLayout(context);
         fragmentView = frameLayout;
-
         listView = new RecyclerListView(context);
         listView.setVerticalScrollBarEnabled(true);
         listView.setItemAnimator(null);
@@ -722,13 +686,11 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 return true;
             }
         });
-
         searchEmptyView = new EmptyTextProgressView(context);
         searchEmptyView.setVisibility(View.GONE);
         searchEmptyView.setShowAtCenter(true);
         searchEmptyView.setText(LocaleController.getString("NoResult", R.string.NoResult));
         frameLayout.addView(searchEmptyView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
-
         emptyView = new LinearLayout(context);
         emptyView.setOrientation(LinearLayout.VERTICAL);
         emptyView.setVisibility(View.GONE);
@@ -740,14 +702,12 @@ public boolean onTouch(View v, MotionEvent event) {
                 return true;
             }
         });
-
         TextView textView = new TextView(context);
         textView.setText(LocaleController.getString("NoChats", R.string.NoChats));
         textView.setTextColor(0xff959595);
         textView.setGravity(Gravity.CENTER);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
         emptyView.addView(textView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
-
         textView = new TextView(context);
         String help = LocaleController.getString("NoChatsHelp", R.string.NoChatsHelp);
         if (AndroidUtilities.isTablet() && !AndroidUtilities.isSmallTablet()) {
@@ -760,11 +720,9 @@ public boolean onTouch(View v, MotionEvent event) {
         textView.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(6), AndroidUtilities.dp(8), 0);
         textView.setLineSpacing(AndroidUtilities.dp(2), 1);
         emptyView.addView(textView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT));
-
         progressView = new ProgressBar(context);
         progressView.setVisibility(View.GONE);
         frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
-
         listView.setOnScrollListener(new RecyclerView.OnScrollListener() {
             @Override
             public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
@@ -793,7 +751,6 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
 
             }
         });
-
         if (searchString == null) {
             dialogsAdapter = new DialogsAdapter(context, dialogsType);
             if (AndroidUtilities.isTablet() && openedDialogId != 0) {
@@ -1141,24 +1098,20 @@ private void updateVisibleRows(int mask) {
         }
     }
 
-
     @Override
     public void onActivityResultFragment(int requestCode, int resultCode, Intent data) {
         super.onActivityResultFragment(requestCode, resultCode, data);
-
         if (requestCode == UserPaymentInfo.REQUEST_CODE_PAYMENT) {
             if (resultCode == Activity.RESULT_OK) {
                 PaymentConfirmation confirm =
                         data.getParcelableExtra(PaymentActivity.EXTRA_RESULT_CONFIRMATION);
                 if (confirm != null) {
                     try {
-                        Gson gson = new Gson(); // new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create();
+                        Gson gson = new Gson();
                         PaymentResponse response = gson.fromJson(confirm.toJSONObject().toString(), PaymentResponse.class);
                         UserPaymentInfo.getInstatance().setPaymentId(response.getResponse().getId());
                         UserPaymentInfo.getInstatance().setPaymentStatus(UserPaymentInfo.paidUser);
-
                         sendAuthorizationToServer(String.valueOf(2));
-
                     } catch (Exception e) {
                         Log.e("", "an extremely unlikely failure occurred: ", e);
                     }
@@ -1179,7 +1132,6 @@ private void sendAuthorizationToServer(String amount) {
         // TODO change the amount selected by user.
         String cc = p.getString("cCode", "zz");
         String mob = p.getString("mob", "00000000");
-
         if (!id.equalsIgnoreCase("")) {
             BackgroundExecuter.getInstance().execute(new
                     ConfirmationRequester(UserPaymentInfo.getInstatance().getPaymentId(), id, amount, mob, cc));
@@ -1281,7 +1233,6 @@ public String getKarmaBal() {
         return bal;
     }
 
-
     private void setChatMenuList() {
         ArrayList<MenuItems> draweritems = new ArrayList<MenuItems>();
         draweritems.add(new MenuItems(LocaleController.getString("NewChat", R.string.new_chat), R.drawable.menu_bar_chat, true, "", 0));
@@ -1339,13 +1290,10 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     break;
                 case 1:
                     parentLayout.closeDrawer();
-                    //closeDrawer();
                     presentFragment(new GroupCreateActivity());
                     break;
                 case 2:
                     parentLayout.closeDrawer();
-
-                    // closeDrawer();
                     Bundle args = new Bundle();
                     args.putBoolean("onlyUsers", true);
                     args.putBoolean("destroyAfterSelect", true);
@@ -1355,9 +1303,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     presentFragment(new ContactsActivity(args));
                     break;
                 case 3:
-
                     parentLayout.closeDrawer();
-
                     if (!MessagesController.isFeatureEnabled("broadcast_create", parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 1))) {
                         return;
                     }
@@ -1365,15 +1311,11 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     if (preferences.getBoolean("channel_intro", false)) {
                         Bundle ars = new Bundle();
                         ars.putInt("step", 0);
-
                         presentFragment(new ChannelCreateActivity(ars));
                     } else {
                         presentFragment(new ChannelIntroActivity());
                         preferences.edit().putBoolean("channel_intro", true).commit();
-
-
                     }
-
                     break;
                 case 4:
                     SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("preferences", Activity.MODE_PRIVATE);
@@ -1387,10 +1329,8 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     break;
                 case 5:
                     parentLayout.closeDrawer();
-                    // openDialog();
                     logInToSinch();
                     break;
-
                 case 6:
                     parentLayout.closeDrawer();
                     ApplicationLoader.getInstance().trackEvent("Clicked on Get Karma", "clicked", "want to get credit");
@@ -1401,17 +1341,12 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                         PaymentManager.createIntent(getParentActivity(), false);
                     }
                     break;
-
-
             }
-
         }
     }
 
     public void openDialog() {
-
         AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-
         LayoutInflater inflater = (LayoutInflater) getParentActivity()
                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         View view = inflater.inflate(R.layout.custom_dialog, null);
@@ -1433,17 +1368,13 @@ public void onClick(View v) {
             public void onClick(View v) {
                 try {
                     onBuyPressed(2);
-                    // PaymentManager.createIntent(getParentActivity(),false);
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
             }
         });
-
     }
-
     public void onBuyPressed(int paymentValue) {
-
         PayPalPayment thingToBuy = getThingToBuy(PayPalPayment.PAYMENT_INTENT_SALE, String.valueOf(paymentValue));
         Intent intent = new Intent(getParentActivity(), PaymentActivity.class);
         intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, UserPaymentInfo.getConfiguration());
@@ -1454,19 +1385,16 @@ public void onBuyPressed(int paymentValue) {
     private PayPalPayment getThingToBuy(String paymentIntent, String paymentValue) {
         return new PayPalPayment(new BigDecimal(paymentValue), "USD", "PREMIUM FEATURES",
                 paymentIntent);
-
     }
 
-
+    //TODO  not well organised the flow of sinch
     public void logInToSinch() {
         SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
         String userName = p.getString("social_id", "1231313");
-
         if (userName.isEmpty()) {
             Toast.makeText(getParentActivity(), "Please enter a name", Toast.LENGTH_LONG).show();
             return;
         }
-
         openPlaceCallActivity();
     }
 
@@ -1476,6 +1404,4 @@ private void openPlaceCallActivity() {
         getParentActivity().startActivity(mainActivity);
 
     }
-
-
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index 0828e398b..73477c26e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -56,7 +56,6 @@
 
     private ListView listView;
     private boolean reseting = false;
-
     private int notificationsServiceRow;
     private int notificationsServiceConnectionRow;
     private int messageSectionRow;
@@ -149,9 +148,7 @@ public boolean onFragmentCreate() {
         resetSectionRow2 = rowCount++;
         resetSectionRow = rowCount++;
         resetNotificationsRow = rowCount++;
-
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
-
         return super.onFragmentCreate();
     }
 
@@ -176,14 +173,10 @@ public void onItemClick(int id) {
             }
         });
 
-
-
         fragmentView =View.inflate(context, R.layout.settings_layout, null);
-
         fragmentView.findViewById(R.id.black_view).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-
             }
         });
         fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java
index cf6e2ddef..a50737135 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java
@@ -122,12 +122,10 @@ public View createView(final Context context) {
             params.add(new CustomHttpParams("userId", sp.getString("social_id", "")));
             BackgroundExecuter.getInstance().execute(new AddContactRequester(telegramUsersesList, params));
 
-
         }
 
         hideTabsAnsMenu();
         ArrayList<CustomHttpParams> params = new ArrayList<>();
-        params.add(new CustomHttpParams("userId", sp.getString("social_id", "")));
         if(bundle.get("s_friend").equals("wink")){
             reqester = new GetSuggestFriendsRq(params,SocialFriendActivity.this,"search");
         } else {
