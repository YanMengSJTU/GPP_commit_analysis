diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index fdba12aaa..f5350dc38 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -12,6 +12,8 @@ dependencies {
     compile 'com.googlecode.mp4parser:isoparser:1.0.+'
     compile 'org.apache.httpcomponents:httpmime:4.2.1'
     compile 'commons-lang:commons-lang:2.6'
+    compile files('libs/pass-v1.2.1.jar')
+    compile files('libs/sdk-v1.0.0.jar')
 }
 
 android {
@@ -114,7 +116,7 @@ android {
     }
 
     defaultConfig {
-        minSdkVersion 23
+        minSdkVersion 22
         targetSdkVersion 23
         versionName "3.8.1"
     }
diff --git a/TMessagesProj/config/debug/AndroidManifest.xml b/TMessagesProj/config/debug/AndroidManifest.xml
index 9a53515fe..158b272a9 100644
--- a/TMessagesProj/config/debug/AndroidManifest.xml
+++ b/TMessagesProj/config/debug/AndroidManifest.xml
@@ -18,6 +18,9 @@
     <permission android:name="org.telegram.messenger.permission.MAPS_RECEIVE" android:protectionLevel="signature"/>
     <permission android:name="org.telegram.messenger.permission.C2D_MESSAGE" android:protectionLevel="signature" />
 
+    <!-- SamsumgPass -->
+    <uses-permission android:name= "com.samsung.android.providers.context.permission.WRITE_USE_APP_FEATURE_SURVEY"/>
+
     <application
         android:allowBackup="false"
         android:icon="@drawable/ic_launcher"
diff --git a/TMessagesProj/libs/pass-v1.2.1.jar b/TMessagesProj/libs/pass-v1.2.1.jar
new file mode 100755
index 000000000..8cf5b58a8
Binary files /dev/null and b/TMessagesProj/libs/pass-v1.2.1.jar differ
diff --git a/TMessagesProj/libs/sdk-v1.0.0.jar b/TMessagesProj/libs/sdk-v1.0.0.jar
new file mode 100755
index 000000000..070d65de6
Binary files /dev/null and b/TMessagesProj/libs/sdk-v1.0.0.jar differ
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index c41cd802d..87535525a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -23,6 +23,7 @@
 import android.graphics.Outline;
 import android.os.Build;
 import android.os.Bundle;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -37,8 +38,11 @@
 import android.widget.ListView;
 import android.widget.ProgressBar;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.finger2view.messenger.support.util.BiometryController;
+import com.samsung.android.sdk.pass.Spass;
+import com.samsung.android.sdk.pass.SpassFingerprint;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildVars;
@@ -116,6 +120,42 @@
 
     private DialogsActivityDelegate delegate;
 
+    //Samsumg Pass
+    private ActionBarMenuItem item;
+    private Spass spass;
+    private SpassFingerprint spassFingerprint;
+    private SpassFingerprint.IdentifyListener listener = new SpassFingerprint.IdentifyListener() {
+        @Override
+        public void onFinished(int eventStatus) {
+            if(eventStatus == SpassFingerprint.STATUS_AUTHENTIFICATION_SUCCESS || eventStatus == SpassFingerprint.STATUS_AUTHENTIFICATION_PASSWORD_SUCCESS){
+                BiometryController.getInstance().setUnlocked(true);
+                listView.getAdapter().notifyDataSetChanged();
+                item.setVisibility(BiometryController.getInstance().isUnlocked() ? View.VISIBLE : View.GONE);
+            }else{
+                Toast.makeText(
+                        DialogsActivity.this.getParentActivity(),
+                        LocaleController.getString("PermissionFingerprintAuthFailed", R.string.PermissionFingerprintAuthFailed),
+                        Toast.LENGTH_LONG
+                ).show();
+            }
+        }
+
+        @Override
+        public void onReady() {
+
+        }
+
+        @Override
+        public void onStarted() {
+
+        }
+
+        @Override
+        public void onCompleted() {
+
+        }
+    };
+
     public interface DialogsActivityDelegate {
         void didSelectDialog(DialogsActivity fragment, long dialog_id, boolean param);
     }
@@ -189,6 +229,19 @@ public View createView(final Context context) {
         searching = false;
         searchWas = false;
 
+        try{
+            this.spass = new Spass();
+            this.spass.initialize(context);
+            this.spassFingerprint = new SpassFingerprint(this.getParentActivity());
+        }catch (Exception e){
+            e.printStackTrace();
+        }
+
+        boolean isFeatureEnabled = spass.isFeatureEnabled(Spass.DEVICE_FINGERPRINT);
+        if(isFeatureEnabled){
+            spassFingerprint = new SpassFingerprint(context);
+        }
+
         Theme.loadRecources(context);
 
         ActionBarMenu menu = actionBar.createMenu();
@@ -196,7 +249,7 @@ public View createView(final Context context) {
             passcodeItem = menu.addItem(1, R.drawable.lock_close);
             updatePasscodeButton();
         }
-        final ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
+        item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
                 searching = true;
@@ -676,13 +729,12 @@ public void onClick(View v) {
         });
 
 
-        //Temp button
-
+        //TODO find a good icon for it: Floating button
         unlockButton = new ImageView(context);
         unlockButton.setVisibility(onlySelect ? View.GONE : View.VISIBLE);
         unlockButton.setScaleType(ImageView.ScaleType.CENTER);
         unlockButton.setBackgroundResource(R.drawable.floating_states);
-        unlockButton.setImageResource(R.drawable.floating_locker);
+        unlockButton.setImageResource(R.drawable.floating_pencil);
         if (Build.VERSION.SDK_INT >= 21) {
             StateListAnimator animator = new StateListAnimator();
             animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(unlockButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
@@ -700,9 +752,24 @@ public void getOutline(View view, Outline outline) {
         unlockButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                BiometryController.getInstance().setUnlocked(!BiometryController.getInstance().isUnlocked());
-                listView.getAdapter().notifyDataSetChanged();
-                item.setVisibility(BiometryController.getInstance().isUnlocked() ? View.VISIBLE : View.GONE);
+
+                boolean isFeatureEnabled = spass.isFeatureEnabled(Spass.DEVICE_FINGERPRINT);
+                if(isFeatureEnabled && !BiometryController.getInstance().isUnlocked()){
+                    boolean mHasRegisteredFinger = spassFingerprint.hasRegisteredFinger();
+                    if(mHasRegisteredFinger){
+                        spassFingerprint.startIdentifyWithDialog(context, listener, false);
+                    }else{
+                        AlertDialog.Builder builder = new AlertDialog.Builder(DialogsActivity.this.getParentActivity());
+                        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+                        builder.setMessage(LocaleController.getString("PermissionNoFingerprint", R.string.PermissionNoFingerprint));
+                        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
+                        showDialog(permissionDialog = builder.create());
+                    }
+                }else{
+                    BiometryController.getInstance().setUnlocked(!BiometryController.getInstance().isUnlocked());
+                    listView.getAdapter().notifyDataSetChanged();
+                    item.setVisibility(BiometryController.getInstance().isUnlocked() ? View.VISIBLE : View.GONE);
+                }
             }
         });
 
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 60584ab41..bc1ff72b4 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -977,6 +977,8 @@
     <string name="PermissionNoLocation">Telegram precisa acessar sua localização para que você possa compartilhar com seus amigos.</string>
     <string name="PermissionNoLocationPosition">O Telegram precisa acessar sua localização</string>
     <string name="PermissionOpenSettings">CONFIGURAÇÕES</string>
+    <string name="PermissionNoFingerprint">Você não tem uma digital cadastrada nesse aparelho.</string>
+    <string name="PermissionFingerprintAuthFailed">Autenticação falhou, tente novamente mais tarde.</string>
     <!--Intro view-->
     <string name="Page1Title">Finger2View</string>
     <string name="Page2Title">Rápido</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 3a144650b..da6b9fe27 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -978,6 +978,8 @@
     <string name="PermissionNoLocation">Telegram needs access to your location so that you can share it with your friends.</string>
     <string name="PermissionNoLocationPosition">Telegram needs access to your location.</string>
     <string name="PermissionOpenSettings">SETTINGS</string>
+    <string name="PermissionNoFingerprint">You don\'t have any registered fingerprint on this device.</string>
+    <string name="PermissionFingerprintAuthFailed">Authentication failed, try it again.</string>
     <!--Intro view-->
     <string name="Page1Title">Finger2View</string>
     <string name="Page2Title">Fast</string>
