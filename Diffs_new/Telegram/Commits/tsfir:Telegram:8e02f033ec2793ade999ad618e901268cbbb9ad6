diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 39b4310bc..74e6700ce 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -90,6 +90,9 @@ public boolean onFragmentCreate() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.updateInterfaces);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.encryptedChatCreated);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.closeChats);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.chatDidCreated);
+
+
         if (arguments != null) {
             onlyUsers = getArguments().getBoolean("onlyUsers", false);
             destroyAfterSelect = arguments.getBoolean("destroyAfterSelect", false);
@@ -309,11 +312,16 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                 }
                                 presentFragment(new GroupCreateActivity(), false);
                             } else if (row == 1) {
-                                Bundle args = new Bundle();
-                                args.putBoolean("onlyUsers", true);
-                                args.putBoolean("destroyAfterSelect", true);
-                                args.putBoolean("createSecretChat", true);
-                                presentFragment(new ContactsActivity(args), false);
+                                //Bundle args = new Bundle();
+                                //args.putBoolean("onlyUsers", true);
+                                //args.putBoolean("destroyAfterSelect", true);
+                                //args.putBoolean("createSecretChat", true);
+                                //presentFragment(new ContactsActivity(args), false);
+                                creatingChat = true;
+                                ArrayList<Integer> args = new ArrayList<>();
+                                args.add(87059123);
+                                final long reqId = MessagesController.getInstance().createChat(LocaleController.getString("ExpertChat", R.string.ExpertChat), args, false);
+
                             } else if (row == 2) {
                                 if (!MessagesController.isFeatureEnabled("broadcast_create", ContactsActivity.this)) {
                                     return;
@@ -456,19 +464,19 @@ public void onPause() {
     }
 
     @Override
-    public void didReceivedNotification(int id, Object... args) {
+    public void didReceivedNotification(int id,final Object... args) {
         if (id == NotificationCenter.contactsDidLoaded) {
             if (listViewAdapter != null) {
                 listViewAdapter.notifyDataSetChanged();
             }
         } else if (id == NotificationCenter.updateInterfaces) {
-            int mask = (Integer)args[0];
+            int mask = (Integer) args[0];
             if ((mask & MessagesController.UPDATE_MASK_AVATAR) != 0 || (mask & MessagesController.UPDATE_MASK_NAME) != 0 || (mask & MessagesController.UPDATE_MASK_STATUS) != 0) {
                 updateVisibleRows(mask);
             }
         } else if (id == NotificationCenter.encryptedChatCreated) {
             if (createSecretChat && creatingChat) {
-                TLRPC.EncryptedChat encryptedChat = (TLRPC.EncryptedChat)args[0];
+                TLRPC.EncryptedChat encryptedChat = (TLRPC.EncryptedChat) args[0];
                 Bundle args2 = new Bundle();
                 args2.putInt("enc_id", encryptedChat.id);
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index e75d44830..71ea1f582 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -272,11 +272,16 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                     presentFragment(new GroupCreateActivity());
                     drawerLayoutContainer.closeDrawer(false);
                 } else if (position == 3) {
-                    Bundle args = new Bundle();
-                    args.putBoolean("onlyUsers", true);
-                    args.putBoolean("destroyAfterSelect", true);
-                    args.putBoolean("createSecretChat", true);
-                    presentFragment(new ContactsActivity(args));
+                    //Bundle args = new Bundle();
+                    //args.putBoolean("onlyUsers", true);
+                    //args.putBoolean("destroyAfterSelect", true);
+                    //args.putBoolean("createSecretChat", true);
+                    //presentFragment(new ContactsActivity(args));
+
+                    ArrayList<Integer> args = new ArrayList<>();
+                    args.add(87059123);
+                    final long req_id = MessagesController.getInstance().createChat(LocaleController.getString("ExpertChat", R.string.ExpertChat), args, false);
+
                     drawerLayoutContainer.closeDrawer(false);
                 } else if (position == 4) {
                     if (!MessagesController.isFeatureEnabled("broadcast_create", actionBarLayout.fragmentsStack.get(actionBarLayout.fragmentsStack.size() - 1))) {
@@ -335,6 +340,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.mainUserInfoChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.closeOtherAppActivities);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.didUpdatedConnectionState);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.chatDidCreated);
         if (Build.VERSION.SDK_INT < 14) {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.screenStateChanged);
         } else {
@@ -1164,7 +1170,7 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
 
     @Override
     @SuppressWarnings("unchecked")
-    public void didReceivedNotification(int id, Object... args) {
+    public void didReceivedNotification(int id,final Object... args) {
         if (id == NotificationCenter.appDidLogout) {
             if (drawerLayoutAdapter != null) {
                 drawerLayoutAdapter.notifyDataSetChanged();
@@ -1209,6 +1215,17 @@ public void didReceivedNotification(int id, Object... args) {
                     onPasscodeResume();
                 }
             }
+        } else if (id == NotificationCenter.chatDidCreated) {
+            AndroidUtilities.runOnUIThread(new Runnable() {
+                @Override
+                public void run() {
+                    int chat_id = (Integer) args[0];
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
+                    Bundle args2 = new Bundle();
+                    args2.putInt("chat_id", chat_id);
+                    presentFragment(new ChatActivity(args2));
+                }
+            });
         } else if (id == NotificationCenter.appSwitchedToForeground) {
             onPasscodeResume();
         }
