diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
index 4f12d355f..32804248e 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
@@ -29,6 +29,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.ApplicationLoader;
+import org.telegramkr.core.SoundSearcher;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -1213,7 +1214,7 @@ public void run() {
                     SQLiteCursor cursor = database.queryFinalized("SELECT u.data, u.status, u.name FROM users as u INNER JOIN contacts as c ON u.uid = c.uid");
                     while (cursor.next()) {
                         String name = cursor.stringValue(2);
-                        if (name.startsWith(q) || name.contains(" " + q)) {
+                        if (SoundSearcher.matchString(name, q) || name.startsWith(q) || name.contains(" " + q)) {
                             ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(0));
                             if (data != null && cursor.byteBufferValue(0, data.buffer) != 0) {
                                 TLRPC.User user = (TLRPC.User)TLClassStore.Instance().TLdeserialize(data, data.readInt32());
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/.gitignore b/TMessagesProj/src/main/java/org/telegram/messenger/.gitignore
index bf6b32e25..18e76121f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/.gitignore
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/.gitignore
@@ -1 +1 @@
-BuildVars.java
+!BuildVars.java
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
index e404f06ca..a469d4d20 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsActivitySearchAdapter.java
@@ -20,6 +20,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.Cells.ChatOrUserCell;
+import org.telegramkr.core.SoundSearcher;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -67,59 +68,6 @@ public void run() {
         }
     }
 
-    public static class SoundSearcher {
-        public SoundSearcher() { }
-
-        private static final char HANGUL_BEGIN_UNICODE = 44032;
-        private static final char HANGUL_LAST_UNICODE = 55203;
-        private static final char HANGUL_BASE_UNIT = 588;
-        private static final char[] INITIAL_SOUND = { 'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ' };
-
-        private static boolean isInitialSound(char ichar){
-            for(char c:INITIAL_SOUND){
-                if(c == ichar) return true;
-            }
-            return false;
-        }
-
-        private static char getInitialSound(char c) {
-            int hanBegin = (c - HANGUL_BEGIN_UNICODE);
-            int index = hanBegin / HANGUL_BASE_UNIT;
-            return INITIAL_SOUND[index];
-        }
-
-        private static boolean isKorean(char c) {
-            return HANGUL_BEGIN_UNICODE <= c && c <= HANGUL_LAST_UNICODE;
-        }
-
-        public static boolean matchString(String value, String search){
-            int seof = value.length() - search.length();
-            int slen = search.length();
-            if(seof < 0)
-                return false;
-            for(int i = 0, t = 0;i <= seof;i++){
-                while(t < slen){
-                    if(isInitialSound(search.charAt(t))== true && isKorean(value.charAt(i+t))){
-                        if(getInitialSound(value.charAt(i+t)) == search.charAt(t))
-                            t++;
-                        else
-                            break;
-                    } else {
-                        if(value.charAt(i+t) == search.charAt(t))
-                            t++;
-                        else
-                            break;
-                    }
-                }
-                if(t == slen)
-                    return true;
-
-                t = 0;
-            }
-            return false;
-        }
-    }
-
     private void processSearch(final String query) {
         AndroidUtilities.RunOnUIThread(new Runnable() {
             @Override
diff --git a/TMessagesProj/src/main/java/org/telegramkr/core/SoundSearcher.java b/TMessagesProj/src/main/java/org/telegramkr/core/SoundSearcher.java
new file mode 100644
index 000000000..0a2420287
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegramkr/core/SoundSearcher.java
@@ -0,0 +1,62 @@
+/*
+ * This is the source code of TelegramKr for Android.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright http://www.androidpub.com/45681, 2014.
+ */
+
+package org.telegramkr.core;
+
+public class SoundSearcher {
+        public SoundSearcher() { }
+
+        private static final char HANGUL_BEGIN_UNICODE = 44032;
+        private static final char HANGUL_LAST_UNICODE = 55203;
+        private static final char HANGUL_BASE_UNIT = 588;
+        private static final char[] INITIAL_SOUND = { 'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ' };
+
+        private static boolean isInitialSound(char ichar){
+            for(char c:INITIAL_SOUND){
+                if(c == ichar) return true;
+            }
+            return false;
+        }
+
+        private static char getInitialSound(char c) {
+            int hanBegin = (c - HANGUL_BEGIN_UNICODE);
+            int index = hanBegin / HANGUL_BASE_UNIT;
+            return INITIAL_SOUND[index];
+        }
+
+        private static boolean isKorean(char c) {
+            return HANGUL_BEGIN_UNICODE <= c && c <= HANGUL_LAST_UNICODE;
+        }
+
+        public static boolean matchString(String value, String search){
+            int seof = value.length() - search.length();
+            int slen = search.length();
+            if(seof < 0)
+                return false;
+            for(int i = 0, t = 0;i <= seof;i++){
+                while(t < slen){
+                    if(isInitialSound(search.charAt(t))== true && isKorean(value.charAt(i+t))){
+                        if(getInitialSound(value.charAt(i+t)) == search.charAt(t))
+                            t++;
+                        else
+                            break;
+                    } else {
+                        if(value.charAt(i+t) == search.charAt(t))
+                            t++;
+                        else
+                            break;
+                    }
+                }
+                if(t == slen)
+                    return true;
+
+                t = 0;
+            }
+            return false;
+        }
+    }
