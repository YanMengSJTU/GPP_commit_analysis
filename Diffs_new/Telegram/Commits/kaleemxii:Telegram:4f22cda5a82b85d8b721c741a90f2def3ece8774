diff --git a/TMessagesProj/src/main/java/DataSchema/Admin.java b/TMessagesProj/src/main/java/DataSchema/Admin.java
deleted file mode 100644
index 85fc2458e..000000000
--- a/TMessagesProj/src/main/java/DataSchema/Admin.java
+++ /dev/null
@@ -1,31 +0,0 @@
-package DataSchema;
-
-/**
- * Created by gaukumar on 30-01-2016.
- */
-public class Admin {
-    private String userId;
-
-    private String userTag;
-
-    public String getUserId() {
-        return userId;
-    }
-
-    public void setUserId(String userId) {
-        this.userId = userId;
-    }
-
-    public String getUserTag() {
-        return userTag;
-    }
-
-    public void setUserTag(String userTag) {
-        this.userTag = userTag;
-    }
-
-    @Override
-    public String toString() {
-        return "ChannelInfo [userId = " + userId + ", userTag = " + userTag + "]";
-    }
-}
diff --git a/TMessagesProj/src/main/java/DataSchema/Channel.java b/TMessagesProj/src/main/java/DataSchema/Channel.java
index 3855a7432..4fc496ed4 100644
--- a/TMessagesProj/src/main/java/DataSchema/Channel.java
+++ b/TMessagesProj/src/main/java/DataSchema/Channel.java
@@ -10,7 +10,7 @@
     public Geofence geofence;
     public User admin;
     public String channelID;
-
+    public String channelTag;
     private transient HashMap<Integer, User> usersById;
 
     public Channel(Geofence geofence, User admin, String channelID) {
@@ -20,6 +20,38 @@ public Channel(Geofence geofence, User admin, String channelID) {
         usersById = new HashMap<>();
     }
 
+    public User getAdmin() {
+        return admin;
+    }
+
+    public void setAdmin(User admin) {
+        this.admin = admin;
+    }
+
+    public Geofence getGeofence() {
+        return geofence;
+    }
+
+    public void setGeofence(Geofence geofence) {
+        this.geofence = geofence;
+    }
+
+    public String getChannelID() {
+        return channelID;
+    }
+
+    public void setChannelID(String channelID) {
+        this.channelID = channelID;
+    }
+
+    public String getChannelTag() {
+        return channelTag;
+    }
+
+    public void setChannelTag(String channelTag) {
+        this.channelTag = channelTag;
+    }
+
     public Collection<User> getUsers() {
         return usersById.values();
     }
diff --git a/TMessagesProj/src/main/java/DataSchema/ChannelInfo.java b/TMessagesProj/src/main/java/DataSchema/ChannelInfo.java
deleted file mode 100644
index d1c54ec75..000000000
--- a/TMessagesProj/src/main/java/DataSchema/ChannelInfo.java
+++ /dev/null
@@ -1,53 +0,0 @@
-package DataSchema;
-
-/**
- * Created by gaukumar on 30-01-2016.
- */
-public class ChannelInfo {
-    private Geofence geofence;
-
-    //private User users;
-
-    private Admin admin;
-
-    private String channelID;
-
-    public Geofence getGeofence() {
-        return geofence;
-    }
-
-    public void setGeofence(Geofence geofence) {
-        this.geofence = geofence;
-    }
-
-//    public User getUsers ()
-//    {
-//        return users;
-//    }
-//
-//    public void setUsers (User users)
-//    {
-//        this.users = users;
-//    }
-
-    public Admin getAdmin() {
-        return admin;
-    }
-
-    public void setAdmin(Admin admin) {
-        this.admin = admin;
-    }
-
-    public String getChannelID() {
-        return channelID;
-    }
-
-    public void setChannelID(String channelID) {
-        this.channelID = channelID;
-    }
-
-    @Override
-    public String toString() {
-        return "ChannelInfo [geofence = " + geofence + ", admin = " + admin + ", channelID = " + channelID + "]";
-    }
-}
diff --git a/TMessagesProj/src/main/java/DataSchema/Coordinates.java b/TMessagesProj/src/main/java/DataSchema/Coordinates.java
deleted file mode 100644
index 9be600327..000000000
--- a/TMessagesProj/src/main/java/DataSchema/Coordinates.java
+++ /dev/null
@@ -1,31 +0,0 @@
-package DataSchema;
-
-/**
- * Created by gaukumar on 30-01-2016.
- */
-public class Coordinates {
-    private String longitude;
-
-    private String latitude;
-
-    public String getLongitude() {
-        return longitude;
-    }
-
-    public void setLongitude(String longitude) {
-        this.longitude = longitude;
-    }
-
-    public String getLatitude() {
-        return latitude;
-    }
-
-    public void setLatitude(String latitude) {
-        this.latitude = latitude;
-    }
-
-    @Override
-    public String toString() {
-        return "ChannelInfo [longitude = " + longitude + ", latitude = " + latitude + "]";
-    }
-}
diff --git a/TMessagesProj/src/main/java/DataSchema/GeoCoordinates.java b/TMessagesProj/src/main/java/DataSchema/GeoCoordinates.java
index edf2fbeb2..9dd9dffda 100644
--- a/TMessagesProj/src/main/java/DataSchema/GeoCoordinates.java
+++ b/TMessagesProj/src/main/java/DataSchema/GeoCoordinates.java
@@ -8,4 +8,20 @@ public GeoCoordinates(double latitude, double longitude) {
         this.latitude = latitude;
         this.longitude = longitude;
     }
+
+    public double getLatitude() {
+        return latitude;
+    }
+
+    public void setLatitude(double latitude) {
+        this.latitude = latitude;
+    }
+
+    public double getLongitude() {
+        return longitude;
+    }
+
+    public void setLongitude(double longitude) {
+        this.longitude = longitude;
+    }
 }
diff --git a/TMessagesProj/src/main/java/DataSchema/Geofence.java b/TMessagesProj/src/main/java/DataSchema/Geofence.java
index e6da2ad5f..3f66f7f5c 100644
--- a/TMessagesProj/src/main/java/DataSchema/Geofence.java
+++ b/TMessagesProj/src/main/java/DataSchema/Geofence.java
@@ -23,6 +23,14 @@ public Geofence(List<GeoCoordinates> coordinates) {
         precalc_values();
     }
 
+    public List<GeoCoordinates> getCoordinates() {
+        return coordinates;
+    }
+
+    public void setCoordinates(List<GeoCoordinates> coordinates) {
+        this.coordinates = coordinates;
+    }
+
     private void precalc_values() {
 
         constant = new double[coordinates.size()];
diff --git a/TMessagesProj/src/main/java/DataSchema/ServerResponseData.java b/TMessagesProj/src/main/java/DataSchema/ServerResponseData.java
deleted file mode 100644
index ef8dba5ab..000000000
--- a/TMessagesProj/src/main/java/DataSchema/ServerResponseData.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package DataSchema;
-
-/**
- * Created by gaukumar on 30-01-2016.
- */
-public class ServerResponseData {
-    private ChannelInfo[] channels;
-
-    public ChannelInfo[] getChannels() {
-        return channels;
-    }
-
-    public void setChannels(ChannelInfo[] channels) {
-        this.channels = channels;
-    }
-}
diff --git a/TMessagesProj/src/main/java/DataSchema/User.java b/TMessagesProj/src/main/java/DataSchema/User.java
index 90cfc5da1..6b7ceba4e 100644
--- a/TMessagesProj/src/main/java/DataSchema/User.java
+++ b/TMessagesProj/src/main/java/DataSchema/User.java
@@ -4,16 +4,12 @@
  * Created by shverm on 1/29/2016.
  */
 public class User {
-    private String userId;
+    public int userId;
+    public String userTag;
 
-    private String userTag;
-
-    public String getUserId() {
-        return userId;
-    }
-
-    public void setUserId(String userId) {
+    public User(int userId, String userTag) {
         this.userId = userId;
+        this.userTag = userTag;
     }
 
     public String getUserTag() {
@@ -24,8 +20,11 @@ public void setUserTag(String userTag) {
         this.userTag = userTag;
     }
 
-    @Override
-    public String toString() {
-        return "ChannelInfo [userId = " + userId + ", userTag = " + userTag + "]";
+    public int getUserId() {
+        return userId;
+    }
+
+    public void setUserId(int userId) {
+        this.userId = userId;
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java
index 04eb78197..64f20af70 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java
@@ -17,8 +17,10 @@
 import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
 import org.springframework.web.client.RestTemplate;
 
-import DataSchema.ServerResponseData;
+import java.util.ArrayList;
+import java.util.List;
 
+import DataSchema.Channel;
 /**
  * Created by gaukumar on 30-01-2016.
  */
@@ -143,8 +145,9 @@ public void onLocationChanged(final Location loc)
                 int userId = UserConfig.getClientUserId();
                 restApiUrl = "http://botchaapis.appspot.com/getchannels?userId=2&lat=17.429549&long=78.3411581";
                 //"http://botchaapis.appspot.com/getchannels?userId=1&lat="+loc.getLatitude()+"&long="+loc.getLongitude();
-//                final AsyncTask<Void, Void, ServerResponseData> execute;
-//                execute = new HttpRequestTask().execute();
+                final AsyncTask<Void, Void, List<Channel>> execute;
+                execute = new HttpRequestTask().execute();
+
                 intent.putExtra("Latitude", loc.getLatitude());
                 intent.putExtra("Longitude", loc.getLongitude());
                 intent.putExtra("Provider", loc.getProvider());
@@ -170,15 +173,15 @@ public void onStatusChanged(String provider, int status, Bundle extras)
 
     }
 
-    private class HttpRequestTask extends AsyncTask<Void, Void, ServerResponseData> {
+    private class HttpRequestTask extends AsyncTask<Void, Void, List<Channel>> {
         @Override
-        protected ServerResponseData doInBackground(Void... params) {
+        protected List<Channel> doInBackground(Void... params) {
             try {
                 final String url = restApiUrl;
                 RestTemplate restTemplate = new RestTemplate();
                 restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
-                ServerResponseData greeting = restTemplate.getForObject(url, ServerResponseData.class);
-                return greeting;
+                List<Channel> channles = restTemplate.getForObject(url, ArrayList.class);
+                return channles;
             } catch (Exception e) {
                 Log.e("Http error", e.getMessage(), e);
             }
@@ -187,8 +190,8 @@ protected ServerResponseData doInBackground(Void... params) {
         }
 
         @Override
-        protected void onPostExecute(ServerResponseData greeting) {
-            Toast.makeText(getApplicationContext(), "Id: " + greeting.getChannels()[0].getAdmin(), Toast.LENGTH_SHORT).show();
+        protected void onPostExecute(List<Channel> channels) {
+            Toast.makeText(getApplicationContext(), "Id: " + channels.get(0).getAdmin(), Toast.LENGTH_SHORT).show();
         }
 
     }
