diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java
index 7d4eb8eb7..9dea077bb 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/object/PostObject.java
@@ -5,6 +5,8 @@
 import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.dto.Post;
 
+import java.util.List;
+
 
 /**
  * Created by aragats on 27/12/14.
@@ -70,6 +72,16 @@ public String getAddress() {
         return this.post.getVenue().getAddress();
     }
 
+    public List<Double> getCoordinates() {
+//        return this.post.getCoordinates().getCoordinates();
+        return this.post.getVenue().getCoordinates().getCoordinates();
+    }
+
+
+    public VenueObject getVenueObject(){
+        return new VenueObject(this.post.getVenue());
+    }
+
     @Deprecated
     public Post getPost() {
         return post;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index 4a8b84b08..23750754b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -48,13 +48,14 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ContactsController;
 import org.telegram.android.LocaleController;
-import org.telegram.android.MessageObject;
 import org.telegram.android.MessagesController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
+import org.telegram.messenger.object.PostObject;
+import org.telegram.messenger.object.VenueObject;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -66,6 +67,7 @@
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.MapPlaceholderDrawable;
+import org.telegram.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -77,6 +79,7 @@
     private GoogleMap googleMap;
     private TextView distanceTextView;
     private BackupImageView avatarImageView;
+    //TODO leave it. name of user under the map
     private TextView nameTextView;
     private MapView mapView;
     private FrameLayout mapViewClip;
@@ -100,7 +103,7 @@
     private Location userLocation;
     private int markerTop;
 
-    private MessageObject messageObject;
+    private PostObject postObject;
     private boolean userLocationMoved = false;
     private boolean firstWas = false;
     private CircleOptions circleOptions;
@@ -120,7 +123,7 @@
 
     @Override
     public boolean needAddActionBar() {
-        return messageObject != null;
+        return postObject != null;
     }
 
     @Override
@@ -128,7 +131,7 @@ public boolean onFragmentCreate() {
         super.onFragmentCreate();
         swipeBackEnabled = false;
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.closeChats);
-        if (messageObject != null) {
+        if (postObject != null) {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.updateInterfaces);
         }
         return true;
@@ -177,8 +180,9 @@ public void onItemClick(int id) {
                     }
                 } else if (id == share) {
                     try {
-                        double lat = messageObject.messageOwner.media.geo.lat;
-                        double lon = messageObject.messageOwner.media.geo._long;
+                        List<Double> coordinates = postObject.getCoordinates();
+                        double lat = coordinates.get(1);
+                        double lon = coordinates.get(0);
                         getParentActivity().startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("geo:" + lat + "," + lon + "?q=" + lat + "," + lon)));
                     } catch (Exception e) {
                         FileLog.e("tmessages", e);
@@ -188,11 +192,12 @@ public void onItemClick(int id) {
         });
 
         ActionBarMenu menu = actionBar.createMenu();
-        if (messageObject != null) {
-            if (messageObject.messageOwner.media.title != null && messageObject.messageOwner.media.title.length() > 0) {
-                actionBar.setTitle(messageObject.messageOwner.media.title);
-                if (messageObject.messageOwner.media.address != null && messageObject.messageOwner.media.address.length() > 0) {
-                    actionBar.setSubtitle(messageObject.messageOwner.media.address);
+        if (postObject != null) {
+            VenueObject venue = postObject.getVenueObject();
+            if (venue != null && !StringUtils.isEmpty(venue.getName())) {
+                actionBar.setTitle(venue.getName());
+                if (!StringUtils.isEmpty(venue.getAddress())) {
+                    actionBar.setSubtitle(venue.getAddress());
                 }
             } else {
                 actionBar.setTitle(LocaleController.getString("ChatLocation", R.string.ChatLocation));
@@ -275,7 +280,7 @@ public void getOutline(View view, Outline outline) {
             });
         }
 
-        if (messageObject != null) {
+        if (postObject != null) {
             mapView = new MapView(context);
             frameLayout.setBackgroundDrawable(new MapPlaceholderDrawable());
             mapView.onCreate(null);
@@ -325,9 +330,10 @@ public void onClick(View view) {
             distanceTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
             bottomView.addView(distanceTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT), LocaleController.isRTL ? 12 : 72, 33, LocaleController.isRTL ? 72 : 12, 0));
 
+            List<Double> coordinates = postObject.getCoordinates();
             userLocation = new Location("network");
-            userLocation.setLatitude(messageObject.messageOwner.media.geo.lat);
-            userLocation.setLongitude(messageObject.messageOwner.media.geo._long);
+            userLocation.setLatitude(coordinates.get(1));
+            userLocation.setLongitude(coordinates.get(0));
             if (googleMap != null) {
                 LatLng latLng = new LatLng(userLocation.getLatitude(), userLocation.getLongitude());
                 try {
@@ -361,7 +367,8 @@ public void getOutline(View view, Outline outline) {
                 public void onClick(View v) {
                     if (myLocation != null) {
                         try {
-                            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Locale.US, "http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f", myLocation.getLatitude(), myLocation.getLongitude(), messageObject.messageOwner.media.geo.lat, messageObject.messageOwner.media.geo._long)));
+                            List<Double> coordinates = postObject.getCoordinates();
+                            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Locale.US, "http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f", myLocation.getLatitude(), myLocation.getLongitude(), coordinates.get(1), coordinates.get(0))));
                             getParentActivity().startActivity(intent);
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
@@ -747,19 +754,16 @@ private Location getLastLocation() {
     }
 
     private void updateUserData() {
-        if (messageObject != null && avatarImageView != null) {
-            int fromId = messageObject.messageOwner.from_id;
-            if (messageObject.isForwarded()) {
-                fromId = messageObject.messageOwner.fwd_from_id;
-            }
-            TLRPC.User user = MessagesController.getInstance().getUser(fromId);
+        if (postObject != null && avatarImageView != null) {
+           //TODO location is from user. below photo and name.
+            Object user = null;
             if (user != null) {
-                TLRPC.FileLocation photo = null;
-                if (user.photo != null) {
-                    photo = user.photo.photo_small;
-                }
-                avatarImageView.setImage(photo, null, new AvatarDrawable(user));
-                nameTextView.setText(ContactsController.formatName(user.first_name, user.last_name));
+//                TLRPC.FileLocation photo = null;
+//                if (user.photo != null) {
+//                    photo = user.photo.photo_small;
+//                }
+//                avatarImageView.setImage(photo, null, new AvatarDrawable(user));
+//                nameTextView.setText(ContactsController.formatName(user.first_name, user.last_name));
             } else {
                 avatarImageView.setImageDrawable(null);
             }
@@ -771,7 +775,7 @@ private void positionMarker(Location location) {
             return;
         }
         myLocation = new Location(location);
-        if (messageObject != null) {
+        if (postObject != null) {
             if (userLocation != null && distanceTextView != null) {
                 float distance = location.distanceTo(userLocation);
                 if (distance < 1000) {
@@ -800,8 +804,8 @@ private void positionMarker(Location location) {
         }
     }
 
-    public void setMessageObject(MessageObject message) {
-        messageObject = message;
+    public void setPostObject(PostObject post) {
+        postObject = post;
     }
 
     @Override
