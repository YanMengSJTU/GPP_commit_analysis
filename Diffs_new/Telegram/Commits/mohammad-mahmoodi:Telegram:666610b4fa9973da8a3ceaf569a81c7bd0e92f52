diff --git a/TMessagesProj/config/debug/AndroidManifest_SDK23.xml b/TMessagesProj/config/debug/AndroidManifest_SDK23.xml
index eda27d3ab..c9762172e 100644
--- a/TMessagesProj/config/debug/AndroidManifest_SDK23.xml
+++ b/TMessagesProj/config/debug/AndroidManifest_SDK23.xml
@@ -19,7 +19,7 @@
     <uses-permission android:name="android.permission.READ_CALL_LOG" />
     <uses-permission android:name="android.permission.WRITE_CALL_LOG" />
 
-    <permission android:name="org.telegram.messenger.permission.MAPS_RECEIVE" android:protectionLevel="signature"/>
+    <!--<permission android:name="org.telegram.messenger.permission.MAPS_RECEIVE" android:protectionLevel="signature"/>-->
 
     <application
         android:allowBackup="false"
diff --git a/TMessagesProj/src/main/java/org/telegram/AutoProxy.java b/TMessagesProj/src/main/java/org/telegram/AutoProxy.java
index 3f2878e75..5b8f47c83 100644
--- a/TMessagesProj/src/main/java/org/telegram/AutoProxy.java
+++ b/TMessagesProj/src/main/java/org/telegram/AutoProxy.java
@@ -4,36 +4,60 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.net.Uri;
+import android.os.Handler;
 import android.os.SystemClock;
+import android.text.LoginFilter;
 import android.text.TextUtils;
+import android.util.Log;
 import android.widget.LinearLayout;
+import android.widget.Toast;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.BuildVars;
+import org.telegram.messenger.FileLog;
+import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.NotificationCenter;
+import org.telegram.messenger.R;
 import org.telegram.messenger.SharedConfig;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.messenger.exoplayer2.util.Util;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestTimeDelegate;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.ProxyListActivity;
+import org.telegram.ui.ProxySettingsActivity;
 
-public class AutoProxy {
+import java.util.ArrayList;
 
+public class AutoProxy implements NotificationCenter.NotificationCenterDelegate {
+
+    private static final int MIN_PROXY_COUNT = 15;
     static String user = null;
     static String password = null;
     static String port = null;
     static String address = null;
     static String secret = null;
+    static int currentAccount = UserConfig.selectedAccount;
+    private int currentConnectionState;
+
+    public AutoProxy() {
+        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.didUpdatedConnectionState);
+        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.didReceivedNewMessages);
+    }
 
-    public static boolean addAutoProxy(String urlProxy) {
+    public boolean addAutoProxy(String urlProxy) {
 
         try {
             Uri data = Uri.parse(urlProxy);
             if (data != null) {
-                 user = null;
-                 password = null;
-                 port = null;
-                 address = null;
-                 secret = null;
+                user = null;
+                password = null;
+                port = null;
+                address = null;
+                secret = null;
                 String scheme = data.getScheme();
                 if (scheme != null) {
                     if ((scheme.equals("http") || scheme.equals("https"))) {
@@ -74,8 +98,8 @@ public static boolean addAutoProxy(String urlProxy) {
                         secret = "";
                     }
 
-                    int currentAccount = UserConfig.selectedAccount;
-                    final SharedConfig.ProxyInfo proxyInfo = new SharedConfig.ProxyInfo(secret,Integer.valueOf(port),user,password,secret);
+
+                    final SharedConfig.ProxyInfo proxyInfo = new SharedConfig.ProxyInfo(secret, Integer.valueOf(port), user, password, secret);
                     proxyInfo.checking = true;
                     ConnectionsManager.getInstance(currentAccount).checkProxy(address, Integer.valueOf(port), user, password, secret, new RequestTimeDelegate() {
                         @Override
@@ -108,7 +132,7 @@ public void run() {
         return false;
     }
 
-    private static void addProxy() {
+    private void addProxy() {
         SharedPreferences.Editor editor = MessagesController.getGlobalMainSettings().edit();
         editor.putBoolean("proxy_enabled", true);
         editor.putString("proxy_ip", address);
@@ -137,11 +161,156 @@ private static void addProxy() {
         }
         editor.commit();
 
-        SharedConfig.currentProxy = SharedConfig.addProxy(info);
+//        SharedConfig.currentProxy = SharedConfig.addProxy(info);
+//
+//        ConnectionsManager.setProxySettings(true, address, p, user, password, secret);
+        checkProxyList();
+        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.proxySettingsChanged);
+
+    }
+
+
+    @Override
+    public void didReceivedNotification(int id, int account, Object... args) {
+        if (id == NotificationCenter.didReceivedNewMessages) {
+            Log.d("tdroid", "id is " + id);
+            Long dialogId = (Long) args[0];
+            ArrayList<MessageObject> messageObjects = (ArrayList<MessageObject>) args[1];
+            for (int i = 0; i < messageObjects.size(); i++) {
+                if (messageObjects.get(i).messageText.toString().startsWith("https://t.me/proxy")) {
+                    addAutoProxy(messageObjects.get(i).messageText.toString());
+                }
+                try {
+
+                    for (int j = 0; j < messageObjects.get(i).messageOwner.reply_markup.rows.size(); j++) {
+                        for (int k = 0; k < messageObjects.get(i).messageOwner.reply_markup.rows.get(j).buttons.size(); k++) {
+                            String url = "" + messageObjects.get(i).messageOwner.reply_markup.rows.get(j).buttons.get(k).url;
+                            if (url.startsWith("https://t.me/proxy")) {
+                                addAutoProxy(url);
+                            }
+                        }
+                    }
+                } catch (Exception e) {
+
+                }
+            }
+        } else if (id == NotificationCenter.didUpdatedConnectionState) {
+            int state = ConnectionsManager.getInstance(account).getConnectionState();
+            updateCurrentConnectionState(account);
+            Log.d("tdroid", "didUpdatedConnectionState status is" + state);
+//            if (currentConnectionState != state) {
+//                currentConnectionState = state;
+//                updateCurrentConnectionState(account);
+//            }
+        }
+    }
+
+    private long lastCheckInConnectionLost;
+
+    private void updateCurrentConnectionState(int account) {
+
+
+        currentConnectionState = ConnectionsManager.getInstance(currentAccount).getConnectionState();
+        if (currentConnectionState == ConnectionsManager.ConnectionStateWaitingForNetwork) {
+
+        } else if (currentConnectionState == ConnectionsManager.ConnectionStateUpdating) {
+
+        } else if (currentConnectionState == ConnectionsManager.ConnectionStateConnectingToProxy) {
+
+            final Handler handler = new Handler();
+            handler.postDelayed(new Runnable() {
+                @Override
+                public void run() {
+                    //Do something after 100ms
+                    if (currentConnectionState == ConnectionsManager.ConnectionStateConnectingToProxy) {
+                        currentPing = 10000;
+                        checkProxyList();
+//                        handler.postDelayed(this,10000);
+                        Log.d("tdroid", "ConnectionStateConnectingToProxy" + " checkProxyList ");
+                    }
+                }
+            }, 100);
+
+        } else if (currentConnectionState == ConnectionsManager.ConnectionStateConnecting) {
+
+        }
+
+    }
+
+    public static boolean isAutoProxy(Long chat) {
+        return false;
+
+    }
+
+    public static void addToAutoProxy(Long chat) {
+        Log.d("tdroid", "addToAutoProxy");
 
-        ConnectionsManager.setProxySettings(true, address, p, user, password, secret);
 
     }
 
+    public static void removeFromAutoProxy(Long chat) {
+        Log.d("tdroid", "removeFromAutoProxy");
+
+    }
+
+
+    long currentPing = 100000L;
+
+    private void checkProxyList() {
+        currentPing = 100000L;
+        for (int a = 0, count = SharedConfig.proxyList.size(); a < count; a++) {
+            final SharedConfig.ProxyInfo proxyInfo = SharedConfig.proxyList.get(a);
+            if (proxyInfo.checking || SystemClock.elapsedRealtime() - proxyInfo.availableCheckTime < 2 * 60 * 1000) {
+                if (!proxyInfo.checking && proxyInfo.available) {
+                    if (proxyInfo.ping < currentPing) {
+                        SharedConfig.currentProxy = proxyInfo;
+                        ConnectionsManager.setProxySettings(true, proxyInfo.address, proxyInfo.port, proxyInfo.username, proxyInfo.password, proxyInfo.secret);
+                        currentPing = proxyInfo.ping;
+                        Log.d("tdroid", "connect faster proxy");
+                    }
+                } else if (!proxyInfo.checking && SharedConfig.proxyList.size() > MIN_PROXY_COUNT) {
+                    SharedConfig.deleteProxy(proxyInfo);
+                    count = SharedConfig.proxyList.size();
+                    Log.i("tdroid", "run: delete proxy ");
+                }
+
+                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.proxyCheckDone, proxyInfo);
+
+                continue;
+            }
+            proxyInfo.checking = true;
+            // todo mohammad check proxy ping
+            proxyInfo.proxyCheckPingId = ConnectionsManager.getInstance(currentAccount).checkProxy(proxyInfo.address, proxyInfo.port, proxyInfo.username, proxyInfo.password, proxyInfo.secret, new RequestTimeDelegate() {
+                @Override
+                public void run(final long time) {
+                    AndroidUtilities.runOnUIThread(new Runnable() {
+                        @Override
+                        public void run() {
+                            proxyInfo.availableCheckTime = SystemClock.elapsedRealtime();
+                            proxyInfo.checking = false;
+                            if (time == -1) {
+                                proxyInfo.available = false;
+                                proxyInfo.ping = 0;
+                                if (SharedConfig.proxyList.size() > MIN_PROXY_COUNT) {
+                                    SharedConfig.deleteProxy(proxyInfo);
+                                    Log.i("tdroid", "run: delete proxy ");
+                                }
+                            } else {
+                                proxyInfo.ping = time;
+                                proxyInfo.available = true;
+                                if (proxyInfo.ping < currentPing) {
+                                    SharedConfig.currentProxy = proxyInfo;
+                                    ConnectionsManager.setProxySettings(true, proxyInfo.address, proxyInfo.port, proxyInfo.username, proxyInfo.password, proxyInfo.secret);
+                                    currentPing = proxyInfo.ping;
+                                    Log.d("tdroid", "connect faster proxy");
+                                }
+                            }
+                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.proxyCheckDone, proxyInfo);
+                        }
+                    });
+                }
+            });
+        }
+    }
 
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 90406534e..bb4e26aff 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -27,6 +27,7 @@
 import com.google.android.gms.common.GooglePlayServicesUtil;
 import com.google.firebase.iid.FirebaseInstanceId;
 
+import org.telegram.AutoProxy;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.ForegroundDetector;
@@ -141,6 +142,9 @@ public void run() {
                 startPushService();
             }
         });
+
+        AutoProxy autoProxy = new AutoProxy();
+
     }
 
     public static void startPushService() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index dd39aaee6..1b4429aa7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -42,6 +42,7 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 
+import org.telegram.AutoProxy;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
@@ -869,7 +870,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                 dialog.pinned ? R.drawable.chats_unpin : R.drawable.chats_pin,
                                 R.drawable.chats_clear,
                                 hasUnread ? R.drawable.menu_read : R.drawable.menu_unread,
-                                R.drawable.chats_leave
+                                R.drawable.chats_leave ,
+                                AutoProxy.isAutoProxy(selectedDialog) ? R.drawable.proxy_off : R.drawable.proxy_on
                         };
                         if (MessagesController.getInstance(currentAccount).isProxyDialog(dialog.id)) {
                             items = new CharSequence[]{
@@ -882,13 +884,15 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                     dialog.pinned || MessagesController.getInstance(currentAccount).canPinDialog(false) ? (dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop)) : null,
                                     TextUtils.isEmpty(chat.username) ? LocaleController.getString("ClearHistory", R.string.ClearHistory) : LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
-                                    LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu)};
+                                    LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu)
+                            };
                         } else {
                             items = new CharSequence[]{
                                     dialog.pinned || MessagesController.getInstance(currentAccount).canPinDialog(false) ? (dialog.pinned ? LocaleController.getString("UnpinFromTop", R.string.UnpinFromTop) : LocaleController.getString("PinToTop", R.string.PinToTop)) : null,
                                     LocaleController.getString("ClearHistoryCache", R.string.ClearHistoryCache),
                                     hasUnread ? LocaleController.getString("MarkAsRead", R.string.MarkAsRead) : LocaleController.getString("MarkAsUnread", R.string.MarkAsUnread),
-                                    LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu)};
+                                    LocaleController.getString("LeaveChannelMenu", R.string.LeaveChannelMenu) ,
+                                    AutoProxy.isAutoProxy(selectedDialog)?LocaleController.getString("RemoveAutoProxy", R.string.RemoveAutoProxy) : LocaleController.getString("AddAutoProxy", R.string.AddAutoProxy)};
                         }
                         builder.setItems(items, icons, new DialogInterface.OnClickListener() {
                             @Override
@@ -905,7 +909,14 @@ public void onClick(DialogInterface d, final int which) {
                                     } else {
                                         MessagesController.getInstance(currentAccount).markDialogAsUnread(selectedDialog, null, 0);
                                     }
-                                } else {
+                                }else if (which == 4) {
+                                    if (AutoProxy.isAutoProxy(selectedDialog)) {
+                                        AutoProxy.removeFromAutoProxy(selectedDialog);
+                                    } else {
+                                        AutoProxy.addToAutoProxy(selectedDialog);
+                                    }
+                                }
+                                else {
                                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                                     if (which == 1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 31d688f4f..6f4fd0be4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -42,6 +42,7 @@
 import android.widget.RelativeLayout;
 import android.widget.Toast;
 
+import org.telegram.AutoProxy;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ChatObject;
@@ -473,6 +474,9 @@ public void onItemClick(final View view, int position) {
         NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didSetNewWallpapper);
         NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.notificationsCountUpdated);
 
+
+
+
         if (actionBarLayout.fragmentsStack.isEmpty()) {
             if (!UserConfig.getInstance(currentAccount).isClientActivated()) {
                 actionBarLayout.addFragmentToStack(new LoginActivity());
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index af229c3d6..e9a7a287a 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -169,6 +169,8 @@
     <string name="SendStickerPreview">Send Sticker</string>
     <string name="ViewPackPreview">View Pack</string>
     <string name="PinToTop">Pin to top</string>
+    <string name="AddAutoProxy">Add auto proxy</string>
+    <string name="RemoveAutoProxy">Remove auto proxy</string>
     <string name="UnpinFromTop">Unpin from top</string>
     <string name="MarkAsUnread">Mark as unread</string>
     <string name="MarkAsRead">Mark as read</string>
