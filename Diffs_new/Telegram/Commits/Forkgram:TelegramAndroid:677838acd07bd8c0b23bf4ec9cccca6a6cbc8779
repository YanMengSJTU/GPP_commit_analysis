diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 7d3af271c..a4760f4f5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -8086,11 +8086,13 @@ public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskI
                     newTaskId = taskId;
                 }
 
-                getConnectionsManager().sendRequest(req, (response, error) -> {
-                    if (newTaskId != 0) {
-                        getMessagesStorage().removePendingTask(newTaskId);
-                    }
-                });
+                if (mainPreferences.getBoolean("syncPins", true)) {
+                    getConnectionsManager().sendRequest(req, (response, error) -> {
+                        if (newTaskId != 0) {
+                            getMessagesStorage().removePendingTask(newTaskId);
+                        }
+                    });
+                }
             }
         }
         getMessagesStorage().setDialogPinned(did, dialog.pinnedNum);
@@ -8098,6 +8100,9 @@ public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskI
     }
 
     public void loadPinnedDialogs(final int folderId, final long newDialogId, final ArrayList<Long> order) {
+        if (!mainPreferences.getBoolean("syncPins", true)) {
+            return;
+        }
         if (loadingPinnedDialogs.indexOfKey(folderId) >= 0 || getUserConfig().isPinnedDialogsLoaded(folderId)) {
             return;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index fe75560c2..ab641cc30 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -2182,8 +2182,12 @@ private void perfromSelectedDialogsAction(int action, boolean alert) {
                     newPinnedCount++;
                 }
             }
+
+            SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+            boolean syncPins = preferences.getBoolean("syncPins", true);
+
             int maxPinnedCount;
-            if (folderId != 0) {
+            if (folderId != 0 || !syncPins) {
                 maxPinnedCount = getMessagesController().maxFolderPinnedDialogsCount;
             } else {
                 maxPinnedCount = getMessagesController().maxPinnedDialogsCount;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
index e184e02cf..81023bda8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForkSettingsActivity.java
@@ -48,6 +48,7 @@
     private int rearVideoMessages;
 
     private int emptyRow;
+    private int syncPinsRow;
 
     @Override
     public boolean onFragmentCreate() {
@@ -62,9 +63,24 @@ public boolean onFragmentCreate() {
         unmutedOnTopRow = rowCount++;
         rearVideoMessages = rowCount++;
 
+        emptyRow = rowCount++;
+        syncPinsRow = rowCount++;
+
         return true;
     }
 
+    public boolean toggleGlobalMainSetting(String option, View view, boolean byDefault) {
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        boolean optionBool = preferences.getBoolean(option, byDefault);
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putBoolean(option, !optionBool);
+        editor.commit();
+        if (view instanceof TextCheckCell) {
+            ((TextCheckCell) view).setChecked(!optionBool);
+        }
+        return !optionBool;
+    }
+
     @Override
     public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -103,14 +119,7 @@ public boolean supportsPredictiveItemAnimations() {
         frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
         listView.setOnItemClickListener((view, position, x, y) -> {
             if (position == squareAvatarsRow) {
-                SharedPreferences preferences = MessagesController.getGlobalMainSettings();
-                boolean squareAvatars = preferences.getBoolean("squareAvatars", true);
-                SharedPreferences.Editor editor = preferences.edit();
-                editor.putBoolean("squareAvatars", !squareAvatars);
-                editor.commit();
-                if (view instanceof TextCheckCell) {
-                    ((TextCheckCell) view).setChecked(!squareAvatars);
-                }
+                toggleGlobalMainSetting("squareAvatars", view, false);
             } else if (position == inappCameraRow) {
                 SharedConfig.toggleInappCamera();
                 if (view instanceof TextCheckCell) {
@@ -126,6 +135,8 @@ public boolean supportsPredictiveItemAnimations() {
                 MessagesController.getInstance(currentAccount).sortDialogs(null);
             } else if (position == rearVideoMessages) {
                 toggleGlobalMainSetting("rearVideoMessages", view, false);
+            } else if (position == syncPinsRow) {
+                toggleGlobalMainSetting("syncPins", view, true);
             }
         });
 
@@ -166,7 +177,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     if (position == squareAvatarsRow) {
                         String t = LocaleController.getString("SquareAvatars", R.string.SquareAvatars);
                         String info = LocaleController.getString("SquareAvatarsInfo", R.string.SquareAvatarsInfo);
-                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("squareAvatars", true), false, false);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("squareAvatars", false), false, false);
                     } else if (position == inappCameraRow) {
                         String t = LocaleController.getString("InAppCamera", R.string.InAppCamera);
                         String info = LocaleController.getString("InAppCameraInfo", R.string.InAppCameraInfo);
@@ -182,6 +193,10 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     } else if (position == rearVideoMessages) {
                         String t = LocaleController.getString("RearVideoMessages", R.string.RearVideoMessages);
                         textCell.setTextAndCheck(t, preferences.getBoolean("rearVideoMessages", false), false);
+                    } else if (position == syncPinsRow) {
+                        String t = LocaleController.getString("SyncPins", R.string.SyncPins);
+                        String info = LocaleController.getString("SyncPinsInfo", R.string.SyncPinsInfo);
+                        textCell.setTextAndValueAndCheck(t, info, preferences.getBoolean("syncPins", true), true, false);
                     }
                     break;
                 }
@@ -202,6 +217,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                         || position == inappCameraRow
                         || position == unmutedOnTopRow
                         || position == rearVideoMessages
+                        || position == syncPinsRow
                         || position == photoHasStickerRow;
             return fork;
         }
@@ -247,6 +263,7 @@ public int getItemViewType(int position) {
             } else if (position == squareAvatarsRow
                 || position == inappCameraRow
                 || position == unmutedOnTopRow
+                || position == syncPinsRow
                 || position == rearVideoMessages
                 || position == photoHasStickerRow) {
                 return 3;
