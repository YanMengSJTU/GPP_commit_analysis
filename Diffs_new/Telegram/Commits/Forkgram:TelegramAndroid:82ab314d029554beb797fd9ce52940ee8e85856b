diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java
index 59de24883..bb882cb47 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShareDialogCell.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Cells;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.graphics.Canvas;
 import android.os.SystemClock;
 import android.text.TextUtils;
@@ -168,10 +169,20 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
 
     @Override
     protected void onDraw(Canvas canvas) {
+        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+        final boolean squareAvatars = preferences.getBoolean("squareAvatars", true);
+
         int cx = imageView.getLeft() + imageView.getMeasuredWidth() / 2;
         int cy = imageView.getTop() + imageView.getMeasuredHeight() / 2;
         Theme.checkboxSquare_checkPaint.setColor(Theme.getColor(Theme.key_dialogRoundCheckBox));
         Theme.checkboxSquare_checkPaint.setAlpha((int) (checkBox.getProgress() * 255));
-        canvas.drawCircle(cx, cy, AndroidUtilities.dp(28), Theme.checkboxSquare_checkPaint);
+
+        int dp = AndroidUtilities.dp(28);
+
+        if (squareAvatars) {
+            canvas.drawRect(cx - dp, cy - dp, cx + dp, cy + dp, Theme.checkboxSquare_checkPaint);
+        } else {
+            canvas.drawCircle(cx, cy, AndroidUtilities.dp(28), Theme.checkboxSquare_checkPaint);
+        }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
index 984ca2804..a147e4889 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
@@ -76,10 +76,14 @@
 
 public class ShareAlert extends BottomSheet implements NotificationCenter.NotificationCenterDelegate {
 
+    private int sizeButton = 46;
+
     private FrameLayout frameLayout;
     private FrameLayout frameLayout2;
     private EditTextEmoji commentTextView;
     private FrameLayout writeButtonContainer;
+    private FrameLayout anonymButtonContainer;
+    private FrameLayout nonTextButtonContainer;
     private View selectedCountView;
     private TextView pickerBottomLayout;
     private AnimatorSet animatorSet;
@@ -639,13 +643,26 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
         editText.setSingleLine(true);
         frameLayout2.addView(commentTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 0, 0, 84, 0));
 
+        Runnable withSendingText = () -> {
+            for (int a = 0; a < selectedDialogs.size(); a++) {
+                long key = selectedDialogs.keyAt(a);
+                if (frameLayout2.getTag() != null && commentTextView.length() > 0) {
+                    SendMessagesHelper.getInstance(currentAccount).sendMessage(commentTextView.getText().toString(), key, null, null, true, null, null, null);
+                }
+                SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingText, key, null, null, true, null, null, null);
+            }
+        };
+
+        int size = 50;
+        int offset = 12;
+
         writeButtonContainer = new FrameLayout(context);
         writeButtonContainer.setVisibility(View.INVISIBLE);
         writeButtonContainer.setScaleX(0.2f);
         writeButtonContainer.setScaleY(0.2f);
         writeButtonContainer.setAlpha(0.0f);
         writeButtonContainer.setContentDescription(LocaleController.getString("Send", R.string.Send));
-        containerView.addView(writeButtonContainer, LayoutHelper.createFrame(60, 60, Gravity.RIGHT | Gravity.BOTTOM, 0, 0, 6, 10));
+        containerView.addView(writeButtonContainer, LayoutHelper.createFrame(size, size, Gravity.RIGHT | Gravity.BOTTOM, 0, 0, offset, 10));
         writeButtonContainer.setOnClickListener(v -> {
             if (sendingMessageObjects != null) {
                 for (int a = 0; a < selectedDialogs.size(); a++) {
@@ -656,40 +673,76 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingMessageObjects, key);
                 }
             } else if (sendingText != null) {
+                withSendingText.run();
+            }
+            dismiss();
+        });
+
+        writeButtonContainer.addView(createButton(R.drawable.attach_send, context), LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? sizeButton : size, Build.VERSION.SDK_INT >= 21 ? sizeButton : size, Gravity.LEFT | Gravity.TOP, Build.VERSION.SDK_INT >= 21 ? 2 : 0, 0, 0, 0));
+
+        // ANONYM FORWARD BUTTON.
+        anonymButtonContainer = new FrameLayout(context);
+        anonymButtonContainer.setVisibility(View.INVISIBLE);
+        anonymButtonContainer.setScaleX(0.2f);
+        anonymButtonContainer.setScaleY(0.2f);
+        anonymButtonContainer.setAlpha(0.0f);
+        anonymButtonContainer.setContentDescription(LocaleController.getString("Send", R.string.Send));
+        containerView.addView(anonymButtonContainer, LayoutHelper.createFrame(size, size, Gravity.RIGHT | Gravity.BOTTOM, 0, 0, size + offset * 2, 10));
+        anonymButtonContainer.setOnClickListener(v -> {
+            if (sendingMessageObjects != null) {
                 for (int a = 0; a < selectedDialogs.size(); a++) {
                     long key = selectedDialogs.keyAt(a);
                     if (frameLayout2.getTag() != null && commentTextView.length() > 0) {
                         SendMessagesHelper.getInstance(currentAccount).sendMessage(commentTextView.getText().toString(), key, null, null, true, null, null, null);
                     }
-                    SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingText, key, null, null, true, null, null, null);
+                    for (MessageObject msg : sendingMessageObjects) {
+                        SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(msg, key);
+                    }
                 }
+            } else if (sendingText != null) {
+                withSendingText.run();
             }
             dismiss();
         });
 
-        ImageView writeButton = new ImageView(context);
-        Drawable drawable = Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(56), Theme.getColor(Theme.key_dialogFloatingButton), Theme.getColor(Theme.key_dialogFloatingButtonPressed));
-        if (Build.VERSION.SDK_INT < 21) {
-            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
-            shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000, PorterDuff.Mode.MULTIPLY));
-            CombinedDrawable combinedDrawable = new CombinedDrawable(shadowDrawable, drawable, 0, 0);
-            combinedDrawable.setIconSize(AndroidUtilities.dp(56), AndroidUtilities.dp(56));
-            drawable = combinedDrawable;
-        }
-        writeButton.setBackgroundDrawable(drawable);
-        writeButton.setImageResource(R.drawable.attach_send);
-        writeButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogFloatingIcon), PorterDuff.Mode.MULTIPLY));
-        writeButton.setScaleType(ImageView.ScaleType.CENTER);
-        if (Build.VERSION.SDK_INT >= 21) {
-            writeButton.setOutlineProvider(new ViewOutlineProvider() {
-                @SuppressLint("NewApi")
-                @Override
-                public void getOutline(View view, Outline outline) {
-                    outline.setOval(0, 0, AndroidUtilities.dp(56), AndroidUtilities.dp(56));
+        anonymButtonContainer.addView(createButton(R.drawable.anon_forward, context), LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? sizeButton : size, Build.VERSION.SDK_INT >= 21 ? sizeButton : size, Gravity.LEFT | Gravity.TOP, Build.VERSION.SDK_INT >= 21 ? 2 : 0, 0, 0, 0));
+        
+        // ANONYM FORWARD WITHOUT TEXT BUTTON.
+        nonTextButtonContainer = new FrameLayout(context);
+        nonTextButtonContainer.setVisibility(View.INVISIBLE);
+        nonTextButtonContainer.setScaleX(0.2f);
+        nonTextButtonContainer.setScaleY(0.2f);
+        nonTextButtonContainer.setAlpha(0.0f);
+        nonTextButtonContainer.setContentDescription(LocaleController.getString("Send", R.string.Send));
+        containerView.addView(nonTextButtonContainer, LayoutHelper.createFrame(size, size, Gravity.RIGHT | Gravity.BOTTOM, 0, 0, size * 2 + offset * 3, 10));
+        nonTextButtonContainer.setOnClickListener(v -> {
+            if (sendingMessageObjects != null) {
+                for (int a = 0; a < selectedDialogs.size(); a++) {
+                    long key = selectedDialogs.keyAt(a);
+
+                    if (frameLayout2.getTag() != null && commentTextView.length() > 0) {
+                        sendingMessageObjects.get(0).messageOwner.message = commentTextView.getText().toString();
+                        SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(sendingMessageObjects.get(0), key);
+                        sendingMessageObjects.remove(0);
+                    }
+
+                    for (MessageObject msg : sendingMessageObjects) {
+                        if (msg.messageOwner.media != null) {
+                            if (msg.messageOwner.media.photo instanceof TLRPC.TL_photo
+                            || msg.messageOwner.media.document instanceof TLRPC.TL_document) {
+                                msg.messageOwner.message = "";
+                            }
+                        }
+                        SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(msg, key);
+                    }
                 }
-            });
-        }
-        writeButtonContainer.addView(writeButton, LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60, Build.VERSION.SDK_INT >= 21 ? 56 : 60, Gravity.LEFT | Gravity.TOP, Build.VERSION.SDK_INT >= 21 ? 2 : 0, 0, 0, 0));
+            } else if (sendingText != null) {
+                withSendingText.run();
+            }
+            dismiss();
+        });
+
+        nonTextButtonContainer.addView(createButton(R.drawable.nontext_forward, context), LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? sizeButton : size, Build.VERSION.SDK_INT >= 21 ? sizeButton : size, Gravity.LEFT | Gravity.TOP, Build.VERSION.SDK_INT >= 21 ? 2 : 0, 0, 0, 0));
 
         textPaint.setTextSize(AndroidUtilities.dp(12));
         textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
@@ -732,6 +785,32 @@ protected void onDraw(Canvas canvas) {
         }
     }
 
+    private ImageView createButton(int resId, Context context) {
+        ImageView writeButton = new ImageView(context);
+        Drawable drawable = Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(sizeButton), Theme.getColor(Theme.key_dialogFloatingButton), Theme.getColor(Theme.key_dialogFloatingButtonPressed));
+        if (Build.VERSION.SDK_INT < 21) {
+            Drawable shadowDrawable = context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();
+            shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000, PorterDuff.Mode.MULTIPLY));
+            CombinedDrawable combinedDrawable = new CombinedDrawable(shadowDrawable, drawable, 0, 0);
+            combinedDrawable.setIconSize(AndroidUtilities.dp(sizeButton), AndroidUtilities.dp(sizeButton));
+            drawable = combinedDrawable;
+        }
+        writeButton.setBackgroundDrawable(drawable);
+        writeButton.setImageResource(resId);
+        writeButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogFloatingIcon), PorterDuff.Mode.MULTIPLY));
+        writeButton.setScaleType(ImageView.ScaleType.CENTER);
+        if (Build.VERSION.SDK_INT >= 21) {
+            writeButton.setOutlineProvider(new ViewOutlineProvider() {
+                @SuppressLint("NewApi")
+                @Override
+                public void getOutline(View view, Outline outline) {
+                    outline.setOval(0, 0, AndroidUtilities.dp(sizeButton), AndroidUtilities.dp(sizeButton));
+                }
+            });
+        }
+        return writeButton;
+    }
+
     private int getCurrentTop() {
         if (gridView.getChildCount() != 0) {
             View child = gridView.getChildAt(0);
@@ -865,6 +944,8 @@ private boolean showCommentTextView(final boolean show) {
         if (show) {
             frameLayout2.setVisibility(View.VISIBLE);
             writeButtonContainer.setVisibility(View.VISIBLE);
+            anonymButtonContainer.setVisibility(View.VISIBLE);
+            nonTextButtonContainer.setVisibility(View.VISIBLE);
         }
         animatorSet = new AnimatorSet();
         ArrayList<Animator> animators = new ArrayList<>();
@@ -872,6 +953,12 @@ private boolean showCommentTextView(final boolean show) {
         animators.add(ObjectAnimator.ofFloat(writeButtonContainer, View.SCALE_X, show ? 1.0f : 0.2f));
         animators.add(ObjectAnimator.ofFloat(writeButtonContainer, View.SCALE_Y, show ? 1.0f : 0.2f));
         animators.add(ObjectAnimator.ofFloat(writeButtonContainer, View.ALPHA, show ? 1.0f : 0.0f));
+        animators.add(ObjectAnimator.ofFloat(anonymButtonContainer, View.SCALE_X, show ? 1.0f : 0.2f));
+        animators.add(ObjectAnimator.ofFloat(anonymButtonContainer, View.SCALE_Y, show ? 1.0f : 0.2f));
+        animators.add(ObjectAnimator.ofFloat(anonymButtonContainer, View.ALPHA, show ? 1.0f : 0.0f));
+        animators.add(ObjectAnimator.ofFloat(nonTextButtonContainer, View.SCALE_X, show ? 1.0f : 0.2f));
+        animators.add(ObjectAnimator.ofFloat(nonTextButtonContainer, View.SCALE_Y, show ? 1.0f : 0.2f));
+        animators.add(ObjectAnimator.ofFloat(nonTextButtonContainer, View.ALPHA, show ? 1.0f : 0.0f));
         animators.add(ObjectAnimator.ofFloat(selectedCountView, View.SCALE_X, show ? 1.0f : 0.2f));
         animators.add(ObjectAnimator.ofFloat(selectedCountView, View.SCALE_Y, show ? 1.0f : 0.2f));
         animators.add(ObjectAnimator.ofFloat(selectedCountView, View.ALPHA, show ? 1.0f : 0.0f));
@@ -889,6 +976,8 @@ public void onAnimationEnd(Animator animation) {
                     if (!show) {
                         frameLayout2.setVisibility(View.INVISIBLE);
                         writeButtonContainer.setVisibility(View.INVISIBLE);
+                        anonymButtonContainer.setVisibility(View.INVISIBLE);
+                        nonTextButtonContainer.setVisibility(View.INVISIBLE);
                     }
                     animatorSet = null;
                 }
@@ -1017,7 +1106,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                 case 1:
                 default: {
                     view = new View(context);
-                    view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(56)));
+                    view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(sizeButton)));
                     break;
                 }
             }
@@ -1349,7 +1438,7 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                 case 1:
                 default: {
                     view = new View(context);
-                    view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(56)));
+                    view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, AndroidUtilities.dp(sizeButton)));
                     break;
                 }
             }
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/anon_forward.png b/TMessagesProj/src/main/res/drawable-hdpi/anon_forward.png
new file mode 100644
index 000000000..5deb056df
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/anon_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/empty_text.png b/TMessagesProj/src/main/res/drawable-hdpi/empty_text.png
new file mode 100644
index 000000000..a2b469d19
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/nontext_forward.png b/TMessagesProj/src/main/res/drawable-hdpi/nontext_forward.png
new file mode 100644
index 000000000..db23e506c
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/nontext_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/anon_forward.png b/TMessagesProj/src/main/res/drawable-mdpi/anon_forward.png
new file mode 100644
index 000000000..29aa652cc
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/anon_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/empty_text.png b/TMessagesProj/src/main/res/drawable-mdpi/empty_text.png
new file mode 100644
index 000000000..23b493acf
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/nontext_forward.png b/TMessagesProj/src/main/res/drawable-mdpi/nontext_forward.png
new file mode 100644
index 000000000..bd9c0342a
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/nontext_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/anon_forward.png b/TMessagesProj/src/main/res/drawable-xhdpi/anon_forward.png
new file mode 100644
index 000000000..fd06abe5d
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/anon_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/empty_text.png b/TMessagesProj/src/main/res/drawable-xhdpi/empty_text.png
new file mode 100644
index 000000000..efb6b4146
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/nontext_forward.png b/TMessagesProj/src/main/res/drawable-xhdpi/nontext_forward.png
new file mode 100644
index 000000000..ff84e0f99
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/nontext_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/anon_forward.png b/TMessagesProj/src/main/res/drawable-xxhdpi/anon_forward.png
new file mode 100644
index 000000000..da6e2ffe3
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/anon_forward.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/empty_text.png b/TMessagesProj/src/main/res/drawable-xxhdpi/empty_text.png
new file mode 100644
index 000000000..7fe5d8bb5
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/nontext_forward.png b/TMessagesProj/src/main/res/drawable-xxhdpi/nontext_forward.png
new file mode 100644
index 000000000..17c5c65d7
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/nontext_forward.png differ
