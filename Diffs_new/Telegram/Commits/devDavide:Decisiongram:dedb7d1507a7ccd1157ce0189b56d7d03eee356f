diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index e2e465bb7..e3b655c80 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -128,6 +128,11 @@
             android:theme="@style/Theme.TMessages.PopupNotification"
             android:windowSoftInputMode="adjustResize|stateHidden">
         </activity>
+        <activity
+            android:name=".decision.ui.CrashManagerActivity"
+            android:label="@string/title_activity_crash_manager_activty"
+            android:theme="@style/Theme.Transparent">
+        </activity>
 
         <receiver android:name="org.telegram.messenger.AutoMessageHeardReceiver">
             <intent-filter>
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/CrashManagerActivity.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/CrashManagerActivity.java
new file mode 100644
index 000000000..464b702eb
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/CrashManagerActivity.java
@@ -0,0 +1,135 @@
+package org.pollgram.decision.ui;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.widget.Toast;
+
+import org.pollgram.R;
+
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStreamReader;
+
+public class CrashManagerActivity extends Activity {
+
+    public static final String PAR_ERROR_MESSAGE = "PAR_ERROR_MESSAGE";
+    public static final String PAR_FULL_STACKTRACE = "PAR_FULL_STACKTRACE";
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        final String errorMsg = getIntent().getExtras().getString(PAR_ERROR_MESSAGE);
+        final StringBuilder msgBody = new StringBuilder();
+        msgBody.append(getIntent().getExtras().getString(PAR_FULL_STACKTRACE));
+
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(CrashManagerActivity.this);
+        builder.setMessage(getString(R.string.appCrashedMessage));
+        builder.setPositiveButton(R.string.sendCrashEmail, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+
+                String logAttachmentFile;
+                try {
+                    logAttachmentFile = extractLogToFile();
+                } catch (Exception e) {
+                    logAttachmentFile = null;
+                    msgBody.append('\n');
+                    msgBody.append("Error in retreving log:"+ e.getMessage());
+                }
+
+                Intent i = new Intent(Intent.ACTION_SEND);
+                i.setType("message/rfc822");
+                i.putExtra(Intent.EXTRA_EMAIL, new String[]{"davide.pallaoro@gmail.com"});
+                i.putExtra(Intent.EXTRA_SUBJECT, "Pollgram crash report");
+                i.putExtra(Intent.EXTRA_TEXT, "Error:" + msgBody.toString());
+                if (logAttachmentFile != null)
+                    i.putExtra (Intent.EXTRA_STREAM, Uri.parse("file://" + logAttachmentFile));
+
+                try {
+                    startActivity(Intent.createChooser(i, "Send crash report email..."));
+                    Log.d("Crash", "Send email activity started");
+                } catch (android.content.ActivityNotFoundException e) {
+                    Toast.makeText(CrashManagerActivity.this, "There are no email clients installed.", Toast.LENGTH_SHORT).show();
+                }
+                Log.e("Crash", "Application will ends due to a crash");
+                ///System.exit(1); // ???
+            }
+        }).show();
+
+    }
+
+    private String extractLogToFile() throws PackageManager.NameNotFoundException {
+        PackageManager manager = this.getPackageManager();
+        PackageInfo info = manager.getPackageInfo(this.getPackageName(), 0);
+        String model = Build.MODEL;
+        if (!model.startsWith(Build.MANUFACTURER))
+            model = Build.MANUFACTURER + " " + model;
+
+        // Make file name - file must be saved to external storage or it wont be readable by
+        // the email app.
+        String path = Environment.getExternalStorageDirectory() + "/" + "MyApp/";
+        String fullName = path + "crash.log";
+
+        // Extract to file.
+        File file = new File(fullName);
+        InputStreamReader reader = null;
+        FileWriter writer = null;
+        try {
+            // For Android 4.0 and earlier, you will get all app's log output, so filter it to
+            // mostly limit it to your app's output.  In later versions, the filtering isn't needed.
+            String cmd = (Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) ?
+                    "logcat -d -v time MyApp:v dalvikvm:v System.err:v *:s" :
+                    "logcat -d -v time";
+
+            // get input stream
+            Process process = Runtime.getRuntime().exec(cmd);
+            reader = new InputStreamReader(process.getInputStream());
+
+            // write output stream
+            writer = new FileWriter(file);
+            writer.write("Android version: " + Build.VERSION.SDK_INT + "\n");
+            writer.write("Device: " + model + "\n");
+            writer.write("App version: " + (info == null ? "(null)" : info.versionCode) + "\n");
+
+            char[] buffer = new char[10000];
+            do {
+                int n = reader.read(buffer, 0, buffer.length);
+                if (n == -1)
+                    break;
+                writer.write(buffer, 0, n);
+            } while (true);
+
+            reader.close();
+            writer.close();
+        } catch (IOException e) {
+            if (writer != null)
+                try {
+                    writer.close();
+                } catch (IOException e1) {
+                }
+            if (reader != null)
+                try {
+                    reader.close();
+                } catch (IOException e1) {
+                }
+
+            // You might want to write a failure message to the log here.
+            return null;
+        }
+
+        return fullName;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index 29d8afe93..54fe2b4d0 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -4,6 +4,7 @@
 import android.animation.StateListAnimator;
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.content.Intent;
 import android.graphics.Outline;
 import android.os.Build;
 import android.os.Bundle;
@@ -16,6 +17,7 @@
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import org.pollgram.R;
 import org.pollgram.decision.adapter.DecisionAdapter;
@@ -48,6 +50,8 @@
     private static final int ID_TOGGLE_OPEN_CLOSE_DECISIONS = nextId++;
     private static final int ID_PURGE_ALL_DATA = nextId++;
     private static final int ID_PUT_STUB_DATA_DATA = nextId++;
+    private static final int ID_SUICIDE = nextId++;
+    private static final int ID_SEND_EMAIL = nextId++;
 
     private Context context;
     private TLRPC.ChatFull chatInfo;
@@ -92,6 +96,8 @@ public View createView(final Context context) {
                 context.getString(hideCloseDecision ? R.string.viewCloseDecision : R.string.hideCloseDecision),0 );
         headerItem.addSubItem(ID_PURGE_ALL_DATA, "Remove current chat decisions", 0);
         headerItem.addSubItem(ID_PUT_STUB_DATA_DATA, "Put stub data for current chat", 0);
+        headerItem.addSubItem(ID_SUICIDE , "Do not press this button", 0);
+        headerItem.addSubItem(ID_SEND_EMAIL , "Contact me", 0);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
@@ -104,13 +110,25 @@ public void onItemClick(int id) {
                         viewOpenCloseTextView.setText(R.string.viewCloseDecision);
                     else
                         viewOpenCloseTextView.setText(R.string.hideCloseDecision);
-                } else if (id == ID_PURGE_ALL_DATA){
+                } else if (id == ID_PURGE_ALL_DATA) {
                     List<Decision> allDecisions = pollgramDAO.getDecisions(chatInfo.id, null);
-                    for (Decision d : allDecisions){
+                    for (Decision d : allDecisions) {
                         pollgramDAO.delete(d);
                     }
-                } else if (id == ID_PUT_STUB_DATA_DATA){
+                } else if (id == ID_PUT_STUB_DATA_DATA) {
                     pollgramDAO.putStubData(currentChat.id, UserConfig.getCurrentUser().id);
+                } else if (id == ID_SUICIDE){
+                    throw new RuntimeException("Goodbye cruel world");
+                } else if (id == ID_SEND_EMAIL){
+                    Intent i = new Intent(Intent.ACTION_SEND);
+                    i.setType("message/rfc822");
+                    i.putExtra(Intent.EXTRA_EMAIL  , new String[]{"davide.pallaoro@gmail.com"});
+                    i.putExtra(Intent.EXTRA_SUBJECT, "Pollgram contact me");
+                    try {
+                        getParentActivity().startActivity(Intent.createChooser(i, "Send mail..."));
+                    } catch (android.content.ActivityNotFoundException e) {
+                        Toast.makeText(getParentActivity(), "There are no email clients installed.", Toast.LENGTH_SHORT).show();
+                    }
                 }
                 updateResult();
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index a9d55d29b..98814f484 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -44,37 +44,40 @@
 import android.widget.RelativeLayout;
 import android.widget.Toast;
 
-import org.telegram.messenger.AndroidUtilities;
+import org.pollgram.R;
+import org.pollgram.decision.ui.CrashManagerActivity;
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ContactsController;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageLoader;
+import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NativeCrashManager;
+import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.SendMessagesHelper;
+import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.query.StickersQuery;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.NotificationCenter;
-import org.pollgram.R;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.UserConfig;
-import org.telegram.ui.Adapters.DrawerLayoutAdapter;
 import org.telegram.ui.ActionBar.ActionBarLayout;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.DrawerLayoutContainer;
+import org.telegram.ui.Adapters.DrawerLayoutAdapter;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PasscodeView;
 
 import java.io.BufferedReader;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.io.PrintWriter;
+import java.io.StringWriter;
 import java.util.ArrayList;
 import java.util.Map;
 
@@ -119,6 +122,27 @@ protected void onCreate(Bundle savedInstanceState) {
         ApplicationLoader.postInitApplication();
         NativeCrashManager.handleDumpFiles(this);
 
+        //TODO fix
+        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
+            @Override
+            public void uncaughtException(Thread thread, final Throwable ex) {
+                Intent intent = new Intent(LaunchActivity.this, CrashManagerActivity.class);
+                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); // required when starting from Application1
+                Bundle bundle = new Bundle();
+
+                StringWriter sw = new StringWriter();
+                PrintWriter pw = new PrintWriter(sw);
+                ex.printStackTrace(pw);
+
+                intent.putExtra(CrashManagerActivity.PAR_FULL_STACKTRACE, sw.toString());
+                intent.putExtra(CrashManagerActivity.PAR_ERROR_MESSAGE, ex.getMessage());
+                startActivity(intent);
+                System.exit(1);
+            }
+        });
+
+
+
         if (!UserConfig.isClientActivated()) {
             Intent intent = getIntent();
             if (intent != null && intent.getAction() != null && (Intent.ACTION_SEND.equals(intent.getAction()) || intent.getAction().equals(Intent.ACTION_SEND_MULTIPLE))) {
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index ef6482dff..1c9d1ccd8 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1171,4 +1171,7 @@
     <!--update text-->
     <string name="updateText">Telegram per Android si è aggiornato. Nuovo nella versione 3.4.0:\n\nRivoluzione GIF: Invio e download 20 volte più veloci, autoriproduci e salva le tue preferite nel pannello sticker.\n\nPiù info sulle GIF:\nhttps://telegram.org/blog/gif-revolution\n\nBot Inline: Un nuovo modo di aggiungere contenuti in ogni chat. Menziona un bot e la tua domanda nel campo di scrittura e ottieni risultati immediati. Prova a scrivere “@gif dog” nella tua prossima chat. Bot di esempio: @gif, @wiki, @bing, @vid, @bold\n\nPiù info sui Bot Inline:\nhttps://telegram.org/blog/inline-bots</string>
     <string name="updateBuild">704</string>
+    <string name="appCrashedMessage">Oh cazzo! L\'applicazione è andata in crash :-( Inviami una segnalazione del crash via email in modo che possa sistemare il tutto in men che non si dica. Grazie </string>
+    <string name="sendCrashEmail">Invia sengalazione via eMail</string>
+
 </resources>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 1916a0c6f..8c043d3ee 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1172,4 +1172,10 @@
     <!--update text-->
     <string name="updateText">Telegram for Android has been updated. New in version 3.4.0:\n\nGIF revolution: up to 20x faster downloading/sending, autoplay, save GIFs to a dedicated tab on the sticker panel.\n\nMore about GIFs:\nhttps://telegram.org/blog/gif-revolution\n\nInline bots: A new way to add bot content to any chat. Type a bot\'s username and your query in the text field to get instant results and send them to your chat partner. Try typing “@gif dog” in your next chat. Sample bots: @gif, @wiki, @bing, @vid, @bold.\n\nMore about inline bots:\nhttps://telegram.org/blog/inline-bots</string>
     <string name="updateBuild">704</string>
+    <string name="appCrashedMessage">Oh shit ! The app crashed :-( Please send me the crash info by email, so i can fix the problem as soon a spossible. Thanks you.</string>
+    <string name="sendCrashEmail">Send Crash info by Email</string>
+    <string name="title_activity_crash_manager_activty">CrashManagerActivty</string>
+
+    <string name="hello_world">Hello world!</string>
+    <string name="action_settings">Settings</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values/styles.xml b/TMessagesProj/src/main/res/values/styles.xml
index 444570aed..f433d6bcf 100644
--- a/TMessagesProj/src/main/res/values/styles.xml
+++ b/TMessagesProj/src/main/res/values/styles.xml
@@ -77,4 +77,15 @@
         <item name="android:windowExitAnimation">@anim/no_animation</item>
     </style>
 
+    <!--FOR TRANSPARENT ACTIVITY-->
+
+    <style name="Theme.Transparent" parent="android:Theme">
+        <item name="android:windowIsTranslucent">true</item>
+        <item name="android:windowBackground">@android:color/transparent</item>
+        <item name="android:windowContentOverlay">@null</item>
+        <item name="android:windowNoTitle">true</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:backgroundDimEnabled">false</item>
+    </style>
+
 </resources>
