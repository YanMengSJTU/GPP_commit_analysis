diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
index 29c324e28..d0d50f40d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
@@ -13,20 +13,26 @@
 import android.graphics.Paint;
 import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
+import android.text.Layout;
 import android.text.StaticLayout;
 import android.text.TextPaint;
+import android.text.TextUtils;
+import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.SoundEffectConstants;
+import android.view.View;
+import android.widget.ImageView;
+import android.widget.Toast;
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ImageReceiver;
 import org.telegram.android.MediaController;
 import org.telegram.android.MessageObject;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.TLRPC;
+import org.telegram.messenger.R;
 import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.object.PostObject;
 import org.telegram.ui.Components.AvatarDrawable;
+import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RadialProgress;
 import org.telegram.ui.Components.ResourceLoader;
 
@@ -77,6 +83,8 @@
     ///
 
 
+    private boolean buttonPressed = false;
+
     private static TextPaint infoPaint;
     private static MessageObject lastDownloadedGifMessage = null;
     private static TextPaint namePaint;
@@ -85,14 +93,7 @@
 
     private int photoWidth;
     private int photoHeight;
-    private TLRPC.PhotoSize currentPhotoObject;
-    private TLRPC.PhotoSize currentPhotoObjectThumb;
-    private String currentUrl;
-    private String currentPhotoFilter;
     private ImageReceiver photoImage;
-    private boolean photoNotSet = false;
-    private boolean cancelLoading = false;
-    private int additionHeight;
 
     private boolean allowedToSetPhoto = true;
 
@@ -128,11 +129,6 @@ public PostMediaCell(Context context) {
             namePaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
             namePaint.setColor(0xff212121);
             namePaint.setTextSize(AndroidUtilities.dp(16));
-
-//            backgroundMediaDrawableOutSelected = getResources().getDrawable(org.telegram.messenger.R.drawable.msg_out_photo_selected);
-//            backgroundMediaDrawableOut = getResources().getDrawable(org.telegram.messenger.R.drawable.msg_out_photo);
-
-
         }
 
         TAG = MediaController.getInstance().generateObserverTag();
@@ -180,33 +176,49 @@ public boolean onTouchEvent(MotionEvent event) {
         int side = AndroidUtilities.dp(48);
         if (event.getAction() == MotionEvent.ACTION_DOWN) {
             if (delegate == null || delegate.canPerformActions()) {
-                if (x >= photoImage.getImageX() && x <= photoImage.getImageX() + backgroundWidth && y >= photoImage.getImageY() && y <= photoImage.getImageY() + photoImage.getImageHeight()) {
-                    imagePressed = true;
+
+                if (x >= buttonX && x <= buttonX + side && y >= buttonY && y <= buttonY + side) {
+                    buttonPressed = true;
+                    invalidate();
                     result = true;
                 } else {
-                    //TODO it is my//
-                    otherPressed = true;
-                }
-                if (result) {
-                    startCheckLongPress();
+                    if (x >= photoImage.getImageX() && x <= photoImage.getImageX() + backgroundWidth && y >= photoImage.getImageY() && y <= photoImage.getImageY() + photoImage.getImageHeight()) {
+                        imagePressed = true;
+                        result = true;
+                    } else {
+                        //TODO it is my//
+                        otherPressed = true;
+                    }
+                    if (result) {
+                        startCheckLongPress();
+                    }
                 }
             }
             //TODO my
-        } else if (event.getAction() == MotionEvent.ACTION_UP) {
-            imagePressed = false;
-            playSoundEffect(SoundEffectConstants.CLICK);
-            didClickedImage();
-            invalidate();
         } else {
             if (event.getAction() != MotionEvent.ACTION_MOVE) {
                 cancelCheckLongPress();
             }
-            if (imagePressed) {
+            if (buttonPressed) {
+                if (event.getAction() == MotionEvent.ACTION_UP) {
+                    buttonPressed = false;
+                    playSoundEffect(SoundEffectConstants.CLICK);
+                    didPressedButton(false);
+                    invalidate();
+                } else if (event.getAction() == MotionEvent.ACTION_CANCEL) {
+                    buttonPressed = false;
+                    invalidate();
+                } else if (event.getAction() == MotionEvent.ACTION_MOVE) {
+                    if (!(x >= buttonX && x <= buttonX + side && y >= buttonY && y <= buttonY + side)) {
+                        buttonPressed = false;
+                        invalidate();
+                    }
+                }
+            } else if (imagePressed) {
                 if (event.getAction() == MotionEvent.ACTION_UP) {
                     imagePressed = false;
                     playSoundEffect(SoundEffectConstants.CLICK);
                     didClickedImage();
-
                     invalidate();
                 } else if (event.getAction() == MotionEvent.ACTION_CANCEL) {
                     imagePressed = false;
@@ -235,6 +247,7 @@ public boolean onTouchEvent(MotionEvent event) {
 //                    }
                 }
             }
+//            }
         }
         if (!result) {
             result = super.onTouchEvent(event);
@@ -243,21 +256,38 @@ public boolean onTouchEvent(MotionEvent event) {
         return result;
     }
 
+
+    //Drawable for delete icon
+    private Drawable getDrawableForCurrentState() {
+        return ResourceLoader.buttonStatesDrawables[4];
+
+    }
+
     private void didClickedImage() {
-        if (this.delegate != null) {
-            this.delegate.didClickedImage(this);
-        }
+//        if (this.delegate != null) {
+//            this.delegate.didClickedImage(this);
+//        }
     }
 
 
     private void didPressedButton(boolean animated) {
+        if (this.delegate != null) {
+            this.delegate.didPressedCancelSendButton(this);
+        }
 
     }
 
 
-    //TODO-aragats old method from PostMediaOld.
+    //TODO-aragats-old old method from PostMediaOld.
     public void setPostObject(PostObject postObjectObject) {
 
+
+//        currentInfoString = "INFO";
+//        infoWidth = 50;
+//        CharSequence str2 = TextUtils.ellipsize(currentInfoString, infoPaint, infoWidth, TextUtils.TruncateAt.END);
+//        infoLayout = new StaticLayout(str2, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+
+
         this.postObject = postObjectObject;
         if (this.postObject != null) {
 //            updateSecretTimeText();
@@ -335,352 +365,6 @@ public void setPostObject(PostObject postObjectObject) {
 
     }
 
-
-//    @Override
-//    public void setPostObject(PostObject postObject) {
-//        boolean dataChanged = postObject == postObject ;
-//        if (postObject != postObject) {
-//            currentPhotoObject = null;
-//            currentPhotoObjectThumb = null;
-//            currentUrl = null;
-//            photoNotSet = false;
-//            drawBackground = true;
-//
-//            photoImage.setForcePreview(postObject.isSecretPhoto());
-//            if (postObject.type == 9) {
-//                String name = postObject.getDocumentName();
-//                if (name == null || name.length() == 0) {
-//                    name = LocaleController.getString("AttachDocument", R.string.AttachDocument);
-//                }
-//                int maxWidth;
-//                if (AndroidUtilities.isTablet()) {
-//                    maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(122 + 86 + 24);
-//                } else {
-//                    maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(122 + 86 + 24);
-//                }
-//                if (currentNameString == null || !currentNameString.equals(name)) {
-//                    currentNameString = name;
-//                    nameLayout = StaticLayoutEx.createStaticLayout(currentNameString, namePaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth, 1);
-//                    if (nameLayout.getLineCount() > 0) {
-//                        nameWidth = Math.min(maxWidth, (int) Math.ceil(nameLayout.getLineWidth(0)));
-//                    } else {
-//                        nameWidth = maxWidth;
-//                    }
-//                }
-//
-//                String fileName = postObject.getFileName();
-//                int idx = fileName.lastIndexOf(".");
-//                String ext = null;
-//                if (idx != -1) {
-//                    ext = fileName.substring(idx + 1);
-//                }
-//                if (ext == null || ext.length() == 0) {
-//                    ext = postObject.messageOwner.media.document.mime_type;
-//                }
-//                ext = ext.toUpperCase();
-//
-//                String str = AndroidUtilities.formatFileSize(postObject.messageOwner.media.document.size) + " " + ext;
-//
-//                if (currentInfoString == null || !currentInfoString.equals(str)) {
-//                    currentInfoString = str;
-//                    infoOffset = 0;
-//                    infoWidth = Math.min(maxWidth, (int) Math.ceil(infoPaint.measureText(currentInfoString)));
-//                    CharSequence str2 = TextUtils.ellipsize(currentInfoString, infoPaint, infoWidth, TextUtils.TruncateAt.END);
-//                    infoLayout = new StaticLayout(str2, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
-//                }
-//            } else if (postObject.type == 8) {
-//                gifDrawable = MediaController.getInstance().getGifDrawable(this, false);
-//
-//                String str = AndroidUtilities.formatFileSize(postObject.messageOwner.media.document.size);
-//                if (currentInfoString == null || !currentInfoString.equals(str)) {
-//                    currentInfoString = str;
-//                    infoOffset = 0;
-//                    infoWidth = (int) Math.ceil(infoPaint.measureText(currentInfoString));
-//                    infoLayout = new StaticLayout(currentInfoString, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
-//                }
-//                nameLayout = null;
-//                currentNameString = null;
-//            } else if (postObject.type == 3) {
-//                int duration = postObject.messageOwner.media.video.duration;
-//                int minutes = duration / 60;
-//                int seconds = duration - minutes * 60;
-//                String str = String.format("%d:%02d, %s", minutes, seconds, AndroidUtilities.formatFileSize(postObject.messageOwner.media.video.size));
-//                if (currentInfoString == null || !currentInfoString.equals(str)) {
-//                    currentInfoString = str;
-//                    infoOffset = ResourceLoader.videoIconDrawable.getIntrinsicWidth() + AndroidUtilities.dp(4);
-//                    infoWidth = (int) Math.ceil(infoPaint.measureText(currentInfoString));
-//                    infoLayout = new StaticLayout(currentInfoString, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
-//                }
-//                nameLayout = null;
-//                currentNameString = null;
-//            } else {
-//                currentInfoString = null;
-//                currentNameString = null;
-//                infoLayout = null;
-//                nameLayout = null;
-//                updateSecretTimeText();
-//            }
-//            if (postObject.type == 9) { //doc
-//                photoWidth = AndroidUtilities.dp(86);
-//                photoHeight = AndroidUtilities.dp(86);
-//                backgroundWidth = photoWidth + Math.max(nameWidth, infoWidth) + AndroidUtilities.dp(68);
-//                currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(postObject.photoThumbs, AndroidUtilities.getPhotoSize());
-//                photoImage.setNeedsQualityThumb(true);
-//                photoImage.setShouldGenerateQualityThumb(true);
-//                photoImage.setParentMessageObject(postObject);
-//                if (currentPhotoObject != null) {
-//                    currentPhotoFilter = String.format(Locale.US, "%d_%d_b", photoWidth, photoHeight);
-//                    photoImage.setImage(null, null, null, null, currentPhotoObject.location, currentPhotoFilter, 0, null, true);
-//                } else {
-//                    photoImage.setImageBitmap((BitmapDrawable) null);
-//                }
-//            } else if (postObject.type == 4) { //geo
-//                double lat = postObject.messageOwner.media.geo.lat;
-//                double lon = postObject.messageOwner.media.geo._long;
-//
-//                if (postObject.messageOwner.media.title != null && postObject.messageOwner.media.title.length() > 0) {
-//                    int maxWidth = (AndroidUtilities.isTablet() ? AndroidUtilities.getMinTabletSide() : Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) - AndroidUtilities.dp((isChat && !postObject.isOut() ? 102 : 40) + 86 + 24);
-//                    nameLayout = StaticLayoutEx.createStaticLayout(postObject.messageOwner.media.title, locationTitlePaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth - AndroidUtilities.dp(4), 3);
-//                    int lineCount = nameLayout.getLineCount();
-//                    if (postObject.messageOwner.media.address != null && postObject.messageOwner.media.address.length() > 0) {
-//                        infoLayout = StaticLayoutEx.createStaticLayout(postObject.messageOwner.media.address, locationAddressPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth - AndroidUtilities.dp(4), Math.min(3, 4 - lineCount));
-//                    } else {
-//                        infoLayout = null;
-//                    }
-//
-//                    media = false;
-//                    measureTime(postObject);
-//                    photoWidth = AndroidUtilities.dp(86);
-//                    photoHeight = AndroidUtilities.dp(86);
-//                    maxWidth = timeWidth + AndroidUtilities.dp(postObject.isOut() ? 29 : 9);
-//                    for (int a = 0; a < lineCount; a++) {
-//                        maxWidth = (int) Math.max(maxWidth, nameLayout.getLineWidth(a) + AndroidUtilities.dp(16));
-//                    }
-//                    if (infoLayout != null) {
-//                        for (int a = 0; a < infoLayout.getLineCount(); a++) {
-//                            maxWidth = (int) Math.max(maxWidth, infoLayout.getLineWidth(a) + AndroidUtilities.dp(16));
-//                        }
-//                    }
-//                    backgroundWidth = photoWidth + AndroidUtilities.dp(21) + maxWidth;
-//                    currentUrl = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=13&size=72x72&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
-//                } else {
-//                    photoWidth = AndroidUtilities.dp(200);
-//                    photoHeight = AndroidUtilities.dp(100);
-//                    backgroundWidth = photoWidth + AndroidUtilities.dp(12);
-//                    currentUrl = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=13&size=200x100&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
-//                }
-//
-//                photoImage.setNeedsQualityThumb(false);
-//                photoImage.setShouldGenerateQualityThumb(false);
-//                photoImage.setParentMessageObject(null);
-//                photoImage.setImage(currentUrl, null, postObject.isOut() ? ResourceLoader.geoOutDrawable : ResourceLoader.geoInDrawable, null, 0);
-//            } else if (postObject.type == 13) { //webp
-//                drawBackground = false;
-//                for (TLRPC.DocumentAttribute attribute : postObject.messageOwner.media.document.attributes) {
-//                    if (attribute instanceof TLRPC.TL_documentAttributeImageSize) {
-//                        photoWidth = attribute.w;
-//                        photoHeight = attribute.h;
-//                        break;
-//                    }
-//                }
-//                float maxHeight = AndroidUtilities.displaySize.y * 0.4f;
-//                float maxWidth;
-//                if (AndroidUtilities.isTablet()) {
-//                    maxWidth = AndroidUtilities.getMinTabletSide() * 0.5f;
-//                } else {
-//                    maxWidth = AndroidUtilities.displaySize.x * 0.5f;
-//                }
-//                if (photoWidth == 0) {
-//                    photoHeight = (int) maxHeight;
-//                    photoWidth = photoHeight + AndroidUtilities.dp(100);
-//                }
-//                if (photoHeight > maxHeight) {
-//                    photoWidth *= maxHeight / photoHeight;
-//                    photoHeight = (int) maxHeight;
-//                }
-//                if (photoWidth > maxWidth) {
-//                    photoHeight *= maxWidth / photoWidth;
-//                    photoWidth = (int) maxWidth;
-//                }
-//                backgroundWidth = photoWidth + AndroidUtilities.dp(12);
-//                currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(postObject.photoThumbs, 80);
-//                photoImage.setNeedsQualityThumb(false);
-//                photoImage.setShouldGenerateQualityThumb(false);
-//                photoImage.setParentMessageObject(null);
-//                if (postObject.messageOwner.attachPath != null && postObject.messageOwner.attachPath.length() > 0) {
-//                    File f = new File(postObject.messageOwner.attachPath);
-//                    if (f.exists()) {
-//                        photoImage.setImage(null, postObject.messageOwner.attachPath,
-//                                String.format(Locale.US, "%d_%d", photoWidth, photoHeight),
-//                                null,
-//                                currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null,
-//                                "b1",
-//                                postObject.messageOwner.media.document.size, "webp", true);
-//                    }
-//                } else if (postObject.messageOwner.media.document.id != 0) {
-//                    photoImage.setImage(postObject.messageOwner.media.document, null,
-//                            String.format(Locale.US, "%d_%d", photoWidth, photoHeight),
-//                            null,
-//                            currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null,
-//                            "b1",
-//                            postObject.messageOwner.media.document.size, "webp", true);
-//                }
-//            } else {
-//                if (AndroidUtilities.isTablet()) {
-//                    photoWidth = (int) (AndroidUtilities.getMinTabletSide() * 0.7f);
-//                } else {
-//                    photoWidth = (int) (Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.7f);
-//                }
-//                photoHeight = photoWidth + AndroidUtilities.dp(100);
-//
-//                if (photoWidth > AndroidUtilities.getPhotoSize()) {
-//                    photoWidth = AndroidUtilities.getPhotoSize();
-//                }
-//                if (photoHeight > AndroidUtilities.getPhotoSize()) {
-//                    photoHeight = AndroidUtilities.getPhotoSize();
-//                }
-//
-//                if (postObject.type == 1) {
-//                    photoImage.setNeedsQualityThumb(false);
-//                    photoImage.setShouldGenerateQualityThumb(false);
-//                    photoImage.setParentMessageObject(null);
-//                    currentPhotoObjectThumb = FileLoader.getClosestPhotoSizeWithSize(postObject.photoThumbs, 80);
-//                } else if (postObject.type == 3) {
-//                    photoImage.setNeedsQualityThumb(true);
-//                    photoImage.setShouldGenerateQualityThumb(true);
-//                    photoImage.setParentMessageObject(postObject);
-//                } else if (postObject.type == 8) {
-//                    photoImage.setNeedsQualityThumb(true);
-//                    photoImage.setShouldGenerateQualityThumb(true);
-//                    photoImage.setParentMessageObject(postObject);
-//                }
-//                //8 - gif, 1 - photo, 3 - video
-//
-//                if (postObject.caption != null) {
-//                    media = false;
-//                }
-//
-//                currentPhotoObject = FileLoader.getClosestPhotoSizeWithSize(postObject.photoThumbs, AndroidUtilities.getPhotoSize());
-//
-//                if (currentPhotoObject != null) {
-//                    if (currentPhotoObject == currentPhotoObjectThumb) {
-//                        currentPhotoObjectThumb = null;
-//                    }
-//                    boolean noSize = false;
-//                    if (postObject.type == 3 || postObject.type == 8) {
-//                        noSize = true;
-//                    }
-//                    float scale = (float) currentPhotoObject.w / (float) photoWidth;
-//
-//                    if (!noSize && currentPhotoObject.size == 0) {
-//                        currentPhotoObject.size = -1;
-//                    }
-//
-//                    int w = (int) (currentPhotoObject.w / scale);
-//                    int h = (int) (currentPhotoObject.h / scale);
-//                    if (w == 0) {
-//                        if (postObject.type == 3) {
-//                            w = infoWidth + infoOffset + AndroidUtilities.dp(16);
-//                        } else {
-//                            w = AndroidUtilities.dp(100);
-//                        }
-//                    }
-//                    if (h == 0) {
-//                        h = AndroidUtilities.dp(100);
-//                    }
-//                    if (h > photoHeight) {
-//                        float scale2 = h;
-//                        h = photoHeight;
-//                        scale2 /= h;
-//                        w = (int) (w / scale2);
-//                    } else if (h < AndroidUtilities.dp(120)) {
-//                        h = AndroidUtilities.dp(120);
-//                        float hScale = (float) currentPhotoObject.h / h;
-//                        if (currentPhotoObject.w / hScale < photoWidth) {
-//                            w = (int) (currentPhotoObject.w / hScale);
-//                        }
-//                    }
-//                    measureTime(postObject);
-//                    int timeWidthTotal = timeWidth + AndroidUtilities.dp(14 + (postObject.isOut() ? 20 : 0));
-//                    if (w < timeWidthTotal) {
-//                        w = timeWidthTotal;
-//                    }
-//
-//                    if (postObject.isSecretPhoto()) {
-//                        if (AndroidUtilities.isTablet()) {
-//                            w = h = (int) (AndroidUtilities.getMinTabletSide() * 0.5f);
-//                        } else {
-//                            w = h = (int) (Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.5f);
-//                        }
-//                    }
-//
-//                    photoWidth = w;
-//                    photoHeight = h;
-//                    backgroundWidth = w + AndroidUtilities.dp(12);
-//                    if (!media) {
-//                        backgroundWidth += AndroidUtilities.dp(9);
-//                    }
-//                    if (postObject.caption != null) {
-//                        nameLayout = new StaticLayout(postObject.caption, MessageObject.textPaint, photoWidth - AndroidUtilities.dp(10), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
-//                        if (nameLayout.getLineCount() > 0) {
-//                            captionHeight = nameLayout.getHeight();
-//                            additionHeight += captionHeight + AndroidUtilities.dp(9);
-//                            float lastLineWidth = nameLayout.getLineWidth(nameLayout.getLineCount() - 1) + nameLayout.getLineLeft(nameLayout.getLineCount() - 1);
-//                            if (photoWidth - AndroidUtilities.dp(8) - lastLineWidth < timeWidthTotal) {
-//                                additionHeight += AndroidUtilities.dp(14);
-//                            }
-//                        }
-//                    }
-//
-//                    currentPhotoFilter = String.format(Locale.US, "%d_%d", (int) (w / AndroidUtilities.density), (int) (h / AndroidUtilities.density));
-//                    if (postObject.photoThumbs.size() > 1 || postObject.type == 3 || postObject.type == 8) {
-//                        if (postObject.isSecretPhoto()) {
-//                            currentPhotoFilter += "_b2";
-//                        } else {
-//                            currentPhotoFilter += "_b";
-//                        }
-//                    }
-//
-//                    String fileName = FileLoader.getAttachFileName(currentPhotoObject);
-//                    if (postObject.type == 1) {
-//                        boolean photoExist = true;
-//                        File cacheFile = FileLoader.getPathToMessage(postObject.messageOwner);
-//                        if (!cacheFile.exists()) {
-//                            photoExist = false;
-//                        } else {
-//                            MediaController.getInstance().removeLoadingFileObserver(this);
-//                        }
-//
-//                        if (photoExist || MediaController.getInstance().canDownloadMedia(MediaController.AUTODOWNLOAD_MASK_PHOTO) || FileLoader.getInstance().isLoadingFile(fileName)) {
-//                            if (allowedToSetPhoto || ImageLoader.getInstance().getImageFromMemory(currentPhotoObject.location, null, currentPhotoFilter) != null) {
-//                                allowedToSetPhoto = true;
-//                                photoImage.setImage(currentPhotoObject.location, currentPhotoFilter, currentPhotoObjectThumb != null ? currentPhotoObjectThumb.location : null, currentPhotoFilter, noSize ? 0 : currentPhotoObject.size, null, false);
-//                            } else if (currentPhotoObjectThumb != null) {
-//                                photoImage.setImage(null, null, currentPhotoObjectThumb.location, currentPhotoFilter, 0, null, false);
-//                            } else {
-//                                photoImage.setImageBitmap((Drawable) null);
-//                            }
-//                        } else {
-//                            photoNotSet = true;
-//                            if (currentPhotoObjectThumb != null) {
-//                                photoImage.setImage(null, null, currentPhotoObjectThumb.location, currentPhotoFilter, 0, null, false);
-//                            } else {
-//                                photoImage.setImageBitmap((Drawable) null);
-//                            }
-//                        }
-//                    } else {
-//                        photoImage.setImage(null, null, currentPhotoObject.location, currentPhotoFilter, 0, null, false);
-//                    }
-//                } else {
-//                    photoImage.setImageBitmap((Bitmap) null);
-//                }
-//            }
-//            super.setMessageObject(postObject);
-//
-//            invalidate();
-//        }
-//    }
-
     public ImageReceiver getPhotoImage() {
         return photoImage;
     }
@@ -689,8 +373,6 @@ public ImageReceiver getPhotoImage() {
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14));
-//        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14) + additionHeight);
-//        setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), photoHeight + AndroidUtilities.dp(14) + namesOffset + additionHeight);
     }
 
     @Override
@@ -732,259 +414,7 @@ public void setAllowedToSetPhoto(boolean value) {
     }
 
 
-//    @Override
-//    protected void onDraw(Canvas canvas) {
-//        if (postObject == null) {
-//            return;
-//        }
-//
-////        if (!wasLayout) {
-////            requestLayout();
-////            return;
-////        }
-//
-//        if (isAvatarVisible) {
-//            avatarImage.draw(canvas);
-//        }
-//
-//        Drawable currentBackgroundDrawable;
-//        if (currentMessageObject.isOut()) {
-//            if (isPressed() && isCheckPressed || !isCheckPressed && isPressed || isHighlighted) {
-//                if (!media) {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundDrawableOutSelected;
-//                } else {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundMediaDrawableOutSelected;
-//                }
-//            } else {
-//                if (!media) {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundDrawableOut;
-//                } else {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundMediaDrawableOut;
-//                }
-//            }
-//            setDrawableBounds(currentBackgroundDrawable, layoutWidth - backgroundWidth - (!media ? 0 : AndroidUtilities.dp(9)), AndroidUtilities.dp(1), backgroundWidth, layoutHeight - AndroidUtilities.dp(2));
-//        } else {
-//            if (isPressed() && isCheckPressed || !isCheckPressed && isPressed || isHighlighted) {
-//                if (!media) {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundDrawableInSelected;
-//                } else {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundMediaDrawableInSelected;
-//                }
-//            } else {
-//                if (!media) {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundDrawableIn;
-//                } else {
-//                    currentBackgroundDrawable = ResourceLoader.backgroundMediaDrawableIn;
-//                }
-//            }
-//            if (isChat) {
-//                setDrawableBounds(currentBackgroundDrawable, AndroidUtilities.dp(52 + (!media ? 0 : 9)), AndroidUtilities.dp(1), backgroundWidth, layoutHeight - AndroidUtilities.dp(2));
-//            } else {
-//                setDrawableBounds(currentBackgroundDrawable, (!media ? 0 : AndroidUtilities.dp(9)), AndroidUtilities.dp(1), backgroundWidth, layoutHeight - AndroidUtilities.dp(2));
-//            }
-//        }
-//        if (drawBackground) {
-//            currentBackgroundDrawable.draw(canvas);
-//        }
-//
-//        onAfterBackgroundDraw(canvas);
-//
-//        if (drawName && nameLayout != null) {
-//            canvas.save();
-//            canvas.translate(currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(19) - nameOffsetX, AndroidUtilities.dp(10));
-//            namePaint.setColor(AvatarDrawable.getNameColorForId(currentUser.id));
-//            nameLayout.draw(canvas);
-//            canvas.restore();
-//        }
-//
-//        if (drawForwardedName && forwardedNameLayout != null) {
-//            forwardNameY = AndroidUtilities.dp(10 + (drawName ? 19 : 0));
-//            if (currentMessageObject.isOut()) {
-//                forwardNamePaint.setColor(0xff4a923c);
-//                forwardNameX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(10);
-//            } else {
-//                forwardNamePaint.setColor(0xff006fc8);
-//                forwardNameX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(19);
-//            }
-//            canvas.save();
-//            canvas.translate(forwardNameX - forwardNameOffsetX, forwardNameY);
-//            forwardedNameLayout.draw(canvas);
-//            canvas.restore();
-//        }
-//
-//        if (currentMessageObject.isReply()) {
-//            if (currentMessageObject.type == 13) {
-//                replyLinePaint.setColor(0xffffffff);
-//                replyNamePaint.setColor(0xffffffff);
-//                replyTextPaint.setColor(0xffffffff);
-//                int backWidth;
-//                if (currentMessageObject.isOut()) {
-//                    backWidth = currentBackgroundDrawable.getBounds().left - AndroidUtilities.dp(32);
-//                    replyStartX = currentBackgroundDrawable.getBounds().left - AndroidUtilities.dp(9) - backWidth;
-//                } else {
-//                    backWidth = getWidth() - currentBackgroundDrawable.getBounds().right - AndroidUtilities.dp(32);
-//                    replyStartX = currentBackgroundDrawable.getBounds().right + AndroidUtilities.dp(23);
-//                }
-//                Drawable back;
-//                if (ApplicationLoader.isCustomTheme()) {
-//                    back = ResourceLoader.backgroundBlack;
-//                } else {
-//                    back = ResourceLoader.backgroundBlue;
-//                }
-//                replyStartY = layoutHeight - AndroidUtilities.dp(58);
-//                back.setBounds(replyStartX - AndroidUtilities.dp(7), replyStartY - AndroidUtilities.dp(6), replyStartX - AndroidUtilities.dp(7) + backWidth, replyStartY + AndroidUtilities.dp(41));
-//                back.draw(canvas);
-//            } else {
-//                if (currentMessageObject.isOut()) {
-//                    replyLinePaint.setColor(0xff8dc97a);
-//                    replyNamePaint.setColor(0xff61a349);
-//                    if (currentMessageObject.replyMessageObject != null && currentMessageObject.replyMessageObject.type == 0) {
-//                        replyTextPaint.setColor(0xff000000);
-//                    } else {
-//                        replyTextPaint.setColor(0xff70b15c);
-//                    }
-//                    replyStartX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(11);
-//                } else {
-//                    replyLinePaint.setColor(0xff6c9fd2);
-//                    replyNamePaint.setColor(0xff377aae);
-//                    if (currentMessageObject.replyMessageObject != null && currentMessageObject.replyMessageObject.type == 0) {
-//                        replyTextPaint.setColor(0xff000000);
-//                    } else {
-//                        replyTextPaint.setColor(0xff999999);
-//                    }
-//                    if (currentMessageObject.contentType == 1 && media) {
-//                        replyStartX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(11);
-//                    } else {
-//                        replyStartX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(20);
-//                    }
-//                }
-//                replyStartY = AndroidUtilities.dp(12 + (drawForwardedName && forwardedNameLayout != null ? 36 : 0) + (drawName && nameLayout != null ? 20 : 0));
-//            }
-//            canvas.drawRect(replyStartX, replyStartY, replyStartX + AndroidUtilities.dp(2), replyStartY + AndroidUtilities.dp(35), replyLinePaint);
-//            if (needReplyImage) {
-//                replyImageReceiver.setImageCoords(replyStartX + AndroidUtilities.dp(10), replyStartY, AndroidUtilities.dp(35), AndroidUtilities.dp(35));
-//                replyImageReceiver.draw(canvas);
-//            }
-//            if (replyNameLayout != null) {
-//                canvas.save();
-//                canvas.translate(replyStartX - replyNameOffset + AndroidUtilities.dp(10 + (needReplyImage ? 44 : 0)), replyStartY);
-//                replyNameLayout.draw(canvas);
-//                canvas.restore();
-//            }
-//            if (replyTextLayout != null) {
-//                canvas.save();
-//                canvas.translate(replyStartX - replyTextOffset + AndroidUtilities.dp(10 + (needReplyImage ? 44 : 0)), replyStartY + AndroidUtilities.dp(19));
-//                replyTextLayout.draw(canvas);
-//                canvas.restore();
-//            }
-//        }
-//
-//        if (drawTime || !media) {
-//            if (media) {
-//                setDrawableBounds(ResourceLoader.mediaBackgroundDrawable, timeX - AndroidUtilities.dp(3), layoutHeight - AndroidUtilities.dp(27.5f), timeWidth + AndroidUtilities.dp(6 + (currentMessageObject.isOut() ? 20 : 0)), AndroidUtilities.dp(16.5f));
-//                ResourceLoader.mediaBackgroundDrawable.draw(canvas);
-//
-//                canvas.save();
-//                canvas.translate(timeX, layoutHeight - AndroidUtilities.dp(12.0f) - timeLayout.getHeight());
-//                timeLayout.draw(canvas);
-//                canvas.restore();
-//            } else {
-//                canvas.save();
-//                canvas.translate(timeX, layoutHeight - AndroidUtilities.dp(6.5f) - timeLayout.getHeight());
-//                timeLayout.draw(canvas);
-//                canvas.restore();
-//            }
-//
-//            if (currentMessageObject.isOut()) {
-//                boolean drawCheck1 = false;
-//                boolean drawCheck2 = false;
-//                boolean drawClock = false;
-//                boolean drawError = false;
-//                boolean isBroadcast = (int)(currentMessageObject.getDialogId() >> 32) == 1;
-//
-//                if (currentMessageObject.isSending()) {
-//                    drawCheck1 = false;
-//                    drawCheck2 = false;
-//                    drawClock = true;
-//                    drawError = false;
-//                } else if (currentMessageObject.isSendError()) {
-//                    drawCheck1 = false;
-//                    drawCheck2 = false;
-//                    drawClock = false;
-//                    drawError = true;
-//                } else if (currentMessageObject.isSent()) {
-//                    if (!currentMessageObject.isUnread()) {
-//                        drawCheck1 = true;
-//                        drawCheck2 = true;
-//                    } else {
-//                        drawCheck1 = false;
-//                        drawCheck2 = true;
-//                    }
-//                    drawClock = false;
-//                    drawError = false;
-//                }
-//
-//                if (drawClock) {
-//                    if (!media) {
-//                        setDrawableBounds(ResourceLoader.clockDrawable, layoutWidth - AndroidUtilities.dp(18.5f) - ResourceLoader.clockDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(8.5f) - ResourceLoader.clockDrawable.getIntrinsicHeight());
-//                        ResourceLoader.clockDrawable.draw(canvas);
-//                    } else {
-//                        setDrawableBounds(ResourceLoader.clockMediaDrawable, layoutWidth - AndroidUtilities.dp(22.0f) - ResourceLoader.clockMediaDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(13.0f) - ResourceLoader.clockMediaDrawable.getIntrinsicHeight());
-//                        ResourceLoader.clockMediaDrawable.draw(canvas);
-//                    }
-//                }
-//                if (isBroadcast) {
-//                    if (drawCheck1 || drawCheck2) {
-//                        if (!media) {
-//                            setDrawableBounds(ResourceLoader.broadcastDrawable, layoutWidth - AndroidUtilities.dp(20.5f) - ResourceLoader.broadcastDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(8.0f) - ResourceLoader.broadcastDrawable.getIntrinsicHeight());
-//                            ResourceLoader.broadcastDrawable.draw(canvas);
-//                        } else {
-//                            setDrawableBounds(ResourceLoader.broadcastMediaDrawable, layoutWidth - AndroidUtilities.dp(24.0f) - ResourceLoader.broadcastMediaDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(13.0f) - ResourceLoader.broadcastMediaDrawable.getIntrinsicHeight());
-//                            ResourceLoader.broadcastMediaDrawable.draw(canvas);
-//                        }
-//                    }
-//                } else {
-//                    if (drawCheck2) {
-//                        if (!media) {
-//                            if (drawCheck1) {
-//                                setDrawableBounds(ResourceLoader.checkDrawable, layoutWidth - AndroidUtilities.dp(22.5f) - ResourceLoader.checkDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(8.0f) - ResourceLoader.checkDrawable.getIntrinsicHeight());
-//                            } else {
-//                                setDrawableBounds(ResourceLoader.checkDrawable, layoutWidth - AndroidUtilities.dp(18.5f) - ResourceLoader.checkDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(8.0f) - ResourceLoader.checkDrawable.getIntrinsicHeight());
-//                            }
-//                            ResourceLoader.checkDrawable.draw(canvas);
-//                        } else {
-//                            if (drawCheck1) {
-//                                setDrawableBounds(ResourceLoader.checkMediaDrawable, layoutWidth - AndroidUtilities.dp(26.0f) - ResourceLoader.checkMediaDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(13.0f) - ResourceLoader.checkMediaDrawable.getIntrinsicHeight());
-//                            } else {
-//                                setDrawableBounds(ResourceLoader.checkMediaDrawable, layoutWidth - AndroidUtilities.dp(22.0f) - ResourceLoader.checkMediaDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(13.0f) - ResourceLoader.checkMediaDrawable.getIntrinsicHeight());
-//                            }
-//                            ResourceLoader.checkMediaDrawable.draw(canvas);
-//                        }
-//                    }
-//                    if (drawCheck1) {
-//                        if (!media) {
-//                            setDrawableBounds(ResourceLoader.halfCheckDrawable, layoutWidth - AndroidUtilities.dp(18) - ResourceLoader.halfCheckDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(8.0f) - ResourceLoader.halfCheckDrawable.getIntrinsicHeight());
-//                            ResourceLoader.halfCheckDrawable.draw(canvas);
-//                        } else {
-//                            setDrawableBounds(ResourceLoader.halfCheckMediaDrawable, layoutWidth - AndroidUtilities.dp(20.5f) - ResourceLoader.halfCheckMediaDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(13.0f) - ResourceLoader.halfCheckMediaDrawable.getIntrinsicHeight());
-//                            ResourceLoader.halfCheckMediaDrawable.draw(canvas);
-//                        }
-//                    }
-//                }
-//                if (drawError) {
-//                    if (!media) {
-//                        setDrawableBounds(ResourceLoader.errorDrawable, layoutWidth - AndroidUtilities.dp(18) - ResourceLoader.errorDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(6.5f) - ResourceLoader.errorDrawable.getIntrinsicHeight());
-//                        ResourceLoader.errorDrawable.draw(canvas);
-//                    } else {
-//                        setDrawableBounds(ResourceLoader.errorDrawable, layoutWidth - AndroidUtilities.dp(20.5f) - ResourceLoader.errorDrawable.getIntrinsicWidth(), layoutHeight - AndroidUtilities.dp(12.5f) - ResourceLoader.errorDrawable.getIntrinsicHeight());
-//                        ResourceLoader.errorDrawable.draw(canvas);
-//                    }
-//                }
-//            }
-//        }
-//    }
-
-    //TODO-aragats is old method from previous method. But I should rake from ChatBaseCell
+    //TODO-aragats-old is old method from previous method. But I should rake from ChatBaseCell
     @Override
     protected void onDraw(Canvas canvas) {
         if (this.postObject == null) {
@@ -997,7 +427,6 @@ protected void onDraw(Canvas canvas) {
 //        }
 
 
-
         Drawable currentBackgroundDrawable = ResourceLoader.backgroundMediaDrawableOut;
 //        currentBackgroundDrawable = backgroundMediaDrawableOutSelected;
 
@@ -1020,7 +449,6 @@ protected void onDraw(Canvas canvas) {
     }
 
 
-
     //    @Override
     protected void onAfterBackgroundDraw(Canvas canvas) {
         boolean imageDrawn = false;
@@ -1031,12 +459,14 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
 //        imageDrawn = photoImage.draw(canvas);
 
 
+        radialProgress.setBackground(getDrawableForCurrentState(), false, false);
         radialProgress.setHideCurrentDrawable(false);
         radialProgress.setProgressColor(0xffffffff);
 
 
         radialProgress.onDraw(canvas);
 
+
 //        if (nameLayout != null) {
 //            canvas.save();
 //            canvas.translate(captionX = photoImage.getImageX() + AndroidUtilities.dp(5), captionY = photoImage.getImageY() + photoHeight + AndroidUtilities.dp(6));
@@ -1059,6 +489,39 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
 
         photoImage.draw(canvas);
 
+
+//        if (infoLayout != null) {
+//            infoPaint.setColor(0xffffffff);
+//            setDrawableBounds(ResourceLoader.mediaBackgroundDrawable, photoImage.getImageX() + AndroidUtilities.dp(4), photoImage.getImageY() + AndroidUtilities.dp(4), infoWidth + AndroidUtilities.dp(8) + infoOffset, AndroidUtilities.dp(16.5f));
+//            ResourceLoader.mediaBackgroundDrawable.draw(canvas);
+//
+//            canvas.save();
+//            canvas.translate(photoImage.getImageX() + AndroidUtilities.dp(8) + infoOffset, photoImage.getImageY() + AndroidUtilities.dp(5.5f));
+//            infoLayout.draw(canvas);
+//            canvas.restore();
+//        }
+
+        //DELETE BUTTON
+        Drawable buttonDrawable = ResourceLoader.audioStatesDrawable[4][0];
+        setDrawableBounds(buttonDrawable, buttonX, buttonY);
+        buttonDrawable.draw(canvas);
+
+//        ImageView imageView = new ImageView(this.getContext());
+//        imageView.setImageResource(R.drawable.delete_reply);
+//        imageView.setScaleType(ImageView.ScaleType.CENTER);
+//        canvas.save();
+//        canvas.translate(photoImage.getImageX() + photoWidth + AndroidUtilities.dp(8) + infoOffset, photoImage.getImageY() + AndroidUtilities.dp(5.5f));
+//        imageView.draw(canvas);
+//        canvas.restore();
+////        replyLayout.addView(imageView, LayoutHelper.createFrame(52, 46, Gravity.RIGHT | Gravity.TOP, 0, 0.5f, 0, 0));
+//        imageView.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//
+//                Toast.makeText(PostMediaCell.this.getContext(), "DELETE CLICKED", Toast.LENGTH_SHORT).show();
+//
+//            }
+//        });
     }
 
     @Override
@@ -1099,7 +562,6 @@ public int getObserverTag() {
     }
 
 
-
     public PostObject getPostObject() {
         return postObject;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index bf51a4eee..577f5df96 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -755,8 +755,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
 //            progressView.setVisibility(View.VISIBLE);
 //            postListView.setEmptyView(null);
 //        } else {
-            progressView.setVisibility(View.INVISIBLE);
-            postListView.setEmptyView(emptyViewContainer);
+        progressView.setVisibility(View.INVISIBLE);
+        postListView.setEmptyView(emptyViewContainer);
 //        }
 
         updateBottomOverlay();
@@ -802,8 +802,6 @@ private void moveScrollToLastPost() {
     }
 
 
-
-
     private void checkActionBarMenu() {
 
         if (menuItem != null) {
@@ -1089,6 +1087,10 @@ public void onConfigurationChanged(Configuration newConfig) {
     }
 
     public void createMenu(View v, boolean single) {
+        //TODO MOCK
+        if(true) {
+            return;
+        }
         if (actionBar.isActionModeShowed()) {
             return;
         }
@@ -1100,49 +1102,50 @@ public void createMenu(View v, boolean single) {
         if (postObject == null) {
             return;
         }
-        final int type = getPostType(postObject);
+         int type = getPostType(postObject);
 
+        type = 1;
         selectedObject = null;
         actionBar.hideActionMode();
 
-        if (single || type < 2 || type == 20) {
-            if (type >= 0) {
-                selectedObject = postObject;
-                if (getParentActivity() == null) {
-                    return;
-                }
-                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+//        if (single || type < 2 || type == 20) {
+//            if (type >= 0) {
+        selectedObject = postObject;
+        if (getParentActivity() == null) {
+            return;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+
+        CharSequence[] items = null;
+        int[] options = null;
+
+        if (type == 0) {
+            items = new CharSequence[]{LocaleController.getString("Retry", R.string.Retry), LocaleController.getString("Delete", R.string.Delete)};
+            options = new int[]{0, 1};
+        } else if (type == 1) {
+            items = new CharSequence[]{LocaleController.getString("Delete", R.string.Delete)};
+            options = new int[]{1};
+        } else if (type == 20) {
+            items = new CharSequence[]{LocaleController.getString("Retry", R.string.Retry), LocaleController.getString("Copy", R.string.Copy), LocaleController.getString("Delete", R.string.Delete)};
+            options = new int[]{0, 3, 1};
+        }
 
-                CharSequence[] items = null;
-                int[] options = null;
-
-                if (type == 0) {
-                    items = new CharSequence[]{LocaleController.getString("Retry", R.string.Retry), LocaleController.getString("Delete", R.string.Delete)};
-                    options = new int[]{0, 1};
-                } else if (type == 1) {
-                    items = new CharSequence[]{LocaleController.getString("Delete", R.string.Delete)};
-                    options = new int[]{1};
-                } else if (type == 20) {
-                    items = new CharSequence[]{LocaleController.getString("Retry", R.string.Retry), LocaleController.getString("Copy", R.string.Copy), LocaleController.getString("Delete", R.string.Delete)};
-                    options = new int[]{0, 3, 1};
+        final int[] finalOptions = options;
+        builder.setItems(items, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                if (finalOptions == null || selectedObject == null || i < 0 || i >= finalOptions.length) {
+                    return;
                 }
-
-                final int[] finalOptions = options;
-                builder.setItems(items, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialogInterface, int i) {
-                        if (finalOptions == null || selectedObject == null || i < 0 || i >= finalOptions.length) {
-                            return;
-                        }
-                        processSelectedOption(finalOptions[i]);
-                    }
-                });
-
-                builder.setTitle(LocaleController.getString("Message", R.string.Message));
-                showDialog(builder.create());
+                processSelectedOption(finalOptions[i]);
             }
-            return;
-        }
+        });
+
+        builder.setTitle(LocaleController.getString("Message", R.string.Message));
+        showDialog(builder.create());
+//            }
+//            return;
+//        }
         actionBar.showActionMode();
 
         if (Build.VERSION.SDK_INT >= 11) {
@@ -1400,7 +1403,10 @@ public void didPressedUserAvatar(PostMediaCell cell) {
 
                     @Override
                     public void didPressedCancelSendButton(PostMediaCell cell) {
-
+                        PostObject postObject = cell.getPostObject();
+                        postObjects.remove(postObject);
+                        postObjects.clear();
+                        postCreateAdapter.notifyDataSetChanged();
                     }
 
                     @Override
@@ -1437,6 +1443,7 @@ public void didPressReplyMessage(PostMediaCell cell, int id) {
 //                        scrollToMessageId(id, cell.getMessageObject().getId(), true);
                     }
 
+                    //TODO Now I do not use it in PostMedia, but I can. Look at PostMedia.didClickedImage
                     @Override
                     public void didClickedImage(PostMediaCell cell) {
                         PostObject post = cell.getPostObject();
@@ -1600,6 +1607,8 @@ private void didSelectPhotos(ArrayList<String> photos) {
             post.setVenue(VenueServiceMock.getRandomVenue());
             //TODO-temp
 //            PostCreateActivity.this.postObject = new PostObject(post);
+            //DELETE ALL to store only one
+            PostCreateActivity.this.postObjects.clear();
             PostCreateActivity.this.postObjects.add(new PostObject(post));
 
             postCreateAdapter.notifyDataSetChanged();
