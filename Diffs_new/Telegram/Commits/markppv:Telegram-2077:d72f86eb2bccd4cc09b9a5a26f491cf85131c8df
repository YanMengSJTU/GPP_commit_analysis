diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ImageUpdater.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ImageUpdater.java
index 62e708105..78085c370 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ImageUpdater.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ImageUpdater.java
@@ -16,38 +16,37 @@
 import android.graphics.BitmapFactory;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
-import androidx.exifinterface.media.ExifInterface;
 import android.net.Uri;
 import android.os.Build;
-import android.os.Bundle;
 import android.provider.MediaStore;
-import androidx.core.content.FileProvider;
 import android.util.TypedValue;
 import android.widget.TextView;
 
+import androidx.core.content.FileProvider;
+import androidx.exifinterface.media.ExifInterface;
+
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.BuildConfig;
+import org.telegram.messenger.FileLoader;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.ImageLocation;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
+import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.SendMessagesHelper;
+import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.messenger.VideoEditedInfo;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.FileLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.NotificationCenter;
-import org.telegram.messenger.UserConfig;
+import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.Theme;
-import org.telegram.ui.LaunchActivity;
 import org.telegram.ui.PhotoAlbumPickerActivity;
 import org.telegram.ui.PhotoCropActivity;
-import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.PhotoPickerActivity;
 import org.telegram.ui.PhotoViewer;
 
@@ -309,85 +308,68 @@ public void startPhotoSelectActivity() {
         parentFragment.presentFragment(fragment);
     }
 
-    private void startCrop(String path, Uri uri) {
-        try {
-            LaunchActivity activity = (LaunchActivity) parentFragment.getParentActivity();
-            if (activity == null) {
-                return;
+    public void onActivityResult(int requestCode, int resultCode, Intent intent) {
+        if (resultCode == Activity.RESULT_OK) {
+            if (requestCode == 13) {
+                AndroidUtilities.addMediaToGallery(currentPicturePath);
+                startCrop();
+            } else if (requestCode == 14) {
+                if (intent == null || intent.getData() == null) {
+                    return;
+                }
+                currentPicturePath = AndroidUtilities.getPath(intent.getData());
+                startCrop();
             }
-            Bundle args = new Bundle();
-            if (path != null) {
-                args.putString("photoPath", path);
-            } else if (uri != null) {
-                args.putParcelable("photoUri", uri);
+        }
+    }
+
+    private void startCrop() {
+        PhotoViewer.getInstance().setParentActivity(parentFragment.getParentActivity());
+        int orientation = 0;
+        try {
+            ExifInterface ei = new ExifInterface(currentPicturePath);
+            int exif = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);
+            switch (exif) {
+                case ExifInterface.ORIENTATION_ROTATE_90:
+                    orientation = 90;
+                    break;
+                case ExifInterface.ORIENTATION_ROTATE_180:
+                    orientation = 180;
+                    break;
+                case ExifInterface.ORIENTATION_ROTATE_270:
+                    orientation = 270;
+                    break;
             }
-            PhotoCropActivity photoCropActivity = new PhotoCropActivity(args);
-            photoCropActivity.setDelegate(this);
-            activity.presentFragment(photoCropActivity);
         } catch (Exception e) {
             FileLog.e(e);
-            Bitmap bitmap = ImageLoader.loadBitmap(path, uri, 800, 800, true);
-            processBitmap(bitmap);
         }
-    }
-
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (resultCode == Activity.RESULT_OK) {
-            if (requestCode == 13) {
-                PhotoViewer.getInstance().setParentActivity(parentFragment.getParentActivity());
-                int orientation = 0;
-                try {
-                    ExifInterface ei = new ExifInterface(currentPicturePath);
-                    int exif = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);
-                    switch (exif) {
-                        case ExifInterface.ORIENTATION_ROTATE_90:
-                            orientation = 90;
-                            break;
-                        case ExifInterface.ORIENTATION_ROTATE_180:
-                            orientation = 180;
-                            break;
-                        case ExifInterface.ORIENTATION_ROTATE_270:
-                            orientation = 270;
-                            break;
-                    }
-                } catch (Exception e) {
-                    FileLog.e(e);
+        final ArrayList<Object> arrayList = new ArrayList<>();
+        arrayList.add(new MediaController.PhotoEntry(0, 0, 0, currentPicturePath, orientation, false));
+        PhotoViewer.getInstance().openPhotoForSelect(arrayList, 0, PhotoViewer.SELECT_TYPE_AVATAR, new PhotoViewer.EmptyPhotoViewerProvider() {
+            @Override
+            public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo) {
+                String path = null;
+                MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) arrayList.get(0);
+                if (photoEntry.imagePath != null) {
+                    path = photoEntry.imagePath;
+                } else if (photoEntry.path != null) {
+                    path = photoEntry.path;
                 }
-                final ArrayList<Object> arrayList = new ArrayList<>();
-                arrayList.add(new MediaController.PhotoEntry(0, 0, 0, currentPicturePath, orientation, false));
-                PhotoViewer.getInstance().openPhotoForSelect(arrayList, 0, PhotoViewer.SELECT_TYPE_AVATAR, new PhotoViewer.EmptyPhotoViewerProvider() {
-                    @Override
-                    public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo) {
-                        String path = null;
-                        MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) arrayList.get(0);
-                        if (photoEntry.imagePath != null) {
-                            path = photoEntry.imagePath;
-                        } else if (photoEntry.path != null) {
-                            path = photoEntry.path;
-                        }
-                        Bitmap bitmap = ImageLoader.loadBitmap(path, null, 800, 800, true);
-                        processBitmap(bitmap);
-                    }
+                Bitmap bitmap = ImageLoader.loadBitmap(path, null, 800, 800, true);
+                processBitmap(bitmap);
+            }
 
-                    @Override
-                    public boolean allowCaption() {
-                        return false;
-                    }
+            @Override
+            public boolean allowCaption() {
+                return false;
+            }
 
-                    @Override
-                    public boolean canScrollAway() {
-                        return false;
-                    }
-                }, null);
-                AndroidUtilities.addMediaToGallery(currentPicturePath);
-                currentPicturePath = null;
-            } else if (requestCode == 14) {
-                if (data == null || data.getData() == null) {
-                    return;
-                }
-                startCrop(null, data.getData());
+            @Override
+            public boolean canScrollAway() {
+                return false;
             }
-        }
+        }, null);
+        currentPicturePath = null;
     }
 
     private void processBitmap(Bitmap bitmap) {
