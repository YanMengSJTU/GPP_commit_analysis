diff --git a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
index 2e039bfdf..8d10e4230 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
@@ -1071,6 +1071,7 @@ public void deleteFile(String fileUrl) {
     //TODO works not properly. int increase the size of the file.
     public void saveBitmap(Image image) {
         FileOutputStream out = null;
+        String originalImageUrl = image.getUrl();
         try {
             File telegramPath = new File(Environment.getExternalStorageDirectory(), Constants.WGO);
             telegramPath.mkdirs();
@@ -1133,6 +1134,9 @@ public void saveBitmap(Image image) {
             image.setUrl(resizedImage.getAbsolutePath());
             image.setWidth(width);
             image.setHeight(height);
+
+            // save ExifInterface
+            migrateExifInterface(originalImageUrl, resizedImage.getAbsolutePath());
         } catch (Exception e) {
             //TODO handle exception
             e.printStackTrace();
@@ -1149,6 +1153,62 @@ public void saveBitmap(Image image) {
 
     }
 
+
+    //TODO migrate all ExifInterface parameters.
+    public static void migrateExifInterface(String fromFile, String toFile) {
+        if (StringUtils.isEmpty(toFile) || StringUtils.isEmpty(fromFile)) {
+            return;
+        }
+        ExifInterface fromFileExif;
+        ExifInterface toFileExif;
+        try {
+            toFileExif = new ExifInterface(toFile);
+            fromFileExif = new ExifInterface(fromFile);
+
+            String attribute = fromFileExif.getAttribute(ExifInterface.TAG_GPS_DATESTAMP);
+            if (attribute != null) {
+                toFileExif.setAttribute(ExifInterface.TAG_GPS_DATESTAMP, attribute);
+            }
+
+            attribute = fromFileExif.getAttribute(ExifInterface.TAG_GPS_TIMESTAMP);
+            if (!StringUtils.isEmpty(attribute)) {
+                toFileExif.setAttribute(ExifInterface.TAG_GPS_TIMESTAMP, attribute);
+            }
+
+            attribute = fromFileExif.getAttribute(ExifInterface.TAG_DATETIME);
+            if (!StringUtils.isEmpty(attribute)) {
+                toFileExif.setAttribute(ExifInterface.TAG_DATETIME, attribute);
+            }
+
+            attribute = fromFileExif.getAttribute(ExifInterface.TAG_GPS_LATITUDE);
+            if (!StringUtils.isEmpty(attribute)) {
+                toFileExif.setAttribute(ExifInterface.TAG_GPS_LATITUDE, attribute);
+            }
+
+            attribute = fromFileExif.getAttribute(ExifInterface.TAG_GPS_LATITUDE_REF);
+            if (!StringUtils.isEmpty(attribute)) {
+                toFileExif.setAttribute(ExifInterface.TAG_GPS_LATITUDE_REF, attribute);
+            }
+
+            attribute = fromFileExif.getAttribute(ExifInterface.TAG_GPS_LONGITUDE);
+            if (!StringUtils.isEmpty(attribute)) {
+                toFileExif.setAttribute(ExifInterface.TAG_GPS_LONGITUDE, attribute);
+            }
+
+            attribute = fromFileExif.getAttribute(ExifInterface.TAG_GPS_LONGITUDE_REF);
+            if (!StringUtils.isEmpty(attribute)) {
+                toFileExif.setAttribute(ExifInterface.TAG_GPS_LONGITUDE_REF, attribute);
+            }
+
+            toFileExif.saveAttributes();
+
+        } catch (IOException e) {
+            //TODO handle exception.
+            e.printStackTrace();
+            return;
+        }
+    }
+
     public static void saveObject(String fileName, Object object) {
         FileOutputStream outputStream;
         try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index b3883d004..4d540b204 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -53,18 +53,11 @@
 import org.telegram.android.LocaleController;
 import org.telegram.android.MediaController;
 import org.telegram.android.NotificationCenter;
-
-import ru.aragats.wgo.ApplicationLoader;
-import ru.aragats.wgo.R;
-
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.Utilities;
-
-import ru.aragats.wgo.dto.Post;
-
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -82,6 +75,10 @@
 import java.util.Date;
 import java.util.Locale;
 
+import ru.aragats.wgo.ApplicationLoader;
+import ru.aragats.wgo.R;
+import ru.aragats.wgo.dto.Post;
+
 public class PhotoViewer implements NotificationCenter.NotificationCenterDelegate, GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener {
 
 
@@ -1081,6 +1078,8 @@ private void applyCurrentEditMode() {
                 if (object instanceof MediaController.PhotoEntry) {
                     MediaController.PhotoEntry entry = (MediaController.PhotoEntry) object;
                     entry.imagePath = FileLoader.getPathToAttach(size, true).toString();
+                    //TODO aragats save ExifInterface parameters: coordinate latitude and longitude and datetime
+                    MediaController.migrateExifInterface(entry.path, entry.imagePath);
                     size = ImageLoader.scaleAndSaveImage(bitmap, AndroidUtilities.dp(120), AndroidUtilities.dp(120), 70, false, 101, 101);
                     if (size != null) {
                         entry.thumbPath = FileLoader.getPathToAttach(size, true).toString();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 7395a06e4..2fbecd0f0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -1619,7 +1619,7 @@ private boolean validatePost(Post post, boolean withNotification) {
         }
         return true;
     }
-
+    // only photo based on MAX DATE_SHIFT. Think about accepting photo withou date.
     private boolean validateDate(long date) {
         return date != 0 && (new Date().getTime() - date) < Constants.MAX_DATE_SHIFT;
     }
