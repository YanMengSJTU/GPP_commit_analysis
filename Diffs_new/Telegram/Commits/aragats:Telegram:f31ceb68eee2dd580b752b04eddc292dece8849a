diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index bbd087177..ce4f4604a 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -366,6 +366,7 @@ public void onFailure(Call<PostResponse> call, Throwable t) {
 
     private void loadVKPhotos(final PostRequest postRequest, final boolean reload) {
         loadingPosts = true;
+        postRequest.setCount(postRequest.getCount() * 2);
         final Call<VKPhotoResponse> call = RestManager.getInstance().findNearVKPhotos(postRequest, new Callback<VKPhotoResponse>() {
             @Override
             public void onResponse(Call<VKPhotoResponse> call, Response<VKPhotoResponse> response) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index d76b360b7..2688fe8ee 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -365,4 +365,18 @@ public static Location convertGeoPointToLocation(TLRPC.GeoPoint geoPoint) {
     }
 
 
+    public static TLRPC.TL_messageMediaGeo convertCoordinatesToGeoPoint(Coordinates coordinates, boolean custom) {
+        if (coordinates == null || CollectionUtils.isEmpty(coordinates.getCoordinates())) {
+            return null;
+        }
+        List<Double> coords = coordinates.getCoordinates();
+        TLRPC.TL_messageMediaGeo location = new TLRPC.TL_messageMediaGeo();
+        location.geo = new TLRPC.TL_geoPoint();
+        location.geo.lat = coords.get(1);
+        location.geo._long = coords.get(0);
+        location.isCustomLocation = custom;
+        return location;
+    }
+
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
index 1b8f9ef26..6d3b8f871 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
@@ -130,6 +130,7 @@ public void didClickedVenue(PostCell cell) {
                     Post cellPost = cell.getPost();
                     LocationActivityAragats fragment = new LocationActivityAragats(new Bundle());
                     fragment.setPost(cellPost);
+                    fragment.setDelegate(postsActivity.getLocationActivityDelegate());
                     postsActivity.presentFragment(fragment);
                 }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index 03a2607e2..d4897125c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -415,6 +415,35 @@ public void onClick(View v) {
                 }
             });
 
+
+            ImageView choosePostLocationButton = new ImageView(context);
+            choosePostLocationButton.setBackgroundResource(R.drawable.floating_states);
+            choosePostLocationButton.setImageResource(R.drawable.ic_attach_location_white);
+            choosePostLocationButton.setScaleType(ImageView.ScaleType.CENTER);
+            if (Build.VERSION.SDK_INT >= 21) {
+                StateListAnimator animator = new StateListAnimator();
+                animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(choosePostLocationButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
+                animator.addState(new int[]{}, ObjectAnimator.ofFloat(choosePostLocationButton, "translationZ", AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
+                choosePostLocationButton.setStateListAnimator(animator);
+                choosePostLocationButton.setOutlineProvider(new ViewOutlineProvider() {
+                    @Override
+                    public void getOutline(View view, Outline outline) {
+                        outline.setOval(0, 0, AndroidUtilities.dp(56), AndroidUtilities.dp(56));
+                    }
+                });
+            }
+            frameLayout.addView(choosePostLocationButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? (14 + (56 + 16)) : 0, 0, LocaleController.isRTL ? 0 : (14 + (56 + 16)), 28));
+            choosePostLocationButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (post != null && post.getCoordinates() != null && delegate != null) {
+                        delegate.didSelectLocation(LocationManagerHelper.convertCoordinatesToGeoPoint(post.getCoordinates(), true));
+                        finishFragment();
+                    }
+                }
+            });
+
+
             frameLayout.addView(locationButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 100));
             locationButton.setOnClickListener(new View.OnClickListener() {
                 @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 21e507353..da6e0cbdf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -133,6 +133,8 @@ public void run() {
         }
     };
 
+    private LocationActivityAragats.LocationActivityDelegate locationActivityDelegate;
+
 
     private ActionBarMenuItem locationItem;
     private static int itemId = 1;
@@ -272,6 +274,37 @@ public boolean onFragmentCreate() {
         if (!LocationManagerHelper.getInstance().isLocationServiceEnabled()) {
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.locationServiceDisabled);
         }
+
+        locationActivityDelegate = new LocationActivityAragats.LocationActivityDelegate() {
+
+            @Override
+            public void didSelectLocation(TLRPC.MessageMedia location) {
+                //TODO I think i do not need last saved location. I can just put "network" provider into Location isntance
+                Location lastSavedLocation = LocationManagerHelper.getInstance().getLastSavedOrLastLocation();
+                if (!location.isCustomLocation || lastSavedLocation == null) {
+                    locationItem.setIcon(R.drawable.ic_attach_location_grey);
+                    LocationManagerHelper.getInstance().setCustomLocation(null);
+                    // TODO save additional request if the same coordinates are chosen ?? But man can move. so current location could change
+                    refreshPosts(true);
+                    return;
+                }
+                Location customLocation = new Location(lastSavedLocation.getProvider());
+                double lat = location.geo.lat;
+                double lng = location.geo._long;
+                if (location.geoPlace != null) {
+                    lat = location.geoPlace.lat;
+                    lng = location.geoPlace._long;
+                }
+                customLocation.setLatitude(lat);
+                customLocation.setLongitude(lng);
+                LocationManagerHelper.getInstance().setCustomLocation(customLocation);
+                locationItem.setIcon(R.drawable.ic_attach_location_white);
+                //                R.drawable.location_b; R.drawable.location_g
+                refreshPosts(true);
+            }
+        };
+
+
         return true;
     }
 
@@ -1075,32 +1108,7 @@ private void openLocationChooser() {
         if (customLocation != null) {
             fragment.setCustomLocation(new Location(customLocation));
         }
-        fragment.setDelegate(new LocationActivityAragats.LocationActivityDelegate() {
-            @Override
-            public void didSelectLocation(TLRPC.MessageMedia location) {
-                //TODO I think i do not need last saved location. I can just put "network" provider into Location isntance
-                Location lastSavedLocation = LocationManagerHelper.getInstance().getLastSavedOrLastLocation();
-                if (!location.isCustomLocation || lastSavedLocation == null) {
-                    locationItem.setIcon(R.drawable.ic_attach_location_grey);
-                    LocationManagerHelper.getInstance().setCustomLocation(null);
-                    // TODO save additional request if the same coordinates are chosen ?? But man can move. so current location could change
-                    refreshPosts(true);
-                    return;
-                }
-                Location customLocation = new Location(lastSavedLocation.getProvider());
-                double lat = location.geo.lat;
-                double lng = location.geo._long;
-                if (location.geoPlace != null) {
-                    lat = location.geoPlace.lat;
-                    lng = location.geoPlace._long;
-                }
-                customLocation.setLatitude(lat);
-                customLocation.setLongitude(lng);
-                LocationManagerHelper.getInstance().setCustomLocation(customLocation);
-                locationItem.setIcon(R.drawable.ic_attach_location_white);
-                refreshPosts(true);
-            }
-        });
+        fragment.setDelegate(locationActivityDelegate);
         presentFragment(fragment);
     }
 
@@ -1152,4 +1160,9 @@ private void notifyDateSetChanged() {
             postsSearchAdapter.notifyDataSetChanged();
         }
     }
+
+
+    public LocationActivityAragats.LocationActivityDelegate getLocationActivityDelegate() {
+        return locationActivityDelegate;
+    }
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
index 5ce66f133..43312a459 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/dto/Post.java
@@ -101,6 +101,7 @@ public String getPreviewImageUrl() {
     }
 
 
+    //TODO delete ???
     public Coordinates getPostCoordinates() {
         if (venue != null && venue.getCoordinates() != null) {
             return venue.getCoordinates();
