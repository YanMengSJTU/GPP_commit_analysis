diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index c38da3644..5aa404b4f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -5228,6 +5228,9 @@ public void processUpdates(final TLRPC.Updates updates, boolean fromQueue) {
             if (missingData) {
                 needGetDiff = true;
             } else {
+
+                //reza_ak
+                updates.pts=MessagesStorage.lastPtsValue + updates.pts_count;
                 if (MessagesStorage.lastPtsValue + updates.pts_count == updates.pts) {
                     TLRPC.TL_message message = new TLRPC.TL_message();
                     message.id = updates.id;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 8c62f3d89..f3263d844 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -1274,9 +1274,9 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
 
                         try {
                             jsonMessageObject.put("packet_type", "message");
-                            jsonMessageObject.put("to", "98729");
+                            jsonMessageObject.put("to", "18271");
                             jsonMessageObject.put("from", "+989122335645");
-                            jsonMessageObject.put("from_userid","6000000");
+                            jsonMessageObject.put("from_userid","102015");
                             jsonMessageObject.put("messageBody", newMsg.message);
                             jsonMessageObject.put("messageType", MessageContentTypeProvider.MessageContentType.TEXT.ordinal());
                             jsonMessageObject.put("messageTypeDesc", "");
@@ -1290,14 +1290,14 @@ private void sendMessage(String message, TLRPC.MessageMedia location, TLRPC.TL_p
                             //jsonMessageObject.put("groupOwnerId",groupOwnerId);
                             jsonMessageObject.put("isGroupChat", 1);
                             jsonMessageObject.put("channel_view", "1");
-                            packetId = Utils.makePacketId("6000000");
+                            packetId = Utils.makePacketId("102015");
                             jsonMessageObject.put("packetId", packetId);
 
                         } catch (Exception e) {
                             // TODO Auto-generated catch block
                             e.printStackTrace();
                         }
-                        jobManager.addJobInBackground(new PublishToTopicJob(jsonMessageObject.toString(), "groups/" + "s6:98729"));
+                        jobManager.addJobInBackground(new PublishToTopicJob(jsonMessageObject.toString(), "groups/" + "s18271:102015"));
                     }
                 } else {
                     TLRPC.TL_decryptedMessage reqSend;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/mqtt/MQTTService.java b/TMessagesProj/src/main/java/org/telegram/messenger/mqtt/MQTTService.java
index ab6aaef6b..da413c807 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/mqtt/MQTTService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/mqtt/MQTTService.java
@@ -29,7 +29,9 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
+import org.telegram.messenger.Utilities;
 import org.telegram.messenger.mqtt.Connection.ConnectionStatus;
 import com.path.android.jobqueue.JobManager;
 
@@ -70,6 +72,8 @@
 import org.json.JSONObject;
 import org.telegram.messenger.shamChat.User;
 import org.telegram.messenger.shamChat.Utils;
+import org.telegram.tgnet.TLObject;
+import org.telegram.tgnet.TLRPC;
 
 
 import java.beans.PropertyChangeEvent;
@@ -107,7 +111,7 @@
     // constants used to tell the Activity UI the connection status
     public static final String MQTT_STATUS_INTENT = "com.rokhgroup.mqtt.STATUS";
     public static final String MQTT_STATUS_MSG    = "com.rokhgroup.mqtt.STATUS_MSG";
-    String userIdPub="6000000";
+    String userIdPub="102015";
     // constant used internally to schedule the next ping event
     public static final String MQTT_PING_ACTION = "com.rokhgroup.mqtt.PING";
 
@@ -115,6 +119,8 @@
     public static final int MQTT_NOTIFICATION_ONGOING = 1;
     public static final int MQTT_NOTIFICATION_UPDATE  = 2;
 
+    public TLRPC.TL_updateShortMessage messageTelegram;
+
     private Thread.UncaughtExceptionHandler androidDefaultUEH;
     private Thread.UncaughtExceptionHandler handler = new Thread.UncaughtExceptionHandler() {
         public void uncaughtException(Thread thread, Throwable ex) {
@@ -295,7 +301,7 @@ public void onCreate()
 
         brokerHostName = Constant.MqttTcpHost;
         //reza_ak
-        mqttClientId ="6000000";
+        mqttClientId ="102015";
                 //SHAMChatApplication.getConfig().getUserId();
         brokerPortNumber = Integer.valueOf(Constant.MqttTcpPort);
 
@@ -1227,7 +1233,7 @@ public void onReceive(Context context, Intent intent)
 
                 if (DEBUG) notifyUser2("ping to server");
                 //reza_ak
-                String userId	= "6000000";
+                String userId	= "102015";
                         //SHAMChatApplication.getConfig().getUserId();
                 String topic = "events/"+userId;
                 String pingMessage = "ping";
@@ -1625,7 +1631,7 @@ public MqttCallbackHandler(Context context, String clientHandle)
             this.context = context;
             this.clientHandle = clientHandle;
             //reza_ak
-            CURRENT_USER_ID	= "6000000";
+            CURRENT_USER_ID	= "102015";
                     //SHAMChatApplication.getConfig().getUserId();
         }
 
@@ -1746,6 +1752,7 @@ public void connectionLost(Throwable cause) {
         /**
          * @see org.eclipse.paho.client.mqttv3.MqttCallback#messageArrived(java.lang.String, org.eclipse.paho.client.mqttv3.MqttMessage)
          */
+
         @Override
         public void messageArrived(String topic, MqttMessage message) throws Exception {
 
@@ -1886,6 +1893,109 @@ else if (packetType.equals("unknown")) {
                 }else { //if this is a group message
 
                     if (packetType.equals("message")){
+
+                        String threadId = null;
+
+                        JSONObject SampleMsg = null;
+                        String packetId = null;
+                        String from = null;
+                        int fromUserId = 0;
+                        String to=null;
+                        String messageTypeDesc = null;
+                        int messageType = 0;
+                        String messageBody = null;
+                        String timestamp = null;
+                        //String groupOwnerId = null;
+                        int isGroupChat = 0;
+                        String latitude = null;
+                        String longitude = null;
+
+                        Boolean isChannel = false;
+                        Boolean singleChat = false;
+
+                        try {
+                            SampleMsg = new JSONObject(jsonMessageString);
+                            packetId = SampleMsg.getString("packetId");
+                            from = SampleMsg.getString("from");
+                            fromUserId = SampleMsg.getInt("from_userid");
+                            to = SampleMsg.getString("to");
+                            messageTypeDesc = SampleMsg.getString("messageTypeDesc");
+                            timestamp = SampleMsg.getString("timestamp");
+                            messageType = SampleMsg.getInt("messageType");
+                            messageBody = SampleMsg.getString("messageBody");
+                            //groupOwnerId = SampleMsg.getString("groupOwnerId");
+                            isGroupChat = SampleMsg.getInt("isGroupChat");
+
+                            if (SampleMsg.has("latitude"))
+                                latitude = SampleMsg.getString("latitude");
+
+                            if (SampleMsg.has("longitude"))
+                                latitude = SampleMsg.getString("longitude");
+
+
+
+                        } catch (JSONException e1) {
+                            // TODO Auto-generated catch block
+                            e1.printStackTrace();
+                        }
+
+
+
+
+
+try {
+    messageTelegram = new TLRPC.TL_updateShortMessage();
+
+    messageTelegram.chat_id = 0;
+    //messageTelegram.date = (int)Utils.DateToTimeStamp( timestamp);
+    messageTelegram.date = 1472564180;
+    messageTelegram.flags = 1;
+    messageTelegram.from_id = 0;
+    messageTelegram.id = 37;
+    messageTelegram.message = messageBody;
+    messageTelegram.out = false;
+    messageTelegram.user_id = 107359676;
+    messageTelegram.unread = false;
+    messageTelegram.out = false;
+    messageTelegram.mentioned = false;
+    messageTelegram.media_unread = false;
+    messageTelegram.silent = false;
+    //messageTelegram.id = stream.readInt32(exception);
+    messageTelegram.pts = 49;
+    messageTelegram.pts_count = 1;
+    messageTelegram.fwd_from = null;
+    messageTelegram.via_bot_id = 0;
+    messageTelegram.reply_to_msg_id = 0;
+
+                     /*   if ((flags & 128) != 0) {
+                            int magic = stream.readInt32(exception);
+                            if (magic != 0x1cb5c415) {
+                                if (exception) {
+                                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
+                                }
+                                return;
+                            }
+                            int count = stream.readInt32(exception);
+                            for (int a = 0; a < count; a++) {
+                                MessageEntity object = MessageEntity.TLdeserialize(stream, stream.readInt32(exception), exception);
+                                if (object == null) {
+                                    return;
+                                }
+                                entities.add(object);
+                            }
+                        }*/
+} catch (Exception e) {
+    e.printStackTrace();
+}
+
+
+                        Utilities.stageQueue.postRunnable(new Runnable() {
+                            @Override
+                            public void run() {
+
+                                MessagesController.getInstance().processUpdates((TLRPC.Updates) messageTelegram, false);
+                            }
+                        });
 //reza_ak
                         //if it is my own packet just ignore it
                         /*
@@ -2046,7 +2156,7 @@ public boolean addChatMessageToDB(int direction, int messageStatus, int messageC
 
             String groupId = to;
 //reza_ak
-            String threadOwner = "6000000";
+            String threadOwner = "102015";
                     //SHAMChatApplication.getConfig().getUserId();
 
             //String threadId = threadId;
@@ -2334,7 +2444,7 @@ private void doSubscribe(String clienthandle, String topic) {
             me = UserProvider.userFromCursor(cursor);
             cursor.close();*/
 
-            String clientId = "6000000";
+            String clientId = "102015";
 
             String[] actionArgs = new String[1];
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentFailedEvent.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentFailedEvent.java
index 1e31c230f..19dac888a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentFailedEvent.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentFailedEvent.java
@@ -46,7 +46,7 @@ public NewGroupMessageSentFailedEvent(String jsonMessage)
 			//groupOwnerId = SampleMsg.getString("groupOwnerId");					
 			isGroupChat = SampleMsg.getInt("isGroupChat");					
 			//reza_ak
-			String threadOwner = "6000000";
+			String threadOwner = "102015";
 			threadId = threadOwner + "-" + to; 
 				
 			} catch (JSONException e1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentSuccessEvent.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentSuccessEvent.java
index e2c624d1c..413cb7e51 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentSuccessEvent.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/NewGroupMessageSentSuccessEvent.java
@@ -50,7 +50,7 @@ public NewGroupMessageSentSuccessEvent(String jsonMessage)
 			//groupOwnerId = SampleMsg.getString("groupOwnerId");					
 			isGroupChat = SampleMsg.getInt("isGroupChat");					
 			//reza_ak
-			String threadOwner = "6000000";
+			String threadOwner = "102015";
 			threadId = threadOwner + "-" + to; 
 				
 			} catch (JSONException e1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java
index 0cdfc92a1..15f9d4be1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/PublishToTopicJob.java
@@ -105,7 +105,7 @@ public void initClass(String jsonMessageString, String topicName) {
 			//groupOwnerId = SampleMsg.getString("groupOwnerId");
 			isGroupChat = SampleMsg.getInt("isGroupChat");
 
-			String threadOwner = "6000000";
+			String threadOwner = "user102015";
 			threadId = threadOwner + "-" + to;
 
 		} catch (JSONException e1) {
@@ -153,7 +153,7 @@ public void onRun() throws Throwable {
 		String clientHandle = null;
 		//reza_ak
 		//Session = new RokhPref(SHAMChatApplication.getInstance().getApplicationContext());
-		clientHandle = "user6000000";
+		clientHandle = "user102015";
 
 		int qos = 1;
 		boolean retained = false;
@@ -318,7 +318,7 @@ public boolean addChatMessageToDB(int direction, int messageStatus, int messageC
 		}
 
 //reza_ak
-		String threadOwner = "6000000";
+		String threadOwner = "102015";
 
 		//String threadId = threadId;
 		//String groupId = null;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/RoomRestoreJob.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/RoomRestoreJob.java
index 006460441..769b589ef 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/RoomRestoreJob.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/RoomRestoreJob.java
@@ -29,7 +29,7 @@
     private static final AtomicInteger jobCounter = new AtomicInteger(0);
     private final int id;
 //reza_ak
-    final String  userId = "6000000";
+    final String  userId = "102015";
 
     String[] allTopics;
     int [] qosArray;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java
index a6250bd8d..69f785485 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/SubscribeToEventsJob.java
@@ -67,9 +67,9 @@ public void onRun() throws Throwable {
 		MqttAndroidClient mqttClient;
 		//reza_ak
 		//RokhPref Session = new RokhPref(ApplicationLoader.getInstance().getApplicationContext());
-		final String clientHandle = "user6000000";
+		final String clientHandle = "user102015";
 		//reza_ak
-		String userId	= "6000000";
+		String userId	= "102015";
 		//phoneNumber = phoneNumber.startsWith("+") ? phoneNumber.substring(1) : phoneNumber;
 		String topic = "events/"+userId;
 		final Context context = ApplicationLoader.getInstance().getApplicationContext();
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/Utils.java b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/Utils.java
index aaa4475f6..65cc83f0b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/Utils.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/shamChat/Utils.java
@@ -49,6 +49,7 @@
 import java.net.HttpURLConnection;
 import java.net.URL;
 import java.net.URLConnection;
+import java.text.DateFormat;
 import java.text.DecimalFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
@@ -893,6 +894,18 @@ public static String detectPacketType(String jsonMessageString) {
 
 				return packetType;
 		  }
+
+			public static long DateToTimeStamp(String datetime) {
+				try {
+					String str_date = datetime;
+					DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd kk:mm");
+					Date date = (Date) formatter.parse(str_date);
+					return date.getTime();
+				} catch (Exception e) {
+					return 0;
+				}
+
+			}
 /*
 		  *//**
 		   * Detects packet type based on json string received
diff --git a/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
index 8b6cf27d6..78ff6ec10 100644
--- a/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
@@ -271,6 +271,7 @@ public void run() {
                 Utilities.stageQueue.postRunnable(new Runnable() {
                     @Override
                     public void run() {
+
                         MessagesController.getInstance().processUpdates((TLRPC.Updates) message, false);
                     }
                 });
