diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 68e5feba0..ec78fd78b 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -2,31 +2,23 @@ apply plugin: 'com.android.application'
 
 repositories {
     mavenCentral()
-    maven {
-        url  "https://adcolony.bintray.com/AdColony"
-    }
 }
 
 dependencies {
     compile 'com.android.support:support-v4:23.4.0'
     compile "com.google.android.gms:play-services-gcm:8.4.0"
-  //  compile "com.google.android.gms:play-services-maps:8.4.0"
     compile 'net.hockeyapp.android:HockeySDK:4.0.1'
     compile 'com.googlecode.mp4parser:isoparser:1.0.6'
-
     compile 'org.slf4j:slf4j-log4j12:1.6.4'
     compile 'org.osmdroid:osmdroid-android:4.2'
-
     compile 'com.google.android.gms:play-services-analytics:8.4.0'
     compile 'com.google.code.gson:gson:2.2.4'
     compile 'com.paypal.sdk:paypal-android-sdk:2.14.2'
     compile 'com.google.android.gms:play-services-ads:8.4.0'
     compile 'com.android.support:multidex:1.0.1'
-    compile 'com.adcolony:sdk:3.0.5'
     compile fileTree(dir: 'libs', include: ['*.jar'])
 }
 
-
 android {
     compileSdkVersion 23
     buildToolsVersion '23.0.3'
@@ -38,13 +30,11 @@ android {
     }
 
     lintOptions {
-
         checkReleaseBuilds false
     }
     signingConfigs {
         debug {
         }
-
         release {
         }
     }
@@ -52,13 +42,10 @@ android {
     buildTypes {
         debug {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-
         }
-
         release {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
-
         foss {
             debuggable false
             jniDebuggable false
@@ -67,7 +54,7 @@ android {
     }
     sourceSets.main {
         jniLibs.srcDir 'libs'
-        jni.srcDirs = [] //disable automatic ndk-build call
+        jni.srcDirs = []
     }
 
     sourceSets.debug {
@@ -81,36 +68,6 @@ android {
     sourceSets.foss {
         manifest.srcFile 'config/foss/AndroidManifest.xml'
     }
-
- /*   productFlavors {
-        x86 {
-            ndk {
-                abiFilter "x86"
-            }
-            versionCode = 2
-        }
-        arm {
-            ndk {
-                abiFilter "armeabi"
-            }
-            versionCode = 0
-        }
-        armv7 {
-            ndk {
-                abiFilter "armeabi-v7a"
-            }
-            versionCode = 1
-        }
-        fat {
-            versionCode = 3
-        }
-    }*/
-
-  /*  applicationVariants.all { variant ->
-        def abiVersion = variant.productFlavors.get(0).versionCode
-        variant.mergedFlavor.versionCode = defaultConfig.versionCode * 10 + abiVersion;
-    }
-*/
     defaultConfig {
 
         multiDexEnabled true
@@ -120,18 +77,9 @@ android {
         versionName "3.3.0"
         ndk { abiFilters "armeabi", "armeabi-v7a", "x86"}
     }
-
-    /*defaultConfig {
-        multiDexEnabled true
-    }*/
-
-  /*  dexOptions {
-        jumboMode true
-    }*/
     dexOptions {
         javaMaxHeapSize "3g"
         preDexLibraries = false
-
     }
 }
 
diff --git a/TMessagesProj/jni/arm64-v8a/libsinch-android-rtc.so b/TMessagesProj/jni/arm64-v8a/libsinch-android-rtc.so
deleted file mode 100755
index e1a016185..000000000
Binary files a/TMessagesProj/jni/arm64-v8a/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/jni/armeabi-v7a/libsinch-android-rtc.so b/TMessagesProj/jni/armeabi-v7a/libsinch-android-rtc.so
deleted file mode 100755
index 5cf49d6f7..000000000
Binary files a/TMessagesProj/jni/armeabi-v7a/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/jni/x86/libsinch-android-rtc.so b/TMessagesProj/jni/x86/libsinch-android-rtc.so
deleted file mode 100755
index 2765eacb6..000000000
Binary files a/TMessagesProj/jni/x86/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/jni/x86_64/libsinch-android-rtc.so b/TMessagesProj/jni/x86_64/libsinch-android-rtc.so
deleted file mode 100755
index 6560ee750..000000000
Binary files a/TMessagesProj/jni/x86_64/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/libs/arm64-v8a/libsinch-android-rtc.so b/TMessagesProj/libs/arm64-v8a/libsinch-android-rtc.so
deleted file mode 100755
index 27164d65f..000000000
Binary files a/TMessagesProj/libs/arm64-v8a/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/libs/armeabi-v7a/libsinch-android-rtc.so b/TMessagesProj/libs/armeabi-v7a/libsinch-android-rtc.so
deleted file mode 100755
index 3f1dbd530..000000000
Binary files a/TMessagesProj/libs/armeabi-v7a/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/libs/heyzap-unified-platform-10.2.0.aar b/TMessagesProj/libs/heyzap-unified-platform-10.2.0.aar
deleted file mode 100644
index efff5b3ab..000000000
Binary files a/TMessagesProj/libs/heyzap-unified-platform-10.2.0.aar and /dev/null differ
diff --git a/TMessagesProj/libs/sinch-android-rtc-3.9.9.jar b/TMessagesProj/libs/sinch-android-rtc-3.9.9.jar
deleted file mode 100644
index 40e0e2166..000000000
Binary files a/TMessagesProj/libs/sinch-android-rtc-3.9.9.jar and /dev/null differ
diff --git a/TMessagesProj/libs/x86/libsinch-android-rtc.so b/TMessagesProj/libs/x86/libsinch-android-rtc.so
deleted file mode 100755
index 292c0b3c9..000000000
Binary files a/TMessagesProj/libs/x86/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/libs/x86_64/libsinch-android-rtc.so b/TMessagesProj/libs/x86_64/libsinch-android-rtc.so
deleted file mode 100755
index 86403754a..000000000
Binary files a/TMessagesProj/libs/x86_64/libsinch-android-rtc.so and /dev/null differ
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 8a7f35f43..20a0163d0 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -12,7 +12,6 @@
                       android:resizeable="true"
                       android:smallScreens="true"
                       android:xlargeScreens="true"/>
-
     <uses-feature android:glEsVersion="0x00020000" android:required="false"/>
     <uses-feature android:name="android.hardware.telephony" android:required="false" />
     <uses-feature android:name="android.hardware.wifi" android:required="false" />
@@ -55,14 +54,10 @@
         android:largeHeap="true"
         android:theme="@style/Theme.TMessages.Start"
         android:manageSpaceActivity="org.telegram.ui.ManageSpaceActivity">
-
-        <service android:name="org.telegram.calling.SinchService"></service>
-
-        <activity
+           <activity
             android:name="com.google.android.gms.ads.AdActivity"
             android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
             android:theme="@android:style/Theme.Translucent" />
-
         <activity
             android:name="org.telegram.ui.LaunchActivity"
             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
@@ -233,45 +228,17 @@
                 <action android:name="android.intent.action.BOOT_COMPLETED" />
             </intent-filter>
         </receiver>
-
         <receiver android:name=".WearReplyReceiver" android:enabled="true"/>
-
         <receiver android:name=".ShareBroadcastReceiver" android:enabled="true"/>
-
         <receiver android:name=".NotificationDismissReceiver" android:exported="false"/>
-
         <uses-library android:name="com.sec.android.app.multiwindow" android:required="false" />
         <meta-data android:name="com.sec.android.support.multiwindow" android:value="true" />
         <meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_W" android:value="632dp" />
         <meta-data android:name="com.sec.android.multiwindow.DEFAULT_SIZE_H" android:value="598dp" />
         <meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_W" android:value="632dp" />
         <meta-data android:name="com.sec.android.multiwindow.MINIMUM_SIZE_H" android:value="598dp" />
-
         <meta-data android:name="com.google.android.gms.car.notification.SmallIcon" android:resource="@drawable/ic_player" />
         <meta-data android:name="com.google.android.gms.car.application" android:resource="@xml/automotive_app_desc" />
-
-        //////////////////Heyzap setup//////////////
-
-        <meta-data android:name="applovin.sdk.key" android:value="dfk5Pw2g-MATQrrpwnty_SmFI6SpbdlEHSKhNMNLiXv7NlxHVoEVF_lT5BLgq4v6XDpwaAFIi9Q5vLMP8avOZd"/><!--JdRV_FOXtZc-mX_BuQGEnE7MrSEsRH_mvQFvgeQXC2WzaV8SwPghdp3TGHJiZJSTliMPMoyTrSVPyest3XZgLc-->"  />
-
-        <activity android:name="com.adcolony.sdk.AdColonyInterstitialActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"
-            android:hardwareAccelerated="true"/>
-        <activity android:name="com.adcolony.sdk.AdColonyAdViewActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-
-
-   //////////////////////////////////////////////////////////////////////////////////////////
-
-
-        <activity android:name="org.telegram.calling.CallScreenActivity" android:screenOrientation="portrait"/>
-        <activity android:name="org.telegram.calling.PlaceCallActivity"
-            android:screenOrientation="portrait"/>
-        <activity android:name="org.telegram.calling.LoginActivity"
-            android:screenOrientation="portrait"/>
-
-
-
     </application>
 
 </manifest>
diff --git a/TMessagesProj/src/main/java/org/telegram/calling/AudioPlayer.java b/TMessagesProj/src/main/java/org/telegram/calling/AudioPlayer.java
deleted file mode 100644
index 71edf1b7a..000000000
--- a/TMessagesProj/src/main/java/org/telegram/calling/AudioPlayer.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package org.telegram.calling;
-
-import android.content.Context;
-import android.content.res.AssetFileDescriptor;
-import android.media.AudioFormat;
-import android.media.AudioManager;
-import android.media.AudioTrack;
-import android.media.MediaPlayer;
-import android.net.Uri;
-import android.util.Log;
-
-import org.telegram.messenger.R;
-
-import java.io.FileInputStream;
-import java.io.IOException;
-
-public class AudioPlayer {
-
-    static final String LOG_TAG = AudioPlayer.class.getSimpleName();
-
-    private Context mContext;
-    private AudioTrack mProgressTone;
-
-    private final static int SAMPLE_RATE = 16000;
-
-    public AudioPlayer(Context context) {
-        this.mContext = context.getApplicationContext();
-    }
-
-    public void playProgressTone() {
-        stopProgressTone();
-        try {
-            mProgressTone = createProgressTone(mContext);
-            mProgressTone.play();
-        } catch (Exception e) {
-            Log.e(LOG_TAG, "Could not play progress tone", e);
-        }
-    }
-
-    public void stopProgressTone() {
-        if (mProgressTone != null) {
-            mProgressTone.stop();
-            mProgressTone.release();
-            mProgressTone = null;
-        }
-    }
-
-    private static AudioTrack createProgressTone(Context context) throws IOException {
-        AssetFileDescriptor fd = context.getResources().openRawResourceFd(R.raw.progress_tone);
-        int length = (int) fd.getLength();
-
-        AudioTrack audioTrack = new AudioTrack(AudioManager.STREAM_VOICE_CALL, SAMPLE_RATE,
-                AudioFormat.CHANNEL_OUT_MONO, AudioFormat.ENCODING_PCM_16BIT, length, AudioTrack.MODE_STATIC);
-
-        byte[] data = new byte[length];
-        readFileToBytes(fd, data);
-
-        audioTrack.write(data, 0, data.length);
-        audioTrack.setLoopPoints(0, data.length / 2, 30);
-
-        return audioTrack;
-    }
-
-    private static void readFileToBytes(AssetFileDescriptor fd, byte[] data) throws IOException {
-        FileInputStream inputStream = fd.createInputStream();
-
-        int bytesRead = 0;
-        while (bytesRead < data.length) {
-            int res = inputStream.read(data, bytesRead, (data.length - bytesRead));
-            if (res == -1) {
-                break;
-            }
-            bytesRead += res;
-        }
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/calling/BaseActivity.java b/TMessagesProj/src/main/java/org/telegram/calling/BaseActivity.java
deleted file mode 100644
index f3d55652b..000000000
--- a/TMessagesProj/src/main/java/org/telegram/calling/BaseActivity.java
+++ /dev/null
@@ -1,49 +0,0 @@
-package org.telegram.calling;
-
-import android.app.Activity;
-import android.content.ComponentName;
-import android.content.Intent;
-import android.content.ServiceConnection;
-import android.os.Bundle;
-import android.os.IBinder;
-
-public abstract class BaseActivity extends Activity implements ServiceConnection {
-
-    private SinchService.SinchServiceInterface mSinchServiceInterface;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        getApplicationContext().bindService(new Intent(this, SinchService.class), this,
-                BIND_AUTO_CREATE);
-    }
-
-    @Override
-    public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
-        if (SinchService.class.getName().equals(componentName.getClassName())) {
-            mSinchServiceInterface = (SinchService.SinchServiceInterface) iBinder;
-            onServiceConnected();
-        }
-    }
-
-    @Override
-    public void onServiceDisconnected(ComponentName componentName) {
-        if (SinchService.class.getName().equals(componentName.getClassName())) {
-            mSinchServiceInterface = null;
-            onServiceDisconnected();
-        }
-    }
-
-    protected void onServiceConnected() {
-        // for subclasses
-    }
-
-    protected void onServiceDisconnected() {
-        // for subclasses
-    }
-
-    protected SinchService.SinchServiceInterface getSinchServiceInterface() {
-        return mSinchServiceInterface;
-    }
-
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/calling/CallScreenActivity.java b/TMessagesProj/src/main/java/org/telegram/calling/CallScreenActivity.java
deleted file mode 100644
index 53dd9a59f..000000000
--- a/TMessagesProj/src/main/java/org/telegram/calling/CallScreenActivity.java
+++ /dev/null
@@ -1,158 +0,0 @@
-package org.telegram.calling;
-
-import com.sinch.android.rtc.PushPair;
-import com.sinch.android.rtc.calling.Call;
-import com.sinch.android.rtc.calling.CallEndCause;
-import com.sinch.android.rtc.calling.CallListener;
-
-import android.media.AudioManager;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import org.telegram.messenger.R;
-
-import java.util.List;
-import java.util.Locale;
-import java.util.Timer;
-import java.util.TimerTask;
-
-public class CallScreenActivity extends BaseActivity {
-
-    static final String TAG = CallScreenActivity.class.getSimpleName();
-
-    private AudioPlayer mAudioPlayer;
-    private Timer mTimer;
-    private UpdateCallDurationTask mDurationTask;
-    private String mCallId;
-    private long mCallStart = 0;
-    private TextView mCallDuration;
-    private TextView mCallState;
-    private TextView mCallerName;
-
-    private class UpdateCallDurationTask extends TimerTask {
-
-        @Override
-        public void run() {
-            CallScreenActivity.this.runOnUiThread(new Runnable() {
-                @Override
-                public void run() {
-                    updateCallDuration();
-                }
-            });
-        }
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.callscreen);
-
-        mAudioPlayer = new AudioPlayer(this);
-        mCallDuration = (TextView) findViewById(R.id.callDuration);
-        mCallerName = (TextView) findViewById(R.id.remoteUser);
-        mCallState = (TextView) findViewById(R.id.callState);
-        Button endCallButton = (Button) findViewById(R.id.hangupButton);
-
-        endCallButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                endCall();
-            }
-        });
-        mCallStart = System.currentTimeMillis();
-        mCallId = getIntent().getStringExtra(SinchService.CALL_ID);
-    }
-
-    @Override
-    public void onServiceConnected() {
-        Call call = getSinchServiceInterface().getCall(mCallId);
-        if (call != null) {
-            call.addCallListener(new SinchCallListener());
-            mCallerName.setText(call.getRemoteUserId());
-            mCallState.setText(call.getState().toString());
-        } else {
-            Log.e(TAG, "Started with invalid callId, aborting.");
-            finish();
-        }
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        mDurationTask.cancel();
-        mTimer.cancel();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        mTimer = new Timer();
-        mDurationTask = new UpdateCallDurationTask();
-        mTimer.schedule(mDurationTask, 0, 500);
-    }
-
-    @Override
-    public void onBackPressed() {
-        // User should exit activity by ending call, not by going back.
-    }
-
-    private void endCall() {
-        mAudioPlayer.stopProgressTone();
-        Call call = getSinchServiceInterface().getCall(mCallId);
-        if (call != null) {
-            call.hangup();
-        }
-        finish();
-    }
-
-    private String formatTimespan(long timespan) {
-        long totalSeconds = timespan / 1000;
-        long minutes = totalSeconds / 60;
-        long seconds = totalSeconds % 60;
-        return String.format(Locale.US, "%02d:%02d", minutes, seconds);
-    }
-
-    private void updateCallDuration() {
-        if (mCallStart > 0) {
-            mCallDuration.setText(formatTimespan(System.currentTimeMillis() - mCallStart));
-        } }
-
-    private class SinchCallListener implements CallListener {
-
-        @Override
-        public void onCallEnded(Call call) {
-            CallEndCause cause = call.getDetails().getEndCause();
-            Log.d(TAG, "Call ended. Reason: " + cause.toString());
-            mAudioPlayer.stopProgressTone();
-            setVolumeControlStream(AudioManager.USE_DEFAULT_STREAM_TYPE);
-            String endMsg = "Call ended: " + call.getDetails().toString();
-            Toast.makeText(CallScreenActivity.this, endMsg, Toast.LENGTH_LONG).show();
-            endCall();
-        }
-
-        @Override
-        public void onCallEstablished(Call call) {
-            Log.d(TAG, "Call established");
-            mAudioPlayer.stopProgressTone();
-            mCallState.setText(call.getState().toString());
-            setVolumeControlStream(AudioManager.STREAM_VOICE_CALL);
-            mCallStart = System.currentTimeMillis();
-        }
-
-        @Override
-        public void onCallProgressing(Call call) {
-            Log.d(TAG, "Call progressing");
-            mAudioPlayer.playProgressTone();
-        }
-
-        @Override
-        public void onShouldSendPushNotification(Call call, List<PushPair> pushPairs) {
-        }
-
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/calling/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/calling/LoginActivity.java
deleted file mode 100644
index 05b869aca..000000000
--- a/TMessagesProj/src/main/java/org/telegram/calling/LoginActivity.java
+++ /dev/null
@@ -1,98 +0,0 @@
-package org.telegram.calling;
-
-import com.sinch.android.rtc.SinchError;
-
-import android.app.ProgressDialog;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import org.telegram.messenger.R;
-
-public class LoginActivity extends BaseActivity /*implements SinchService.StartFailedListener*/ {
-/*
-
-    private Button mLoginButton;
-    private EditText mLoginName;
-    private ProgressDialog mSpinner;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.login);
-
-        mLoginName = (EditText) findViewById(R.id.loginName);
-
-        mLoginButton = (Button) findViewById(R.id.loginButton);
-        mLoginButton.setEnabled(false);
-        mLoginButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                loginClicked();
-            }
-        });
-    }
-
-    @Override
-    protected void onServiceConnected() {
-        mLoginButton.setEnabled(true);
-        getSinchServiceInterface().setStartListener(this);
-    }
-
-    @Override
-    protected void onPause() {
-        if (mSpinner != null) {
-            mSpinner.dismiss();
-        }
-        super.onPause();
-    }
-
-
-    @Override
-    public void onStartFailed(SinchError error) {
-        Toast.makeText(this, error.toString(), Toast.LENGTH_LONG).show();
-        if (mSpinner != null) {
-            mSpinner.dismiss();
-        }
-    }
-
-
-
-    @Override
-    public void onStarted() {
-        openPlaceCallActivity();
-    }
-
-    private void loginClicked() {
-        String userName = mLoginName.getText().toString();
-
-        if (userName.isEmpty()) {
-            Toast.makeText(this, "Please enter a name", Toast.LENGTH_LONG).show();
-            return;
-        }
-
-        if (!getSinchServiceInterface().isStarted()) {
-            getSinchServiceInterface().startClient(userName);
-            showSpinner();
-        } else {
-            openPlaceCallActivity();
-        }
-    }
-
-    private void openPlaceCallActivity() {
-        Intent mainActivity = new Intent(this, PlaceCallActivity.class);
-        startActivity(mainActivity);
-    }
-
-    private void showSpinner() {
-        mSpinner = new ProgressDialog(this);
-        mSpinner.setTitle("Logging in");
-        mSpinner.setMessage("Please wait...");
-        mSpinner.show();
-    }
-*/
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/calling/PlaceCallActivity.java b/TMessagesProj/src/main/java/org/telegram/calling/PlaceCallActivity.java
deleted file mode 100644
index 34b69f228..000000000
--- a/TMessagesProj/src/main/java/org/telegram/calling/PlaceCallActivity.java
+++ /dev/null
@@ -1,140 +0,0 @@
-package org.telegram.calling;
-
-import com.sinch.android.rtc.SinchError;
-import com.sinch.android.rtc.calling.Call;
-
-import android.app.ProgressDialog;
-import android.content.ComponentName;
-import android.content.Intent;
-import android.os.Bundle;
-import android.os.IBinder;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import org.telegram.messenger.R;
-
-public class PlaceCallActivity extends BaseActivity implements SinchService.StartFailedListener{
-
-    private Button mCallButton;
-    private EditText mCallName;
-    private Button mLoginButton;
-    private EditText mLoginName;
-    private ProgressDialog mSpinner;
- //   private Button logIn;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
-        mCallName = (EditText) findViewById(R.id.callName);
-        mCallButton = (Button) findViewById(R.id.callButton);
-        mCallButton.setEnabled(false);
-        mCallButton.setOnClickListener(buttonClickListener);
-
-        if(getIntent().getExtras()!=null){
-            mCallName.setText(getIntent().getStringExtra("mob"));
-        }
-
-      }
-
-    @Override
-    protected void onServiceConnected() {
-
-         // logIn.setVisibility(View.GONE);
-         getSinchServiceInterface().setStartListener(this);
-         TextView userName = (TextView) findViewById(R.id.loggedInName);
-         userName.setText(getSinchServiceInterface().getUserName());
-         mCallButton.setEnabled(true);
-    }
-
-// TO Do if you want to stop the service then enable this
-    private void stopButtonClicked() {
-        if (getSinchServiceInterface() != null) {
-            getSinchServiceInterface().stopClient();
-        }
-        finish();
-    }
-
-    private void callButtonClicked() {
-        loginClicked();
-        String phoneNumber = mCallName.getText().toString();
-        if (phoneNumber.isEmpty()) {
-            Toast.makeText(this, "Please enter a number to call", Toast.LENGTH_LONG).show();
-            return;
-        }
-
-        Call call = getSinchServiceInterface().callPhoneNumber(phoneNumber);
-        String callId = call.getCallId();
-
-        Intent callScreen = new Intent(this, CallScreenActivity.class);
-        callScreen.putExtra(SinchService.CALL_ID, callId);
-        startActivity(callScreen);
-    }
-
-
-    private void loginClicked() {
-      //ToDO // get unique  user name to register a user:
-        String userName = "Ashish Srivastava";
-      try {
-    if (!getSinchServiceInterface().isStarted()) {
-        getSinchServiceInterface().startClient(userName);
-        showSpinner();
-    }
-    }     catch (Exception e){
-
-     }
-    }
-
-    private void showSpinner() {
-        mSpinner = new ProgressDialog(this);
-        mSpinner.setTitle("Logging in");
-        mSpinner.setMessage("Please wait...");
-        mSpinner.show();
-    }
-
-    private OnClickListener buttonClickListener = new OnClickListener() {
-        @Override
-        public void onClick(View v) {
-            switch (v.getId()) {
-                case R.id.callButton:
-                    callButtonClicked();
-                    break;
-
-               /* case R.id.stopButton:
-                    stopButtonClicked();
-                    break;*/
-
-            }
-        }
-    };
-    @Override
-    public void onStartFailed(SinchError error) {
-        Toast.makeText(this, error.toString(), Toast.LENGTH_LONG).show();
-        if (mSpinner != null) {
-            mSpinner.dismiss();
-        }
-    }
-
-    @Override
-    public void onStarted() {
-       // findViewById(R.id.ll_caller).setVisibility(View.VISIBLE);
-     //   logIn.setVisibility(View.GONE);
-        if (mSpinner != null) {
-            mSpinner.dismiss();
-        }
-
-
-    }
-
-
-
-    @Override
-    protected void onServiceDisconnected() {
-        super.onServiceDisconnected();
-
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/telegram/calling/SinchService.java b/TMessagesProj/src/main/java/org/telegram/calling/SinchService.java
deleted file mode 100644
index aec8abc0c..000000000
--- a/TMessagesProj/src/main/java/org/telegram/calling/SinchService.java
+++ /dev/null
@@ -1,167 +0,0 @@
-package org.telegram.calling;
-
-import com.sinch.android.rtc.ClientRegistration;
-import com.sinch.android.rtc.Sinch;
-import com.sinch.android.rtc.SinchClient;
-import com.sinch.android.rtc.SinchClientListener;
-import com.sinch.android.rtc.SinchError;
-import com.sinch.android.rtc.calling.Call;
-import com.sinch.android.rtc.calling.CallClient;
-import com.sinch.android.rtc.calling.CallClientListener;
-
-import android.app.Service;
-import android.content.Intent;
-import android.os.Binder;
-import android.os.IBinder;
-import android.util.Log;
-
-public class SinchService extends Service {
-
-    private static final String APP_KEY ="6e7e639a-4154-4d8a-9154-bafc474a77dc";
-    private static final String APP_SECRET = "thrYVCppvE+gLtySZnlIyg==";
-    private static final String ENVIRONMENT = "sandbox.sinch.com";
-    public static final String CALL_ID = "CALL_ID";
-    static final String TAG = SinchService.class.getSimpleName();
-    private SinchServiceInterface mSinchServiceInterface = new SinchServiceInterface();
-    private SinchClient mSinchClient;
-    private String mUserId;
-
-    private StartFailedListener mListener;
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-    }
-
-    @Override
-    public void onDestroy() {
-        if (mSinchClient != null && mSinchClient.isStarted()) {
-            mSinchClient.terminate();
-        }
-      super.onDestroy();
-    }
-
-    private  void start(String userName) {
-        if (mSinchClient == null) {
-            mUserId = userName;
-            mSinchClient = Sinch.getSinchClientBuilder().context(getApplicationContext()).userId(userName)
-                    .applicationKey(APP_KEY)
-                    .applicationSecret(APP_SECRET)
-                    .environmentHost(ENVIRONMENT).build();
-
-            mSinchClient.setSupportCalling(true);
-
-            mSinchClient.addSinchClientListener(new MySinchClientListener());
-            mSinchClient.start();
-        }
-    }
-
-    private void stop() {
-        if (mSinchClient != null) {
-            mSinchClient.terminate();
-            mSinchClient = null;
-        }
-    }
-    private boolean isStarted() {
-        return (mSinchClient != null && mSinchClient.isStarted());
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return mSinchServiceInterface;
-    }
-
-    public class SinchServiceInterface extends Binder {
-
-        public Call callPhoneNumber(String phoneNumber) {
-            return mSinchClient.getCallClient().callPhoneNumber(phoneNumber);
-        }
-
-        public Call callUser(String userId) {
-            return mSinchClient.getCallClient().callUser(userId);
-        }
-
-        public String getUserName() {
-            return mUserId;
-        }
-
-        public boolean isStarted() {
-            return SinchService.this.isStarted();
-        }
-
-        public void startClient(String userName) {
-            start(userName);
-        }
-
-        public void stopClient() {
-            stop();
-        }
-
-        public void setStartListener(StartFailedListener listener) {
-            mListener = listener;
-        }
-
-        public Call getCall(String callId) {
-            return mSinchClient.getCallClient().getCall(callId);
-        }
-    }
-
-    public interface StartFailedListener {
-
-        void onStartFailed(SinchError error);
-
-        void onStarted();
-    }
-
-    private class MySinchClientListener implements SinchClientListener {
-
-        @Override
-        public void onClientFailed(SinchClient client, SinchError error) {
-            if (mListener != null) {
-                mListener.onStartFailed(error);
-            }
-            mSinchClient.terminate();
-            mSinchClient = null;
-        }
-
-        @Override
-        public void onClientStarted(SinchClient client) {
-            Log.d(TAG, "SinchClient started");
-            if (mListener != null) {
-                mListener.onStarted();
-            }
-        }
-
-        @Override
-        public void onClientStopped(SinchClient client) {
-            Log.d(TAG, "SinchClient stopped");
-        }
-
-        @Override
-        public void onLogMessage(int level, String area, String message) {
-            switch (level) {
-                case Log.DEBUG:
-                    Log.d(area, message);
-                    break;
-                case Log.ERROR:
-                    Log.e(area, message);
-                    break;
-                case Log.INFO:
-                    Log.i(area, message);
-                    break;
-                case Log.VERBOSE:
-                    Log.v(area, message);
-                    break;
-                case Log.WARN:
-                    Log.w(area, message);
-                    break;
-            }
-        }
-
-        @Override
-        public void onRegistrationCredentialsRequired(SinchClient client,
-                ClientRegistration clientRegistration) {
-        }
-    }
-
-}
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 990bbb5c2..f984aad30 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -34,7 +34,6 @@
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GooglePlayServicesUtil;
 
-import org.telegram.calling.SinchService;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.SerializedData;
 import org.telegram.tgnet.TLRPC;
diff --git a/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java b/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
index a566f7ea3..6331100f6 100644
--- a/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
@@ -25,15 +25,7 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.adcolony.sdk.AdColony;
-import com.adcolony.sdk.AdColonyAdOptions;
-import com.adcolony.sdk.AdColonyAppOptions;
-import com.adcolony.sdk.AdColonyInterstitial;
-import com.adcolony.sdk.AdColonyInterstitialListener;
-import com.adcolony.sdk.AdColonyReward;
-import com.adcolony.sdk.AdColonyRewardListener;
-import com.adcolony.sdk.AdColonyUserMetadata;
-import com.adcolony.sdk.AdColonyZone;
+
 import com.google.gson.Gson;
 
 import com.paypal.android.sdk.payments.PayPalAuthorization;
@@ -105,9 +97,7 @@
     final private String APP_ID = "app185a7e71e1714831a49ec7";
     final private String ZONE_ID = "vzdf92c3785a1945eea7";
 
-    private AdColonyInterstitial ad;
-    private AdColonyInterstitialListener listener;
-    private AdColonyAdOptions ad_options;
+
     private boolean isAddLoad=false;
     private boolean isLoading=false;
     private boolean isWatch=false;
@@ -125,7 +115,7 @@
     private RadioButton adBtn;
     private ProgressBar progress;
     private Button show_button;
-    private AdColonyRewardListener listner1;
+
     private View view;
     private static View dialogView;
     private Dialog dialog;
@@ -180,32 +170,32 @@ private void acttionBarSetup() {
 
 
 
-    public void intializeAds(){
-        /*
+  /*  public void intializeAds()*//*{
+        *//*
         LayoutInflater inflater = (LayoutInflater)PaymentManager.this
                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        view = inflater.inflate(R.layout.layout_dialog_watch, null);
        show_button=(Button)view.findViewById(R.id.watch_ads);
-        progress = (ProgressBar) view.findViewById( R.id.progress );*/
+        progress = (ProgressBar) view.findViewById( R.id.progress );*//*
 
-        /** Construct optional app options object to be sent with configure */
+        *//** Construct optional app options object to be sent with configure *//*
         AdColonyAppOptions app_options = new AdColonyAppOptions()
                 .setUserID( "unique_user_id" );
         app_options.setOriginStore("Blackberry");
 
-        /**
+        *//**
          * Configure AdColony in your launching Activity's onCreate() method so that cached ads can
          * be available as soon as possible.
-         */
+         *//*
         AdColony.configure( this, app_options, APP_ID, ZONE_ID );
 
-        /** Optional user metadata sent with the ad options in each request */
+        *//** Optional user metadata sent with the ad options in each request *//*
         AdColonyUserMetadata metadata = new AdColonyUserMetadata()
                 .setUserAge( 26 )
                 .setUserEducation( AdColonyUserMetadata.USER_EDUCATION_BACHELORS_DEGREE )
                 .setUserGender( AdColonyUserMetadata.USER_MALE );
 
-        /** Ad specific options to be sent with request */
+        *//** Ad specific options to be sent with request *//*
         ad_options = new AdColonyAdOptions()
                 .enableConfirmationDialog( true )
                 .enableResultsDialog( true )
@@ -222,38 +212,38 @@ public void onReward(AdColonyReward adColonyReward) {
         };
 
 
-     /*   *//** Create and set a reward listener *//*
+     *//*   *//**//** Create and set a reward listener *//**//*
         AdColony.setRewardListener( new AdColonyRewardListener()
         {
             @Override
             public void onReward( AdColonyReward reward )
             {
-                *//** Query reward object for info here *//*
+                *//**//** Query reward object for info here *//**//*
                 Log.d( TAG, "onReward" );
             }
-        } );*/
+        } );*//*
 
-        /**
+        *//**
          * Set up listener for interstitial ad callbacks. You only need to implement the callbacks
          * that you care about. The only required callback is onRequestFilled, as this is the only
          * way to get an ad object.
-         */
+         *//*
         listener = new AdColonyInterstitialListener()
         {
-            /** Ad passed back in request filled callback, ad can now be shown */
+            *//** Ad passed back in request filled callback, ad can now be shown *//*
             @Override
             public void onRequestFilled( AdColonyInterstitial ad )
             {
                 PaymentManager.this.ad = ad;
                 isAddLoad=true;
                 isLoading=false;
-                /* show_button.setEnabled( true );
+                *//* show_button.setEnabled( true );
                 show_button.setSelected(true);
-                progress.setVisibility( View.GONE );*/
+                progress.setVisibility( View.GONE );*//*
                 Log.d( TAG, "onRequestFilled" );
             }
 
-            /** Ad request was not filled */
+            *//** Ad request was not filled *//*
             @Override
             public void onRequestNotFilled( AdColonyZone zone )
             {
@@ -263,18 +253,18 @@ public void onRequestNotFilled( AdColonyZone zone )
                 Log.d( TAG, "onRequestNotFilled");
             }
 
-            /** Ad opened, reset UI to reflect state change */
+            *//** Ad opened, reset UI to reflect state change *//*
             @Override
             public void onOpened( AdColonyInterstitial ad )
             {
                 isLoading=false;
                 isAddLoad=false;
-                /*show_button.setEnabled( false );
+                *//*show_button.setEnabled( false );
                 progress.setVisibility( View.VISIBLE );
-                Log.d( TAG, "onOpened" );*/
+                Log.d( TAG, "onOpened" );*//*
             }
 
-            /** Request a new ad if ad is expiring */
+            *//** Request a new ad if ad is expiring *//*
             @Override
             public void onExpiring( AdColonyInterstitial ad )
             {
@@ -282,16 +272,16 @@ public void onExpiring( AdColonyInterstitial ad )
                 isLoading=false;
                 isAddLoad=false;
 
-                /*show_button.setEnabled( false );
+                *//*show_button.setEnabled( false );
                 progress.setVisibility( View.VISIBLE );
                 AdColony.requestInterstitial( ZONE_ID, this, ad_options );
-                Log.d( TAG, "onExpiring" );*/
+                Log.d( TAG, "onExpiring" );*//*
             }
         };
 
-        /** Set up button to show an ad when clicked */
+        *//** Set up button to show an ad when clicked *//*
 
-       /* show_button.setOnClickListener( new View.OnClickListener()
+       *//* show_button.setOnClickListener( new View.OnClickListener()
         {
             @Override
             public void onClick( View view )
@@ -301,30 +291,30 @@ public void onClick( View view )
                   Toast.makeText(PaymentManager.this,"Currently ads not available!",Toast.LENGTH_SHORT).show();
               }
             }
-        } );*/
+        } );*//*
 
-    }
+    }*/
 
 
-    public void showAds(){
-        /** Construct optional app options object to be sent with configure */
+    /*public void showAds()*//*{
+        *//** Construct optional app options object to be sent with configure *//*
         AdColonyAppOptions app_options = new AdColonyAppOptions()
                 .setUserID( "unique_user_id" );
 
-        /**
+        *//**
          * Configure AdColony in your launching Activity's onCreate() method so that cached ads can
          * be available as soon as possible.
-         */
+         *//*
         AdColony.configure( this, app_options, APP_ID, ZONE_ID );
 
 
-        /** Optional user metadata sent with the ad options in each request */
+        *//** Optional user metadata sent with the ad options in each request *//*
         AdColonyUserMetadata metadata = new AdColonyUserMetadata()
                 .setUserAge( 26 )
                 .setUserEducation( AdColonyUserMetadata.USER_EDUCATION_BACHELORS_DEGREE )
                 .setUserGender( AdColonyUserMetadata.USER_MALE );
 
-        /** Ad specific options to be sent with request */
+        *//** Ad specific options to be sent with request *//*
         ad_options = new AdColonyAdOptions()
                 .enableConfirmationDialog( true )
                 .enableResultsDialog( true )
@@ -333,25 +323,25 @@ public void showAds(){
 
 
   /////////////////////////////////////////////////////
-        /** Create and set a reward listener */
+        *//** Create and set a reward listener *//*
         AdColony.setRewardListener( new AdColonyRewardListener()
         {
             @Override
             public void onReward( AdColonyReward reward )
             {
-                /** Query reward object for info here */
+                *//** Query reward object for info here *//*
                 Log.d( TAG, "onReward" );
             }
         } );
 
-        /**
+        *//**
          * Set up listener for interstitial ad callbacks. You only need to implement the callbacks
          * that you care about. The only required callback is onRequestFilled, as this is the only
          * way to get an ad object.
-         */
+         *//*
         listener = new AdColonyInterstitialListener()
         {
-            /** Ad passed back in request filled callback, ad can now be shown */
+            *//** Ad passed back in request filled callback, ad can now be shown *//*
             @Override
             public void onRequestFilled( AdColonyInterstitial ad )
             {
@@ -363,7 +353,7 @@ public void onRequestFilled( AdColonyInterstitial ad )
                 Log.d( TAG, "onRequestFilled" );
             }
 
-            /** Ad request was not filled */
+            *//** Ad request was not filled *//*
             @Override
             public void onRequestNotFilled( AdColonyZone zone )
             {
@@ -371,7 +361,7 @@ public void onRequestNotFilled( AdColonyZone zone )
                 Log.d( TAG, "onRequestNotFilled");
             }
 
-            /** Ad opened, reset UI to reflect state change */
+            *//** Ad opened, reset UI to reflect state change *//*
             @Override
             public void onOpened( AdColonyInterstitial ad )
             {
@@ -380,7 +370,7 @@ public void onOpened( AdColonyInterstitial ad )
                 Log.d( TAG, "onOpened" );
             }
 
-            /** Request a new ad if ad is expiring */
+            *//** Request a new ad if ad is expiring *//*
             @Override
             public void onExpiring( AdColonyInterstitial ad )
             {
@@ -391,8 +381,8 @@ public void onExpiring( AdColonyInterstitial ad )
             }
         };
         //ad.show();
-        /** Set up button to show an ad when clicked */
-  /*      show_button = (Button) findViewById( R.id.showbutton );
+        *//** Set up button to show an ad when clicked *//*
+  *//*      show_button = (Button) findViewById( R.id.showbutton );
         show_button.setOnClickListener( new View.OnClickListener()
         {
             @Override
@@ -402,8 +392,8 @@ public void onClick( View view )
             }
         } );
 
-  */
-    }
+  *//*
+    }*/
 
 
 
@@ -813,6 +803,7 @@ public void openDialog(boolean isAddLoa){
             show_button.setSelected(true);
         }
         else{show_button.setSelected(false);}
+/*
 
 
         show_button.setOnClickListener(new View.OnClickListener() {
@@ -831,6 +822,7 @@ public void onClick(View v) {
         AlertDialog dialog = builder.create();
         dialog.show();
 
+*/
 
         
        /* view.findViewById(R.id.btn_no).setOnClickListener(new View.OnClickListener() {
diff --git a/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
index c0e032609..0047809ac 100644
--- a/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/tgnet/ConnectionsManager.java
@@ -201,7 +201,6 @@ private void checkConnection() {
         native_setUseIpv6(useIpv6Address());
         native_setNetworkAvailable(isNetworkOnline());
     }
-
     public void setPushConnectionEnabled(boolean value) {
         native_setPushConnectionEnabled(value);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 0d49c7fcd..1cffc757b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -23,7 +23,6 @@
 import android.view.ViewGroup;
 import android.view.ViewParent;
 
-import org.telegram.calling.SinchService;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
@@ -31,7 +30,7 @@
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tracker.AnalyticsTrackers;
 
-public class BaseFragment implements ServiceConnection {
+public class BaseFragment  {
 
     private boolean isFinished = false;
     protected Dialog visibleDialog = null;
@@ -43,7 +42,6 @@
     protected Bundle arguments;
     protected boolean swipeBackEnabled = false;
     protected boolean hasOwnBackground = false;
-    private SinchService.SinchServiceInterface mSinchServiceInterface;
 
 
     public BaseFragment() {
@@ -67,8 +65,7 @@ public View getFragmentView() {
 
     public View createView(Context context) {
       //  getParentActivity().startService(new Intent(getParentActivity(), SinchService.class));
-         getParentActivity().bindService(new Intent(getParentActivity(), SinchService.class), this,
-                Context.BIND_AUTO_CREATE);
+              //  Context.BIND_AUTO_CREATE);
         return null;
     }
 
@@ -357,22 +354,6 @@ public void setVisibleDialog(Dialog dialog) {
 ///////////////////////////////////////////////////////////////////////////////////////
 
 
-    @Override
-    public void onServiceConnected(ComponentName name, IBinder service) {
-        if (SinchService.class.getName().equals(name.getClassName())) {
-            mSinchServiceInterface = (SinchService.SinchServiceInterface) service;
-            onServiceConnected();
-        }
-
-    }
-
-    @Override
-    public void onServiceDisconnected(ComponentName name) {
-        if (SinchService.class.getName().equals(name.getClassName())) {
-            mSinchServiceInterface = null;
-            onServiceDisconnected();
-        }
-    }
 
     protected void onServiceConnected() {
         // for subclasses
@@ -381,9 +362,5 @@ protected void onServiceConnected() {
     protected void onServiceDisconnected() {
         // for subclasses
     }
-
-    protected SinchService.SinchServiceInterface getSinchServiceInterface() {
-        return mSinchServiceInterface;
-    }
-
 }
+
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/AudioPlayerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/AudioPlayerActivity.java
index 2d8b76f4e..31f324ccb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/AudioPlayerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/AudioPlayerActivity.java
@@ -7,7 +7,6 @@
  */
 
 package org.telegram.ui;
-
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Paint;
@@ -82,7 +81,7 @@ public SeekBarView(Context context) {
         public boolean onInterceptTouchEvent(MotionEvent ev) {
             return onTouch(ev);
         }
-
+        
         @Override
         public boolean onTouchEvent(MotionEvent event) {
             return onTouch(event);
@@ -212,7 +211,6 @@ public void onItemClick(int id) {
         timeTextView.setGravity(Gravity.CENTER);
         timeTextView.setText("0:00");
         seekBarContainer.addView(timeTextView, LayoutHelper.createFrame(44, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
-
         durationTextView = new TextView(context);
         durationTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 12);
         durationTextView.setTextColor(0xff8a8a8a);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 952b5dc9d..06a90e77a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -685,10 +685,6 @@ public void onFragmentDestroy() {
             chatAttachAlert.onDestroy();
         }
         AndroidUtilities.unlockOrientation(getParentActivity());
-        /*MessageObject messageObject = MediaController.getInstance().getPlayingMessageObject();
-        if (messageObject != null && !messageObject.isMusic()) {
-            MediaController.getInstance().stopAudio();
-        }*/
         if (ChatObject.isChannel(currentChat)) {
             MessagesController.getInstance().startShortPoll(currentChat.id, true);
         }
@@ -696,10 +692,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-
-
-        ChatActivityEnterView.onbacklistner(this);
-
+       ChatActivityEnterView.onbacklistner(this);
         if (chatMessageCellsCache.isEmpty()) {
             for (int a = 0; a < 8; a++) {
                 chatMessageCellsCache.add(new ChatMessageCell(context));
@@ -886,14 +879,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
         });
 
         avatarContainer = new ChatAvatarContainer(context, this, currentEncryptedChat != null);
-
-
-     //   avatarContainer = new FrameLayout(context);
         avatarContainer.setBackgroundResource(R.drawable.bar_selector);
         avatarContainer.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
         actionBar.setBackButtonImage(0x00000000);//todo invisible back button
-
-
         actionBar.addView(avatarContainer, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 0, 0, 48, 0));
 
 
@@ -2823,7 +2811,6 @@ public boolean playFirstUnreadVoiceMessage() {
         }
         return false;
     }
-
     private void initStickers() {
         if (chatActivityEnterView == null || getParentActivity() == null || stickersAdapter != null || currentEncryptedChat != null && AndroidUtilities.getPeerLayerVersion(currentEncryptedChat.layer) < 23) {
             return;
@@ -3220,24 +3207,6 @@ public void didSelectLocation(TLRPC.TL_messageMediaGeo location) {
                     }
                 }
             });
-
-        /*    if (!AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this)) {
-                return;
-            }
-            LocationActivity fragment = new LocationActivity();
-            fragment.setDelegate(new LocationActivity.LocationActivityDelegate() {
-                @Override
-                public void didSelectLocation(TLRPC.MessageMedia location) {
-                    SendMessagesHelper.getInstance().sendMessage(location, dialog_id, replyingMessageObject, null, null);
-                    moveScrollToLastMessage();
-                    showReplyPanel(false, null, null, null, false, true);
-                    DraftQuery.cleanDraft(dialog_id, true);
-                    if (paused) {
-                        scrollToTopOnResume = true;
-                    }
-                }
-            });
-            presentFragment(fragment);*/
         } else if (which == attach_document) {
             if (false && getParentActivity().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                 getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 4);
@@ -3897,13 +3866,6 @@ private void scrollToMessageId(int id, int fromMessageId, boolean select, int lo
             if (currentEncryptedChat != null && !MessagesStorage.getInstance().checkMessageId(dialog_id, startLoadFromMessageId)) {
                 return;
             }
-            /*clearChatData();
-            loadsCount = 0;
-            unread_to_load = 0;
-            first_unread_id = 0;
-            loadingForward = false;
-            unreadMessageObject = null;
-            scrollToMessage = null;*/
 
             waitingForLoad.clear();
             waitingForReplyMessageLoad = true;
@@ -3912,7 +3874,6 @@ private void scrollToMessageId(int id, int fromMessageId, boolean select, int lo
             startLoadFromMessageId = id;
             waitingForLoad.add(lastLoadIndex);
             MessagesController.getInstance().loadMessages(loadIndex == 0 ? dialog_id : mergeDialogId, AndroidUtilities.isTablet() ? 30 : 20, startLoadFromMessageId, true, 0, classGuid, 3, 0, ChatObject.isChannel(currentChat), lastLoadIndex++);
-            //emptyViewContainer.setVisibility(View.INVISIBLE);
         }
         returnToMessageId = fromMessageId;
         returnToLoadIndex = loadIndex;
@@ -8741,15 +8702,9 @@ private void setChatMenuList(){
         drawerList.setOnItemClickListener(new ChatMenuClickListener());
 
 
-      /*  ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.VISIBLE);
-        ((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.VISIBLE);*/
-        //     ((ImageView)((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.menu_bin);
         if(currentUser != null){
-            //   ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText(LocaleController.getString("ClearChat", R.string.ClearChat));
         }else{
-            //    ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText(LocaleController.getString("ClearConversation", R.string.ClearConversation));
         }
-
         ((View) view.getParent()).findViewById(R.id.menu_container).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -8760,12 +8715,8 @@ public void onClick(View view) {
         ((View) view.getParent()).findViewById(R.id.bottom_panel).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                //  closeDrawer();
-                //     MessagesController.getInstance().deleteDialog(dialog_id, 0, true);
             }
         });
-
-
     }
 
     private class ChatMenuClickListener implements
@@ -8779,9 +8730,9 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     parentLayout.closeDrawer();
                     if(currentUser != null) {
                         try {
-                            Intent mainActivity = new Intent(getParentActivity(), org.telegram.calling.PlaceCallActivity.class);
-                            mainActivity.putExtra("mob","+"+currentUser.phone);
-                            getParentActivity().startActivity(mainActivity);
+                            Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:+" + currentUser.phone));
+                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                            getParentActivity().startActivity(intent);
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }  }
@@ -8819,13 +8770,8 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
 
 
             }
-
-
         }
     }
-
-
-
     public void openProfile(){
 
             if (currentUser != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 75eb4fa3e..361b21e36 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -740,7 +740,6 @@ private void setContactMenuList() {
         draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_sectretchat, true, "", 0));
         draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel), R.drawable.menu_broadcast, true, "", 0));
         draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink), R.drawable.menu_wink, true, "", 0));
-        draweritems.add(new MenuItems("  Call", R.drawable.ic_call, true, "", 5));
         if (UserPaymentInfo.getInstatance().getPaymentStatus() != UserPaymentInfo.paidUser
                 && (!UserPaymentInfo.getInstatance().getUserId().equalsIgnoreCase(""))) {
             draweritems.add(new MenuItems(LocaleController.getString("Hide Ads", R.string.hide_ads), R.drawable.hide_ad, true, "$2", 4));
@@ -813,15 +812,12 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                         ApplicationLoader.getInstance().trackEvent("Clicked on social friends", "clicked", "want social friends");
                     }
                     break;
+
                 case 4:
-                    parentLayout.closeDrawer();
-                    logInToSinch();
-                    break;
-                case 5:
                     parentLayout.closeDrawer();
                     openDialog();
                     break;
-                case 6:
+                case 5:
                     parentLayout.closeDrawer();
                     ApplicationLoader.getInstance().trackEvent("Clicked on Get Karma", "clicked", "want to get credit");
                     SharedPreferences pp = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
@@ -880,20 +876,4 @@ private PayPalPayment getThingToBuy(String paymentIntent, String paymentValue) {
         return new PayPalPayment(new BigDecimal(paymentValue), "USD", "PREMIUM FEATURES",
                 paymentIntent);
     }
-
-    public void logInToSinch() {
-        SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-        String userName = p.getString("social_id", "1231313");
-
-        if (userName.isEmpty()) {
-            Toast.makeText(getParentActivity(), "Please enter a name", Toast.LENGTH_LONG).show();
-            return;
-        }
-        openPlaceCallActivity();
-    }
-
-    private void openPlaceCallActivity() {
-        Intent mainActivity = new Intent(getParentActivity(), org.telegram.calling.PlaceCallActivity.class);
-        getParentActivity().startActivity(mainActivity);
-    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 5b11c4ab1..e9aa4c725 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -52,8 +52,6 @@
 import com.paypal.android.sdk.payments.PaymentActivity;
 import com.paypal.android.sdk.payments.PaymentConfirmation;
 
-import org.telegram.calling.*;
-import org.telegram.calling.LoginActivity;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
@@ -1225,8 +1223,6 @@ public void onClick(DialogInterface dialogInterface, int i) {
         }
     }
 
-    ////////////////////////////////////////Drawer menu list updated and redesigned below/////////////////////////////////
-
     public String getKarmaBal() {
         SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
         bal = p.getString("karmaBal", "0");
@@ -1240,7 +1236,6 @@ private void setChatMenuList() {
         draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_sectretchat, true, "", 0));
         draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel), R.drawable.menu_broadcast, true, "", 0));
         draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink), R.drawable.menu_wink, true, "", 0));
-        draweritems.add(new MenuItems("  Call", R.drawable.ic_call, true, "", 5));
         if (UserPaymentInfo.getInstatance().getPaymentStatus() != UserPaymentInfo.paidUser
                 && (!UserPaymentInfo.getInstatance().getUserId().equalsIgnoreCase(""))) {
             draweritems.add(new MenuItems(LocaleController.getString("Hide Ads", R.string.hide_ads), R.drawable.hide_ad, true, "$2", 4));
@@ -1328,10 +1323,6 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
                     }
                     break;
                 case 5:
-                    parentLayout.closeDrawer();
-                    logInToSinch();
-                    break;
-                case 6:
                     parentLayout.closeDrawer();
                     ApplicationLoader.getInstance().trackEvent("Clicked on Get Karma", "clicked", "want to get credit");
                     SharedPreferences pp = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
@@ -1386,22 +1377,4 @@ private PayPalPayment getThingToBuy(String paymentIntent, String paymentValue) {
         return new PayPalPayment(new BigDecimal(paymentValue), "USD", "PREMIUM FEATURES",
                 paymentIntent);
     }
-
-    //TODO  not well organised the flow of sinch
-    public void logInToSinch() {
-        SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
-        String userName = p.getString("social_id", "1231313");
-        if (userName.isEmpty()) {
-            Toast.makeText(getParentActivity(), "Please enter a name", Toast.LENGTH_LONG).show();
-            return;
-        }
-        openPlaceCallActivity();
-    }
-
-
-    private void openPlaceCallActivity() {
-        Intent mainActivity = new Intent(getParentActivity(), org.telegram.calling.PlaceCallActivity.class);
-        getParentActivity().startActivity(mainActivity);
-
-    }
 }
