diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index 27fe76d31..9664e44a1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -388,6 +388,8 @@ public int getMinimumHeight() {
     private static long lastHolidayCheckTime;
     private static boolean canStartHolidayAnimation;
 
+    public static TextPaint settings_aboutTextPaint;
+
     public static TextPaint profile_aboutTextPaint;
     public static Drawable profile_verifiedDrawable;
     public static Drawable profile_verifiedCheckDrawable;
@@ -2590,6 +2592,7 @@ public static void applyTheme(ThemeInfo themeInfo, boolean save, boolean removeW
             applyCommonTheme();
             applyDialogsTheme();
             applyProfileTheme();
+            applySettingsTheme();
             applyChatTheme(false);
             AndroidUtilities.runOnUIThread(() -> NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.didSetNewTheme, nightTheme));
         } catch (Exception e) {
@@ -3230,6 +3233,10 @@ public static void reloadAllResources(Context context) {
             profile_verifiedDrawable = null;
             createProfileResources(context);
         }
+        if (settings_aboutTextPaint != null) {
+            createSettingsResources();
+        }
+
     }
 
     public static void createChatResources(Context context, boolean fontsOnly) {
@@ -3806,7 +3813,13 @@ public static void createProfileResources(Context context) {
 
             applyProfileTheme();
         }
+    }
 
+    public static void createSettingsResources() {
+        settings_aboutTextPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+        settings_aboutTextPaint.setTextSize(AndroidUtilities.dp(16));
+
+        applySettingsTheme();
     }
 
     private static ColorFilter currentShareColorFilter;
@@ -3841,6 +3854,13 @@ public static void applyProfileTheme() {
         setDrawableColorByKey(profile_verifiedCheckDrawable, key_profile_verifiedCheck);
     }
 
+    public static void applySettingsTheme() {
+        if (settings_aboutTextPaint != null) {
+            settings_aboutTextPaint.setColor(getColor(key_windowBackgroundWhiteBlackText));
+            settings_aboutTextPaint.linkColor = getColor(key_windowBackgroundWhiteLinkText);
+        }
+    }
+
     public static Drawable getThemedDrawable(Context context, int resId, String key) {
         return getThemedDrawable(context, resId, getColor(key));
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
index 85da20bc0..a8880d0d3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
@@ -11,11 +11,13 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Canvas;
+import android.graphics.Paint;
 import android.os.Build;
 import android.text.Layout;
 import android.text.Spannable;
 import android.text.SpannableStringBuilder;
 import android.text.StaticLayout;
+import android.text.TextPaint;
 import android.text.TextUtils;
 import android.text.style.ClickableSpan;
 import android.text.style.URLSpan;
@@ -166,7 +168,8 @@ public void setTextAndValue(String text, String value, boolean parseLinks) {
         if (parseLinks) {
             MessageObject.addLinks(false, stringBuilder, false);
         }
-        Emoji.replaceEmoji(stringBuilder, Theme.profile_aboutTextPaint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
+        TextPaint paint = getAboutPaint();
+        Emoji.replaceEmoji(stringBuilder, paint.getFontMetricsInt(), AndroidUtilities.dp(20), false);
         if (TextUtils.isEmpty(value)) {
             valueTextView.setVisibility(GONE);
         } else {
@@ -232,19 +235,28 @@ public boolean onTouchEvent(MotionEvent event) {
         return result || super.onTouchEvent(event);
     }
 
+    private TextPaint getAboutPaint() {
+        if (Theme.profile_aboutTextPaint != null) {
+            return Theme.profile_aboutTextPaint;
+        } else {
+            return Theme.settings_aboutTextPaint;
+        }
+    }
+
     @SuppressLint("DrawAllocation")
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         if (stringBuilder != null) {
             int maxWidth = MeasureSpec.getSize(widthMeasureSpec) - AndroidUtilities.dp(23 + 23);
+            TextPaint paint = getAboutPaint();
             if (Build.VERSION.SDK_INT >= 24) {
-                textLayout = StaticLayout.Builder.obtain(stringBuilder, 0, stringBuilder.length(), Theme.profile_aboutTextPaint, maxWidth)
+                textLayout = StaticLayout.Builder.obtain(stringBuilder, 0, stringBuilder.length(), paint, maxWidth)
                         .setBreakStrategy(StaticLayout.BREAK_STRATEGY_HIGH_QUALITY)
                         .setHyphenationFrequency(StaticLayout.HYPHENATION_FREQUENCY_NONE)
                         .setAlignment(LocaleController.isRTL ? Layout.Alignment.ALIGN_RIGHT : Layout.Alignment.ALIGN_LEFT)
                         .build();
             } else {
-                textLayout = new StaticLayout(stringBuilder, Theme.profile_aboutTextPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+                textLayout = new StaticLayout(stringBuilder, paint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             }
         }
         int height = (textLayout != null ? textLayout.getHeight() : AndroidUtilities.dp(20)) + AndroidUtilities.dp(16);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 5c3e0a619..bb7c9c25e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -80,6 +80,7 @@
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.ThemeDescription;
+import org.telegram.ui.Cells.AboutLinkCell;
 import org.telegram.ui.Cells.EmptyCell;
 import org.telegram.ui.Cells.GraySectionCell;
 import org.telegram.ui.Cells.HeaderCell;
@@ -251,6 +252,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
+        Theme.createSettingsResources();
         actionBar.setBackgroundColor(Theme.getColor(Theme.key_avatar_backgroundActionBarBlue));
         actionBar.setItemsBackgroundColor(Theme.getColor(Theme.key_avatar_actionBarSelectorBlue), false);
         actionBar.setItemsColor(Theme.getColor(Theme.key_avatar_actionBarIconBlue), false);
@@ -1826,6 +1828,55 @@ public void search(String text) {
         }
     }
 
+    private AboutLinkCell.AboutLinkCellDelegate aboutLinkCellDelegate = new AboutLinkCell.AboutLinkCellDelegate() {
+        @Override
+        public void onLinkPress(final String url) {
+            if (url.startsWith("@")) {
+                MessagesController.getInstance(currentAccount).openByUserName(url.substring(1), SettingsActivity.this, 0);
+            } else if (url.startsWith("#")) {
+                DialogsActivity fragment = new DialogsActivity(null);
+                fragment.setSearchString(url);
+                presentFragment(fragment);
+            } else if (url.startsWith("/")) {
+                if (parentLayout.fragmentsStack.size() > 1) {
+                    BaseFragment previousFragment = parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2);
+                    if (previousFragment instanceof ChatActivity) {
+                        finishFragment();
+                        ((ChatActivity) previousFragment).chatActivityEnterView.setCommand(null, url, false, false);
+                    }
+                }
+            } else {
+                Browser.openUrl(getParentActivity(), url);
+            }
+        }
+
+        @Override
+        public void onLinkLongPress(final String url) {
+            BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
+            builder.setTitle(url);
+            builder.setItems(new CharSequence[]{LocaleController.getString("Open", R.string.Open), LocaleController.getString("Copy", R.string.Copy)}, (dialog, which) -> {
+                if (which == 0) {
+                    onLinkPress(url);
+                } else if (which == 1) {
+                    String copyText = url;
+                    String toastText = LocaleController.getString("LinkCopied", R.string.LinkCopied);
+                    if (url.startsWith("mailto:")) {
+                        copyText = url.substring(7);
+                        toastText = LocaleController.getString("EmailCopied", R.string.EmailCopied);
+                    } else if (url.startsWith("tel:")) {
+                        copyText = url.substring(4);
+                        toastText = LocaleController.getString("PhoneCopied", R.string.PhoneCopied);
+                    } else if (url.startsWith("@") || url.startsWith("/") || url.startsWith("#")) {
+                        toastText = LocaleController.getString("TextCopied", R.string.TextCopied);
+                    }
+                    AndroidUtilities.addToClipboard(copyText);
+                    Toast.makeText(getParentActivity(), toastText, Toast.LENGTH_SHORT).show();
+                }
+            });
+            showDialog(builder.create());
+        }
+    };
+
     private class ListAdapter extends RecyclerListView.SelectionAdapter {
 
         private Context mContext;
@@ -1894,13 +1945,17 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             value = LocaleController.getString("UsernameEmpty", R.string.UsernameEmpty);
                         }
                         textCell.setTextAndValue(value, LocaleController.getString("Username", R.string.Username), true);
-                    } else if (position == bioRow) {
-                        String value;
+                    }
+                    break;
+                }
+                case 7: {
+                    if (position == bioRow) {
+                        AboutLinkCell aboutLinkCell = (AboutLinkCell) holder.itemView;
                         if (userInfo == null || !TextUtils.isEmpty(userInfo.about)) {
-                            value = userInfo == null ? LocaleController.getString("Loading", R.string.Loading) : userInfo.about;
-                            textCell.setTextWithEmojiAndValue(value, LocaleController.getString("UserBio", R.string.UserBio), false);
+                            String value = userInfo == null ? LocaleController.getString("Loading", R.string.Loading) : userInfo.about;
+                            aboutLinkCell.setTextAndValue(value, LocaleController.getString("UserBio", R.string.UserBio), true);
                         } else {
-                            textCell.setTextAndValue(LocaleController.getString("UserBio", R.string.UserBio), LocaleController.getString("UserBioDetail", R.string.UserBioDetail), false);
+                            aboutLinkCell.setTextAndValue(LocaleController.getString("UserBio", R.string.UserBio), LocaleController.getString("UserBioDetail", R.string.UserBioDetail), false);
                         }
                     }
                     break;
@@ -1979,6 +2034,12 @@ public boolean isEnabled(RecyclerView.ViewHolder holder) {
                     view = new TextDetailCell(mContext);
                     view.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
                     break;
+                case 7:
+                    AboutLinkCell aboutLinkCell = new AboutLinkCell(mContext);
+                    aboutLinkCell.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));
+                    aboutLinkCell.setDelegate(aboutLinkCellDelegate);
+                    view = aboutLinkCell;
+                    break;
             }
             view.setLayoutParams(new RecyclerView.LayoutParams(RecyclerView.LayoutParams.MATCH_PARENT, RecyclerView.LayoutParams.WRAP_CONTENT));
             return new RecyclerListView.Holder(view);
@@ -1995,8 +2056,10 @@ public int getItemViewType(int position) {
                 return 2;
             } else if (position == versionRow) {
                 return 5;
-            } else if (position == numberRow || position == usernameRow || position == bioRow) {
+            } else if (position == numberRow || position == usernameRow) {
                 return 6;
+            } else if (position == bioRow) {
+                return 7;
             } else if (position == settingsSectionRow2 || position == numberSectionRow) {
                 return 4;
             } else {
@@ -2039,6 +2102,10 @@ public int getItemViewType(int position) {
                 new ThemeDescription(listView, 0, new Class[]{TextDetailCell.class}, new String[]{"textView"}, null, null, null, Theme.key_windowBackgroundWhiteBlackText),
                 new ThemeDescription(listView, 0, new Class[]{TextDetailCell.class}, new String[]{"valueTextView"}, null, null, null, Theme.key_windowBackgroundWhiteGrayText2),
 
+                new ThemeDescription(listView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{AboutLinkCell.class}, Theme.settings_aboutTextPaint, null, null, Theme.key_windowBackgroundWhiteBlackText),
+                new ThemeDescription(listView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{AboutLinkCell.class}, Theme.settings_aboutTextPaint, null, null, Theme.key_windowBackgroundWhiteLinkText),
+                new ThemeDescription(listView, 0, new Class[]{AboutLinkCell.class}, Theme.linkSelectionPaint, null, null, Theme.key_windowBackgroundWhiteLinkSelection),
+
                 new ThemeDescription(listView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{TextInfoPrivacyCell.class}, null, null, null, Theme.key_windowBackgroundGrayShadow),
                 new ThemeDescription(listView, 0, new Class[]{TextInfoPrivacyCell.class}, new String[]{"textView"}, null, null, null, Theme.key_windowBackgroundWhiteGrayText3),
 
