diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
index f2a9972a7..7a2b50bb3 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
@@ -30,7 +30,7 @@
     public DecisionAdapter(Context context,  List<Decision> items, int groupMemberCount) {
         super(context, LAYOUT_RES_ID, items);
         this.groupMemberCount = groupMemberCount;
-        pollgramService = PollgramFactory.getPollgramService();
+        pollgramService = PollgramFactory.getService();
         inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
     }
 
@@ -48,7 +48,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         // put data
         Decision decision = getItem(position);
         decisionTitle.setText(decision.getTitle());
-        int userThatVoteSoFar = PollgramFactory.getPollgramDAO().getUserVoteCount(decision);
+        int userThatVoteSoFar = PollgramFactory.getDAO().getUserVoteCount(decision);
         String userAsString = pollgramService.asString(pollgramService.getUser(decision.getUserCreatorId()));
         String creationDateStr = DateFormat.getDateInstance(DateFormat.SHORT).
                 format(decision.getCreationDate());
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java
index a16934c4b..d72e204a8 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java
@@ -128,7 +128,7 @@ public void onClick(View v) {
             if(o.getId() != DBBean.ID_NOT_SET) {
 //                rowView.setBackgroundColor(Color.LTGRAY);
                 // prevent EditText hint to be showed for existing decision with not long description
-                if (o.getLongDescription() != null || o.getLongDescription().isEmpty()) {
+                if (o.getLongDescription() == null || o.getLongDescription().isEmpty()) {
                     edLongDescription.setText(" ");
                 }
             }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
index 599b55fc7..43cb8bb85 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
@@ -111,7 +111,7 @@ public void setOnVoteChangeListener(OnVoteChangeListener onVoteChangeListener){
     @Override
     public View getView(final int position, View convertView, ViewGroup parent) {
         final Vote vote = getItem(position);
-        final Option c = PollgramFactory.getPollgramDAO().getOption(vote.getOptionId());
+        final Option c = PollgramFactory.getDAO().getOption(vote.getOptionId());
         if (c instanceof TimeRangeOption){
             Log.e("ChoiceAdapter", "TimeRangeOption not supported yet");
             return null;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
index ec8202d98..ae8077f6f 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
@@ -50,7 +50,7 @@ public void putStubData(int chatId, int creatorId) {
             options.add(new TextOption("Trip", "Yeah a trip trought Europe can be a nice idea", decision1.getId()));
             options.add(new TextOption("A stupid idea", "it is late and i have no more ideas ;-/", decision1.getId()));
 
-            PollgramFactory.getPollgramService().notifyNewDecision(decision1, options);
+            PollgramFactory.getService().notifyNewDecision(decision1, options);
         }
 
         {
@@ -70,7 +70,7 @@ public void putStubData(int chatId, int creatorId) {
             options.add(new TextOption("Le funivie del'ghiacciaio della valle di stubai che si trova in austria vicino ad innsbruck", "Ã¨ un po lungo il viaggio ma potrebbe essere assai fico", decision1.getId()));
             options.add(new TextOption("Sul piste del passo del Broccon", null, decision1.getId()));
 
-            PollgramFactory.getPollgramService().notifyNewDecision(decision1, options);
+            PollgramFactory.getService().notifyNewDecision(decision1, options);
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramFactory.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramFactory.java
index 06a1f0213..50f42abe7 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramFactory.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramFactory.java
@@ -11,7 +11,7 @@
 
     // TODO factorize getter code
 
-    public static PollgramMessagesManager getPollgramMessagesManager() {
+    public static PollgramMessagesManager getMessagesManager() {
         PollgramMessagesManager localInstance = MESSAGEE_MANAGER_INSTANCE;
         if (localInstance == null) {
             synchronized (PollgramMessagesManager.class) {
@@ -24,7 +24,7 @@ public static PollgramMessagesManager getPollgramMessagesManager() {
         return localInstance;
     }
 
-    public static PollgramDAO getPollgramDAO() {
+    public static PollgramDAO getDAO() {
         PollgramDAO localInstance = INSTANCE;
         if (localInstance == null) {
             synchronized (PollgramDAO.class) {
@@ -37,7 +37,7 @@ public static PollgramDAO getPollgramDAO() {
         return localInstance;
     }
 
-    public static PollgramService getPollgramService() {
+    public static PollgramService getService() {
         PollgramService localInstance = POLLGRAM_SERVICE_INSTANCE;
         if (localInstance == null) {
             synchronized (PollgramService.class) {
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
index 0609e9d1f..081e23539 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
@@ -97,6 +97,11 @@ public String getDescription() {
      */
     MessageType getMessageType(String msg);
 
+    /**
+     * @param msg
+     * @return whether this is a pollgram message
+     */
+    boolean isPollgram(MessageObject msg);
 
     /**
      * Build message for notify a vote transaction
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
index 77dd27158..77a722ed4 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
@@ -51,7 +51,7 @@
     private final Context context;
 
     PollgramMessagesManagerImpl(){
-        this(PollgramFactory.getPollgramDAO());
+        this(PollgramFactory.getDAO());
     }
 
     String getTailingString(){
@@ -344,6 +344,13 @@ public MessageType getMessageType(String msg){
         return null;
     }
 
+    @Override
+    public boolean isPollgram(MessageObject msg) {
+        if (msg == null || msg.messageText == null)
+            return false;
+        return getMessageType(msg.messageText.toString()) != null;
+    }
+
     @Override
     public long getMessageGroupId(MessageObject messageObject) {
         if (messageObject.messageOwner == null)
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index d70ca02e3..41d4f413b 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -50,8 +50,8 @@
     private final PollgramMessagesManager messageManager;
 
     public PollgramServiceImpl() {
-        this.pollgramDAO = PollgramFactory.getPollgramDAO();
-        this.messageManager = PollgramFactory.getPollgramMessagesManager();
+        this.pollgramDAO = PollgramFactory.getDAO();
+        this.messageManager = PollgramFactory.getMessagesManager();
     }
 
     PollgramServiceImpl(PollgramDAO pollgramDAO, PollgramMessagesManager messageManager) {
@@ -415,7 +415,7 @@ public Bundle getBundleForNewDecision(TLRPC.Chat currentChat, MessageObject sele
         Context context = ApplicationLoader.applicationContext;
 
         TLRPC.User user =  getUser(selectedObject.messageOwner.from_id);
-        String userAsString = asString(user,false);
+        String userAsString = asString(user, false);
         String dateAsString = DateFormat.getDateInstance(DateFormat.SHORT).
                 format(getMessageDate(selectedObject));
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
index 50ff60f98..dc8be5862 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionDetailFragment.java
@@ -38,8 +38,8 @@ public DecisionDetailFragment(Bundle bundle) {
 
     @Override
     public boolean onFragmentCreate() {
-        pollgramDAO = PollgramFactory.getPollgramDAO();
-        pollgramService = PollgramFactory.getPollgramService();
+        pollgramDAO = PollgramFactory.getDAO();
+        pollgramService = PollgramFactory.getService();
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
         decision = pollgramDAO.getDecision(decisionId);
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index 894c40716..bfa9c0d51 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -73,7 +73,7 @@ public DecisionsListFragment(Bundle bundle) {
 
     @Override
     public boolean onFragmentCreate() {
-        pollgramDAO = PollgramFactory.getPollgramDAO();
+        pollgramDAO = PollgramFactory.getDAO();
         hideCloseDecision = false;
         return true;
     }
@@ -216,7 +216,7 @@ public void setChatInfo(TLRPC.ChatFull chatInfo) {
         this.chatInfo = chatInfo;
         List<Integer> ids = new ArrayList<>(chatInfo.participants.participants.size());
         for (int i = 0; i < chatInfo.participants.participants.size() ; i++){
-            TLRPC.User user = PollgramFactory.getPollgramService().getUser(chatInfo.participants.participants.get(i).user_id);
+            TLRPC.User user = PollgramFactory.getService().getUser(chatInfo.participants.participants.get(i).user_id);
             if (user != null)
                 ids.add(user.id);
         }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
index f6950a1f7..bb3e34cbb 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
@@ -55,8 +55,8 @@ public EditOptionsFragment(Bundle args) {
 
     @Override
     public boolean onFragmentCreate() {
-        pollgramDAO = PollgramFactory.getPollgramDAO();
-        pollgramService = PollgramFactory.getPollgramService();
+        pollgramDAO = PollgramFactory.getDAO();
+        pollgramService = PollgramFactory.getService();
         long decisionId  = getArguments().getLong(PAR_DECISION_ID);
         decision = pollgramDAO.getDecision(decisionId);
         List<Option> resultOptions = pollgramDAO.getOptions(decision);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
index 9b528e418..2ca2946d9 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -68,8 +68,8 @@ public NewDecisionFragment(Bundle args) {
 
     @Override
     public boolean onFragmentCreate() {
-        pollgramDAO = PollgramFactory.getPollgramDAO();
-        pollgramService = PollgramFactory.getPollgramService();
+        pollgramDAO = PollgramFactory.getDAO();
+        pollgramService = PollgramFactory.getService();
 
         groupChatId = getArguments().getInt(PAR_GROUP_CHAT_ID);
         decisionLongDescription = getArguments().getString(PAR_DECISION_LONG_DESCRIPTION);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java
index 8e836496b..0cbcefb17 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/OptionDetailFragment.java
@@ -48,7 +48,7 @@ public boolean onFragmentCreate() {
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
         int[] members = getArguments().getIntArray(PAR_PARTICIPANT_IDS);
 
-        UsersDecisionVotes usersDecisionVotes = PollgramFactory.getPollgramService().getUsersDecisionVotes(decisionId, members);
+        UsersDecisionVotes usersDecisionVotes = PollgramFactory.getService().getUsersDecisionVotes(decisionId, members);
 
         option = (TextOption) usersDecisionVotes.getOption(optionId);
         membersCount = usersDecisionVotes.getUsers().size();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
index 38594dd24..c2a33d58c 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
@@ -72,8 +72,8 @@ public VotesManagerFragment(Bundle bundle) {
     public boolean onFragmentCreate() {
         // init field
         super.swipeBackEnabled = false;
-        pollgramDAO = PollgramFactory.getPollgramDAO();
-        pollgramService = PollgramFactory.getPollgramService();
+        pollgramDAO = PollgramFactory.getDAO();
+        pollgramService = PollgramFactory.getService();
         long decisionId = getArguments().getLong(PAR_DECISION_ID);
         members = pollgramService.getUsers(getArguments().getIntArray(PAR_PARTICIPANT_IDS));
         decision = pollgramDAO.getDecision(decisionId);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index f8cecbfd6..10d943444 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -83,8 +83,8 @@ public VotesManagerTabsFragment(BaseFragment parentFragment) {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        pollgramDAO = PollgramFactory.getPollgramDAO();
-        pollgramService = PollgramFactory.getPollgramService();
+        pollgramDAO = PollgramFactory.getDAO();
+        pollgramService = PollgramFactory.getService();
         groupChatId = getArguments().getLong(VotesManagerFragment.PAR_GROUP_CHAT_ID);
         long decisionId = getArguments().getLong(VotesManagerFragment.PAR_DECISION_ID);
         participantsUserIds = getArguments().getIntArray(VotesManagerFragment.PAR_PARTICIPANT_IDS);
@@ -257,7 +257,7 @@ public void voteChanges(boolean areThereChangesToSave) {
     protected void updateView() {
         if (usersDecisionVotes == null)
             return;
-        usersDecisionVotes = PollgramFactory.getPollgramService().
+        usersDecisionVotes = PollgramFactory.getService().
                 getUsersDecisionVotes(usersDecisionVotes.getDecision().getId(),
                         usersDecisionVotes.getUsers());
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
index a15e6b785..f6d7910c6 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
@@ -80,7 +80,7 @@
 
     public ArrayList<TextLayoutBlock> textLayoutBlocks;
 
-    private PollgramMessagesManager msgManager = PollgramFactory.getPollgramMessagesManager();
+    private PollgramMessagesManager msgManager = PollgramFactory.getMessagesManager();
 
     public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> users, boolean generateLayout) {
         this(message, users, null, generateLayout);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 2ec4c2854..771c7a528 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -129,7 +129,7 @@
     public int minGroupConvertSize = 200;
     public int groupBigSize;
     private ArrayList<TLRPC.TL_disabledFeature> disabledFeatures = new ArrayList<>();
-    private PollgramService pollgramService = PollgramFactory.getPollgramService();
+    private PollgramService pollgramService = PollgramFactory.getService();
 
     private class UserActionUpdatesSeq extends TLRPC.Updates {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index acec47a4b..514ee06e6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -836,7 +836,7 @@ protected void onDraw(Canvas canvas) {
 
         Drawable currentBackgroundDrawable;
         if (currentMessageObject.isOutOwner()) {
-            if (isPollgram(currentMessageObject)) {
+            if (PollgramFactory.getMessagesManager().isPollgram(currentMessageObject)) {
                 currentBackgroundDrawable = ResourceLoader.backgroundDrawablePollgramMessageOut;
 
             } else if (isDrawSelectedBackground()) {
@@ -854,7 +854,7 @@ protected void onDraw(Canvas canvas) {
             }
             setDrawableBounds(currentBackgroundDrawable, layoutWidth - backgroundWidth - (!media ? 0 : AndroidUtilities.dp(9)), AndroidUtilities.dp(1), backgroundWidth, layoutHeight - AndroidUtilities.dp(2));
         } else {
-            if (isPollgram(currentMessageObject)) {
+            if (PollgramFactory.getMessagesManager().isPollgram(currentMessageObject)) {
                 currentBackgroundDrawable = ResourceLoader.backgroundDrawablePollgramMessageIn;
             } else  if (isDrawSelectedBackground()) {
                 if (!media) {
@@ -1166,12 +1166,6 @@ protected void onDraw(Canvas canvas) {
         }
     }
 
-    private boolean isPollgram(MessageObject msg) {
-        if (msg == null || msg.messageText == null)
-            return false;
-        return PollgramFactory.getPollgramMessagesManager().getMessageType(msg.messageText.toString()) != null;
-    }
-
     @Override
     public void onFailedDownload(String fileName) {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 2c242b445..26206f57f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -6068,7 +6068,7 @@ private void createMenu(View v, boolean single) {
                 } else {
                     if (currentEncryptedChat == null) {
 
-                        if (isGroupChat()) { // Pollgram custom items
+                        if (isGroupChat() && !PollgramFactory.getMessagesManager().isPollgram(selectedObject)) { // Pollgram custom items
                             items.add(LocaleController.getString("createDecision", R.string.createDecision));
                             options.add(MENU_ITEM_OPTION_CREATE_DECISION);
                         }
@@ -6341,7 +6341,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         } else if (option == MENU_ITEM_OPTION_CREATE_DECISION){
             // Pollgram create decision
-            Bundle args = PollgramFactory.getPollgramService().getBundleForNewDecision(currentChat, selectedObject);
+            Bundle args = PollgramFactory.getService().getBundleForNewDecision(currentChat, selectedObject);
             presentFragment(new NewDecisionFragment(args));
 
         } else if (option == 11) {
@@ -6825,7 +6825,7 @@ public void didPressUrl(MessageObject messageObject, final ClickableSpan url, bo
                             } else {
                                 // Pollgram decision tile link to vote manager
                                 try {
-                                    Bundle bundle = PollgramFactory.getPollgramService().
+                                    Bundle bundle = PollgramFactory.getService().
                                             getBundleForVotesManagerFragment(info, messageObject, url);
                                     if (bundle != null) {
                                         presentFragment(new VotesManagerFragment(bundle));
diff --git a/TMessagesProj/src/main/res/layout/item_vote_list.xml b/TMessagesProj/src/main/res/layout/item_vote_list.xml
index 0941c07f7..f6ced6f23 100644
--- a/TMessagesProj/src/main/res/layout/item_vote_list.xml
+++ b/TMessagesProj/src/main/res/layout/item_vote_list.xml
@@ -39,6 +39,7 @@
         android:layout_toRightOf="@+id/item_option_iv_image"
         android:maxLines="2"
         android:paddingLeft="8dp"
+        android:paddingTop="2dp"
         android:text="Lorem ipsum dolor sit amet, 1 2 3 4 5 . 6 7 consectetuer  adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam "
         android:textAppearance="?android:attr/textAppearanceSmall"
         android:layout_toLeftOf="@+id/item_option_stacked_bar"
