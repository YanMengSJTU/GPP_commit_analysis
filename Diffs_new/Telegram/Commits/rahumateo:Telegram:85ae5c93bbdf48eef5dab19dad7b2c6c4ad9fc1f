diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index f1e8f6f06..e98e77f03 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -15,7 +15,6 @@
 import android.annotation.SuppressLint;
 import android.annotation.TargetApi;
 import android.app.Activity;
-import android.content.BroadcastReceiver;
 import android.content.ContentResolver;
 import android.content.ContentUris;
 import android.content.Context;
@@ -75,7 +74,6 @@
 import android.view.inputmethod.InputMethodManager;
 import android.webkit.MimeTypeMap;
 import android.widget.EdgeEffect;
-import android.widget.FrameLayout;
 import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.ScrollView;
@@ -88,6 +86,7 @@
 import net.hockeyapp.android.UpdateManager;
 
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/DataQuery.java b/TMessagesProj/src/main/java/org/telegram/messenger/DataQuery.java
index cc55fb07b..496172add 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/DataQuery.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/DataQuery.java
@@ -40,6 +40,7 @@
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.SQLite.SQLiteDatabase;
 import org.telegram.SQLite.SQLitePreparedStatement;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
@@ -1892,13 +1893,13 @@ public static int getMediaType(TLRPC.Message message) {
         if (message.media instanceof TLRPC.TL_messageMediaPhoto) {
             return MEDIA_PHOTOVIDEO;
         } else if (message.media instanceof TLRPC.TL_messageMediaDocument) {
-            if (MessageObject.isVoiceMessage(message) || MessageObject.isRoundVideoMessage(message)) {
+            if (MessageObjectTypeIdentifier.isVoiceMessage(message) || MessageObjectTypeIdentifier.isRoundVideoMessage(message)) {
                 return MEDIA_AUDIO;
-            } else if (MessageObject.isVideoMessage(message)) {
+            } else if (MessageObjectTypeIdentifier.isVideoMessage(message)) {
                 return MEDIA_PHOTOVIDEO;
-            } else if (MessageObject.isStickerMessage(message)) {
+            } else if (MessageObjectTypeIdentifier.isStickerMessage(message)) {
                 return -1;
-            } else if (MessageObject.isMusicMessage(message)) {
+            } else if (MessageObjectTypeIdentifier.isMusicMessage(message)) {
                 return MEDIA_MUSIC;
             } else {
                 return MEDIA_FILE;
@@ -1915,12 +1916,12 @@ public static int getMediaType(TLRPC.Message message) {
     }
 
     public static boolean canAddMessageToMedia(TLRPC.Message message) {
-        if (message instanceof TLRPC.TL_message_secret && (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObject.isVideoMessage(message) || MessageObject.isGifMessage(message)) && message.media.ttl_seconds != 0 && message.media.ttl_seconds <= 60) {
+        if (message instanceof TLRPC.TL_message_secret && (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObjectTypeIdentifier.isVideoMessage(message) || MessageObjectTypeIdentifier.isGifMessage(message)) && message.media.ttl_seconds != 0 && message.media.ttl_seconds <= 60) {
             return false;
         } else if (!(message instanceof TLRPC.TL_message_secret) && message instanceof TLRPC.TL_message && (message.media instanceof TLRPC.TL_messageMediaPhoto || message.media instanceof TLRPC.TL_messageMediaDocument) && message.media.ttl_seconds != 0) {
             return false;
         } else if (message.media instanceof TLRPC.TL_messageMediaPhoto ||
-                message.media instanceof TLRPC.TL_messageMediaDocument && !MessageObject.isGifDocument(message.media.document)) {
+                message.media instanceof TLRPC.TL_messageMediaDocument && !MessageObjectTypeIdentifier.isGifDocument(message.media.document)) {
             return true;
         } else if (!message.entities.isEmpty()) {
             for (int a = 0; a < message.entities.size(); a++) {
@@ -2232,7 +2233,7 @@ public void run() {
                             TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                             message.readAttachPath(data, UserConfig.getInstance(currentAccount).clientUserId);
                             data.reuse();
-                            if (MessageObject.isMusicMessage(message)) {
+                            if (MessageObjectTypeIdentifier.isMusicMessage(message)) {
                                 message.id = cursor.intValue(1);
                                 message.dialog_id = uid;
                                 arrayList.add(0, new MessageObject(currentAccount, message, false));
@@ -3252,7 +3253,7 @@ public void loadReplyMessagesForMessages(final ArrayList<MessageObject> messages
             final LongSparseArray<ArrayList<MessageObject>> replyMessageRandomOwners = new LongSparseArray<>();
             for (int a = 0; a < messages.size(); a++) {
                 MessageObject messageObject = messages.get(a);
-                if (messageObject.isReply() && messageObject.replyMessageObject == null) {
+                if (MessageObjectTypeIdentifier.isReply() && messageObject.replyMessageObject == null) {
                     long id = messageObject.messageOwner.reply_to_random_id;
                     ArrayList<MessageObject> messageObjects = replyMessageRandomOwners.get(id);
                     if (messageObjects == null) {
@@ -3327,7 +3328,7 @@ public void run() {
             int channelId = 0;
             for (int a = 0; a < messages.size(); a++) {
                 MessageObject messageObject = messages.get(a);
-                if (messageObject.getId() > 0 && messageObject.isReply() && messageObject.replyMessageObject == null) {
+                if (messageObject.getId() > 0 && MessageObjectTypeIdentifier.isReply() && messageObject.replyMessageObject == null) {
                     int id = messageObject.messageOwner.reply_to_msg_id;
                     long messageId = id;
                     if (messageObject.messageOwner.to_id.channel_id != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/DownloadController.java b/TMessagesProj/src/main/java/org/telegram/messenger/DownloadController.java
index 8043d24a6..e1af39c5c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/DownloadController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/DownloadController.java
@@ -17,6 +17,8 @@
 import android.util.LongSparseArray;
 import android.util.SparseArray;
 
+import org.telegram.messenger.message.MessageObject;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 
@@ -367,17 +369,17 @@ public boolean canDownloadMedia(TLRPC.Message message) {
             return false;
         }
         int type;
-        if (MessageObject.isPhoto(message)) {
+        if (MessageObjectTypeIdentifier.isPhoto(message)) {
             type = AUTODOWNLOAD_MASK_PHOTO;
-        } else if (MessageObject.isVoiceMessage(message)) {
+        } else if (MessageObjectTypeIdentifier.isVoiceMessage(message)) {
             type = AUTODOWNLOAD_MASK_AUDIO;
-        } else if (MessageObject.isRoundVideoMessage(message)) {
+        } else if (MessageObjectTypeIdentifier.isRoundVideoMessage(message)) {
             type = AUTODOWNLOAD_MASK_VIDEOMESSAGE;
-        } else if (MessageObject.isVideoMessage(message)) {
+        } else if (MessageObjectTypeIdentifier.isVideoMessage(message)) {
             type = AUTODOWNLOAD_MASK_VIDEO;
-        } else if (MessageObject.isMusicMessage(message)) {
+        } else if (MessageObjectTypeIdentifier.isMusicMessage(message)) {
             type = AUTODOWNLOAD_MASK_MUSIC;
-        } else if (MessageObject.isGifMessage(message)) {
+        } else if (MessageObjectTypeIdentifier.isGifMessage(message)) {
             type = AUTODOWNLOAD_MASK_GIF;
         } else {
             type = AUTODOWNLOAD_MASK_DOCUMENT;
@@ -396,7 +398,7 @@ public boolean canDownloadMedia(TLRPC.Message message) {
             } else if (peer.chat_id != 0) {
                 index = 2;
             } else {
-                if (MessageObject.isMegagroup(message)) {
+                if (MessageObjectTypeIdentifier.isMegagroup(message)) {
                     index = 2;
                 } else {
                     index = 3;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
index 2921fa70d..8397a39fd 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
@@ -12,9 +12,9 @@
 import android.util.SparseArray;
 import android.util.SparseIntArray;
 
-import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.TransferListener;
 
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 
@@ -368,12 +368,12 @@ public void run() {
                 FileLoadOperation operation = loadOperationPaths.remove(fileName);
                 if (operation != null) {
                     int datacenterId = operation.getDatacenterId();
-                    if (MessageObject.isVoiceDocument(document) || MessageObject.isVoiceWebDocument(webDocument)) {
+                    if (MessageObjectTypeIdentifier.isVoiceDocument(document) || MessageObjectTypeIdentifier.isVoiceWebDocument(webDocument)) {
                         LinkedList<FileLoadOperation> audioLoadOperationQueue = getAudioLoadOperationQueue(datacenterId);
                         if (!audioLoadOperationQueue.remove(operation)) {
                             currentAudioLoadOperationsCount.put(datacenterId, currentAudioLoadOperationsCount.get(datacenterId) - 1);
                         }
-                    } else if (secureDocument != null || location != null || MessageObject.isImageWebDocument(webDocument)) {
+                    } else if (secureDocument != null || location != null || MessageObjectTypeIdentifier.isImageWebDocument(webDocument)) {
                         LinkedList<FileLoadOperation> photoLoadOperationQueue = getPhotoLoadOperationQueue(datacenterId);
                         if (!photoLoadOperationQueue.remove(operation)) {
                             currentPhotoLoadOperationsCount.put(datacenterId, currentPhotoLoadOperationsCount.get(datacenterId) - 1);
@@ -496,9 +496,9 @@ private FileLoadOperation loadFileInternal(final TLRPC.Document document, final
 
                 operation.setForceRequest(true);
                 LinkedList<FileLoadOperation> downloadQueue;
-                if (MessageObject.isVoiceDocument(document) || MessageObject.isVoiceWebDocument(webDocument)) {
+                if (MessageObjectTypeIdentifier.isVoiceDocument(document) || MessageObjectTypeIdentifier.isVoiceWebDocument(webDocument)) {
                     downloadQueue = audioLoadOperationQueue;
-                } else if (secureDocument != null || location != null || MessageObject.isImageWebDocument(webDocument)) {
+                } else if (secureDocument != null || location != null || MessageObjectTypeIdentifier.isImageWebDocument(webDocument)) {
                     downloadQueue = photoLoadOperationQueue;
                 } else {
                     downloadQueue = loadOperationQueue;
@@ -556,20 +556,20 @@ private FileLoadOperation loadFileInternal(final TLRPC.Document document, final
             type = MEDIA_DIR_IMAGE;
         } else if (document != null) {
             operation = new FileLoadOperation(document);
-            if (MessageObject.isVoiceDocument(document)) {
+            if (MessageObjectTypeIdentifier.isVoiceDocument(document)) {
                 type = MEDIA_DIR_AUDIO;
-            } else if (MessageObject.isVideoDocument(document)) {
+            } else if (MessageObjectTypeIdentifier.isVideoDocument(document)) {
                 type = MEDIA_DIR_VIDEO;
             } else {
                 type = MEDIA_DIR_DOCUMENT;
             }
         } else if (webDocument != null) {
             operation = new FileLoadOperation(currentAccount, webDocument);
-            if (MessageObject.isVoiceWebDocument(webDocument)) {
+            if (MessageObjectTypeIdentifier.isVoiceWebDocument(webDocument)) {
                 type = MEDIA_DIR_AUDIO;
-            } else if (MessageObject.isVideoWebDocument(webDocument)) {
+            } else if (MessageObjectTypeIdentifier.isVideoWebDocument(webDocument)) {
                 type = MEDIA_DIR_VIDEO;
-            } else if (MessageObject.isImageWebDocument(webDocument)) {
+            } else if (MessageObjectTypeIdentifier.isImageWebDocument(webDocument)) {
                 type = MEDIA_DIR_IMAGE;
             } else {
                 type = MEDIA_DIR_DOCUMENT;
@@ -633,7 +633,7 @@ public void didChangedLoadProgress(FileLoadOperation operation, float progress)
                     audioLoadOperationQueue.add(operation);
                 }
             }
-        } else if (location != null || MessageObject.isImageWebDocument(webDocument)) {
+        } else if (location != null || MessageObjectTypeIdentifier.isImageWebDocument(webDocument)) {
             int count = currentPhotoLoadOperationsCount.get(datacenterId);
             if (streamOffset != 0 || count < maxCount) {
                 if (operation.start(stream, streamOffset)) {
@@ -716,7 +716,7 @@ public void run() {
                 LinkedList<FileLoadOperation> loadOperationQueue = getLoadOperationQueue(datacenterId);
 
                 FileLoadOperation operation = loadOperationPaths.remove(arg1);
-                if (MessageObject.isVoiceDocument(document) || MessageObject.isVoiceWebDocument(webDocument)) {
+                if (MessageObjectTypeIdentifier.isVoiceDocument(document) || MessageObjectTypeIdentifier.isVoiceWebDocument(webDocument)) {
                     int count = currentAudioLoadOperationsCount.get(datacenterId);
                     if (operation != null) {
                         if (operation.wasStarted()) {
@@ -739,7 +739,7 @@ public void run() {
                             break;
                         }
                     }
-                } else if (location != null || MessageObject.isImageWebDocument(webDocument)) {
+                } else if (location != null || MessageObjectTypeIdentifier.isImageWebDocument(webDocument)) {
                     int count = currentPhotoLoadOperationsCount.get(datacenterId);
                     if (operation != null) {
                         if (operation.wasStarted()) {
@@ -909,9 +909,9 @@ public static File getPathToAttach(TLObject attach, String ext, boolean forceCac
                 if (document.key != null) {
                     dir = getDirectory(MEDIA_DIR_CACHE);
                 } else {
-                    if (MessageObject.isVoiceDocument(document)) {
+                    if (MessageObjectTypeIdentifier.isVoiceDocument(document)) {
                         dir = getDirectory(MEDIA_DIR_AUDIO);
-                    } else if (MessageObject.isVideoDocument(document)) {
+                    } else if (MessageObjectTypeIdentifier.isVideoDocument(document)) {
                         dir = getDirectory(MEDIA_DIR_VIDEO);
                     } else {
                         dir = getDirectory(MEDIA_DIR_DOCUMENT);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java b/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java
index fee423157..9346d478f 100755
--- a/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/GcmPushListenerService.java
@@ -16,6 +16,7 @@
 
 import org.json.JSONArray;
 import org.json.JSONObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
 import org.telegram.tgnet.TLRPC;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java
index 7a3cb035c..f6b941fad 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ImageLoader.java
@@ -27,6 +27,8 @@
 import android.text.TextUtils;
 import android.util.SparseArray;
 
+import org.telegram.messenger.message.MessageObject;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.messenger.secretmedia.EncryptedFileInputStream;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLObject;
@@ -1805,8 +1807,8 @@ private void createLoadOperationForImageReceiver(final ImageReceiver imageReceiv
                         if (trueExt.equals("mp4") || trueExt.equals("gif")) {
                             img.animatedFile = true;
                         }
-                    } else if (imageLocation instanceof WebFile && MessageObject.isGifDocument((WebFile) imageLocation) ||
-                            imageLocation instanceof TLRPC.Document && (MessageObject.isGifDocument((TLRPC.Document) imageLocation) || MessageObject.isRoundVideoDocument((TLRPC.Document) imageLocation))) {
+                    } else if (imageLocation instanceof WebFile && MessageObjectTypeIdentifier.isGifDocument((WebFile) imageLocation) ||
+                            imageLocation instanceof TLRPC.Document && (MessageObjectTypeIdentifier.isGifDocument((TLRPC.Document) imageLocation) || MessageObjectTypeIdentifier.isRoundVideoDocument((TLRPC.Document) imageLocation))) {
                         img.animatedFile = true;
                     }
 
@@ -1823,7 +1825,7 @@ private void createLoadOperationForImageReceiver(final ImageReceiver imageReceiv
                                 cacheFile = new File(FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE), url + ".enc");
                             }
                         } else if (imageLocation instanceof TLRPC.Document) {
-                            if (MessageObject.isVideoDocument((TLRPC.Document) imageLocation)) {
+                            if (MessageObjectTypeIdentifier.isVideoDocument((TLRPC.Document) imageLocation)) {
                                 cacheFile = new File(FileLoader.getDirectory(FileLoader.MEDIA_DIR_VIDEO), url);
                             } else {
                                 cacheFile = new File(FileLoader.getDirectory(FileLoader.MEDIA_DIR_DOCUMENT), url);
@@ -1989,7 +1991,7 @@ public void loadImageForImageReceiver(ImageReceiver imageReceiver) {
                 if (thumbKey != null) {
                     thumbUrl = thumbKey + "." + ext;
                 }
-                saveImageToCache = !MessageObject.isGifDocument(document) && !MessageObject.isRoundVideoDocument((TLRPC.Document) imageLocation);
+                saveImageToCache = !MessageObjectTypeIdentifier.isGifDocument(document) && !MessageObjectTypeIdentifier.isRoundVideoDocument((TLRPC.Document) imageLocation);
             }
             if (imageLocation == thumbLocation) {
                 imageLocation = null;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java b/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
index 26a48d5e0..7e610aeb9 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
@@ -23,6 +23,7 @@
 import android.graphics.drawable.Drawable;
 import android.view.View;
 
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.AnimatedFileDrawable;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocationController.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocationController.java
index aacf2eef0..2020e148b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocationController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocationController.java
@@ -20,6 +20,7 @@
 
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.SQLite.SQLitePreparedStatement;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
 import org.telegram.tgnet.RequestDelegate;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
index 1ffd4050a..30f531a6b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MediaController.java
@@ -57,6 +57,7 @@
 import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
 
 import org.telegram.messenger.audioinfo.AudioInfo;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.video.InputSurface;
 import org.telegram.messenger.video.MP4Builder;
 import org.telegram.messenger.video.Mp4Movie;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 0c781de02..963889b9e 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -25,6 +25,7 @@
 import android.widget.Toast;
 
 import org.telegram.SQLite.SQLiteCursor;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.messenger.voip.VoIPService;
 import org.telegram.tgnet.ConnectionsManager;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
index 7e16d2cf6..abe702f7b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesStorage.java
@@ -18,6 +18,8 @@
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.SQLite.SQLiteDatabase;
 import org.telegram.SQLite.SQLitePreparedStatement;
+import org.telegram.messenger.message.MessageObject;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
@@ -1067,7 +1069,7 @@ public void loadUnreadMessages() {
                             int lower_id = (int) message.dialog_id;
                             addUsersAndChatsFromMessage(message, usersToLoad, chatsToLoad);
                             message.send_state = cursor.intValue(2);
-                            if (message.to_id.channel_id == 0 && !MessageObject.isUnread(message) && lower_id != 0 || message.id > 0) {
+                            if (message.to_id.channel_id == 0 && !MessageObjectTypeIdentifier.isUnread(message) && lower_id != 0 || message.id > 0) {
                                 message.send_state = 0;
                             }
                             if (lower_id == 0 && !cursor.isNull(5)) {
@@ -1086,7 +1088,7 @@ public void loadUnreadMessages() {
                                             message.replyMessage.readAttachPath(data, UserConfig.getInstance(currentAccount).clientUserId);
                                             data.reuse();
                                             if (message.replyMessage != null) {
-                                                if (MessageObject.isMegagroup(message)) {
+                                                if (MessageObjectTypeIdentifier.isMegagroup(message)) {
                                                     message.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                                 }
                                                 addUsersAndChatsFromMessage(message.replyMessage, usersToLoad, chatsToLoad);
@@ -1135,7 +1137,7 @@ public void loadUnreadMessages() {
                                     for (int a = 0; a < arrayList.size(); a++) {
                                         TLRPC.Message m = arrayList.get(a);
                                         m.replyMessage = message;
-                                        if (MessageObject.isMegagroup(m)) {
+                                        if (MessageObjectTypeIdentifier.isMegagroup(m)) {
                                             m.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                         }
                                     }
@@ -1876,7 +1878,7 @@ public void emptyMessagesMedia(final ArrayList<Integer> mids) {
                         state.bindInteger(4, message.send_state);
                         state.bindInteger(5, message.date);
                         state.bindByteBuffer(6, data);
-                        state.bindInteger(7, (MessageObject.isOut(message) ? 1 : 0));
+                        state.bindInteger(7, (MessageObjectTypeIdentifier.isOut(message) ? 1 : 0));
                         state.bindInteger(8, message.ttl);
                         if ((message.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
                             state.bindInteger(9, message.views);
@@ -3163,7 +3165,7 @@ public void getUnsentMessages(final int count) {
 
                             addUsersAndChatsFromMessage(message, usersToLoad, chatsToLoad);
 
-                            if (message.send_state != 3 && (message.to_id.channel_id == 0 && !MessageObject.isUnread(message) && lower_id != 0 || message.id > 0)) {
+                            if (message.send_state != 3 && (message.to_id.channel_id == 0 && !MessageObjectTypeIdentifier.isUnread(message) && lower_id != 0 || message.id > 0)) {
                                 message.send_state = 0;
                             }
                             if (lower_id == 0 && !cursor.isNull(5)) {
@@ -3719,7 +3721,7 @@ public void getMessages(final long dialog_id, final int count, final int max_id,
                                         message.replyMessage.readAttachPath(data, UserConfig.getInstance(currentAccount).clientUserId);
                                         data.reuse();
                                         if (message.replyMessage != null) {
-                                            if (MessageObject.isMegagroup(message)) {
+                                            if (MessageObjectTypeIdentifier.isMegagroup(message)) {
                                                 message.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                             }
                                             addUsersAndChatsFromMessage(message.replyMessage, usersToLoad, chatsToLoad);
@@ -3757,7 +3759,7 @@ public void getMessages(final long dialog_id, final int count, final int max_id,
                             if (lower_id == 0 && !cursor.isNull(5)) {
                                 message.random_id = cursor.longValue(5);
                             }
-                            if (MessageObject.isSecretPhotoOrVideo(message)) {
+                            if (MessageObjectTypeIdentifier.isSecretPhotoOrVideo(message)) {
                                 try {
                                     SQLiteCursor cursor2 = database.queryFinalized(String.format(Locale.US, "SELECT date FROM enc_tasks_v2 WHERE mid = %d", message.id));
                                     if (cursor2.next()) {
@@ -3833,7 +3835,7 @@ public void getMessages(final long dialog_id, final int count, final int max_id,
                                     for (int a = 0; a < arrayList.size(); a++) {
                                         TLRPC.Message object = arrayList.get(a);
                                         object.replyMessage = message;
-                                        if (MessageObject.isMegagroup(object)) {
+                                        if (MessageObjectTypeIdentifier.isMegagroup(object)) {
                                             object.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                         }
                                     }
@@ -3847,7 +3849,7 @@ public void getMessages(final long dialog_id, final int count, final int max_id,
                                         TLRPC.Message object = arrayList.get(a);
                                         object.replyMessage = message;
                                         object.reply_to_msg_id = message.id;
-                                        if (MessageObject.isMegagroup(object)) {
+                                        if (MessageObjectTypeIdentifier.isMegagroup(object)) {
                                             object.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                         }
                                     }
@@ -4593,17 +4595,17 @@ public void getDownloadQueue(final int type) {
 
     private int getMessageMediaType(TLRPC.Message message) {
         if (message instanceof TLRPC.TL_message_secret) {
-            if ((message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObject.isGifMessage(message)) && message.ttl > 0 && message.ttl <= 60 ||
-                            MessageObject.isVoiceMessage(message) ||
-                            MessageObject.isVideoMessage(message) ||
-                            MessageObject.isRoundVideoMessage(message)) {
+            if ((message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObjectTypeIdentifier.isGifMessage(message)) && message.ttl > 0 && message.ttl <= 60 ||
+                            MessageObjectTypeIdentifier.isVoiceMessage(message) ||
+                            MessageObjectTypeIdentifier.isVideoMessage(message) ||
+                            MessageObjectTypeIdentifier.isRoundVideoMessage(message)) {
                 return 1;
-            } else if (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObject.isVideoMessage(message)) {
+            } else if (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObjectTypeIdentifier.isVideoMessage(message)) {
                 return 0;
             }
         } else if (message instanceof TLRPC.TL_message && (message.media instanceof TLRPC.TL_messageMediaPhoto || message.media instanceof TLRPC.TL_messageMediaDocument) && message.media.ttl_seconds != 0) {
             return 1;
-        } else if (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObject.isVideoMessage(message)) {
+        } else if (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObjectTypeIdentifier.isVideoMessage(message)) {
             return 0;
         }
         return -1;
@@ -4853,7 +4855,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                     mentionsIdsMap.put(messageId, message.dialog_id);
                 }
 
-                if (!(message.action instanceof TLRPC.TL_messageActionHistoryClear) && !MessageObject.isOut(message) && (message.id > 0 || MessageObject.isUnread(message))) {Integer currentMaxId = dialogsReadMax.get(message.dialog_id);
+                if (!(message.action instanceof TLRPC.TL_messageActionHistoryClear) && !MessageObjectTypeIdentifier.isOut(message) && (message.id > 0 || MessageObjectTypeIdentifier.isUnread(message))) {Integer currentMaxId = dialogsReadMax.get(message.dialog_id);
                     if (currentMaxId == null) {
                         SQLiteCursor cursor = database.queryFinalized("SELECT inbox_max FROM dialogs WHERE did = " + message.dialog_id);
                         if (cursor.next()) {
@@ -4989,7 +4991,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 state.bindInteger(4, message.send_state);
                 state.bindInteger(5, message.date);
                 state.bindByteBuffer(6, data);
-                state.bindInteger(7, (MessageObject.isOut(message) ? 1 : 0));
+                state.bindInteger(7, (MessageObjectTypeIdentifier.isOut(message) ? 1 : 0));
                 state.bindInteger(8, message.ttl);
                 if ((message.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
                     state.bindInteger(9, message.views);
@@ -5034,13 +5036,13 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                         int type = 0;
                         long id = 0;
                         TLRPC.MessageMedia object = null;
-                        if (MessageObject.isVoiceMessage(message)) {
+                        if (MessageObjectTypeIdentifier.isVoiceMessage(message)) {
                             id = message.media.document.id;
                             type = DownloadController.AUTODOWNLOAD_MASK_AUDIO;
                             object = new TLRPC.TL_messageMediaDocument();
                             object.document = message.media.document;
                             object.flags |= 1;
-                        } else if (MessageObject.isRoundVideoMessage(message)) {
+                        } else if (MessageObjectTypeIdentifier.isRoundVideoMessage(message)) {
                             id = message.media.document.id;
                             type = DownloadController.AUTODOWNLOAD_MASK_VIDEOMESSAGE;
                             object = new TLRPC.TL_messageMediaDocument();
@@ -5055,13 +5057,13 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                                 object.photo = message.media.photo;
                                 object.flags |= 1;
                             }
-                        } else if (MessageObject.isVideoMessage(message)) {
+                        } else if (MessageObjectTypeIdentifier.isVideoMessage(message)) {
                             id = message.media.document.id;
                             type = DownloadController.AUTODOWNLOAD_MASK_VIDEO;
                             object = new TLRPC.TL_messageMediaDocument();
                             object.document = message.media.document;
                             object.flags |= 1;
-                        } else if (message.media instanceof TLRPC.TL_messageMediaDocument && !MessageObject.isMusicMessage(message) && !MessageObject.isGifDocument(message.media.document)) {
+                        } else if (message.media instanceof TLRPC.TL_messageMediaDocument && !MessageObjectTypeIdentifier.isMusicMessage(message) && !MessageObjectTypeIdentifier.isGifDocument(message.media.document)) {
                             id = message.media.document.id;
                             type = DownloadController.AUTODOWNLOAD_MASK_DOCUMENT;
                             object = new TLRPC.TL_messageMediaDocument();
@@ -6401,7 +6403,7 @@ public void putMessages(final TLRPC.messages_Messages messages, final long dialo
                     state.bindInteger(4, message.send_state);
                     state.bindInteger(5, message.date);
                     state.bindByteBuffer(6, data);
-                    state.bindInteger(7, (MessageObject.isOut(message) ? 1 : 0));
+                    state.bindInteger(7, (MessageObjectTypeIdentifier.isOut(message) ? 1 : 0));
                     state.bindInteger(8, message.ttl);
                     if ((message.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
                         state.bindInteger(9, message.views);
@@ -6619,7 +6621,7 @@ public void getDialogs(final int offset, final int count) {
                                             message.replyMessage.readAttachPath(data, UserConfig.getInstance(currentAccount).clientUserId);
                                             data.reuse();
                                             if (message.replyMessage != null) {
-                                                if (MessageObject.isMegagroup(message)) {
+                                                if (MessageObjectTypeIdentifier.isMegagroup(message)) {
                                                     message.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                                 }
                                                 addUsersAndChatsFromMessage(message.replyMessage, usersToLoad, chatsToLoad);
@@ -6687,7 +6689,7 @@ public void getDialogs(final int offset, final int count) {
                             if (owner != null) {
                                 owner.replyMessage = message;
                                 message.dialog_id = owner.dialog_id;
-                                if (MessageObject.isMegagroup(owner)) {
+                                if (MessageObjectTypeIdentifier.isMegagroup(owner)) {
                                     owner.replyMessage.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                 }
                             }
@@ -6804,7 +6806,7 @@ private void putDialogsInternal(final TLRPC.messages_Dialogs dialogs, int check)
                         state.bindInteger(4, message.send_state);
                         state.bindInteger(5, message.date);
                         state.bindByteBuffer(6, data);
-                        state.bindInteger(7, (MessageObject.isOut(message) ? 1 : 0));
+                        state.bindInteger(7, (MessageObjectTypeIdentifier.isOut(message) ? 1 : 0));
                         state.bindInteger(8, 0);
                         state.bindInteger(9, (message.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0 ? message.views : 0);
                         state.bindInteger(10, 0);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java b/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java
index e2499bc17..57d55bd58 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MusicBrowserService.java
@@ -38,6 +38,8 @@
 
 import org.telegram.SQLite.SQLiteCursor;
 import org.telegram.messenger.audioinfo.AudioInfo;
+import org.telegram.messenger.message.MessageObject;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.NativeByteBuffer;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.LaunchActivity;
@@ -181,7 +183,7 @@ public void run() {
                                     TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                                     message.readAttachPath(data, UserConfig.getInstance(currentAccount).clientUserId);
                                     data.reuse();
-                                    if (MessageObject.isMusicMessage(message)) {
+                                    if (MessageObjectTypeIdentifier.isMusicMessage(message)) {
                                         int did = cursor.intValue(0);
                                         message.id = cursor.intValue(2);
                                         message.dialog_id = did;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java b/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java
index e0d54597f..72ca39d43 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MusicPlayerService.java
@@ -34,6 +34,7 @@
 import com.google.android.exoplayer2.C;
 
 import org.telegram.messenger.audioinfo.AudioInfo;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.ui.LaunchActivity;
 
 public class MusicPlayerService extends Service implements NotificationCenter.NotificationCenterDelegate {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
index d292a6359..4b8c7c20a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
@@ -52,6 +52,7 @@
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SecretChatHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SecretChatHelper.java
index c3632d59e..981c7bcd8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SecretChatHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SecretChatHelper.java
@@ -15,6 +15,8 @@
 import android.util.SparseArray;
 
 import org.telegram.SQLite.SQLiteCursor;
+import org.telegram.messenger.message.MessageObject;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.AbstractSerializedData;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
@@ -712,7 +714,7 @@ protected void performSendEncryptedRequest(final TLRPC.DecryptedMessage req, fin
                                     newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
                                     NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, newMsgObj.id, newMsgObj.id, newMsgObj, newMsgObj.dialog_id, 0L);
                                     SendMessagesHelper.getInstance(currentAccount).processSentMessage(newMsgObj.id);
-                                    if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj)) {
+                                    if (MessageObjectTypeIdentifier.isVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isNewGifMessage(newMsgObj) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsgObj)) {
                                         SendMessagesHelper.getInstance(currentAccount).stopVideoService(attachPath);
                                     }
                                     SendMessagesHelper.getInstance(currentAccount).removeFromSendingMessages(newMsgObj.id);
@@ -724,7 +726,7 @@ protected void performSendEncryptedRequest(final TLRPC.DecryptedMessage req, fin
                                 newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
                                 NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsgObj.id);
                                 SendMessagesHelper.getInstance(currentAccount).processSentMessage(newMsgObj.id);
-                                if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj)) {
+                                if (MessageObjectTypeIdentifier.isVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isNewGifMessage(newMsgObj) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsgObj)) {
                                     SendMessagesHelper.getInstance(currentAccount).stopVideoService(newMsgObj.attachPath);
                                 }
                                 SendMessagesHelper.getInstance(currentAccount).removeFromSendingMessages(newMsgObj.id);
@@ -963,7 +965,7 @@ private void applyPeerLayer(final TLRPC.EncryptedChat chat, int newPeerLayer) {
                         newMessage.media.document.thumb.type = "s";
                     }
                     newMessage.media.document.dc_id = file.dc_id;
-                    if (MessageObject.isVoiceMessage(newMessage) || MessageObject.isRoundVideoMessage(newMessage)) {
+                    if (MessageObjectTypeIdentifier.isVoiceMessage(newMessage) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMessage)) {
                         newMessage.media_unread = true;
                     }
                 } else if (decryptedMessage.media instanceof TLRPC.TL_decryptedMessageMediaExternalDocument) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index de070b0c1..77cb1fd26 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -45,6 +45,7 @@
 import com.googlecode.mp4parser.util.Path;
 
 import org.telegram.messenger.audioinfo.AudioInfo;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
@@ -869,7 +870,7 @@ public void cancelSendingMessage(ArrayList<MessageObject> objects) {
 
     public boolean retrySendMessage(MessageObject messageObject, boolean unsent) {
         if (messageObject.getId() >= 0) {
-            if (messageObject.isEditing()) {
+            if (MessageObjectTypeIdentifier.isEditing()) {
                 editMessageMedia(messageObject, null, null, null, null, null, true);
             }
             return false;
@@ -1257,7 +1258,7 @@ public int sendMessage(ArrayList<MessageObject> messages, final long peer) {
                 }
                 newMsg.dialog_id = peer;
                 newMsg.to_id = to_id;
-                if (MessageObject.isVoiceMessage(newMsg) || MessageObject.isRoundVideoMessage(newMsg)) {
+                if (MessageObjectTypeIdentifier.isVoiceMessage(newMsg) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsg)) {
                     if (inputPeer instanceof TLRPC.TL_inputPeerChannel && msgObj.getChannelId() != 0) {
                         newMsg.media_unread = msgObj.isContentUnread();
                     } else {
@@ -1454,7 +1455,7 @@ private void editMessageMedia(MessageObject messageObject, TLRPC.TL_photo photo,
                     type = 2;
                 } else {
                     document = (TLRPC.TL_document) messageObject.messageOwner.media.document;
-                    if (MessageObject.isVideoDocument(document) || videoEditedInfo != null) {
+                    if (MessageObjectTypeIdentifier.isVideoDocument(document) || videoEditedInfo != null) {
                         type = 3;
                     } else {
                         type = 7;
@@ -1496,7 +1497,7 @@ private void editMessageMedia(MessageObject messageObject, TLRPC.TL_photo photo,
                     newMsg.media = new TLRPC.TL_messageMediaDocument();
                     newMsg.media.flags |= 3;
                     newMsg.media.document = document;
-                    if (MessageObject.isVideoDocument(document) || videoEditedInfo != null) {
+                    if (MessageObjectTypeIdentifier.isVideoDocument(document) || videoEditedInfo != null) {
                         type = 3;
                     } else {
                         type = 7;
@@ -1595,7 +1596,7 @@ private void editMessageMedia(MessageObject messageObject, TLRPC.TL_photo photo,
                         inputMedia = new TLRPC.TL_inputMediaUploadedDocument();
                         inputMedia.mime_type = document.mime_type;
                         inputMedia.attributes = document.attributes;
-                        if (!messageObject.isGif() && (videoEditedInfo == null || !videoEditedInfo.muted)) {
+                        if (!MessageObjectTypeIdentifier.isGif() && (videoEditedInfo == null || !videoEditedInfo.muted)) {
                             inputMedia.nosound_video = true;
                         }
                         if (delayedMessage == null) {
@@ -2045,7 +2046,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
         try {
             if (retryMessageObject != null) {
                 newMsg = retryMessageObject.messageOwner;
-                if (retryMessageObject.isForwarded()) {
+                if (retryMessageObjectTypeIdentifier.isForwarded()) {
                     type = 4;
                 } else {
                     if (retryMessageObject.type == 0) {
@@ -2199,9 +2200,9 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                     newMsg.media.document = document;
                     if (params != null && params.containsKey("query_id")) {
                         type = 9;
-                    } else if (MessageObject.isVideoDocument(document) || MessageObject.isRoundVideoDocument(document) || videoEditedInfo != null) {
+                    } else if (MessageObjectTypeIdentifier.isVideoDocument(document) || MessageObjectTypeIdentifier.isRoundVideoDocument(document) || videoEditedInfo != null) {
                         type = 3;
-                    } else if (MessageObject.isVoiceDocument(document)) {
+                    } else if (MessageObjectTypeIdentifier.isVoiceDocument(document)) {
                         type = 8;
                     } else {
                         type = 7;
@@ -2213,12 +2214,12 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                         }
                         params.put("ve", ve);
                     }
-                    if (encryptedChat != null && document.dc_id > 0 && !MessageObject.isStickerDocument(document)) {
+                    if (encryptedChat != null && document.dc_id > 0 && !MessageObjectTypeIdentifier.isStickerDocument(document)) {
                         newMsg.attachPath = FileLoader.getPathToAttach(document).toString();
                     } else {
                         newMsg.attachPath = path;
                     }
-                    if (encryptedChat != null && MessageObject.isStickerDocument(document)) {
+                    if (encryptedChat != null && MessageObjectTypeIdentifier.isStickerDocument(document)) {
                         for (int a = 0; a < document.attributes.size(); a++) {
                             TLRPC.DocumentAttribute attribute = document.attributes.get(a);
                             if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
@@ -2370,7 +2371,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                     }
                 }
                 if (newMsg.ttl != 0 && newMsg.media.document != null) {
-                    if (MessageObject.isVoiceMessage(newMsg)) {
+                    if (MessageObjectTypeIdentifier.isVoiceMessage(newMsg)) {
                         int duration = 0;
                         for (int a = 0; a < newMsg.media.document.attributes.size(); a++) {
                             TLRPC.DocumentAttribute attribute = newMsg.media.document.attributes.get(a);
@@ -2380,7 +2381,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                             }
                         }
                         newMsg.ttl = Math.max(newMsg.ttl, duration + 1);
-                    } else if (MessageObject.isVideoMessage(newMsg) || MessageObject.isRoundVideoMessage(newMsg)) {
+                    } else if (MessageObjectTypeIdentifier.isVideoMessage(newMsg) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsg)) {
                         int duration = 0;
                         for (int a = 0; a < newMsg.media.document.attributes.size(); a++) {
                             TLRPC.DocumentAttribute attribute = newMsg.media.document.attributes.get(a);
@@ -2393,7 +2394,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                     }
                 }
             }
-            if (high_id != 1 && (MessageObject.isVoiceMessage(newMsg) || MessageObject.isRoundVideoMessage(newMsg))) {
+            if (high_id != 1 && (MessageObjectTypeIdentifier.isVoiceMessage(newMsg) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsg))) {
                 newMsg.media_unread = true;
             }
 
@@ -2588,7 +2589,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                             inputMedia = new TLRPC.TL_inputMediaUploadedDocument();
                             inputMedia.mime_type = document.mime_type;
                             inputMedia.attributes = document.attributes;
-                            if (!MessageObject.isRoundVideoDocument(document) && (videoEditedInfo == null || !videoEditedInfo.muted && !videoEditedInfo.roundVideo)) {
+                            if (!MessageObjectTypeIdentifier.isRoundVideoDocument(document) && (videoEditedInfo == null || !videoEditedInfo.muted && !videoEditedInfo.roundVideo)) {
                                 inputMedia.nosound_video = true;
                             }
                             if (ttl != 0) {
@@ -2856,7 +2857,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                         }
                     } else if (type == 3) {
                         ImageLoader.fillPhotoSizeWithBytes(document.thumb);
-                        if (MessageObject.isNewGifDocument(document) || MessageObject.isRoundVideoDocument(document)) {
+                        if (MessageObjectTypeIdentifier.isNewGifDocument(document) || MessageObjectTypeIdentifier.isRoundVideoDocument(document)) {
                             reqSend.media = new TLRPC.TL_decryptedMessageMediaDocument();
                             reqSend.media.attributes = document.attributes;
                             if (document.thumb != null && document.thumb.bytes != null) {
@@ -2915,7 +2916,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
                         reqSend.media.user_id = user.id;
                         SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
                     } else if (type == 7 || type == 9 && document != null) {
-                        if (MessageObject.isStickerDocument(document)) {
+                        if (MessageObjectTypeIdentifier.isStickerDocument(document)) {
                             reqSend.media = new TLRPC.TL_decryptedMessageMediaExternalDocument();
                             reqSend.media.id = document.id;
                             reqSend.media.date = document.date;
@@ -3647,12 +3648,12 @@ private void performSendMessageRequest(final TLObject req, final MessageObject m
                                 removeFromSendingMessages(newMsgObj.id);
                             });
                         });
-                        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
+                        if (MessageObjectTypeIdentifier.isVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isNewGifMessage(newMsgObj)) {
                             stopVideoService(attachPath);
                         }
                     } else {
                         AlertsCreator.processError(currentAccount, error, null, req);
-                        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
+                        if (MessageObjectTypeIdentifier.isVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isNewGifMessage(newMsgObj)) {
                             stopVideoService(newMsgObj.attachPath);
                         }
                         removeFromSendingMessages(newMsgObj.id);
@@ -3727,7 +3728,7 @@ private void performSendMessageRequest(final TLObject req, final MessageObject m
                             Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processUpdates(updates, false));
                         }
 
-                        if (MessageObject.isLiveLocationMessage(newMsgObj)) {
+                        if (MessageObjectTypeIdentifier.isLiveLocationMessage(newMsgObj)) {
                             LocationController.getInstance(currentAccount).addSharingLocation(newMsgObj.dialog_id, newMsgObj.id, newMsgObj.media.period, newMsgObj);
                         }
 
@@ -3759,7 +3760,7 @@ private void performSendMessageRequest(final TLObject req, final MessageObject m
                                     processSentMessage(oldId);
                                     removeFromSendingMessages(oldId);
                                 });
-                                if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
+                                if (MessageObjectTypeIdentifier.isVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isNewGifMessage(newMsgObj)) {
                                     stopVideoService(attachPath);
                                 }
                             });
@@ -3773,7 +3774,7 @@ private void performSendMessageRequest(final TLObject req, final MessageObject m
                         newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
                         NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsgObj.id);
                         processSentMessage(newMsgObj.id);
-                        if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
+                        if (MessageObjectTypeIdentifier.isVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isRoundVideoMessage(newMsgObj) || MessageObjectTypeIdentifier.isNewGifMessage(newMsgObj)) {
                             stopVideoService(newMsgObj.attachPath);
                         }
                         removeFromSendingMessages(newMsgObj.id);
@@ -3843,12 +3844,12 @@ private void updateMediaPaths(MessageObject newMsgObj, TLRPC.Message sentMessage
             newMsg.media.photo.id = sentMessage.media.photo.id;
             newMsg.media.photo.access_hash = sentMessage.media.photo.access_hash;
         } else if (sentMessage.media instanceof TLRPC.TL_messageMediaDocument && sentMessage.media.document != null && newMsg.media instanceof TLRPC.TL_messageMediaDocument && newMsg.media.document != null) {
-            if (MessageObject.isVideoMessage(sentMessage)) {
+            if (MessageObjectTypeIdentifier.isVideoMessage(sentMessage)) {
                 if (sentMessage.media.ttl_seconds == 0) {
                     MessagesStorage.getInstance(currentAccount).putSentFile(originalPath, sentMessage.media.document, 2);
                 }
                 sentMessage.attachPath = newMsg.attachPath;
-            } else if (!MessageObject.isVoiceMessage(sentMessage) && !MessageObject.isRoundVideoMessage(sentMessage)) {
+            } else if (!MessageObjectTypeIdentifier.isVoiceMessage(sentMessage) && !MessageObjectTypeIdentifier.isRoundVideoMessage(sentMessage)) {
                 if (sentMessage.media.ttl_seconds == 0) {
                     MessagesStorage.getInstance(currentAccount).putSentFile(originalPath, sentMessage.media.document, 1);
                 }
@@ -3867,7 +3868,7 @@ private void updateMediaPaths(MessageObject newMsgObj, TLRPC.Message sentMessage
                     size2.location = size.location;
                     size2.size = size.size;
                 }
-            } else if (size2 != null && MessageObject.isStickerMessage(sentMessage) && size2.location != null) {
+            } else if (size2 != null && MessageObjectTypeIdentifier.isStickerMessage(sentMessage) && size2.location != null) {
                 size.location = size2.location;
             } else if (size2 != null && size2.location instanceof TLRPC.TL_fileLocationUnavailable || size2 instanceof TLRPC.TL_photoSizeEmpty) {
                 newMsg.media.document.thumb = sentMessage.media.document.thumb;
@@ -3897,10 +3898,10 @@ private void updateMediaPaths(MessageObject newMsgObj, TLRPC.Message sentMessage
             newMsg.media.document.size = sentMessage.media.document.size;
             newMsg.media.document.mime_type = sentMessage.media.document.mime_type;
 
-            if ((sentMessage.flags & TLRPC.MESSAGE_FLAG_FWD) == 0 && MessageObject.isOut(sentMessage)) {
-                if (MessageObject.isNewGifDocument(sentMessage.media.document)) {
+            if ((sentMessage.flags & TLRPC.MESSAGE_FLAG_FWD) == 0 && MessageObjectTypeIdentifier.isOut(sentMessage)) {
+                if (MessageObjectTypeIdentifier.isNewGifDocument(sentMessage.media.document)) {
                     DataQuery.getInstance(currentAccount).addRecentGif(sentMessage.media.document, sentMessage.date);
-                } else if (MessageObject.isStickerDocument(sentMessage.media.document)) {
+                } else if (MessageObjectTypeIdentifier.isStickerDocument(sentMessage.media.document)) {
                     DataQuery.getInstance(currentAccount).addRecentSticker(DataQuery.TYPE_IMAGE, sentMessage.media.document, sentMessage.date, false);
                 }
             }
@@ -3912,7 +3913,7 @@ private void updateMediaPaths(MessageObject newMsgObj, TLRPC.Message sentMessage
                     sentMessage.attachPath = newMsg.attachPath;
                     sentMessage.message = newMsg.message;
                 } else {
-                    if (MessageObject.isVideoMessage(sentMessage)) {
+                    if (MessageObjectTypeIdentifier.isVideoMessage(sentMessage)) {
                         newMsgObj.attachPathExists = true;
                     } else {
                         newMsgObj.mediaExists = newMsgObj.attachPathExists;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/WearDataLayerListenerService.java b/TMessagesProj/src/main/java/org/telegram/messenger/WearDataLayerListenerService.java
index d7a88a973..55a457d12 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/WearDataLayerListenerService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/WearDataLayerListenerService.java
@@ -16,6 +16,7 @@
 import com.google.android.gms.wearable.WearableListenerService;
 
 import org.json.JSONObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/message/MessageObject.java
similarity index 93%
rename from TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
rename to TMessagesProj/src/main/java/org/telegram/messenger/message/MessageObject.java
index 08520b048..246624627 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/message/MessageObject.java
@@ -6,7 +6,7 @@
  * Copyright Nikolai Kudashov, 2013-2017.
  */
 
-package org.telegram.messenger;
+package org.telegram.messenger.message;
 
 import android.graphics.Typeface;
 import android.os.Build;
@@ -24,6 +24,7 @@
 import android.util.SparseArray;
 
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger.*;
 import org.telegram.messenger.browser.Browser;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.SerializedData;
@@ -50,6 +51,10 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
+
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
+
 public class MessageObject {
 
     public static final int MESSAGE_SEND_STATE_SENT = 0;
@@ -2016,7 +2021,7 @@ public void setType() {
                 type = 0;
             } else if (messageOwner.media instanceof TLRPC.TL_messageMediaDocument) {
                 if (messageOwner.media.document != null && messageOwner.media.document.mime_type != null) {
-                    if (isGifDocument(messageOwner.media.document)) {
+                    if (MessageObjectTypeIdentifier.isGifDocument(messageOwner.media.document)) {
                         type = 8;
                     } else if (messageOwner.media.document.mime_type.equals("image/webp") && isSticker()) {
                         type = 13;
@@ -2109,76 +2114,6 @@ public String getMimeType() {
         return "";
     }
 
-    public static boolean isGifDocument(WebFile document) {
-        return document != null && (document.mime_type.equals("image/gif") || isNewGifDocument(document));
-    }
-
-    public static boolean isGifDocument(TLRPC.Document document) {
-        return document != null && document.thumb != null && document.mime_type != null && (document.mime_type.equals("image/gif") || isNewGifDocument(document));
-    }
-
-    public static boolean isRoundVideoDocument(TLRPC.Document document) {
-        if (document != null && document.mime_type != null && document.mime_type.equals("video/mp4")) {
-            int width = 0;
-            int height = 0;
-            boolean round = false;
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
-                    width = attribute.w;
-                    height = attribute.w;
-                    round = attribute.round_message;
-                }
-            }
-            if (round && width <= 1280 && height <= 1280) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    public static boolean isNewGifDocument(WebFile document) {
-        if (document != null && document.mime_type != null && document.mime_type.equals("video/mp4")) {
-            int width = 0;
-            int height = 0;
-            boolean animated = false;
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeAnimated) {
-                    animated = true;
-                } else if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
-                    width = attribute.w;
-                    height = attribute.w;
-                }
-            }
-            if (/*animated && */width <= 1280 && height <= 1280) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    public static boolean isNewGifDocument(TLRPC.Document document) {
-        if (document != null && document.mime_type != null && document.mime_type.equals("video/mp4")) {
-            int width = 0;
-            int height = 0;
-            boolean animated = false;
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeAnimated) {
-                    animated = true;
-                } else if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
-                    width = attribute.w;
-                    height = attribute.w;
-                }
-            }
-            if (animated && width <= 1280 && height <= 1280) {
-                return true;
-            }
-        }
-        return false;
-    }
-
     public void generateThumbs(boolean update) {
         if (messageOwner instanceof TLRPC.TL_messageService) {
             if (messageOwner.action instanceof TLRPC.TL_messageActionChatEditPhoto) {
@@ -3107,7 +3042,7 @@ public int getChannelId() {
 
     public static boolean shouldEncryptPhotoOrVideo(TLRPC.Message message) {
         if (message instanceof TLRPC.TL_message_secret) {
-            return (message.media instanceof TLRPC.TL_messageMediaPhoto || isVideoMessage(message)) && message.ttl > 0 && message.ttl <= 60;
+            return (message.media instanceof TLRPC.TL_messageMediaPhoto || MessageObjectTypeIdentifier.isVideoMessage(message)) && message.ttl > 0 && message.ttl <= 60;
         } else {
             return (message.media instanceof TLRPC.TL_messageMediaPhoto || message.media instanceof TLRPC.TL_messageMediaDocument) && message.media.ttl_seconds != 0;
         }
@@ -3117,15 +3052,6 @@ public boolean shouldEncryptPhotoOrVideo() {
         return shouldEncryptPhotoOrVideo(messageOwner);
     }
 
-    public static boolean isSecretPhotoOrVideo(TLRPC.Message message) {
-        if (message instanceof TLRPC.TL_message_secret) {
-            return (message.media instanceof TLRPC.TL_messageMediaPhoto || isRoundVideoMessage(message) || isVideoMessage(message)) && message.ttl > 0 && message.ttl <= 60;
-        } else if (message instanceof TLRPC.TL_message) {
-            return (message.media instanceof TLRPC.TL_messageMediaPhoto || message.media instanceof TLRPC.TL_messageMediaDocument) && message.media.ttl_seconds != 0;
-        }
-        return false;
-    }
-
     public boolean needDrawBluredPreview() {
         if (messageOwner instanceof TLRPC.TL_message_secret) {
             int ttl = Math.max(messageOwner.ttl, messageOwner.media.ttl_seconds);
@@ -3150,16 +3076,8 @@ public static void setUnreadFlags(TLRPC.Message message, int flag) {
         message.media_unread = (flag & 2) == 0;
     }
 
-    public static boolean isUnread(TLRPC.Message message) {
-        return message.unread;
-    }
-
-    public static boolean isContentUnread(TLRPC.Message message) {
-        return message.media_unread;
-    }
-
     public boolean isMegagroup() {
-        return isMegagroup(messageOwner);
+        return MessageObjectTypeIdentifier.isMegagroup(messageOwner);
     }
 
     public boolean isSavedFromMegagroup() {
@@ -3170,14 +3088,6 @@ public boolean isSavedFromMegagroup() {
         return false;
     }
 
-    public static boolean isMegagroup(TLRPC.Message message) {
-        return (message.flags & TLRPC.MESSAGE_FLAG_MEGAGROUP) != 0;
-    }
-
-    public static boolean isOut(TLRPC.Message message) {
-        return message.out;
-    }
-
     public long getDialogId() {
         return getDialogId(messageOwner);
     }
@@ -3209,7 +3119,7 @@ public static long getDialogId(TLRPC.Message message) {
                 }
             } else if (message.to_id.channel_id != 0) {
                 message.dialog_id = -message.to_id.channel_id;
-            } else if (isOut(message)) {
+            } else if (MessageObjectTypeIdentifier.isOut(message)) {
                 message.dialog_id = message.to_id.user_id;
             } else {
                 message.dialog_id = message.from_id;
@@ -3266,101 +3176,6 @@ public String getDocumentName() {
         return "";
     }
 
-    public static boolean isStickerDocument(TLRPC.Document document) {
-        if (document != null) {
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
-                    return true;
-                }
-            }
-        }
-        return false;
-    }
-
-    public static boolean isMaskDocument(TLRPC.Document document) {
-        if (document != null) {
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeSticker && attribute.mask) {
-                    return true;
-                }
-            }
-        }
-        return false;
-    }
-
-    public static boolean isVoiceDocument(TLRPC.Document document) {
-        if (document != null) {
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
-                    return attribute.voice;
-                }
-            }
-        }
-        return false;
-    }
-
-    public static boolean isVoiceWebDocument(WebFile webDocument) {
-        return webDocument != null && webDocument.mime_type.equals("audio/ogg");
-    }
-
-    public static boolean isImageWebDocument(WebFile webDocument) {
-        return webDocument != null && !isGifDocument(webDocument) && webDocument.mime_type.startsWith("image/");
-    }
-
-    public static boolean isVideoWebDocument(WebFile webDocument) {
-        return webDocument != null && webDocument.mime_type.startsWith("video/");
-    }
-
-    public static boolean isMusicDocument(TLRPC.Document document) {
-        if (document != null) {
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
-                    return !attribute.voice;
-                }
-            }
-            if (!TextUtils.isEmpty(document.mime_type)) {
-                String mime = document.mime_type.toLowerCase();
-                if (mime.equals("audio/flac") || mime.equals("audio/ogg") || mime.equals("audio/opus") || mime.equals("audio/x-opus+ogg")) {
-                    return true;
-                } else if (mime.equals("application/octet-stream") && FileLoader.getDocumentFileName(document).endsWith(".opus")) {
-                    return true;
-                }
-            }
-        }
-        return false;
-    }
-
-    public static boolean isVideoDocument(TLRPC.Document document) {
-        if (document != null) {
-            boolean isAnimated = false;
-            boolean isVideo = false;
-            int width = 0;
-            int height = 0;
-            for (int a = 0; a < document.attributes.size(); a++) {
-                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
-                if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
-                    if (attribute.round_message) {
-                        return false;
-                    }
-                    isVideo = true;
-                    width = attribute.w;
-                    height = attribute.h;
-                } else if (attribute instanceof TLRPC.TL_documentAttributeAnimated) {
-                    isAnimated = true;
-                }
-            }
-            if (isAnimated && (width > 1280 || height > 1280)) {
-                isAnimated = false;
-            }
-            return isVideo && !isAnimated;
-        }
-        return false;
-    }
-
     public TLRPC.Document getDocument() {
         if (messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) {
             return messageOwner.media.webpage.document;
@@ -3368,72 +3183,6 @@ public static boolean isVideoDocument(TLRPC.Document document) {
         return messageOwner.media != null ? messageOwner.media.document : null;
     }
 
-    public static boolean isStickerMessage(TLRPC.Message message) {
-        return message.media != null && message.media.document != null && isStickerDocument(message.media.document);
-    }
-
-    public static boolean isMaskMessage(TLRPC.Message message) {
-        return message.media != null && message.media.document != null && isMaskDocument(message.media.document);
-    }
-
-    public static boolean isMusicMessage(TLRPC.Message message) {
-        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            return isMusicDocument(message.media.webpage.document);
-        }
-        return message.media != null && message.media.document != null && isMusicDocument(message.media.document);
-    }
-
-    public static boolean isGifMessage(TLRPC.Message message) {
-        return message.media != null && message.media.document != null && isGifDocument(message.media.document);
-    }
-
-    public static boolean isRoundVideoMessage(TLRPC.Message message) {
-        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            return isRoundVideoDocument(message.media.webpage.document);
-        }
-        return message.media != null && message.media.document != null && isRoundVideoDocument(message.media.document);
-    }
-
-    public static boolean isPhoto(TLRPC.Message message) {
-        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            return message.media.webpage.photo instanceof TLRPC.TL_photo;
-        }
-        return message.media instanceof TLRPC.TL_messageMediaPhoto;
-    }
-
-    public static boolean isVoiceMessage(TLRPC.Message message) {
-        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            return isVoiceDocument(message.media.webpage.document);
-        }
-        return message.media != null && message.media.document != null && isVoiceDocument(message.media.document);
-    }
-
-    public static boolean isNewGifMessage(TLRPC.Message message) {
-        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            return isNewGifDocument(message.media.webpage.document);
-        }
-        return message.media != null && message.media.document != null && isNewGifDocument(message.media.document);
-    }
-
-    public static boolean isLiveLocationMessage(TLRPC.Message message) {
-        return message.media instanceof TLRPC.TL_messageMediaGeoLive;
-    }
-
-    public static boolean isVideoMessage(TLRPC.Message message) {
-        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            return isVideoDocument(message.media.webpage.document);
-        }
-        return message.media != null && message.media.document != null && isVideoDocument(message.media.document);
-    }
-
-    public static boolean isGameMessage(TLRPC.Message message) {
-        return message.media instanceof TLRPC.TL_messageMediaGame;
-    }
-
-    public static boolean isInvoiceMessage(TLRPC.Message message) {
-        return message.media instanceof TLRPC.TL_messageMediaInvoice;
-    }
-
     public static TLRPC.InputStickerSet getInputStickerSet(TLRPC.Message message) {
         if (message.media != null && message.media.document != null) {
             for (TLRPC.DocumentAttribute attribute : message.media.document.attributes) {
@@ -3583,40 +3332,40 @@ public boolean isSticker() {
         if (type != 1000) {
             return type == 13;
         }
-        return isStickerMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isStickerMessage(messageOwner);
     }
 
     public boolean isMask() {
-        return isMaskMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isMaskMessage(messageOwner);
     }
 
     public boolean isMusic() {
-        return isMusicMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isMusicMessage(messageOwner);
     }
 
     public boolean isVoice() {
-        return isVoiceMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isVoiceMessage(messageOwner);
     }
 
     public boolean isVideo() {
-        return isVideoMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isVideoMessage(messageOwner);
     }
 
     public boolean isLiveLocation() {
-        return isLiveLocationMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isLiveLocationMessage(messageOwner);
     }
 
     public boolean isGame() {
-        return isGameMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isGameMessage(messageOwner);
     }
 
     public boolean isInvoice() {
-        return isInvoiceMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isInvoiceMessage(messageOwner);
     }
 
     public boolean isRoundVideo() {
         if (isRoundVideoCached == 0) {
-            isRoundVideoCached = type == 5 || isRoundVideoMessage(messageOwner) ? 1 : 2;
+            isRoundVideoCached = type == 5 || MessageObjectTypeIdentifier.isRoundVideoMessage(messageOwner) ? 1 : 2;
         }
         return isRoundVideoCached == 1;
     }
@@ -3626,11 +3375,11 @@ public boolean hasPhotoStickers() {
     }
 
     public boolean isGif() {
-        return isGifMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isGifMessage(messageOwner);
     }
 
     public boolean isWebpageDocument() {
-        return messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && messageOwner.media.webpage.document != null && !isGifDocument(messageOwner.media.webpage.document);
+        return messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && messageOwner.media.webpage.document != null && !MessageObjectTypeIdentifier.isGifDocument(messageOwner.media.webpage.document);
     }
 
     public boolean isWebpage() {
@@ -3638,7 +3387,7 @@ public boolean isWebpage() {
     }
 
     public boolean isNewGif() {
-        return messageOwner.media != null && isNewGifDocument(messageOwner.media.document);
+        return messageOwner.media != null && MessageObjectTypeIdentifier.isNewGifDocument(messageOwner.media.document);
     }
 
     public String getMusicTitle() {
@@ -3768,27 +3517,19 @@ public String getMusicAuthor(boolean unknown) {
     }
 
     public boolean isForwarded() {
-        return isForwardedMessage(messageOwner);
+        return MessageObjectTypeIdentifier.isForwardedMessage(messageOwner);
     }
 
     public boolean needDrawForwarded() {
         return (messageOwner.flags & TLRPC.MESSAGE_FLAG_FWD) != 0 && messageOwner.fwd_from != null && messageOwner.fwd_from.saved_from_peer == null && UserConfig.getInstance(currentAccount).getClientUserId() != getDialogId();
     }
 
-    public static boolean isForwardedMessage(TLRPC.Message message) {
-        return (message.flags & TLRPC.MESSAGE_FLAG_FWD) != 0 && message.fwd_from != null;
-    }
-
     public boolean isReply() {
         return !(replyMessageObject != null && replyMessageObject.messageOwner instanceof TLRPC.TL_messageEmpty) && (messageOwner.reply_to_msg_id != 0 || messageOwner.reply_to_random_id != 0) && (messageOwner.flags & TLRPC.MESSAGE_FLAG_REPLY) != 0;
     }
 
     public boolean isMediaEmpty() {
-        return isMediaEmpty(messageOwner);
-    }
-
-    public static boolean isMediaEmpty(TLRPC.Message message) {
-        return message == null || message.media == null || message.media instanceof TLRPC.TL_messageMediaEmpty || message.media instanceof TLRPC.TL_messageMediaWebPage;
+        return MessageObjectTypeIdentifier.isMediaEmpty(messageOwner);
     }
 
     public boolean canEditMessage(TLRPC.Chat chat) {
@@ -3811,10 +3552,10 @@ public boolean canEditMessageAnytime(TLRPC.Chat chat) {
     }
 
     public static boolean canEditMessageAnytime(int currentAccount, TLRPC.Message message, TLRPC.Chat chat) {
-        if (message == null || message.to_id == null || message.media != null && (isRoundVideoDocument(message.media.document) || isStickerDocument(message.media.document)) || message.action != null && !(message.action instanceof TLRPC.TL_messageActionEmpty) || isForwardedMessage(message) || message.via_bot_id != 0 || message.id < 0) {
+        if (message == null || message.to_id == null || message.media != null && (MessageObjectTypeIdentifier.isRoundVideoDocument(message.media.document) || MessageObjectTypeIdentifier.isStickerDocument(message.media.document)) || message.action != null && !(message.action instanceof TLRPC.TL_messageActionEmpty) || MessageObjectTypeIdentifier.isForwardedMessage(message) || message.via_bot_id != 0 || message.id < 0) {
             return false;
         }
-        if (message.from_id == message.to_id.user_id && message.from_id == UserConfig.getInstance(currentAccount).getClientUserId() && !isLiveLocationMessage(message)) {
+        if (message.from_id == message.to_id.user_id && message.from_id == UserConfig.getInstance(currentAccount).getClientUserId() && !MessageObjectTypeIdentifier.isLiveLocationMessage(message)) {
             return true;
         }
         if (chat == null && message.to_id.channel_id != 0) {
@@ -3834,10 +3575,10 @@ public static boolean canEditMessage(int currentAccount, TLRPC.Message message,
         if (chat != null && (chat.left || chat.kicked)) {
             return false;
         }
-        if (message == null || message.to_id == null || message.media != null && (isRoundVideoDocument(message.media.document) || isStickerDocument(message.media.document)) || message.action != null && !(message.action instanceof TLRPC.TL_messageActionEmpty) || isForwardedMessage(message) || message.via_bot_id != 0 || message.id < 0) {
+        if (message == null || message.to_id == null || message.media != null && (MessageObjectTypeIdentifier.isRoundVideoDocument(message.media.document) || MessageObjectTypeIdentifier.isStickerDocument(message.media.document)) || message.action != null && !(message.action instanceof TLRPC.TL_messageActionEmpty) || MessageObjectTypeIdentifier.isForwardedMessage(message) || message.via_bot_id != 0 || message.id < 0) {
             return false;
         }
-        if (message.from_id == message.to_id.user_id && message.from_id == UserConfig.getInstance(currentAccount).getClientUserId() && !isLiveLocationMessage(message) && !(message.media instanceof TLRPC.TL_messageMediaContact)) {
+        if (message.from_id == message.to_id.user_id && message.from_id == UserConfig.getInstance(currentAccount).getClientUserId() && !MessageObjectTypeIdentifier.isLiveLocationMessage(message) && !(message.media instanceof TLRPC.TL_messageMediaContact)) {
             return true;
         }
         if (chat == null && message.to_id.channel_id != 0) {
@@ -3857,7 +3598,7 @@ public static boolean canEditMessage(int currentAccount, TLRPC.Message message,
         }
         if (message.to_id.channel_id == 0) {
             return (message.out || message.from_id == UserConfig.getInstance(currentAccount).getClientUserId()) && (message.media instanceof TLRPC.TL_messageMediaPhoto ||
-                    message.media instanceof TLRPC.TL_messageMediaDocument && !isStickerMessage(message) ||
+                    message.media instanceof TLRPC.TL_messageMediaDocument && !MessageObjectTypeIdentifier.isStickerMessage(message) ||
                     message.media instanceof TLRPC.TL_messageMediaEmpty ||
                     message.media instanceof TLRPC.TL_messageMediaWebPage ||
                     message.media == null);
@@ -3888,7 +3629,7 @@ public static boolean canDeleteMessage(int currentAccount, TLRPC.Message message
         if (ChatObject.isChannel(chat)) {
             return message.id != 1 && (chat.creator || chat.admin_rights != null && (chat.admin_rights.delete_messages || message.out) || chat.megagroup && message.out && message.from_id > 0);
         }
-        return isOut(message) || !ChatObject.isChannel(chat);
+        return MessageObjectTypeIdentifier.isOut(message) || !ChatObject.isChannel(chat);
     }
 
     public String getForwardedName() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/message/MessageObjectTypeIdentifier.java b/TMessagesProj/src/main/java/org/telegram/messenger/message/MessageObjectTypeIdentifier.java
new file mode 100644
index 000000000..0f80605b8
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/message/MessageObjectTypeIdentifier.java
@@ -0,0 +1,274 @@
+package org.telegram.messenger.message;
+
+import android.text.TextUtils;
+import org.telegram.messenger.FileLoader;
+import org.telegram.messenger.WebFile;
+import org.telegram.tgnet.TLRPC;
+
+public class MessageObjectTypeIdentifier {
+    /* WebFile Document */
+    public static boolean isGifDocument(WebFile document) {
+        return document != null && (document.mime_type.equals("image/gif") || isNewGifDocument(document));
+    }
+
+    public static boolean isNewGifDocument(WebFile document) {
+        if (document != null && document.mime_type != null && document.mime_type.equals("video/mp4")) {
+            int width = 0;
+            int height = 0;
+            boolean animated = false;
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeAnimated) {
+                    animated = true;
+                } else if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
+                    width = attribute.w;
+                    height = attribute.w;
+                }
+            }
+            if (/*animated && */width <= 1280 && height <= 1280) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public static boolean isVoiceWebDocument(WebFile webDocument) {
+        return webDocument != null && webDocument.mime_type.equals("audio/ogg");
+    }
+
+    public static boolean isImageWebDocument(WebFile webDocument) {
+        return webDocument != null && !isGifDocument(webDocument) && webDocument.mime_type.startsWith("image/");
+    }
+
+    public static boolean isVideoWebDocument(WebFile webDocument) {
+        return webDocument != null && webDocument.mime_type.startsWith("video/");
+    }
+
+    /* TLRPC.Document */
+    public static boolean isGifDocument(TLRPC.Document document) {
+        return document != null && document.thumb != null && document.mime_type != null && (document.mime_type.equals("image/gif") || isNewGifDocument(document));
+    }
+
+    public static boolean isRoundVideoDocument(TLRPC.Document document) {
+        if (document != null && document.mime_type != null && document.mime_type.equals("video/mp4")) {
+            int width = 0;
+            int height = 0;
+            boolean round = false;
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
+                    width = attribute.w;
+                    height = attribute.w;
+                    round = attribute.round_message;
+                }
+            }
+            if (round && width <= 1280 && height <= 1280) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public static boolean isNewGifDocument(TLRPC.Document document) {
+        if (document != null && document.mime_type != null && document.mime_type.equals("video/mp4")) {
+            int width = 0;
+            int height = 0;
+            boolean animated = false;
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeAnimated) {
+                    animated = true;
+                } else if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
+                    width = attribute.w;
+                    height = attribute.w;
+                }
+            }
+            if (animated && width <= 1280 && height <= 1280) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public static boolean isSecretPhotoOrVideo(TLRPC.Message message) {
+        if (message instanceof TLRPC.TL_message_secret) {
+            return (message.media instanceof TLRPC.TL_messageMediaPhoto || isRoundVideoMessage(message) || isVideoMessage(message)) && message.ttl > 0 && message.ttl <= 60;
+        } else if (message instanceof TLRPC.TL_message) {
+            return (message.media instanceof TLRPC.TL_messageMediaPhoto || message.media instanceof TLRPC.TL_messageMediaDocument) && message.media.ttl_seconds != 0;
+        }
+        return false;
+    }
+
+    public static boolean isUnread(TLRPC.Message message) {
+        return message.unread;
+    }
+
+    public static boolean isContentUnread(TLRPC.Message message) {
+        return message.media_unread;
+    }
+
+    public static boolean isMegagroup(TLRPC.Message message) {
+        return (message.flags & TLRPC.MESSAGE_FLAG_MEGAGROUP) != 0;
+    }
+
+    public static boolean isOut(TLRPC.Message message) {
+        return message.out;
+    }
+
+    public static boolean isStickerDocument(TLRPC.Document document) {
+        if (document != null) {
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    public static boolean isMaskDocument(TLRPC.Document document) {
+        if (document != null) {
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeSticker && attribute.mask) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    public static boolean isVoiceDocument(TLRPC.Document document) {
+        if (document != null) {
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
+                    return attribute.voice;
+                }
+            }
+        }
+        return false;
+    }
+
+    public static boolean isMusicDocument(TLRPC.Document document) {
+        if (document != null) {
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
+                    return !attribute.voice;
+                }
+            }
+            if (!TextUtils.isEmpty(document.mime_type)) {
+                String mime = document.mime_type.toLowerCase();
+                if (mime.equals("audio/flac") || mime.equals("audio/ogg") || mime.equals("audio/opus") || mime.equals("audio/x-opus+ogg")) {
+                    return true;
+                } else if (mime.equals("application/octet-stream") && FileLoader.getDocumentFileName(document).endsWith(".opus")) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    public static boolean isVideoDocument(TLRPC.Document document) {
+        if (document != null) {
+            boolean isAnimated = false;
+            boolean isVideo = false;
+            int width = 0;
+            int height = 0;
+            for (int a = 0; a < document.attributes.size(); a++) {
+                TLRPC.DocumentAttribute attribute = document.attributes.get(a);
+                if (attribute instanceof TLRPC.TL_documentAttributeVideo) {
+                    if (attribute.round_message) {
+                        return false;
+                    }
+                    isVideo = true;
+                    width = attribute.w;
+                    height = attribute.h;
+                } else if (attribute instanceof TLRPC.TL_documentAttributeAnimated) {
+                    isAnimated = true;
+                }
+            }
+            if (isAnimated && (width > 1280 || height > 1280)) {
+                isAnimated = false;
+            }
+            return isVideo && !isAnimated;
+        }
+        return false;
+    }
+
+    public static boolean isStickerMessage(TLRPC.Message message) {
+        return message.media != null && message.media.document != null && isStickerDocument(message.media.document);
+    }
+
+    public static boolean isMaskMessage(TLRPC.Message message) {
+        return message.media != null && message.media.document != null && isMaskDocument(message.media.document);
+    }
+
+    public static boolean isMusicMessage(TLRPC.Message message) {
+        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
+            return isMusicDocument(message.media.webpage.document);
+        }
+        return message.media != null && message.media.document != null && isMusicDocument(message.media.document);
+    }
+
+    public static boolean isGifMessage(TLRPC.Message message) {
+        return message.media != null && message.media.document != null && isGifDocument(message.media.document);
+    }
+
+    public static boolean isRoundVideoMessage(TLRPC.Message message) {
+        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
+            return isRoundVideoDocument(message.media.webpage.document);
+        }
+        return message.media != null && message.media.document != null && isRoundVideoDocument(message.media.document);
+    }
+
+    public static boolean isPhoto(TLRPC.Message message) {
+        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
+            return message.media.webpage.photo instanceof TLRPC.TL_photo;
+        }
+        return message.media instanceof TLRPC.TL_messageMediaPhoto;
+    }
+
+    public static boolean isVoiceMessage(TLRPC.Message message) {
+        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
+            return isVoiceDocument(message.media.webpage.document);
+        }
+        return message.media != null && message.media.document != null && isVoiceDocument(message.media.document);
+    }
+
+    public static boolean isNewGifMessage(TLRPC.Message message) {
+        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
+            return isNewGifDocument(message.media.webpage.document);
+        }
+        return message.media != null && message.media.document != null && isNewGifDocument(message.media.document);
+    }
+
+    public static boolean isLiveLocationMessage(TLRPC.Message message) {
+        return message.media instanceof TLRPC.TL_messageMediaGeoLive;
+    }
+
+    public static boolean isVideoMessage(TLRPC.Message message) {
+        if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
+            return isVideoDocument(message.media.webpage.document);
+        }
+        return message.media != null && message.media.document != null && isVideoDocument(message.media.document);
+    }
+
+    public static boolean isGameMessage(TLRPC.Message message) {
+        return message.media instanceof TLRPC.TL_messageMediaGame;
+    }
+
+    public static boolean isInvoiceMessage(TLRPC.Message message) {
+        return message.media instanceof TLRPC.TL_messageMediaInvoice;
+    }
+
+    public static boolean isForwardedMessage(TLRPC.Message message) {
+        return (message.flags & TLRPC.MESSAGE_FLAG_FWD) != 0 && message.fwd_from != null;
+    }
+
+    public static boolean isMediaEmpty(TLRPC.Message message) {
+        return message == null || message.media == null || message.media instanceof TLRPC.TL_messageMediaEmpty || message.media instanceof TLRPC.TL_messageMediaWebPage;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
index 2990e8c99..5a83f3ceb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
@@ -25,7 +25,7 @@
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.DataQuery;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.UserConfig;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
index 9e3f927c9..b6f5f408b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
@@ -16,7 +16,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.LocationController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.support.widget.RecyclerView;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
index e6bf29c78..de3edaf70 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
@@ -28,7 +28,7 @@
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.EmojiSuggestion;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
index 029a6471d..d823cd32f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ArticleViewer.java
@@ -94,13 +94,14 @@
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.browser.Browser;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.messenger.support.widget.GridLayoutManager;
 import org.telegram.messenger.support.widget.LinearLayoutManager;
 import org.telegram.messenger.support.widget.RecyclerView;
@@ -3814,7 +3815,7 @@ public void setBlock(TLRPC.TL_pageBlockVideo block, boolean first, boolean last)
             parentBlock = null;
             cancelLoading = false;
             currentDocument = getDocumentWithId(currentBlock.video_id);
-            isGif = MessageObject.isGifDocument(currentDocument)/* && currentBlock.autoplay*/;
+            isGif = MessageObjectTypeIdentifier.isGifDocument(currentDocument)/* && currentBlock.autoplay*/;
             lastCreatedWidth = 0;
             isFirst = first;
             isLast = last;
@@ -7143,7 +7144,7 @@ private boolean isVideoBlock(TLRPC.PageBlock block) {
         if (block != null && block.video_id != 0) {
             TLRPC.Document document = getDocumentWithId(block.video_id);
             if (document != null) {
-                return MessageObject.isVideoDocument(document);
+                return MessageObjectTypeIdentifier.isVideoDocument(document);
             }
         }
         return false;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java
index 6620140a2..7593df433 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java
@@ -20,7 +20,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLoader;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java
index 21dce81c0..450c220be 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CallLogActivity.java
@@ -25,7 +25,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
index 7813e35f9..05aaa8308 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AboutLinkCell.java
@@ -30,7 +30,7 @@
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.browser.Browser;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.LinkPath;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioCell.java
index 0cc8c64ec..0c21d05f5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioCell.java
@@ -23,7 +23,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.Theme;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioPlayerCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioPlayerCell.java
index 24d9c9b07..0fec6b640 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioPlayerCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AudioPlayerCell.java
@@ -26,7 +26,7 @@
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.SharedConfig;
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.Theme;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/BotHelpCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/BotHelpCell.java
index a4ab03d85..f3fed8ba0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/BotHelpCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/BotHelpCell.java
@@ -23,7 +23,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.browser.Browser;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
index 9ef909340..977e21331 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
@@ -22,7 +22,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 3171c4b97..f9cbcb489 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -52,7 +52,7 @@
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.SendMessagesHelper;
@@ -1010,7 +1010,7 @@ private boolean checkPhotoImageMotionEvent(MotionEvent event) {
                 }
             }
             if (imagePressed) {
-                if (currentMessageObject.isSendError()) {
+                if (currentMessageObjectTypeIdentifier.isSendError()) {
                     imagePressed = false;
                     result = false;
                 } else if (currentMessageObject.type == 8 && buttonState == -1 && SharedConfig.autoplayGifs && photoImage.getAnimation() == null) {
@@ -1145,7 +1145,7 @@ private boolean checkBotButtonMotionEvent(MotionEvent event) {
         boolean result = false;
         if (event.getAction() == MotionEvent.ACTION_DOWN) {
             int addX;
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 addX = getMeasuredWidth() - widthForButtons - AndroidUtilities.dp(10);
             } else {
                 addX = backgroundDrawableLeft + AndroidUtilities.dp(mediaBackground ? 1 : 7);
@@ -1374,7 +1374,7 @@ public void updatePlayingMessageProgress() {
             return;
         }
 
-        if (currentMessageObject.isRoundVideo()) {
+        if (currentMessageObjectTypeIdentifier.isRoundVideo()) {
             int duration = 0;
             TLRPC.Document document = currentMessageObject.getDocument();
             for (int a = 0; a < document.attributes.size(); a++) {
@@ -1703,7 +1703,7 @@ private boolean isUserDataChanged() {
         }
 
         String newNameString = null;
-        if (drawName && isChat && !currentMessageObject.isOutOwner()) {
+        if (drawName && isChat && !currentMessageObjectTypeIdentifier.isOutOwner()) {
             if (currentUser != null) {
                 newNameString = UserObject.getUserName(currentUser);
             } else if (currentChat != null) {
@@ -1755,7 +1755,7 @@ protected void onAttachedToWindow() {
         } else {
             updateButtonState(false, false);
         }
-        if (currentMessageObject != null && currentMessageObject.isRoundVideo()) {
+        if (currentMessageObject != null && currentMessageObjectTypeIdentifier.isRoundVideo()) {
             checkRoundVideoPlayback(true);
         }
     }
@@ -1908,7 +1908,7 @@ private int createDocumentLayout(int maxWidth, MessageObject messageObject) {
         if (documentAttach == null) {
             return 0;
         }
-        if (MessageObject.isVoiceDocument(documentAttach)) {
+        if (MessageObjectTypeIdentifier.isVoiceDocument(documentAttach)) {
             documentAttachType = DOCUMENT_ATTACH_TYPE_AUDIO;
             int duration = 0;
             for (int a = 0; a < documentAttach.attributes.size(); a++) {
@@ -1927,7 +1927,7 @@ private int createDocumentLayout(int maxWidth, MessageObject messageObject) {
             }
             seekBarWaveform.setMessageObject(messageObject);
             return 0;
-        } else if (MessageObject.isMusicDocument(documentAttach)) {
+        } else if (MessageObjectTypeIdentifier.isMusicDocument(documentAttach)) {
             documentAttachType = DOCUMENT_ATTACH_TYPE_MUSIC;
 
             maxWidth = maxWidth - AndroidUtilities.dp(86);
@@ -1956,7 +1956,7 @@ private int createDocumentLayout(int maxWidth, MessageObject messageObject) {
             widthBeforeNewTimeLine = backgroundWidth - AndroidUtilities.dp(10 + 76) - durationWidth;
             availableTimeWidth = backgroundWidth - AndroidUtilities.dp(28);
             return durationWidth;
-        } else if (MessageObject.isVideoDocument(documentAttach)) {
+        } else if (MessageObjectTypeIdentifier.isVideoDocument(documentAttach)) {
             documentAttachType = DOCUMENT_ATTACH_TYPE_VIDEO;
             if (!messageObject.needDrawBluredPreview()) {
                 int duration = 0;
@@ -2032,7 +2032,7 @@ private void calcBackgroundWidth(int maxWidth, int timeMore, int maxChildWidth)
             totalHeight += AndroidUtilities.dp(14);
             hasNewLineForTime = true;
             backgroundWidth = Math.max(maxChildWidth, currentMessageObject.lastLineWidth) + AndroidUtilities.dp(31);
-            backgroundWidth = Math.max(backgroundWidth, (currentMessageObject.isOutOwner() ? timeWidth + AndroidUtilities.dp(17) : timeWidth)+ AndroidUtilities.dp(31));
+            backgroundWidth = Math.max(backgroundWidth, (currentMessageObjectTypeIdentifier.isOutOwner() ? timeWidth + AndroidUtilities.dp(17) : timeWidth)+ AndroidUtilities.dp(31));
         } else {
             int diff = maxChildWidth - currentMessageObject.lastLineWidth;
             if (diff >= 0 && diff <= timeMore) {
@@ -2132,7 +2132,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
         }
         boolean messageIdChanged = currentMessageObject == null || currentMessageObject.getId() != messageObject.getId();
         boolean messageChanged = currentMessageObject != messageObject || messageObject.forceUpdate;
-        boolean dataChanged = currentMessageObject != null && currentMessageObject.getId() == messageObject.getId() && lastSendState == MessageObject.MESSAGE_SEND_STATE_EDITING && messageObject.isSent()
+        boolean dataChanged = currentMessageObject != null && currentMessageObject.getId() == messageObject.getId() && lastSendState == MessageObject.MESSAGE_SEND_STATE_EDITING && MessageObjectTypeIdentifier.isSent()
                 || currentMessageObject == messageObject && (isUserDataChanged() || photoNotSet);
         boolean groupChanged = groupedMessages != currentMessagesGroup;
         if (!groupChanged && groupedMessages != null) {
@@ -2171,7 +2171,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
             gamePreviewPressed = false;
             isCheckPressed = true;
             hasNewLineForTime = false;
-            isAvatarVisible = isChat && !messageObject.isOutOwner() && messageObject.needDrawAvatar() && (currentPosition == null || currentPosition.edge);
+            isAvatarVisible = isChat && !MessageObjectTypeIdentifier.isOutOwner() && messageObject.needDrawAvatar() && (currentPosition == null || currentPosition.edge);
             wasLayout = false;
             drwaShareGoIcon = false;
             groupPhotoInvisible = false;
@@ -2268,29 +2268,29 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
 
                 int maxWidth;
                 if (AndroidUtilities.isTablet()) {
-                    if (isChat && !messageObject.isOutOwner() && messageObject.needDrawAvatar()) {
+                    if (isChat && !MessageObjectTypeIdentifier.isOutOwner() && messageObject.needDrawAvatar()) {
                         maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(122);
                         drawName = true;
                     } else {
-                        drawName = messageObject.messageOwner.to_id.channel_id != 0 && !messageObject.isOutOwner();
+                        drawName = messageObject.messageOwner.to_id.channel_id != 0 && !MessageObjectTypeIdentifier.isOutOwner();
                         maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(80);
                     }
                 } else {
-                    if (isChat && !messageObject.isOutOwner() && messageObject.needDrawAvatar()) {
+                    if (isChat && !MessageObjectTypeIdentifier.isOutOwner() && messageObject.needDrawAvatar()) {
                         maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(122);
                         drawName = true;
                     } else {
                         maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(80);
-                        drawName = messageObject.messageOwner.to_id.channel_id != 0 && !messageObject.isOutOwner();
+                        drawName = messageObject.messageOwner.to_id.channel_id != 0 && !MessageObjectTypeIdentifier.isOutOwner();
                     }
                 }
                 availableTimeWidth = maxWidth;
-                if (messageObject.isRoundVideo()) {
-                    availableTimeWidth -= Math.ceil(Theme.chat_audioTimePaint.measureText("00:00")) + (messageObject.isOutOwner() ? 0 : AndroidUtilities.dp(64));
+                if (MessageObjectTypeIdentifier.isRoundVideo()) {
+                    availableTimeWidth -= Math.ceil(Theme.chat_audioTimePaint.measureText("00:00")) + (MessageObjectTypeIdentifier.isOutOwner() ? 0 : AndroidUtilities.dp(64));
                 }
                 measureTime(messageObject);
                 int timeMore = timeWidth + AndroidUtilities.dp(6);
-                if (messageObject.isOutOwner()) {
+                if (MessageObjectTypeIdentifier.isOutOwner()) {
                     timeMore += AndroidUtilities.dp(20.5f);
                 }
 
@@ -2318,7 +2318,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 } else if (siteName != null) {
                     siteName = siteName.toLowerCase();
                     if ((siteName.equals("instagram") || siteName.equals("twitter") || "telegram_album".equals(webpageType)) && messageObject.messageOwner.media.webpage.cached_page instanceof TLRPC.TL_pageFull &&
-                            (messageObject.messageOwner.media.webpage.photo instanceof TLRPC.TL_photo || MessageObject.isVideoDocument(messageObject.messageOwner.media.webpage.document))) {
+                            (messageObject.messageOwner.media.webpage.photo instanceof TLRPC.TL_photo || MessageObjectTypeIdentifier.isVideoDocument(messageObject.messageOwner.media.webpage.document))) {
                         drawInstantView = false;
                         slideshow = true;
                         ArrayList<TLRPC.PageBlock> blocks = messageObject.messageOwner.media.webpage.cached_page.blocks;
@@ -2351,8 +2351,8 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                     }
                 }
                 availableTimeWidth = backgroundWidth - AndroidUtilities.dp(31);
-                if (messageObject.isRoundVideo()) {
-                    availableTimeWidth -= Math.ceil(Theme.chat_audioTimePaint.measureText("00:00")) + (messageObject.isOutOwner() ? 0 : AndroidUtilities.dp(64));
+                if (MessageObjectTypeIdentifier.isRoundVideo()) {
+                    availableTimeWidth -= Math.ceil(Theme.chat_audioTimePaint.measureText("00:00")) + (MessageObjectTypeIdentifier.isOutOwner() ? 0 : AndroidUtilities.dp(64));
                 }
 
                 setMessageObjectInternal(messageObject);
@@ -2372,13 +2372,13 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 if (hasLinkPreview || hasGamePreview || hasInvoicePreview) {
                     int linkPreviewMaxWidth;
                     if (AndroidUtilities.isTablet()) {
-                        if (isChat && messageObject.needDrawAvatar() && !currentMessageObject.isOut()) {
+                        if (isChat && messageObject.needDrawAvatar() && !currentMessageObjectTypeIdentifier.isOut()) {
                             linkPreviewMaxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(132);
                         } else {
                             linkPreviewMaxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(80);
                         }
                     } else {
-                        if (isChat && messageObject.needDrawAvatar() && !currentMessageObject.isOutOwner()) {
+                        if (isChat && messageObject.needDrawAvatar() && !currentMessageObjectTypeIdentifier.isOutOwner()) {
                             linkPreviewMaxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(132);
                         } else {
                             linkPreviewMaxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(80);
@@ -2629,11 +2629,11 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                     int maxPhotoWidth = smallImage ? AndroidUtilities.dp(48) : linkPreviewMaxWidth;
 
                     if (document != null) {
-                        if (MessageObject.isRoundVideoDocument(document)) {
+                        if (MessageObjectTypeIdentifier.isRoundVideoDocument(document)) {
                             currentPhotoObject = document.thumb;
                             documentAttach = document;
                             documentAttachType = DOCUMENT_ATTACH_TYPE_ROUND;
-                        } else if (MessageObject.isGifDocument(document)) {
+                        } else if (MessageObjectTypeIdentifier.isGifDocument(document)) {
                             if (!SharedConfig.autoplayGifs) {
                                 messageObject.gifState = 1;
                             }
@@ -2654,7 +2654,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             }
                             documentAttach = document;
                             documentAttachType = DOCUMENT_ATTACH_TYPE_GIF;
-                        } else if (MessageObject.isVideoDocument(document)) {
+                        } else if (MessageObjectTypeIdentifier.isVideoDocument(document)) {
                             currentPhotoObject = document.thumb;
                             if (currentPhotoObject != null && (currentPhotoObject.w == 0 || currentPhotoObject.h == 0)) {
                                 for (int a = 0; a < document.attributes.size(); a++) {
@@ -2670,7 +2670,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                                 }
                             }
                             createDocumentLayout(0, messageObject);
-                        } else if (MessageObject.isStickerDocument(document)) {
+                        } else if (MessageObjectTypeIdentifier.isStickerDocument(document)) {
                             currentPhotoObject = document.thumb;
                             if (currentPhotoObject != null && (currentPhotoObject.w == 0 || currentPhotoObject.h == 0)) {
                                 for (int a = 0; a < document.attributes.size(); a++) {
@@ -2689,11 +2689,11 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             documentAttachType = DOCUMENT_ATTACH_TYPE_STICKER;
                         } else {
                             calcBackgroundWidth(maxWidth, timeMore, maxChildWidth);
-                            if (!MessageObject.isStickerDocument(document)) {
+                            if (!MessageObjectTypeIdentifier.isStickerDocument(document)) {
                                 if (backgroundWidth < maxWidth + AndroidUtilities.dp(20)) {
                                     backgroundWidth = maxWidth + AndroidUtilities.dp(20);
                                 }
-                                if (MessageObject.isVoiceDocument(document)) {
+                                if (MessageObjectTypeIdentifier.isVoiceDocument(document)) {
                                     createDocumentLayout(backgroundWidth - AndroidUtilities.dp(10), messageObject);
                                     mediaOffsetY = currentMessageObject.textHeight + AndroidUtilities.dp(8) + linkPreviewHeight;
                                     totalHeight += AndroidUtilities.dp(30 + 14);
@@ -2701,12 +2701,12 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
 
                                     maxWidth = maxWidth - AndroidUtilities.dp(86);
                                     if (AndroidUtilities.isTablet()) {
-                                        maxChildWidth = Math.max(maxChildWidth, Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 52 : 0), AndroidUtilities.dp(220)) - AndroidUtilities.dp(30) + additinalWidth);
+                                        maxChildWidth = Math.max(maxChildWidth, Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 52 : 0), AndroidUtilities.dp(220)) - AndroidUtilities.dp(30) + additinalWidth);
                                     } else {
-                                        maxChildWidth = Math.max(maxChildWidth, Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 52 : 0), AndroidUtilities.dp(220)) - AndroidUtilities.dp(30) + additinalWidth);
+                                        maxChildWidth = Math.max(maxChildWidth, Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 52 : 0), AndroidUtilities.dp(220)) - AndroidUtilities.dp(30) + additinalWidth);
                                     }
                                     calcBackgroundWidth(maxWidth, timeMore, maxChildWidth);
-                                } else if (MessageObject.isMusicDocument(document)) {
+                                } else if (MessageObjectTypeIdentifier.isMusicDocument(document)) {
                                     int durationWidth = createDocumentLayout(backgroundWidth - AndroidUtilities.dp(10), messageObject);
                                     mediaOffsetY = currentMessageObject.textHeight + AndroidUtilities.dp(8) + linkPreviewHeight;
                                     totalHeight += AndroidUtilities.dp(42 + 14);
@@ -2838,13 +2838,13 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                                 } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_GIF || documentAttachType == DOCUMENT_ATTACH_TYPE_ROUND) {
                                     String fileName = FileLoader.getAttachFileName(document);
                                     boolean autoDownload = false;
-                                    if (MessageObject.isRoundVideoDocument(document)) {
+                                    if (MessageObjectTypeIdentifier.isRoundVideoDocument(document)) {
                                         photoImage.setRoundRadius(AndroidUtilities.roundMessageSize / 2);
                                         autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
-                                    } else if (MessageObject.isNewGifDocument(document)) {
+                                    } else if (MessageObjectTypeIdentifier.isNewGifDocument(document)) {
                                         autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
                                     }
-                                    if (!messageObject.isSending() && !messageObject.isEditing() && (messageObject.mediaExists || FileLoader.getInstance(currentAccount).isLoadingFile(fileName) || autoDownload)) {
+                                    if (!MessageObjectTypeIdentifier.isSending() && !MessageObjectTypeIdentifier.isEditing() && (messageObject.mediaExists || FileLoader.getInstance(currentAccount).isLoadingFile(fileName) || autoDownload)) {
                                         photoNotSet = false;
                                         photoImage.setImage(document, null, currentPhotoObject != null ? currentPhotoObject.location : null, currentPhotoFilterThumb, document.size, null, 0);
                                     } else {
@@ -2903,7 +2903,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             videoInfoLayout = new StaticLayout(stringBuilder, Theme.chat_shipmentPaint, durationWidth + AndroidUtilities.dp(10), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                             if (!drawPhotoImage) {
                                 totalHeight += AndroidUtilities.dp(6);
-                                int timeWidthTotal = timeWidth + AndroidUtilities.dp(14 + (messageObject.isOutOwner() ? 20 : 0));
+                                int timeWidthTotal = timeWidth + AndroidUtilities.dp(14 + (MessageObjectTypeIdentifier.isOutOwner() ? 20 : 0));
                                 if (durationWidth + timeWidthTotal > maxWidth) {
                                     maxChildWidth = Math.max(durationWidth, maxChildWidth);
                                     totalHeight += AndroidUtilities.dp(12);
@@ -2928,9 +2928,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 drawForwardedName = false;
                 drawPhotoImage = false;
                 if (AndroidUtilities.isTablet()) {
-                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 } else {
-                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 }
                 availableTimeWidth = backgroundWidth - AndroidUtilities.dp(31);
 
@@ -2943,7 +2943,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 String time = LocaleController.getInstance().formatterDay.format((long) (messageObject.messageOwner.date) * 1000);
                 TLRPC.TL_messageActionPhoneCall call = (TLRPC.TL_messageActionPhoneCall) messageObject.messageOwner.action;
                 boolean isMissed = call.reason instanceof TLRPC.TL_phoneCallDiscardReasonMissed;
-                if (messageObject.isOutOwner()) {
+                if (MessageObjectTypeIdentifier.isOutOwner()) {
                     if (isMissed) {
                         text = LocaleController.getString("CallMessageOutgoingMissed", R.string.CallMessageOutgoingMissed);
                     } else {
@@ -2977,9 +2977,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 drawPhotoImage = true;
                 photoImage.setRoundRadius(AndroidUtilities.dp(22));
                 if (AndroidUtilities.isTablet()) {
-                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 } else {
-                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 }
                 availableTimeWidth = backgroundWidth - AndroidUtilities.dp(31);
 
@@ -2998,7 +2998,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                     }
                     contactAvatarDrawable.setInfo(user);
                 }
-                photoImage.setImage(currentPhoto, "50_50", user != null ? contactAvatarDrawable : Theme.chat_contactDrawable[messageObject.isOutOwner() ? 1 : 0], null, 0);
+                photoImage.setImage(currentPhoto, "50_50", user != null ? contactAvatarDrawable : Theme.chat_contactDrawable[MessageObjectTypeIdentifier.isOutOwner() ? 1 : 0], null, 0);
 
                 CharSequence phone;
                 if (!TextUtils.isEmpty(messageObject.vCardData)) {
@@ -3049,9 +3049,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
             } else if (messageObject.type == 2) {
                 drawForwardedName = true;
                 if (AndroidUtilities.isTablet()) {
-                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 } else {
-                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 }
                 createDocumentLayout(backgroundWidth, messageObject);
 
@@ -3063,9 +3063,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 }
             } else if (messageObject.type == 14) {
                 if (AndroidUtilities.isTablet()) {
-                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 } else {
-                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                    backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                 }
 
                 createDocumentLayout(backgroundWidth, messageObject);
@@ -3090,7 +3090,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                     messageObject.gifState = 1;
                 }
 
-                if (messageObject.isRoundVideo()) {
+                if (MessageObjectTypeIdentifier.isRoundVideo()) {
                     photoImage.setAllowDecodeSingleFrame(true);
                     photoImage.setAllowStartAnimation(MediaController.getInstance().getPlayingMessageObject() == null);
                 } else {
@@ -3100,9 +3100,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 photoImage.setForcePreview(messageObject.needDrawBluredPreview());
                 if (messageObject.type == 9) {
                     if (AndroidUtilities.isTablet()) {
-                        backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                        backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                     } else {
-                        backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
+                        backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(270));
                     }
                     if (checkNeedDrawShareButton(messageObject)) {
                         backgroundWidth -= AndroidUtilities.dp(20);
@@ -3137,9 +3137,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
 
                     if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGeoLive) {
                         if (AndroidUtilities.isTablet()) {
-                            backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
+                            backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
                         } else {
-                            backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
+                            backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
                         }
                         if (checkNeedDrawShareButton(messageObject)) {
                             backgroundWidth -= AndroidUtilities.dp(20);
@@ -3187,9 +3187,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                         infoLayout = new StaticLayout(LocaleController.formatLocationUpdateDate(messageObject.messageOwner.edit_date != 0 ? messageObject.messageOwner.edit_date : messageObject.messageOwner.date), Theme.chat_locationAddressPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                     } else if (!TextUtils.isEmpty(messageObject.messageOwner.media.title)) {
                         if (AndroidUtilities.isTablet()) {
-                            backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
+                            backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
                         } else {
-                            backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
+                            backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
                         }
                         if (checkNeedDrawShareButton(messageObject)) {
                             backgroundWidth -= AndroidUtilities.dp(20);
@@ -3211,7 +3211,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             infoLayout = StaticLayoutEx.createStaticLayout(messageObject.messageOwner.media.address, Theme.chat_locationAddressPaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth, 1);
                             measureTime(messageObject);
                             int timeLeft = backgroundWidth - (int) Math.ceil(infoLayout.getLineWidth(0));
-                            if (timeLeft < timeWidth + AndroidUtilities.dp(14 + (messageObject.isOutOwner() ? 20 : 0))) {
+                            if (timeLeft < timeWidth + AndroidUtilities.dp(14 + (MessageObjectTypeIdentifier.isOutOwner() ? 20 : 0))) {
                                 additionHeight += AndroidUtilities.dp(8);
                             }
                         } else {
@@ -3219,9 +3219,9 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                         }
                     } else {
                         if (AndroidUtilities.isTablet()) {
-                            backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
+                            backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
                         } else {
-                            backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
+                            backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 102 : 50), AndroidUtilities.dp(252 + 37));
                         }
                         if (checkNeedDrawShareButton(messageObject)) {
                             backgroundWidth -= AndroidUtilities.dp(20);
@@ -3246,10 +3246,10 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                         currentMapProvider = MessagesController.getInstance(messageObject.currentAccount).mapProvider;
                     }
                     if (currentMapProvider == -1) {
-                        photoImage.setImage((TLObject) null, null, Theme.chat_locationDrawable[messageObject.isOutOwner() ? 1 : 0], null, 0);
+                        photoImage.setImage((TLObject) null, null, Theme.chat_locationDrawable[MessageObjectTypeIdentifier.isOutOwner() ? 1 : 0], null, 0);
                     } else if (currentMapProvider == 2) {
                         if (currentWebFile != null) {
-                            photoImage.setImage(currentWebFile, null, Theme.chat_locationDrawable[messageObject.isOutOwner() ? 1 : 0], null, 0);
+                            photoImage.setImage(currentWebFile, null, Theme.chat_locationDrawable[MessageObjectTypeIdentifier.isOutOwner() ? 1 : 0], null, 0);
                         }
                     } else {
                         if (currentMapProvider == 3 || currentMapProvider == 4) {
@@ -3257,7 +3257,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             addedForTest = true;
                         }
                         if (currentUrl != null) {
-                            photoImage.setImage(currentUrl, null, Theme.chat_locationDrawable[messageObject.isOutOwner() ? 1 : 0], null, 0);
+                            photoImage.setImage(currentUrl, null, Theme.chat_locationDrawable[MessageObjectTypeIdentifier.isOutOwner() ? 1 : 0], null, 0);
                         }
                     }
                 } else if (messageObject.type == 13) { //webp
@@ -3451,12 +3451,12 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                         availableTimeWidth -= Math.ceil(Theme.chat_audioTimePaint.measureText("00:00")) + AndroidUtilities.dp(26);
                     }
                     measureTime(messageObject);
-                    int timeWidthTotal = timeWidth + AndroidUtilities.dp(14 + (messageObject.isOutOwner() ? 20 : 0));
+                    int timeWidthTotal = timeWidth + AndroidUtilities.dp(14 + (MessageObjectTypeIdentifier.isOutOwner() ? 20 : 0));
                     if (w < timeWidthTotal) {
                         w = timeWidthTotal;
                     }
 
-                    if (messageObject.isRoundVideo()) {
+                    if (MessageObjectTypeIdentifier.isRoundVideo()) {
                         w = h = Math.min(w, h);
                         drawBackground = false;
                         photoImage.setRoundRadius(w / 2);
@@ -3473,7 +3473,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                         float maxHeight = Math.max(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.5f;
                         int dWidth = getGroupPhotosWidth();
                         w = (int) Math.ceil(currentPosition.pw / 1000.0f * dWidth);
-                        if (currentPosition.minY != 0 && (messageObject.isOutOwner() && (currentPosition.flags & MessageObject.POSITION_FLAG_LEFT) != 0 || !messageObject.isOutOwner() && (currentPosition.flags & MessageObject.POSITION_FLAG_RIGHT) != 0)) {
+                        if (currentPosition.minY != 0 && (MessageObjectTypeIdentifier.isOutOwner() && (currentPosition.flags & MessageObject.POSITION_FLAG_LEFT) != 0 || !MessageObjectTypeIdentifier.isOutOwner() && (currentPosition.flags & MessageObject.POSITION_FLAG_RIGHT) != 0)) {
                             int firstLineWidth = 0;
                             int currentLineWidth = 0;
                             for (int a = 0; a < currentMessagesGroup.posArray.size(); a++) {
@@ -3517,7 +3517,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                                 MessageObject.GroupedMessagePosition rowPosition = currentMessagesGroup.posArray.get(i);
                                 if (rowPosition != currentPosition && (rowPosition.flags & MessageObject.POSITION_FLAG_BOTTOM) != 0) {
                                     w = (int) Math.ceil(rowPosition.pw / 1000.0f * dWidth);
-                                    if (rowPosition.minY != 0 && (messageObject.isOutOwner() && (rowPosition.flags & MessageObject.POSITION_FLAG_LEFT) != 0 || !messageObject.isOutOwner() && (rowPosition.flags & MessageObject.POSITION_FLAG_RIGHT) != 0)) {
+                                    if (rowPosition.minY != 0 && (MessageObjectTypeIdentifier.isOutOwner() && (rowPosition.flags & MessageObject.POSITION_FLAG_LEFT) != 0 || !MessageObjectTypeIdentifier.isOutOwner() && (rowPosition.flags & MessageObject.POSITION_FLAG_RIGHT) != 0)) {
                                         int firstLineWidth = 0;
                                         int currentLineWidth = 0;
                                         for (int a = 0; a < currentMessagesGroup.posArray.size(); a++) {
@@ -3653,14 +3653,14 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                             localFile = 2;
                         }
                         boolean autoDownload = false;
-                        if (MessageObject.isNewGifDocument(messageObject.messageOwner.media.document)) {
+                        if (MessageObjectTypeIdentifier.isNewGifDocument(messageObject.messageOwner.media.document)) {
                             autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
                         } else if (messageObject.type == 5) {
                             autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
                         }
-                        if (!messageObject.isSending() && !messageObject.isEditing() && (localFile != 0 || FileLoader.getInstance(currentAccount).isLoadingFile(fileName) || autoDownload)) {
+                        if (!MessageObjectTypeIdentifier.isSending() && !MessageObjectTypeIdentifier.isEditing() && (localFile != 0 || FileLoader.getInstance(currentAccount).isLoadingFile(fileName) || autoDownload)) {
                             if (localFile == 1) {
-                                photoImage.setImage(null, messageObject.isSendError() ? null : messageObject.messageOwner.attachPath, null, null, currentPhotoObject != null ? currentPhotoObject.location : null, currentPhotoFilterThumb, 0, null, 0);
+                                photoImage.setImage(null, MessageObjectTypeIdentifier.isSendError() ? null : messageObject.messageOwner.attachPath, null, null, currentPhotoObject != null ? currentPhotoObject.location : null, currentPhotoFilterThumb, 0, null, 0);
                             } else {
                                 photoImage.setImage(messageObject.messageOwner.media.document, null, currentPhotoObject != null ? currentPhotoObject.location : null, currentPhotoFilterThumb, messageObject.messageOwner.media.document.size, null, 0);
                             }
@@ -3722,7 +3722,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                     }
                     if (captionLayout.getLineCount() > 0) {
                         captionWidth = widthForCaption;
-                        int timeWidthTotal = timeWidth + (messageObject.isOutOwner() ? AndroidUtilities.dp(20) : 0);
+                        int timeWidthTotal = timeWidth + (MessageObjectTypeIdentifier.isOutOwner() ? AndroidUtilities.dp(20) : 0);
                         captionHeight = captionLayout.getHeight();
                         totalHeight += captionHeight + AndroidUtilities.dp(9);
                         float lastLineWidth = captionLayout.getLineWidth(captionLayout.getLineCount() - 1) + captionLayout.getLineLeft(captionLayout.getLineCount() - 1);
@@ -3739,7 +3739,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 totalHeight += AndroidUtilities.dp(14);
             }
 
-            if (currentMessageObject.eventId != 0 && !currentMessageObject.isMediaEmpty() && currentMessageObject.messageOwner.media.webpage != null) {
+            if (currentMessageObject.eventId != 0 && !currentMessageObjectTypeIdentifier.isMediaEmpty() && currentMessageObject.messageOwner.media.webpage != null) {
                 int linkPreviewMaxWidth = backgroundWidth - AndroidUtilities.dp(41);
                 hasOldCaptionPreview = true;
                 linkPreviewHeight = 0;
@@ -3803,7 +3803,7 @@ public void setMessageObject(MessageObject messageObject, MessageObject.GroupedM
                 widthForButtons = backgroundWidth - AndroidUtilities.dp(mediaBackground ? 0 : 9);
                 boolean fullWidth = false;
                 if (messageObject.wantedBotKeyboardWidth > widthForButtons) {
-                    int maxButtonWidth = -AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !messageObject.isOutOwner() ? 62 : 10);
+                    int maxButtonWidth = -AndroidUtilities.dp(isChat && messageObject.needDrawAvatar() && !MessageObjectTypeIdentifier.isOutOwner() ? 62 : 10);
                     if (AndroidUtilities.isTablet()) {
                         maxButtonWidth += AndroidUtilities.getMinTabletSide();
                     } else {
@@ -3938,12 +3938,12 @@ public int getOpacity() {
                 };
                 ColorStateList colorStateList = new ColorStateList(
                         new int[][]{StateSet.WILD_CARD},
-                        new int[]{Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText) & 0x5fffffff}
+                        new int[]{Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText) & 0x5fffffff}
                 );
                 instantViewSelectorDrawable = new RippleDrawable(colorStateList, null, maskDrawable);
                 instantViewSelectorDrawable.setCallback(this);
             } else {
-                Theme.setSelectorDrawableColor(instantViewSelectorDrawable, Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText) & 0x5fffffff, true);
+                Theme.setSelectorDrawableColor(instantViewSelectorDrawable, Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outPreviewInstantText : Theme.key_chat_inPreviewInstantText) & 0x5fffffff, true);
             }
             instantViewSelectorDrawable.setVisible(true, false);
         }
@@ -4029,13 +4029,13 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             }
             timeLayout = new StaticLayout(currentTimeString, Theme.chat_timePaint, timeTextWidth + AndroidUtilities.dp(100), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             if (!mediaBackground) {
-                if (!currentMessageObject.isOutOwner()) {
+                if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                     timeX = backgroundWidth - AndroidUtilities.dp(9) - timeWidth + (isAvatarVisible ? AndroidUtilities.dp(48) : 0);
                 } else {
                     timeX = layoutWidth - timeWidth - AndroidUtilities.dp(38.5f);
                 }
             } else {
-                if (!currentMessageObject.isOutOwner()) {
+                if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                     timeX = backgroundWidth - AndroidUtilities.dp(4) - timeWidth + (isAvatarVisible ? AndroidUtilities.dp(48) : 0);
 
                     if (currentPosition != null && currentPosition.leftSpanOffset != 0) {
@@ -4062,11 +4062,11 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         if (currentMessageObject.type == 0) {
             textY = AndroidUtilities.dp(10) + namesOffset;
         }
-        if (currentMessageObject.isRoundVideo()) {
+        if (currentMessageObjectTypeIdentifier.isRoundVideo()) {
             updatePlayingMessageProgress();
         }
         if (documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO) {
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 seekBarX = layoutWidth - backgroundWidth + AndroidUtilities.dp(57);
                 buttonX = layoutWidth - backgroundWidth + AndroidUtilities.dp(14);
                 timeAudioX = layoutWidth - backgroundWidth + AndroidUtilities.dp(67);
@@ -4094,7 +4094,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
 
             updatePlayingMessageProgress();
         } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 seekBarX = layoutWidth - backgroundWidth + AndroidUtilities.dp(56);
                 buttonX = layoutWidth - backgroundWidth + AndroidUtilities.dp(14);
                 timeAudioX = layoutWidth - backgroundWidth + AndroidUtilities.dp(67);
@@ -4121,7 +4121,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
 
             updatePlayingMessageProgress();
         } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_DOCUMENT && !drawPhotoImage) {
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 buttonX = layoutWidth - backgroundWidth + AndroidUtilities.dp(14);
             } else {
                 if (isChat && currentMessageObject.needDrawAvatar()) {
@@ -4139,7 +4139,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         } else if (currentMessageObject.type == 12) {
             int x;
 
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 x = layoutWidth - backgroundWidth + AndroidUtilities.dp(14);
             } else {
                 if (isChat && currentMessageObject.needDrawAvatar()) {
@@ -4166,7 +4166,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
                     x = linkX + (hasInvoicePreview ? -AndroidUtilities.dp(6.3f) : AndroidUtilities.dp(10));
                 }
             } else {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     if (mediaBackground) {
                         x = layoutWidth - backgroundWidth - AndroidUtilities.dp(3);
                     } else {
@@ -4239,7 +4239,7 @@ private void drawContent(Canvas canvas) {
 
         boolean imageDrawn = false;
         if (currentMessageObject.type == 0) {
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 textX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(11);
             } else {
                 textX = currentBackgroundDrawable.getBounds().left + AndroidUtilities.dp(!mediaBackground && drawPinnedBottom ? 11 : 17);
@@ -4262,7 +4262,7 @@ private void drawContent(Canvas canvas) {
             if (currentMessageObject.textXOffset != 0 && replyNameLayout != null) {
                 int diff = backgroundWidth - AndroidUtilities.dp(31) - currentMessageObject.textWidth;
                 if (!hasNewLineForTime) {
-                    diff -= timeWidth + AndroidUtilities.dp(4 + (currentMessageObject.isOutOwner() ? 20 : 0));
+                    diff -= timeWidth + AndroidUtilities.dp(4 + (currentMessageObjectTypeIdentifier.isOutOwner() ? 20 : 0));
                 }
                 if (diff > 0) {
                     textX += diff;
@@ -4318,12 +4318,12 @@ private void drawContent(Canvas canvas) {
                 int smallImageStartY = 0;
 
                 if (!hasInvoicePreview) {
-                    Theme.chat_replyLinePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewLine : Theme.key_chat_inPreviewLine));
+                    Theme.chat_replyLinePaint.setColor(Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outPreviewLine : Theme.key_chat_inPreviewLine));
                     canvas.drawRect(linkX, linkPreviewY - AndroidUtilities.dp(3), linkX + AndroidUtilities.dp(2), linkPreviewY + linkPreviewHeight + AndroidUtilities.dp(3), Theme.chat_replyLinePaint);
                 }
 
                 if (siteNameLayout != null) {
-                    Theme.chat_replyNamePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outSiteNameText : Theme.key_chat_inSiteNameText));
+                    Theme.chat_replyNamePaint.setColor(Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outSiteNameText : Theme.key_chat_inSiteNameText));
                     canvas.save();
                     int x;
                     if (siteNameRtl) {
@@ -4356,7 +4356,7 @@ private void drawContent(Canvas canvas) {
                     linkPreviewY += photoImage.getImageHeight() + AndroidUtilities.dp(6);
                 }
 
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_replyNamePaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
                     Theme.chat_replyTextPaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
                 } else {
@@ -4425,7 +4425,7 @@ private void drawContent(Canvas canvas) {
                             radialProgress.setProgressRect(buttonX, buttonY, buttonX + size, buttonY + size);
                         }
                     }
-                    if (currentMessageObject.isRoundVideo() && MediaController.getInstance().isPlayingMessage(currentMessageObject) && MediaController.getInstance().isRoundVideoDrawingReady()) {
+                    if (currentMessageObjectTypeIdentifier.isRoundVideo() && MediaController.getInstance().isPlayingMessage(currentMessageObject) && MediaController.getInstance().isRoundVideoDrawingReady()) {
                         imageDrawn = true;
                         drawTime = true;
                     } else {
@@ -4473,7 +4473,7 @@ private void drawContent(Canvas canvas) {
                         if (drawPhotoImage) {
                             Theme.chat_shipmentPaint.setColor(Theme.getColor(Theme.key_chat_previewGameText));
                         } else {
-                            if (currentMessageObject.isOutOwner()) {
+                            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                                 Theme.chat_shipmentPaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
                             } else {
                                 Theme.chat_shipmentPaint.setColor(Theme.getColor(Theme.key_chat_messageTextIn));
@@ -4488,7 +4488,7 @@ private void drawContent(Canvas canvas) {
                     Drawable instantDrawable;
                     int instantY = startY + linkPreviewHeight + AndroidUtilities.dp(10);
                     Paint backPaint = Theme.chat_instantViewRectPaint;
-                    if (currentMessageObject.isOutOwner()) {
+                    if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                         instantDrawable = Theme.chat_msgOutInstantDrawable;
                         Theme.chat_instantViewPaint.setColor(Theme.getColor(Theme.key_chat_outPreviewInstantText));
                         backPaint.setColor(Theme.getColor(Theme.key_chat_outPreviewInstantText));
@@ -4518,7 +4518,7 @@ private void drawContent(Canvas canvas) {
             }
             drawTime = true;
         } else if (drawPhotoImage) {
-            if (currentMessageObject.isRoundVideo() && MediaController.getInstance().isPlayingMessage(currentMessageObject) && MediaController.getInstance().isRoundVideoDrawingReady()) {
+            if (currentMessageObjectTypeIdentifier.isRoundVideo() && MediaController.getInstance().isPlayingMessage(currentMessageObject) && MediaController.getInstance().isRoundVideoDrawingReady()) {
                 imageDrawn = true;
                 drawTime = true;
             } else {
@@ -4564,7 +4564,7 @@ private void drawContent(Canvas canvas) {
         if (buttonState == -1 && currentMessageObject.needDrawBluredPreview() && !MediaController.getInstance().isPlayingMessage(currentMessageObject) && photoImage.getVisible()) {
             int drawable = 4;
             if (currentMessageObject.messageOwner.destroyTime != 0) {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     drawable = 6;
                 } else {
                     drawable = 5;
@@ -4574,7 +4574,7 @@ private void drawContent(Canvas canvas) {
             Theme.chat_photoStatesDrawables[drawable][buttonPressed].setAlpha((int) (255 * (1.0f - radialProgress.getAlpha()) * controlsAlpha));
             Theme.chat_photoStatesDrawables[drawable][buttonPressed].draw(canvas);
             if (currentMessageObject.messageOwner.destroyTime != 0) {
-                if (!currentMessageObject.isOutOwner()) {
+                if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                     long msTime = System.currentTimeMillis() + ConnectionsManager.getInstance(currentAccount).getTimeDifference() * 1000;
                     float progress = Math.max(0, (long) currentMessageObject.messageOwner.destroyTime * 1000 - msTime) / (currentMessageObject.messageOwner.ttl * 1000.0f);
                     Theme.chat_deleteProgressPaint.setAlpha((int) (255 * controlsAlpha));
@@ -4606,7 +4606,7 @@ private void drawContent(Canvas canvas) {
                     drawRoundProgress(canvas);
                 }
                 if (documentAttachType == DOCUMENT_ATTACH_TYPE_ROUND) {
-                    x1 = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObject.isOutOwner() || drawPinnedBottom ? 12 : 18);
+                    x1 = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObjectTypeIdentifier.isOutOwner() || drawPinnedBottom ? 12 : 18);
                     y1 = layoutHeight - AndroidUtilities.dp(6.3f - (drawPinnedBottom ? 2 : 0)) - timeLayout.getHeight();
                 } else {
                     x1 = backgroundDrawableLeft + AndroidUtilities.dp(8);
@@ -4614,7 +4614,7 @@ private void drawContent(Canvas canvas) {
                     rect.set(x1, y1, x1 + timeWidthAudio + AndroidUtilities.dp(8 + 12 + 2), y1 + AndroidUtilities.dp(17));
                     canvas.drawRoundRect(rect, AndroidUtilities.dp(4), AndroidUtilities.dp(4), Theme.chat_actionBackgroundPaint);
 
-                    if (!playing && currentMessageObject.isContentUnread()) {
+                    if (!playing && currentMessageObjectTypeIdentifier.isContentUnread()) {
                         Theme.chat_docBackPaint.setColor(Theme.getColor(Theme.key_chat_mediaTimeText));
                         canvas.drawCircle(x1 + timeWidthAudio + AndroidUtilities.dp(12), y1 + AndroidUtilities.dp(8.3f), AndroidUtilities.dp(3), Theme.chat_docBackPaint);
                     } else {
@@ -4636,7 +4636,7 @@ private void drawContent(Canvas canvas) {
                 canvas.restore();
             }
         } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 Theme.chat_audioTitlePaint.setColor(Theme.getColor(Theme.key_chat_outAudioTitleText));
                 Theme.chat_audioPerformerPaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outAudioPerfomerSelectedText : Theme.key_chat_outAudioPerfomerText));
                 Theme.chat_audioTimePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outAudioDurationSelectedText : Theme.key_chat_outAudioDurationText));
@@ -4671,7 +4671,7 @@ private void drawContent(Canvas canvas) {
             canvas.restore();
 
             Drawable menuDrawable;
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 menuDrawable = isDrawSelectedBackground() ? Theme.chat_msgOutMenuSelectedDrawable : Theme.chat_msgOutMenuDrawable;
             } else {
                 menuDrawable = isDrawSelectedBackground() ? Theme.chat_msgInMenuSelectedDrawable : Theme.chat_msgInMenuDrawable;
@@ -4679,7 +4679,7 @@ private void drawContent(Canvas canvas) {
             setDrawableBounds(menuDrawable, otherX = buttonX + backgroundWidth - AndroidUtilities.dp(currentMessageObject.type == 0 ? 58 : 48), otherY = buttonY - AndroidUtilities.dp(5));
             menuDrawable.draw(canvas);
         } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO) {
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 Theme.chat_audioTimePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outAudioDurationSelectedText : Theme.key_chat_outAudioDurationText));
                 radialProgress.setProgressColor(Theme.getColor(isDrawSelectedBackground() || buttonPressed != 0 ? Theme.key_chat_outAudioSelectedProgress : Theme.key_chat_outAudioProgress));
             } else {
@@ -4703,8 +4703,8 @@ private void drawContent(Canvas canvas) {
             durationLayout.draw(canvas);
             canvas.restore();
 
-            if (currentMessageObject.type != 0 && currentMessageObject.isContentUnread()) {
-                Theme.chat_docBackPaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outVoiceSeekbarFill : Theme.key_chat_inVoiceSeekbarFill));
+            if (currentMessageObject.type != 0 && currentMessageObjectTypeIdentifier.isContentUnread()) {
+                Theme.chat_docBackPaint.setColor(Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outVoiceSeekbarFill : Theme.key_chat_inVoiceSeekbarFill));
                 canvas.drawCircle(timeAudioX + timeWidthAudio + AndroidUtilities.dp(6), AndroidUtilities.dp(51) + namesOffset + mediaOffsetY, AndroidUtilities.dp(3), Theme.chat_docBackPaint);
             }
         }
@@ -4742,7 +4742,7 @@ private void drawContent(Canvas canvas) {
         } else {
             if (currentMessageObject.type == 4) {
                 if (docTitleLayout != null) {
-                    if (currentMessageObject.isOutOwner()) {
+                    if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                         Theme.chat_locationTitlePaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
                         Theme.chat_locationAddressPaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outVenueInfoSelectedText : Theme.key_chat_outVenueInfoText));
                     } else {
@@ -4756,7 +4756,7 @@ private void drawContent(Canvas canvas) {
                             forceNotDrawTime = true;
                             float progress = 1.0f - Math.abs(ConnectionsManager.getInstance(currentAccount).getCurrentTime() - currentMessageObject.messageOwner.date) / (float) currentMessageObject.messageOwner.media.period;
                             rect.set(photoImage.getImageX2() - AndroidUtilities.dp(43), cy - AndroidUtilities.dp(15), photoImage.getImageX2() - AndroidUtilities.dp(13), cy + AndroidUtilities.dp(15));
-                            if (currentMessageObject.isOutOwner()) {
+                            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                                 Theme.chat_radialProgress2Paint.setColor(Theme.getColor(Theme.key_chat_outInstant));
                                 Theme.chat_livePaint.setColor(Theme.getColor(Theme.key_chat_outInstant));
                             } else {
@@ -4801,7 +4801,7 @@ private void drawContent(Canvas canvas) {
                     }
                 }
             } else if (currentMessageObject.type == 16) {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_audioTitlePaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
                     Theme.chat_contactPhonePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText));
                 } else {
@@ -4810,7 +4810,7 @@ private void drawContent(Canvas canvas) {
                 }
                 forceNotDrawTime = true;
                 int x;
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     x = layoutWidth - backgroundWidth + AndroidUtilities.dp(16);
                 } else {
                     if (isChat && currentMessageObject.needDrawAvatar()) {
@@ -4834,7 +4834,7 @@ private void drawContent(Canvas canvas) {
                 }
                 Drawable icon;
                 Drawable phone;
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     icon = Theme.chat_msgCallUpGreenDrawable;
                     phone = isDrawSelectedBackground() || otherPressed ? Theme.chat_msgOutCallSelectedDrawable : Theme.chat_msgOutCallDrawable;
                 } else {
@@ -4852,7 +4852,7 @@ private void drawContent(Canvas canvas) {
                 setDrawableBounds(phone, x + AndroidUtilities.dp(205), otherY = AndroidUtilities.dp(22));
                 phone.draw(canvas);
             } else if (currentMessageObject.type == 12) {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_contactNamePaint.setColor(Theme.getColor(Theme.key_chat_outContactNameText));
                     Theme.chat_contactPhonePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outContactPhoneSelectedText : Theme.key_chat_outContactPhoneText));
                 } else {
@@ -4873,7 +4873,7 @@ private void drawContent(Canvas canvas) {
                 }
 
                 Drawable menuDrawable;
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     menuDrawable = isDrawSelectedBackground() ? Theme.chat_msgOutMenuSelectedDrawable : Theme.chat_msgOutMenuDrawable;
                 } else {
                     menuDrawable = isDrawSelectedBackground() ? Theme.chat_msgInMenuSelectedDrawable : Theme.chat_msgInMenuDrawable;
@@ -4886,7 +4886,7 @@ private void drawContent(Canvas canvas) {
                     Drawable instantDrawable;
                     int instantY = getMeasuredHeight() - AndroidUtilities.dp(36 + 28);
                     Paint backPaint = Theme.chat_instantViewRectPaint;
-                    if (currentMessageObject.isOutOwner()) {
+                    if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                         Theme.chat_instantViewPaint.setColor(Theme.getColor(Theme.key_chat_outPreviewInstantText));
                         backPaint.setColor(Theme.getColor(Theme.key_chat_outPreviewInstantText));
                     } else {
@@ -4915,10 +4915,10 @@ private void drawContent(Canvas canvas) {
                 captionX = photoImage.getImageX() + AndroidUtilities.dp(5) + captionOffsetX;
                 captionY = photoImage.getImageY() + photoImage.getImageHeight() + AndroidUtilities.dp(6);
             } else if (hasOldCaptionPreview) {
-                captionX = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObject.isOutOwner() ? 11 : 17) + captionOffsetX;
+                captionX = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObjectTypeIdentifier.isOutOwner() ? 11 : 17) + captionOffsetX;
                 captionY = totalHeight - captionHeight - AndroidUtilities.dp(drawPinnedTop ? 9 : 10) - linkPreviewHeight - AndroidUtilities.dp(17);
             } else {
-                captionX = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObject.isOutOwner() ? 11 : 17) + captionOffsetX;
+                captionX = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObjectTypeIdentifier.isOutOwner() ? 11 : 17) + captionOffsetX;
                 captionY = totalHeight - captionHeight - AndroidUtilities.dp(drawPinnedTop ? 9 : 10);
             }
         }
@@ -4931,16 +4931,16 @@ private void drawContent(Canvas canvas) {
             if (currentMessageObject.type == 1 || documentAttachType == DOCUMENT_ATTACH_TYPE_VIDEO || currentMessageObject.type == 8) {
                 linkX = photoImage.getImageX() + AndroidUtilities.dp(5);
             } else {
-                linkX = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObject.isOutOwner() ? 11 : 17);
+                linkX = backgroundDrawableLeft + AndroidUtilities.dp(currentMessageObjectTypeIdentifier.isOutOwner() ? 11 : 17);
             }
             int startY = totalHeight - AndroidUtilities.dp(drawPinnedTop ? 9 : 10) - linkPreviewHeight - AndroidUtilities.dp(8);
             int linkPreviewY = startY;
 
-            Theme.chat_replyLinePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outPreviewLine : Theme.key_chat_inPreviewLine));
+            Theme.chat_replyLinePaint.setColor(Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outPreviewLine : Theme.key_chat_inPreviewLine));
             canvas.drawRect(linkX, linkPreviewY - AndroidUtilities.dp(3), linkX + AndroidUtilities.dp(2), linkPreviewY + linkPreviewHeight, Theme.chat_replyLinePaint);
 
             if (siteNameLayout != null) {
-                Theme.chat_replyNamePaint.setColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outSiteNameText : Theme.key_chat_inSiteNameText));
+                Theme.chat_replyNamePaint.setColor(Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outSiteNameText : Theme.key_chat_inSiteNameText));
                 canvas.save();
                 int x;
                 if (siteNameRtl) {
@@ -4954,7 +4954,7 @@ private void drawContent(Canvas canvas) {
                 linkPreviewY += siteNameLayout.getLineBottom(siteNameLayout.getLineCount() - 1);
             }
 
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 Theme.chat_replyTextPaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
             } else {
                 Theme.chat_replyTextPaint.setColor(Theme.getColor(Theme.key_chat_messageTextIn));
@@ -4975,7 +4975,7 @@ private void drawContent(Canvas canvas) {
 
         if (documentAttachType == DOCUMENT_ATTACH_TYPE_DOCUMENT) {
             Drawable menuDrawable;
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 Theme.chat_docNamePaint.setColor(Theme.getColor(Theme.key_chat_outFileNameText));
                 Theme.chat_infoPaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outFileInfoSelectedText : Theme.key_chat_outFileInfoText));
                 Theme.chat_docBackPaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outFileBackgroundSelected : Theme.key_chat_outFileBackground));
@@ -5004,9 +5004,9 @@ private void drawContent(Canvas canvas) {
                     if (!imageDrawn) {
                         int image = buttonState;
                         if (buttonState == 0) {
-                            image = currentMessageObject.isOutOwner() ? 7 : 10;
+                            image = currentMessageObjectTypeIdentifier.isOutOwner() ? 7 : 10;
                         } else if (buttonState == 1) {
-                            image = currentMessageObject.isOutOwner() ? 8 : 11;
+                            image = currentMessageObjectTypeIdentifier.isOutOwner() ? 8 : 11;
                         }
                         radialProgress.swapBackground(Theme.chat_photoStatesDrawables[image][isDrawSelectedBackground() || buttonPressed != 0 ? 1 : 0]);
                     } else {
@@ -5017,7 +5017,7 @@ private void drawContent(Canvas canvas) {
                 if (!imageDrawn) {
                     rect.set(photoImage.getImageX(), photoImage.getImageY(), photoImage.getImageX() + photoImage.getImageWidth(), photoImage.getImageY() + photoImage.getImageHeight());
                     canvas.drawRoundRect(rect, AndroidUtilities.dp(3), AndroidUtilities.dp(3), Theme.chat_docBackPaint);
-                    if (currentMessageObject.isOutOwner()) {
+                    if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                         radialProgress.setProgressColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outFileProgressSelected : Theme.key_chat_outFileProgress));
                     } else {
                         radialProgress.setProgressColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_inFileProgressSelected : Theme.key_chat_inFileProgress));
@@ -5033,7 +5033,7 @@ private void drawContent(Canvas canvas) {
                 x = buttonX + AndroidUtilities.dp(53);
                 titleY = buttonY + AndroidUtilities.dp(4);
                 subtitleY = buttonY + AndroidUtilities.dp(27);
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     radialProgress.setProgressColor(Theme.getColor(isDrawSelectedBackground() || buttonPressed != 0 ? Theme.key_chat_outAudioSelectedProgress : Theme.key_chat_outAudioProgress));
                 } else {
                     radialProgress.setProgressColor(Theme.getColor(isDrawSelectedBackground() || buttonPressed != 0 ? Theme.key_chat_inAudioSelectedProgress : Theme.key_chat_inAudioProgress));
@@ -5081,7 +5081,7 @@ private void drawContent(Canvas canvas) {
 
         if (!botButtons.isEmpty()) {
             int addX;
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 addX = getMeasuredWidth() - widthForButtons - AndroidUtilities.dp(10);
             } else {
                 addX = backgroundDrawableLeft + AndroidUtilities.dp(mediaBackground ? 1 : 7);
@@ -5148,7 +5148,7 @@ private Drawable getMiniDrawableForCurrentState() {
         }
         if (documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO || documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
             radialProgress.setAlphaForPrevious(false);
-            return Theme.chat_fileMiniStatesDrawable[currentMessageObject.isOutOwner() ? miniButtonState : (miniButtonState + 2)][isDrawSelectedBackground() || miniButtonPressed != 0 ? 1 : 0];
+            return Theme.chat_fileMiniStatesDrawable[currentMessageObjectTypeIdentifier.isOutOwner() ? miniButtonState : (miniButtonState + 2)][isDrawSelectedBackground() || miniButtonPressed != 0 ? 1 : 0];
         } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_VIDEO) {
             return Theme.chat_fileMiniStatesDrawable[4 + miniButtonState][miniButtonPressed != 0 ? 1 : 0];
         }
@@ -5162,16 +5162,16 @@ private Drawable getDrawableForCurrentState() {
             }
             radialProgress.setAlphaForPrevious(false);
             radialProgress.setAlphaForMiniPrevious(true);
-            return Theme.chat_fileStatesDrawable[currentMessageObject.isOutOwner() ? buttonState : buttonState + 5][isDrawSelectedBackground() || buttonPressed != 0 ? 1 : 0];
+            return Theme.chat_fileStatesDrawable[currentMessageObjectTypeIdentifier.isOutOwner() ? buttonState : buttonState + 5][isDrawSelectedBackground() || buttonPressed != 0 ? 1 : 0];
         } else {
             if (documentAttachType == DOCUMENT_ATTACH_TYPE_DOCUMENT && !drawPhotoImage) {
                 radialProgress.setAlphaForPrevious(false);
                 if (buttonState == -1) {
-                    return Theme.chat_fileStatesDrawable[currentMessageObject.isOutOwner() ? 3 : 8][isDrawSelectedBackground() ? 1 : 0];
+                    return Theme.chat_fileStatesDrawable[currentMessageObjectTypeIdentifier.isOutOwner() ? 3 : 8][isDrawSelectedBackground() ? 1 : 0];
                 } else if (buttonState == 0) {
-                    return Theme.chat_fileStatesDrawable[currentMessageObject.isOutOwner() ? 2 : 7][isDrawSelectedBackground() ? 1 : 0];
+                    return Theme.chat_fileStatesDrawable[currentMessageObjectTypeIdentifier.isOutOwner() ? 2 : 7][isDrawSelectedBackground() ? 1 : 0];
                 } else if (buttonState == 1) {
-                    return Theme.chat_fileStatesDrawable[currentMessageObject.isOutOwner() ? 4 : 9][isDrawSelectedBackground() ? 1 : 0];
+                    return Theme.chat_fileStatesDrawable[currentMessageObjectTypeIdentifier.isOutOwner() ? 4 : 9][isDrawSelectedBackground() ? 1 : 0];
                 }
             } else {
                 radialProgress.setAlphaForPrevious(true);
@@ -5179,16 +5179,16 @@ private Drawable getDrawableForCurrentState() {
                     if (documentAttachType == DOCUMENT_ATTACH_TYPE_DOCUMENT) {
                         int image = buttonState;
                         if (buttonState == 0) {
-                            image = currentMessageObject.isOutOwner() ? 7 : 10;
+                            image = currentMessageObjectTypeIdentifier.isOutOwner() ? 7 : 10;
                         } else if (buttonState == 1) {
-                            image = currentMessageObject.isOutOwner() ? 8 : 11;
+                            image = currentMessageObjectTypeIdentifier.isOutOwner() ? 8 : 11;
                         }
                         return Theme.chat_photoStatesDrawables[image][isDrawSelectedBackground() || buttonPressed != 0 ? 1 : 0];
                     } else {
                         return Theme.chat_photoStatesDrawables[buttonState][buttonPressed];
                     }
                 } else if (buttonState == -1 && documentAttachType == DOCUMENT_ATTACH_TYPE_DOCUMENT) {
-                    return Theme.chat_photoStatesDrawables[currentMessageObject.isOutOwner() ? 9 : 12][isDrawSelectedBackground() ? 1 : 0];
+                    return Theme.chat_photoStatesDrawables[currentMessageObjectTypeIdentifier.isOutOwner() ? 9 : 12][isDrawSelectedBackground() ? 1 : 0];
                 }
             }
         }
@@ -5199,13 +5199,13 @@ private int getMaxNameWidth() {
         if (documentAttachType == DOCUMENT_ATTACH_TYPE_STICKER || currentMessageObject.type == 5) {
             int maxWidth;
             if (AndroidUtilities.isTablet()) {
-                if (isChat && !currentMessageObject.isOutOwner() && currentMessageObject.needDrawAvatar()) {
+                if (isChat && !currentMessageObjectTypeIdentifier.isOutOwner() && currentMessageObject.needDrawAvatar()) {
                     maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(42);
                 } else {
                     maxWidth = AndroidUtilities.getMinTabletSide();
                 }
             } else {
-                if (isChat && !currentMessageObject.isOutOwner() && currentMessageObject.needDrawAvatar()) {
+                if (isChat && !currentMessageObjectTypeIdentifier.isOutOwner() && currentMessageObject.needDrawAvatar()) {
                     maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(42);
                 } else {
                     maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y);
@@ -5254,7 +5254,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
             if (currentMessageObject.attachPathExists) {
                 fileName = currentMessageObject.messageOwner.attachPath;
                 fileExists = true;
-            } else if (!currentMessageObject.isSendError() || documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO || documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
+            } else if (!currentMessageObjectTypeIdentifier.isSendError() || documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO || documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
                 fileName = currentMessageObject.getFileName();
                 fileExists = currentMessageObject.mediaExists;
             }
@@ -5265,7 +5265,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
             fileName = FileLoader.getAttachFileName(currentPhotoObject);
             fileExists = currentMessageObject.mediaExists;
         }
-        if (SharedConfig.streamMedia && (int) currentMessageObject.getDialogId() != 0 && !currentMessageObject.isSecretMedia() && (documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC || documentAttachType == DOCUMENT_ATTACH_TYPE_VIDEO && currentMessageObject.canStreamVideo())) {
+        if (SharedConfig.streamMedia && (int) currentMessageObject.getDialogId() != 0 && !currentMessageObjectTypeIdentifier.isSecretMedia() && (documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC || documentAttachType == DOCUMENT_ATTACH_TYPE_VIDEO && currentMessageObject.canStreamVideo())) {
             hasMiniProgress = fileExists ? 1 : 2;
             fileExists = true;
         }
@@ -5277,7 +5277,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
         boolean fromBot = currentMessageObject.messageOwner.params != null && currentMessageObject.messageOwner.params.containsKey("query_id");
 
         if (documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO || documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
-            if (currentMessageObject.isOut() && (currentMessageObject.isSending() || currentMessageObject.isEditing()) || currentMessageObject.isSendError() && fromBot) {
+            if (currentMessageObjectTypeIdentifier.isOut() && (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing()) || currentMessageObjectTypeIdentifier.isSendError() && fromBot) {
                 DownloadController.getInstance(currentAccount).addLoadingFileObserver(currentMessageObject.messageOwner.attachPath, currentMessageObject, this);
                 buttonState = 4;
                 radialProgress.setBackground(getDrawableForCurrentState(), !fromBot, animated);
@@ -5292,7 +5292,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
                 }
             } else {
                 if (hasMiniProgress != 0) {
-                    radialProgress.setMiniProgressBackgroundColor(Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outLoader : Theme.key_chat_inLoader));
+                    radialProgress.setMiniProgressBackgroundColor(Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outLoader : Theme.key_chat_inLoader));
                     boolean playing = MediaController.getInstance().isPlayingMessage(currentMessageObject);
                     if (!playing || playing && MediaController.getInstance().isMessagePaused()) {
                         buttonState = 0;
@@ -5358,7 +5358,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
                 if (!FileLoader.getInstance(currentAccount).isLoadingFile(fileName)) {
                     if (!cancelLoading &&
                             (documentAttachType == 0 && DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject) ||
-                                    documentAttachType == DOCUMENT_ATTACH_TYPE_GIF  && MessageObject.isNewGifDocument(documentAttach) && DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject))) {
+                                    documentAttachType == DOCUMENT_ATTACH_TYPE_GIF  && MessageObjectTypeIdentifier.isNewGifDocument(documentAttach) && DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject))) {
                         progressVisible = true;
                         buttonState = 1;
                     } else {
@@ -5384,7 +5384,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
                 invalidate();
             }
         } else {
-            if (currentMessageObject.isOut() && (currentMessageObject.isSending() || currentMessageObject.isEditing())) {
+            if (currentMessageObjectTypeIdentifier.isOut() && (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing())) {
                 if (currentMessageObject.messageOwner.attachPath != null && currentMessageObject.messageOwner.attachPath.length() > 0) {
                     DownloadController.getInstance(currentAccount).addLoadingFileObserver(currentMessageObject.messageOwner.attachPath, currentMessageObject, this);
                     boolean needProgress = currentMessageObject.messageOwner.attachPath == null || !currentMessageObject.messageOwner.attachPath.startsWith("http");
@@ -5466,7 +5466,7 @@ public void updateButtonState(boolean animated, boolean fromSet) {
                         boolean autoDownload = false;
                         if (currentMessageObject.type == 1) {
                             autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
-                        } else if (currentMessageObject.type == 8 && MessageObject.isNewGifDocument(currentMessageObject.messageOwner.media.document)) {
+                        } else if (currentMessageObject.type == 8 && MessageObjectTypeIdentifier.isNewGifDocument(currentMessageObject.messageOwner.media.document)) {
                             autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
                         } else if (currentMessageObject.type == 5) {
                             autoDownload = DownloadController.getInstance(currentAccount).canDownloadMedia(currentMessageObject);
@@ -5545,8 +5545,8 @@ private void didPressedButton(boolean animated) {
                     currentMessageObject.gifState = 2;
                     photoImage.setForceLoading(true);
                     photoImage.setImage(currentMessageObject.messageOwner.media.document, null, currentPhotoObject != null ? currentPhotoObject.location : null, currentPhotoFilterThumb, currentMessageObject.messageOwner.media.document.size, null, 0);
-                } else if (currentMessageObject.isRoundVideo()) {
-                    if (currentMessageObject.isSecretMedia()) {
+                } else if (currentMessageObjectTypeIdentifier.isRoundVideo()) {
+                    if (currentMessageObjectTypeIdentifier.isSecretMedia()) {
                         FileLoader.getInstance(currentAccount).loadFile(currentMessageObject.getDocument(), true, 1);
                     } else {
                         currentMessageObject.gifState = 2;
@@ -5583,7 +5583,7 @@ private void didPressedButton(boolean animated) {
                     invalidate();
                 }
             } else {
-                if (currentMessageObject.isOut() && (currentMessageObject.isSending() || currentMessageObject.isEditing())) {
+                if (currentMessageObjectTypeIdentifier.isOut() && (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing())) {
                     if (!radialProgress.isDrawCheckDrawable()) {
                         delegate.didPressedCancelSendButton(this);
                     }
@@ -5625,7 +5625,7 @@ private void didPressedButton(boolean animated) {
             delegate.didPressedImage(this);
         } else if (buttonState == 4) {
             if (documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO || documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
-                if (currentMessageObject.isOut() && (currentMessageObject.isSending() || currentMessageObject.isEditing()) || currentMessageObject.isSendError()) {
+                if (currentMessageObjectTypeIdentifier.isOut() && (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing()) || currentMessageObjectTypeIdentifier.isSendError()) {
                     if (delegate != null) {
                         delegate.didPressedCancelSendButton(this);
                     }
@@ -5749,7 +5749,7 @@ private void measureTime(MessageObject messageObject) {
             signString = messageObject.messageOwner.post_author.replace("\n", "");
         } else if (messageObject.messageOwner.fwd_from != null && messageObject.messageOwner.fwd_from.post_author != null) {
             signString = messageObject.messageOwner.fwd_from.post_author.replace("\n", "");
-        } else if (!messageObject.isOutOwner() && messageObject.messageOwner.from_id > 0 && messageObject.messageOwner.post) {
+        } else if (!MessageObjectTypeIdentifier.isOutOwner() && messageObject.messageOwner.from_id > 0 && messageObject.messageOwner.post) {
             TLRPC.User signUser = MessagesController.getInstance(currentAccount).getUser(messageObject.messageOwner.from_id);
             if (signUser != null) {
                 signString = ContactsController.formatName(signUser.first_name, signUser.last_name).replace('\n', ' ');
@@ -5761,14 +5761,14 @@ private void measureTime(MessageObject messageObject) {
         }
         String timeString;
         TLRPC.User author = null;
-        if (currentMessageObject.isFromUser()) {
+        if (currentMessageObjectTypeIdentifier.isFromUser()) {
             author = MessagesController.getInstance(currentAccount).getUser(messageObject.messageOwner.from_id);
         }
         boolean edited;
-        if (messageObject.isLiveLocation() || messageObject.getDialogId() == 777000 || messageObject.messageOwner.via_bot_id != 0 || messageObject.messageOwner.via_bot_name != null || author != null && author.bot) {
+        if (MessageObjectTypeIdentifier.isLiveLocation() || messageObject.getDialogId() == 777000 || messageObject.messageOwner.via_bot_id != 0 || messageObject.messageOwner.via_bot_name != null || author != null && author.bot) {
             edited = false;
         } else if (currentPosition == null || currentMessagesGroup == null) {
-            edited = (messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_EDITED) != 0 || messageObject.isEditing();
+            edited = (messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_EDITED) != 0 || MessageObjectTypeIdentifier.isEditing();
         } else {
             edited = false;
             for (int a = 0, size = currentMessagesGroup.messages.size(); a < size; a++){
@@ -5800,7 +5800,7 @@ private void measureTime(MessageObject messageObject) {
                 availableTimeWidth = AndroidUtilities.dp(1000);
             }
             int widthForSign = availableTimeWidth - timeWidth;
-            if (messageObject.isOutOwner()) {
+            if (MessageObjectTypeIdentifier.isOutOwner()) {
                 if (messageObject.type == 5) {
                     widthForSign -= AndroidUtilities.dp(20);
                 } else {
@@ -5836,14 +5836,14 @@ private boolean checkNeedDrawShareButton(MessageObject messageObject) {
             return false;
         } else if (messageObject.eventId != 0) {
             return false;
-        } else if (messageObject.messageOwner.fwd_from != null && !messageObject.isOutOwner() && messageObject.messageOwner.fwd_from.saved_from_peer != null && messageObject.getDialogId() == UserConfig.getInstance(currentAccount).getClientUserId()) {
+        } else if (messageObject.messageOwner.fwd_from != null && !MessageObjectTypeIdentifier.isOutOwner() && messageObject.messageOwner.fwd_from.saved_from_peer != null && messageObject.getDialogId() == UserConfig.getInstance(currentAccount).getClientUserId()) {
             drwaShareGoIcon = true;
             return true;
         } else if (messageObject.type == 13) {
             return false;
-        } else if (messageObject.messageOwner.fwd_from != null && messageObject.messageOwner.fwd_from.channel_id != 0 && !messageObject.isOutOwner()) {
+        } else if (messageObject.messageOwner.fwd_from != null && messageObject.messageOwner.fwd_from.channel_id != 0 && !MessageObjectTypeIdentifier.isOutOwner()) {
             return true;
-        } else if (messageObject.isFromUser()) {
+        } else if (MessageObjectTypeIdentifier.isFromUser()) {
             if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty || messageObject.messageOwner.media == null || messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && !(messageObject.messageOwner.media.webpage instanceof TLRPC.TL_webPage)) {
                 return false;
             }
@@ -5851,11 +5851,11 @@ private boolean checkNeedDrawShareButton(MessageObject messageObject) {
             if (user != null && user.bot) {
                 return true;
             }
-            if (!messageObject.isOut()) {
+            if (!MessageObjectTypeIdentifier.isOut()) {
                 if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame || messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice) {
                     return true;
                 }
-                if (messageObject.isMegagroup()) {
+                if (MessageObjectTypeIdentifier.isMegagroup()) {
                     TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(messageObject.messageOwner.to_id.channel_id);
                     return chat != null && chat.username != null && chat.username.length() > 0 && !(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaContact) && !(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGeo);
                 }
@@ -5886,7 +5886,7 @@ private void updateCurrentUserAndChat() {
                     currentUser = messagesController.getUser(fwd_from.saved_from_peer.user_id);
                 }
             } else if (fwd_from.saved_from_peer.channel_id != 0) {
-                if (currentMessageObject.isSavedFromMegagroup() && fwd_from.from_id != 0) {
+                if (currentMessageObjectTypeIdentifier.isSavedFromMegagroup() && fwd_from.from_id != 0) {
                     currentUser = messagesController.getUser(fwd_from.from_id);
                 } else {
                     currentChat = messagesController.getChat(fwd_from.saved_from_peer.channel_id);
@@ -5900,7 +5900,7 @@ private void updateCurrentUserAndChat() {
             }
         } else if (fwd_from != null && fwd_from.from_id != 0 && fwd_from.channel_id == 0 && currentMessageObject.getDialogId() == currentUserId) {
             currentUser = messagesController.getUser(fwd_from.from_id);
-        } else if (currentMessageObject.isFromUser()) {
+        } else if (currentMessageObjectTypeIdentifier.isFromUser()) {
             currentUser = messagesController.getUser(currentMessageObject.messageOwner.from_id);
         } else if (currentMessageObject.messageOwner.from_id < 0) {
             currentChat = messagesController.getChat(-currentMessageObject.messageOwner.from_id);
@@ -5962,7 +5962,7 @@ private void setMessageObjectInternal(MessageObject messageObject) {
             viaWidth = (int) Math.ceil(Theme.chat_replyNamePaint.measureText(viaString, 0, viaString.length()));
         }
 
-        boolean authorName = drawName && isChat && !currentMessageObject.isOutOwner();
+        boolean authorName = drawName && isChat && !currentMessageObjectTypeIdentifier.isOutOwner();
         boolean viaBot = (messageObject.messageOwner.fwd_from == null || messageObject.type == 14) && viaUsername != null;
         if (authorName || viaBot) {
             drawNameLayout = true;
@@ -5972,7 +5972,7 @@ private void setMessageObjectInternal(MessageObject messageObject) {
             }
             int adminWidth;
             String adminString;
-            if (currentUser != null && !currentMessageObject.isOutOwner() && currentMessageObject.type != 13 && currentMessageObject.type != 5 && delegate.isChatAdminCell(currentUser.id)) {
+            if (currentUser != null && !currentMessageObjectTypeIdentifier.isOutOwner() && currentMessageObject.type != 13 && currentMessageObject.type != 5 && delegate.isChatAdminCell(currentUser.id)) {
                 adminString = LocaleController.getString("ChatAdmin", R.string.ChatAdmin);
                 adminWidth = (int) Math.ceil(Theme.chat_adminPaint.measureText(adminString));
                 nameWidth -= adminWidth;
@@ -6002,7 +6002,7 @@ private void setMessageObjectInternal(MessageObject messageObject) {
                 if (currentMessageObject.type == 13 || currentMessageObject.type == 5) {
                     color = Theme.getColor(Theme.key_chat_stickerViaBotNameText);
                 } else {
-                    color = Theme.getColor(currentMessageObject.isOutOwner() ? Theme.key_chat_outViaBotNameText : Theme.key_chat_inViaBotNameText);
+                    color = Theme.getColor(currentMessageObjectTypeIdentifier.isOutOwner() ? Theme.key_chat_outViaBotNameText : Theme.key_chat_inViaBotNameText);
                 }
                 if (currentNameString.length() > 0) {
                     SpannableStringBuilder stringBuilder = new SpannableStringBuilder(String.format("%s via %s", nameStringFinal, viaUsername));
@@ -6135,11 +6135,11 @@ private void setMessageObjectInternal(MessageObject messageObject) {
                 if (photoSize == null) {
                     photoSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.replyMessageObject.photoThumbs, 80);
                 }
-                if (photoSize == null || messageObject.replyMessageObject.type == 13 || messageObject.type == 13 && !AndroidUtilities.isTablet() || messageObject.replyMessageObject.isSecretMedia()) {
+                if (photoSize == null || messageObject.replyMessageObject.type == 13 || messageObject.type == 13 && !AndroidUtilities.isTablet() || messageObject.replyMessageObjectTypeIdentifier.isSecretMedia()) {
                     replyImageReceiver.setImageBitmap((Drawable) null);
                     needReplyImage = false;
                 } else {
-                    if (messageObject.replyMessageObject.isRoundVideo()) {
+                    if (messageObject.replyMessageObjectTypeIdentifier.isRoundVideo()) {
                         replyImageReceiver.setRoundRadius(AndroidUtilities.dp(22));
                     } else {
                         replyImageReceiver.setRoundRadius(0);
@@ -6154,7 +6154,7 @@ private void setMessageObjectInternal(MessageObject messageObject) {
                 if (messageObject.customReplyName != null) {
                     name = messageObject.customReplyName;
                 } else {
-                    if (messageObject.replyMessageObject.isFromUser()) {
+                    if (messageObject.replyMessageObjectTypeIdentifier.isFromUser()) {
                         TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(messageObject.replyMessageObject.messageOwner.from_id);
                         if (user != null) {
                             name = UserObject.getUserName(user);
@@ -6240,7 +6240,7 @@ protected void onDraw(Canvas canvas) {
             return;
         }
 
-        if (currentMessageObject.isOutOwner()) {
+        if (currentMessageObjectTypeIdentifier.isOutOwner()) {
             Theme.chat_msgTextPaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
             Theme.chat_msgTextPaint.linkColor = Theme.getColor(Theme.key_chat_messageLinkOut);
             Theme.chat_msgGameTextPaint.setColor(Theme.getColor(Theme.key_chat_messageTextOut));
@@ -6256,7 +6256,7 @@ protected void onDraw(Canvas canvas) {
 
         if (documentAttach != null) {
             if (documentAttachType == DOCUMENT_ATTACH_TYPE_AUDIO) {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     seekBarWaveform.setColors(Theme.getColor(Theme.key_chat_outVoiceSeekbar), Theme.getColor(Theme.key_chat_outVoiceSeekbarFill), Theme.getColor(Theme.key_chat_outVoiceSeekbarSelected));
                     seekBar.setColors(Theme.getColor(Theme.key_chat_outAudioSeekbar), Theme.getColor(Theme.key_chat_outAudioCacheSeekbar), Theme.getColor(Theme.key_chat_outAudioSeekbarFill), Theme.getColor(Theme.key_chat_outAudioSeekbarFill), Theme.getColor(Theme.key_chat_outAudioSeekbarSelected));
                 } else {
@@ -6265,7 +6265,7 @@ protected void onDraw(Canvas canvas) {
                 }
             } else if (documentAttachType == DOCUMENT_ATTACH_TYPE_MUSIC) {
                 documentAttachType = DOCUMENT_ATTACH_TYPE_MUSIC;
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     seekBar.setColors(Theme.getColor(Theme.key_chat_outAudioSeekbar), Theme.getColor(Theme.key_chat_outAudioCacheSeekbar), Theme.getColor(Theme.key_chat_outAudioSeekbarFill), Theme.getColor(Theme.key_chat_outAudioSeekbarFill), Theme.getColor(Theme.key_chat_outAudioSeekbarSelected));
                 } else {
                     seekBar.setColors(Theme.getColor(Theme.key_chat_inAudioSeekbar), Theme.getColor(Theme.key_chat_inAudioCacheSeekbar), Theme.getColor(Theme.key_chat_inAudioSeekbarFill), Theme.getColor(Theme.key_chat_inAudioSeekbarFill), Theme.getColor(Theme.key_chat_inAudioSeekbarSelected));
@@ -6282,7 +6282,7 @@ protected void onDraw(Canvas canvas) {
                     Theme.chat_timePaint.setColor(Theme.getColor(Theme.key_chat_mediaTimeText));
                 }
             } else {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_timePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText));
                 } else {
                     Theme.chat_timePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_inTimeSelectedText : Theme.key_chat_inTimeText));
@@ -6294,7 +6294,7 @@ protected void onDraw(Canvas canvas) {
         Drawable currentBackgroundSelectedDrawable;
         int additionalTop = 0;
         int additionalBottom = 0;
-        if (currentMessageObject.isOutOwner()) {
+        if (currentMessageObjectTypeIdentifier.isOutOwner()) {
             if (!mediaBackground && !drawPinnedBottom) {
                 currentBackgroundDrawable = Theme.chat_msgOutDrawable;
                 currentBackgroundSelectedDrawable = Theme.chat_msgOutSelectedDrawable;
@@ -6435,7 +6435,7 @@ protected void onDraw(Canvas canvas) {
 
         if (drawShareButton) {
             Theme.chat_shareDrawable.setColorFilter(sharePressed ? Theme.colorPressedFilter : Theme.colorFilter);
-            if (currentMessageObject.isOutOwner()) {
+            if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                 shareStartX = currentBackgroundDrawable.getBounds().left - AndroidUtilities.dp(8) - Theme.chat_shareDrawable.getIntrinsicWidth();
             } else {
                 shareStartX = currentBackgroundDrawable.getBounds().right + AndroidUtilities.dp(8);
@@ -6485,7 +6485,7 @@ protected void onDraw(Canvas canvas) {
     }
 
     public int getBackgroundDrawableLeft() {
-        if (currentMessageObject.isOutOwner()) {
+        if (currentMessageObjectTypeIdentifier.isOutOwner()) {
             return layoutWidth - backgroundWidth - (!mediaBackground ? 0 : AndroidUtilities.dp(9));
         } else {
             return AndroidUtilities.dp((isChat && isAvatarVisible ? 48 : 0) + (!mediaBackground ? 3 : 9));
@@ -6505,7 +6505,7 @@ public void drawNamesLayout(Canvas canvas) {
             if (currentMessageObject.type == 13 || currentMessageObject.type == 5) {
                 Theme.chat_namePaint.setColor(Theme.getColor(Theme.key_chat_stickerNameText));
                 int backWidth;
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     nameX = AndroidUtilities.dp(28);
                 } else {
                     nameX = backgroundDrawableLeft + backgroundDrawableRight + AndroidUtilities.dp(22);
@@ -6515,7 +6515,7 @@ public void drawNamesLayout(Canvas canvas) {
                 Theme.chat_systemDrawable.setBounds((int) nameX - AndroidUtilities.dp(12), (int) nameY - AndroidUtilities.dp(5), (int) nameX + AndroidUtilities.dp(12) + nameWidth, (int) nameY + AndroidUtilities.dp(22));
                 Theme.chat_systemDrawable.draw(canvas);
             } else {
-                if (mediaBackground || currentMessageObject.isOutOwner()) {
+                if (mediaBackground || currentMessageObjectTypeIdentifier.isOutOwner()) {
                     nameX = backgroundDrawableLeft + AndroidUtilities.dp(11) - nameOffsetX;
                 } else {
                     nameX = backgroundDrawableLeft + AndroidUtilities.dp(!mediaBackground && drawPinnedBottom ? 11 : 17) - nameOffsetX;
@@ -6548,7 +6548,7 @@ public void drawNamesLayout(Canvas canvas) {
         if (drawForwardedName && forwardedNameLayout[0] != null && forwardedNameLayout[1] != null && (currentPosition == null || currentPosition.minY == 0 && currentPosition.minX == 0)) {
             if (currentMessageObject.type == 5) {
                 Theme.chat_forwardNamePaint.setColor(Theme.getColor(Theme.key_chat_stickerReplyNameText));
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     forwardNameX = AndroidUtilities.dp(23);
                 } else {
                     forwardNameX = backgroundDrawableLeft + backgroundDrawableRight + AndroidUtilities.dp(17);
@@ -6561,7 +6561,7 @@ public void drawNamesLayout(Canvas canvas) {
                 Theme.chat_systemDrawable.draw(canvas);
             } else {
                 forwardNameY = AndroidUtilities.dp(10 + (drawNameLayout ? 19 : 0));
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_forwardNamePaint.setColor(Theme.getColor(Theme.key_chat_outForwardedNameText));
                     forwardNameX = backgroundDrawableLeft + AndroidUtilities.dp(11);
                 } else {
@@ -6586,7 +6586,7 @@ public void drawNamesLayout(Canvas canvas) {
                 Theme.chat_replyLinePaint.setColor(Theme.getColor(Theme.key_chat_stickerReplyLine));
                 Theme.chat_replyNamePaint.setColor(Theme.getColor(Theme.key_chat_stickerReplyNameText));
                 Theme.chat_replyTextPaint.setColor(Theme.getColor(Theme.key_chat_stickerReplyMessageText));
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     replyStartX = AndroidUtilities.dp(23);
                 } else if (currentMessageObject.type == 5) {
                     replyStartX = backgroundDrawableLeft + backgroundDrawableRight + AndroidUtilities.dp(4);
@@ -6599,7 +6599,7 @@ public void drawNamesLayout(Canvas canvas) {
                 Theme.chat_systemDrawable.setBounds(replyStartX - AndroidUtilities.dp(7), replyStartY - AndroidUtilities.dp(6), replyStartX - AndroidUtilities.dp(7) + backWidth, replyStartY + AndroidUtilities.dp(41));
                 Theme.chat_systemDrawable.draw(canvas);
             } else {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_replyLinePaint.setColor(Theme.getColor(Theme.key_chat_outReplyLine));
                     Theme.chat_replyNamePaint.setColor(Theme.getColor(Theme.key_chat_outReplyNameText));
                     if (currentMessageObject.hasValidReplyMessageObject() && currentMessageObject.replyMessageObject.type == 0 && !(currentMessageObject.replyMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame || currentMessageObject.replyMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice)) {
@@ -6686,7 +6686,7 @@ public void drawTimeLayout(Canvas canvas) {
                     Theme.chat_timePaint.setColor(Theme.getColor(Theme.key_chat_mediaTimeText));
                 }
             } else {
-                if (currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isOutOwner()) {
                     Theme.chat_timePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_outTimeSelectedText : Theme.key_chat_outTimeText));
                 } else {
                     Theme.chat_timePaint.setColor(Theme.getColor(isDrawSelectedBackground() ? Theme.key_chat_inTimeSelectedText : Theme.key_chat_inTimeText));
@@ -6708,7 +6708,7 @@ public void drawTimeLayout(Canvas canvas) {
             Theme.chat_timePaint.setAlpha((int) (255 * timeAlpha));
             int x1 = timeX - AndroidUtilities.dp(4);
             int y1 = layoutHeight - AndroidUtilities.dp(28);
-            rect.set(x1, y1, x1 + timeWidth + AndroidUtilities.dp(8 + (currentMessageObject.isOutOwner() ? 20 : 0)), y1 + AndroidUtilities.dp(17));
+            rect.set(x1, y1, x1 + timeWidth + AndroidUtilities.dp(8 + (currentMessageObjectTypeIdentifier.isOutOwner() ? 20 : 0)), y1 + AndroidUtilities.dp(17));
             canvas.drawRoundRect(rect, AndroidUtilities.dp(4), AndroidUtilities.dp(4), paint);
             paint.setAlpha(oldAlpha);
 
@@ -6716,13 +6716,13 @@ public void drawTimeLayout(Canvas canvas) {
             if ((currentMessageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
                 additionalX += (int) (timeWidth - timeLayout.getLineWidth(0));
 
-                if (currentMessageObject.isSending() || currentMessageObject.isEditing()) {
-                    if (!currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing()) {
+                    if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                         setDrawableBounds(Theme.chat_msgMediaClockDrawable, timeX + AndroidUtilities.dp(11), layoutHeight - AndroidUtilities.dp(14.0f) - Theme.chat_msgMediaClockDrawable.getIntrinsicHeight());
                         Theme.chat_msgMediaClockDrawable.draw(canvas);
                     }
-                } else if (currentMessageObject.isSendError()) {
-                    if (!currentMessageObject.isOutOwner()) {
+                } else if (currentMessageObjectTypeIdentifier.isSendError()) {
+                    if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                         int x = timeX + AndroidUtilities.dp(11);
                         int y = layoutHeight - AndroidUtilities.dp(27.5f);
                         rect.set(x, y, x + AndroidUtilities.dp(14), y + AndroidUtilities.dp(14));
@@ -6762,14 +6762,14 @@ public void drawTimeLayout(Canvas canvas) {
             if ((currentMessageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
                 additionalX += (int) (timeWidth - timeLayout.getLineWidth(0));
 
-                if (currentMessageObject.isSending() || currentMessageObject.isEditing()) {
-                    if (!currentMessageObject.isOutOwner()) {
+                if (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing()) {
+                    if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                         Drawable clockDrawable = isDrawSelectedBackground() ? Theme.chat_msgInSelectedClockDrawable : Theme.chat_msgInClockDrawable;
                         setDrawableBounds(clockDrawable, timeX + AndroidUtilities.dp(11), layoutHeight - AndroidUtilities.dp(8.5f) - clockDrawable.getIntrinsicHeight());
                         clockDrawable.draw(canvas);
                     }
-                } else if (currentMessageObject.isSendError()) {
-                    if (!currentMessageObject.isOutOwner()) {
+                } else if (currentMessageObjectTypeIdentifier.isSendError()) {
+                    if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                         int x = timeX + AndroidUtilities.dp(11);
                         int y = layoutHeight - AndroidUtilities.dp(20.5f);
                         rect.set(x, y, x + AndroidUtilities.dp(14), y + AndroidUtilities.dp(14));
@@ -6778,7 +6778,7 @@ public void drawTimeLayout(Canvas canvas) {
                         Theme.chat_msgErrorDrawable.draw(canvas);
                     }
                 } else {
-                    if (!currentMessageObject.isOutOwner()) {
+                    if (!currentMessageObjectTypeIdentifier.isOutOwner()) {
                         Drawable viewsDrawable = isDrawSelectedBackground() ? Theme.chat_msgInViewsSelectedDrawable : Theme.chat_msgInViewsDrawable;
                         setDrawableBounds(viewsDrawable, timeX, layoutHeight - AndroidUtilities.dp(4.5f) - timeLayout.getHeight());
                         viewsDrawable.draw(canvas);
@@ -6803,25 +6803,25 @@ public void drawTimeLayout(Canvas canvas) {
             canvas.restore();
         }
 
-        if (currentMessageObject.isOutOwner()) {
+        if (currentMessageObjectTypeIdentifier.isOutOwner()) {
             boolean drawCheck1 = false;
             boolean drawCheck2 = false;
             boolean drawClock = false;
             boolean drawError = false;
             boolean isBroadcast = (int) (currentMessageObject.getDialogId() >> 32) == 1;
 
-            if (currentMessageObject.isSending() || currentMessageObject.isEditing()) {
+            if (currentMessageObjectTypeIdentifier.isSending() || currentMessageObjectTypeIdentifier.isEditing()) {
                 drawCheck1 = false;
                 drawCheck2 = false;
                 drawClock = true;
                 drawError = false;
-            } else if (currentMessageObject.isSendError()) {
+            } else if (currentMessageObjectTypeIdentifier.isSendError()) {
                 drawCheck1 = false;
                 drawCheck2 = false;
                 drawClock = false;
                 drawError = true;
-            } else if (currentMessageObject.isSent()) {
-                if (!currentMessageObject.isUnread()) {
+            } else if (currentMessageObjectTypeIdentifier.isSent()) {
+                if (!currentMessageObjectTypeIdentifier.isUnread()) {
                     drawCheck1 = true;
                     drawCheck2 = true;
                 } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ContextLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ContextLinkCell.java
index 2fd7a6db4..a2d7754ef 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ContextLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ContextLinkCell.java
@@ -29,11 +29,12 @@
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.messenger.WebFile;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.LetterDrawable;
 import org.telegram.ui.Components.RadialProgress;
@@ -172,9 +173,9 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 
         String ext = null;
         if (documentAttach != null) {
-            if (MessageObject.isGifDocument(documentAttach)) {
+            if (MessageObjectTypeIdentifier.isGifDocument(documentAttach)) {
                 currentPhotoObject = documentAttach.thumb;
-            } else if (MessageObject.isStickerDocument(documentAttach)) {
+            } else if (MessageObjectTypeIdentifier.isStickerDocument(documentAttach)) {
                 currentPhotoObject = documentAttach.thumb;
                 ext = "webp";
             } else {
@@ -327,13 +328,13 @@ private void setAttachType() {
         currentMessageObject = null;
         documentAttachType = DOCUMENT_ATTACH_TYPE_NONE;
         if (documentAttach != null) {
-            if (MessageObject.isGifDocument(documentAttach)) {
+            if (MessageObjectTypeIdentifier.isGifDocument(documentAttach)) {
                 documentAttachType = DOCUMENT_ATTACH_TYPE_GIF;
-            } else if (MessageObject.isStickerDocument(documentAttach)) {
+            } else if (MessageObjectTypeIdentifier.isStickerDocument(documentAttach)) {
                 documentAttachType = DOCUMENT_ATTACH_TYPE_STICKER;
-            } else if (MessageObject.isMusicDocument(documentAttach)) {
+            } else if (MessageObjectTypeIdentifier.isMusicDocument(documentAttach)) {
                 documentAttachType = DOCUMENT_ATTACH_TYPE_MUSIC;
-            } else if (MessageObject.isVoiceDocument(documentAttach)) {
+            } else if (MessageObjectTypeIdentifier.isVoiceDocument(documentAttach)) {
                 documentAttachType = DOCUMENT_ATTACH_TYPE_AUDIO;
             }
         } else if (inlineResult != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 556708357..246fe91c4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -25,7 +25,7 @@
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.DataQuery;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.FileLog;
 import org.telegram.tgnet.TLObject;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedAudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedAudioCell.java
index 3cf361edd..861a25335 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedAudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedAudioCell.java
@@ -19,7 +19,7 @@
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.R;
 import org.telegram.messenger.SharedConfig;
 import org.telegram.messenger.UserConfig;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
index e6d32035b..629d7e412 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
@@ -25,7 +25,7 @@
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java
index 2c9145b9c..0f7c01169 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java
@@ -26,7 +26,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
index fbe620773..df63a6c29 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
@@ -20,11 +20,10 @@
 import android.view.View;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharingLiveLocationCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharingLiveLocationCell.java
index 719e09532..7a2a6bdbe 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharingLiveLocationCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharingLiveLocationCell.java
@@ -25,7 +25,7 @@
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.LocationController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserObject;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelAdminLogActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelAdminLogActivity.java
index 7ac49df74..7ce87a33d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelAdminLogActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelAdminLogActivity.java
@@ -66,13 +66,14 @@
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.messenger.browser.Browser;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.messenger.support.widget.LinearLayoutManager;
 import org.telegram.messenger.support.widget.LinearSmoothScrollerMiddle;
 import org.telegram.messenger.support.widget.RecyclerView;
@@ -1082,7 +1083,7 @@ private void createMenu(View v) {
                 }
             }
         } else if (type == 3) {
-            if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && MessageObject.isNewGifDocument(selectedObject.messageOwner.media.webpage.document)) {
+            if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && MessageObjectTypeIdentifier.isNewGifDocument(selectedObject.messageOwner.media.webpage.document)) {
                 items.add(LocaleController.getString("SaveToGIFs", R.string.SaveToGIFs));
                 options.add(11);
             }
@@ -1098,7 +1099,7 @@ private void createMenu(View v) {
                 items.add(LocaleController.getString("ShareFile", R.string.ShareFile));
                 options.add(6);
             } else if (selectedObject.getDocument() != null) {
-                if (MessageObject.isNewGifDocument(selectedObject.getDocument())) {
+                if (MessageObjectTypeIdentifier.isNewGifDocument(selectedObject.getDocument())) {
                     items.add(LocaleController.getString("SaveToGIFs", R.string.SaveToGIFs));
                     options.add(11);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 8f8f73892..b024fbf76 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -95,6 +95,7 @@
 import org.telegram.messenger.Utilities;
 import org.telegram.messenger.VideoEditedInfo;
 import org.telegram.messenger.browser.Browser;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.messenger.support.widget.GridLayoutManager;
 import org.telegram.messenger.support.widget.GridLayoutManagerFixed;
@@ -107,7 +108,7 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
@@ -10528,7 +10529,7 @@ private void createMenu(View v, boolean single, boolean listView, boolean search
                             options.add(22);
                         }
                         if (type == 3) {
-                            if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && MessageObject.isNewGifDocument(selectedObject.messageOwner.media.webpage.document)) {
+                            if (selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && MessageObjectTypeIdentifier.isNewGifDocument(selectedObject.messageOwner.media.webpage.document)) {
                                 items.add(LocaleController.getString("SaveToGIFs", R.string.SaveToGIFs));
                                 options.add(11);
                             }
@@ -10546,7 +10547,7 @@ private void createMenu(View v, boolean single, boolean listView, boolean search
                                 items.add(LocaleController.getString("ShareFile", R.string.ShareFile));
                                 options.add(6);
                             } else if (selectedObject.getDocument() != null) {
-                                if (MessageObject.isNewGifDocument(selectedObject.getDocument())) {
+                                if (MessageObjectTypeIdentifier.isNewGifDocument(selectedObject.getDocument())) {
                                     items.add(LocaleController.getString("SaveToGIFs", R.string.SaveToGIFs));
                                     options.add(11);
                                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java
index c2b1f7668..8ff558da6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AudioPlayerAlert.java
@@ -48,7 +48,7 @@
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/BlockingUpdateView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/BlockingUpdateView.java
index ad3c33a63..5f63c3c2a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/BlockingUpdateView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/BlockingUpdateView.java
@@ -29,7 +29,7 @@
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 8b3680377..e7b02a666 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -63,7 +63,7 @@
 import org.telegram.messenger.Emoji;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationsController;
 import org.telegram.messenger.SendMessagesHelper;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
index 4b2d7f0fb..aed3d4b5b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
@@ -61,7 +61,7 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.SharedConfig;
 import org.telegram.messenger.UserConfig;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/FragmentContextView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/FragmentContextView.java
index 4a85622cc..d5ec63f23 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/FragmentContextView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/FragmentContextView.java
@@ -35,7 +35,7 @@
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.LocationController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PipRoundVideoView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PipRoundVideoView.java
index 5bbfc0ca8..9431e0c8b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PipRoundVideoView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PipRoundVideoView.java
@@ -45,7 +45,7 @@
 import org.telegram.messenger.Bitmaps;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
index 70e1c3546..b828c4e20 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
@@ -23,7 +23,7 @@
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.FileLoader;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Cells.BaseCell;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBarWaveform.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBarWaveform.java
index d3014d426..f6d37733a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBarWaveform.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBarWaveform.java
@@ -15,7 +15,7 @@
 import android.view.View;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 
 public class SeekBarWaveform {
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
index b97f890de..8de899b4c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
@@ -44,7 +44,7 @@
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationCenter;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TermsOfServiceView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TermsOfServiceView.java
index ad1c40e0d..d8a1111e2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TermsOfServiceView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TermsOfServiceView.java
@@ -18,7 +18,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.ConnectionsManager;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 2933786b2..72ead605e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -49,7 +49,7 @@
 import org.telegram.messenger.DialogObject;
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.SharedConfig;
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.support.widget.LinearLayoutManager;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 96ee1a45a..aa38aad8a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -49,7 +49,7 @@
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationsController;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
index 4d34fbffc..30977eefc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
@@ -75,7 +75,7 @@
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index b07886b0a..4e196755d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -51,7 +51,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationCenter;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index c9539189a..f2c5d3a25 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -56,7 +56,7 @@
 import org.telegram.messenger.support.widget.RecyclerView;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java
index 8374e8e0d..45dadc03f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PassportActivity.java
@@ -71,7 +71,7 @@
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MrzRecognizer;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PaymentFormActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PaymentFormActivity.java
index dcbeb139f..935d87780 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PaymentFormActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PaymentFormActivity.java
@@ -91,7 +91,7 @@
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index 8c63953ef..3ff944525 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -49,7 +49,7 @@
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.AlertDialog;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 13f1c9845..8f5c69bbb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -130,7 +130,7 @@
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BottomSheet;
@@ -1904,7 +1904,7 @@ public void didReceivedNotification(int id, int account, Object... args) {
                 if (currentFileNames[a] != null && currentFileNames[a].equals(location)) {
                     photoProgressViews[a].setProgress(1.0f, true);
                     checkProgress(a, true);
-                    if (videoPlayer == null && a == 0 && (currentMessageObject != null && currentMessageObject.isVideo() || currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObject.isVideoDocument(currentBotInlineResult.document)))) {
+                    if (videoPlayer == null && a == 0 && (currentMessageObject != null && currentMessageObjectTypeIdentifier.isVideo() || currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObjectTypeIdentifier.isVideoDocument(currentBotInlineResult.document)))) {
                         onActionClick(false);
                     }
                     if (a == 0 && videoPlayer != null) {
@@ -2186,7 +2186,7 @@ private void showDownloadAlert() {
         builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
         builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
         boolean alreadyDownloading;
-        alreadyDownloading = currentMessageObject != null && currentMessageObject.isVideo() && FileLoader.getInstance(currentMessageObject.currentAccount).isLoadingFile(currentFileNames[0]);
+        alreadyDownloading = currentMessageObject != null && currentMessageObjectTypeIdentifier.isVideo() && FileLoader.getInstance(currentMessageObject.currentAccount).isLoadingFile(currentFileNames[0]);
         if (alreadyDownloading) {
             builder.setMessage(LocaleController.getString("PleaseStreamDownload", R.string.PleaseStreamDownload));
         } else {
@@ -2204,7 +2204,7 @@ private void onSharePressed() {
             boolean isVideo = false;
 
             if (currentMessageObject != null) {
-                isVideo = currentMessageObject.isVideo();
+                isVideo = currentMessageObjectTypeIdentifier.isVideo();
                         /*if (currentMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) {
                             AndroidUtilities.openUrl(parentActivity, currentMessageObject.messageOwner.media.webpage.url);
                             return;
@@ -2515,7 +2515,7 @@ public void onItemClick(int id) {
                     }
 
                     if (f != null && f.exists()) {
-                        MediaController.saveFile(f.toString(), parentActivity, currentMessageObject != null && currentMessageObject.isVideo() ? 1 : 0, null, null);
+                        MediaController.saveFile(f.toString(), parentActivity, currentMessageObject != null && currentMessageObjectTypeIdentifier.isVideo() ? 1 : 0, null, null);
                     } else {
                         showDownloadAlert();
                     }
@@ -2621,9 +2621,9 @@ public void didSelectDialogs(DialogsActivity fragment, ArrayList<Long> dids, Cha
                     String text = placeProvider.getDeleteMessageString();
                     if (text != null) {
                         builder.setMessage(text);
-                    } else if (currentMessageObject != null && currentMessageObject.isVideo()) {
+                    } else if (currentMessageObject != null && currentMessageObjectTypeIdentifier.isVideo()) {
                         builder.setMessage(LocaleController.formatString("AreYouSureDeleteVideo", R.string.AreYouSureDeleteVideo));
-                    } else if (currentMessageObject != null && currentMessageObject.isGif()) {
+                    } else if (currentMessageObject != null && currentMessageObjectTypeIdentifier.isGif()) {
                         builder.setMessage(LocaleController.formatString("AreYouSure", R.string.AreYouSure));
                     } else {
                         builder.setMessage(LocaleController.formatString("AreYouSureDeletePhoto", R.string.AreYouSureDeletePhoto));
@@ -2647,7 +2647,7 @@ public void didSelectDialogs(DialogsActivity fragment, ArrayList<Long> dids, Cha
                                 boolean hasOutgoing = false;
                                 int currentDate = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
                                 if (currentUser != null && currentUser.id != UserConfig.getInstance(currentAccount).getClientUserId() || currentChat != null) {
-                                    if ((currentMessageObject.messageOwner.action == null || currentMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty) && currentMessageObject.isOut() && (currentDate - currentMessageObject.messageOwner.date) <= 2 * 24 * 60 * 60) {
+                                    if ((currentMessageObject.messageOwner.action == null || currentMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty) && currentMessageObjectTypeIdentifier.isOut() && (currentDate - currentMessageObject.messageOwner.date) <= 2 * 24 * 60 * 60) {
                                         FrameLayout frameLayout = new FrameLayout(parentActivity);
                                         CheckBoxCell cell = new CheckBoxCell(parentActivity, 1);
                                         cell.setBackgroundDrawable(Theme.getSelectorDrawable(false));
@@ -4427,7 +4427,7 @@ public void onAnimationEnd(Animator animation) {
         videoTimelineView.setProgress(0);
         videoPlayerSeekbar.setBufferedProgress(0);
 
-        if (currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObject.isVideoDocument(currentBotInlineResult.document))) {
+        if (currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObjectTypeIdentifier.isVideoDocument(currentBotInlineResult.document))) {
             bottomLayout.setVisibility(View.VISIBLE);
             bottomLayout.setTranslationY(-AndroidUtilities.dp(48));
         }
@@ -5769,7 +5769,7 @@ private void onPhotoShow(final MessageObject messageObject, final TLRPC.FileLoca
                 MessagesController.getInstance(currentAccount).loadDialogPhotos(avatarsDialogId, 80, 0, true, classGuid);
             }
         }
-        if (currentMessageObject != null && currentMessageObject.isVideo() || currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObject.isVideoDocument(currentBotInlineResult.document))) {
+        if (currentMessageObject != null && currentMessageObjectTypeIdentifier.isVideo() || currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObjectTypeIdentifier.isVideoDocument(currentBotInlineResult.document))) {
             onActionClick(false);
         } else if (!imagesArrLocals.isEmpty()) {
             Object entry = imagesArrLocals.get(index);
@@ -5819,8 +5819,8 @@ private void setIsAboutToSwitchToIndex(int index, boolean init) {
                 return;
             }
             newMessageObject = imagesArr.get(switchingToIndex);
-            isVideo = newMessageObject.isVideo();
-            boolean isInvoice = newMessageObject.isInvoice();
+            isVideo = newMessageObjectTypeIdentifier.isVideo();
+            boolean isInvoice = newMessageObjectTypeIdentifier.isInvoice();
             if (isInvoice) {
                 masksItem.setVisibility(View.GONE);
                 menuItem.hideSubItem(gallery_menu_delete);
@@ -5854,7 +5854,7 @@ private void setIsAboutToSwitchToIndex(int index, boolean init) {
                 if (nameOverride != null) {
                     nameTextView.setText(nameOverride);
                 } else {
-                    if (newMessageObject.isFromUser()) {
+                    if (newMessageObjectTypeIdentifier.isFromUser()) {
                         TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(newMessageObject.messageOwner.from_id);
                         if (user != null) {
                             nameTextView.setText(UserObject.getUserName(user));
@@ -5928,7 +5928,7 @@ private void setIsAboutToSwitchToIndex(int index, boolean init) {
                         actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, (totalImagesCount + totalImagesCountMerge - imagesArr.size()) + switchingToIndex + 1, totalImagesCount + totalImagesCountMerge));
                     }
                 } else if (slideshowMessageId == 0 && newMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) {
-                    if (newMessageObject.isVideo()) {
+                    if (newMessageObjectTypeIdentifier.isVideo()) {
                         actionBar.setTitle(LocaleController.getString("AttachVideo", R.string.AttachVideo));
                     } else {
                         actionBar.setTitle(LocaleController.getString("AttachPhoto", R.string.AttachPhoto));
@@ -5999,7 +5999,7 @@ private void setIsAboutToSwitchToIndex(int index, boolean init) {
             if (object instanceof TLRPC.BotInlineResult) {
                 TLRPC.BotInlineResult botInlineResult = currentBotInlineResult = ((TLRPC.BotInlineResult) object);
                 if (botInlineResult.document != null) {
-                    isVideo = MessageObject.isVideoDocument(botInlineResult.document);
+                    isVideo = MessageObjectTypeIdentifier.isVideoDocument(botInlineResult.document);
                 } else if (botInlineResult.content instanceof TLRPC.TL_webDocument) {
                     isVideo = botInlineResult.type.equals("video");
                 }
@@ -6138,7 +6138,7 @@ private void setImageIndex(int index, boolean init) {
             MessageObject newMessageObject = imagesArr.get(currentIndex);
             sameImage = init && currentMessageObject != null && currentMessageObject.getId() == newMessageObject.getId();
             currentMessageObject = newMessageObject;
-            isVideo = newMessageObject.isVideo();
+            isVideo = newMessageObjectTypeIdentifier.isVideo();
         } else if (!secureDocuments.isEmpty()) {
             if (index < 0 || index >= secureDocuments.size()) {
                 closePhoto(false, false);
@@ -6166,7 +6166,7 @@ private void setImageIndex(int index, boolean init) {
                 TLRPC.BotInlineResult botInlineResult = currentBotInlineResult = ((TLRPC.BotInlineResult) object);
                 if (botInlineResult.document != null) {
                     currentPathObject = FileLoader.getPathToAttach(botInlineResult.document).getAbsolutePath();
-                    isVideo = MessageObject.isVideoDocument(botInlineResult.document);
+                    isVideo = MessageObjectTypeIdentifier.isVideoDocument(botInlineResult.document);
                 } else if (botInlineResult.photo != null) {
                     currentPathObject = FileLoader.getPathToAttach(FileLoader.getClosestPhotoSizeWithSize(botInlineResult.photo.sizes, AndroidUtilities.getPhotoSize())).getAbsolutePath();
                 } else if (botInlineResult.content instanceof TLRPC.TL_webDocument) {
@@ -6438,7 +6438,7 @@ private void checkProgress(int a, boolean animated) {
                     return;
                 }
                 TLRPC.BotInlineResult botInlineResult = (TLRPC.BotInlineResult) imagesArrLocals.get(index);
-                if (botInlineResult.type.equals("video") || MessageObject.isVideoDocument(botInlineResult.document)) {
+                if (botInlineResult.type.equals("video") || MessageObjectTypeIdentifier.isVideoDocument(botInlineResult.document)) {
                     if (botInlineResult.document != null) {
                         f = FileLoader.getPathToAttach(botInlineResult.document);
                     } else if (botInlineResult.content instanceof TLRPC.TL_webDocument) {
@@ -6590,7 +6590,7 @@ private void setIndexToImage(ImageReceiver imageReceiver, int index) {
                 } else if (object instanceof TLRPC.BotInlineResult) {
                     cacheType = 1;
                     TLRPC.BotInlineResult botInlineResult = ((TLRPC.BotInlineResult) object);
-                    if (botInlineResult.type.equals("video") || MessageObject.isVideoDocument(botInlineResult.document)) {
+                    if (botInlineResult.type.equals("video") || MessageObjectTypeIdentifier.isVideoDocument(botInlineResult.document)) {
                         if (botInlineResult.document != null) {
                             photo = botInlineResult.document.thumb.location;
                         } else if (botInlineResult.thumb instanceof TLRPC.TL_webDocument) {
@@ -8209,7 +8209,7 @@ private void onActionClick(boolean download) {
                 file = FileLoader.getPathToMessage(currentMessageObject.messageOwner);
                 if (!file.exists()) {
                     file = null;
-                    if (SharedConfig.streamMedia && (int) currentMessageObject.getDialogId() != 0 && currentMessageObject.isVideo() && currentMessageObject.canStreamVideo()) {
+                    if (SharedConfig.streamMedia && (int) currentMessageObject.getDialogId() != 0 && currentMessageObjectTypeIdentifier.isVideo() && currentMessageObject.canStreamVideo()) {
                         try {
                             FileLoader.getInstance(currentAccount).loadFile(currentMessageObject.getDocument(), true, 0);
                             TLRPC.Document document = currentMessageObject.getDocument();
@@ -8330,7 +8330,7 @@ public boolean onSingleTapConfirmed(MotionEvent e) {
             } else {
                 checkImageView.performClick();
             }
-        } else if (currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObject.isVideoDocument(currentBotInlineResult.document))) {
+        } else if (currentBotInlineResult != null && (currentBotInlineResult.type.equals("video") || MessageObjectTypeIdentifier.isVideoDocument(currentBotInlineResult.document))) {
             int state = photoProgressViews[0].backgroundState;
             if (state > 0 && state <= 3) {
                 float x = e.getX();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
index 5a5198ff0..67ecbab42 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
@@ -61,7 +61,7 @@
 import org.telegram.messenger.WebFile;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index b870e7860..62d5dfada 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -67,7 +67,7 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.ui.ActionBar.AlertDialog;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SecretMediaViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/SecretMediaViewer.java
index e0f95c9c7..578fef1bf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SecretMediaViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SecretMediaViewer.java
@@ -47,13 +47,14 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -813,7 +814,7 @@ public void openMedia(MessageObject messageObject, PhotoViewer.PhotoViewerProvid
         }
         currentThumb = object.imageReceiver.getThumbBitmapSafe();
         if (document != null) {
-            if (MessageObject.isGifDocument(document)) {
+            if (MessageObjectTypeIdentifier.isGifDocument(document)) {
                 actionBar.setTitle(LocaleController.getString("DisappearingGif", R.string.DisappearingGif));
                 centerImage.setImage(document, null, currentThumb != null ? new BitmapDrawable(currentThumb.bitmap) : null, -1, null, 1);
                 secretDeleteTimer.setDestroyTime((long) messageObject.messageOwner.destroyTime * 1000, messageObject.messageOwner.ttl, false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index dead41ec9..7f0d959c9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -74,7 +74,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.ThemeDescription;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
index a46d0a78f..ad78caca1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ShareActivity.java
@@ -23,7 +23,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/StickerPreviewViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/StickerPreviewViewer.java
index 1b740918f..777c5ea7b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/StickerPreviewViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/StickerPreviewViewer.java
@@ -38,9 +38,10 @@
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
+import org.telegram.messenger.message.MessageObjectTypeIdentifier;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Cells.ContextLinkCell;
@@ -114,7 +115,7 @@ public void run() {
                 icons.add(R.drawable.stickers_pack);
                 actions.add(1);
             }
-            if (!MessageObject.isMaskDocument(currentSticker) && (inFavs || DataQuery.getInstance(currentAccount).canAddStickerToFavorites())) {
+            if (!MessageObjectTypeIdentifier.isMaskDocument(currentSticker) && (inFavs || DataQuery.getInstance(currentAccount).canAddStickerToFavorites())) {
                 items.add(inFavs ? LocaleController.getString("DeleteFromFavorites", R.string.DeleteFromFavorites) : LocaleController.getString("AddToFavorites", R.string.AddToFavorites));
                 icons.add(inFavs ? R.drawable.stickers_unfavorite : R.drawable.stickers_favorite);
                 actions.add(2);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemePreviewActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemePreviewActivity.java
index 0a30a3f57..c6f8d94bb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemePreviewActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemePreviewActivity.java
@@ -35,7 +35,7 @@
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
index 38c873e42..c89b17087 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WebviewActivity.java
@@ -35,7 +35,7 @@
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.message.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
