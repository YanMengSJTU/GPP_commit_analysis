diff --git a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
index 0b694209b..5bb8a89ce 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
@@ -18,7 +18,6 @@
 import android.graphics.Matrix;
 import android.graphics.drawable.BitmapDrawable;
 import android.media.ExifInterface;
-import android.media.ThumbnailUtils;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
@@ -26,6 +25,7 @@
 import android.os.ParcelFileDescriptor;
 import android.provider.MediaStore;
 
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.DispatchQueue;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
@@ -33,7 +33,6 @@
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
-import org.telegram.messenger.ApplicationLoader;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;
@@ -1897,78 +1896,4 @@ public static String getHttpUrlExtension(String url) {
         return ext;
     }
 
-    public static void saveMessageThumbs(TLRPC.Message message) {
-        TLRPC.PhotoSize photoSize = null;
-        if (message.media instanceof TLRPC.TL_messageMediaPhoto) {
-            for (TLRPC.PhotoSize size : message.media.photo.sizes) {
-                if (size instanceof TLRPC.TL_photoCachedSize) {
-                    photoSize = size;
-                    break;
-                }
-            }
-        } else if (message.media instanceof TLRPC.TL_messageMediaVideo) {
-            if (message.media.video.thumb instanceof TLRPC.TL_photoCachedSize) {
-                photoSize = message.media.video.thumb;
-            }
-        } else if (message.media instanceof TLRPC.TL_messageMediaDocument) {
-            if (message.media.document.thumb instanceof TLRPC.TL_photoCachedSize) {
-                photoSize = message.media.document.thumb;
-            }
-        } else if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-            if (message.media.webpage.photo != null) {
-                for (TLRPC.PhotoSize size : message.media.webpage.photo.sizes) {
-                    if (size instanceof TLRPC.TL_photoCachedSize) {
-                        photoSize = size;
-                        break;
-                    }
-                }
-            }
-        }
-        if (photoSize != null && photoSize.bytes != null && photoSize.bytes.length != 0) {
-            if (photoSize.location instanceof TLRPC.TL_fileLocationUnavailable) {
-                photoSize.location = new TLRPC.TL_fileLocation();
-                photoSize.location.volume_id = Integer.MIN_VALUE;
-                photoSize.location.dc_id = Integer.MIN_VALUE;
-                photoSize.location.local_id = UserConfig.lastLocalId;
-                UserConfig.lastLocalId--;
-            }
-            File file = FileLoader.getPathToAttach(photoSize, true);
-            if (!file.exists()) {
-                try {
-                    RandomAccessFile writeFile = new RandomAccessFile(file, "rws");
-                    writeFile.write(photoSize.bytes);
-                    writeFile.close();
-                } catch (Exception e) {
-                    FileLog.e("tmessages", e);
-                }
-            }
-            TLRPC.TL_photoSize newPhotoSize = new TLRPC.TL_photoSize();
-            newPhotoSize.w = photoSize.w;
-            newPhotoSize.h = photoSize.h;
-            newPhotoSize.location = photoSize.location;
-            newPhotoSize.size = photoSize.size;
-            newPhotoSize.type = photoSize.type;
-
-            if (message.media instanceof TLRPC.TL_messageMediaPhoto) {
-                for (int a = 0; a < message.media.photo.sizes.size(); a++) {
-                    if (message.media.photo.sizes.get(a) instanceof TLRPC.TL_photoCachedSize) {
-                        message.media.photo.sizes.set(a, newPhotoSize);
-                        break;
-                    }
-                }
-            } else if (message.media instanceof TLRPC.TL_messageMediaVideo) {
-                message.media.video.thumb = newPhotoSize;
-            } else if (message.media instanceof TLRPC.TL_messageMediaDocument) {
-                message.media.document.thumb = newPhotoSize;
-            } else if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
-                for (int a = 0; a < message.media.webpage.photo.sizes.size(); a++) {
-                    if (message.media.webpage.photo.sizes.get(a) instanceof TLRPC.TL_photoCachedSize) {
-                        message.media.webpage.photo.sizes.set(a, newPhotoSize);
-                        break;
-                    }
-                }
-            }
-        }
-    }
-
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
index e4c838346..c20207388 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLClassStore.java
@@ -49,7 +49,6 @@ public TLClassStore() {
         classStore.put(TLRPC.TL_server_DH_params_fail.constructor, TLRPC.TL_server_DH_params_fail.class);
         classStore.put(TLRPC.TL_server_DH_params_ok.constructor, TLRPC.TL_server_DH_params_ok.class);
         classStore.put(TLRPC.TL_protoMessage.constructor, TLRPC.TL_protoMessage.class);
-        classStore.put(TLRPC.TL_msgs_all_info.constructor, TLRPC.TL_msgs_all_info.class);
         classStore.put(TLRPC.TL_p_q_inner_data.constructor, TLRPC.TL_p_q_inner_data.class);
         classStore.put(TLRPC.TL_updateShortChatMessage.constructor, TLRPC.TL_updateShortChatMessage.class);
         classStore.put(TLRPC.TL_updates.constructor, TLRPC.TL_updates.class);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index 16d891abe..2a7489a76 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -16,41 +16,9 @@
     public static final int MESSAGE_FLAG_UNREAD = 1;
     public static final int MESSAGE_FLAG_OUT = 2;
     public static final int MESSAGE_FLAG_FWD = 4;
-    public static final int MESSAGE_FLAG_REPLY = 8;
-    public static final int MESSAGE_FLAG_MENTION = 16;
-    public static final int MESSAGE_FLAG_CONTENT_UNREAD = 32;
     public static final int LAYER = 30;
 
-    public static class TL_inputEncryptedChat extends TLObject {
-        public static int constructor = 0xf141b5e1;
 
-        public int chat_id;
-        public long access_hash;
-
-        public static TL_inputEncryptedChat TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_inputEncryptedChat.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_inputEncryptedChat", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_inputEncryptedChat result = new TL_inputEncryptedChat();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            chat_id = stream.readInt32(exception);
-            access_hash = stream.readInt64(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-            stream.writeInt64(access_hash);
-        }
-    }
 
     public static class WebPage extends TLObject {
         public long id;
@@ -209,42 +177,6 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_inputPeerNotifySettings extends TLObject {
-        public static int constructor = 0x46a2ce98;
-
-        public int mute_until;
-        public String sound;
-        public boolean show_previews;
-        public int events_mask;
-
-        public static TL_inputPeerNotifySettings TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_inputPeerNotifySettings.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_inputPeerNotifySettings", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_inputPeerNotifySettings result = new TL_inputPeerNotifySettings();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            mute_until = stream.readInt32(exception);
-            sound = stream.readString(exception);
-            show_previews = stream.readBool(exception);
-            events_mask = stream.readInt32(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(mute_until);
-            stream.writeString(sound);
-            stream.writeBool(show_previews);
-            stream.writeInt32(events_mask);
-        }
-    }
 
     public static class InputEncryptedFile extends TLObject {
         public long id;
@@ -455,33 +387,7 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_accountDaysTTL extends TLObject {
-        public static int constructor = 0xb8d0afdf;
-
-        public int days;
-
-        public static TL_accountDaysTTL TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_accountDaysTTL.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_accountDaysTTL", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_accountDaysTTL result = new TL_accountDaysTTL();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            days = stream.readInt32(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(days);
-        }
-    }
 
     public static class TL_error extends TLObject {
         public static int constructor = 0xc4b9f9bb;
@@ -489,18 +395,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int code;
         public String text;
 
-        public static TL_error TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_error.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_error", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_error result = new TL_error();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             code = stream.readInt32(exception);
@@ -624,36 +519,7 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_contactStatus extends TLObject {
-        public static int constructor = 0xd3680c61;
-
-        public int user_id;
-        public UserStatus status;
-
-        public static TL_contactStatus TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_contactStatus.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_contactStatus", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_contactStatus result = new TL_contactStatus();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            user_id = stream.readInt32(exception);
-            status = UserStatus.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(user_id);
-            status.serializeToStream(stream);
-        }
-    }
 
     public static class InputDocument extends TLObject {
         public long id;
@@ -742,27 +608,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public byte[] new_nonce_hash3;
         public byte[] new_nonce_hash1;
 
-        public static Set_client_DH_params_answer TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            Set_client_DH_params_answer result = null;
-            switch(constructor) {
-                case 0x46dc1fb9:
-                    result = new TL_dh_gen_retry();
-                    break;
-                case 0xa69dae02:
-                    result = new TL_dh_gen_fail();
-                    break;
-                case 0x3bcbf734:
-                    result = new TL_dh_gen_ok();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in Set_client_DH_params_answer", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_dh_gen_retry extends Set_client_DH_params_answer {
@@ -837,60 +683,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public String provider;
         public String venue_id;
 
-        public static InputMedia TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            InputMedia result = null;
-            switch(constructor) {
-                case 0xa6e45987:
-                    result = new TL_inputMediaContact();
-                    break;
-                case 0x41481486:
-                    result = new TL_inputMediaUploadedThumbDocument();
-                    break;
-                case 0x89938781:
-                    result = new TL_inputMediaAudio();
-                    break;
-                case 0xd184e841:
-                    result = new TL_inputMediaDocument();
-                    break;
-                case 0x936a4ebd:
-                    result = new TL_inputMediaVideo();
-                    break;
-                case 0xf9c44144:
-                    result = new TL_inputMediaGeoPoint();
-                    break;
-                case 0x9664f57f:
-                    result = new TL_inputMediaEmpty();
-                    break;
-                case 0x96fb97dc:
-                    result = new TL_inputMediaUploadedThumbVideo();
-                    break;
-                case 0xf7aff1c0:
-                    result = new TL_inputMediaUploadedPhoto();
-                    break;
-                case 0x2827a81a:
-                    result = new TL_inputMediaVenue();
-                    break;
-                case 0x4e498cab:
-                    result = new TL_inputMediaUploadedAudio();
-                    break;
-                case 0xe13fd4bc:
-                    result = new TL_inputMediaUploadedVideo();
-                    break;
-                case 0xffe76b78:
-                    result = new TL_inputMediaUploadedDocument();
-                    break;
-                case 0xe9bfb4f3:
-                    result = new TL_inputMediaPhoto();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in InputMedia", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputMediaContact extends InputMedia {
@@ -1258,24 +1051,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public ArrayList<User> users = new ArrayList<>();
         public int count;
 
-        public static messages_Dialogs TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            messages_Dialogs result = null;
-            switch(constructor) {
-                case 0x15ba6c40:
-                    result = new TL_messages_dialogs();
-                    break;
-                case 0x71e094f3:
-                    result = new TL_messages_dialogsSlice();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in messages_Dialogs", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_messages_dialogs extends messages_Dialogs {
@@ -1482,18 +1258,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public byte[] g_a;
         public int server_time;
 
-        public static TL_server_DH_inner_data TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_server_DH_inner_data.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_server_DH_inner_data", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_server_DH_inner_data result = new TL_server_DH_inner_data();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             nonce = stream.readData(16, exception);
@@ -1518,36 +1283,7 @@ public void serializeToStream(AbsSerializedData stream) {
     public static class InputPrivacyRule extends TLObject {
         public ArrayList<InputUser> users = new ArrayList<>();
 
-        public static InputPrivacyRule TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            InputPrivacyRule result = null;
-            switch(constructor) {
-                case 0x90110467:
-                    result = new TL_inputPrivacyValueDisallowUsers();
-                    break;
-                case 0xd66b66c9:
-                    result = new TL_inputPrivacyValueDisallowAll();
-                    break;
-                case 0xba52007:
-                    result = new TL_inputPrivacyValueDisallowContacts();
-                    break;
-                case 0x184b35ce:
-                    result = new TL_inputPrivacyValueAllowAll();
-                    break;
-                case 0xd09e07b:
-                    result = new TL_inputPrivacyValueAllowContacts();
-                    break;
-                case 0x131cc67f:
-                    result = new TL_inputPrivacyValueAllowUsers();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in InputPrivacyRule", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputPrivacyValueDisallowUsers extends InputPrivacyRule {
@@ -1826,18 +1562,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
         public ArrayList<Long> msg_ids = new ArrayList<>();
 
-        public static TL_msgs_ack TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_msgs_ack.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_msgs_ack", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_msgs_ack result = new TL_msgs_ack();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             int magic = stream.readInt32(exception);
@@ -1963,69 +1688,14 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_userFull extends TLObject {
-        public static int constructor = 0x771095da;
-
-        public User user;
-        public TL_contacts_link link;
-        public Photo profile_photo;
-        public PeerNotifySettings notify_settings;
-        public boolean blocked;
-        public String real_first_name;
-        public String real_last_name;
-
-        public static TL_userFull TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_userFull.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_userFull", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_userFull result = new TL_userFull();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            user = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-            link = TL_contacts_link.TLdeserialize(stream, stream.readInt32(exception), exception);
-            profile_photo = Photo.TLdeserialize(stream, stream.readInt32(exception), exception);
-            notify_settings = PeerNotifySettings.TLdeserialize(stream, stream.readInt32(exception), exception);
-            blocked = stream.readBool(exception);
-            real_first_name = stream.readString(exception);
-            real_last_name = stream.readString(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            user.serializeToStream(stream);
-            link.serializeToStream(stream);
-            profile_photo.serializeToStream(stream);
-            notify_settings.serializeToStream(stream);
-            stream.writeBool(blocked);
-            stream.writeString(real_first_name);
-            stream.writeString(real_last_name);
-        }
-    }
 
     public static class TL_msg_resend_req extends TLObject {
         public static int constructor = 0x7d861a08;
 
         public ArrayList<Long> msg_ids = new ArrayList<>();
 
-        public static TL_msg_resend_req TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_msg_resend_req.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_msg_resend_req", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_msg_resend_req result = new TL_msg_resend_req();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             int magic = stream.readInt32(exception);
@@ -2119,24 +1789,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public String error_message;
         public long query_id;
 
-        public static RpcError TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            RpcError result = null;
-            switch(constructor) {
-                case 0x2144ca19:
-                    result = new TL_rpc_error();
-                    break;
-                case 0x7ae432f5:
-                    result = new TL_rpc_req_error();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in RpcError", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_rpc_error extends RpcError {
@@ -2594,24 +2247,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int error_code;
         public long new_server_salt;
 
-        public static BadMsgNotification TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            BadMsgNotification result = null;
-            switch(constructor) {
-                case 0xa7eff811:
-                    result = new TL_bad_msg_notification();
-                    break;
-                case 0xedab447b:
-                    result = new TL_bad_server_salt();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in BadMsgNotification", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_bad_msg_notification extends BadMsgNotification {
@@ -3645,18 +3281,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public long unique_id;
         public long server_salt;
 
-        public static TL_new_session_created TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_new_session_created.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_new_session_created", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_new_session_created result = new TL_new_session_created();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             first_msg_id = stream.readInt64(exception);
@@ -3672,74 +3297,7 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_contacts_suggested extends TLObject {
-        public static int constructor = 0x5649dcc5;
 
-        public ArrayList<TL_contactSuggested> results = new ArrayList<>();
-        public ArrayList<User> users = new ArrayList<>();
-
-        public static TL_contacts_suggested TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_contacts_suggested.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_suggested", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_contacts_suggested result = new TL_contacts_suggested();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                TL_contactSuggested object = TL_contactSuggested.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                results.add(object);
-            }
-            magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                User object = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                users.add(object);
-            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = results.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                results.get(a).serializeToStream(stream);
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = users.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                users.get(a).serializeToStream(stream);
-            }
-        }
-    }
 
     public static class WallPaper extends TLObject {
         public int id;
@@ -3748,24 +3306,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int color;
         public int bg_color;
 
-        public static WallPaper TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            WallPaper result = null;
-            switch(constructor) {
-                case 0xccb03657:
-                    result = new TL_wallPaper();
-                    break;
-                case 0x63117f24:
-                    result = new TL_wallPaperSolid();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in WallPaper", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_wallPaper extends WallPaper {
@@ -3897,58 +3438,9 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_inputPrivacyKeyStatusTimestamp extends TLObject {
-        public static int constructor = 0x4f96cb18;
-
-
-        public static TL_inputPrivacyKeyStatusTimestamp TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_inputPrivacyKeyStatusTimestamp.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_inputPrivacyKeyStatusTimestamp", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_inputPrivacyKeyStatusTimestamp result = new TL_inputPrivacyKeyStatusTimestamp();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_account_sentChangePhoneCode extends TLObject {
-        public static int constructor = 0xa4f58c4c;
 
-        public String phone_code_hash;
-        public int send_call_timeout;
-
-        public static TL_account_sentChangePhoneCode TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_account_sentChangePhoneCode.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_account_sentChangePhoneCode", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_account_sentChangePhoneCode result = new TL_account_sentChangePhoneCode();
-            result.readParams(stream, exception);
-            return result;
-        }
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            phone_code_hash = stream.readString(exception);
-            send_call_timeout = stream.readInt32(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_code_hash);
-            stream.writeInt32(send_call_timeout);
-        }
-    }
 
     public static class ChatInvite extends TLObject {
         public String title;
@@ -4108,24 +3600,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int date;
         public EncryptedFile file;
 
-        public static messages_SentEncryptedMessage TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            messages_SentEncryptedMessage result = null;
-            switch(constructor) {
-                case 0x560f8935:
-                    result = new TL_messages_sentEncryptedMessage();
-                    break;
-                case 0x9493ff32:
-                    result = new TL_messages_sentEncryptedFile();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in messages_SentEncryptedMessage", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_messages_sentEncryptedMessage extends messages_SentEncryptedMessage {
@@ -5316,27 +4791,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public InputPhotoCrop crop;
         public InputFile file;
 
-        public static InputChatPhoto TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            InputChatPhoto result = null;
-            switch(constructor) {
-                case 0xb2e1bf08:
-                    result = new TL_inputChatPhoto();
-                    break;
-                case 0x1ca48f57:
-                    result = new TL_inputChatPhotoEmpty();
-                    break;
-                case 0x94254732:
-                    result = new TL_inputChatUploadedPhoto();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in InputChatPhoto", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputChatPhoto extends InputChatPhoto {
@@ -5481,18 +4936,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
         public TL_protoMessage orig_message;
 
-        public static TL_msg_copy TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_msg_copy.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_msg_copy", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_msg_copy result = new TL_msg_copy();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             orig_message = TL_protoMessage.TLdeserialize(stream, stream.readInt32(exception), exception);
@@ -5673,18 +5117,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public long peer;
         public String data;
 
-        public static TL_inputAppEvent TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_inputAppEvent.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_inputAppEvent", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_inputAppEvent result = new TL_inputAppEvent();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             time = stream.readDouble(exception);
@@ -5776,33 +5209,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
     public static class InputNotifyPeer extends TLObject {
 
-        public static InputNotifyPeer TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            InputNotifyPeer result = null;
-            switch(constructor) {
-                case 0x4a95e84e:
-                    result = new TL_inputNotifyChats();
-                    break;
-                case 0xb8bc5b0c:
-                    result = new TL_inputNotifyPeer();
-                    break;
-                case 0x193b4417:
-                    result = new TL_inputNotifyUsers();
-                    break;
-                case 0x4d8ddec8:
-                    result = new TL_inputNotifyGeoChatPeer();
-                    break;
-                case 0xa429b886:
-                    result = new TL_inputNotifyAll();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in InputNotifyPeer", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputNotifyChats extends InputNotifyPeer {
@@ -6448,74 +5855,7 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_account_privacyRules extends TLObject {
-        public static int constructor = 0x554abb6f;
-
-        public ArrayList<PrivacyRule> rules = new ArrayList<>();
-        public ArrayList<User> users = new ArrayList<>();
-
-        public static TL_account_privacyRules TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_account_privacyRules.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_account_privacyRules", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_account_privacyRules result = new TL_account_privacyRules();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                PrivacyRule object = PrivacyRule.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                rules.add(object);
-            }
-            magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                User object = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                users.add(object);
-            }
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = rules.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                rules.get(a).serializeToStream(stream);
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = users.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                users.get(a).serializeToStream(stream);
-            }
-        }
-    }
 
     public static class TL_auth_exportedAuthorization extends TLObject {
         public static int constructor = 0xdf969c2d;
@@ -6555,33 +5895,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int local_id;
         public long secret;
 
-        public static InputFileLocation TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            InputFileLocation result = null;
-            switch(constructor) {
-                case 0x74dc404d:
-                    result = new TL_inputAudioFileLocation();
-                    break;
-                case 0xf5235d55:
-                    result = new TL_inputEncryptedFileLocation();
-                    break;
-                case 0x3d0364ec:
-                    result = new TL_inputVideoFileLocation();
-                    break;
-                case 0x4e45abe9:
-                    result = new TL_inputDocumentFileLocation();
-                    break;
-                case 0x14637196:
-                    result = new TL_inputFileLocation();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in InputFileLocation", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputAudioFileLocation extends InputFileLocation {
@@ -6889,39 +6203,10 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_help_support extends TLObject {
-        public static int constructor = 0x17c6b5f6;
 
-        public String phone_number;
-        public User user;
 
-        public static TL_help_support TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_help_support.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_help_support", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_help_support result = new TL_help_support();
-            result.readParams(stream, exception);
-            return result;
-        }
 
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            phone_number = stream.readString(exception);
-            user = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            user.serializeToStream(stream);
-        }
-    }
-
-
-    public static class Bool extends TLObject {
+    public static class Bool extends TLObject {
 
         public static Bool TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
             Bool result = null;
@@ -7792,18 +7077,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
         public ArrayList<Long> msg_ids = new ArrayList<>();
 
-        public static TL_msgs_state_req TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_msgs_state_req.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_msgs_state_req", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_msgs_state_req result = new TL_msgs_state_req();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             int magic = stream.readInt32(exception);
@@ -8501,75 +7775,14 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_msgs_all_info extends TLObject {
-        public static int constructor = 0x8cc0d131;
-
-        public ArrayList<Long> msg_ids = new ArrayList<>();
-        public String info;
-
-        public static TL_msgs_all_info TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_msgs_all_info.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_msgs_all_info", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_msgs_all_info result = new TL_msgs_all_info();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                msg_ids.add(stream.readInt64(exception));
-            }
-            info = stream.readString(exception);
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = msg_ids.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt64(msg_ids.get(a));
-            }
-            stream.writeString(info);
-        }
-    }
 
     public static class contacts_Blocked extends TLObject {
         public ArrayList<TL_contactBlocked> blocked = new ArrayList<>();
         public ArrayList<User> users = new ArrayList<>();
         public int count;
 
-        public static contacts_Blocked TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            contacts_Blocked result = null;
-            switch(constructor) {
-                case 0x1c138d15:
-                    result = new TL_contacts_blocked();
-                    break;
-                case 0x900802a1:
-                    result = new TL_contacts_blockedSlice();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in contacts_Blocked", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_contacts_blocked extends contacts_Blocked {
@@ -9704,18 +8917,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public byte[] server_nonce;
         public byte[] new_nonce;
 
-        public static TL_p_q_inner_data TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_p_q_inner_data.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_p_q_inner_data", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_p_q_inner_data result = new TL_p_q_inner_data();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             pq = stream.readByteArray(exception);
@@ -9790,24 +8992,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public ArrayList<TL_contact> contacts = new ArrayList<>();
         public ArrayList<User> users = new ArrayList<>();
 
-        public static contacts_Contacts TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            contacts_Contacts result = null;
-            switch(constructor) {
-                case 0xb74ba9d2:
-                    result = new TL_contacts_contactsNotModified();
-                    break;
-                case 0x6f8b8cb2:
-                    result = new TL_contacts_contacts();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in contacts_Contacts", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_contacts_contactsNotModified extends contacts_Contacts {
@@ -10233,24 +9418,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
     public static class InputPeerNotifyEvents extends TLObject {
 
-        public static InputPeerNotifyEvents TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            InputPeerNotifyEvents result = null;
-            switch(constructor) {
-                case 0xe86a2c74:
-                    result = new TL_inputPeerNotifyEventsAll();
-                    break;
-                case 0xf03064d8:
-                    result = new TL_inputPeerNotifyEventsEmpty();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in InputPeerNotifyEvents", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputPeerNotifyEventsAll extends InputPeerNotifyEvents {
@@ -10277,18 +9445,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public long req_msg_id;
         public String info;
 
-        public static TL_msgs_state_info TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_msgs_state_info.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_msgs_state_info", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_msgs_state_info result = new TL_msgs_state_info();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             req_msg_id = stream.readInt64(exception);
@@ -10815,74 +9972,7 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_contacts_found extends TLObject {
-        public static int constructor = 0x566000e;
-
-        public ArrayList<TL_contactFound> results = new ArrayList<>();
-        public ArrayList<User> users = new ArrayList<>();
-
-        public static TL_contacts_found TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_contacts_found.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_found", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_contacts_found result = new TL_contacts_found();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                TL_contactFound object = TL_contactFound.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                results.add(object);
-            }
-            magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                User object = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                users.add(object);
-            }
-        }
 
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = results.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                results.get(a).serializeToStream(stream);
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = users.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                users.get(a).serializeToStream(stream);
-            }
-        }
-    }
 
     public static class Document extends TLObject {
         public long id;
@@ -11105,39 +10195,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
     public static class MessagesFilter extends TLObject {
 
-        public static MessagesFilter TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            MessagesFilter result = null;
-            switch(constructor) {
-                case 0x9eddf188:
-                    result = new TL_inputMessagesFilterDocument();
-                    break;
-                case 0x9fc00e65:
-                    result = new TL_inputMessagesFilterVideo();
-                    break;
-                case 0x9609a51c:
-                    result = new TL_inputMessagesFilterPhotos();
-                    break;
-                case 0xd95e73bb:
-                    result = new TL_inputMessagesFilterPhotoVideoDocuments();
-                    break;
-                case 0xcfc87522:
-                    result = new TL_inputMessagesFilterAudio();
-                    break;
-                case 0x57e2f66c:
-                    result = new TL_inputMessagesFilterEmpty();
-                    break;
-                case 0x56e9f0e4:
-                    result = new TL_inputMessagesFilterPhotoVideo();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in MessagesFilter", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_inputMessagesFilterDocument extends MessagesFilter {
@@ -11284,18 +10342,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public int wait_after;
         public int max_wait;
 
-        public static TL_http_wait TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_http_wait.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_http_wait", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_http_wait result = new TL_http_wait();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             max_delay = stream.readInt32(exception);
@@ -11594,24 +10641,7 @@ public void serializeToStream(AbsSerializedData stream) {
 
     public static class PeerNotifyEvents extends TLObject {
 
-        public static PeerNotifyEvents TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            PeerNotifyEvents result = null;
-            switch(constructor) {
-                case 0xadd53cb3:
-                    result = new TL_peerNotifyEventsEmpty();
-                    break;
-                case 0x6d1ded88:
-                    result = new TL_peerNotifyEventsAll();
-                    break;
-            }
-            if (result == null && exception) {
-                throw new RuntimeException(String.format("can't parse magic %x in PeerNotifyEvents", constructor));
-            }
-            if (result != null) {
-                result.readParams(stream, exception);
-            }
-            return result;
-        }
+
     }
 
     public static class TL_peerNotifyEventsEmpty extends PeerNotifyEvents {
@@ -11853,18 +10883,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public long retry_id;
         public byte[] g_b;
 
-        public static TL_client_DH_inner_data TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_client_DH_inner_data.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_client_DH_inner_data", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_client_DH_inner_data result = new TL_client_DH_inner_data();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void readParams(AbsSerializedData stream, boolean exception) {
             nonce = stream.readData(16, exception);
@@ -11886,18 +10905,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public static int constructor = 0x56730bcc;
 
 
-        public static TL_null TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_null.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_null", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_null result = new TL_null();
-            result.readParams(stream, exception);
-            return result;
-        }
+
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
@@ -12127,95 +11135,10 @@ public void serializeToStream(AbsSerializedData stream) {
         }
     }
 
-    public static class TL_contacts_importedContacts extends TLObject {
-        public static int constructor = 0xad524315;
 
-        public ArrayList<TL_importedContact> imported = new ArrayList<>();
-        public ArrayList<Long> retry_contacts = new ArrayList<>();
-        public ArrayList<User> users = new ArrayList<>();
 
-        public static TL_contacts_importedContacts TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_contacts_importedContacts.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_contacts_importedContacts", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_contacts_importedContacts result = new TL_contacts_importedContacts();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                TL_importedContact object = TL_importedContact.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                imported.add(object);
-            }
-            magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                retry_contacts.add(stream.readInt64(exception));
-            }
-            magic = stream.readInt32(exception);
-            if (magic != 0x1cb5c415) {
-                if (exception) {
-                    throw new RuntimeException(String.format("wrong Vector magic, got %x", magic));
-                }
-                return;
-            }
-            count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                User object = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return;
-                }
-                users.add(object);
-            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = imported.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                imported.get(a).serializeToStream(stream);
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = retry_contacts.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt64(retry_contacts.get(a));
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = users.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                users.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
-    public static class PrivacyRule extends TLObject {
-        public ArrayList<Integer> users = new ArrayList<>();
+    public static class PrivacyRule extends TLObject {
+        public ArrayList<Integer> users = new ArrayList<>();
 
         public static PrivacyRule TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
             PrivacyRule result = null;
@@ -12448,2114 +11371,16 @@ public void readParams(AbsSerializedData stream, boolean exception) {
 
         public void serializeToStream(AbsSerializedData stream) {
             stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeInt32(flags);
-        }
-    }
-
-    public static class TL_req_pq extends TLObject {
-        public static int constructor = 0x60469778;
-
-        public byte[] nonce;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_resPQ.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeRaw(nonce);
-        }
-    }
-
-    public static class TL_req_DH_params extends TLObject {
-        public static int constructor = 0xd712e4be;
-
-        public byte[] nonce;
-        public byte[] server_nonce;
-        public byte[] p;
-        public byte[] q;
-        public long public_key_fingerprint;
-        public byte[] encrypted_data;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Server_DH_Params.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeRaw(nonce);
-            stream.writeRaw(server_nonce);
-            stream.writeByteArray(p);
-            stream.writeByteArray(q);
-            stream.writeInt64(public_key_fingerprint);
-            stream.writeByteArray(encrypted_data);
-        }
-    }
-
-    public static class TL_auth_checkPhone extends TLObject {
-        public static int constructor = 0x6fe51dfb;
-
-        public String phone_number;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_checkedPhone.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-        }
-    }
-
-    public static class TL_auth_sendCode extends TLObject {
-        public static int constructor = 0x768d5f4d;
-
-        public String phone_number;
-        public int sms_type;
-        public int api_id;
-        public String api_hash;
-        public String lang_code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return auth_SentCode.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeInt32(sms_type);
-            stream.writeInt32(api_id);
-            stream.writeString(api_hash);
-            stream.writeString(lang_code);
-        }
-    }
-
-    public static class TL_auth_sendCall extends TLObject {
-        public static int constructor = 0x3c51564;
-
-        public String phone_number;
-        public String phone_code_hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeString(phone_code_hash);
-        }
-    }
-
-    public static class TL_auth_signUp extends TLObject {
-        public static int constructor = 0x1b067634;
-
-        public String phone_number;
-        public String phone_code_hash;
-        public String phone_code;
-        public String first_name;
-        public String last_name;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_authorization.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeString(phone_code_hash);
-            stream.writeString(phone_code);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-        }
-    }
-
-    public static class TL_auth_signIn extends TLObject {
-        public static int constructor = 0xbcd51581;
-
-        public String phone_number;
-        public String phone_code_hash;
-        public String phone_code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_authorization.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeString(phone_code_hash);
-            stream.writeString(phone_code);
-        }
-    }
-
-    public static class TL_auth_logOut extends TLObject {
-        public static int constructor = 0x5717da40;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_auth_resetAuthorizations extends TLObject {
-        public static int constructor = 0x9fab0d1a;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_auth_sendInvites extends TLObject {
-        public static int constructor = 0x771c1d97;
-
-        public ArrayList<String> phone_numbers = new ArrayList<>();
-        public String message;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = phone_numbers.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeString(phone_numbers.get(a));
-            }
-            stream.writeString(message);
-        }
-    }
-
-    public static class TL_auth_exportAuthorization extends TLObject {
-        public static int constructor = 0xe5bfffcd;
-
-        public int dc_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_exportedAuthorization.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(dc_id);
-        }
-    }
-
-    public static class TL_auth_importAuthorization extends TLObject {
-        public static int constructor = 0xe3ef9613;
-
-        public int id;
-        public byte[] bytes;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_authorization.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(id);
-            stream.writeByteArray(bytes);
-        }
-    }
-
-    public static class TL_auth_bindTempAuthKey extends TLObject {
-        public static int constructor = 0xcdd42a05;
-
-        public long perm_auth_key_id;
-        public long nonce;
-        public int expires_at;
-        public byte[] encrypted_message;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(perm_auth_key_id);
-            stream.writeInt64(nonce);
-            stream.writeInt32(expires_at);
-            stream.writeByteArray(encrypted_message);
-        }
-    }
-
-    public static class TL_account_registerDevice extends TLObject {
-        public static int constructor = 0x446c712c;
-
-        public int token_type;
-        public String token;
-        public String device_model;
-        public String system_version;
-        public String app_version;
-        public boolean app_sandbox;
-        public String lang_code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(token_type);
-            stream.writeString(token);
-            stream.writeString(device_model);
-            stream.writeString(system_version);
-            stream.writeString(app_version);
-            stream.writeBool(app_sandbox);
-            stream.writeString(lang_code);
-        }
-    }
-
-    public static class TL_account_unregisterDevice extends TLObject {
-        public static int constructor = 0x65c55b40;
-
-        public int token_type;
-        public String token;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(token_type);
-            stream.writeString(token);
-        }
-    }
-
-    public static class TL_account_updateNotifySettings extends TLObject {
-        public static int constructor = 0x84be5b93;
-
-        public InputNotifyPeer peer;
-        public TL_inputPeerNotifySettings settings;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            settings.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_account_getNotifySettings extends TLObject {
-        public static int constructor = 0x12b3ad31;
-
-        public InputNotifyPeer peer;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return PeerNotifySettings.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_account_resetNotifySettings extends TLObject {
-        public static int constructor = 0xdb7e1747;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_account_updateProfile extends TLObject {
-        public static int constructor = 0xf0888d68;
-
-        public String first_name;
-        public String last_name;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return User.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(first_name);
-            stream.writeString(last_name);
-        }
-    }
-
-    public static class TL_account_updateStatus extends TLObject {
-        public static int constructor = 0x6628562c;
-
-        public boolean offline;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeBool(offline);
-        }
-    }
-
-    public static class TL_account_getWallPapers extends TLObject {
-        public static int constructor = 0xc04cfac2;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                WallPaper object = WallPaper.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return vector;
-                }
-                vector.objects.add(object);
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_users_getUsers extends TLObject {
-        public static int constructor = 0xd91a548;
-
-        public ArrayList<InputUser> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                User object = User.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return vector;
-                }
-                vector.objects.add(object);
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                id.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
-    public static class TL_users_getFullUser extends TLObject {
-        public static int constructor = 0xca30a5b1;
-
-        public InputUser id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_userFull.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            id.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_contacts_getStatuses extends TLObject {
-        public static int constructor = 0xc4a353ee;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                TL_contactStatus object = TL_contactStatus.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return vector;
-                }
-                vector.objects.add(object);
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_contacts_getContacts extends TLObject {
-        public static int constructor = 0x22c6aa08;
-
-        public String hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return contacts_Contacts.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(hash);
-        }
-    }
-
-
-    public static class TL_contacts_getSuggested extends TLObject {
-        public static int constructor = 0xcd773428;
-
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_contacts_suggested.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_contacts_deleteContact extends TLObject {
-        public static int constructor = 0x8e953744;
-
-        public InputUser id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_contacts_link.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            id.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_contacts_deleteContacts extends TLObject {
-        public static int constructor = 0x59ab389e;
-
-        public ArrayList<InputUser> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                id.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
-    public static class TL_contacts_block extends TLObject {
-        public static int constructor = 0x332b49fc;
-
-        public InputUser id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            id.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_contacts_unblock extends TLObject {
-        public static int constructor = 0xe54100bd;
-
-        public InputUser id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            id.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_contacts_getBlocked extends TLObject {
-        public static int constructor = 0xf57c350f;
-
-        public int offset;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return contacts_Blocked.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(offset);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_contacts_exportCard extends TLObject {
-        public static int constructor = 0x84e53737;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                vector.objects.add(stream.readInt32(exception));
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_contacts_importCard extends TLObject {
-        public static int constructor = 0x4fe196fe;
-
-        public ArrayList<Integer> export_card = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return User.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = export_card.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt32(export_card.get(a));
-            }
-        }
-    }
-
-    public static class TL_messages_getMessages extends TLObject {
-        public static int constructor = 0x4222fa74;
-
-        public ArrayList<Integer> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_Messages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt32(id.get(a));
-            }
-        }
-    }
-
-    public static class TL_messages_getDialogs extends TLObject {
-        public static int constructor = 0xeccf1df6;
-
-        public int offset;
-        public int max_id;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_Dialogs.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(offset);
-            stream.writeInt32(max_id);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_messages_getHistory extends TLObject {
-        public static int constructor = 0x92a1df2f;
-
-        public InputPeer peer;
-        public int offset;
-        public int max_id;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_Messages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(offset);
-            stream.writeInt32(max_id);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_messages_search extends TLObject {
-        public static int constructor = 0x7e9f2ab;
-
-        public InputPeer peer;
-        public String q;
-        public MessagesFilter filter;
-        public int min_date;
-        public int max_date;
-        public int offset;
-        public int max_id;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_Messages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeString(q);
-            filter.serializeToStream(stream);
-            stream.writeInt32(min_date);
-            stream.writeInt32(max_date);
-            stream.writeInt32(offset);
-            stream.writeInt32(max_id);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_messages_readHistory extends TLObject {
-        public static int constructor = 0xb04f2510;
-
-        public InputPeer peer;
-        public int max_id;
-        public int offset;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_affectedHistory.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(max_id);
-            stream.writeInt32(offset);
-        }
-    }
-
-    public static class TL_messages_deleteHistory extends TLObject {
-        public static int constructor = 0xf4f8fb61;
-
-        public InputPeer peer;
-        public int offset;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_affectedHistory.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(offset);
-        }
-    }
-
-    public static class TL_messages_deleteMessages extends TLObject {
-        public static int constructor = 0xa5f18925;
-
-        public ArrayList<Integer> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_affectedMessages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt32(id.get(a));
-            }
-        }
-    }
-
-    public static class TL_messages_receivedMessages extends TLObject {
-        public static int constructor = 0x5a954c0;
-
-        public int max_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                TL_receivedNotifyMessage object = TL_receivedNotifyMessage.TLdeserialize(stream, stream.readInt32(exception), exception);
-                if (object == null) {
-                    return vector;
-                }
-                vector.objects.add(object);
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(max_id);
-        }
-    }
-
-    public static class TL_messages_setTyping extends TLObject {
-        public static int constructor = 0xa3825e50;
-
-        public InputPeer peer;
-        public SendMessageAction action;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            action.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_messages_sendMessage extends TLObject {
-        public static int constructor = 0x9add8f26;
-
-        public int flags;
-        public InputPeer peer;
-        public int reply_to_msg_id;
-        public String message;
-        public long random_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_SentMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(flags);
-            peer.serializeToStream(stream);
-            if ((flags & 1) != 0) {
-                stream.writeInt32(reply_to_msg_id);
-            }
-            stream.writeString(message);
-            stream.writeInt64(random_id);
-        }
-    }
-
-    public static class TL_messages_sendMedia extends TLObject {
-        public static int constructor = 0x2d7923b1;
-
-        public int flags;
-        public InputPeer peer;
-        public int reply_to_msg_id;
-        public InputMedia media;
-        public long random_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(flags);
-            peer.serializeToStream(stream);
-            if ((flags & 1) != 0) {
-                stream.writeInt32(reply_to_msg_id);
-            }
-            media.serializeToStream(stream);
-            stream.writeInt64(random_id);
-        }
-    }
-
-    public static class TL_messages_forwardMessages extends TLObject {
-        public static int constructor = 0x55e1728d;
-
-        public InputPeer peer;
-        public ArrayList<Integer> id = new ArrayList<>();
-        public ArrayList<Long> random_id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt32(id.get(a));
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = random_id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt64(random_id.get(a));
-            }
-        }
-    }
-
-    public static class TL_messages_getChats extends TLObject {
-        public static int constructor = 0x3c6aa187;
-
-        public ArrayList<Integer> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_chats.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt32(id.get(a));
-            }
-        }
-    }
-
-    public static class TL_messages_getFullChat extends TLObject {
-        public static int constructor = 0x3b831c66;
-
-        public int chat_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_chatFull.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-        }
-    }
-
-    public static class TL_messages_editChatTitle extends TLObject {
-        public static int constructor = 0xdc452855;
-
-        public int chat_id;
-        public String title;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-            stream.writeString(title);
-        }
-    }
-
-    public static class TL_messages_editChatPhoto extends TLObject {
-        public static int constructor = 0xca4c79d8;
-
-        public int chat_id;
-        public InputChatPhoto photo;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-            photo.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_messages_addChatUser extends TLObject {
-        public static int constructor = 0xf9a0aa09;
-
-        public int chat_id;
-        public InputUser user_id;
-        public int fwd_limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-            user_id.serializeToStream(stream);
-            stream.writeInt32(fwd_limit);
-        }
-    }
-
-    public static class TL_messages_deleteChatUser extends TLObject {
-        public static int constructor = 0xe0611f16;
-
-        public int chat_id;
-        public InputUser user_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-            user_id.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_messages_createChat extends TLObject {
-        public static int constructor = 0x9cb126e;
-
-        public ArrayList<InputUser> users = new ArrayList<>();
-        public String title;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = users.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                users.get(a).serializeToStream(stream);
-            }
-            stream.writeString(title);
-        }
-    }
-
-    public static class TL_updates_getState extends TLObject {
-        public static int constructor = 0xedd4882a;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_updates_state.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_updates_getDifference extends TLObject {
-        public static int constructor = 0xa041495;
-
-        public int pts;
-        public int date;
-        public int qts;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return updates_Difference.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(pts);
-            stream.writeInt32(date);
-            stream.writeInt32(qts);
-        }
-    }
-
-    public static class TL_photos_updateProfilePhoto extends TLObject {
-        public static int constructor = 0xeef579a0;
-
-        public InputPhoto id;
-        public InputPhotoCrop crop;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return UserProfilePhoto.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            id.serializeToStream(stream);
-            crop.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_photos_uploadProfilePhoto extends TLObject {
-        public static int constructor = 0xd50f9c88;
-
-        public InputFile file;
-        public String caption;
-        public InputGeoPoint geo_point;
-        public InputPhotoCrop crop;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_photos_photo.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            file.serializeToStream(stream);
-            stream.writeString(caption);
-            geo_point.serializeToStream(stream);
-            crop.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_photos_deletePhotos extends TLObject {
-        public static int constructor = 0x87cf7f2f;
-
-        public ArrayList<InputPhoto> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                vector.objects.add(stream.readInt64(exception));
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                id.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
-    public static class TL_upload_getFile extends TLObject {
-        public static int constructor = 0xe3a6cfb5;
-
-        public InputFileLocation location;
-        public int offset;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_upload_file.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            location.serializeToStream(stream);
-            stream.writeInt32(offset);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_help_getConfig extends TLObject {
-        public static int constructor = 0xc4f9186b;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_config.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_help_getNearestDc extends TLObject {
-        public static int constructor = 0x1fb33026;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_nearestDc.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_help_getAppUpdate extends TLObject {
-        public static int constructor = 0xc812ac7e;
-
-        public String device_model;
-        public String system_version;
-        public String app_version;
-        public String lang_code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return help_AppUpdate.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(device_model);
-            stream.writeString(system_version);
-            stream.writeString(app_version);
-            stream.writeString(lang_code);
-        }
-    }
-
-    public static class TL_help_saveAppLog extends TLObject {
-        public static int constructor = 0x6f02f748;
-
-        public ArrayList<TL_inputAppEvent> events = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = events.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                events.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
-    public static class TL_help_getInviteText extends TLObject {
-        public static int constructor = 0xa4a95186;
-
-        public String lang_code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_help_inviteText.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(lang_code);
-        }
-    }
-
-    public static class TL_photos_getUserPhotos extends TLObject {
-        public static int constructor = 0xb7ee553c;
-
-        public InputUser user_id;
-        public int offset;
-        public int max_id;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return photos_Photos.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            user_id.serializeToStream(stream);
-            stream.writeInt32(offset);
-            stream.writeInt32(max_id);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_messages_forwardMessage extends TLObject {
-        public static int constructor = 0x33963bf9;
-
-        public InputPeer peer;
-        public int id;
-        public long random_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(id);
-            stream.writeInt64(random_id);
-        }
-    }
-
-    public static class TL_messages_sendBroadcast extends TLObject {
-        public static int constructor = 0xbf73f4da;
-
-        public ArrayList<InputUser> contacts = new ArrayList<>();
-        public ArrayList<Long> random_id = new ArrayList<>();
-        public String message;
-        public InputMedia media;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = contacts.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                contacts.get(a).serializeToStream(stream);
-            }
-            stream.writeInt32(0x1cb5c415);
-            count = random_id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt64(random_id.get(a));
-            }
-            stream.writeString(message);
-            media.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_geochats_getLocated extends TLObject {
-        public static int constructor = 0x7f192d8f;
-
-        public InputGeoPoint geo_point;
-        public int radius;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_located.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            geo_point.serializeToStream(stream);
-            stream.writeInt32(radius);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_geochats_getRecents extends TLObject {
-        public static int constructor = 0xe1427e6f;
-
-        public int offset;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return geochats_Messages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(offset);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_geochats_checkin extends TLObject {
-        public static int constructor = 0x55b3e8fb;
-
-        public TL_inputGeoChat peer;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_statedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_geochats_getFullChat extends TLObject {
-        public static int constructor = 0x6722dd6f;
-
-        public TL_inputGeoChat peer;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_chatFull.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_geochats_editChatTitle extends TLObject {
-        public static int constructor = 0x4c8e2273;
-
-        public TL_inputGeoChat peer;
-        public String title;
-        public String address;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_statedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeString(title);
-            stream.writeString(address);
-        }
-    }
-
-    public static class TL_geochats_editChatPhoto extends TLObject {
-        public static int constructor = 0x35d81a95;
-
-        public TL_inputGeoChat peer;
-        public InputChatPhoto photo;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_statedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            photo.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_geochats_search extends TLObject {
-        public static int constructor = 0xcfcdc44d;
-
-        public TL_inputGeoChat peer;
-        public String q;
-        public MessagesFilter filter;
-        public int min_date;
-        public int max_date;
-        public int offset;
-        public int max_id;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return geochats_Messages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeString(q);
-            filter.serializeToStream(stream);
-            stream.writeInt32(min_date);
-            stream.writeInt32(max_date);
-            stream.writeInt32(offset);
-            stream.writeInt32(max_id);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_geochats_getHistory extends TLObject {
-        public static int constructor = 0xb53f7a68;
-
-        public TL_inputGeoChat peer;
-        public int offset;
-        public int max_id;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return geochats_Messages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(offset);
-            stream.writeInt32(max_id);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_geochats_setTyping extends TLObject {
-        public static int constructor = 0x8b8a729;
-
-        public TL_inputGeoChat peer;
-        public boolean typing;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeBool(typing);
-        }
-    }
-
-    public static class TL_geochats_sendMessage extends TLObject {
-        public static int constructor = 0x61b0044;
-
-        public TL_inputGeoChat peer;
-        public String message;
-        public long random_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_statedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeString(message);
-            stream.writeInt64(random_id);
-        }
-    }
-
-    public static class TL_geochats_sendMedia extends TLObject {
-        public static int constructor = 0xb8f0deff;
-
-        public TL_inputGeoChat peer;
-        public InputMedia media;
-        public long random_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_statedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            media.serializeToStream(stream);
-            stream.writeInt64(random_id);
-        }
-    }
-
-    public static class TL_geochats_createGeoChat extends TLObject {
-        public static int constructor = 0xe092e16;
-
-        public String title;
-        public InputGeoPoint geo_point;
-        public String address;
-        public String venue;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_geochats_statedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(title);
-            geo_point.serializeToStream(stream);
-            stream.writeString(address);
-            stream.writeString(venue);
-        }
-    }
-
-    public static class TL_messages_getDhConfig extends TLObject {
-        public static int constructor = 0x26cf8950;
-
-        public int version;
-        public int random_length;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_DhConfig.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(version);
-            stream.writeInt32(random_length);
-        }
-    }
-
-    public static class TL_messages_requestEncryption extends TLObject {
-        public static int constructor = 0xf64daf43;
-
-        public InputUser user_id;
-        public int random_id;
-        public byte[] g_a;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return EncryptedChat.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            user_id.serializeToStream(stream);
-            stream.writeInt32(random_id);
-            stream.writeByteArray(g_a);
-        }
-    }
-
-    public static class TL_messages_acceptEncryption extends TLObject {
-        public static int constructor = 0x3dbc0415;
-
-        public TL_inputEncryptedChat peer;
-        public byte[] g_b;
-        public long key_fingerprint;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return EncryptedChat.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeByteArray(g_b);
-            stream.writeInt64(key_fingerprint);
-        }
-    }
-
-    public static class TL_messages_discardEncryption extends TLObject {
-        public static int constructor = 0xedd923c5;
-
-        public int chat_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-        }
-    }
-
-    public static class TL_messages_setEncryptedTyping extends TLObject {
-        public static int constructor = 0x791451ed;
-
-        public TL_inputEncryptedChat peer;
-        public boolean typing;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeBool(typing);
-        }
-    }
-
-    public static class TL_messages_readEncryptedHistory extends TLObject {
-        public static int constructor = 0x7f4b690a;
-
-        public TL_inputEncryptedChat peer;
-        public int max_date;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt32(max_date);
-        }
-    }
-
-    public static class TL_messages_receivedQueue extends TLObject {
-        public static int constructor = 0x55a5bb66;
-
-        public int max_qts;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            Vector vector = new Vector();
-            int size = stream.readInt32(exception);
-            for (int a = 0; a < size; a++) {
-                vector.objects.add(stream.readInt64(exception));
-            }
-            return vector;
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(max_qts);
-        }
-    }
-
-    public static class TL_help_getSupport extends TLObject {
-        public static int constructor = 0x9cdf08cd;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_help_support.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_auth_sendSms extends TLObject {
-        public static int constructor = 0xda9f3e8;
-
-        public String phone_number;
-        public String phone_code_hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeString(phone_code_hash);
-        }
-    }
-
-    public static class TL_messages_readMessageContents extends TLObject {
-        public static int constructor = 0x36a73f77;
-
-        public ArrayList<Integer> id = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_affectedMessages.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(0x1cb5c415);
-            int count = id.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                stream.writeInt32(id.get(a));
-            }
-        }
-    }
-
-    public static class TL_account_checkUsername extends TLObject {
-        public static int constructor = 0x2714d86c;
-
-        public String username;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(username);
-        }
-    }
-
-    public static class TL_account_updateUsername extends TLObject {
-        public static int constructor = 0x3e0bdd7c;
-
-        public String username;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return User.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(username);
-        }
-    }
-
-    public static class TL_contacts_search extends TLObject {
-        public static int constructor = 0x11f812d8;
-
-        public String q;
-        public int limit;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_contacts_found.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(q);
-            stream.writeInt32(limit);
-        }
-    }
-
-    public static class TL_account_getPrivacy extends TLObject {
-        public static int constructor = 0xdadbc950;
-
-        public TL_inputPrivacyKeyStatusTimestamp key;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_account_privacyRules.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            key.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_account_setPrivacy extends TLObject {
-        public static int constructor = 0xc9f81ce8;
-
-        public TL_inputPrivacyKeyStatusTimestamp key;
-        public ArrayList<InputPrivacyRule> rules = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_account_privacyRules.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            key.serializeToStream(stream);
-            stream.writeInt32(0x1cb5c415);
-            int count = rules.size();
-            stream.writeInt32(count);
-            for (int a = 0; a < count; a++) {
-                rules.get(a).serializeToStream(stream);
-            }
-        }
-    }
-
-    public static class TL_account_deleteAccount extends TLObject {
-        public static int constructor = 0x418d4e0b;
-
-        public String reason;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(reason);
-        }
-    }
-
-    public static class TL_account_getAccountTTL extends TLObject {
-        public static int constructor = 0x8fc711d;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_accountDaysTTL.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_account_setAccountTTL extends TLObject {
-        public static int constructor = 0x2442485e;
-
-        public TL_accountDaysTTL ttl;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            ttl.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_contacts_resolveUsername extends TLObject {
-        public static int constructor = 0xbf0131c;
-
-        public String username;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return User.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(username);
-        }
-    }
-
-    public static class TL_account_sendChangePhoneCode extends TLObject {
-        public static int constructor = 0xa407a8f4;
-
-        public String phone_number;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_account_sentChangePhoneCode.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-        }
-    }
-
-    public static class TL_account_changePhone extends TLObject {
-        public static int constructor = 0x70c32edb;
-
-        public String phone_number;
-        public String phone_code_hash;
-        public String phone_code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return User.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(phone_number);
-            stream.writeString(phone_code_hash);
-            stream.writeString(phone_code);
-        }
-    }
-
-    public static class TL_messages_getStickers extends TLObject {
-        public static int constructor = 0xae22e045;
-
-        public String emoticon;
-        public String hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_Stickers.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(emoticon);
-            stream.writeString(hash);
-        }
-    }
-
-    public static class TL_messages_getAllStickers extends TLObject {
-        public static int constructor = 0xaa3bc868;
-
-        public String hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_AllStickers.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(hash);
-        }
-    }
-
-    public static class TL_account_updateDeviceLocked extends TLObject {
-        public static int constructor = 0x38df3532;
-
-        public int period;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(period);
-        }
-    }
-
-    public static class TL_messages_getWebPagePreview extends TLObject {
-        public static int constructor = 0x25223e24;
-
-        public String message;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return MessageMedia.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(message);
-        }
-    }
-
-    public static class TL_account_getAuthorizations extends TLObject {
-        public static int constructor = 0xe320c158;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_account_authorizations.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_account_resetAuthorization extends TLObject {
-        public static int constructor = 0xdf77f3bc;
-
-        public long hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(hash);
-        }
-    }
-
-    public static class TL_account_getPassword extends TLObject {
-        public static int constructor = 0x548a30f5;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return account_Password.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_account_getPasswordSettings extends TLObject {
-        public static int constructor = 0xbc8d11bb;
-
-        public byte[] current_password_hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_account_passwordSettings.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeByteArray(current_password_hash);
-        }
-    }
-
-    public static class TL_account_updatePasswordSettings extends TLObject {
-        public static int constructor = 0xfa7c4b86;
-
-        public byte[] current_password_hash;
-        public TL_account_passwordInputSettings new_settings;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeByteArray(current_password_hash);
-            new_settings.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_auth_checkPassword extends TLObject {
-        public static int constructor = 0xa63011e;
-
-        public byte[] password_hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_authorization.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeByteArray(password_hash);
-        }
-    }
-
-    public static class TL_auth_requestPasswordRecovery extends TLObject {
-        public static int constructor = 0xd897bc66;
-
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_passwordRecovery.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-        }
-    }
-
-    public static class TL_auth_recoverPassword extends TLObject {
-        public static int constructor = 0x4ea56e92;
-
-        public String code;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_auth_authorization.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(code);
-        }
-    }
-
-    public static class TL_messages_exportChatInvite extends TLObject {
-        public static int constructor = 0x7d885289;
-
-        public int chat_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return ExportedChatInvite.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(chat_id);
-        }
-    }
-
-    public static class TL_messages_checkChatInvite extends TLObject {
-        public static int constructor = 0x3eadb1bb;
-
-        public String hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return ChatInvite.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(hash);
-        }
-    }
-
-    public static class TL_messages_importChatInvite extends TLObject {
-        public static int constructor = 0x6c50051c;
-
-        public String hash;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Updates.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeString(hash);
-        }
-    }
-
-    public static class TL_messages_getStickerSet extends TLObject {
-        public static int constructor = 0x2619a90e;
-
-        public InputStickerSet stickerset;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_messages_stickerSet.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stickerset.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_messages_installStickerSet extends TLObject {
-        public static int constructor = 0xefbbfae9;
-
-        public InputStickerSet stickerset;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stickerset.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_messages_uninstallStickerSet extends TLObject {
-        public static int constructor = 0xf96e55de;
-
-        public InputStickerSet stickerset;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stickerset.serializeToStream(stream);
+            stream.writeInt32(id);
+            stream.writeInt32(flags);
         }
     }
 
+
+
+
+
+
     //manually created
 
     //EncryptedChat start
@@ -15027,422 +11852,6 @@ public void serializeToStream(AbsSerializedData stream) {
     }
     //Chat end
 
-    //functions memory optimize
-    public static class TL_upload_saveFilePart extends TLObject {
-        public static int constructor = 0xb304a621;
-
-        public long file_id;
-        public int file_part;
-        public ByteBufferDesc bytes;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(file_id);
-            stream.writeInt32(file_part);
-            stream.writeByteBuffer(bytes);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (bytes != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(bytes);
-                bytes = null;
-            }
-        }
-    }
-
-    public static class TL_upload_saveBigFilePart extends TLObject {
-        public static int constructor = 0xde7b673d;
-
-        public long file_id;
-        public int file_part;
-        public int file_total_parts;
-        public ByteBufferDesc bytes;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Bool.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(file_id);
-            stream.writeInt32(file_part);
-            stream.writeInt32(file_total_parts);
-            stream.writeByteBuffer(bytes);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (bytes != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(bytes);
-                bytes = null;
-            }
-        }
-    }
-
-    public static class TL_upload_file extends TLObject {
-        public static int constructor = 0x96a18d5;
-
-        public storage_FileType type;
-        public int mtime;
-        public ByteBufferDesc bytes;
-
-        public static TL_upload_file TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
-            if (TL_upload_file.constructor != constructor) {
-                if (exception) {
-                    throw new RuntimeException(String.format("can't parse magic %x in TL_upload_file", constructor));
-                } else {
-                    return null;
-                }
-            }
-            TL_upload_file result = new TL_upload_file();
-            result.readParams(stream, exception);
-            return result;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            type = storage_FileType.TLdeserialize(stream, stream.readInt32(exception), exception);
-            mtime = stream.readInt32(exception);
-            bytes = stream.readByteBuffer(exception);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (bytes != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(bytes);
-                bytes = null;
-            }
-        }
-    }
-
-    public static class TL_messages_sendEncryptedFile extends TLObject {
-        public static int constructor = 0x9a901b66;
-
-        public TL_inputEncryptedChat peer;
-        public long random_id;
-        public ByteBufferDesc data;
-        public InputEncryptedFile file;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_SentEncryptedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt64(random_id);
-            stream.writeByteBuffer(data);
-            file.serializeToStream(stream);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (data != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(data);
-                data = null;
-            }
-        }
-    }
-
-    public static class TL_messages_sendEncrypted extends TLObject {
-        public static int constructor = 0xa9776773;
-
-        public TL_inputEncryptedChat peer;
-        public long random_id;
-        public ByteBufferDesc data;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_SentEncryptedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt64(random_id);
-            stream.writeByteBuffer(data);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (data != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(data);
-                data = null;
-            }
-        }
-    }
-
-    public static class TL_messages_sendEncryptedService extends TLObject {
-        public static int constructor = 0x32d439a4;
-
-        public TL_inputEncryptedChat peer;
-        public long random_id;
-        public ByteBufferDesc data;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return messages_SentEncryptedMessage.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            peer.serializeToStream(stream);
-            stream.writeInt64(random_id);
-            stream.writeByteBuffer(data);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (data != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(data);
-                data = null;
-            }
-        }
-    }
-
-    public static class TL_set_client_DH_params extends TLObject {
-        public static int constructor = 0xf5045f1f;
-
-        public byte[] nonce;
-        public byte[] server_nonce;
-        public ByteBufferDesc encrypted_data;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return Set_client_DH_params_answer.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeRaw(nonce);
-            stream.writeRaw(server_nonce);
-            stream.writeByteBuffer(encrypted_data);
-        }
-
-        @Override
-        public void freeResources() {
-            if (disableFree) {
-                return;
-            }
-            if (encrypted_data != null) {
-                BuffersStorage.getInstance().reuseFreeBuffer(encrypted_data);
-                encrypted_data = null;
-            }
-        }
-    }
-
-    //functions
-    public static class invokeWithLayer extends TLObject {
-        public static int constructor = 0xda9b0d0d;
-
-        public int layer = LAYER;
-        public TLObject query;
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(layer);
-            query.serializeToStream(stream);
-        }
-    }
-
-    public static class initConnection extends TLObject {
-        public static int constructor = 0x69796de9;
-
-        public int api_id;
-        public String device_model;
-        public String system_version;
-        public String app_version;
-        public String lang_code;
-        public TLObject query;
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(api_id);
-            stream.writeString(device_model);
-            stream.writeString(system_version);
-            stream.writeString(app_version);
-            stream.writeString(lang_code);
-            query.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_destroy_sessions extends TLObject {
-        public static int constructor = 0xa13dc52f;
-
-        public ArrayList<Long> session_ids = new ArrayList<>();
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_destroy_sessions_res.TLdeserialize(stream, constructor, exception);
-        }
-
-        public int layer() {
-            return 0;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            int count = stream.readInt32(exception);
-            for (int a = 0; a < count; a++) {
-                session_ids.add(stream.readInt64(exception));
-            }
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            int count = session_ids.size();
-            stream.writeInt32(count);
-            for (Long session_id : session_ids) {
-                stream.writeInt64(session_id);
-            }
-        }
-    }
-
-    public static class TL_ping extends TLObject {
-        public static int constructor = 0x7abe77ec;
-
-        public long ping_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_pong.TLdeserialize(stream, constructor, exception);
-        }
-
-        public int layer() {
-            return 0;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            ping_id = stream.readInt64(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(ping_id);
-        }
-    }
-
-    public static class TL_ping_delay_disconnect extends TLObject {
-        public static int constructor = 0xf3427b8c;
-
-        public long ping_id;
-        public int disconnect_delay;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_pong.TLdeserialize(stream, constructor, exception);
-        }
-
-        public int layer() {
-            return 0;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            ping_id = stream.readInt64(exception);
-            disconnect_delay = stream.readInt32(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(ping_id);
-            stream.writeInt32(disconnect_delay);
-        }
-    }
-
-    public static class TL_destroy_session extends TLObject {
-        public static int constructor = 0xe7512126;
-
-        public long session_id;
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return DestroySessionRes.TLdeserialize(stream, constructor, exception);
-        }
-
-        public int layer() {
-            return 0;
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            session_id = stream.readInt64(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(session_id);
-        }
-    }
-
-    public static class TL_invokeAfterMsg extends TLObject {
-        public static int constructor = 0xcb9f372d;
-
-        public long msg_id;
-        public TLObject query;
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(msg_id);
-            query.serializeToStream(stream);
-        }
-    }
-
-    public static class TL_get_future_salts extends TLObject {
-        public static int constructor = 0xb921bd04;
-
-        public int num;
-
-        public int layer() {
-            return 0;
-        }
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return TL_futuresalts.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void readParams(AbsSerializedData stream, boolean exception) {
-            num = stream.readInt32(exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt32(num);
-        }
-    }
-
-    public static class TL_rpc_drop_answer extends TLObject {
-        public static int constructor = 0x58e4a740;
-
-        public long req_msg_id;
-
-        public int layer() {
-            return 0;
-        }
-
-        public TLObject deserializeResponse(AbsSerializedData stream, int constructor, boolean exception) {
-            return RpcDropAnswer.TLdeserialize(stream, constructor, exception);
-        }
-
-        public void serializeToStream(AbsSerializedData stream) {
-            stream.writeInt32(constructor);
-            stream.writeInt64(req_msg_id);
-        }
-    }
-
-
 
 
     public static class TL_futureSalt extends TLObject {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
index e35f5f3ce..e0835661a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
@@ -70,14 +70,6 @@ public AvatarDrawable() {
         }
     }
 
-    public AvatarDrawable(TLRPC.User user) {
-        this(user, false);
-    }
-
-    public AvatarDrawable(TLRPC.Chat chat) {
-        this(chat, false);
-    }
-
     public AvatarDrawable(TLRPC.User user, boolean profile) {
         this();
         isProfile = profile;
@@ -86,14 +78,6 @@ public AvatarDrawable(TLRPC.User user, boolean profile) {
         }
     }
 
-    public AvatarDrawable(TLRPC.Chat chat, boolean profile) {
-        this();
-        isProfile = profile;
-        if (chat != null) {
-            setInfo(chat.id, chat.title, null, chat.id < 0);
-        }
-    }
-
     public void setSmallStyle(boolean value) {
         smallStyle = value;
     }
@@ -155,12 +139,6 @@ public void setInfo(TLRPC.User user) {
         }
     }
 
-    public void setInfo(TLRPC.Chat chat) {
-        if (chat != null) {
-            setInfo(chat.id, chat.title, null, chat.id < 0);
-        }
-    }
-
     public void setColor(int value) {
         color = value;
     }
