diff --git a/TMessagesProj/jni/tgnet/Defines.h b/TMessagesProj/jni/tgnet/Defines.h
index c14003cfd..c3639b6dc 100644
--- a/TMessagesProj/jni/tgnet/Defines.h
+++ b/TMessagesProj/jni/tgnet/Defines.h
@@ -25,7 +25,7 @@
 #define DEFAULT_DATACENTER_ID INT_MAX
 #define DC_UPDATE_TIME 60 * 60
 #define TEMP_AUTH_KEY_EXPIRE_TIME 32 * 60 * 60
-#define PROXY_CONNECTIONS_COUNT 4
+#define PROXY_CONNECTIONS_COUNT 16
 #define DOWNLOAD_CONNECTIONS_COUNT 2
 #define UPLOAD_CONNECTIONS_COUNT 4
 #define CONNECTION_BACKGROUND_KEEP_TIME 10000
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index 0bb417096..c66bc95ff 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -28,10 +28,13 @@
 import android.database.ContentObserver;
 import android.database.Cursor;
 import android.graphics.Bitmap;
+import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Point;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
 import android.graphics.Rect;
 import android.graphics.RectF;
 import android.graphics.Typeface;
@@ -42,6 +45,7 @@
 import android.os.Build;
 import android.os.Environment;
 import android.os.Handler;
+import android.os.SystemClock;
 import android.provider.CallLog;
 import android.provider.DocumentsContract;
 import android.provider.MediaStore;
@@ -74,6 +78,7 @@
 import android.webkit.MimeTypeMap;
 import android.widget.EdgeEffect;
 import android.widget.FrameLayout;
+import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.ScrollView;
@@ -87,6 +92,7 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.tgnet.ConnectionsManager;
+import org.telegram.tgnet.RequestTimeDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.AlertDialog;
@@ -98,6 +104,8 @@
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PickerBottomLayout;
 import org.telegram.ui.Components.TypefaceSpan;
+import org.telegram.ui.ProxyListActivity;
+import org.telegram.ui.ProxySettingsActivity;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayOutputStream;
@@ -149,6 +157,8 @@
     private static RectF bitmapRect;
 
     public static Pattern WEB_URL = null;
+    private static SharedConfig.ProxyInfo proxyInfo = new SharedConfig.ProxyInfo("",1,"","","");
+
     static {
         try {
             final String GOOD_IRI_CHAR = "a-zA-Z0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF";
@@ -2135,17 +2145,179 @@ public static boolean handleProxyIntent(Activity activity, Intent intent) {
         return false;
     }
 
-    public static void showProxyAlert(Activity activity, final String address, final String port, final String user, final String password, final String secret) {
+    public static class TextDetailProxyCell extends FrameLayout {
+
+        private TextView textView;
+        private TextView valueTextView;
+        private ImageView checkImageView;
+        private SharedConfig.ProxyInfo currentInfo;
+        private Drawable checkDrawable;
+
+        private int color;
+
+        public TextDetailProxyCell(Context context) {
+            super(context);
+
+            textView = new TextView(context);
+            textView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));
+            textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+            textView.setLines(1);
+            textView.setMaxLines(1);
+            textView.setSingleLine(true);
+            textView.setEllipsize(TextUtils.TruncateAt.END);
+            textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
+//            addView(textView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, (LocaleController.isRTL ? 56 : 17), 10, (LocaleController.isRTL ? 17 : 56), 0));
+
+            valueTextView = new TextView(context);
+            valueTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
+            valueTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
+            valueTextView.setLines(1);
+            valueTextView.setMaxLines(1);
+            valueTextView.setSingleLine(true);
+            valueTextView.setCompoundDrawablePadding(AndroidUtilities.dp(6));
+            valueTextView.setEllipsize(TextUtils.TruncateAt.END);
+            valueTextView.setPadding(0, 0, 0, 0);
+            addView(valueTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, (LocaleController.isRTL ? 56 : 17), 5, (LocaleController.isRTL ? 17 : 56), 0));
+
+            checkImageView = new ImageView(context);
+            checkImageView.setImageResource(R.drawable.profile_info);
+            checkImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText3), PorterDuff.Mode.MULTIPLY));
+            checkImageView.setScaleType(ImageView.ScaleType.CENTER);
+//            addView(checkImageView, LayoutHelper.createFrame(48, 48, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.TOP, 8, 8, 8, 0));
+            setWillNotDraw(false);
+        }
+
+        @Override
+        protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+            super.onMeasure(MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32) + 1, MeasureSpec.EXACTLY));
+        }
+
+        public void setProxy(SharedConfig.ProxyInfo proxyInfo) {
+            textView.setText(proxyInfo.address + ":" + proxyInfo.port);
+            currentInfo = proxyInfo;
+            updateStatus();
+        }
+
+        public void updateStatus() {
+            String colorKey;
+            final SharedPreferences preferences = MessagesController.getGlobalMainSettings();
+            boolean useProxySettings = preferences.getBoolean("proxy_enabled", false) && !SharedConfig.proxyList.isEmpty();
+            int currentConnectionState = ConnectionsManager.getInstance(currentAccount).getConnectionState();
+            if (SharedConfig.currentProxy == currentInfo && useProxySettings) {
+                if (currentConnectionState == ConnectionsManager.ConnectionStateConnected || currentConnectionState == ConnectionsManager.ConnectionStateUpdating) {
+                    colorKey = Theme.key_windowBackgroundWhiteBlueText6;
+                    if (currentInfo.ping != 0) {
+                        valueTextView.setText(LocaleController.getString("Connected", R.string.Connected) + ", " + LocaleController.formatString("Ping", R.string.Ping, currentInfo.ping));
+                    } else {
+                        valueTextView.setText(LocaleController.getString("Connected", R.string.Connected));
+                    }
+                    if (!currentInfo.checking && !currentInfo.available) {
+                        currentInfo.availableCheckTime = 0;
+                    }
+                } else {
+                    colorKey = Theme.key_windowBackgroundWhiteGrayText2;
+                    valueTextView.setText(LocaleController.getString("Connecting", R.string.Connecting));
+                }
+            } else {
+                if (currentInfo.checking) {
+                    valueTextView.setText(LocaleController.getString("Checking", R.string.Checking));
+                    colorKey = Theme.key_windowBackgroundWhiteGrayText2;
+                } else if (currentInfo.available) {
+                    if (currentInfo.ping != 0) {
+                        valueTextView.setText(LocaleController.getString("Available", R.string.Available) + ", " + LocaleController.formatString("Ping", R.string.Ping, currentInfo.ping));
+                    } else {
+                        valueTextView.setText(LocaleController.getString("Available", R.string.Available));
+                    }
+                    colorKey = Theme.key_windowBackgroundWhiteGreenText;
+                } else {
+                    valueTextView.setText(LocaleController.getString("Unavailable", R.string.Unavailable));
+                    colorKey = Theme.key_windowBackgroundWhiteRedText4;
+                }
+            }
+            color = Theme.getColor(colorKey);
+            valueTextView.setTag(colorKey);
+            valueTextView.setTextColor(color);
+            if (checkDrawable != null) {
+                checkDrawable.setColorFilter(new PorterDuffColorFilter(color, PorterDuff.Mode.MULTIPLY));
+            }
+        }
+
+        public void setChecked(boolean checked) {
+            if (checked) {
+                if (checkDrawable == null) {
+                    checkDrawable = getResources().getDrawable(R.drawable.proxy_check).mutate();
+                }
+                if (checkDrawable != null) {
+                    checkDrawable.setColorFilter(new PorterDuffColorFilter(color, PorterDuff.Mode.MULTIPLY));
+                }
+                if (LocaleController.isRTL) {
+                    valueTextView.setCompoundDrawablesWithIntrinsicBounds(null, null, checkDrawable, null);
+                } else {
+                    valueTextView.setCompoundDrawablesWithIntrinsicBounds(checkDrawable, null, null, null);
+                }
+            } else {
+                valueTextView.setCompoundDrawablesWithIntrinsicBounds(null, null, null, null);
+            }
+        }
+
+        public void setValue(CharSequence value) {
+            valueTextView.setText(value);
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, Theme.dividerPaint);
+        }
+    }
+
+   static int currentAccount ;
+    public static void showProxyAlert(final Activity activity, final String address, final String port, final String user, final String password, final String secret) {
+        currentAccount = UserConfig.selectedAccount;
+        proxyInfo.secret = secret;
+        proxyInfo.username = user;
+        proxyInfo.port = Integer.valueOf(port);
+        proxyInfo.password = password;
+        proxyInfo.checking = true;
+        final LinearLayout linearLayout = new LinearLayout(activity);
+        final TextDetailProxyCell  textDetailProxyCell = new TextDetailProxyCell(activity);
+        textDetailProxyCell.setProxy(proxyInfo);
+        linearLayout.addView(textDetailProxyCell);
+        textDetailProxyCell.updateStatus();
+        ConnectionsManager.getInstance(currentAccount).checkProxy(address, Integer.valueOf(port), user, password, secret, new RequestTimeDelegate() {
+            @Override
+            public void run(final long time) {
+                AndroidUtilities.runOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        proxyInfo.availableCheckTime = SystemClock.elapsedRealtime();
+                        proxyInfo.checking = false;
+                        if (time == -1) {
+                            proxyInfo.available = false;
+                            proxyInfo.ping = 0;
+                        } else {
+                            proxyInfo.ping = time;
+                            proxyInfo.available = true;
+                        }
+
+
+                        textDetailProxyCell.updateStatus();
+
+                    }
+                });
+            }
+        });
+
+
         BottomSheet.Builder builder = new BottomSheet.Builder(activity);
         final Runnable dismissRunnable = builder.getDismissRunnable();
 
         builder.setApplyTopPadding(false);
         builder.setApplyBottomPadding(false);
-        LinearLayout linearLayout = new LinearLayout(activity);
+
         builder.setCustomView(linearLayout);
         linearLayout.setOrientation(LinearLayout.VERTICAL);
         if (!TextUtils.isEmpty(secret)) {
-            TextView titleTextView = new TextView(activity);
+           TextView titleTextView = new TextView(activity);
             titleTextView.setText(LocaleController.getString("UseProxyTelegramInfo2", R.string.UseProxyTelegramInfo2));
             titleTextView.setTextColor(Theme.getColor(Theme.key_dialogTextGray4));
             titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProxyListActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProxyListActivity.java
index 8b2ddd003..5518b992b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProxyListActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProxyListActivity.java
@@ -436,6 +436,7 @@ private void checkProxyList() {
                 continue;
             }
             proxyInfo.checking = true;
+            // todo mohammad check proxy ping
             proxyInfo.proxyCheckPingId = ConnectionsManager.getInstance(currentAccount).checkProxy(proxyInfo.address, proxyInfo.port, proxyInfo.username, proxyInfo.password, proxyInfo.secret, new RequestTimeDelegate() {
                 @Override
                 public void run(final long time) {
