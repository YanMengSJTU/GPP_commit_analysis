diff --git a/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchViewHolder.java b/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchViewHolder.java
new file mode 100644
index 000000000..721ad2b40
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchViewHolder.java
@@ -0,0 +1,21 @@
+package org.telegram.techrunch;
+
+import android.view.View;
+import android.widget.TextView;
+
+import org.telegram.messenger.support.widget.RecyclerView.ViewHolder;
+import org.telegram.techrunch.domain.Church;
+
+/**
+ * Created by vlad on 5/20/16.
+ */
+public class ChurchViewHolder extends ViewHolder {
+
+    public ChurchViewHolder(final View itemView) {
+        super(itemView);
+    }
+
+    public void bind(final Church church) {
+        ((TextView)itemView).setText(church.getDescription());
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchesAdapter.java b/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchesAdapter.java
new file mode 100644
index 000000000..32ec150e8
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchesAdapter.java
@@ -0,0 +1,42 @@
+package org.telegram.techrunch;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.support.widget.RecyclerView;
+import org.telegram.messenger.support.widget.RecyclerView.ViewHolder;
+import org.telegram.techrunch.domain.Church;
+
+import java.util.List;
+
+/**
+ * Created by vlad on 5/20/16.
+ */
+public class ChurchesAdapter extends RecyclerView.Adapter<ChurchViewHolder> {
+
+    private Context mContext;
+
+    @Override
+    public ChurchViewHolder onCreateViewHolder(final ViewGroup parent, final int viewType) {
+        return new ChurchViewHolder(new TextView(mContext));
+    }
+
+    @Override
+    public void onBindViewHolder(final ChurchViewHolder holder, final int position) {
+        Church church = getChurches().get(position);
+
+        holder.bind(church);
+    }
+
+    @Override
+    public int getItemCount() {
+        return getChurches().size();
+    }
+
+    private List<Church> getChurches() {
+        return ChurchesController.getInstance().churchesList();
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchesController.java b/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchesController.java
new file mode 100644
index 000000000..2ce842bcd
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/techrunch/ChurchesController.java
@@ -0,0 +1,38 @@
+package org.telegram.techrunch;
+
+import org.telegram.techrunch.domain.Church;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by vlad on 5/20/16.
+ */
+public class ChurchesController {
+
+    private static volatile ChurchesController Instance = null;
+
+    private List<Church> mChurchesList = new ArrayList<>();
+
+    public static ChurchesController getInstance() {
+        ChurchesController localInstance = Instance;
+        if (localInstance == null) {
+            synchronized (ChurchesController.class) {
+                localInstance = Instance;
+                if (localInstance == null) {
+                    Instance = localInstance = new ChurchesController();
+                }
+            }
+        }
+        return localInstance;
+    }
+
+    ChurchesController() {
+        mChurchesList.add(new Church("first", "url"));
+        mChurchesList.add(new Church("second", "url"));
+    }
+
+    public List<Church> churchesList() {
+        return mChurchesList;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/techrunch/DialogsActivityHelper.java b/TMessagesProj/src/main/java/org/telegram/techrunch/DialogsActivityHelper.java
new file mode 100644
index 000000000..3c3f68b87
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/techrunch/DialogsActivityHelper.java
@@ -0,0 +1,49 @@
+package org.telegram.techrunch;
+
+import android.content.Context;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.support.annotation.NonNull;
+import android.view.View;
+import android.widget.LinearLayout;
+import android.widget.LinearLayout.LayoutParams;
+import android.widget.TextView;
+
+/**
+ * Created by vlad on 5/20/16.
+ */
+public class DialogsActivityHelper {
+
+    public static View createSelectCityHeader(Context context) {
+        LinearLayout content = new LinearLayout(context);
+        content.setBackgroundColor(Color.RED);
+
+        TextView label = createLabelView(context);
+        TextView city = createCityView(context);
+
+        content.addView(label);
+        content.addView(city);
+
+        return content;
+    }
+
+    @NonNull
+    private static TextView createLabelView(final Context context) {
+        TextView label = new TextView(context);
+        label.setText("Выбор города");
+        label.setTextColor(Color.WHITE);
+        label.setLayoutParams(new LayoutParams(0, LayoutParams.WRAP_CONTENT, 1.0f));
+        return label;
+    }
+
+    @NonNull
+    private static TextView createCityView(final Context context) {
+        TextView city = new TextView(context);
+        TechrunchConfig config = new TechrunchConfig(context);
+        city.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+        city.setText(config.getSelectedCity());
+        city.setPaintFlags(city.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
+        city.setTextColor(Color.WHITE);
+        return city;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/techrunch/domain/Church.java b/TMessagesProj/src/main/java/org/telegram/techrunch/domain/Church.java
new file mode 100644
index 000000000..42472999d
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/techrunch/domain/Church.java
@@ -0,0 +1,19 @@
+package org.telegram.techrunch.domain;
+
+/**
+ * Created by vlad on 5/20/16.
+ */
+public class Church {
+
+    private final String mDescription;
+    private final String mImageUrl;
+
+    public Church(String description, String imageUrl) {
+        mDescription = description;
+        mImageUrl = imageUrl;
+    }
+
+    public String getDescription() {
+        return mDescription;
+    }
+}
