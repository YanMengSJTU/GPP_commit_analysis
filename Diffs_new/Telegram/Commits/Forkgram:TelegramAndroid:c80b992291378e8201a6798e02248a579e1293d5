diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 8c2bc3709..193d83335 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -82,6 +82,8 @@
     private static DispatchQueue mediaSendQueue = new DispatchQueue("mediaSendQueue");
     private static ThreadPoolExecutor mediaSendThreadPool;
 
+    public static boolean IS_EMPTY_CAPTION = false;
+
     static {
         int cores;
         if (Build.VERSION.SDK_INT >= 17) {
@@ -938,11 +940,15 @@ public void processForwardFromMyName(MessageObject messageObject, long did) {
         if (messageObject == null) {
             return;
         }
+        String messageOwnerMessage = messageObject.messageOwner.message;
+        if (SendMessagesHelper.IS_EMPTY_CAPTION) {
+            messageOwnerMessage = "";
+        }
         if (messageObject.messageOwner.media != null && !(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty) && !(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) && !(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame) && !(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice)) {
             if (messageObject.messageOwner.media.photo instanceof TLRPC.TL_photo) {
-                sendMessage((TLRPC.TL_photo) messageObject.messageOwner.media.photo, null, did, messageObject.replyMessageObject, messageObject.messageOwner.message, messageObject.messageOwner.entities, null, null, messageObject.messageOwner.media.ttl_seconds);
+                sendMessage((TLRPC.TL_photo) messageObject.messageOwner.media.photo, null, did, messageObject.replyMessageObject, messageOwnerMessage, messageObject.messageOwner.entities, null, null, messageObject.messageOwner.media.ttl_seconds);
             } else if (messageObject.messageOwner.media.document instanceof TLRPC.TL_document) {
-                sendMessage((TLRPC.TL_document) messageObject.messageOwner.media.document, null, messageObject.messageOwner.attachPath, did, messageObject.replyMessageObject, messageObject.messageOwner.message, messageObject.messageOwner.entities, null, null, messageObject.messageOwner.media.ttl_seconds);
+                sendMessage((TLRPC.TL_document) messageObject.messageOwner.media.document, null, messageObject.messageOwner.attachPath, did, messageObject.replyMessageObject, messageOwnerMessage, messageObject.messageOwner.entities, null, null, messageObject.messageOwner.media.ttl_seconds);
             } else if (messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaVenue || messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGeo) {
                 sendMessage(messageObject.messageOwner.media, did, messageObject.replyMessageObject, null, null);
             } else if (messageObject.messageOwner.media.phone_number != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
index b97f890de..58e6c0e02 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ShareAlert.java
@@ -104,6 +104,10 @@
     private int scrollOffsetY;
     private int topBeforeSwitch;
 
+    private ImageView emptyCaptionButton;
+    private PorterDuffColorFilter emptyCaptionButtonFilter = new PorterDuffColorFilter(0xff51bdf3, PorterDuff.Mode.MULTIPLY);
+    private PorterDuffColorFilter emptyCaptionButtonFilterGrey = new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogIcon), PorterDuff.Mode.MULTIPLY);
+    private boolean heh = false;
 
     public static ShareAlert createShareAlert(final Context context, MessageObject messageObject, final String text, boolean publicChannel, final String copyLink, boolean fullScreen) {
         ArrayList<MessageObject> arrayList;
@@ -242,7 +246,10 @@ public void onClick(View v) {
                             if (frameLayout2.getTag() != null && commentTextView.length() > 0) {
                                 SendMessagesHelper.getInstance(currentAccount).sendMessage(commentTextView.getText().toString(), key, null, null, true, null, null, null);
                             }
-                            SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingMessageObjects, key);
+                            for (MessageObject object : sendingMessageObjects) {
+                                SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(object, key);
+                            }
+                            // SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingMessageObjects, key);
                         }
                     } else if (sendingText != null) {
                         for (int a = 0; a < selectedDialogs.size(); a++) {
@@ -250,6 +257,7 @@ public void onClick(View v) {
                             if (frameLayout2.getTag() != null && commentTextView.length() > 0) {
                                 SendMessagesHelper.getInstance(currentAccount).sendMessage(commentTextView.getText().toString(), key, null, null, true, null, null, null);
                             }
+                            // SendMessagesHelper.getInstance(currentAccount).processForwardFromMyName(sendingText, key, null, null, true, null, null, null);
                             SendMessagesHelper.getInstance(currentAccount).sendMessage(sendingText, key, null, null, true, null, null, null);
                         }
                     }
@@ -280,7 +288,28 @@ public void onClick(View v) {
         imageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogIcon), PorterDuff.Mode.MULTIPLY));
         imageView.setScaleType(ImageView.ScaleType.CENTER);
         imageView.setPadding(0, AndroidUtilities.dp(2), 0, 0);
-        frameLayout.addView(imageView, LayoutHelper.createFrame(48, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
+        frameLayout.addView(imageView, LayoutHelper.createFrame(48 * 2 + 5, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
+
+        ImageView emptyCaptionButton = new ImageView(context);
+        emptyCaptionButton.setImageResource(R.drawable.photo_paint_text);
+        emptyCaptionButton.setColorFilter(emptyCaptionButtonFilterGrey);
+        emptyCaptionButton.setScaleType(ImageView.ScaleType.CENTER);
+        emptyCaptionButton.setPadding(0, AndroidUtilities.dp(2), 0, 0);
+        frameLayout.addView(emptyCaptionButton, LayoutHelper.createFrame(48, 48, Gravity.LEFT | Gravity.CENTER_VERTICAL));
+        SendMessagesHelper.IS_EMPTY_CAPTION = false;
+
+        emptyCaptionButton.setOnClickListener(v -> {
+            SendMessagesHelper.IS_EMPTY_CAPTION = !SendMessagesHelper.IS_EMPTY_CAPTION;
+            boolean p = SendMessagesHelper.IS_EMPTY_CAPTION;
+
+            PorterDuffColorFilter f = emptyCaptionButtonFilterGrey;
+            emptyCaptionButton.setImageResource(R.drawable.photo_paint_text);
+            if (p) {
+                f = emptyCaptionButtonFilter;
+                emptyCaptionButton.setImageResource(R.drawable.ic_ab_empty_text);
+            }
+            emptyCaptionButton.setColorFilter(f);
+        });
 
         nameTextView = new EditTextBoldCursor(context);
         nameTextView.setHint(LocaleController.getString("ShareSendTo", R.string.ShareSendTo));
@@ -296,7 +325,7 @@ public void onClick(View v) {
         nameTextView.setCursorSize(AndroidUtilities.dp(20));
         nameTextView.setCursorWidth(1.5f);
         nameTextView.setTextColor(Theme.getColor(Theme.key_dialogTextBlack));
-        frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 48, 2, 96, 0));
+        frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 60, 2, 96, 0));
         nameTextView.addTextChangedListener(new TextWatcher() {
             @Override
             public void beforeTextChanged(CharSequence s, int start, int count, int after) {
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_ab_empty_text.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_ab_empty_text.png
new file mode 100644
index 000000000..b857155bc
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_ab_empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_ab_empty_text.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_ab_empty_text.png
new file mode 100644
index 000000000..120ab7c24
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_ab_empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_ab_empty_text.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_ab_empty_text.png
new file mode 100644
index 000000000..1b813b78c
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_ab_empty_text.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_ab_empty_text.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_ab_empty_text.png
new file mode 100644
index 000000000..4aa7567dc
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_ab_empty_text.png differ
