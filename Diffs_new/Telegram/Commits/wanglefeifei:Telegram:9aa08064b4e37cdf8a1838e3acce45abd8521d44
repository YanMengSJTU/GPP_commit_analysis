diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 6026b19fa..890bd632b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -13,15 +13,20 @@
 import android.app.Application;
 import android.app.PendingIntent;
 import android.content.BroadcastReceiver;
+import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.content.ServiceConnection;
 import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
 import android.content.res.Configuration;
 import android.os.Handler;
+import android.os.IBinder;
 import android.os.PowerManager;
+import android.os.RemoteException;
 import android.text.TextUtils;
+import android.util.Log;
 
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GooglePlayServicesUtil;
@@ -32,6 +37,13 @@
 import org.telegram.ui.Components.ForegroundDetector;
 
 import java.io.File;
+import java.util.UUID;
+
+import BnetSDK.BNetApplication;
+import BnetSDK.SharePreferenceMain;
+import Service.BnetService;
+import model.BnetServiceJoinParams;
+import network.b.bnet.service.BnetAidlInterface;
 
 public class ApplicationLoader extends Application {
 
@@ -46,6 +58,96 @@
     public static volatile boolean mainInterfacePausedStageQueue = true;
     public static volatile long mainInterfacePausedStageQueueTime;
 
+    public static boolean isChecked = false;
+    private static ServiceConnection serviceConnection;
+    public static boolean serviceBind = false;
+    private BnetAidlInterface bnetAidlInterface;
+    private Intent mIntentConnectorService;
+    private BnetServiceJoinParams bnetServiceJoinParams;
+    private static  ApplicationLoader applicationLoader = null;
+
+    public static ApplicationLoader getInstance() {
+        return applicationLoader;
+    }
+
+    public void StartVpvJoin() {
+        String dWalletAddr = SharePreferenceMain.getSharedPreference(applicationContext.getApplicationContext()).getdWalletAddr();
+        if (dWalletAddr == null) {
+            dWalletAddr = UUID.randomUUID().toString();
+            SharePreferenceMain.getSharedPreference(applicationContext.getApplicationContext()).savedWalletAddr(dWalletAddr);
+        }
+        BnetServiceJoin(null, dWalletAddr, "", 32);
+    }
+    public void DestoryBnetService() {
+        isChecked = false;
+        if (serviceConnection != null && serviceBind) {
+            Log.d("wanglf", "DestoryBnetService:   unbindsercice ");
+            unbindService(serviceConnection);
+            serviceBind = false;
+        }
+        if (bnetAidlInterface != null) {
+            try {
+                bnetAidlInterface.leave();
+                stopService(mIntentConnectorService);
+                bnetAidlInterface = null;
+            } catch (RemoteException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    private void startAndBindService() {
+        Intent bnetService = new Intent(applicationContext, BnetService.class);
+        startService(bnetService);
+
+
+        serviceConnection = new ServiceConnection() {
+            @Override
+            public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
+                Log.d("wanglf", "onServiceConnected:..... ");
+                bnetAidlInterface = BnetAidlInterface.Stub.asInterface(iBinder);
+                isChecked = true;
+                serviceBind = true;
+                StartBnetServiceJoin();
+            }
+
+            @Override
+            public void onServiceDisconnected(ComponentName componentName) {
+            }
+        };
+        mIntentConnectorService = new Intent(applicationContext,BnetService.class);
+        bindService(mIntentConnectorService, serviceConnection, BIND_AUTO_CREATE);
+    }
+
+    public void BnetServiceJoin(String nWalletAddr, String dWalletAddr, String deviceAddr, int maskBit) {
+        bnetServiceJoinParams = new BnetServiceJoinParams(nWalletAddr, dWalletAddr, deviceAddr, maskBit);
+        if (bnetAidlInterface == null || !serviceBind) {
+            startAndBindService();
+        } else {
+            StartBnetServiceJoin();
+        }
+    }
+
+    private void StartBnetServiceJoin() {
+        if (bnetServiceJoinParams != null && bnetAidlInterface != null) {
+            new Thread(new Runnable() {
+                @Override
+                public void run() {
+                    try {
+                        bnetAidlInterface.join(bnetServiceJoinParams.getnWalletAddr(), bnetServiceJoinParams.getdWalletAddr(), bnetServiceJoinParams.getDeviceAddr(), bnetServiceJoinParams.getMaskBit());
+                    } catch (RemoteException e) {
+                        e.printStackTrace();
+                    }
+                }
+            }).start();
+
+            try {
+                bnetAidlInterface.CStartService();
+            } catch (RemoteException e) {
+                e.printStackTrace();
+            }
+        }
+    }
     public static File getFilesDirFixed() {
         for (int a = 0; a < 10; a++) {
             File path = ApplicationLoader.applicationContext.getFilesDir();
@@ -127,7 +229,7 @@ public static void postInitApplication() {
     @Override
     public void onCreate() {
         super.onCreate();
-
+        applicationLoader = this;
         applicationContext = getApplicationContext();
         NativeLoader.initNativeLibs(ApplicationLoader.applicationContext);
         ConnectionsManager.native_setJava(false);
