diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
index 80809f51f..2b28c46bc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAttachAlert.java
@@ -223,7 +223,6 @@
     private TextView tooltipTextView;
     private ImageView switchCameraButton;
     private boolean takingPhoto;
-    private boolean mediaCaptured;
     private static boolean mediaFromExternalCamera;
     private static ArrayList<Object> cameraPhotos = new ArrayList<>();
     private static HashMap<Object, Object> selectedPhotos = new HashMap<>();
@@ -1589,7 +1588,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
 
             @Override
             public boolean shutterLongPressed() {
-                if (!(baseFragment instanceof ChatActivity) || mediaCaptured || takingPhoto || baseFragment == null || baseFragment.getParentActivity() == null || cameraView == null) {
+                if (!(baseFragment instanceof ChatActivity) || takingPhoto || baseFragment == null || baseFragment.getParentActivity() == null || cameraView == null) {
                     return false;
                 }
                 if (Build.VERSION.SDK_INT >= 23) {
@@ -1633,9 +1632,6 @@ public boolean shutterLongPressed() {
 
             @Override
             public void shutterCancel() {
-                if (mediaCaptured) {
-                    return;
-                }
                 if (outputFile != null) {
                     outputFile.delete();
                     outputFile = null;
@@ -1646,10 +1642,9 @@ public void shutterCancel() {
 
             @Override
             public void shutterReleased() {
-                if (takingPhoto || cameraView == null || mediaCaptured || cameraView.getCameraSession() == null) {
+                if (takingPhoto || cameraView == null || cameraView.getCameraSession() == null) {
                     return;
                 }
-                mediaCaptured = true;
                 if (shutterButton.getState() == ShutterButton.State.RECORDING) {
                     resetRecordState();
                     CameraController.getInstance().stopVideoRecording(cameraView.getCameraSession(), false);
@@ -2069,7 +2064,6 @@ private void openPhotoViewer(MediaController.PhotoEntry entry, final boolean sam
                 cameraView.setZoom(0.0f);
                 CameraController.getInstance().startPreview(cameraView.getCameraSession());
             }
-            mediaCaptured = false;
             return;
         }
         if (cameraPhotos.isEmpty()) {
@@ -2184,7 +2178,6 @@ public boolean scaleToFill() {
 
             @Override
             public void willHidePhotoViewer() {
-                mediaCaptured = false;
                 int count = gridView.getChildCount();
                 for (int a = 0; a < count; a++) {
                     View view = gridView.getChildAt(a);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 1b20520a1..ebd60bbd2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -8655,11 +8655,11 @@ public void updateMuteButton() {
         if (!videoConvertSupported) {
             muteItem.setEnabled(false);
             muteItem.setClickable(false);
-            muteItem.setAlpha(0.5f);
+            muteItem.animate().alpha(0.5f).setDuration(180).start();
         } else {
             muteItem.setEnabled(true);
             muteItem.setClickable(true);
-            muteItem.setAlpha(1.0f);
+            muteItem.animate().alpha(1f).setDuration(180).start();
             if (muteVideo) {
                 actionBar.setSubtitle(null);
                 muteItem.setImageResource(R.drawable.volume_off);
@@ -8837,7 +8837,6 @@ private void updateWidthHeightBitrateForCompression() {
                 maxSize = 854.0f;
                 break;
             case 2:
-                //720
                 maxSize = 1280.0f;
                 break;
             case 3:
@@ -8849,8 +8848,11 @@ private void updateWidthHeightBitrateForCompression() {
         resultWidth = Math.round(originalWidth * scale / 2) * 2;
         resultHeight = Math.round(originalHeight * scale / 2) * 2;
         if (bitrate != 0) {
-            int b = MediaController.makeVideoBitrate(originalHeight, originalWidth, originalBitrate, resultHeight, resultWidth);
-            bitrate = b;
+            if (selectedCompression == compressionsCount - 1) {
+                bitrate = originalBitrate;
+            } else {
+                bitrate = MediaController.makeVideoBitrate(originalHeight, originalWidth, originalBitrate, resultHeight, resultWidth);
+            }
             videoFramesSize = (long) (bitrate / 8 * videoDuration / 1000);
         }
     }
@@ -8958,7 +8960,8 @@ private void processOpenVideo(final String videoPath, boolean muted, float start
         }
         videoTimelineView.setVideoPath(videoPath, start, end);
         videoPreviewMessageObject = null;
-        setCompressItemEnabled(false, true);
+        compressItem.setEnabled(false);
+        compressItem.setClickable(false);
         muteVideo = muted;
         Object object = imagesArrLocals.get(currentIndex);
         if (object instanceof MediaController.PhotoEntry) {
@@ -9055,6 +9058,7 @@ public void run() {
                         }
                         qualityChooseView.invalidate();
                     } else {
+                        setCompressItemEnabled(false, true);
                         compressionsCount = 0;
                     }
 
