diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index f2afed43f..7a85d8138 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -58,6 +58,7 @@
     private Venue lastVenue;
 
     private List<Post> posts = new ArrayList<>();
+    private int nextOffset;
     public ConcurrentHashMap<String, Post> postsMap = new ConcurrentHashMap<>(100, 1.0f, 2);
 
     private boolean loadingPosts = false;
@@ -218,6 +219,9 @@ public void loadPosts(final String idOffset, final int offset, final int count,
 //            return;
 //        }
         loadingPosts = true;
+        if (offset == 0) {
+            nextOffset = offset;
+        }
         Location location = LocationManagerHelper.getInstance().getLocation4TimeLine();
         if (location == null) {
             loadingPosts = false; // TODO
@@ -232,6 +236,7 @@ public void loadPosts(final String idOffset, final int offset, final int count,
         postRequest.setOffset(offset);
         postRequest.setDistance(Constants.RADIUS);
         if (offlineMode) {
+            nextOffset = 0;
             loadLocalPosts(postRequest, reload);
         } else {
 //            loadPostFromServer(postRequest, reload);
@@ -293,6 +298,7 @@ private void loadLocalPosts(final PostRequest postRequest, final boolean reload)
 
 
     private void loadPostFromServer(final PostRequest postRequest, final boolean reload) {
+        nextOffset = 0;
         RestManager.getInstance().findNearPosts(postRequest, new Callback<PostResponse>() {
             @Override
             public void onResponse(Response<PostResponse> response, Retrofit retrofit) {
@@ -322,6 +328,7 @@ public void onResponse(Response<VKPhotoResponse> response, Retrofit retrofit) {
                 }
 
                 postResponse.setSource("VK");
+                nextOffset = postRequest.getOffset() + postRequest.getCount();
                 processLoadedPosts(postResponse, reload);
             }
 
@@ -427,6 +434,13 @@ public void setLastVenue(Venue lastVenue) {
         return posts;
     }
 
+    public int getOffset() {
+        if (nextOffset > 0) {
+            return nextOffset;
+        }
+        return posts.size();
+    }
+
     public Post createPost(String dir, String photo, double latitude, double longitude, Date date) {
         Post post = new Post();
         post.setId(photo);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index 050dec05d..b8e8284b3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -659,7 +659,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     if (layoutManager.findLastVisibleItemPosition() == PostsController.getInstance().getPosts().size() - 1 && !mIsScrollingUp && !PostsController.getInstance().getPosts().isEmpty()) {
                         String offset = PostsController.getInstance().getPosts().get(PostsController.getInstance().getPosts().size() - 1).getId(); // TODO When empty list. java.lang.ArrayIndexOutOfBoundsException: length=12; index=-1
                         startRefreshingProgressView();
-                        PostsController.getInstance().loadPosts(offset, PostsController.getInstance().getPosts().size(), Constants.POST_COUNT, false, offlineMode);
+                        PostsController.getInstance().loadPosts(offset, PostsController.getInstance().getOffset(), Constants.POST_COUNT, false, offlineMode);
                     }
                 }
 
