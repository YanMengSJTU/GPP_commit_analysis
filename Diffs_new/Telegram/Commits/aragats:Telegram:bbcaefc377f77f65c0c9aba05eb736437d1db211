diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index dbee74011..17eb4b9b0 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -1,6 +1,8 @@
 package org.telegram.android.location;
 
 import android.content.Context;
+import android.location.Address;
+import android.location.Geocoder;
 import android.location.Location;
 import android.location.LocationListener;
 import android.location.LocationManager;
@@ -8,7 +10,9 @@
 
 import ru.aragats.wgo.ApplicationLoader;
 
+import java.io.IOException;
 import java.util.List;
+import java.util.Locale;
 
 /**
  * Created by aragats on 15/09/15.
@@ -92,4 +96,44 @@ public Location getLastLocation() {
     public Location getLastSavedLocation() {
         return lastSavedLocation;
     }
+
+
+    public String getAddress(Context context, double longitude, double latitude) {
+        Geocoder geocoder;
+        List<Address> addresses;
+//        geocoder = new Geocoder(context, Locale.getDefault()); //TODO de ?? should be english ? or ?? in real time. Save in ENG, but display in locale in real-time
+        geocoder = new Geocoder(context, Locale.ENGLISH); //TODO de ?? should be english ? or ?? in real time. Save in ENG, but display in locale in real-time
+        try {
+            addresses = geocoder.getFromLocation(latitude, longitude, 1); // Here 1 represent max location result to returned, by documents it recommended 1 to 5
+            String address = addresses.get(0).getAddressLine(0); // If any additional address line present than only, check with max available address lines by getMaxAddressLineIndex()
+            String city = addresses.get(0).getLocality();
+            String state = addresses.get(0).getAdminArea();
+            String country = addresses.get(0).getCountryName();
+            String postalCode = addresses.get(0).getPostalCode();
+            String knownName = addresses.get(0).getFeatureName(); // Only if available else return NULL
+            return address;
+        } catch (IOException e) {
+//            e.printStackTrace();
+            //TODO logger
+            return "";
+        }
+    }
+
+    public String getAddress(Geocoder geocoder, double longitude, double latitude) {
+        List<Address> addresses;
+        try {
+            addresses = geocoder.getFromLocation(latitude, longitude, 1); // Here 1 represent max location result to returned, by documents it recommended 1 to 5
+            String address = addresses.get(0).getAddressLine(0); // If any additional address line present than only, check with max available address lines by getMaxAddressLineIndex()
+//            String city = addresses.get(0).getLocality();
+//            String state = addresses.get(0).getAdminArea();
+//            String country = addresses.get(0).getCountryName();
+//            String postalCode = addresses.get(0).getPostalCode();
+//            String knownName = addresses.get(0).getFeatureName(); // Only if available else return NULL
+            return address;
+        } catch (IOException e) {
+//            e.printStackTrace();
+            //TODO logger
+            return "";
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 3d6ef4cf0..3c744b7a5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -53,6 +53,7 @@
 import org.telegram.android.LocaleController;
 import org.telegram.android.MediaController;
 import org.telegram.android.NotificationCenter;
+
 import ru.aragats.wgo.ApplicationLoader;
 import ru.aragats.wgo.R;
 
@@ -61,7 +62,9 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
 import org.telegram.messenger.Utilities;
+
 import ru.aragats.wgo.rest.dto.Post;
+
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -1659,8 +1662,9 @@ private void setImageIndex(int index, boolean init) {
             }
             currentPost = imagesPostArr.get(currentIndex);
 
-            //TODO name of venue (user) !!!
-            nameTextView.setText(currentPost.getVenue().getName());
+            //TODO name of venue (user) !!! TODO getName() Null
+//            nameTextView.setText(currentPost.getVenue().getName());
+            nameTextView.setText(currentPost.getVenue() != null ? currentPost.getVenue().getName() : "");
             long date = currentPost.getCreatedDate();
             String dateString = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(new Date(date)), LocaleController.formatterDay.format(new Date(date)));
             dateTextView.setText(dateString);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 79d8a75cb..c21bd4ce1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -1418,26 +1418,8 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
                 venue.setName(location.title);
                 venue.setAddress(location.address);
                 if (StringUtils.isEmpty(venue.getAddress())) {
-                    venue.setAddress(location.geo._long + ", " + location.geo.lat); // TODO better to find concrete address. Google service.
-// TODO temp
-                    Geocoder geocoder;
-                    List<Address> addresses;
-                    geocoder = new Geocoder(getParentActivity(), Locale.getDefault()); //TODO de ?? should be english ? or ?? in real time. Save in ENG, but display in locale in real-time
-
-                    try {
-                        addresses = geocoder.getFromLocation(location.geo.lat, location.geo._long, 1); // Here 1 represent max location result to returned, by documents it recommended 1 to 5
-                        String address = addresses.get(0).getAddressLine(0); // If any additional address line present than only, check with max available address lines by getMaxAddressLineIndex()
-                        String city = addresses.get(0).getLocality();
-                        String state = addresses.get(0).getAdminArea();
-                        String country = addresses.get(0).getCountryName();
-                        String postalCode = addresses.get(0).getPostalCode();
-                        String knownName = addresses.get(0).getFeatureName(); // Only if available else return NULL
-                        venue.setAddress(address);
-                    } catch (IOException e) {
-                        e.printStackTrace();
-                    }
-
-///
+                    String address = LocationManagerHelper.getInstance().getAddress(getParentActivity(), location.geo._long, location.geo.lat);
+                    venue.setAddress(address);
                 }
                 PostCreateActivity.this.venue = venue;
 
