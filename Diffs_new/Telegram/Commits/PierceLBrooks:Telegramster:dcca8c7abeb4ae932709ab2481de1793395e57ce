diff --git a/Telegram/TMessagesProj/jni/gifvideo.cpp b/Telegram/TMessagesProj/jni/gifvideo.cpp
index 8f1e1d836..f2d8e79bd 100644
--- a/Telegram/TMessagesProj/jni/gifvideo.cpp
+++ b/Telegram/TMessagesProj/jni/gifvideo.cpp
@@ -11,6 +11,7 @@
 #include "tgnet/ConnectionsManager.h"
 #include "c_utils.h"
 #include "Logger.h"
+#include "image.h"
 
 extern "C" {
 #include <libavformat/avformat.h>
@@ -582,17 +583,21 @@ jint Java_org_telegramster_ui_Components_AnimatedFileDrawable_getVideoFrame(JNIE
 }
 
 jint videoOnJNILoad(JavaVM *vm, JNIEnv *env) {
-    jclass_AnimatedFileDrawableStream = (jclass) env->NewGlobalRef(env->FindClass("org/telegramster/messenger/AnimatedFileDrawableStream"));
+    if (imageOnJNILoad(vm, env, &jclass_AnimatedFileDrawableStream, &jclass_AnimatedFileDrawableStream_read, &jclass_AnimatedFileDrawableStream_cancel) != JNI_TRUE) {
+        logIt("imageOnJNILoad");
+        return JNI_FALSE;
+    }
+    //jclass_AnimatedFileDrawableStream = (jclass) env->NewGlobalRef(env->FindClass("org/telegramster/messenger/AnimatedFileDrawableStream"));
     if (jclass_AnimatedFileDrawableStream == 0) {
         logIt("jclass_AnimatedFileDrawableStream");
         return JNI_FALSE;
     }
-    jclass_AnimatedFileDrawableStream_read = env->GetMethodID(jclass_AnimatedFileDrawableStream, "read", "(II)I");
+    //jclass_AnimatedFileDrawableStream_read = env->GetMethodID(jclass_AnimatedFileDrawableStream, "read", "(II)I");
     if (jclass_AnimatedFileDrawableStream_read == 0) {
         logIt("jclass_AnimatedFileDrawableStream_read");
         return JNI_FALSE;
     }
-    jclass_AnimatedFileDrawableStream_cancel = env->GetMethodID(jclass_AnimatedFileDrawableStream, "cancel", "()V");
+    //jclass_AnimatedFileDrawableStream_cancel = env->GetMethodID(jclass_AnimatedFileDrawableStream, "cancel", "()V");
     if (jclass_AnimatedFileDrawableStream_cancel == 0) {
         logIt("jclass_AnimatedFileDrawableStream_cancel");
         return JNI_FALSE;
diff --git a/Telegram/TMessagesProj/jni/image.c b/Telegram/TMessagesProj/jni/image.c
index ec075978a..229ad6996 100644
--- a/Telegram/TMessagesProj/jni/image.c
+++ b/Telegram/TMessagesProj/jni/image.c
@@ -9,6 +9,7 @@
 #include <libwebp/webp/encode.h>
 #include "c_utils.h"
 #include "image.h"
+#include "Logger.h"
 
 jclass jclass_NullPointerException;
 jclass jclass_RuntimeException;
@@ -28,30 +29,52 @@ jclass createGlobarRef(JNIEnv *env, jclass class) {
     return 0;
 }
 
-jint imageOnJNILoad(JavaVM *vm, JNIEnv *env) {
+jint imageOnJNILoad(JavaVM *vm, JNIEnv *env, jclass *jclass_AnimatedFileDrawableStream, jmethodID *jclass_AnimatedFileDrawableStream_read, jmethodID *jclass_AnimatedFileDrawableStream_cancel) {
     jclass_NullPointerException = createGlobarRef(env, (*env)->FindClass(env, "java/lang/NullPointerException"));
     if (jclass_NullPointerException == 0) {
+        logIt("jclass_NullPointerException");
         return JNI_FALSE;
     }
     jclass_RuntimeException = createGlobarRef(env, (*env)->FindClass(env, "java/lang/RuntimeException"));
     if (jclass_RuntimeException == 0) {
+        logIt("jclass_RuntimeException");
         return JNI_FALSE;
     }
     
     jclass_Options = createGlobarRef(env, (*env)->FindClass(env, "android/graphics/BitmapFactory$Options"));
     if (jclass_Options == 0) {
+        logIt("jclass_Options");
         return JNI_FALSE;
     }
     jclass_Options_inJustDecodeBounds = (*env)->GetFieldID(env, jclass_Options, "inJustDecodeBounds", "Z");
     if (jclass_Options_inJustDecodeBounds == 0) {
+        logIt("jclass_Options_inJustDecodeBounds");
         return JNI_FALSE;
     }
     jclass_Options_outHeight = (*env)->GetFieldID(env, jclass_Options, "outHeight", "I");
     if (jclass_Options_outHeight == 0) {
+        logIt("jclass_Options_outHeight");
         return JNI_FALSE;
     }
     jclass_Options_outWidth = (*env)->GetFieldID(env, jclass_Options, "outWidth", "I");
     if (jclass_Options_outWidth == 0) {
+        logIt("jclass_Options_outWidth");
+        return JNI_FALSE;
+    }
+
+    *jclass_AnimatedFileDrawableStream = createGlobarRef(env, (*env)->FindClass(env, "org/telegramster/messenger/AnimatedFileDrawableStream"));
+    if (*jclass_AnimatedFileDrawableStream == 0) {
+        logIt("jclass_AnimatedFileDrawableStream");
+        return JNI_FALSE;
+    }
+    *jclass_AnimatedFileDrawableStream_read = (*env)->GetMethodID(env, *jclass_AnimatedFileDrawableStream, "read", "(II)I");
+    if (*jclass_AnimatedFileDrawableStream_read == 0) {
+        logIt("jclass_AnimatedFileDrawableStream_read");
+        return JNI_FALSE;
+    }
+    *jclass_AnimatedFileDrawableStream_cancel = (*env)->GetMethodID(env, *jclass_AnimatedFileDrawableStream, "cancel", "()V");
+    if (*jclass_AnimatedFileDrawableStream_cancel == 0) {
+        logIt("jclass_AnimatedFileDrawableStream_cancel");
         return JNI_FALSE;
     }
     
diff --git a/Telegram/TMessagesProj/jni/image.h b/Telegram/TMessagesProj/jni/image.h
index ebe736c32..b903f528e 100644
--- a/Telegram/TMessagesProj/jni/image.h
+++ b/Telegram/TMessagesProj/jni/image.h
@@ -3,6 +3,10 @@
 
 #include <jni.h>
 
-jint imageOnJNILoad(JavaVM *vm, JNIEnv *env);
+#ifdef __cplusplus
+extern "C" jint imageOnJNILoad(JavaVM *vm, JNIEnv *env, jclass *jclass_AnimatedFileDrawableStream, jmethodID *jclass_AnimatedFileDrawableStream_read, jmethodID *jclass_AnimatedFileDrawableStream_cancel);
+#else
+extern jint imageOnJNILoad(JavaVM *vm, JNIEnv *env, jclass *jclass_AnimatedFileDrawableStream, jmethodID *jclass_AnimatedFileDrawableStream_read, jmethodID *jclass_AnimatedFileDrawableStream_cancel);
+#endif
 
 #endif
diff --git a/Telegram/TMessagesProj/jni/jni.c b/Telegram/TMessagesProj/jni/jni.c
index cf76a1c1d..100f4162a 100644
--- a/Telegram/TMessagesProj/jni/jni.c
+++ b/Telegram/TMessagesProj/jni/jni.c
@@ -27,11 +27,6 @@ jint JNI_OnLoad(JavaVM *vm, void *reserved) {
         return -1;
     }
 
-    if (imageOnJNILoad(vm, env) != JNI_TRUE) {
-        logIt("imageOnJNILoad");
-        return -1;
-    }
-
     if (videoOnJNILoad(vm, env) != JNI_TRUE) {
         logIt("videoOnJNILoad");
         return -1;
diff --git a/Telegram/TMessagesProj/proguard-rules.pro b/Telegram/TMessagesProj/proguard-rules.pro
index 5a196c38f..a11817c2c 100644
--- a/Telegram/TMessagesProj/proguard-rules.pro
+++ b/Telegram/TMessagesProj/proguard-rules.pro
@@ -3,14 +3,14 @@
 -keepclassmembernames class * {
     @com.google.android.gms.common.annotation.KeepName *;
 }
--keep class org.telegram.** { *; }
+-keep class org.telegramster.** { *; }
 #-keep class com.google.android.exoplayer2.** { *; }
 -keep class com.google.android.exoplayer2.ext.** { *; }
 -keep class com.google.android.exoplayer2.util.** { *; }
 -keep class com.coremedia.** { *; }
 -keep class com.googlecode.mp4parser.** { *; }
 -dontwarn com.coremedia.**
--dontwarn org.telegram.**
+-dontwarn org.telegramster.**
 -dontwarn com.google.android.exoplayer2.ext.**
 -dontwarn com.google.android.exoplayer2.util.**
 -dontwarn com.google.android.gms.**
