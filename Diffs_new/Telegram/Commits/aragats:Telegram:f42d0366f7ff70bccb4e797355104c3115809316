diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index a78d2534a..28a7a78dd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -1604,7 +1604,7 @@ private void onPhotoShowNew(final Post post, int index, final PlaceProviderObjec
         if (post != null) {
             imagesPostArr.add(post);
             menuItem.hideSubItem(gallery_menu_showall);
-            setImageIndexPostNew(0, true);
+            setImageIndex(0, true);
         }
 
     }
@@ -1714,6 +1714,7 @@ private void setImages() {
         }
     }
 
+    //TODO-aragats new
     private void setImageIndex(int index, boolean init) {
         if (currentIndex == index) {
             return;
@@ -1730,7 +1731,33 @@ private void setImageIndex(int index, boolean init) {
 
         boolean sameImage = false;
 
-        if (!imagesArrLocals.isEmpty()) {
+        if (!imagesPostArr.isEmpty()) {
+            if (currentIndex < 0 || currentIndex >= imagesPostArr.size()) {
+                closePhoto(false, false);
+                return;
+            }
+            currentPost = imagesPostArr.get(currentIndex);
+
+            //TODO name of venue (user) !!!
+            nameTextView.setText(currentPost.getVenue().getName());
+            long date = currentPost.getCreatedDate();
+            String dateString = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(new Date(date)), LocaleController.formatterDay.format(new Date(date)));
+            dateTextView.setText(dateString);
+
+            CharSequence caption = currentPost.getMessage();
+            setCurrentCaption(caption);
+
+            //TODO  It is title 1 of 1
+            if (totalImagesCount != 0 && !needSearchImageInArr) {
+                actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, (totalImagesCount - imagesPostArr.size()) + currentIndex + 1, totalImagesCount));
+            }
+
+            menuItem.hideSubItem(gallery_menu_delete);
+            menuItem.showSubItem(gallery_menu_save);
+//            shareButton.setVisibility(View.GONE);
+            shareButton.setVisibility(View.VISIBLE);
+
+        } else if (!imagesArrLocals.isEmpty()) {
             Object object = imagesArrLocals.get(index);
             if (index < 0 || index >= imagesArrLocals.size()) {
                 closePhoto(false, false);
@@ -1759,145 +1786,6 @@ private void setImageIndex(int index, boolean init) {
             updateCaptionTextForCurrentPhoto(object);
         }
 
-
-        if (currentPlaceObject != null) {
-            if (animationInProgress == 0) {
-                currentPlaceObject.imageReceiver.setVisible(true, true);
-            } else {
-                showAfterAnimation = currentPlaceObject;
-            }
-        }
-        currentPlaceObject = placeProvider.getPlaceForPhoto(currentPost, currentIndex);
-        if (currentPlaceObject != null) {
-            if (animationInProgress == 0) {
-                currentPlaceObject.imageReceiver.setVisible(false, true);
-            } else {
-                hideAfterAnimation = currentPlaceObject;
-            }
-        }
-
-        if (!sameImage) {
-            draggingDown = false;
-            translationX = 0;
-            translationY = 0;
-            scale = 1;
-            animateToX = 0;
-            animateToY = 0;
-            animateToScale = 1;
-            animationStartTime = 0;
-            imageMoveAnimation = null;
-            changeModeAnimation = null;
-
-            pinchStartDistance = 0;
-            pinchStartScale = 1;
-            pinchCenterX = 0;
-            pinchCenterY = 0;
-            pinchStartX = 0;
-            pinchStartY = 0;
-            moveStartX = 0;
-            moveStartY = 0;
-            zooming = false;
-            moving = false;
-            doubleTap = false;
-            invalidCoords = false;
-            canDragDown = true;
-            changingPage = false;
-            switchImageAfterAnimation = 0;
-            canZoom = !imagesArrLocals.isEmpty() || (currentFileNames[0] != null && !currentFileNames[0].endsWith("mp4") && radialProgressViews[0].backgroundState != 0);
-            updateMinMax(scale);
-        }
-
-        if (prevIndex == -1) {
-            setImages();
-
-            for (int a = 0; a < 3; a++) {
-                checkProgress(a, false);
-            }
-        } else {
-            checkProgress(0, false);
-            if (prevIndex > currentIndex) {
-                ImageReceiver temp = rightImage;
-                rightImage = centerImage;
-                centerImage = leftImage;
-                leftImage = temp;
-
-                RadialProgressView tempProgress = radialProgressViews[0];
-                radialProgressViews[0] = radialProgressViews[2];
-                radialProgressViews[2] = tempProgress;
-                setIndexToImage(leftImage, currentIndex - 1);
-
-                checkProgress(1, false);
-                checkProgress(2, false);
-            } else if (prevIndex < currentIndex) {
-                ImageReceiver temp = leftImage;
-                leftImage = centerImage;
-                centerImage = rightImage;
-                rightImage = temp;
-
-                RadialProgressView tempProgress = radialProgressViews[0];
-                radialProgressViews[0] = radialProgressViews[1];
-                radialProgressViews[1] = tempProgress;
-                setIndexToImage(rightImage, currentIndex + 1);
-
-                checkProgress(1, false);
-                checkProgress(2, false);
-            }
-        }
-
-    }
-
-
-    //TODO-aragats new
-    private void setImageIndexPostNew(int index, boolean init) {
-        if (currentIndex == index) {
-            return;
-        }
-        if (!init) {
-            currentThumb = null;
-        }
-        currentFileNames[0] = getFileName(index);
-        currentFileNames[1] = getFileName(index + 1);
-        currentFileNames[2] = getFileName(index - 1);
-        placeProvider.willSwitchFromPhoto(currentIndex);
-        int prevIndex = currentIndex;
-        currentIndex = index;
-
-        boolean sameImage = false;
-
-        if (!imagesPostArr.isEmpty()) {
-            if (currentIndex < 0 || currentIndex >= imagesPostArr.size()) {
-                closePhoto(false, false);
-                return;
-            }
-            currentPost = imagesPostArr.get(currentIndex);
-
-            //TODO name of venue (user) !!!
-            nameTextView.setText(currentPost.getVenue().getName());
-            long date = currentPost.getCreatedDate();
-            String dateString = LocaleController.formatString("formatDateAtTime", R.string.formatDateAtTime, LocaleController.formatterYear.format(new Date(date)), LocaleController.formatterDay.format(new Date(date)));
-            dateTextView.setText(dateString);
-
-            CharSequence caption = currentPost.getMessage();
-            setCurrentCaption(caption);
-
-            //TODO  It is title 1 of 1
-            if (totalImagesCount != 0 && !needSearchImageInArr) {
-                actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, (totalImagesCount - imagesPostArr.size()) + currentIndex + 1, totalImagesCount));
-            }
-
-//            if (currentMessageObject.messageOwner.ttl != 0) {
-//                menuItem.hideSubItem(gallery_menu_save);
-//                shareButton.setVisibility(View.GONE);
-//            } else {
-//                menuItem.showSubItem(gallery_menu_save);
-//                shareButton.setVisibility(View.VISIBLE);
-//            }
-            menuItem.hideSubItem(gallery_menu_delete);
-            menuItem.showSubItem(gallery_menu_save);
-//            shareButton.setVisibility(View.GONE);
-            shareButton.setVisibility(View.VISIBLE);
-        }
-
         if (currentPlaceObject != null) {
             if (animationInProgress == 0) {
                 currentPlaceObject.imageReceiver.setVisible(true, true);
@@ -1982,8 +1870,6 @@ private void setImageIndexPostNew(int index, boolean init) {
                 checkProgress(2, false);
             }
         }
-
-//        createGifForCurrentImage();
     }
 
 
